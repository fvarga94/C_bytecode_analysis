sq_dequote_step	FOR,1:ELSE,0:SWITCH,1:DO,1:WHILE,0:IF,6:CALL,3:functions,0	59
0x4000040	          0x803f27	                    cmp byte [rdi], 0x27	       103	quote.c	FUNCTION_7	IF_1
0x4000043	            0x7530	                           jne 0x4000075	       103	quote.c	FUNCTION_7	IF_1
0x4000045	          0x4889fa	                            mov rdx, rdi	       103	quote.c	FUNCTION_7	IF_1
0x4000048	        0x4c8d4701	                       lea r8, [rdi + 1]	       103	quote.c	FUNCTION_7	IF_1
0x400004c	         0xfb64a01	               movzx ecx, byte [rdx + 1]	       106	quote.c	FUNCTION_7	FOR_1
0x4000050	        0x498d40ff	                       lea rax, [r8 - 1]	       106	quote.c	FUNCTION_7	FOR_1
0x4000054	            0x84c9	                             test cl, cl	       107	quote.c	FUNCTION_7	FOR_1	IF_2
0x4000056	            0x741d	                            je 0x4000075	       107	quote.c	FUNCTION_7	FOR_1	IF_2
0x4000058	          0x80f927	                            cmp cl, 0x27	       109	quote.c	FUNCTION_7	FOR_1	IF_3
0x400005b	            0x7423	                            je 0x4000080	       109	quote.c	FUNCTION_7	FOR_1	IF_3
0x400005d	        0x4883c201	                              add rdx, 1	       106	quote.c	FUNCTION_7	FOR_1
0x4000061	        0x418848ff	                   mov byte [r8 - 1], cl	       110	quote.c	FUNCTION_7	FOR_1	IF_3
0x4000065	         0xfb64a01	               movzx ecx, byte [rdx + 1]	       106	quote.c	FUNCTION_7	FOR_1
0x4000069	        0x4983c001	                               add r8, 1	       106	quote.c	FUNCTION_7	FOR_1
0x400006d	        0x498d40ff	                       lea rax, [r8 - 1]	       106	quote.c	FUNCTION_7	FOR_1
0x4000071	            0x84c9	                             test cl, cl	       107	quote.c	FUNCTION_7	FOR_1	IF_2
0x4000073	            0x75e3	                           jne 0x4000058	       107	quote.c	FUNCTION_7	FOR_1	IF_2
0x4000075	            0x31c0	                            xor eax, eax	       104	quote.c	FUNCTION_7	IF_1
0x4000077	              0xc3	                                     ret	       104	quote.c	FUNCTION_7	IF_1
0x4000078	     0xf1f84000000	                   nop dword [rax + rax]	       104	quote.c	FUNCTION_7	IF_1
0x4000080	         0xfb64a02	               movzx ecx, byte [rdx + 2]	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000084	            0x84c9	                             test cl, cl	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000086	            0x7460	                            je 0x40000e8	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000088	          0x80f95c	                            cmp cl, 0x5c	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x400008b	            0x7433	                            je 0x40000c0	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x400008d	          0x4885f6	                           test rsi, rsi	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6	CALL_2
0x4000090	            0x74e3	                            je 0x4000075	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6	CALL_2
0x4000092	    0xf68100000000	                      test byte [rcx], 1	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6	CALL_2
0x4000099	            0x74da	                            je 0x4000075	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6	CALL_2
0x400009b	        0x4883c202	                              add rdx, 2	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x400009f	              0x90	                                     nop	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x40000a0	        0x4883c201	                              add rdx, 1	       137	quote.c	FUNCTION_7	FOR_1	SWITCH_1	DO_1
0x40000a4	           0xfb60a	                   movzx ecx, byte [rdx]	       138	quote.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_3
0x40000a7	    0xf68100000000	                      test byte [rcx], 1	       138	quote.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_3
0x40000ae	            0x75f0	                           jne 0x40000a0	       138	quote.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_3
0x40000b0	          0xc60000	                       mov byte [rax], 0	       139	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x40000b3	          0x488916	                    mov qword [rsi], rdx	       140	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x40000b6	          0x4889f8	                            mov rax, rdi	       141	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x40000b9	              0xc3	                                     ret	       141	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x40000ba	    0x660f1f440000	                    nop word [rax + rax]	       141	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x40000c0	      0x440fb64a03	               movzx r9d, byte [rdx + 3]	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x40000c5	        0x4180f927	                           cmp r9b, 0x27	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x40000c9	            0x7406	                            je 0x40000d1	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x40000cb	        0x4180f921	                           cmp r9b, 0x21	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x40000cf	            0x75bc	                           jne 0x400008d	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x40000d1	        0x807a0427	                cmp byte [rdx + 4], 0x27	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x40000d5	            0x75b6	                           jne 0x400008d	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x40000d7	        0x458848ff	                  mov byte [r8 - 1], r9b	       128	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x40000db	        0x4883c204	                              add rdx, 4	       129	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x40000df	            0xeb84	                           jmp 0x4000065	       130	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x40000e1	     0xf1f80000000	                         nop dword [rax]	       130	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x40000e8	          0x4885f6	                           test rsi, rsi	       117	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x40000eb	          0xc60000	                       mov byte [rax], 0	       116	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x40000ee	            0x740b	                            je 0x40000fb	       117	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x40000f0	    0x48c706000000	                      mov qword [rsi], 0	       118	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x40000f7	          0x4889f8	                            mov rax, rdi	       118	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x40000fa	              0xc3	                                     ret	       118	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x40000fb	          0x4889f8	                            mov rax, rdi	       118	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x40000fe	              0xc3	                                     ret	       144	quote.c	FUNCTION_7
quote_two_c_style	FOR,0:ELSE,1:SWITCH,0:DO,0:WHILE,0:IF,3:CALL,8:functions,0	121
0x4000dc0	            0x4155	                                push r13	       296	quote.c	FUNCTION_16
0x4000dc2	            0x4154	                                push r12	       296	quote.c	FUNCTION_16
0x4000dc4	          0x4531c0	                            xor r8d, r8d	       292	quote.c	FUNCTION_15	CALL_1
0x4000dc7	              0x55	                                push rbp	       296	quote.c	FUNCTION_16
0x4000dc8	              0x53	                                push rbx	       296	quote.c	FUNCTION_16
0x4000dc9	          0x4889f5	                            mov rbp, rsi	       296	quote.c	FUNCTION_16
0x4000dcc	          0x4889fb	                            mov rbx, rdi	       296	quote.c	FUNCTION_16
0x4000dcf	          0x4989d4	                            mov r12, rdx	       296	quote.c	FUNCTION_16
0x4000dd2	          0x4189cd	                           mov r13d, ecx	       296	quote.c	FUNCTION_16
0x4000dd5	        0x4883ec08	                              sub rsp, 8	       296	quote.c	FUNCTION_16
0x4000dd9	            0x31c9	                            xor ecx, ecx	       292	quote.c	FUNCTION_15	CALL_1
0x4000ddb	            0x31d2	                            xor edx, edx	       292	quote.c	FUNCTION_15	CALL_1
0x4000ddd	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       292	quote.c	FUNCTION_15	CALL_1
0x4000de4	          0x4889ef	                            mov rdi, rbp	       292	quote.c	FUNCTION_15	CALL_1
0x4000de7	      0xe814f3ffff	          call sym.quote_c_style_counted	       292	quote.c	FUNCTION_15	CALL_1
0x4000dec	          0x4885c0	                           test rax, rax	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0x4000def	            0x744f	                            je 0x4000e40	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0x4000df1	          0x4585ed	                         test r13d, r13d	       299	quote.c	FUNCTION_16	IF_1	IF_2
0x4000df4	     0xf849e000000	                            je 0x4000e98	       299	quote.c	FUNCTION_16	IF_1	IF_2
0x4000dfa	          0x4889da	                            mov rdx, rbx	       292	quote.c	FUNCTION_15	CALL_1
0x4000dfd	          0x4889ef	                            mov rdi, rbp	       292	quote.c	FUNCTION_15	CALL_1
0x4000e00	    0x41b801000000	                              mov r8d, 1	       292	quote.c	FUNCTION_15	CALL_1
0x4000e06	            0x31c9	                            xor ecx, ecx	       292	quote.c	FUNCTION_15	CALL_1
0x4000e08	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       292	quote.c	FUNCTION_15	CALL_1
0x4000e0f	      0xe8ecf2ffff	          call sym.quote_c_style_counted	       292	quote.c	FUNCTION_15	CALL_1
0x4000e14	        0x4883c408	                              add rsp, 8	       309	quote.c	FUNCTION_16
0x4000e18	          0x4889da	                            mov rdx, rbx	       292	quote.c	FUNCTION_15	CALL_1
0x4000e1b	          0x4c89e7	                            mov rdi, r12	       292	quote.c	FUNCTION_15	CALL_1
0x4000e1e	              0x5b	                                 pop rbx	       309	quote.c	FUNCTION_16
0x4000e1f	              0x5d	                                 pop rbp	       309	quote.c	FUNCTION_16
0x4000e20	            0x415c	                                 pop r12	       309	quote.c	FUNCTION_16
0x4000e22	            0x415d	                                 pop r13	       309	quote.c	FUNCTION_16
0x4000e24	    0x41b801000000	                              mov r8d, 1	       292	quote.c	FUNCTION_15	CALL_1
0x4000e2a	            0x31c9	                            xor ecx, ecx	       292	quote.c	FUNCTION_15	CALL_1
0x4000e2c	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       292	quote.c	FUNCTION_15	CALL_1
0x4000e33	      0xe9c8f2ffff	           jmp sym.quote_c_style_counted	       292	quote.c	FUNCTION_15	CALL_1
0x4000e38	     0xf1f84000000	                   nop dword [rax + rax]	       292	quote.c	FUNCTION_15	CALL_1
0x4000e40	          0x4531c0	                            xor r8d, r8d	       292	quote.c	FUNCTION_15	CALL_1
0x4000e43	            0x31c9	                            xor ecx, ecx	       292	quote.c	FUNCTION_15	CALL_1
0x4000e45	            0x31d2	                            xor edx, edx	       292	quote.c	FUNCTION_15	CALL_1
0x4000e47	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       292	quote.c	FUNCTION_15	CALL_1
0x4000e4e	          0x4c89e7	                            mov rdi, r12	       292	quote.c	FUNCTION_15	CALL_1
0x4000e51	      0xe8aaf2ffff	          call sym.quote_c_style_counted	       292	quote.c	FUNCTION_15	CALL_1
0x4000e56	          0x4885c0	                           test rax, rax	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0x4000e59	            0x7596	                           jne 0x4000df1	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0x4000e5b	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000e5e	      0xe800000000	                          call 0x4000e63	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000e63	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000e66	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000e69	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000e6c	      0xe800000000	                          call 0x4000e71	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000e71	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000e74	      0xe800000000	                          call 0x4000e79	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000e79	        0x4883c408	                              add rsp, 8	       309	quote.c	FUNCTION_16
0x4000e7d	          0x4c89e6	                            mov rsi, r12	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000e80	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000e83	              0x5b	                                 pop rbx	       309	quote.c	FUNCTION_16
0x4000e84	              0x5d	                                 pop rbp	       309	quote.c	FUNCTION_16
0x4000e85	            0x415c	                                 pop r12	       309	quote.c	FUNCTION_16
0x4000e87	            0x415d	                                 pop r13	       309	quote.c	FUNCTION_16
0x4000e89	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000e8c	      0xe900000000	                           jmp 0x4000e91	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000e91	     0xf1f80000000	                         nop dword [rax]	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000e98	          0x488b03	                    mov rax, qword [rbx]	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000e9b	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4000e9e	     0xf84a4000000	                            je 0x4000f48	       141	strbuf.h	FUNCTION_26
0x4000ea4	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4000ea8	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000eac	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000eaf	     0xf8493000000	                            je 0x4000f48	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000eb5	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4000eb9	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4000ebd	    0x41b801000000	                              mov r8d, 1	       292	quote.c	FUNCTION_15	CALL_1
0x4000ec3	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       292	quote.c	FUNCTION_15	CALL_1
0x4000eca	          0x4889ef	                            mov rdi, rbp	       292	quote.c	FUNCTION_15	CALL_1
0x4000ecd	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4000ed1	            0x31c9	                            xor ecx, ecx	       292	quote.c	FUNCTION_15	CALL_1
0x4000ed3	        0xc6041022	              mov byte [rax + rdx], 0x22	       229	strbuf.h	FUNCTION_28
0x4000ed7	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4000edb	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4000edf	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4000ee3	          0x4889da	                            mov rdx, rbx	       292	quote.c	FUNCTION_15	CALL_1
0x4000ee6	      0xe815f2ffff	          call sym.quote_c_style_counted	       292	quote.c	FUNCTION_15	CALL_1
0x4000eeb	            0x31c9	                            xor ecx, ecx	       292	quote.c	FUNCTION_15	CALL_1
0x4000eed	    0x41b801000000	                              mov r8d, 1	       292	quote.c	FUNCTION_15	CALL_1
0x4000ef3	          0x4889da	                            mov rdx, rbx	       292	quote.c	FUNCTION_15	CALL_1
0x4000ef6	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       292	quote.c	FUNCTION_15	CALL_1
0x4000efd	          0x4c89e7	                            mov rdi, r12	       292	quote.c	FUNCTION_15	CALL_1
0x4000f00	      0xe8fbf1ffff	          call sym.quote_c_style_counted	       292	quote.c	FUNCTION_15	CALL_1
0x4000f05	          0x488b03	                    mov rax, qword [rbx]	       292	quote.c	FUNCTION_15	CALL_1
0x4000f08	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4000f0b	            0x7553	                           jne 0x4000f60	       141	strbuf.h	FUNCTION_26
0x4000f0d	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000f12	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000f15	      0xe800000000	                          call 0x4000f1a	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000f1a	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000f1e	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4000f22	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4000f26	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4000f2a	        0xc6041022	              mov byte [rax + rdx], 0x22	       229	strbuf.h	FUNCTION_28
0x4000f2e	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4000f32	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4000f36	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4000f3a	        0x4883c408	                              add rsp, 8	       309	quote.c	FUNCTION_16
0x4000f3e	              0x5b	                                 pop rbx	       309	quote.c	FUNCTION_16
0x4000f3f	              0x5d	                                 pop rbp	       309	quote.c	FUNCTION_16
0x4000f40	            0x415c	                                 pop r12	       309	quote.c	FUNCTION_16
0x4000f42	            0x415d	                                 pop r13	       309	quote.c	FUNCTION_16
0x4000f44	              0xc3	                                     ret	       309	quote.c	FUNCTION_16
0x4000f45	           0xf1f00	                         nop dword [rax]	       309	quote.c	FUNCTION_16
0x4000f48	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000f4d	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000f50	      0xe800000000	                          call 0x4000f55	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000f55	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000f59	      0xe957ffffff	                           jmp 0x4000eb5	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000f5e	            0x6690	                                     nop	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000f60	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4000f64	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000f68	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000f6b	            0x75b1	                           jne 0x4000f1e	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000f6d	            0xeb9e	                           jmp 0x4000f0d	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
sq_quote_argv_pretty	FOR,1:ELSE,0:SWITCH,0:DO,0:WHILE,0:IF,0:CALL,2:functions,0	39
0x4000b90	        0x48833e00	                      cmp qword [rsi], 0	        91	quote.c	FUNCTION_6	FOR_1
0x4000b94	            0x7478	                            je 0x4000c0e	        91	quote.c	FUNCTION_6	FOR_1
0x4000b96	              0x55	                                push rbp	        88	quote.c	FUNCTION_6
0x4000b97	              0x53	                                push rbx	        88	quote.c	FUNCTION_6
0x4000b98	          0x4889f5	                            mov rbp, rsi	        88	quote.c	FUNCTION_6
0x4000b9b	          0x4889fb	                            mov rbx, rdi	        88	quote.c	FUNCTION_6
0x4000b9e	        0x4883ec08	                              sub rsp, 8	        88	quote.c	FUNCTION_6
0x4000ba2	            0xeb48	                           jmp 0x4000bec	        88	quote.c	FUNCTION_6
0x4000ba4	         0xf1f4000	                         nop dword [rax]	        88	quote.c	FUNCTION_6
0x4000ba8	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000bad	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000bb0	      0xe800000000	                          call 0x4000bb5	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000bb5	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000bb9	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4000bbd	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4000bc1	          0x4889df	                            mov rdi, rbx	        93	quote.c	FUNCTION_6	FOR_1	CALL_2
0x4000bc4	        0x4883c508	                              add rbp, 8	        91	quote.c	FUNCTION_6	FOR_1
0x4000bc8	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4000bcc	        0xc6041020	              mov byte [rax + rdx], 0x20	       229	strbuf.h	FUNCTION_28
0x4000bd0	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4000bd4	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4000bd8	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4000bdc	        0x488b75f8	                mov rsi, qword [rbp - 8]	        93	quote.c	FUNCTION_6	FOR_1	CALL_2
0x4000be0	      0xe800000000	                          call 0x4000be5	        93	quote.c	FUNCTION_6	FOR_1	CALL_2
0x4000be5	      0x48837d0000	                      cmp qword [rbp], 0	        91	quote.c	FUNCTION_6	FOR_1
0x4000bea	            0x741c	                            je 0x4000c08	        91	quote.c	FUNCTION_6	FOR_1
0x4000bec	          0x488b03	                    mov rax, qword [rbx]	        91	quote.c	FUNCTION_6	FOR_1
0x4000bef	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4000bf2	            0x74b4	                            je 0x4000ba8	       141	strbuf.h	FUNCTION_26
0x4000bf4	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4000bf8	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000bfc	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000bff	            0x75b8	                           jne 0x4000bb9	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000c01	            0xeba5	                           jmp 0x4000ba8	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000c03	       0xf1f440000	                   nop dword [rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000c08	        0x4883c408	                              add rsp, 8	        95	quote.c	FUNCTION_6
0x4000c0c	              0x5b	                                 pop rbx	        95	quote.c	FUNCTION_6
0x4000c0d	              0x5d	                                 pop rbp	        95	quote.c	FUNCTION_6
0x4000c0e	            0xf3c3	                                     ret	        95	quote.c	FUNCTION_6
python_quote_buf	FOR,0:ELSE,0:SWITCH,0:DO,0:WHILE,1:IF,2:CALL,6:functions,0	147
0x4001490	            0x4154	                                push r12	       433	quote.c	FUNCTION_22
0x4001492	              0x55	                                push rbp	       433	quote.c	FUNCTION_22
0x4001493	          0x4989f4	                            mov r12, rsi	       433	quote.c	FUNCTION_22
0x4001496	              0x53	                                push rbx	       433	quote.c	FUNCTION_22
0x4001497	          0x488b07	                    mov rax, qword [rdi]	       433	quote.c	FUNCTION_22
0x400149a	          0x4889fb	                            mov rbx, rdi	       433	quote.c	FUNCTION_22
0x400149d	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40014a0	     0xf852a020000	                           jne 0x40016d0	       141	strbuf.h	FUNCTION_26
0x40014a6	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40014ab	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x40014ae	      0xe800000000	                          call 0x40014b3	       228	strbuf.h	FUNCTION_28	CALL_2
0x40014b3	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x40014b7	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40014bb	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x40014bf	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x40014c3	        0xc6041027	              mov byte [rax + rdx], 0x27	       229	strbuf.h	FUNCTION_28
0x40014c7	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40014cb	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x40014cf	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40014d3	        0x4983c401	                              add r12, 1	       440	quote.c	FUNCTION_22	WHILE_1
0x40014d7	    0x410fb66c24ff	               movzx ebp, byte [r12 - 1]	       440	quote.c	FUNCTION_22	WHILE_1
0x40014dd	          0x4084ed	                           test bpl, bpl	       440	quote.c	FUNCTION_22	WHILE_1
0x40014e0	            0x7466	                            je 0x4001548	       440	quote.c	FUNCTION_22	WHILE_1
0x40014e2	        0x4080fd0a	                            cmp bpl, 0xa	       441	quote.c	FUNCTION_22	WHILE_1	IF_1
0x40014e6	     0xf8404010000	                            je 0x40015f0	       441	quote.c	FUNCTION_22	WHILE_1	IF_1
0x40014ec	        0x4080fd27	                           cmp bpl, 0x27	       446	quote.c	FUNCTION_22	WHILE_1	IF_2
0x40014f0	     0xf84b2000000	                            je 0x40015a8	       446	quote.c	FUNCTION_22	WHILE_1	IF_2
0x40014f6	        0x4080fd5c	                           cmp bpl, 0x5c	       446	quote.c	FUNCTION_22	WHILE_1	IF_2
0x40014fa	     0xf84a8000000	                            je 0x40015a8	       446	quote.c	FUNCTION_22	WHILE_1	IF_2
0x4001500	          0x488b03	                    mov rax, qword [rbx]	       446	quote.c	FUNCTION_22	WHILE_1	IF_2
0x4001503	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001506	     0xf8584000000	                           jne 0x4001590	       141	strbuf.h	FUNCTION_26
0x400150c	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001511	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001514	      0xe800000000	                          call 0x4001519	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001519	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x400151d	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001521	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4001525	        0x4983c401	                              add r12, 1	       440	quote.c	FUNCTION_22	WHILE_1
0x4001529	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x400152d	        0x40882c10	               mov byte [rax + rdx], bpl	       229	strbuf.h	FUNCTION_28
0x4001531	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001535	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001539	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x400153d	    0x410fb66c24ff	               movzx ebp, byte [r12 - 1]	       440	quote.c	FUNCTION_22	WHILE_1
0x4001543	          0x4084ed	                           test bpl, bpl	       440	quote.c	FUNCTION_22	WHILE_1
0x4001546	            0x759a	                           jne 0x40014e2	       440	quote.c	FUNCTION_22	WHILE_1
0x4001548	          0x488b03	                    mov rax, qword [rbx]	       440	quote.c	FUNCTION_22	WHILE_1
0x400154b	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x400154e	     0xf855c010000	                           jne 0x40016b0	       141	strbuf.h	FUNCTION_26
0x4001554	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001559	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x400155c	      0xe800000000	                          call 0x4001561	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001561	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001565	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001569	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x400156d	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001571	        0xc6041027	              mov byte [rax + rdx], 0x27	       229	strbuf.h	FUNCTION_28
0x4001575	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001579	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x400157d	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001581	              0x5b	                                 pop rbx	       451	quote.c	FUNCTION_22
0x4001582	              0x5d	                                 pop rbp	       451	quote.c	FUNCTION_22
0x4001583	            0x415c	                                 pop r12	       451	quote.c	FUNCTION_22
0x4001585	              0xc3	                                     ret	       451	quote.c	FUNCTION_22
0x4001586	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       451	quote.c	FUNCTION_22
0x4001590	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4001594	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001598	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400159b	            0x7580	                           jne 0x400151d	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400159d	      0xe96affffff	                           jmp 0x400150c	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40015a2	    0x660f1f440000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40015a8	          0x488b03	                    mov rax, qword [rbx]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40015ab	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40015ae	     0xf85b4000000	                           jne 0x4001668	       141	strbuf.h	FUNCTION_26
0x40015b4	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40015b9	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x40015bc	      0xe800000000	                          call 0x40015c1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40015c1	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x40015c5	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40015c9	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x40015cd	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x40015d1	        0xc604105c	              mov byte [rax + rdx], 0x5c	       229	strbuf.h	FUNCTION_28
0x40015d5	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40015d9	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x40015dd	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40015e1	      0xe91affffff	                           jmp 0x4001500	       230	strbuf.h	FUNCTION_28
0x40015e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       230	strbuf.h	FUNCTION_28
0x40015f0	          0x488b03	                    mov rax, qword [rbx]	       230	strbuf.h	FUNCTION_28
0x40015f3	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40015f6	     0xf8594000000	                           jne 0x4001690	       141	strbuf.h	FUNCTION_26
0x40015fc	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001601	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001604	      0xe800000000	                          call 0x4001609	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001609	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x400160d	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001611	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4001615	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001619	        0xc604105c	              mov byte [rax + rdx], 0x5c	       229	strbuf.h	FUNCTION_28
0x400161d	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001621	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001625	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001629	          0x488b03	                    mov rax, qword [rbx]	       230	strbuf.h	FUNCTION_28
0x400162c	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x400162f	            0x754f	                           jne 0x4001680	       141	strbuf.h	FUNCTION_26
0x4001631	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001636	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001639	      0xe800000000	                          call 0x400163e	       228	strbuf.h	FUNCTION_28	CALL_2
0x400163e	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001642	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001646	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x400164a	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x400164e	        0xc604106e	              mov byte [rax + rdx], 0x6e	       229	strbuf.h	FUNCTION_28
0x4001652	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001656	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x400165a	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x400165e	      0xe970feffff	                           jmp 0x40014d3	       444	quote.c	FUNCTION_22	WHILE_1	IF_1
0x4001663	       0xf1f440000	                   nop dword [rax + rax]	       444	quote.c	FUNCTION_22	WHILE_1	IF_1
0x4001668	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x400166c	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001670	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001673	     0xf854cffffff	                           jne 0x40015c5	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001679	      0xe936ffffff	                           jmp 0x40015b4	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400167e	            0x6690	                                     nop	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001680	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4001684	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001688	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400168b	            0x75b5	                           jne 0x4001642	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400168d	            0xeba2	                           jmp 0x4001631	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400168f	              0x90	                                     nop	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001690	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4001694	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001698	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400169b	     0xf856cffffff	                           jne 0x400160d	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40016a1	      0xe956ffffff	                           jmp 0x40015fc	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40016a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40016b0	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x40016b4	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40016b8	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40016bb	     0xf85a4feffff	                           jne 0x4001565	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40016c1	      0xe98efeffff	                           jmp 0x4001554	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40016c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40016d0	        0x488b5708	                mov rdx, qword [rdi + 8]	       141	strbuf.h	FUNCTION_26
0x40016d4	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40016d8	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40016db	     0xf85d6fdffff	                           jne 0x40014b7	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40016e1	      0xe9c0fdffff	                           jmp 0x40014a6	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
sq_dequote_to_argv	FOR,0:ELSE,0:SWITCH,0:DO,0:WHILE,0:IF,0:CALL,1:functions,0	76
0x4000c20	            0x4156	                                push r14	       175	quote.c	FUNCTION_10
0x4000c22	            0x4155	                                push r13	       175	quote.c	FUNCTION_10
0x4000c24	            0x4154	                                push r12	       175	quote.c	FUNCTION_10
0x4000c26	              0x55	                                push rbp	       175	quote.c	FUNCTION_10
0x4000c27	              0x53	                                push rbx	       175	quote.c	FUNCTION_10
0x4000c28	        0x4883ec10	                           sub rsp, 0x10	       175	quote.c	FUNCTION_10
0x4000c2c	    0x64488b042528	                mov rax, qword fs:[0x28]	       175	quote.c	FUNCTION_10
0x4000c35	      0x4889442408	                mov qword [rsp + 8], rax	       175	quote.c	FUNCTION_10
0x4000c3a	            0x31c0	                            xor eax, eax	       175	quote.c	FUNCTION_10
0x4000c3c	          0x803f00	                       cmp byte [rdi], 0	       157	quote.c	FUNCTION_9	IF_1
0x4000c3f	        0x48893c24	                    mov qword [rsp], rdi	       155	quote.c	FUNCTION_9
0x4000c43	     0xf8497000000	                            je 0x4000ce0	       157	quote.c	FUNCTION_9	IF_1
0x4000c49	          0x4889f3	                            mov rbx, rsi	       157	quote.c	FUNCTION_9	IF_1
0x4000c4c	          0x4889d5	                            mov rbp, rdx	       157	quote.c	FUNCTION_9	IF_1
0x4000c4f	          0x4989cc	                            mov r12, rcx	       157	quote.c	FUNCTION_9	IF_1
0x4000c52	    0x49bdffffffff	         movabs r13, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_50	IF_1	CALL_1
0x4000c5c	            0xeb18	                           jmp 0x4000c76	       795	git-compat-util.h	FUNCTION_50	IF_1	CALL_1
0x4000c5e	            0x6690	                                     nop	       795	git-compat-util.h	FUNCTION_50	IF_1	CALL_1
0x4000c60	          0x488b03	                    mov rax, qword [rbx]	       795	git-compat-util.h	FUNCTION_50	IF_1	CALL_1
0x4000c63	          0x8d5101	                      lea edx, [rcx + 1]	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x4000c66	          0x895500	                    mov dword [rbp], edx	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x4000c69	        0x4c8934c8	            mov qword [rax + rcx*8], r14	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x4000c6d	        0x488b3c24	                    mov rdi, qword [rsp]	       169	quote.c	FUNCTION_9	DO_1
0x4000c71	          0x4885ff	                           test rdi, rdi	       169	quote.c	FUNCTION_9	DO_1
0x4000c74	            0x746a	                            je 0x4000ce0	       169	quote.c	FUNCTION_9	DO_1
0x4000c76	          0x4889e6	                            mov rsi, rsp	       160	quote.c	FUNCTION_9	DO_1	CALL_1
0x4000c79	      0xe8c2f3ffff	                call sym.sq_dequote_step	       160	quote.c	FUNCTION_9	DO_1	CALL_1
0x4000c7e	          0x4885c0	                           test rax, rax	       161	quote.c	FUNCTION_9	DO_1	IF_2
0x4000c81	          0x4989c6	                            mov r14, rax	       160	quote.c	FUNCTION_9	DO_1	CALL_1
0x4000c84	            0x747a	                            je 0x4000d00	       161	quote.c	FUNCTION_9	DO_1	IF_2
0x4000c86	          0x4885db	                           test rbx, rbx	       163	quote.c	FUNCTION_9	DO_1	IF_3
0x4000c89	            0x74e2	                            je 0x4000c6d	       163	quote.c	FUNCTION_9	DO_1	IF_3
0x4000c8b	        0x48634d00	                 movsxd rcx, dword [rbp]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000c8f	        0x418b0424	                    mov eax, dword [r12]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000c93	            0x39c1	                            cmp ecx, eax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000c95	            0x7cc9	                            jl 0x4000c60	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000c97	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000c9b	            0x89c2	                            mov edx, eax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000c9d	          0xc1ea1f	                           shr edx, 0x1f	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000ca0	             0x1c2	                            add edx, eax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000ca2	            0xd1fa	                              sar edx, 1	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000ca4	            0x39d1	                            cmp ecx, edx	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000ca6	            0x7c28	                            jl 0x4000cd0	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000ca8	          0x8d5101	                      lea edx, [rcx + 1]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000cab	        0x41891424	                    mov dword [r12], edx	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000caf	          0x4863d2	                         movsxd rdx, edx	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000cb2	          0x4c39ea	                            cmp rdx, r13	       795	git-compat-util.h	FUNCTION_50	IF_1	CALL_1
0x4000cb5	            0x7750	                            ja 0x4000d07	       795	git-compat-util.h	FUNCTION_50	IF_1	CALL_1
0x4000cb7	          0x488b3b	                    mov rdi, qword [rbx]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000cba	    0x488d34d50000	                        lea rsi, [rdx*8]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000cc2	      0xe800000000	                          call 0x4000cc7	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000cc7	        0x48634d00	                 movsxd rcx, dword [rbp]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000ccb	          0x488903	                    mov qword [rbx], rax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000cce	            0xeb93	                           jmp 0x4000c63	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000cd0	        0x41891424	                    mov dword [r12], edx	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000cd4	            0xebd9	                           jmp 0x4000caf	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000cd6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000ce0	            0x31c0	                            xor eax, eax	       158	quote.c	FUNCTION_9	IF_1
0x4000ce2	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       177	quote.c	FUNCTION_10
0x4000ce7	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       177	quote.c	FUNCTION_10
0x4000cf0	            0x7526	                           jne 0x4000d18	       177	quote.c	FUNCTION_10
0x4000cf2	        0x4883c410	                           add rsp, 0x10	       177	quote.c	FUNCTION_10
0x4000cf6	              0x5b	                                 pop rbx	       177	quote.c	FUNCTION_10
0x4000cf7	              0x5d	                                 pop rbp	       177	quote.c	FUNCTION_10
0x4000cf8	            0x415c	                                 pop r12	       177	quote.c	FUNCTION_10
0x4000cfa	            0x415d	                                 pop r13	       177	quote.c	FUNCTION_10
0x4000cfc	            0x415e	                                 pop r14	       177	quote.c	FUNCTION_10
0x4000cfe	              0xc3	                                     ret	       177	quote.c	FUNCTION_10
0x4000cff	              0x90	                                     nop	       177	quote.c	FUNCTION_10
0x4000d00	      0xb8ffffffff	                     mov eax, 0xffffffff	       162	quote.c	FUNCTION_9	DO_1	IF_2
0x4000d05	            0xebdb	                           jmp 0x4000ce2	       162	quote.c	FUNCTION_9	DO_1	IF_2
0x4000d07	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_50	IF_1	CALL_2
0x4000d0c	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_50	IF_1	CALL_2
0x4000d11	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_50	IF_1	CALL_2
0x4000d13	      0xe800000000	                          call 0x4000d18	       796	git-compat-util.h	FUNCTION_50	IF_1	CALL_2
0x4000d18	      0xe800000000	                          call 0x4000d1d	       177	quote.c	FUNCTION_10
write_name_quoted_relative	FOR,0:ELSE,0:SWITCH,0:DO,0:WHILE,0:IF,0:CALL,3:functions,0	27
0x4000fc0	              0x55	                                push rbp	       323	quote.c	FUNCTION_18
0x4000fc1	              0x53	                                push rbx	       323	quote.c	FUNCTION_18
0x4000fc2	            0x89cd	                            mov ebp, ecx	       323	quote.c	FUNCTION_18
0x4000fc4	          0x4889d3	                            mov rbx, rdx	       323	quote.c	FUNCTION_18
0x4000fc7	        0x4883ec28	                           sub rsp, 0x28	       323	quote.c	FUNCTION_18
0x4000fcb	          0x4889e2	                            mov rdx, rsp	       326	quote.c	FUNCTION_18	CALL_1
0x4000fce	    0x48c704240000	                      mov qword [rsp], 0	       324	quote.c	FUNCTION_18
0x4000fd6	    0x48c744240800	                  mov qword [rsp + 8], 0	       324	quote.c	FUNCTION_18
0x4000fdf	    0x64488b042528	                mov rax, qword fs:[0x28]	       323	quote.c	FUNCTION_18
0x4000fe8	      0x4889442418	             mov qword [rsp + 0x18], rax	       323	quote.c	FUNCTION_18
0x4000fed	            0x31c0	                            xor eax, eax	       323	quote.c	FUNCTION_18
0x4000fef	    0x48c744241000	               mov qword [rsp + 0x10], 0	       324	quote.c	FUNCTION_18
0x4000ff8	      0xe800000000	                          call 0x4000ffd	       326	quote.c	FUNCTION_18	CALL_1
0x4000ffd	            0x89ea	                            mov edx, ebp	       327	quote.c	FUNCTION_18	CALL_2
0x4000fff	          0x4889c7	                            mov rdi, rax	       327	quote.c	FUNCTION_18	CALL_2
0x4001002	          0x4889de	                            mov rsi, rbx	       327	quote.c	FUNCTION_18	CALL_2
0x4001005	      0xe800000000	                          call 0x400100a	       327	quote.c	FUNCTION_18	CALL_2
0x400100a	          0x4889e7	                            mov rdi, rsp	       329	quote.c	FUNCTION_18	CALL_3
0x400100d	      0xe800000000	                          call 0x4001012	       329	quote.c	FUNCTION_18	CALL_3
0x4001012	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       330	quote.c	FUNCTION_18
0x4001017	    0x644833042528	                xor rax, qword fs:[0x28]	       330	quote.c	FUNCTION_18
0x4001020	            0x7507	                           jne 0x4001029	       330	quote.c	FUNCTION_18
0x4001022	        0x4883c428	                           add rsp, 0x28	       330	quote.c	FUNCTION_18
0x4001026	              0x5b	                                 pop rbx	       330	quote.c	FUNCTION_18
0x4001027	              0x5d	                                 pop rbp	       330	quote.c	FUNCTION_18
0x4001028	              0xc3	                                     ret	       330	quote.c	FUNCTION_18
0x4001029	      0xe800000000	                          call 0x400102e	       330	quote.c	FUNCTION_18
sq_dequote	FOR,0:ELSE,0:SWITCH,0:DO,0:WHILE,0:IF,0:CALL,1:functions,0	2
0x4000c10	            0x31f6	                            xor esi, esi	       148	quote.c	FUNCTION_8	CALL_1
0x4000c12	      0xe929f4ffff	                 jmp sym.sq_dequote_step	       148	quote.c	FUNCTION_8	CALL_1
quote_c_style_counted	FOR,1:ELSE,1:SWITCH,0:DO,0:WHILE,0:IF,6:CALL,10:functions,0	401
0x4000100	            0x4157	                                push r15	       238	quote.c	FUNCTION_14
0x4000102	            0x4156	                                push r14	       238	quote.c	FUNCTION_14
0x4000104	          0x4989ff	                            mov r15, rdi	       254	quote.c	FUNCTION_14
0x4000107	            0x4155	                                push r13	       238	quote.c	FUNCTION_14
0x4000109	            0x4154	                                push r12	       238	quote.c	FUNCTION_14
0x400010b	          0x4989f5	                            mov r13, rsi	       238	quote.c	FUNCTION_14
0x400010e	              0x55	                                push rbp	       238	quote.c	FUNCTION_14
0x400010f	              0x53	                                push rbx	       238	quote.c	FUNCTION_14
0x4000110	          0x4989d4	                            mov r12, rdx	       238	quote.c	FUNCTION_14
0x4000113	          0x4889cd	                            mov rbp, rcx	       238	quote.c	FUNCTION_14
0x4000116	        0x4883ec28	                           sub rsp, 0x28	       238	quote.c	FUNCTION_14
0x400011a	      0x48897c2418	             mov qword [rsp + 0x18], rdi	       238	quote.c	FUNCTION_14
0x400011f	      0x4489442414	             mov dword [rsp + 0x14], r8d	       238	quote.c	FUNCTION_14
0x4000124	    0x48c704240000	                      mov qword [rsp], 0	       253	quote.c	FUNCTION_14
0x400012c	         0xf1f4000	                         nop dword [rax]	       253	quote.c	FUNCTION_14
0x4000130	          0x4d85ed	                           test r13, r13	       215	quote.c	FUNCTION_13	IF_1
0x4000133	     0xf88b6020000	                            js 0x40003ef	       215	quote.c	FUNCTION_13	IF_1
0x4000139	          0x4d89e8	                             mov r8, r13	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x400013c	            0x7445	                            je 0x4000183	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x400013e	        0x410fb607	                   movzx eax, byte [r15]	       206	quote.c	FUNCTION_12
0x4000142	    0x8b1500000000	            mov edx, dword [0x04000148] 	       206	quote.c	FUNCTION_12
0x4000148	            0x31db	                            xor ebx, ebx	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x400014a	     0xfbe80000000	                   movsx eax, byte [rax]	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x4000151	             0x1d0	                            add eax, edx	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x4000153	            0x85c0	                           test eax, eax	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x4000155	            0x7e23	                           jle 0x400017a	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x4000157	      0xe980050000	                           jmp 0x40006dc	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x400015c	         0xf1f4000	                         nop dword [rax]	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x4000160	    0x410fb6441f01	        movzx eax, byte [r15 + rbx + 1] 	       206	quote.c	FUNCTION_12
0x4000166	     0xfbe80000000	                   movsx eax, byte [rax]	       206	quote.c	FUNCTION_12
0x400016d	             0x1d0	                            add eax, edx	       206	quote.c	FUNCTION_12
0x400016f	            0x85c0	                           test eax, eax	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x4000171	     0xf8fd9000000	                            jg 0x4000250	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x4000177	          0x4c89f3	                            mov rbx, r14	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x400017a	        0x4c8d7301	                      lea r14, [rbx + 1]	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x400017e	          0x4d39ee	                            cmp r14, r13	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x4000181	            0x75dd	                           jne 0x4000160	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x4000183	          0x4d85e4	                           test r12, r12	       281	quote.c	FUNCTION_14	CALL_9
0x4000186	            0x7418	                            je 0x40001a0	       281	quote.c	FUNCTION_14	CALL_9
0x4000188	          0x4c89c2	                             mov rdx, r8	       281	quote.c	FUNCTION_14	CALL_9
0x400018b	          0x4c89fe	                            mov rsi, r15	       281	quote.c	FUNCTION_14	CALL_9
0x400018e	          0x4c89e7	                            mov rdi, r12	       281	quote.c	FUNCTION_14	CALL_9
0x4000191	      0x4c89442408	                 mov qword [rsp + 8], r8	       281	quote.c	FUNCTION_14	CALL_9
0x4000196	      0xe800000000	                          call 0x400019b	       281	quote.c	FUNCTION_14	CALL_9
0x400019b	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       281	quote.c	FUNCTION_14	CALL_9
0x40001a0	          0x4885ed	                           test rbp, rbp	       281	quote.c	FUNCTION_14	CALL_9
0x40001a3	            0x741d	                            je 0x40001c2	       281	quote.c	FUNCTION_14	CALL_9
0x40001a5	          0x4c89c6	                             mov rsi, r8	       281	quote.c	FUNCTION_14	CALL_9
0x40001a8	          0x4889e9	                            mov rcx, rbp	       281	quote.c	FUNCTION_14	CALL_9
0x40001ab	      0xba01000000	                              mov edx, 1	       281	quote.c	FUNCTION_14	CALL_9
0x40001b0	          0x4c89ff	                            mov rdi, r15	       281	quote.c	FUNCTION_14	CALL_9
0x40001b3	      0x4c89442408	                 mov qword [rsp + 8], r8	       281	quote.c	FUNCTION_14	CALL_9
0x40001b8	      0xe800000000	                          call 0x40001bd	       281	quote.c	FUNCTION_14	CALL_9
0x40001bd	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       281	quote.c	FUNCTION_14	CALL_9
0x40001c2	        0x488b1c24	                    mov rbx, qword [rsp]	       281	quote.c	FUNCTION_14	CALL_9
0x40001c6	          0x4c01c3	                             add rbx, r8	       281	quote.c	FUNCTION_14	CALL_9
0x40001c9	      0x4c3b7c2418	            cmp r15, qword [rsp + 0x18] 	       282	quote.c	FUNCTION_14	IF_5
0x40001ce	     0xf843c050000	                            je 0x4000710	       282	quote.c	FUNCTION_14	IF_5
0x40001d4	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       285	quote.c	FUNCTION_14	IF_6
0x40001d8	          0x4889d8	                            mov rax, rbx	       281	quote.c	FUNCTION_14	CALL_9
0x40001db	            0x85d2	                           test edx, edx	       285	quote.c	FUNCTION_14	IF_6
0x40001dd	            0x755a	                           jne 0x4000239	       285	quote.c	FUNCTION_14	IF_6
0x40001df	          0x4d85e4	                           test r12, r12	       286	quote.c	FUNCTION_14	CALL_10
0x40001e2	            0x743f	                            je 0x4000223	       286	quote.c	FUNCTION_14	CALL_10
0x40001e4	        0x498b1424	                    mov rdx, qword [r12]	       286	quote.c	FUNCTION_14	CALL_10
0x40001e8	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_26
0x40001eb	     0xf8507050000	                           jne 0x40006f8	       141	strbuf.h	FUNCTION_26
0x40001f1	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40001f6	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_28	CALL_2
0x40001f9	      0xe800000000	                          call 0x40001fe	       228	strbuf.h	FUNCTION_28	CALL_2
0x40001fe	      0x498b442408	                mov rax, qword [r12 + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000203	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4000208	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x400020c	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4000211	        0xc6040222	              mov byte [rdx + rax], 0x22	       229	strbuf.h	FUNCTION_28
0x4000215	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_28
0x400021a	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_28
0x400021f	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4000223	          0x4885ed	                           test rbp, rbp	       286	quote.c	FUNCTION_14	CALL_10
0x4000226	            0x740d	                            je 0x4000235	       286	quote.c	FUNCTION_14	CALL_10
0x4000228	          0x4889ee	                            mov rsi, rbp	       286	quote.c	FUNCTION_14	CALL_10
0x400022b	      0xbf22000000	                           mov edi, 0x22	       286	quote.c	FUNCTION_14	CALL_10
0x4000230	      0xe800000000	                          call 0x4000235	       286	quote.c	FUNCTION_14	CALL_10
0x4000235	        0x488d4301	                      lea rax, [rbx + 1]	       286	quote.c	FUNCTION_14	CALL_10
0x4000239	        0x4883c428	                           add rsp, 0x28	       288	quote.c	FUNCTION_14
0x400023d	              0x5b	                                 pop rbx	       288	quote.c	FUNCTION_14
0x400023e	              0x5d	                                 pop rbp	       288	quote.c	FUNCTION_14
0x400023f	            0x415c	                                 pop r12	       288	quote.c	FUNCTION_14
0x4000241	            0x415d	                                 pop r13	       288	quote.c	FUNCTION_14
0x4000243	            0x415e	                                 pop r14	       288	quote.c	FUNCTION_14
0x4000245	            0x415f	                                 pop r15	       288	quote.c	FUNCTION_14
0x4000247	              0xc3	                                     ret	       288	quote.c	FUNCTION_14
0x4000248	     0xf1f84000000	                   nop dword [rax + rax]	       288	quote.c	FUNCTION_14
0x4000250	        0x488d4302	                      lea rax, [rbx + 2]	       288	quote.c	FUNCTION_14
0x4000254	        0x4b8d1c37	                    lea rbx, [r15 + r14]	       288	quote.c	FUNCTION_14
0x4000258	      0x4889442408	                mov qword [rsp + 8], rax	       288	quote.c	FUNCTION_14
0x400025d	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	       263	quote.c	FUNCTION_14	FOR_1	IF_2
0x4000261	            0x85c9	                           test ecx, ecx	       263	quote.c	FUNCTION_14	FOR_1	IF_2
0x4000263	            0x7562	                           jne 0x40002c7	       263	quote.c	FUNCTION_14	FOR_1	IF_2
0x4000265	      0x4c3b7c2418	            cmp r15, qword [rsp + 0x18] 	       263	quote.c	FUNCTION_14	FOR_1	IF_2
0x400026a	            0x755b	                           jne 0x40002c7	       263	quote.c	FUNCTION_14	FOR_1	IF_2
0x400026c	          0x4d85e4	                           test r12, r12	       264	quote.c	FUNCTION_14	FOR_1	CALL_2
0x400026f	            0x743f	                            je 0x40002b0	       264	quote.c	FUNCTION_14	FOR_1	CALL_2
0x4000271	        0x498b0424	                    mov rax, qword [r12]	       264	quote.c	FUNCTION_14	FOR_1	CALL_2
0x4000275	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4000278	     0xf8572030000	                           jne 0x40005f0	       141	strbuf.h	FUNCTION_26
0x400027e	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000283	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000286	      0xe800000000	                          call 0x400028b	       228	strbuf.h	FUNCTION_28	CALL_2
0x400028b	      0x498b542408	                mov rdx, qword [r12 + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000290	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4000295	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4000299	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_28
0x400029e	        0xc6041022	              mov byte [rax + rdx], 0x22	       229	strbuf.h	FUNCTION_28
0x40002a2	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40002a7	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_28
0x40002ac	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40002b0	          0x4885ed	                           test rbp, rbp	       264	quote.c	FUNCTION_14	FOR_1	CALL_2
0x40002b3	            0x740d	                            je 0x40002c2	       264	quote.c	FUNCTION_14	FOR_1	CALL_2
0x40002b5	          0x4889ee	                            mov rsi, rbp	       264	quote.c	FUNCTION_14	FOR_1	CALL_2
0x40002b8	      0xbf22000000	                           mov edi, 0x22	       264	quote.c	FUNCTION_14	FOR_1	CALL_2
0x40002bd	      0xe800000000	                          call 0x40002c2	       264	quote.c	FUNCTION_14	FOR_1	CALL_2
0x40002c2	      0x4883042401	                      add qword [rsp], 1	       264	quote.c	FUNCTION_14	FOR_1	CALL_2
0x40002c7	          0x4d85e4	                           test r12, r12	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x40002ca	     0xf8400030000	                            je 0x40005d0	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x40002d0	          0x4c89f2	                            mov rdx, r14	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x40002d3	          0x4c89fe	                            mov rsi, r15	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x40002d6	          0x4c89e7	                            mov rdi, r12	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x40002d9	      0xe800000000	                          call 0x40002de	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x40002de	          0x4885ed	                           test rbp, rbp	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x40002e1	     0xf843a040000	                            je 0x4000721	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x40002e7	          0x4889e9	                            mov rcx, rbp	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x40002ea	      0xba01000000	                              mov edx, 1	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x40002ef	          0x4c89f6	                            mov rsi, r14	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x40002f2	          0x4c89ff	                            mov rdi, r15	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x40002f5	      0xe800000000	                          call 0x40002fa	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x40002fa	        0x488b0424	                    mov rax, qword [rsp]	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x40002fe	          0x4c01f0	                            add rax, r14	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x4000301	        0x48890424	                    mov qword [rsp], rax	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x4000305	        0x498b0424	                    mov rax, qword [r12]	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x4000309	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x400030c	     0xf859e020000	                           jne 0x40005b0	       141	strbuf.h	FUNCTION_26
0x4000312	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000317	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_28	CALL_2
0x400031a	      0xe800000000	                          call 0x400031f	       228	strbuf.h	FUNCTION_28	CALL_2
0x400031f	      0x498b542408	                mov rdx, qword [r12 + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000324	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4000329	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x400032d	          0x4885ed	                           test rbp, rbp	       267	quote.c	FUNCTION_14	FOR_1	CALL_4
0x4000330	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4000335	        0xc604105c	              mov byte [rax + rdx], 0x5c	       229	strbuf.h	FUNCTION_28
0x4000339	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_28
0x400033e	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_28
0x4000343	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4000347	            0x740d	                            je 0x4000356	       267	quote.c	FUNCTION_14	FOR_1	CALL_4
0x4000349	          0x4889ee	                            mov rsi, rbp	       267	quote.c	FUNCTION_14	FOR_1	CALL_4
0x400034c	      0xbf5c000000	                           mov edi, 0x5c	       267	quote.c	FUNCTION_14	FOR_1	CALL_4
0x4000351	      0xe800000000	                          call 0x4000356	       267	quote.c	FUNCTION_14	FOR_1	CALL_4
0x4000356	           0xfb61b	                   movzx ebx, byte [rbx]	       269	quote.c	FUNCTION_14	FOR_1
0x4000359	      0x4c037c2408	                add r15, qword [rsp + 8]	       269	quote.c	FUNCTION_14	FOR_1
0x400035e	          0x4d85ed	                           test r13, r13	       270	quote.c	FUNCTION_14	FOR_1	IF_3
0x4000361	          0x4189d8	                            mov r8d, ebx	       269	quote.c	FUNCTION_14	FOR_1
0x4000364	            0x780a	                            js 0x4000370	       270	quote.c	FUNCTION_14	FOR_1	IF_3
0x4000366	        0x4d8d55ff	                      lea r10, [r13 - 1]	       271	quote.c	FUNCTION_14	FOR_1	IF_3
0x400036a	          0x4d29f2	                            sub r10, r14	       271	quote.c	FUNCTION_14	FOR_1	IF_3
0x400036d	          0x4d89d5	                            mov r13, r10	       271	quote.c	FUNCTION_14	FOR_1	IF_3
0x4000370	          0x4863c3	                         movsxd rax, ebx	       272	quote.c	FUNCTION_14	FOR_1	IF_4
0x4000373	    0x440fb6b00000	                  movzx r14d, byte [rax]	       272	quote.c	FUNCTION_14	FOR_1	IF_4
0x400037b	        0x4180fe1f	                          cmp r14b, 0x1f	       272	quote.c	FUNCTION_14	FOR_1	IF_4
0x400037f	     0xf8ecb000000	                           jle 0x4000450	       272	quote.c	FUNCTION_14	FOR_1	IF_4
0x4000385	          0x4d85e4	                           test r12, r12	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0x4000388	            0x743f	                            je 0x40003c9	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0x400038a	        0x498b1424	                    mov rdx, qword [r12]	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0x400038e	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_26
0x4000391	     0xf85d9020000	                           jne 0x4000670	       141	strbuf.h	FUNCTION_26
0x4000397	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400039c	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_28	CALL_2
0x400039f	      0xe800000000	                          call 0x40003a4	       228	strbuf.h	FUNCTION_28	CALL_2
0x40003a4	      0x498b4c2408	                mov rcx, qword [r12 + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x40003a9	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40003ae	        0x488d7101	                      lea rsi, [rcx + 1]	       229	strbuf.h	FUNCTION_28
0x40003b2	      0x4989742408	                mov qword [r12 + 8], rsi	       229	strbuf.h	FUNCTION_28
0x40003b7	        0x4488340a	              mov byte [rdx + rcx], r14b	       229	strbuf.h	FUNCTION_28
0x40003bb	      0x498b4c2410	            mov rcx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40003c0	      0x498b542408	                mov rdx, qword [r12 + 8]	       230	strbuf.h	FUNCTION_28
0x40003c5	        0xc6041100	                 mov byte [rcx + rdx], 0	       230	strbuf.h	FUNCTION_28
0x40003c9	          0x4885ed	                           test rbp, rbp	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0x40003cc	            0x740c	                            je 0x40003da	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0x40003ce	        0x410fbefe	                         movsx edi, r14b	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0x40003d2	          0x4889ee	                            mov rsi, rbp	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0x40003d5	      0xe800000000	                          call 0x40003da	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0x40003da	        0x488b0424	                    mov rax, qword [rsp]	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0x40003de	        0x4883c002	                              add rax, 2	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0x40003e2	          0x4d85ed	                           test r13, r13	       215	quote.c	FUNCTION_13	IF_1
0x40003e5	        0x48890424	                    mov qword [rsp], rax	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0x40003e9	     0xf894afdffff	                           jns 0x4000139	       215	quote.c	FUNCTION_13	IF_1
0x40003ef	        0x410fb607	                   movzx eax, byte [r15]	       206	quote.c	FUNCTION_12
0x40003f3	    0x8b1500000000	            mov edx, dword [0x040003f9] 	       206	quote.c	FUNCTION_12
0x40003f9	          0x4531f6	                          xor r14d, r14d	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x40003fc	     0xfbe80000000	                   movsx eax, byte [rax]	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4000403	             0x1d0	                            add eax, edx	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4000405	            0x85c0	                           test eax, eax	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4000407	            0x7f26	                            jg 0x400042f	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4000409	     0xf1f80000000	                         nop dword [rax]	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4000410	        0x4983c601	                              add r14, 1	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4000414	      0x430fb60437	             movzx eax, byte [r15 + r14]	       206	quote.c	FUNCTION_12
0x4000419	     0xfbe80000000	                   movsx eax, byte [rax]	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4000420	             0x1d0	                            add eax, edx	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4000422	            0x85c0	                           test eax, eax	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4000424	            0x7eea	                           jle 0x4000410	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4000426	          0x4d39ee	                            cmp r14, r13	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x4000429	     0xf84c1020000	                            je 0x40006f0	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x400042f	        0x4b8d1c37	                    lea rbx, [r15 + r14]	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x4000433	          0x803b00	                       cmp byte [rbx], 0	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x4000436	     0xf84b4020000	                            je 0x40006f0	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x400043c	        0x498d4601	                      lea rax, [r14 + 1]	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x4000440	      0x4889442408	                mov qword [rsp + 8], rax	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x4000445	      0xe913feffff	                           jmp 0x400025d	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x400044a	    0x660f1f440000	                    nop word [rax + rax]	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x4000450	          0x4d85e4	                           test r12, r12	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0x4000453	     0xf8437020000	                            je 0x4000690	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0x4000459	        0x498b1424	                    mov rdx, qword [r12]	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0x400045d	            0x89d8	                            mov eax, ebx	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0x400045f	          0xc1f806	                              sar eax, 6	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0x4000462	        0x448d7030	                  lea r14d, [rax + 0x30]	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0x4000466	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_26
0x4000469	     0xf85c1010000	                           jne 0x4000630	       141	strbuf.h	FUNCTION_26
0x400046f	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000474	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000477	      0x4488442408	                 mov byte [rsp + 8], r8b	       228	strbuf.h	FUNCTION_28	CALL_2
0x400047c	      0xe800000000	                          call 0x4000481	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000481	    0x440fb6442408	               movzx r8d, byte [rsp + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000487	      0x498b4c2408	                mov rcx, qword [r12 + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x400048c	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4000491	        0x488d7101	                      lea rsi, [rcx + 1]	       229	strbuf.h	FUNCTION_28
0x4000495	          0x4885ed	                           test rbp, rbp	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0x4000498	      0x4989742408	                mov qword [r12 + 8], rsi	       229	strbuf.h	FUNCTION_28
0x400049d	        0x4488340a	              mov byte [rdx + rcx], r14b	       229	strbuf.h	FUNCTION_28
0x40004a1	      0x498b4c2410	            mov rcx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40004a6	      0x498b542408	                mov rdx, qword [r12 + 8]	       230	strbuf.h	FUNCTION_28
0x40004ab	        0xc6041100	                 mov byte [rcx + rdx], 0	       230	strbuf.h	FUNCTION_28
0x40004af	            0x741f	                            je 0x40004d0	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0x40004b1	          0x4889ee	                            mov rsi, rbp	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0x40004b4	          0x4489f7	                           mov edi, r14d	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0x40004b7	      0x4488442408	                 mov byte [rsp + 8], r8b	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0x40004bc	      0xe800000000	                          call 0x40004c1	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0x40004c1	          0x4d85e4	                           test r12, r12	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x40004c4	    0x440fb6442408	               movzx r8d, byte [rsp + 8]	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x40004ca	     0xf84e0010000	                            je 0x40006b0	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x40004d0	        0x498b1424	                    mov rdx, qword [r12]	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x40004d4	            0x89d8	                            mov eax, ebx	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x40004d6	          0xc1f803	                              sar eax, 3	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x40004d9	          0x83e007	                              and eax, 7	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x40004dc	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_26
0x40004df	        0x448d7030	                  lea r14d, [rax + 0x30]	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x40004e3	     0xf8527010000	                           jne 0x4000610	       141	strbuf.h	FUNCTION_26
0x40004e9	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40004ee	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_28	CALL_2
0x40004f1	      0x4488442408	                 mov byte [rsp + 8], r8b	       228	strbuf.h	FUNCTION_28	CALL_2
0x40004f6	      0xe800000000	                          call 0x40004fb	       228	strbuf.h	FUNCTION_28	CALL_2
0x40004fb	    0x440fb6442408	               movzx r8d, byte [rsp + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000501	      0x498b4c2408	                mov rcx, qword [r12 + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000506	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_28
0x400050b	        0x488d7101	                      lea rsi, [rcx + 1]	       229	strbuf.h	FUNCTION_28
0x400050f	          0x4885ed	                           test rbp, rbp	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x4000512	      0x4989742408	                mov qword [r12 + 8], rsi	       229	strbuf.h	FUNCTION_28
0x4000517	        0x4488340a	              mov byte [rdx + rcx], r14b	       229	strbuf.h	FUNCTION_28
0x400051b	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4000520	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_28
0x4000525	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4000529	            0x741c	                            je 0x4000547	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x400052b	          0xc1fb03	                              sar ebx, 3	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x400052e	          0x4889ee	                            mov rsi, rbp	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x4000531	      0x4488442408	                 mov byte [rsp + 8], r8b	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x4000536	          0x83e307	                              and ebx, 7	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x4000539	          0x8d7b30	                   lea edi, [rbx + 0x30]	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x400053c	      0xe800000000	                          call 0x4000541	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x4000541	    0x440fb6442408	               movzx r8d, byte [rsp + 8]	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x4000547	          0x4489c0	                            mov eax, r8d	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0x400054a	          0x83e007	                              and eax, 7	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0x400054d	          0x8d5830	                   lea ebx, [rax + 0x30]	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0x4000550	        0x498b0424	                    mov rax, qword [r12]	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0x4000554	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4000557	     0xf85f3000000	                           jne 0x4000650	       141	strbuf.h	FUNCTION_26
0x400055d	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000562	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000565	      0xe800000000	                          call 0x400056a	       228	strbuf.h	FUNCTION_28	CALL_2
0x400056a	      0x498b542408	                mov rdx, qword [r12 + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x400056f	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4000574	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4000578	          0x4885ed	                           test rbp, rbp	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0x400057b	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4000580	          0x881c10	                mov byte [rax + rdx], bl	       229	strbuf.h	FUNCTION_28
0x4000583	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4000588	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_28
0x400058d	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4000591	            0x740a	                            je 0x400059d	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0x4000593	          0x4889ee	                            mov rsi, rbp	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0x4000596	            0x89df	                            mov edi, ebx	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0x4000598	      0xe800000000	                          call 0x400059d	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0x400059d	        0x488b0424	                    mov rax, qword [rsp]	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0x40005a1	        0x4883c004	                              add rax, 4	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0x40005a5	        0x48890424	                    mov qword [rsp], rax	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0x40005a9	      0xe982fbffff	                           jmp 0x4000130	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0x40005ae	            0x6690	                                     nop	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0x40005b0	      0x498b542408	                mov rdx, qword [r12 + 8]	       141	strbuf.h	FUNCTION_26
0x40005b5	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40005b9	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40005bc	     0xf8562fdffff	                           jne 0x4000324	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40005c2	      0xe94bfdffff	                           jmp 0x4000312	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40005c7	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40005d0	          0x4885ed	                           test rbp, rbp	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x40005d3	     0xf8558010000	                           jne 0x4000731	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x40005d9	        0x488b0424	                    mov rax, qword [rsp]	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x40005dd	          0x4c01f0	                            add rax, r14	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x40005e0	        0x48890424	                    mov qword [rsp], rax	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x40005e4	      0xe96dfdffff	                           jmp 0x4000356	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x40005e9	     0xf1f80000000	                         nop dword [rax]	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x40005f0	      0x498b542408	                mov rdx, qword [r12 + 8]	       141	strbuf.h	FUNCTION_26
0x40005f5	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40005f9	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40005fc	     0xf858efcffff	                           jne 0x4000290	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000602	      0xe977fcffff	                           jmp 0x400027e	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000607	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000610	      0x498b4c2408	                mov rcx, qword [r12 + 8]	       141	strbuf.h	FUNCTION_26
0x4000615	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000619	          0x4839d1	                            cmp rcx, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400061c	     0xf85e4feffff	                           jne 0x4000506	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000622	      0xe9c2feffff	                           jmp 0x40004e9	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000627	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000630	      0x498b4c2408	                mov rcx, qword [r12 + 8]	       141	strbuf.h	FUNCTION_26
0x4000635	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000639	          0x4839d1	                            cmp rcx, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400063c	     0xf854afeffff	                           jne 0x400048c	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000642	      0xe928feffff	                           jmp 0x400046f	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000647	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000650	      0x498b542408	                mov rdx, qword [r12 + 8]	       141	strbuf.h	FUNCTION_26
0x4000655	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000659	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400065c	     0xf850dffffff	                           jne 0x400056f	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000662	      0xe9f6feffff	                           jmp 0x400055d	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000667	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000670	      0x498b4c2408	                mov rcx, qword [r12 + 8]	       141	strbuf.h	FUNCTION_26
0x4000675	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000679	          0x4839d1	                            cmp rcx, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400067c	     0xf8527fdffff	                           jne 0x40003a9	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000682	      0xe910fdffff	                           jmp 0x4000397	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000687	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000690	          0x4885ed	                           test rbp, rbp	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0x4000693	     0xf8404ffffff	                            je 0x400059d	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0x4000699	            0x89d8	                            mov eax, ebx	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0x400069b	          0xc1f806	                              sar eax, 6	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0x400069e	        0x448d7030	                  lea r14d, [rax + 0x30]	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0x40006a2	      0xe90afeffff	                           jmp 0x40004b1	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0x40006a7	    0x660f1f840000	                    nop word [rax + rax]	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0x40006b0	            0x89df	                            mov edi, ebx	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x40006b2	          0x4889ee	                            mov rsi, rbp	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x40006b5	      0x4488442408	                 mov byte [rsp + 8], r8b	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x40006ba	          0xc1ff03	                              sar edi, 3	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x40006bd	          0x83e707	                              and edi, 7	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x40006c0	          0x83c730	                           add edi, 0x30	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x40006c3	      0xe800000000	                          call 0x40006c8	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x40006c8	    0x440fb6442408	               movzx r8d, byte [rsp + 8]	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x40006ce	          0x4489c0	                            mov eax, r8d	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x40006d1	          0x83e007	                              and eax, 7	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x40006d4	          0x8d5830	                   lea ebx, [rax + 0x30]	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x40006d7	      0xe9b7feffff	                           jmp 0x4000593	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0x40006dc	          0x4c89fb	                            mov rbx, r15	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x40006df	    0x48c744240801	                  mov qword [rsp + 8], 1	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x40006e8	          0x4531f6	                          xor r14d, r14d	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x40006eb	      0xe96dfbffff	                           jmp 0x400025d	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x40006f0	          0x4d89f0	                             mov r8, r14	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x40006f3	      0xe98bfaffff	                           jmp 0x4000183	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x40006f8	      0x498b442408	                mov rax, qword [r12 + 8]	       141	strbuf.h	FUNCTION_26
0x40006fd	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000701	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000704	     0xf85f9faffff	                           jne 0x4000203	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400070a	      0xe9e2faffff	                           jmp 0x40001f1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400070f	              0x90	                                     nop	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000710	        0x4883c428	                           add rsp, 0x28	       288	quote.c	FUNCTION_14
0x4000714	            0x31c0	                            xor eax, eax	       283	quote.c	FUNCTION_14	IF_5
0x4000716	              0x5b	                                 pop rbx	       288	quote.c	FUNCTION_14
0x4000717	              0x5d	                                 pop rbp	       288	quote.c	FUNCTION_14
0x4000718	            0x415c	                                 pop r12	       288	quote.c	FUNCTION_14
0x400071a	            0x415d	                                 pop r13	       288	quote.c	FUNCTION_14
0x400071c	            0x415e	                                 pop r14	       288	quote.c	FUNCTION_14
0x400071e	            0x415f	                                 pop r15	       288	quote.c	FUNCTION_14
0x4000720	              0xc3	                                     ret	       288	quote.c	FUNCTION_14
0x4000721	        0x488b0424	                    mov rax, qword [rsp]	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x4000725	          0x4c01f0	                            add rax, r14	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x4000728	        0x48890424	                    mov qword [rsp], rax	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x400072c	      0xe9d4fbffff	                           jmp 0x4000305	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x4000731	          0x4889e9	                            mov rcx, rbp	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x4000734	      0xba01000000	                              mov edx, 1	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x4000739	          0x4c89f6	                            mov rsi, r14	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x400073c	          0x4c89ff	                            mov rdi, r15	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x400073f	      0xe800000000	                          call 0x4000744	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x4000744	        0x488b0424	                    mov rax, qword [rsp]	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x4000748	          0x4c01f0	                            add rax, r14	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x400074b	        0x48890424	                    mov qword [rsp], rax	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0x400074f	      0xe9f5fbffff	                           jmp 0x4000349	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
sq_quotef	FOR,0:ELSE,0:SWITCH,0:DO,0:WHILE,0:IF,0:CALL,5:functions,0	44
0x4000a00	              0x53	                                push rbx	        63	quote.c	FUNCTION_4
0x4000a01	          0x4889fb	                            mov rbx, rdi	        63	quote.c	FUNCTION_4
0x4000a04	    0x4881ecf00000	                           sub rsp, 0xf0	        63	quote.c	FUNCTION_4
0x4000a0b	            0x84c0	                             test al, al	        63	quote.c	FUNCTION_4
0x4000a0d	      0x4889542450	             mov qword [rsp + 0x50], rdx	        63	quote.c	FUNCTION_4
0x4000a12	      0x48894c2458	             mov qword [rsp + 0x58], rcx	        63	quote.c	FUNCTION_4
0x4000a17	      0x4c89442460	              mov qword [rsp + 0x60], r8	        63	quote.c	FUNCTION_4
0x4000a1c	      0x4c894c2468	              mov qword [rsp + 0x68], r9	        63	quote.c	FUNCTION_4
0x4000a21	            0x743d	                            je 0x4000a60	        63	quote.c	FUNCTION_4
0x4000a23	       0xf29442470	       movaps xmmword [rsp + 0x70], xmm0	        63	quote.c	FUNCTION_4
0x4000a28	     0xf298c248000	       movaps xmmword [rsp + 0x80], xmm1	        63	quote.c	FUNCTION_4
0x4000a30	     0xf2994249000	       movaps xmmword [rsp + 0x90], xmm2	        63	quote.c	FUNCTION_4
0x4000a38	     0xf299c24a000	       movaps xmmword [rsp + 0xa0], xmm3	        63	quote.c	FUNCTION_4
0x4000a40	     0xf29a424b000	       movaps xmmword [rsp + 0xb0], xmm4	        63	quote.c	FUNCTION_4
0x4000a48	     0xf29ac24c000	       movaps xmmword [rsp + 0xc0], xmm5	        63	quote.c	FUNCTION_4
0x4000a50	     0xf29b424d000	       movaps xmmword [rsp + 0xd0], xmm6	        63	quote.c	FUNCTION_4
0x4000a58	     0xf29bc24e000	       movaps xmmword [rsp + 0xe0], xmm7	        63	quote.c	FUNCTION_4
0x4000a60	    0x64488b042528	                mov rax, qword fs:[0x28]	        63	quote.c	FUNCTION_4
0x4000a69	      0x4889442438	             mov qword [rsp + 0x38], rax	        63	quote.c	FUNCTION_4
0x4000a6e	            0x31c0	                            xor eax, eax	        63	quote.c	FUNCTION_4
0x4000a70	    0x488d84240001	                  lea rax, [rsp + 0x100]	        67	quote.c	FUNCTION_4	CALL_1
0x4000a78	      0x488d542420	                   lea rdx, [rsp + 0x20]	        68	quote.c	FUNCTION_4	CALL_2
0x4000a7d	          0x4889e7	                            mov rdi, rsp	        68	quote.c	FUNCTION_4	CALL_2
0x4000a80	      0x4889442428	             mov qword [rsp + 0x28], rax	        67	quote.c	FUNCTION_4	CALL_1
0x4000a85	      0x488d442440	                   lea rax, [rsp + 0x40]	        67	quote.c	FUNCTION_4	CALL_1
0x4000a8a	    0x48c704240000	                      mov qword [rsp], 0	        64	quote.c	FUNCTION_4
0x4000a92	    0x48c744240800	                  mov qword [rsp + 8], 0	        64	quote.c	FUNCTION_4
0x4000a9b	    0x48c744241000	               mov qword [rsp + 0x10], 0	        64	quote.c	FUNCTION_4
0x4000aa4	      0x4889442430	             mov qword [rsp + 0x30], rax	        67	quote.c	FUNCTION_4	CALL_1
0x4000aa9	    0xc74424201000	           mov dword [rsp + 0x20], 0x10 	        67	quote.c	FUNCTION_4	CALL_1
0x4000ab1	    0xc74424243000	           mov dword [rsp + 0x24], 0x30 	        67	quote.c	FUNCTION_4	CALL_1
0x4000ab9	      0xe800000000	                          call 0x4000abe	        68	quote.c	FUNCTION_4	CALL_2
0x4000abe	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        71	quote.c	FUNCTION_4	CALL_4
0x4000ac3	          0x4889df	                            mov rdi, rbx	        71	quote.c	FUNCTION_4	CALL_4
0x4000ac6	      0xe800000000	                          call 0x4000acb	        71	quote.c	FUNCTION_4	CALL_4
0x4000acb	          0x4889e7	                            mov rdi, rsp	        72	quote.c	FUNCTION_4	CALL_5
0x4000ace	      0xe800000000	                          call 0x4000ad3	        72	quote.c	FUNCTION_4	CALL_5
0x4000ad3	      0x488b442438	            mov rax, qword [rsp + 0x38] 	        73	quote.c	FUNCTION_4
0x4000ad8	    0x644833042528	                xor rax, qword fs:[0x28]	        73	quote.c	FUNCTION_4
0x4000ae1	            0x7509	                           jne 0x4000aec	        73	quote.c	FUNCTION_4
0x4000ae3	    0x4881c4f00000	                           add rsp, 0xf0	        73	quote.c	FUNCTION_4
0x4000aea	              0x5b	                                 pop rbx	        73	quote.c	FUNCTION_4
0x4000aeb	              0xc3	                                     ret	        73	quote.c	FUNCTION_4
0x4000aec	      0xe800000000	                          call 0x4000af1	        73	quote.c	FUNCTION_4
sq_quote_argv	FOR,1:ELSE,0:SWITCH,0:DO,0:WHILE,0:IF,0:CALL,3:functions,0	41
0x4000b00	              0x55	                                push rbp	        76	quote.c	FUNCTION_5
0x4000b01	              0x53	                                push rbx	        76	quote.c	FUNCTION_5
0x4000b02	          0x4889f5	                            mov rbp, rsi	        76	quote.c	FUNCTION_5
0x4000b05	      0xbeff000000	                           mov esi, 0xff	        80	quote.c	FUNCTION_5	CALL_1
0x4000b0a	          0x4889fb	                            mov rbx, rdi	        76	quote.c	FUNCTION_5
0x4000b0d	        0x4883ec08	                              sub rsp, 8	        76	quote.c	FUNCTION_5
0x4000b11	      0xe800000000	                          call 0x4000b16	        80	quote.c	FUNCTION_5	CALL_1
0x4000b16	      0x48837d0000	                      cmp qword [rbp], 0	        81	quote.c	FUNCTION_5	FOR_1
0x4000b1b	            0x7547	                           jne 0x4000b64	        81	quote.c	FUNCTION_5	FOR_1
0x4000b1d	            0xeb61	                           jmp 0x4000b80	        81	quote.c	FUNCTION_5	FOR_1
0x4000b1f	              0x90	                                     nop	        81	quote.c	FUNCTION_5	FOR_1
0x4000b20	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000b25	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000b28	      0xe800000000	                          call 0x4000b2d	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000b2d	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000b31	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4000b35	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4000b39	          0x4889df	                            mov rdi, rbx	        83	quote.c	FUNCTION_5	FOR_1	CALL_3
0x4000b3c	        0x4883c508	                              add rbp, 8	        81	quote.c	FUNCTION_5	FOR_1
0x4000b40	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4000b44	        0xc6041020	              mov byte [rax + rdx], 0x20	       229	strbuf.h	FUNCTION_28
0x4000b48	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4000b4c	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4000b50	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4000b54	        0x488b75f8	                mov rsi, qword [rbp - 8]	        83	quote.c	FUNCTION_5	FOR_1	CALL_3
0x4000b58	      0xe800000000	                          call 0x4000b5d	        83	quote.c	FUNCTION_5	FOR_1	CALL_3
0x4000b5d	      0x48837d0000	                      cmp qword [rbp], 0	        81	quote.c	FUNCTION_5	FOR_1
0x4000b62	            0x741c	                            je 0x4000b80	        81	quote.c	FUNCTION_5	FOR_1
0x4000b64	          0x488b03	                    mov rax, qword [rbx]	        81	quote.c	FUNCTION_5	FOR_1
0x4000b67	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4000b6a	            0x74b4	                            je 0x4000b20	       141	strbuf.h	FUNCTION_26
0x4000b6c	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4000b70	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000b74	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000b77	            0x75b8	                           jne 0x4000b31	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000b79	            0xeba5	                           jmp 0x4000b20	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000b7b	       0xf1f440000	                   nop dword [rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000b80	        0x4883c408	                              add rsp, 8	        85	quote.c	FUNCTION_5
0x4000b84	              0x5b	                                 pop rbx	        85	quote.c	FUNCTION_5
0x4000b85	              0x5d	                                 pop rbp	        85	quote.c	FUNCTION_5
0x4000b86	              0xc3	                                     ret	        85	quote.c	FUNCTION_5
write_name_quoted	FOR,0:ELSE,1:SWITCH,0:DO,0:WHILE,0:IF,1:CALL,3:functions,0	26
0x4000f70	              0x55	                                push rbp	       312	quote.c	FUNCTION_17
0x4000f71	              0x53	                                push rbx	       312	quote.c	FUNCTION_17
0x4000f72	          0x4889f5	                            mov rbp, rsi	       312	quote.c	FUNCTION_17
0x4000f75	            0x89d3	                            mov ebx, edx	       312	quote.c	FUNCTION_17
0x4000f77	        0x4883ec08	                              sub rsp, 8	       312	quote.c	FUNCTION_17
0x4000f7b	            0x85d2	                           test edx, edx	       313	quote.c	FUNCTION_17	IF_1
0x4000f7d	            0x7519	                           jne 0x4000f98	       313	quote.c	FUNCTION_17	IF_1
0x4000f7f	      0xe800000000	                          call 0x4000f84	       316	quote.c	FUNCTION_17	ELSE_1	CALL_2
0x4000f84	        0x4883c408	                              add rsp, 8	       319	quote.c	FUNCTION_17
0x4000f88	          0x4889ee	                            mov rsi, rbp	       318	quote.c	FUNCTION_17	CALL_3
0x4000f8b	            0x89df	                            mov edi, ebx	       318	quote.c	FUNCTION_17	CALL_3
0x4000f8d	              0x5b	                                 pop rbx	       319	quote.c	FUNCTION_17
0x4000f8e	              0x5d	                                 pop rbp	       319	quote.c	FUNCTION_17
0x4000f8f	      0xe900000000	                           jmp 0x4000f94	       318	quote.c	FUNCTION_17	CALL_3
0x4000f94	         0xf1f4000	                         nop dword [rax]	       318	quote.c	FUNCTION_17	CALL_3
0x4000f98	          0x4889f1	                            mov rcx, rsi	       292	quote.c	FUNCTION_15	CALL_1
0x4000f9b	          0x4531c0	                            xor r8d, r8d	       292	quote.c	FUNCTION_15	CALL_1
0x4000f9e	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       292	quote.c	FUNCTION_15	CALL_1
0x4000fa5	            0x31d2	                            xor edx, edx	       292	quote.c	FUNCTION_15	CALL_1
0x4000fa7	      0xe854f1ffff	          call sym.quote_c_style_counted	       292	quote.c	FUNCTION_15	CALL_1
0x4000fac	        0x4883c408	                              add rsp, 8	       319	quote.c	FUNCTION_17
0x4000fb0	          0x4889ee	                            mov rsi, rbp	       318	quote.c	FUNCTION_17	CALL_3
0x4000fb3	            0x89df	                            mov edi, ebx	       318	quote.c	FUNCTION_17	CALL_3
0x4000fb5	              0x5b	                                 pop rbx	       319	quote.c	FUNCTION_17
0x4000fb6	              0x5d	                                 pop rbp	       319	quote.c	FUNCTION_17
0x4000fb7	      0xe900000000	                           jmp 0x4000fbc	       318	quote.c	FUNCTION_17	CALL_3
sq_dequote_to_argv_array	FOR,0:ELSE,0:SWITCH,0:DO,0:WHILE,0:IF,0:CALL,1:functions,0	34
0x4000d20	              0x53	                                push rbx	       180	quote.c	FUNCTION_11
0x4000d21	          0x4889f3	                            mov rbx, rsi	       180	quote.c	FUNCTION_11
0x4000d24	        0x4883ec10	                           sub rsp, 0x10	       180	quote.c	FUNCTION_11
0x4000d28	    0x64488b042528	                mov rax, qword fs:[0x28]	       180	quote.c	FUNCTION_11
0x4000d31	      0x4889442408	                mov qword [rsp + 8], rax	       180	quote.c	FUNCTION_11
0x4000d36	            0x31c0	                            xor eax, eax	       180	quote.c	FUNCTION_11
0x4000d38	          0x803f00	                       cmp byte [rdi], 0	       157	quote.c	FUNCTION_9	IF_1
0x4000d3b	        0x48893c24	                    mov qword [rsp], rdi	       155	quote.c	FUNCTION_9
0x4000d3f	            0x7520	                           jne 0x4000d61	       157	quote.c	FUNCTION_9	IF_1
0x4000d41	            0xeb35	                           jmp 0x4000d78	       157	quote.c	FUNCTION_9	IF_1
0x4000d43	       0xf1f440000	                   nop dword [rax + rax]	       157	quote.c	FUNCTION_9	IF_1
0x4000d48	          0x4885db	                           test rbx, rbx	       167	quote.c	FUNCTION_9	DO_1	IF_4
0x4000d4b	            0x740b	                            je 0x4000d58	       167	quote.c	FUNCTION_9	DO_1	IF_4
0x4000d4d	          0x4889c6	                            mov rsi, rax	       168	quote.c	FUNCTION_9	DO_1	CALL_3
0x4000d50	          0x4889df	                            mov rdi, rbx	       168	quote.c	FUNCTION_9	DO_1	CALL_3
0x4000d53	      0xe800000000	                          call 0x4000d58	       168	quote.c	FUNCTION_9	DO_1	CALL_3
0x4000d58	        0x488b3c24	                    mov rdi, qword [rsp]	       169	quote.c	FUNCTION_9	DO_1
0x4000d5c	          0x4885ff	                           test rdi, rdi	       169	quote.c	FUNCTION_9	DO_1
0x4000d5f	            0x7417	                            je 0x4000d78	       169	quote.c	FUNCTION_9	DO_1
0x4000d61	          0x4889e6	                            mov rsi, rsp	       160	quote.c	FUNCTION_9	DO_1	CALL_1
0x4000d64	      0xe8d7f2ffff	                call sym.sq_dequote_step	       160	quote.c	FUNCTION_9	DO_1	CALL_1
0x4000d69	          0x4885c0	                           test rax, rax	       161	quote.c	FUNCTION_9	DO_1	IF_2
0x4000d6c	            0x75da	                           jne 0x4000d48	       161	quote.c	FUNCTION_9	DO_1	IF_2
0x4000d6e	      0xb8ffffffff	                     mov eax, 0xffffffff	       162	quote.c	FUNCTION_9	DO_1	IF_2
0x4000d73	            0xeb05	                           jmp 0x4000d7a	       162	quote.c	FUNCTION_9	DO_1	IF_2
0x4000d75	           0xf1f00	                         nop dword [rax]	       162	quote.c	FUNCTION_9	DO_1	IF_2
0x4000d78	            0x31c0	                            xor eax, eax	       158	quote.c	FUNCTION_9	IF_1
0x4000d7a	      0x488b542408	                mov rdx, qword [rsp + 8]	       182	quote.c	FUNCTION_11
0x4000d7f	    0x644833142528	                xor rdx, qword fs:[0x28]	       182	quote.c	FUNCTION_11
0x4000d88	            0x7506	                           jne 0x4000d90	       182	quote.c	FUNCTION_11
0x4000d8a	        0x4883c410	                           add rsp, 0x10	       182	quote.c	FUNCTION_11
0x4000d8e	              0x5b	                                 pop rbx	       182	quote.c	FUNCTION_11
0x4000d8f	              0xc3	                                     ret	       182	quote.c	FUNCTION_11
0x4000d90	      0xe800000000	                          call 0x4000d95	       182	quote.c	FUNCTION_11
unquote_c_style	FOR,1:ELSE,0:SWITCH,2:DO,0:WHILE,0:IF,4:CALL,4:functions,0	157
0x40010e0	            0x4157	                                push r15	       358	quote.c	FUNCTION_20
0x40010e2	            0x4156	                                push r14	       358	quote.c	FUNCTION_20
0x40010e4	            0x4155	                                push r13	       358	quote.c	FUNCTION_20
0x40010e6	            0x4154	                                push r12	       358	quote.c	FUNCTION_20
0x40010e8	              0x55	                                push rbp	       358	quote.c	FUNCTION_20
0x40010e9	              0x53	                                push rbx	       358	quote.c	FUNCTION_20
0x40010ea	        0x4883ec08	                              sub rsp, 8	       358	quote.c	FUNCTION_20
0x40010ee	          0x803e22	                    cmp byte [rsi], 0x22	       362	quote.c	FUNCTION_20	IF_1
0x40010f1	        0x488b5f08	                mov rbx, qword [rdi + 8]	       359	quote.c	FUNCTION_20
0x40010f5	     0xf8570010000	                           jne 0x400126b	       362	quote.c	FUNCTION_20	IF_1
0x40010fb	        0x4c8d7e01	                      lea r15, [rsi + 1]	       362	quote.c	FUNCTION_20	IF_1
0x40010ff	          0x4989fe	                            mov r14, rdi	       362	quote.c	FUNCTION_20	IF_1
0x4001102	          0x4889d5	                            mov rbp, rdx	       362	quote.c	FUNCTION_20	IF_1
0x4001105	        0x410fbe07	                   movsx eax, byte [r15]	       961	string2.h	FUNCTION_70	WHILE_1
0x4001109	            0x84c0	                             test al, al	       961	string2.h	FUNCTION_70	WHILE_1
0x400110b	     0xf8482010000	                            je 0x4001293	       961	string2.h	FUNCTION_70	WHILE_1
0x4001111	          0x83f822	                           cmp eax, 0x22	       962	string2.h	FUNCTION_70	WHILE_1
0x4001114	     0xf8479010000	                            je 0x4001293	       962	string2.h	FUNCTION_70	WHILE_1
0x400111a	          0x83f85c	                           cmp eax, 0x5c	       962	string2.h	FUNCTION_70	WHILE_1
0x400111d	     0xf8470010000	                            je 0x4001293	       962	string2.h	FUNCTION_70	WHILE_1
0x4001123	        0x498d4f01	                      lea rcx, [r15 + 1]	       962	string2.h	FUNCTION_70	WHILE_1
0x4001127	            0x31f6	                            xor esi, esi	       962	string2.h	FUNCTION_70	WHILE_1
0x4001129	            0xeb16	                           jmp 0x4001141	       962	string2.h	FUNCTION_70	WHILE_1
0x400112b	       0xf1f440000	                   nop dword [rax + rax]	       962	string2.h	FUNCTION_70	WHILE_1
0x4001130	        0x4883c101	                              add rcx, 1	       962	string2.h	FUNCTION_70	WHILE_1
0x4001134	          0x83f85c	                           cmp eax, 0x5c	       962	string2.h	FUNCTION_70	WHILE_1
0x4001137	            0x7416	                            je 0x400114f	       962	string2.h	FUNCTION_70	WHILE_1
0x4001139	          0x83f822	                           cmp eax, 0x22	       962	string2.h	FUNCTION_70	WHILE_1
0x400113c	            0x7411	                            je 0x400114f	       962	string2.h	FUNCTION_70	WHILE_1
0x400113e	          0x4889d6	                            mov rsi, rdx	       963	string2.h	FUNCTION_70	WHILE_1
0x4001141	           0xfbe01	                   movsx eax, byte [rcx]	       961	string2.h	FUNCTION_70	WHILE_1
0x4001144	        0x488d5601	                      lea rdx, [rsi + 1]	       963	string2.h	FUNCTION_70	WHILE_1
0x4001148	          0x4989cd	                            mov r13, rcx	       961	string2.h	FUNCTION_70	WHILE_1
0x400114b	            0x84c0	                             test al, al	       961	string2.h	FUNCTION_70	WHILE_1
0x400114d	            0x75e1	                           jne 0x4001130	       961	string2.h	FUNCTION_70	WHILE_1
0x400114f	        0x4c8d6602	                      lea r12, [rsi + 2]	       961	string2.h	FUNCTION_70	WHILE_1
0x4001153	          0x4c89fe	                            mov rsi, r15	       367	quote.c	FUNCTION_20	FOR_1	CALL_2
0x4001156	          0x4c89f7	                            mov rdi, r14	       367	quote.c	FUNCTION_20	FOR_1	CALL_2
0x4001159	      0xe800000000	                          call 0x400115e	       367	quote.c	FUNCTION_20	FOR_1	CALL_2
0x400115e	      0x410fb64500	                   movzx eax, byte [r13]	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x4001163	            0x3c22	                            cmp al, 0x22	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x4001165	     0xf84d5000000	                            je 0x4001240	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x400116b	            0x3c5c	                            cmp al, 0x5c	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x400116d	            0x7441	                            je 0x40011b0	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x400116f	          0x498b06	                    mov rax, qword [r14]	       162	strbuf.h	FUNCTION_27	IF_1
0x4001172	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_27	IF_1
0x4001176	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_27	IF_1
0x400117a	          0x4839c3	                            cmp rbx, rax	       162	strbuf.h	FUNCTION_27	IF_1
0x400117d	     0xf8774010000	                            ja 0x40012f7	       162	strbuf.h	FUNCTION_27	IF_1
0x4001183	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       165	strbuf.h	FUNCTION_27	IF_2
0x4001187	        0x49895e08	                mov qword [r14 + 8], rbx	       164	strbuf.h	FUNCTION_27
0x400118b	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_27	IF_2
0x4001191	     0xf84c7000000	                            je 0x400125e	       165	strbuf.h	FUNCTION_27	IF_2
0x4001197	        0xc6041800	                 mov byte [rax + rbx], 0	       166	strbuf.h	FUNCTION_27	IF_2
0x400119b	      0xb8ffffffff	                     mov eax, 0xffffffff	       412	quote.c	FUNCTION_20
0x40011a0	        0x4883c408	                              add rsp, 8	       413	quote.c	FUNCTION_20
0x40011a4	              0x5b	                                 pop rbx	       413	quote.c	FUNCTION_20
0x40011a5	              0x5d	                                 pop rbp	       413	quote.c	FUNCTION_20
0x40011a6	            0x415c	                                 pop r12	       413	quote.c	FUNCTION_20
0x40011a8	            0x415d	                                 pop r13	       413	quote.c	FUNCTION_20
0x40011aa	            0x415e	                                 pop r14	       413	quote.c	FUNCTION_20
0x40011ac	            0x415f	                                 pop r15	       413	quote.c	FUNCTION_20
0x40011ae	              0xc3	                                     ret	       413	quote.c	FUNCTION_20
0x40011af	              0x90	                                     nop	       413	quote.c	FUNCTION_20
0x40011b0	      0x410fbe5501	               movsx edx, byte [r13 + 1]	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40011b5	        0x4d8d7d02	                      lea r15, [r13 + 2]	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40011b9	          0x8d42de	                   lea eax, [rdx - 0x22]	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40011bc	          0x4189d4	                           mov r12d, edx	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40011bf	            0x3c54	                            cmp al, 0x54	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40011c1	            0x77ac	                            ja 0x400116f	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40011c3	           0xfb6c0	                           movzx eax, al	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40011c6	    0xff24c5000000	                       jmp qword [rax*8]	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40011cd	      0x410fbe4502	               movsx eax, byte [r13 + 2]	       396	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_3
0x40011d2	          0x83ea30	                           sub edx, 0x30	       395	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40011d5	          0xc1e206	                              shl edx, 6	       395	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40011d8	          0x83e830	                           sub eax, 0x30	       396	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_3
0x40011db	          0x83f807	                              cmp eax, 7	       396	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_3
0x40011de	            0x778f	                            ja 0x400116f	       396	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_3
0x40011e0	      0x450fbe6503	              movsx r12d, byte [r13 + 3]	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x40011e5	          0xc1e003	                              shl eax, 3	       398	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40011e8	        0x4d8d7d04	                      lea r15, [r13 + 4]	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x40011ec	             0x9d0	                             or eax, edx	       398	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40011ee	        0x4183ec30	                          sub r12d, 0x30	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x40011f2	        0x4183fc07	                             cmp r12d, 7	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x40011f6	     0xf8773ffffff	                            ja 0x400116f	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x40011fc	          0x4109c4	                            or r12d, eax	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x40011ff	              0x90	                                     nop	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x4001200	          0x498b06	                    mov rax, qword [r14]	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x4001203	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001206	            0x7478	                            je 0x4001280	       141	strbuf.h	FUNCTION_26
0x4001208	        0x498b5608	                mov rdx, qword [r14 + 8]	       141	strbuf.h	FUNCTION_26
0x400120c	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001210	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001213	            0x746b	                            je 0x4001280	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001215	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001219	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x400121d	        0x49894e08	                mov qword [r14 + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001221	        0x44882410	              mov byte [rax + rdx], r12b	       229	strbuf.h	FUNCTION_28
0x4001225	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001229	        0x498b4608	                mov rax, qword [r14 + 8]	       230	strbuf.h	FUNCTION_28
0x400122d	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001231	      0xe9cffeffff	                           jmp 0x4001105	       230	strbuf.h	FUNCTION_28
0x4001236	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       230	strbuf.h	FUNCTION_28
0x4001240	          0x4885ed	                           test rbp, rbp	       372	quote.c	FUNCTION_20	FOR_1	SWITCH_1	IF_2
0x4001243	            0x745e	                            je 0x40012a3	       372	quote.c	FUNCTION_20	FOR_1	SWITCH_1	IF_2
0x4001245	        0x4b8d3427	                    lea rsi, [r15 + r12]	       373	quote.c	FUNCTION_20	FOR_1	SWITCH_1	IF_2
0x4001249	            0x31c0	                            xor eax, eax	       374	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x400124b	        0x48897500	                    mov qword [rbp], rsi	       373	quote.c	FUNCTION_20	FOR_1	SWITCH_1	IF_2
0x400124f	        0x4883c408	                              add rsp, 8	       413	quote.c	FUNCTION_20
0x4001253	              0x5b	                                 pop rbx	       413	quote.c	FUNCTION_20
0x4001254	              0x5d	                                 pop rbp	       413	quote.c	FUNCTION_20
0x4001255	            0x415c	                                 pop r12	       413	quote.c	FUNCTION_20
0x4001257	            0x415d	                                 pop r13	       413	quote.c	FUNCTION_20
0x4001259	            0x415e	                                 pop r14	       413	quote.c	FUNCTION_20
0x400125b	            0x415f	                                 pop r15	       413	quote.c	FUNCTION_20
0x400125d	              0xc3	                                     ret	       413	quote.c	FUNCTION_20
0x400125e	    0x803d00000000	                cmp byte [0x04001265], 0	       168	strbuf.h	FUNCTION_27	CALL_2
0x4001265	     0xf8598000000	                           jne 0x4001303	       168	strbuf.h	FUNCTION_27	CALL_2
0x400126b	        0x4883c408	                              add rsp, 8	       413	quote.c	FUNCTION_20
0x400126f	      0xb8ffffffff	                     mov eax, 0xffffffff	       363	quote.c	FUNCTION_20	IF_1
0x4001274	              0x5b	                                 pop rbx	       413	quote.c	FUNCTION_20
0x4001275	              0x5d	                                 pop rbp	       413	quote.c	FUNCTION_20
0x4001276	            0x415c	                                 pop r12	       413	quote.c	FUNCTION_20
0x4001278	            0x415d	                                 pop r13	       413	quote.c	FUNCTION_20
0x400127a	            0x415e	                                 pop r14	       413	quote.c	FUNCTION_20
0x400127c	            0x415f	                                 pop r15	       413	quote.c	FUNCTION_20
0x400127e	              0xc3	                                     ret	       413	quote.c	FUNCTION_20
0x400127f	              0x90	                                     nop	       413	quote.c	FUNCTION_20
0x4001280	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001285	          0x4c89f7	                            mov rdi, r14	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001288	      0xe800000000	                          call 0x400128d	       228	strbuf.h	FUNCTION_28	CALL_2
0x400128d	        0x498b5608	                mov rdx, qword [r14 + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001291	            0xeb82	                           jmp 0x4001215	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001293	          0x4d89fd	                            mov r13, r15	       962	string2.h	FUNCTION_70	WHILE_1
0x4001296	    0x41bc01000000	                             mov r12d, 1	       962	string2.h	FUNCTION_70	WHILE_1
0x400129c	            0x31d2	                            xor edx, edx	       960	string2.h	FUNCTION_70
0x400129e	      0xe9b0feffff	                           jmp 0x4001153	       960	string2.h	FUNCTION_70
0x40012a3	            0x31c0	                            xor eax, eax	       374	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x40012a5	      0xe9f6feffff	                           jmp 0x40011a0	       374	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x40012aa	    0x41bc07000000	                             mov r12d, 7	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40012b0	      0xe94bffffff	                           jmp 0x4001200	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40012b5	    0x41bc0b000000	                           mov r12d, 0xb	       388	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40012bb	      0xe940ffffff	                           jmp 0x4001200	       388	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40012c0	    0x41bc0c000000	                           mov r12d, 0xc	       384	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40012c6	      0xe935ffffff	                           jmp 0x4001200	       384	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40012cb	    0x41bc0a000000	                           mov r12d, 0xa	       385	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40012d1	      0xe92affffff	                           jmp 0x4001200	       385	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40012d6	    0x41bc0d000000	                           mov r12d, 0xd	       386	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40012dc	      0xe91fffffff	                           jmp 0x4001200	       386	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40012e1	    0x41bc09000000	                             mov r12d, 9	       387	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40012e7	      0xe914ffffff	                           jmp 0x4001200	       387	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40012ec	    0x41bc08000000	                             mov r12d, 8	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40012f2	      0xe909ffffff	                           jmp 0x4001200	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x40012f7	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_27	CALL_1
0x40012fc	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_27	CALL_1
0x40012fe	      0xe800000000	                          call 0x4001303	       163	strbuf.h	FUNCTION_27	CALL_1
0x4001303	      0xe800000000	                          call 0x4001308	       163	strbuf.h	FUNCTION_27	CALL_1
tcl_quote_buf	FOR,0:ELSE,0:SWITCH,1:DO,0:WHILE,1:IF,0:CALL,9:functions,0	156
0x40016f0	            0x4154	                                push r12	       454	quote.c	FUNCTION_23
0x40016f2	              0x55	                                push rbp	       454	quote.c	FUNCTION_23
0x40016f3	          0x4989f4	                            mov r12, rsi	       454	quote.c	FUNCTION_23
0x40016f6	              0x53	                                push rbx	       454	quote.c	FUNCTION_23
0x40016f7	          0x488b07	                    mov rax, qword [rdi]	       454	quote.c	FUNCTION_23
0x40016fa	          0x4889fd	                            mov rbp, rdi	       454	quote.c	FUNCTION_23
0x40016fd	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001700	     0xf854a020000	                           jne 0x4001950	       141	strbuf.h	FUNCTION_26
0x4001706	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400170b	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_28	CALL_2
0x400170e	      0xe800000000	                          call 0x4001713	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001713	        0x488b5508	                mov rdx, qword [rbp + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001717	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_28
0x400171b	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x400171f	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001723	        0xc6041022	              mov byte [rax + rdx], 0x22	       229	strbuf.h	FUNCTION_28
0x4001727	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_28
0x400172b	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_28
0x400172f	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001733	       0xf1f440000	                   nop dword [rax + rax]	       230	strbuf.h	FUNCTION_28
0x4001738	        0x4983c401	                              add r12, 1	       458	quote.c	FUNCTION_23	WHILE_1
0x400173c	    0x410fb65c24ff	               movzx ebx, byte [r12 - 1]	       458	quote.c	FUNCTION_23	WHILE_1
0x4001742	            0x84db	                             test bl, bl	       458	quote.c	FUNCTION_23	WHILE_1
0x4001744	            0x745a	                            je 0x40017a0	       458	quote.c	FUNCTION_23	WHILE_1
0x4001746	          0x80fb22	                            cmp bl, 0x22	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001749	     0xf84cc000000	                            je 0x400181b	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x400174f	     0xf8fb3000000	                            jg 0x4001808	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001755	          0x80fb0b	                             cmp bl, 0xb	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001758	     0xf8432010000	                            je 0x4001890	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x400175e	     0xf8f7c000000	                            jg 0x40017e0	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001764	          0x80fb09	                               cmp bl, 9	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001767	     0xf8453010000	                            je 0x40018c0	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x400176d	          0x80fb0a	                             cmp bl, 0xa	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001770	     0xf85df000000	                           jne 0x4001855	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001776	        0x4983c401	                              add r12, 1	       458	quote.c	FUNCTION_23	WHILE_1
0x400177a	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_29	CALL_2
0x400177f	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001784	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001787	      0xe800000000	                          call 0x400178c	       279	strbuf.h	FUNCTION_29	CALL_2
0x400178c	    0x410fb65c24ff	               movzx ebx, byte [r12 - 1]	       458	quote.c	FUNCTION_23	WHILE_1
0x4001792	            0x84db	                             test bl, bl	       458	quote.c	FUNCTION_23	WHILE_1
0x4001794	            0x75b0	                           jne 0x4001746	       458	quote.c	FUNCTION_23	WHILE_1
0x4001796	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       458	quote.c	FUNCTION_23	WHILE_1
0x40017a0	        0x488b4500	                    mov rax, qword [rbp]	       458	quote.c	FUNCTION_23	WHILE_1
0x40017a4	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40017a7	     0xf858b010000	                           jne 0x4001938	       141	strbuf.h	FUNCTION_26
0x40017ad	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40017b2	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_28	CALL_2
0x40017b5	      0xe800000000	                          call 0x40017ba	       228	strbuf.h	FUNCTION_28	CALL_2
0x40017ba	        0x488b5508	                mov rdx, qword [rbp + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x40017be	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40017c2	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x40017c6	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_28
0x40017ca	        0xc6041022	              mov byte [rax + rdx], 0x22	       229	strbuf.h	FUNCTION_28
0x40017ce	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40017d2	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_28
0x40017d6	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40017da	              0x5b	                                 pop rbx	       486	quote.c	FUNCTION_23
0x40017db	              0x5d	                                 pop rbp	       486	quote.c	FUNCTION_23
0x40017dc	            0x415c	                                 pop r12	       486	quote.c	FUNCTION_23
0x40017de	              0xc3	                                     ret	       486	quote.c	FUNCTION_23
0x40017df	              0x90	                                     nop	       486	quote.c	FUNCTION_23
0x40017e0	          0x80fb0c	                             cmp bl, 0xc	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x40017e3	     0xf84f7000000	                            je 0x40018e0	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x40017e9	          0x80fb0d	                             cmp bl, 0xd	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x40017ec	            0x7567	                           jne 0x4001855	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x40017ee	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_29	CALL_2
0x40017f3	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_29	CALL_2
0x40017f8	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x40017fb	      0xe800000000	                          call 0x4001800	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001800	      0xe933ffffff	                           jmp 0x4001738	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001805	           0xf1f00	                         nop dword [rax]	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001808	          0x80fb5d	                            cmp bl, 0x5d	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x400180b	     0xf8fef000000	                            jg 0x4001900	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001811	          0x80fb5b	                            cmp bl, 0x5b	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001814	            0x7d05	                           jge 0x400181b	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001816	          0x80fb24	                            cmp bl, 0x24	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001819	            0x753a	                           jne 0x4001855	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x400181b	        0x488b4500	                    mov rax, qword [rbp]	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x400181f	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001822	     0xf85f7000000	                           jne 0x400191f	       141	strbuf.h	FUNCTION_26
0x4001828	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400182d	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001830	      0xe800000000	                          call 0x4001835	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001835	        0x488b5508	                mov rdx, qword [rbp + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001839	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_28
0x400183d	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4001841	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001845	        0xc604105c	              mov byte [rax + rdx], 0x5c	       229	strbuf.h	FUNCTION_28
0x4001849	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_28
0x400184d	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_28
0x4001851	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001855	        0x488b4500	                    mov rax, qword [rbp]	       230	strbuf.h	FUNCTION_28
0x4001859	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x400185c	            0x7552	                           jne 0x40018b0	       141	strbuf.h	FUNCTION_26
0x400185e	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001863	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001866	      0xe800000000	                          call 0x400186b	       228	strbuf.h	FUNCTION_28	CALL_2
0x400186b	        0x488b5508	                mov rdx, qword [rbp + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x400186f	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001873	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4001877	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_28
0x400187b	          0x881c10	                mov byte [rax + rdx], bl	       229	strbuf.h	FUNCTION_28
0x400187e	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001882	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_28
0x4001886	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x400188a	      0xe9a9feffff	                           jmp 0x4001738	       230	strbuf.h	FUNCTION_28
0x400188f	              0x90	                                     nop	       230	strbuf.h	FUNCTION_28
0x4001890	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001895	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_29	CALL_2
0x400189a	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x400189d	      0xe800000000	                          call 0x40018a2	       279	strbuf.h	FUNCTION_29	CALL_2
0x40018a2	      0xe991feffff	                           jmp 0x4001738	       279	strbuf.h	FUNCTION_29	CALL_2
0x40018a7	    0x660f1f840000	                    nop word [rax + rax]	       279	strbuf.h	FUNCTION_29	CALL_2
0x40018b0	        0x488b5508	                mov rdx, qword [rbp + 8]	       141	strbuf.h	FUNCTION_26
0x40018b4	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40018b8	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40018bb	            0x75b2	                           jne 0x400186f	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40018bd	            0xeb9f	                           jmp 0x400185e	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40018bf	              0x90	                                     nop	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40018c0	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_29	CALL_2
0x40018c5	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_29	CALL_2
0x40018ca	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x40018cd	      0xe800000000	                          call 0x40018d2	       279	strbuf.h	FUNCTION_29	CALL_2
0x40018d2	      0xe961feffff	                           jmp 0x4001738	       279	strbuf.h	FUNCTION_29	CALL_2
0x40018d7	    0x660f1f840000	                    nop word [rax + rax]	       279	strbuf.h	FUNCTION_29	CALL_2
0x40018e0	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_29	CALL_2
0x40018e5	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_29	CALL_2
0x40018ea	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x40018ed	      0xe800000000	                          call 0x40018f2	       279	strbuf.h	FUNCTION_29	CALL_2
0x40018f2	      0xe941feffff	                           jmp 0x4001738	       279	strbuf.h	FUNCTION_29	CALL_2
0x40018f7	    0x660f1f840000	                    nop word [rax + rax]	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001900	          0x80fb7b	                            cmp bl, 0x7b	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001903	     0xf8412ffffff	                            je 0x400181b	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001909	          0x80fb7d	                            cmp bl, 0x7d	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x400190c	     0xf8543ffffff	                           jne 0x4001855	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001912	        0x488b4500	                    mov rax, qword [rbp]	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001916	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001919	     0xf8409ffffff	                            je 0x4001828	       141	strbuf.h	FUNCTION_26
0x400191f	        0x488b5508	                mov rdx, qword [rbp + 8]	       141	strbuf.h	FUNCTION_26
0x4001923	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001927	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400192a	     0xf8509ffffff	                           jne 0x4001839	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001930	      0xe9f3feffff	                           jmp 0x4001828	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001935	           0xf1f00	                         nop dword [rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001938	        0x488b5508	                mov rdx, qword [rbp + 8]	       141	strbuf.h	FUNCTION_26
0x400193c	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001940	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001943	     0xf8575feffff	                           jne 0x40017be	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001949	      0xe95ffeffff	                           jmp 0x40017ad	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400194e	            0x6690	                                     nop	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001950	        0x488b5708	                mov rdx, qword [rdi + 8]	       141	strbuf.h	FUNCTION_26
0x4001954	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001958	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400195b	     0xf85b6fdffff	                           jne 0x4001717	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001961	      0xe9a0fdffff	                           jmp 0x4001706	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
basic_regex_quote_buf	FOR,0:ELSE,0:SWITCH,1:DO,0:WHILE,1:IF,3:CALL,8:functions,0	164
0x4001970	            0x4155	                                push r13	       489	quote.c	FUNCTION_24
0x4001972	            0x4154	                                push r12	       489	quote.c	FUNCTION_24
0x4001974	          0x4989f4	                            mov r12, rsi	       489	quote.c	FUNCTION_24
0x4001977	              0x55	                                push rbp	       489	quote.c	FUNCTION_24
0x4001978	              0x53	                                push rbx	       489	quote.c	FUNCTION_24
0x4001979	          0x4889fb	                            mov rbx, rdi	       489	quote.c	FUNCTION_24
0x400197c	        0x4883ec08	                              sub rsp, 8	       489	quote.c	FUNCTION_24
0x4001980	           0xfb62e	                   movzx ebp, byte [rsi]	       492	quote.c	FUNCTION_24	IF_1
0x4001983	        0x4080fd5e	                           cmp bpl, 0x5e	       492	quote.c	FUNCTION_24	IF_1
0x4001987	     0xf8483010000	                            je 0x4001b10	       492	quote.c	FUNCTION_24	IF_1
0x400198d	        0x4080fd2a	                           cmp bpl, 0x2a	       497	quote.c	FUNCTION_24	IF_2
0x4001991	     0xf8429010000	                            je 0x4001ac0	       497	quote.c	FUNCTION_24	IF_2
0x4001997	    0x49bd40040000	          movabs r13, 0x180000000000440 	       497	quote.c	FUNCTION_24	IF_2
0x40019a1	            0xeb5e	                           jmp 0x4001a01	       497	quote.c	FUNCTION_24	IF_2
0x40019a3	       0xf1f440000	                   nop dword [rax + rax]	       497	quote.c	FUNCTION_24	IF_2
0x40019a8	        0x490fa3c5	                             bt r13, rax	       497	quote.c	FUNCTION_24	IF_2
0x40019ac	     0xf8296000000	                            jb 0x4001a48	       497	quote.c	FUNCTION_24	IF_2
0x40019b2	            0x84c0	                             test al, al	       497	quote.c	FUNCTION_24	IF_2
0x40019b4	            0x755b	                           jne 0x4001a11	       497	quote.c	FUNCTION_24	IF_2
0x40019b6	      0x41803c2400	                       cmp byte [r12], 0	       513	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	IF_3
0x40019bb	     0xf84cf000000	                            je 0x4001a90	       513	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	IF_3
0x40019c1	          0x488b03	                    mov rax, qword [rbx]	       513	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	IF_3
0x40019c4	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40019c7	            0x7467	                            je 0x4001a30	       141	strbuf.h	FUNCTION_26
0x40019c9	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x40019cd	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40019d1	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40019d4	            0x745a	                            je 0x4001a30	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40019d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40019e0	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40019e4	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x40019e8	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x40019ec	        0x40882c10	               mov byte [rax + rdx], bpl	       229	strbuf.h	FUNCTION_28
0x40019f0	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40019f4	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x40019f8	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40019fc	      0x410fb62c24	                   movzx ebp, byte [r12]	       230	strbuf.h	FUNCTION_28
0x4001a01	        0x4983c401	                              add r12, 1	       501	quote.c	FUNCTION_24	WHILE_1
0x4001a05	          0x4084ed	                           test bpl, bpl	       501	quote.c	FUNCTION_24	WHILE_1
0x4001a08	            0x7476	                            je 0x4001a80	       501	quote.c	FUNCTION_24	WHILE_1
0x4001a0a	          0x8d45dc	                   lea eax, [rbp - 0x24]	       501	quote.c	FUNCTION_24	WHILE_1
0x4001a0d	            0x3c38	                            cmp al, 0x38	       501	quote.c	FUNCTION_24	WHILE_1
0x4001a0f	            0x7697	                           jbe 0x40019a8	       501	quote.c	FUNCTION_24	WHILE_1
0x4001a11	          0x488b03	                    mov rax, qword [rbx]	       501	quote.c	FUNCTION_24	WHILE_1
0x4001a14	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001a17	            0x7417	                            je 0x4001a30	       141	strbuf.h	FUNCTION_26
0x4001a19	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4001a1d	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001a21	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001a24	            0x75ba	                           jne 0x40019e0	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001a26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001a30	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001a35	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001a38	      0xe800000000	                          call 0x4001a3d	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001a3d	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001a41	            0xeb9d	                           jmp 0x40019e0	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001a43	       0xf1f440000	                   nop dword [rax + rax]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001a48	          0x488b03	                    mov rax, qword [rbx]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001a4b	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001a4e	            0x7448	                            je 0x4001a98	       141	strbuf.h	FUNCTION_26
0x4001a50	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4001a54	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001a58	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001a5b	            0x743b	                            je 0x4001a98	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001a5d	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001a61	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4001a65	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001a69	        0xc604105c	              mov byte [rax + rdx], 0x5c	       229	strbuf.h	FUNCTION_28
0x4001a6d	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001a71	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001a75	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001a79	      0xe943ffffff	                           jmp 0x40019c1	       230	strbuf.h	FUNCTION_28
0x4001a7e	            0x6690	                                     nop	       230	strbuf.h	FUNCTION_28
0x4001a80	        0x4883c408	                              add rsp, 8	       523	quote.c	FUNCTION_24
0x4001a84	              0x5b	                                 pop rbx	       523	quote.c	FUNCTION_24
0x4001a85	              0x5d	                                 pop rbp	       523	quote.c	FUNCTION_24
0x4001a86	            0x415c	                                 pop r12	       523	quote.c	FUNCTION_24
0x4001a88	            0x415d	                                 pop r13	       523	quote.c	FUNCTION_24
0x4001a8a	              0xc3	                                     ret	       523	quote.c	FUNCTION_24
0x4001a8b	       0xf1f440000	                   nop dword [rax + rax]	       523	quote.c	FUNCTION_24
0x4001a90	          0x488b03	                    mov rax, qword [rbx]	       523	quote.c	FUNCTION_24
0x4001a93	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001a96	            0x7518	                           jne 0x4001ab0	       141	strbuf.h	FUNCTION_26
0x4001a98	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001a9d	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001aa0	      0xe800000000	                          call 0x4001aa5	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001aa5	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001aa9	            0xebb2	                           jmp 0x4001a5d	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001aab	       0xf1f440000	                   nop dword [rax + rax]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001ab0	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4001ab4	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001ab8	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001abb	            0x75a0	                           jne 0x4001a5d	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001abd	            0xebd9	                           jmp 0x4001a98	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001abf	              0x90	                                     nop	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001ac0	          0x488b03	                    mov rax, qword [rbx]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001ac3	      0x4d8d6c2401	                      lea r13, [r12 + 1]	       499	quote.c	FUNCTION_24	CALL_3
0x4001ac8	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001acb	     0xf85c5000000	                           jne 0x4001b96	       141	strbuf.h	FUNCTION_26
0x4001ad1	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001ad6	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001ad9	      0xe800000000	                          call 0x4001ade	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001ade	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001ae2	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001ae6	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4001aea	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001aee	        0xc604102a	              mov byte [rax + rdx], 0x2a	       229	strbuf.h	FUNCTION_28
0x4001af2	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001af6	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001afa	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001afe	    0x410fb66c2401	               movzx ebp, byte [r12 + 1]	       230	strbuf.h	FUNCTION_28
0x4001b04	          0x4d89ec	                            mov r12, r13	       499	quote.c	FUNCTION_24	CALL_3
0x4001b07	      0xe98bfeffff	                           jmp 0x4001997	       499	quote.c	FUNCTION_24	CALL_3
0x4001b0c	         0xf1f4000	                         nop dword [rax]	       499	quote.c	FUNCTION_24	CALL_3
0x4001b10	          0x488b07	                    mov rax, qword [rdi]	       499	quote.c	FUNCTION_24	CALL_3
0x4001b13	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001b16	     0xf85a4000000	                           jne 0x4001bc0	       141	strbuf.h	FUNCTION_26
0x4001b1c	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001b21	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001b24	      0xe800000000	                          call 0x4001b29	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001b29	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001b2d	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001b31	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4001b35	      0x4d8d6c2401	                      lea r13, [r12 + 1]	       495	quote.c	FUNCTION_24	IF_1	CALL_2
0x4001b3a	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001b3e	        0xc604105c	              mov byte [rax + rdx], 0x5c	       229	strbuf.h	FUNCTION_28
0x4001b42	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001b46	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001b4a	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001b4e	          0x488b03	                    mov rax, qword [rbx]	       230	strbuf.h	FUNCTION_28
0x4001b51	      0x410fb62c24	                   movzx ebp, byte [r12]	       495	quote.c	FUNCTION_24	IF_1	CALL_2
0x4001b56	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001b59	            0x7555	                           jne 0x4001bb0	       141	strbuf.h	FUNCTION_26
0x4001b5b	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001b60	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001b63	      0xe800000000	                          call 0x4001b68	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001b68	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001b6c	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001b70	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4001b74	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001b78	        0x40882c10	               mov byte [rax + rdx], bpl	       229	strbuf.h	FUNCTION_28
0x4001b7c	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001b80	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001b84	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001b88	    0x410fb66c2401	               movzx ebp, byte [r12 + 1]	       230	strbuf.h	FUNCTION_28
0x4001b8e	          0x4d89ec	                            mov r12, r13	       495	quote.c	FUNCTION_24	IF_1	CALL_2
0x4001b91	      0xe9f7fdffff	                           jmp 0x400198d	       495	quote.c	FUNCTION_24	IF_1	CALL_2
0x4001b96	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4001b9a	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001b9e	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001ba1	     0xf853bffffff	                           jne 0x4001ae2	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001ba7	      0xe925ffffff	                           jmp 0x4001ad1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001bac	         0xf1f4000	                         nop dword [rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001bb0	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4001bb4	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001bb8	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001bbb	            0x75af	                           jne 0x4001b6c	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001bbd	            0xeb9c	                           jmp 0x4001b5b	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001bbf	              0x90	                                     nop	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001bc0	        0x488b5708	                mov rdx, qword [rdi + 8]	       141	strbuf.h	FUNCTION_26
0x4001bc4	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001bc8	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001bcb	     0xf855cffffff	                           jne 0x4001b2d	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001bd1	      0xe946ffffff	                           jmp 0x4001b1c	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
sq_quote_buf	FOR,0:ELSE,0:SWITCH,0:DO,0:WHILE,2:IF,1:CALL,10:functions,0	144
0x4000760	            0x4156	                                push r14	        25	quote.c	FUNCTION_2
0x4000762	            0x4155	                                push r13	        25	quote.c	FUNCTION_2
0x4000764	          0x4531ed	                          xor r13d, r13d	        25	quote.c	FUNCTION_2
0x4000767	            0x4154	                                push r12	        25	quote.c	FUNCTION_2
0x4000769	              0x55	                                push rbp	        25	quote.c	FUNCTION_2
0x400076a	          0x4889f5	                            mov rbp, rsi	        25	quote.c	FUNCTION_2
0x400076d	              0x53	                                push rbx	        25	quote.c	FUNCTION_2
0x400076e	        0x48397710	            cmp qword [rdi + 0x10], rsi 	        28	quote.c	FUNCTION_2	IF_1
0x4000772	          0x4889fb	                            mov rbx, rdi	        25	quote.c	FUNCTION_2
0x4000775	     0xf84ff010000	                            je 0x400097a	        28	quote.c	FUNCTION_2	IF_1
0x400077b	          0x488b03	                    mov rax, qword [rbx]	        28	quote.c	FUNCTION_2	IF_1
0x400077e	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4000781	     0xf85c9010000	                           jne 0x4000950	       141	strbuf.h	FUNCTION_26
0x4000787	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400078c	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x400078f	      0xe800000000	                          call 0x4000794	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000794	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000798	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x400079c	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x40007a0	    0x49bc01000000	                movabs r12, 0x8200000001	       961	string2.h	FUNCTION_70	WHILE_1
0x40007aa	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x40007ae	        0xc6041027	              mov byte [rax + rdx], 0x27	       229	strbuf.h	FUNCTION_28
0x40007b2	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x40007b6	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40007ba	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40007be	         0xfbe4500	                   movsx eax, byte [rbp]	       230	strbuf.h	FUNCTION_28
0x40007c2	    0x660f1f440000	                    nop word [rax + rax]	       230	strbuf.h	FUNCTION_28
0x40007c8	            0x84c0	                             test al, al	        32	quote.c	FUNCTION_2	WHILE_1
0x40007ca	     0xf8428010000	                            je 0x40008f8	        32	quote.c	FUNCTION_2	WHILE_1
0x40007d0	          0x83f821	                           cmp eax, 0x21	       962	string2.h	FUNCTION_70	WHILE_1
0x40007d3	     0xf8497010000	                            je 0x4000970	       962	string2.h	FUNCTION_70	WHILE_1
0x40007d9	          0x83f827	                           cmp eax, 0x27	       962	string2.h	FUNCTION_70	WHILE_1
0x40007dc	     0xf848e010000	                            je 0x4000970	       962	string2.h	FUNCTION_70	WHILE_1
0x40007e2	        0x488d4501	                      lea rax, [rbp + 1]	       962	string2.h	FUNCTION_70	WHILE_1
0x40007e6	            0x31d2	                            xor edx, edx	       962	string2.h	FUNCTION_70	WHILE_1
0x40007e8	     0xf1f84000000	                   nop dword [rax + rax]	       962	string2.h	FUNCTION_70	WHILE_1
0x40007f0	           0xfb608	                   movzx ecx, byte [rax]	       961	string2.h	FUNCTION_70	WHILE_1
0x40007f3	        0x4883c201	                              add rdx, 1	       963	string2.h	FUNCTION_70	WHILE_1
0x40007f7	          0x4989c6	                            mov r14, rax	       961	string2.h	FUNCTION_70	WHILE_1
0x40007fa	        0x4883c001	                              add rax, 1	       961	string2.h	FUNCTION_70	WHILE_1
0x40007fe	          0x80f927	                            cmp cl, 0x27	       961	string2.h	FUNCTION_70	WHILE_1
0x4000801	            0x77ed	                            ja 0x40007f0	       961	string2.h	FUNCTION_70	WHILE_1
0x4000803	        0x490fa3cc	                             bt r12, rcx	       961	string2.h	FUNCTION_70	WHILE_1
0x4000807	            0x73e7	                           jae 0x40007f0	       961	string2.h	FUNCTION_70	WHILE_1
0x4000809	          0x4889ee	                            mov rsi, rbp	        34	quote.c	FUNCTION_2	WHILE_1	CALL_4
0x400080c	          0x4889df	                            mov rdi, rbx	        34	quote.c	FUNCTION_2	WHILE_1	CALL_4
0x400080f	          0x4c89f5	                            mov rbp, r14	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_5
0x4000812	      0xe800000000	                          call 0x4000817	        34	quote.c	FUNCTION_2	WHILE_1	CALL_4
0x4000817	        0x410fbe06	                   movsx eax, byte [r14]	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_5
0x400081b	            0x3c27	                            cmp al, 0x27	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_5
0x400081d	            0x7577	                           jne 0x4000896	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_5
0x400081f	            0xeb7d	                           jmp 0x400089e	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_5
0x4000821	     0xf1f80000000	                         nop dword [rax]	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_5
0x4000828	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400082d	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000830	      0xe800000000	                          call 0x4000835	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000835	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000839	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x400083d	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4000841	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4000845	        0x44883410	              mov byte [rax + rdx], r14b	       229	strbuf.h	FUNCTION_28
0x4000849	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x400084d	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4000851	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4000855	          0x488b03	                    mov rax, qword [rbx]	       230	strbuf.h	FUNCTION_28
0x4000858	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x400085b	     0xf857f000000	                           jne 0x40008e0	       141	strbuf.h	FUNCTION_26
0x4000861	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000866	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000869	      0xe800000000	                          call 0x400086e	       228	strbuf.h	FUNCTION_28	CALL_2
0x400086e	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000872	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4000876	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x400087a	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x400087e	        0xc6041027	              mov byte [rax + rdx], 0x27	       229	strbuf.h	FUNCTION_28
0x4000882	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4000886	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x400088a	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x400088e	         0xfbe4500	                   movsx eax, byte [rbp]	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_5
0x4000892	            0x3c27	                            cmp al, 0x27	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_5
0x4000894	            0x7408	                            je 0x400089e	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_5
0x4000896	            0x3c21	                            cmp al, 0x21	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_5
0x4000898	     0xf852affffff	                           jne 0x40007c8	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_5
0x400089e	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_29	CALL_2
0x40008a3	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_29	CALL_2
0x40008a8	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_29	CALL_2
0x40008ab	      0xe800000000	                          call 0x40008b0	       279	strbuf.h	FUNCTION_29	CALL_2
0x40008b0	          0x488b03	                    mov rax, qword [rbx]	       279	strbuf.h	FUNCTION_29	CALL_2
0x40008b3	        0x4883c501	                              add rbp, 1	        38	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_7
0x40008b7	      0x440fb675ff	              movzx r14d, byte [rbp - 1]	        38	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_7
0x40008bc	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40008bf	     0xf8463ffffff	                            je 0x4000828	       141	strbuf.h	FUNCTION_26
0x40008c5	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x40008c9	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40008cd	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40008d0	     0xf8563ffffff	                           jne 0x4000839	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40008d6	      0xe94dffffff	                           jmp 0x4000828	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40008db	       0xf1f440000	                   nop dword [rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40008e0	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x40008e4	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40008e8	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40008eb	            0x7585	                           jne 0x4000872	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40008ed	      0xe96fffffff	                           jmp 0x4000861	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40008f2	    0x660f1f440000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40008f8	          0x488b03	                    mov rax, qword [rbx]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40008fb	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40008fe	            0x753d	                           jne 0x400093d	       141	strbuf.h	FUNCTION_26
0x4000900	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000905	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000908	      0xe800000000	                          call 0x400090d	       228	strbuf.h	FUNCTION_28	CALL_2
0x400090d	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000911	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4000915	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4000919	          0x4c89ef	                            mov rdi, r13	        43	quote.c	FUNCTION_2	CALL_10
0x400091c	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4000920	        0xc6041027	              mov byte [rax + rdx], 0x27	       229	strbuf.h	FUNCTION_28
0x4000924	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4000928	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x400092c	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4000930	              0x5b	                                 pop rbx	        44	quote.c	FUNCTION_2
0x4000931	              0x5d	                                 pop rbp	        44	quote.c	FUNCTION_2
0x4000932	            0x415c	                                 pop r12	        44	quote.c	FUNCTION_2
0x4000934	            0x415d	                                 pop r13	        44	quote.c	FUNCTION_2
0x4000936	            0x415e	                                 pop r14	        44	quote.c	FUNCTION_2
0x4000938	      0xe900000000	                           jmp 0x400093d	        43	quote.c	FUNCTION_2	CALL_10
0x400093d	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4000941	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000945	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000948	            0x75c7	                           jne 0x4000911	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400094a	            0xebb4	                           jmp 0x4000900	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400094c	         0xf1f4000	                         nop dword [rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000950	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4000954	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000958	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400095b	     0xf8537feffff	                           jne 0x4000798	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000961	      0xe921feffff	                           jmp 0x4000787	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000966	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000970	          0x4989ee	                            mov r14, rbp	       961	string2.h	FUNCTION_70	WHILE_1
0x4000973	            0x31d2	                            xor edx, edx	       962	string2.h	FUNCTION_70	WHILE_1
0x4000975	      0xe98ffeffff	                           jmp 0x4000809	       962	string2.h	FUNCTION_70	WHILE_1
0x400097a	            0x31f6	                            xor esi, esi	        29	quote.c	FUNCTION_2	CALL_1
0x400097c	      0xe800000000	                          call 0x4000981	        29	quote.c	FUNCTION_2	CALL_1
0x4000981	          0x4989c5	                            mov r13, rax	        29	quote.c	FUNCTION_2	CALL_1
0x4000984	      0xe9f2fdffff	                           jmp 0x400077b	        29	quote.c	FUNCTION_2	CALL_1
quote_path_relative	FOR,0:ELSE,0:SWITCH,0:DO,0:WHILE,0:IF,0:CALL,5:functions,0	41
0x4001030	              0x55	                                push rbp	       335	quote.c	FUNCTION_19
0x4001031	              0x53	                                push rbx	       335	quote.c	FUNCTION_19
0x4001032	          0x4889d3	                            mov rbx, rdx	       335	quote.c	FUNCTION_19
0x4001035	        0x4883ec28	                           sub rsp, 0x28	       335	quote.c	FUNCTION_19
0x4001039	          0x4889e2	                            mov rdx, rsp	       337	quote.c	FUNCTION_19	CALL_1
0x400103c	    0x48c704240000	                      mov qword [rsp], 0	       336	quote.c	FUNCTION_19
0x4001044	    0x48c744240800	                  mov qword [rsp + 8], 0	       336	quote.c	FUNCTION_19
0x400104d	    0x64488b042528	                mov rax, qword fs:[0x28]	       335	quote.c	FUNCTION_19
0x4001056	      0x4889442418	             mov qword [rsp + 0x18], rax	       335	quote.c	FUNCTION_19
0x400105b	            0x31c0	                            xor eax, eax	       335	quote.c	FUNCTION_19
0x400105d	    0x48c744241000	               mov qword [rsp + 0x10], 0	       336	quote.c	FUNCTION_19
0x4001066	      0xe800000000	                          call 0x400106b	       337	quote.c	FUNCTION_19	CALL_1
0x400106b	          0x4889c5	                            mov rbp, rax	       337	quote.c	FUNCTION_19	CALL_1
0x400106e	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       165	strbuf.h	FUNCTION_27	IF_2
0x4001072	    0x48c743080000	                  mov qword [rbx + 8], 0	       164	strbuf.h	FUNCTION_27
0x400107a	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_27	IF_2
0x4001080	            0x7446	                            je 0x40010c8	       165	strbuf.h	FUNCTION_27	IF_2
0x4001082	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_27	IF_2
0x4001085	          0x4889ef	                            mov rdi, rbp	       339	quote.c	FUNCTION_19	CALL_4
0x4001088	      0xe800000000	                          call 0x400108d	       339	quote.c	FUNCTION_19	CALL_4
0x400108d	          0x4531c0	                            xor r8d, r8d	       339	quote.c	FUNCTION_19	CALL_4
0x4001090	            0x31c9	                            xor ecx, ecx	       339	quote.c	FUNCTION_19	CALL_4
0x4001092	          0x4889da	                            mov rdx, rbx	       339	quote.c	FUNCTION_19	CALL_4
0x4001095	          0x4889c6	                            mov rsi, rax	       339	quote.c	FUNCTION_19	CALL_4
0x4001098	          0x4889ef	                            mov rdi, rbp	       339	quote.c	FUNCTION_19	CALL_4
0x400109b	      0xe860f0ffff	          call sym.quote_c_style_counted	       339	quote.c	FUNCTION_19	CALL_4
0x40010a0	          0x4889e7	                            mov rdi, rsp	       340	quote.c	FUNCTION_19	CALL_5
0x40010a3	      0xe800000000	                          call 0x40010a8	       340	quote.c	FUNCTION_19	CALL_5
0x40010a8	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       343	quote.c	FUNCTION_19
0x40010ad	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       343	quote.c	FUNCTION_19
0x40010b6	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       342	quote.c	FUNCTION_19
0x40010ba	            0x751a	                           jne 0x40010d6	       343	quote.c	FUNCTION_19
0x40010bc	        0x4883c428	                           add rsp, 0x28	       343	quote.c	FUNCTION_19
0x40010c0	              0x5b	                                 pop rbx	       343	quote.c	FUNCTION_19
0x40010c1	              0x5d	                                 pop rbp	       343	quote.c	FUNCTION_19
0x40010c2	              0xc3	                                     ret	       343	quote.c	FUNCTION_19
0x40010c3	       0xf1f440000	                   nop dword [rax + rax]	       343	quote.c	FUNCTION_19
0x40010c8	    0x803d00000000	                cmp byte [0x040010cf], 0	       168	strbuf.h	FUNCTION_27	CALL_2
0x40010cf	            0x74b4	                            je 0x4001085	       168	strbuf.h	FUNCTION_27	CALL_2
0x40010d1	      0xe800000000	                          call 0x40010d6	       168	strbuf.h	FUNCTION_27	CALL_2
0x40010d6	      0xe800000000	                          call 0x40010db	       343	quote.c	FUNCTION_19
perl_quote_buf	FOR,0:ELSE,0:SWITCH,0:DO,0:WHILE,1:IF,1:CALL,4:functions,0	105
0x4001310	            0x4154	                                push r12	       418	quote.c	FUNCTION_21
0x4001312	              0x55	                                push rbp	       418	quote.c	FUNCTION_21
0x4001313	          0x4889f5	                            mov rbp, rsi	       418	quote.c	FUNCTION_21
0x4001316	              0x53	                                push rbx	       418	quote.c	FUNCTION_21
0x4001317	          0x488b07	                    mov rax, qword [rdi]	       418	quote.c	FUNCTION_21
0x400131a	          0x4889fb	                            mov rbx, rdi	       418	quote.c	FUNCTION_21
0x400131d	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001320	     0xf854a010000	                           jne 0x4001470	       141	strbuf.h	FUNCTION_26
0x4001326	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400132b	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x400132e	      0xe800000000	                          call 0x4001333	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001333	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001337	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x400133b	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x400133f	        0x4c8d6501	                      lea r12, [rbp + 1]	       424	quote.c	FUNCTION_21	WHILE_1
0x4001343	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001347	        0xc6041027	              mov byte [rax + rdx], 0x27	       229	strbuf.h	FUNCTION_28
0x400134b	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x400134f	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001353	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001357	         0xfb66d00	                   movzx ebp, byte [rbp]	       424	quote.c	FUNCTION_21	WHILE_1
0x400135b	          0x4084ed	                           test bpl, bpl	       424	quote.c	FUNCTION_21	WHILE_1
0x400135e	            0x7544	                           jne 0x40013a4	       424	quote.c	FUNCTION_21	WHILE_1
0x4001360	      0xe9bb000000	                           jmp 0x4001420	       424	quote.c	FUNCTION_21	WHILE_1
0x4001365	           0xf1f00	                         nop dword [rax]	       424	quote.c	FUNCTION_21	WHILE_1
0x4001368	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400136d	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001370	      0xe800000000	                          call 0x4001375	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001375	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001379	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x400137d	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4001381	        0x4983c401	                              add r12, 1	       424	quote.c	FUNCTION_21	WHILE_1
0x4001385	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001389	        0x40882c10	               mov byte [rax + rdx], bpl	       229	strbuf.h	FUNCTION_28
0x400138d	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001391	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001395	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001399	    0x410fb66c24ff	               movzx ebp, byte [r12 - 1]	       424	quote.c	FUNCTION_21	WHILE_1
0x400139f	          0x4084ed	                           test bpl, bpl	       424	quote.c	FUNCTION_21	WHILE_1
0x40013a2	            0x747c	                            je 0x4001420	       424	quote.c	FUNCTION_21	WHILE_1
0x40013a4	        0x4080fd27	                           cmp bpl, 0x27	       425	quote.c	FUNCTION_21	WHILE_1	IF_1
0x40013a8	            0x7426	                            je 0x40013d0	       425	quote.c	FUNCTION_21	WHILE_1	IF_1
0x40013aa	        0x4080fd5c	                           cmp bpl, 0x5c	       425	quote.c	FUNCTION_21	WHILE_1	IF_1
0x40013ae	            0x7420	                            je 0x40013d0	       425	quote.c	FUNCTION_21	WHILE_1	IF_1
0x40013b0	          0x488b03	                    mov rax, qword [rbx]	       425	quote.c	FUNCTION_21	WHILE_1	IF_1
0x40013b3	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40013b6	            0x74b0	                            je 0x4001368	       141	strbuf.h	FUNCTION_26
0x40013b8	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x40013bc	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40013c0	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40013c3	            0x75b4	                           jne 0x4001379	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40013c5	            0xeba1	                           jmp 0x4001368	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40013c7	    0x660f1f840000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40013d0	          0x488b03	                    mov rax, qword [rbx]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40013d3	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40013d6	            0x7538	                           jne 0x4001410	       141	strbuf.h	FUNCTION_26
0x40013d8	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40013dd	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x40013e0	      0xe800000000	                          call 0x40013e5	       228	strbuf.h	FUNCTION_28	CALL_2
0x40013e5	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x40013e9	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40013ed	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x40013f1	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x40013f5	        0xc604105c	              mov byte [rax + rdx], 0x5c	       229	strbuf.h	FUNCTION_28
0x40013f9	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40013fd	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001401	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001405	            0xeba9	                           jmp 0x40013b0	       230	strbuf.h	FUNCTION_28
0x4001407	    0x660f1f840000	                    nop word [rax + rax]	       230	strbuf.h	FUNCTION_28
0x4001410	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4001414	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001418	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400141b	            0x75cc	                           jne 0x40013e9	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400141d	            0xebb9	                           jmp 0x40013d8	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400141f	              0x90	                                     nop	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001420	          0x488b03	                    mov rax, qword [rbx]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001423	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001426	            0x7538	                           jne 0x4001460	       141	strbuf.h	FUNCTION_26
0x4001428	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400142d	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001430	      0xe800000000	                          call 0x4001435	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001435	        0x488b5308	                mov rdx, qword [rbx + 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001439	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x400143d	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_28
0x4001441	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001445	        0xc6041027	              mov byte [rax + rdx], 0x27	       229	strbuf.h	FUNCTION_28
0x4001449	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x400144d	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001451	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001455	              0x5b	                                 pop rbx	       430	quote.c	FUNCTION_21
0x4001456	              0x5d	                                 pop rbp	       430	quote.c	FUNCTION_21
0x4001457	            0x415c	                                 pop r12	       430	quote.c	FUNCTION_21
0x4001459	              0xc3	                                     ret	       430	quote.c	FUNCTION_21
0x400145a	    0x660f1f440000	                    nop word [rax + rax]	       430	quote.c	FUNCTION_21
0x4001460	        0x488b5308	                mov rdx, qword [rbx + 8]	       141	strbuf.h	FUNCTION_26
0x4001464	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001468	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400146b	            0x75cc	                           jne 0x4001439	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400146d	            0xebb9	                           jmp 0x4001428	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400146f	              0x90	                                     nop	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001470	        0x488b5708	                mov rdx, qword [rdi + 8]	       141	strbuf.h	FUNCTION_26
0x4001474	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001478	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400147b	     0xf85b6feffff	                           jne 0x4001337	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001481	      0xe9a0feffff	                           jmp 0x4001326	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
