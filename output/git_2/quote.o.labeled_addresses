sq_quote_buf_pretty	WHILE,0:SWITCH,0:FOR,1:functions,0:IF,1:DO,0:CALL,2:ELSE,0	38
0x4000815	            0x4154	                                push r12	        47	quote.c	FUNCTION_3
0x4000817	              0x55	                                push rbp	        47	quote.c	FUNCTION_3
0x4000818	              0x53	                                push rbx	        47	quote.c	FUNCTION_3
0x4000819	          0x4989fc	                            mov r12, rdi	        47	quote.c	FUNCTION_3
0x400081c	          0x4889f5	                            mov rbp, rsi	        47	quote.c	FUNCTION_3
0x400081f	           0xfb636	                   movzx esi, byte [rsi]	        51	quote.c	FUNCTION_3	FOR_1
0x4000822	          0x4084f6	                           test sil, sil	        51	quote.c	FUNCTION_3	FOR_1
0x4000825	            0x743c	                            je 0x4000863	        51	quote.c	FUNCTION_3	FOR_1
0x4000827	          0x4889eb	                            mov rbx, rbp	        51	quote.c	FUNCTION_3	FOR_1
0x400082a	        0x400fb6c6	                          movzx eax, sil	        52	quote.c	FUNCTION_3	FOR_1	IF_1
0x400082e	    0xf68000000000	                      test byte [rax], 6	        52	quote.c	FUNCTION_3	FOR_1	IF_1
0x4000835	            0x7520	                           jne 0x4000857	        52	quote.c	FUNCTION_3	FOR_1	IF_1
0x4000837	        0x400fbef6	                          movsx esi, sil	        52	quote.c	FUNCTION_3	FOR_1	IF_1
0x400083b	      0xbf00000000	                              mov edi, 0	        52	quote.c	FUNCTION_3	FOR_1	IF_1
0x4000840	      0xe800000000	                          call 0x4000845	        52	quote.c	FUNCTION_3	FOR_1	IF_1
0x4000845	          0x4885c0	                           test rax, rax	        52	quote.c	FUNCTION_3	FOR_1	IF_1
0x4000848	            0x750d	                           jne 0x4000857	        52	quote.c	FUNCTION_3	FOR_1	IF_1
0x400084a	          0x4889ee	                            mov rsi, rbp	        53	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_1
0x400084d	          0x4c89e7	                            mov rdi, r12	        53	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_1
0x4000850	      0xe800000000	                          call 0x4000855	        53	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_1
0x4000855	            0xeb2f	                           jmp 0x4000886	        54	quote.c	FUNCTION_3	FOR_1	IF_1
0x4000857	        0x4883c301	                              add rbx, 1	        51	quote.c	FUNCTION_3	FOR_1
0x400085b	           0xfb633	                   movzx esi, byte [rbx]	        51	quote.c	FUNCTION_3	FOR_1
0x400085e	          0x4084f6	                           test sil, sil	        51	quote.c	FUNCTION_3	FOR_1
0x4000861	            0x75c7	                           jne 0x400082a	        51	quote.c	FUNCTION_3	FOR_1
0x4000863	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000868	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_29	CALL_2
0x400086f	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000872	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000874	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000877	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_29	CALL_2
0x400087b	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x400087e	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000881	      0xe800000000	                          call 0x4000886	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000886	              0x5b	                                 pop rbx	        60	quote.c	FUNCTION_3
0x4000887	              0x5d	                                 pop rbp	        60	quote.c	FUNCTION_3
0x4000888	            0x415c	                                 pop r12	        60	quote.c	FUNCTION_3
0x400088a	              0xc3	                                     ret	        60	quote.c	FUNCTION_3
perl_quote_buf	WHILE,1:SWITCH,0:FOR,0:functions,0:IF,1:DO,0:CALL,4:ELSE,0	89
0x4001122	            0x4154	                                push r12	       418	quote.c	FUNCTION_21
0x4001124	              0x55	                                push rbp	       418	quote.c	FUNCTION_21
0x4001125	              0x53	                                push rbx	       418	quote.c	FUNCTION_21
0x4001126	          0x4889fb	                            mov rbx, rdi	       418	quote.c	FUNCTION_21
0x4001129	          0x4889f5	                            mov rbp, rsi	       418	quote.c	FUNCTION_21
0x400112c	          0x488b07	                    mov rax, qword [rdi]	       141	strbuf.h	FUNCTION_26
0x400112f	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001132	            0x740a	                            je 0x400113e	       141	strbuf.h	FUNCTION_26
0x4001134	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001138	        0x48394708	                cmp qword [rdi + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400113c	            0x750d	                           jne 0x400114b	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400113e	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001143	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001146	      0xe800000000	                          call 0x400114b	       228	strbuf.h	FUNCTION_28	CALL_2
0x400114b	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x400114f	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x4001153	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x4001157	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x400115b	        0xc6040227	              mov byte [rdx + rax], 0x27	       229	strbuf.h	FUNCTION_28
0x400115f	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001163	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001167	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x400116b	        0x4c8d6501	                      lea r12, [rbp + 1]	       424	quote.c	FUNCTION_21	WHILE_1
0x400116f	         0xfb66d00	                   movzx ebp, byte [rbp]	       424	quote.c	FUNCTION_21	WHILE_1
0x4001173	          0x4084ed	                           test bpl, bpl	       424	quote.c	FUNCTION_21	WHILE_1
0x4001176	     0xf849d000000	                            je 0x4001219	       424	quote.c	FUNCTION_21	WHILE_1
0x400117c	        0x4080fd27	                           cmp bpl, 0x27	       425	quote.c	FUNCTION_21	WHILE_1	IF_1
0x4001180	            0x7406	                            je 0x4001188	       425	quote.c	FUNCTION_21	WHILE_1	IF_1
0x4001182	        0x4080fd5c	                           cmp bpl, 0x5c	       425	quote.c	FUNCTION_21	WHILE_1	IF_1
0x4001186	            0x753f	                           jne 0x40011c7	       425	quote.c	FUNCTION_21	WHILE_1	IF_1
0x4001188	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_26
0x400118b	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x400118e	            0x740a	                            je 0x400119a	       141	strbuf.h	FUNCTION_26
0x4001190	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001194	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001198	            0x750d	                           jne 0x40011a7	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400119a	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400119f	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x40011a2	      0xe800000000	                          call 0x40011a7	       228	strbuf.h	FUNCTION_28	CALL_2
0x40011a7	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40011ab	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x40011af	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x40011b3	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x40011b7	        0xc604025c	              mov byte [rdx + rax], 0x5c	       229	strbuf.h	FUNCTION_28
0x40011bb	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40011bf	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x40011c3	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40011c7	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_26
0x40011ca	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40011cd	            0x740a	                            je 0x40011d9	       141	strbuf.h	FUNCTION_26
0x40011cf	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40011d3	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40011d7	            0x750d	                           jne 0x40011e6	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40011d9	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40011de	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x40011e1	      0xe800000000	                          call 0x40011e6	       228	strbuf.h	FUNCTION_28	CALL_2
0x40011e6	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40011ea	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x40011ee	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x40011f2	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x40011f6	        0x40882c02	               mov byte [rdx + rax], bpl	       229	strbuf.h	FUNCTION_28
0x40011fa	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40011fe	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001202	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001206	        0x4983c401	                              add r12, 1	       424	quote.c	FUNCTION_21	WHILE_1
0x400120a	    0x410fb66c24ff	               movzx ebp, byte [r12 - 1]	       424	quote.c	FUNCTION_21	WHILE_1
0x4001210	          0x4084ed	                           test bpl, bpl	       424	quote.c	FUNCTION_21	WHILE_1
0x4001213	     0xf8563ffffff	                           jne 0x400117c	       424	quote.c	FUNCTION_21	WHILE_1
0x4001219	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_26
0x400121c	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x400121f	            0x740a	                            je 0x400122b	       141	strbuf.h	FUNCTION_26
0x4001221	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001225	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001229	            0x750d	                           jne 0x4001238	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400122b	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001230	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001233	      0xe800000000	                          call 0x4001238	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001238	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x400123c	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x4001240	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x4001244	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001248	        0xc6040227	              mov byte [rdx + rax], 0x27	       229	strbuf.h	FUNCTION_28
0x400124c	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001250	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001254	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001258	              0x5b	                                 pop rbx	       430	quote.c	FUNCTION_21
0x4001259	              0x5d	                                 pop rbp	       430	quote.c	FUNCTION_21
0x400125a	            0x415c	                                 pop r12	       430	quote.c	FUNCTION_21
0x400125c	              0xc3	                                     ret	       430	quote.c	FUNCTION_21
quote_two_c_style	WHILE,0:SWITCH,0:FOR,0:functions,0:IF,3:DO,0:CALL,8:ELSE,1	107
0x4000c32	            0x4156	                                push r14	       296	quote.c	FUNCTION_16
0x4000c34	            0x4155	                                push r13	       296	quote.c	FUNCTION_16
0x4000c36	            0x4154	                                push r12	       296	quote.c	FUNCTION_16
0x4000c38	              0x55	                                push rbp	       296	quote.c	FUNCTION_16
0x4000c39	              0x53	                                push rbx	       296	quote.c	FUNCTION_16
0x4000c3a	          0x4889fb	                            mov rbx, rdi	       296	quote.c	FUNCTION_16
0x4000c3d	          0x4889f5	                            mov rbp, rsi	       296	quote.c	FUNCTION_16
0x4000c40	          0x4989d4	                            mov r12, rdx	       296	quote.c	FUNCTION_16
0x4000c43	          0x4189cd	                           mov r13d, ecx	       296	quote.c	FUNCTION_16
0x4000c46	      0xb900000000	                              mov ecx, 0	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0x4000c4b	      0xba00000000	                              mov edx, 0	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0x4000c50	      0xbe00000000	                              mov esi, 0	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0x4000c55	          0x4889ef	                            mov rdi, rbp	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0x4000c58	      0xe800000000	                          call 0x4000c5d	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0x4000c5d	          0x4885c0	                           test rax, rax	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0x4000c60	            0x7520	                           jne 0x4000c82	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0x4000c62	      0xb900000000	                              mov ecx, 0	       298	quote.c	FUNCTION_16	IF_1	CALL_2
0x4000c67	      0xba00000000	                              mov edx, 0	       298	quote.c	FUNCTION_16	IF_1	CALL_2
0x4000c6c	      0xbe00000000	                              mov esi, 0	       298	quote.c	FUNCTION_16	IF_1	CALL_2
0x4000c71	          0x4c89e7	                            mov rdi, r12	       298	quote.c	FUNCTION_16	IF_1	CALL_2
0x4000c74	      0xe800000000	                          call 0x4000c79	       298	quote.c	FUNCTION_16	IF_1	CALL_2
0x4000c79	          0x4885c0	                           test rax, rax	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0x4000c7c	     0xf84b3000000	                            je 0x4000d35	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0x4000c82	          0x4585ed	                         test r13d, r13d	       299	quote.c	FUNCTION_16	IF_1	IF_2
0x4000c85	     0xf85f3000000	                           jne 0x4000d7e	       299	quote.c	FUNCTION_16	IF_1	IF_2
0x4000c8b	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_26
0x4000c8e	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4000c91	            0x740a	                            je 0x4000c9d	       141	strbuf.h	FUNCTION_26
0x4000c93	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000c97	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000c9b	            0x750d	                           jne 0x4000caa	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000c9d	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000ca2	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000ca5	      0xe800000000	                          call 0x4000caa	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000caa	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4000cae	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x4000cb2	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x4000cb6	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4000cba	        0xc6040222	              mov byte [rdx + rax], 0x22	       229	strbuf.h	FUNCTION_28
0x4000cbe	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4000cc2	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4000cc6	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4000cca	      0xb901000000	                              mov ecx, 1	       301	quote.c	FUNCTION_16	IF_1	CALL_4
0x4000ccf	      0xba00000000	                              mov edx, 0	       301	quote.c	FUNCTION_16	IF_1	CALL_4
0x4000cd4	          0x4889de	                            mov rsi, rbx	       301	quote.c	FUNCTION_16	IF_1	CALL_4
0x4000cd7	          0x4889ef	                            mov rdi, rbp	       301	quote.c	FUNCTION_16	IF_1	CALL_4
0x4000cda	      0xe800000000	                          call 0x4000cdf	       301	quote.c	FUNCTION_16	IF_1	CALL_4
0x4000cdf	      0xb901000000	                              mov ecx, 1	       302	quote.c	FUNCTION_16	IF_1	CALL_5
0x4000ce4	      0xba00000000	                              mov edx, 0	       302	quote.c	FUNCTION_16	IF_1	CALL_5
0x4000ce9	          0x4889de	                            mov rsi, rbx	       302	quote.c	FUNCTION_16	IF_1	CALL_5
0x4000cec	          0x4c89e7	                            mov rdi, r12	       302	quote.c	FUNCTION_16	IF_1	CALL_5
0x4000cef	      0xe800000000	                          call 0x4000cf4	       302	quote.c	FUNCTION_16	IF_1	CALL_5
0x4000cf4	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_26
0x4000cf7	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4000cfa	            0x740a	                            je 0x4000d06	       141	strbuf.h	FUNCTION_26
0x4000cfc	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000d00	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000d04	            0x750d	                           jne 0x4000d13	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000d06	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000d0b	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000d0e	      0xe800000000	                          call 0x4000d13	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000d13	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4000d17	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x4000d1b	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x4000d1f	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4000d23	        0xc6040222	              mov byte [rdx + rax], 0x22	       229	strbuf.h	FUNCTION_28
0x4000d27	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4000d2b	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4000d2f	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4000d33	            0xeb73	                           jmp 0x4000da8	       230	strbuf.h	FUNCTION_28
0x4000d35	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000d3c	    0x41bd00000000	                             mov r13d, 0	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000d42	          0x4c89f1	                            mov rcx, r14	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000d45	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000d48	          0x4489e8	                           mov eax, r13d	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000d4b	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000d4d	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000d50	        0x4a8d1431	                    lea rdx, [rcx + r14]	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000d54	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000d57	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000d5a	      0xe800000000	                          call 0x4000d5f	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000d5f	          0x4c89f1	                            mov rcx, r14	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000d62	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000d65	          0x4489e8	                           mov eax, r13d	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000d68	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000d6a	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000d6d	        0x4a8d1431	                    lea rdx, [rcx + r14]	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000d71	          0x4c89e6	                            mov rsi, r12	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000d74	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000d77	      0xe800000000	                          call 0x4000d7c	       279	strbuf.h	FUNCTION_29	CALL_2
0x4000d7c	            0xeb2a	                           jmp 0x4000da8	       309	quote.c	FUNCTION_16
0x4000d7e	      0xb901000000	                              mov ecx, 1	       301	quote.c	FUNCTION_16	IF_1	CALL_4
0x4000d83	      0xba00000000	                              mov edx, 0	       301	quote.c	FUNCTION_16	IF_1	CALL_4
0x4000d88	          0x4889de	                            mov rsi, rbx	       301	quote.c	FUNCTION_16	IF_1	CALL_4
0x4000d8b	          0x4889ef	                            mov rdi, rbp	       301	quote.c	FUNCTION_16	IF_1	CALL_4
0x4000d8e	      0xe800000000	                          call 0x4000d93	       301	quote.c	FUNCTION_16	IF_1	CALL_4
0x4000d93	      0xb901000000	                              mov ecx, 1	       302	quote.c	FUNCTION_16	IF_1	CALL_5
0x4000d98	      0xba00000000	                              mov edx, 0	       302	quote.c	FUNCTION_16	IF_1	CALL_5
0x4000d9d	          0x4889de	                            mov rsi, rbx	       302	quote.c	FUNCTION_16	IF_1	CALL_5
0x4000da0	          0x4c89e7	                            mov rdi, r12	       302	quote.c	FUNCTION_16	IF_1	CALL_5
0x4000da3	      0xe800000000	                          call 0x4000da8	       302	quote.c	FUNCTION_16	IF_1	CALL_5
0x4000da8	              0x5b	                                 pop rbx	       309	quote.c	FUNCTION_16
0x4000da9	              0x5d	                                 pop rbp	       309	quote.c	FUNCTION_16
0x4000daa	            0x415c	                                 pop r12	       309	quote.c	FUNCTION_16
0x4000dac	            0x415d	                                 pop r13	       309	quote.c	FUNCTION_16
0x4000dae	            0x415e	                                 pop r14	       309	quote.c	FUNCTION_16
0x4000db0	              0xc3	                                     ret	       309	quote.c	FUNCTION_16
sq_quote_argv	WHILE,0:SWITCH,0:FOR,1:functions,0:IF,0:DO,0:CALL,3:ELSE,0	44
0x400097c	            0x4155	                                push r13	        76	quote.c	FUNCTION_5
0x400097e	            0x4154	                                push r12	        76	quote.c	FUNCTION_5
0x4000980	              0x55	                                push rbp	        76	quote.c	FUNCTION_5
0x4000981	              0x53	                                push rbx	        76	quote.c	FUNCTION_5
0x4000982	        0x4883ec08	                              sub rsp, 8	        76	quote.c	FUNCTION_5
0x4000986	          0x4889fb	                            mov rbx, rdi	        76	quote.c	FUNCTION_5
0x4000989	          0x4989f5	                            mov r13, rsi	        76	quote.c	FUNCTION_5
0x400098c	      0xbeff000000	                           mov esi, 0xff	        80	quote.c	FUNCTION_5	CALL_1
0x4000991	      0xe800000000	                          call 0x4000996	        80	quote.c	FUNCTION_5	CALL_1
0x4000996	      0x49837d0000	                      cmp qword [r13], 0	        81	quote.c	FUNCTION_5	FOR_1
0x400099b	            0x7465	                            je 0x4000a02	        81	quote.c	FUNCTION_5	FOR_1
0x400099d	          0x4d89ec	                            mov r12, r13	        81	quote.c	FUNCTION_5	FOR_1
0x40009a0	      0xbd00000000	                              mov ebp, 0	        81	quote.c	FUNCTION_5	FOR_1
0x40009a5	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_26
0x40009a8	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40009ab	            0x740a	                            je 0x40009b7	       141	strbuf.h	FUNCTION_26
0x40009ad	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40009b1	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40009b5	            0x750d	                           jne 0x40009c4	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40009b7	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40009bc	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x40009bf	      0xe800000000	                          call 0x40009c4	       228	strbuf.h	FUNCTION_28	CALL_2
0x40009c4	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40009c8	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x40009cc	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x40009d0	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x40009d4	        0xc6040220	              mov byte [rdx + rax], 0x20	       229	strbuf.h	FUNCTION_28
0x40009d8	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40009dc	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x40009e0	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40009e4	        0x498b3424	                    mov rsi, qword [r12]	        83	quote.c	FUNCTION_5	FOR_1	CALL_3
0x40009e8	          0x4889df	                            mov rdi, rbx	        83	quote.c	FUNCTION_5	FOR_1	CALL_3
0x40009eb	      0xe800000000	                          call 0x40009f0	        83	quote.c	FUNCTION_5	FOR_1	CALL_3
0x40009f0	          0x83c501	                              add ebp, 1	        81	quote.c	FUNCTION_5	FOR_1
0x40009f3	          0x4863c5	                         movsxd rax, ebp	        81	quote.c	FUNCTION_5	FOR_1
0x40009f6	      0x4d8d64c500	                  lea r12, [r13 + rax*8]	        81	quote.c	FUNCTION_5	FOR_1
0x40009fb	      0x49833c2400	                      cmp qword [r12], 0	        81	quote.c	FUNCTION_5	FOR_1
0x4000a00	            0x75a3	                           jne 0x40009a5	        81	quote.c	FUNCTION_5	FOR_1
0x4000a02	        0x4883c408	                              add rsp, 8	        85	quote.c	FUNCTION_5
0x4000a06	              0x5b	                                 pop rbx	        85	quote.c	FUNCTION_5
0x4000a07	              0x5d	                                 pop rbp	        85	quote.c	FUNCTION_5
0x4000a08	            0x415c	                                 pop r12	        85	quote.c	FUNCTION_5
0x4000a0a	            0x415d	                                 pop r13	        85	quote.c	FUNCTION_5
0x4000a0c	              0xc3	                                     ret	        85	quote.c	FUNCTION_5
sq_dequote_step	WHILE,0:SWITCH,1:FOR,1:functions,0:IF,6:DO,1:CALL,1:ELSE,0	60
0x4000040	      0xb800000000	                              mov eax, 0	       104	quote.c	FUNCTION_7	IF_1
0x4000045	          0x803f27	                    cmp byte [rdi], 0x27	       103	quote.c	FUNCTION_7	IF_1
0x4000048	     0xf85b4000000	                           jne 0x4000102	       103	quote.c	FUNCTION_7	IF_1
0x400004e	        0x488d4f01	                      lea rcx, [rdi + 1]	       103	quote.c	FUNCTION_7	IF_1
0x4000052	          0x4889f8	                            mov rax, rdi	       103	quote.c	FUNCTION_7	IF_1
0x4000055	            0xeb04	                           jmp 0x400005b	       103	quote.c	FUNCTION_7	IF_1
0x4000057	        0x4883c101	                              add rcx, 1	       103	quote.c	FUNCTION_7	IF_1
0x400005b	        0x4c8d41ff	                       lea r8, [rcx - 1]	       103	quote.c	FUNCTION_7	IF_1
0x400005f	         0xfb65001	               movzx edx, byte [rax + 1]	       106	quote.c	FUNCTION_7	FOR_1
0x4000063	            0x84d2	                             test dl, dl	       107	quote.c	FUNCTION_7	FOR_1	IF_2
0x4000065	     0xf8482000000	                            je 0x40000ed	       107	quote.c	FUNCTION_7	FOR_1	IF_2
0x400006b	          0x80fa27	                            cmp dl, 0x27	       109	quote.c	FUNCTION_7	FOR_1	IF_3
0x400006e	            0x7409	                            je 0x4000079	       109	quote.c	FUNCTION_7	FOR_1	IF_3
0x4000070	        0x4883c001	                              add rax, 1	       106	quote.c	FUNCTION_7	FOR_1
0x4000074	          0x8851ff	                  mov byte [rcx - 1], dl	       110	quote.c	FUNCTION_7	FOR_1	IF_3
0x4000077	            0xebde	                           jmp 0x4000057	       111	quote.c	FUNCTION_7	FOR_1	IF_3
0x4000079	         0xfb65002	               movzx edx, byte [rax + 2]	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x400007d	            0x84d2	                             test dl, dl	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x400007f	            0x7407	                            je 0x4000088	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000081	          0x80fa5c	                            cmp dl, 0x5c	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000084	            0x7416	                            je 0x400009c	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000086	            0xeb35	                           jmp 0x40000bd	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x4000088	        0x41c60000	                        mov byte [r8], 0	       116	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x400008c	          0x4885f6	                           test rsi, rsi	       117	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x400008f	            0x7462	                            je 0x40000f3	       117	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000091	    0x48c706000000	                      mov qword [rsi], 0	       118	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x4000098	          0x4889f8	                            mov rax, rdi	       119	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x400009b	              0xc3	                                     ret	       119	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x400009c	      0x440fb64803	               movzx r9d, byte [rax + 3]	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x40000a1	        0x4180f927	                           cmp r9b, 0x27	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x40000a5	            0x7406	                            je 0x40000ad	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x40000a7	        0x4180f921	                           cmp r9b, 0x21	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x40000ab	            0x7510	                           jne 0x40000bd	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x40000ad	        0x80780427	                cmp byte [rax + 4], 0x27	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x40000b1	            0x750a	                           jne 0x40000bd	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x40000b3	        0x448849ff	                 mov byte [rcx - 1], r9b	       128	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x40000b7	        0x4883c004	                              add rax, 4	       129	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x40000bb	            0xeb9a	                           jmp 0x4000057	       130	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x40000bd	          0x4885f6	                           test rsi, rsi	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x40000c0	            0x7435	                            je 0x40000f7	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x40000c2	           0xfb6d2	                           movzx edx, dl	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x40000c5	    0xf68200000000	                      test byte [rdx], 1	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x40000cc	            0x742f	                            je 0x40000fd	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x40000ce	        0x4883c002	                              add rax, 2	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x40000d2	        0x4883c001	                              add rax, 1	       137	quote.c	FUNCTION_7	FOR_1	SWITCH_1	DO_1
0x40000d6	           0xfb610	                   movzx edx, byte [rax]	       138	quote.c	FUNCTION_7	FOR_1	SWITCH_1	DO_1
0x40000d9	    0xf68200000000	                      test byte [rdx], 1	       138	quote.c	FUNCTION_7	FOR_1	SWITCH_1	DO_1
0x40000e0	            0x75f0	                           jne 0x40000d2	       138	quote.c	FUNCTION_7	FOR_1	SWITCH_1	DO_1
0x40000e2	        0x41c60000	                        mov byte [r8], 0	       139	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x40000e6	          0x488906	                    mov qword [rsi], rax	       140	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x40000e9	          0x4889f8	                            mov rax, rdi	       141	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x40000ec	              0xc3	                                     ret	       141	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x40000ed	      0xb800000000	                              mov eax, 0	       108	quote.c	FUNCTION_7	FOR_1	IF_2
0x40000f2	              0xc3	                                     ret	       108	quote.c	FUNCTION_7	FOR_1	IF_2
0x40000f3	          0x4889f8	                            mov rax, rdi	       119	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x40000f6	              0xc3	                                     ret	       119	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x40000f7	      0xb800000000	                              mov eax, 0	       135	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x40000fc	              0xc3	                                     ret	       135	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x40000fd	      0xb800000000	                              mov eax, 0	       135	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x4000102	            0xf3c3	                                     ret	       144	quote.c	FUNCTION_7
unquote_c_style	WHILE,0:SWITCH,2:FOR,1:functions,0:IF,4:DO,0:CALL,3:ELSE,0	146
0x4000f25	            0x4157	                                push r15	       358	quote.c	FUNCTION_20
0x4000f27	            0x4156	                                push r14	       358	quote.c	FUNCTION_20
0x4000f29	            0x4155	                                push r13	       358	quote.c	FUNCTION_20
0x4000f2b	            0x4154	                                push r12	       358	quote.c	FUNCTION_20
0x4000f2d	              0x55	                                push rbp	       358	quote.c	FUNCTION_20
0x4000f2e	              0x53	                                push rbx	       358	quote.c	FUNCTION_20
0x4000f2f	        0x4883ec08	                              sub rsp, 8	       358	quote.c	FUNCTION_20
0x4000f33	          0x4989fc	                            mov r12, rdi	       358	quote.c	FUNCTION_20
0x4000f36	          0x4989d7	                            mov r15, rdx	       358	quote.c	FUNCTION_20
0x4000f39	        0x4c8b7708	                mov r14, qword [rdi + 8]	       359	quote.c	FUNCTION_20
0x4000f3d	        0x4c8d6e01	                      lea r13, [rsi + 1]	       362	quote.c	FUNCTION_20	IF_1
0x4000f41	          0x803e22	                    cmp byte [rsi], 0x22	       362	quote.c	FUNCTION_20	IF_1
0x4000f44	     0xf85b6010000	                           jne 0x4001100	       362	quote.c	FUNCTION_20	IF_1
0x4000f4a	      0x410fb64500	                   movzx eax, byte [r13]	       961	string2.h	FUNCTION_43	WHILE_1
0x4000f4f	            0x84c0	                             test al, al	       961	string2.h	FUNCTION_43	WHILE_1
0x4000f51	            0x7437	                            je 0x4000f8a	       961	string2.h	FUNCTION_43	WHILE_1
0x4000f53	           0xfbec0	                           movsx eax, al	       961	string2.h	FUNCTION_43	WHILE_1
0x4000f56	          0x83f85c	                           cmp eax, 0x5c	       962	string2.h	FUNCTION_43	WHILE_1
0x4000f59	            0x7439	                            je 0x4000f94	       962	string2.h	FUNCTION_43	WHILE_1
0x4000f5b	          0x83f822	                           cmp eax, 0x22	       962	string2.h	FUNCTION_43	WHILE_1
0x4000f5e	            0x7434	                            je 0x4000f94	       962	string2.h	FUNCTION_43	WHILE_1
0x4000f60	        0x498d5501	                      lea rdx, [r13 + 1]	       962	string2.h	FUNCTION_43	WHILE_1
0x4000f64	      0xbb00000000	                              mov ebx, 0	       962	string2.h	FUNCTION_43	WHILE_1
0x4000f69	        0x4883c301	                              add rbx, 1	       963	string2.h	FUNCTION_43	WHILE_1
0x4000f6d	          0x4889d5	                            mov rbp, rdx	       961	string2.h	FUNCTION_43	WHILE_1
0x4000f70	           0xfb602	                   movzx eax, byte [rdx]	       961	string2.h	FUNCTION_43	WHILE_1
0x4000f73	            0x84c0	                             test al, al	       961	string2.h	FUNCTION_43	WHILE_1
0x4000f75	            0x7425	                            je 0x4000f9c	       961	string2.h	FUNCTION_43	WHILE_1
0x4000f77	           0xfbec0	                           movsx eax, al	       961	string2.h	FUNCTION_43	WHILE_1
0x4000f7a	        0x4883c201	                              add rdx, 1	       961	string2.h	FUNCTION_43	WHILE_1
0x4000f7e	          0x83f85c	                           cmp eax, 0x5c	       962	string2.h	FUNCTION_43	WHILE_1
0x4000f81	            0x7419	                            je 0x4000f9c	       962	string2.h	FUNCTION_43	WHILE_1
0x4000f83	          0x83f822	                           cmp eax, 0x22	       962	string2.h	FUNCTION_43	WHILE_1
0x4000f86	            0x75e1	                           jne 0x4000f69	       962	string2.h	FUNCTION_43	WHILE_1
0x4000f88	            0xeb12	                           jmp 0x4000f9c	       962	string2.h	FUNCTION_43	WHILE_1
0x4000f8a	          0x4c89ed	                            mov rbp, r13	       961	string2.h	FUNCTION_43	WHILE_1
0x4000f8d	      0xbb00000000	                              mov ebx, 0	       960	string2.h	FUNCTION_43
0x4000f92	            0xeb08	                           jmp 0x4000f9c	       960	string2.h	FUNCTION_43
0x4000f94	          0x4c89ed	                            mov rbp, r13	       962	string2.h	FUNCTION_43	WHILE_1
0x4000f97	      0xbb00000000	                              mov ebx, 0	       960	string2.h	FUNCTION_43
0x4000f9c	          0x4889da	                            mov rdx, rbx	       367	quote.c	FUNCTION_20	FOR_1	CALL_1
0x4000f9f	          0x4c89ee	                            mov rsi, r13	       367	quote.c	FUNCTION_20	FOR_1	CALL_1
0x4000fa2	          0x4c89e7	                            mov rdi, r12	       367	quote.c	FUNCTION_20	FOR_1	CALL_1
0x4000fa5	      0xe800000000	                          call 0x4000faa	       367	quote.c	FUNCTION_20	FOR_1	CALL_1
0x4000faa	         0xfb64500	                   movzx eax, byte [rbp]	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x4000fae	            0x3c22	                            cmp al, 0x22	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x4000fb0	            0x7409	                            je 0x4000fbb	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x4000fb2	            0x3c5c	                            cmp al, 0x5c	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x4000fb4	            0x7420	                            je 0x4000fd6	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x4000fb6	      0xe9e5000000	                           jmp 0x40010a0	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x4000fbb	          0x4d85ff	                           test r15, r15	       372	quote.c	FUNCTION_20	FOR_1	SWITCH_1	IF_2
0x4000fbe	     0xf8443010000	                            je 0x4001107	       372	quote.c	FUNCTION_20	FOR_1	SWITCH_1	IF_2
0x4000fc4	      0x498d441d01	                lea rax, [r13 + rbx + 1]	       373	quote.c	FUNCTION_20	FOR_1	SWITCH_1	IF_2
0x4000fc9	          0x498907	                    mov qword [r15], rax	       373	quote.c	FUNCTION_20	FOR_1	SWITCH_1	IF_2
0x4000fcc	      0xb800000000	                              mov eax, 0	       374	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x4000fd1	      0xe93d010000	                           jmp 0x4001113	       374	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x4000fd6	        0x4c8d6d02	                      lea r13, [rbp + 2]	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4000fda	         0xfb64501	               movzx eax, byte [rbp + 1]	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4000fde	           0xfbed8	                           movsx ebx, al	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4000fe1	          0x83e822	                           sub eax, 0x22	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4000fe4	            0x3c54	                            cmp al, 0x54	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4000fe6	     0xf87b4000000	                            ja 0x40010a0	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4000fec	           0xfb6c0	                           movzx eax, al	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4000fef	    0xff24c5000000	                       jmp qword [rax*8]	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4000ff6	      0xbb07000000	                              mov ebx, 7	       382	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4000ffb	            0xeb59	                           jmp 0x4001056	       382	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4000ffd	      0xbb08000000	                              mov ebx, 8	       383	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001002	            0xeb52	                           jmp 0x4001056	       383	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001004	      0xbb0c000000	                            mov ebx, 0xc	       384	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001009	            0xeb4b	                           jmp 0x4001056	       384	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x400100b	      0xbb0a000000	                            mov ebx, 0xa	       385	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001010	            0xeb44	                           jmp 0x4001056	       385	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001012	      0xbb0d000000	                            mov ebx, 0xd	       386	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001017	            0xeb3d	                           jmp 0x4001056	       386	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001019	      0xbb09000000	                              mov ebx, 9	       387	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x400101e	            0xeb36	                           jmp 0x4001056	       387	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001020	      0xbb0b000000	                            mov ebx, 0xb	       388	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001025	            0xeb2f	                           jmp 0x4001056	       388	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001027	          0x83eb30	                           sub ebx, 0x30	       395	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x400102a	          0xc1e306	                              shl ebx, 6	       395	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x400102d	         0xfbe4502	               movsx eax, byte [rbp + 2]	       396	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_3
0x4001031	          0x8d50d0	                   lea edx, [rax - 0x30]	       396	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_3
0x4001034	          0x83fa07	                              cmp edx, 7	       396	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_3
0x4001037	            0x7767	                            ja 0x40010a0	       396	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_3
0x4001039	    0x8d04c580feff	                lea eax, [rax*8 - 0x180]	       398	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001040	             0x9d8	                             or eax, ebx	       398	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001042	        0x4c8d6d04	                      lea r13, [rbp + 4]	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x4001046	         0xfbe5503	               movsx edx, byte [rbp + 3]	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x400104a	          0x8d4ad0	                   lea ecx, [rdx - 0x30]	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x400104d	          0x83f907	                              cmp ecx, 7	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x4001050	            0x774e	                            ja 0x40010a0	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x4001052	            0x89cb	                            mov ebx, ecx	       401	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001054	             0x9c3	                             or ebx, eax	       401	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x4001056	        0x498b0424	                    mov rax, qword [r12]	       141	strbuf.h	FUNCTION_26
0x400105a	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x400105d	            0x740b	                            je 0x400106a	       141	strbuf.h	FUNCTION_26
0x400105f	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001063	      0x4939442408	                cmp qword [r12 + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001068	            0x750d	                           jne 0x4001077	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400106a	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400106f	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001072	      0xe800000000	                          call 0x4001077	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001077	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_28
0x400107c	      0x498b442408	                mov rax, qword [r12 + 8]	       229	strbuf.h	FUNCTION_28
0x4001081	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x4001085	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_28
0x400108a	          0x881c02	                mov byte [rdx + rax], bl	       229	strbuf.h	FUNCTION_28
0x400108d	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001092	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_28
0x4001097	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x400109b	      0xe9aafeffff	                           jmp 0x4000f4a	       230	strbuf.h	FUNCTION_28
0x40010a0	        0x498b0424	                    mov rax, qword [r12]	       162	strbuf.h	FUNCTION_27	IF_1
0x40010a4	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_27	IF_1
0x40010a8	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_27	IF_1
0x40010ac	          0x4939c6	                            cmp r14, rax	       162	strbuf.h	FUNCTION_27	IF_1
0x40010af	            0x760f	                           jbe 0x40010c0	       162	strbuf.h	FUNCTION_27	IF_1
0x40010b1	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_27	CALL_1
0x40010b6	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_27	CALL_1
0x40010bb	      0xe800000000	                          call 0x40010c0	       163	strbuf.h	FUNCTION_27	CALL_1
0x40010c0	      0x4d89742408	                mov qword [r12 + 8], r14	       164	strbuf.h	FUNCTION_27
0x40010c5	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       165	strbuf.h	FUNCTION_27	IF_2
0x40010ca	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_27	IF_2
0x40010d0	            0x740c	                            je 0x40010de	       165	strbuf.h	FUNCTION_27	IF_2
0x40010d2	      0x42c6043000	                 mov byte [rax + r14], 0	       166	strbuf.h	FUNCTION_27	IF_2
0x40010d7	      0xb8ffffffff	                     mov eax, 0xffffffff	       412	quote.c	FUNCTION_20
0x40010dc	            0xeb35	                           jmp 0x4001113	       412	quote.c	FUNCTION_20
0x40010de	    0x803d00000000	                cmp byte [0x040010e5], 0	       168	strbuf.h	FUNCTION_27	CALL_2
0x40010e5	            0x7427	                            je 0x400110e	       168	strbuf.h	FUNCTION_27	CALL_2
0x40010e7	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_27	CALL_2
0x40010ec	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_27	CALL_2
0x40010f1	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_27	CALL_2
0x40010f6	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_27	CALL_2
0x40010fb	      0xe800000000	                          call 0x4001100	       168	strbuf.h	FUNCTION_27	CALL_2
0x4001100	      0xb8ffffffff	                     mov eax, 0xffffffff	       363	quote.c	FUNCTION_20	IF_1
0x4001105	            0xeb0c	                           jmp 0x4001113	       363	quote.c	FUNCTION_20	IF_1
0x4001107	      0xb800000000	                              mov eax, 0	       374	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x400110c	            0xeb05	                           jmp 0x4001113	       374	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x400110e	      0xb8ffffffff	                     mov eax, 0xffffffff	       412	quote.c	FUNCTION_20
0x4001113	        0x4883c408	                              add rsp, 8	       413	quote.c	FUNCTION_20
0x4001117	              0x5b	                                 pop rbx	       413	quote.c	FUNCTION_20
0x4001118	              0x5d	                                 pop rbp	       413	quote.c	FUNCTION_20
0x4001119	            0x415c	                                 pop r12	       413	quote.c	FUNCTION_20
0x400111b	            0x415d	                                 pop r13	       413	quote.c	FUNCTION_20
0x400111d	            0x415e	                                 pop r14	       413	quote.c	FUNCTION_20
0x400111f	            0x415f	                                 pop r15	       413	quote.c	FUNCTION_20
0x4001121	              0xc3	                                     ret	       413	quote.c	FUNCTION_20
tcl_quote_buf	WHILE,1:SWITCH,1:FOR,0:functions,0:IF,0:DO,0:CALL,9:ELSE,0	136
0x4001419	            0x4154	                                push r12	       454	quote.c	FUNCTION_23
0x400141b	              0x55	                                push rbp	       454	quote.c	FUNCTION_23
0x400141c	              0x53	                                push rbx	       454	quote.c	FUNCTION_23
0x400141d	          0x4889fd	                            mov rbp, rdi	       454	quote.c	FUNCTION_23
0x4001420	          0x4989f4	                            mov r12, rsi	       454	quote.c	FUNCTION_23
0x4001423	          0x488b07	                    mov rax, qword [rdi]	       141	strbuf.h	FUNCTION_26
0x4001426	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001429	            0x740a	                            je 0x4001435	       141	strbuf.h	FUNCTION_26
0x400142b	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400142f	        0x48394708	                cmp qword [rdi + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001433	            0x750d	                           jne 0x4001442	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001435	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400143a	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_28	CALL_2
0x400143d	      0xe800000000	                          call 0x4001442	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001442	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001446	        0x488b4508	                mov rax, qword [rbp + 8]	       229	strbuf.h	FUNCTION_28
0x400144a	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x400144e	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001452	        0xc6040222	              mov byte [rdx + rax], 0x22	       229	strbuf.h	FUNCTION_28
0x4001456	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_28
0x400145a	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_28
0x400145e	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001462	      0xe93e010000	                           jmp 0x40015a5	       230	strbuf.h	FUNCTION_28
0x4001467	          0x80fb22	                            cmp bl, 0x22	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x400146a	            0x7456	                            je 0x40014c2	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x400146c	          0x80fb22	                            cmp bl, 0x22	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x400146f	            0x7f36	                            jg 0x40014a7	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001471	          0x80fb0b	                             cmp bl, 0xb	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001474	     0xf8419010000	                            je 0x4001593	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x400147a	          0x80fb0b	                             cmp bl, 0xb	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x400147d	            0x7f14	                            jg 0x4001493	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x400147f	          0x80fb09	                               cmp bl, 9	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001482	     0xf84f7000000	                            je 0x400157f	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001488	          0x80fb0a	                             cmp bl, 0xa	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x400148b	     0xf84da000000	                            je 0x400156b	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001491	            0xeb6f	                           jmp 0x4001502	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001493	          0x80fb0c	                             cmp bl, 0xc	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x4001496	     0xf84a7000000	                            je 0x4001543	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x400149c	          0x80fb0d	                             cmp bl, 0xd	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x400149f	     0xf84b2000000	                            je 0x4001557	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x40014a5	            0xeb5b	                           jmp 0x4001502	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x40014a7	          0x80fb5d	                            cmp bl, 0x5d	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x40014aa	            0x7f0c	                            jg 0x40014b8	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x40014ac	          0x80fb5b	                            cmp bl, 0x5b	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x40014af	            0x7d11	                           jge 0x40014c2	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x40014b1	          0x80fb24	                            cmp bl, 0x24	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x40014b4	            0x754c	                           jne 0x4001502	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x40014b6	            0xeb0a	                           jmp 0x40014c2	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x40014b8	          0x80fb7b	                            cmp bl, 0x7b	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x40014bb	            0x7405	                            je 0x40014c2	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x40014bd	          0x80fb7d	                            cmp bl, 0x7d	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x40014c0	            0x7540	                           jne 0x4001502	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x40014c2	        0x488b4500	                    mov rax, qword [rbp]	       141	strbuf.h	FUNCTION_26
0x40014c6	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40014c9	            0x740a	                            je 0x40014d5	       141	strbuf.h	FUNCTION_26
0x40014cb	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40014cf	        0x48394508	                cmp qword [rbp + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40014d3	            0x750d	                           jne 0x40014e2	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40014d5	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40014da	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_28	CALL_2
0x40014dd	      0xe800000000	                          call 0x40014e2	       228	strbuf.h	FUNCTION_28	CALL_2
0x40014e2	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40014e6	        0x488b4508	                mov rax, qword [rbp + 8]	       229	strbuf.h	FUNCTION_28
0x40014ea	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x40014ee	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_28
0x40014f2	        0xc604025c	              mov byte [rdx + rax], 0x5c	       229	strbuf.h	FUNCTION_28
0x40014f6	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40014fa	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_28
0x40014fe	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001502	        0x488b4500	                    mov rax, qword [rbp]	       141	strbuf.h	FUNCTION_26
0x4001506	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001509	            0x740a	                            je 0x4001515	       141	strbuf.h	FUNCTION_26
0x400150b	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400150f	        0x48394508	                cmp qword [rbp + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001513	            0x750d	                           jne 0x4001522	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001515	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400151a	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_28	CALL_2
0x400151d	      0xe800000000	                          call 0x4001522	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001522	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001526	        0x488b4508	                mov rax, qword [rbp + 8]	       229	strbuf.h	FUNCTION_28
0x400152a	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x400152e	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001532	          0x881c02	                mov byte [rdx + rax], bl	       229	strbuf.h	FUNCTION_28
0x4001535	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001539	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_28
0x400153d	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001541	            0xeb62	                           jmp 0x40015a5	       230	strbuf.h	FUNCTION_28
0x4001543	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001548	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_29	CALL_2
0x400154d	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001550	      0xe800000000	                          call 0x4001555	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001555	            0xeb4e	                           jmp 0x40015a5	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001557	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_29	CALL_2
0x400155c	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001561	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001564	      0xe800000000	                          call 0x4001569	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001569	            0xeb3a	                           jmp 0x40015a5	       279	strbuf.h	FUNCTION_29	CALL_2
0x400156b	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001570	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001575	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001578	      0xe800000000	                          call 0x400157d	       279	strbuf.h	FUNCTION_29	CALL_2
0x400157d	            0xeb26	                           jmp 0x40015a5	       279	strbuf.h	FUNCTION_29	CALL_2
0x400157f	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001584	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001589	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x400158c	      0xe800000000	                          call 0x4001591	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001591	            0xeb12	                           jmp 0x40015a5	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001593	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_29	CALL_2
0x4001598	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_29	CALL_2
0x400159d	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_29	CALL_2
0x40015a0	      0xe800000000	                          call 0x40015a5	       279	strbuf.h	FUNCTION_29	CALL_2
0x40015a5	        0x4983c401	                              add r12, 1	       458	quote.c	FUNCTION_23	WHILE_1
0x40015a9	    0x410fb65c24ff	               movzx ebx, byte [r12 - 1]	       458	quote.c	FUNCTION_23	WHILE_1
0x40015af	            0x84db	                             test bl, bl	       458	quote.c	FUNCTION_23	WHILE_1
0x40015b1	     0xf85b0feffff	                           jne 0x4001467	       458	quote.c	FUNCTION_23	WHILE_1
0x40015b7	        0x488b4500	                    mov rax, qword [rbp]	       141	strbuf.h	FUNCTION_26
0x40015bb	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40015be	            0x740a	                            je 0x40015ca	       141	strbuf.h	FUNCTION_26
0x40015c0	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40015c4	        0x483b4508	                cmp rax, qword [rbp + 8]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40015c8	            0x750d	                           jne 0x40015d7	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40015ca	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40015cf	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_28	CALL_2
0x40015d2	      0xe800000000	                          call 0x40015d7	       228	strbuf.h	FUNCTION_28	CALL_2
0x40015d7	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40015db	        0x488b4508	                mov rax, qword [rbp + 8]	       229	strbuf.h	FUNCTION_28
0x40015df	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x40015e3	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_28
0x40015e7	        0xc6040222	              mov byte [rdx + rax], 0x22	       229	strbuf.h	FUNCTION_28
0x40015eb	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40015ef	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_28
0x40015f3	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40015f7	              0x5b	                                 pop rbx	       486	quote.c	FUNCTION_23
0x40015f8	              0x5d	                                 pop rbp	       486	quote.c	FUNCTION_23
0x40015f9	            0x415c	                                 pop r12	       486	quote.c	FUNCTION_23
0x40015fb	              0xc3	                                     ret	       486	quote.c	FUNCTION_23
quote_path_relative	WHILE,0:SWITCH,0:FOR,0:functions,0:IF,0:DO,0:CALL,4:ELSE,0	46
0x4000e58	              0x53	                                push rbx	       335	quote.c	FUNCTION_19
0x4000e59	        0x4883ec20	                           sub rsp, 0x20	       335	quote.c	FUNCTION_19
0x4000e5d	          0x4889d3	                            mov rbx, rdx	       335	quote.c	FUNCTION_19
0x4000e60	    0x64488b042528	                mov rax, qword fs:[0x28]	       335	quote.c	FUNCTION_19
0x4000e69	      0x4889442418	             mov qword [rsp + 0x18], rax	       335	quote.c	FUNCTION_19
0x4000e6e	            0x31c0	                            xor eax, eax	       335	quote.c	FUNCTION_19
0x4000e70	    0x48c704240000	                      mov qword [rsp], 0	       336	quote.c	FUNCTION_19
0x4000e78	    0x48c744240800	                  mov qword [rsp + 8], 0	       336	quote.c	FUNCTION_19
0x4000e81	    0x48c744241000	               mov qword [rsp + 0x10], 0	       336	quote.c	FUNCTION_19
0x4000e8a	          0x4889e2	                            mov rdx, rsp	       337	quote.c	FUNCTION_19	CALL_1
0x4000e8d	      0xe800000000	                          call 0x4000e92	       337	quote.c	FUNCTION_19	CALL_1
0x4000e92	          0x4989c1	                             mov r9, rax	       337	quote.c	FUNCTION_19	CALL_1
0x4000e95	    0x48c743080000	                  mov qword [rbx + 8], 0	       164	strbuf.h	FUNCTION_27
0x4000e9d	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       165	strbuf.h	FUNCTION_27	IF_2
0x4000ea1	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_27	IF_2
0x4000ea7	            0x7405	                            je 0x4000eae	       165	strbuf.h	FUNCTION_27	IF_2
0x4000ea9	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_27	IF_2
0x4000eac	            0xeb22	                           jmp 0x4000ed0	       166	strbuf.h	FUNCTION_27	IF_2
0x4000eae	    0x803d00000000	                cmp byte [0x04000eb5], 0	       168	strbuf.h	FUNCTION_27	CALL_2
0x4000eb5	            0x7419	                            je 0x4000ed0	       168	strbuf.h	FUNCTION_27	CALL_2
0x4000eb7	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_27	CALL_2
0x4000ebc	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_27	CALL_2
0x4000ec1	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_27	CALL_2
0x4000ec6	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_27	CALL_2
0x4000ecb	      0xe800000000	                          call 0x4000ed0	       168	strbuf.h	FUNCTION_27	CALL_2
0x4000ed0	      0xb800000000	                              mov eax, 0	       339	quote.c	FUNCTION_19	CALL_3
0x4000ed5	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       339	quote.c	FUNCTION_19	CALL_3
0x4000edc	          0x4c89cf	                             mov rdi, r9	       339	quote.c	FUNCTION_19	CALL_3
0x4000edf	            0xf2ae	              repne scasb al, byte [rdi]	       339	quote.c	FUNCTION_19	CALL_3
0x4000ee1	          0x48f7d1	                                 not rcx	       339	quote.c	FUNCTION_19	CALL_3
0x4000ee4	        0x488d71ff	                      lea rsi, [rcx - 1]	       339	quote.c	FUNCTION_19	CALL_3
0x4000ee8	    0x41b800000000	                              mov r8d, 0	       339	quote.c	FUNCTION_19	CALL_3
0x4000eee	      0xb900000000	                              mov ecx, 0	       339	quote.c	FUNCTION_19	CALL_3
0x4000ef3	          0x4889da	                            mov rdx, rbx	       339	quote.c	FUNCTION_19	CALL_3
0x4000ef6	          0x4c89cf	                             mov rdi, r9	       339	quote.c	FUNCTION_19	CALL_3
0x4000ef9	      0xe806f2ffff	          call sym.quote_c_style_counted	       339	quote.c	FUNCTION_19	CALL_3
0x4000efe	          0x4889e7	                            mov rdi, rsp	       340	quote.c	FUNCTION_19	CALL_4
0x4000f01	      0xe800000000	                          call 0x4000f06	       340	quote.c	FUNCTION_19	CALL_4
0x4000f06	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       342	quote.c	FUNCTION_19
0x4000f0a	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       343	quote.c	FUNCTION_19
0x4000f0f	    0x644833142528	                xor rdx, qword fs:[0x28]	       343	quote.c	FUNCTION_19
0x4000f18	            0x7405	                            je 0x4000f1f	       343	quote.c	FUNCTION_19
0x4000f1a	      0xe800000000	                          call 0x4000f1f	       343	quote.c	FUNCTION_19
0x4000f1f	        0x4883c420	                           add rsp, 0x20	       343	quote.c	FUNCTION_19
0x4000f23	              0x5b	                                 pop rbx	       343	quote.c	FUNCTION_19
0x4000f24	              0xc3	                                     ret	       343	quote.c	FUNCTION_19
sq_quote_argv_pretty	WHILE,0:SWITCH,0:FOR,1:functions,0:IF,0:DO,0:CALL,2:ELSE,0	42
0x4000a0d	        0x48833e00	                      cmp qword [rsi], 0	        91	quote.c	FUNCTION_6	FOR_1
0x4000a11	            0x747f	                            je 0x4000a92	        91	quote.c	FUNCTION_6	FOR_1
0x4000a13	            0x4155	                                push r13	        88	quote.c	FUNCTION_6
0x4000a15	            0x4154	                                push r12	        88	quote.c	FUNCTION_6
0x4000a17	              0x55	                                push rbp	        88	quote.c	FUNCTION_6
0x4000a18	              0x53	                                push rbx	        88	quote.c	FUNCTION_6
0x4000a19	        0x4883ec08	                              sub rsp, 8	        88	quote.c	FUNCTION_6
0x4000a1d	          0x4989f5	                            mov r13, rsi	        88	quote.c	FUNCTION_6
0x4000a20	          0x4889fb	                            mov rbx, rdi	        88	quote.c	FUNCTION_6
0x4000a23	          0x4989f4	                            mov r12, rsi	        91	quote.c	FUNCTION_6	FOR_1
0x4000a26	      0xbd00000000	                              mov ebp, 0	        91	quote.c	FUNCTION_6	FOR_1
0x4000a2b	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_26
0x4000a2e	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4000a31	            0x740a	                            je 0x4000a3d	       141	strbuf.h	FUNCTION_26
0x4000a33	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000a37	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000a3b	            0x750d	                           jne 0x4000a4a	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000a3d	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000a42	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000a45	      0xe800000000	                          call 0x4000a4a	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000a4a	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4000a4e	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x4000a52	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x4000a56	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4000a5a	        0xc6040220	              mov byte [rdx + rax], 0x20	       229	strbuf.h	FUNCTION_28
0x4000a5e	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4000a62	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4000a66	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4000a6a	        0x498b3424	                    mov rsi, qword [r12]	        93	quote.c	FUNCTION_6	FOR_1	CALL_2
0x4000a6e	          0x4889df	                            mov rdi, rbx	        93	quote.c	FUNCTION_6	FOR_1	CALL_2
0x4000a71	      0xe800000000	                          call 0x4000a76	        93	quote.c	FUNCTION_6	FOR_1	CALL_2
0x4000a76	          0x83c501	                              add ebp, 1	        91	quote.c	FUNCTION_6	FOR_1
0x4000a79	          0x4863c5	                         movsxd rax, ebp	        91	quote.c	FUNCTION_6	FOR_1
0x4000a7c	      0x4d8d64c500	                  lea r12, [r13 + rax*8]	        91	quote.c	FUNCTION_6	FOR_1
0x4000a81	      0x49833c2400	                      cmp qword [r12], 0	        91	quote.c	FUNCTION_6	FOR_1
0x4000a86	            0x75a3	                           jne 0x4000a2b	        91	quote.c	FUNCTION_6	FOR_1
0x4000a88	        0x4883c408	                              add rsp, 8	        95	quote.c	FUNCTION_6
0x4000a8c	              0x5b	                                 pop rbx	        95	quote.c	FUNCTION_6
0x4000a8d	              0x5d	                                 pop rbp	        95	quote.c	FUNCTION_6
0x4000a8e	            0x415c	                                 pop r12	        95	quote.c	FUNCTION_6
0x4000a90	            0x415d	                                 pop r13	        95	quote.c	FUNCTION_6
0x4000a92	            0xf3c3	                                     ret	        95	quote.c	FUNCTION_6
sq_quotef	WHILE,0:SWITCH,0:FOR,0:functions,0:IF,0:DO,0:CALL,5:ELSE,0	44
0x400088b	              0x53	                                push rbx	        63	quote.c	FUNCTION_4
0x400088c	    0x4881ecf00000	                           sub rsp, 0xf0	        63	quote.c	FUNCTION_4
0x4000893	          0x4889fb	                            mov rbx, rdi	        63	quote.c	FUNCTION_4
0x4000896	      0x4889542450	             mov qword [rsp + 0x50], rdx	        63	quote.c	FUNCTION_4
0x400089b	      0x48894c2458	             mov qword [rsp + 0x58], rcx	        63	quote.c	FUNCTION_4
0x40008a0	      0x4c89442460	              mov qword [rsp + 0x60], r8	        63	quote.c	FUNCTION_4
0x40008a5	      0x4c894c2468	              mov qword [rsp + 0x68], r9	        63	quote.c	FUNCTION_4
0x40008aa	            0x84c0	                             test al, al	        63	quote.c	FUNCTION_4
0x40008ac	            0x743d	                            je 0x40008eb	        63	quote.c	FUNCTION_4
0x40008ae	       0xf29442470	       movaps xmmword [rsp + 0x70], xmm0	        63	quote.c	FUNCTION_4
0x40008b3	     0xf298c248000	       movaps xmmword [rsp + 0x80], xmm1	        63	quote.c	FUNCTION_4
0x40008bb	     0xf2994249000	       movaps xmmword [rsp + 0x90], xmm2	        63	quote.c	FUNCTION_4
0x40008c3	     0xf299c24a000	       movaps xmmword [rsp + 0xa0], xmm3	        63	quote.c	FUNCTION_4
0x40008cb	     0xf29a424b000	       movaps xmmword [rsp + 0xb0], xmm4	        63	quote.c	FUNCTION_4
0x40008d3	     0xf29ac24c000	       movaps xmmword [rsp + 0xc0], xmm5	        63	quote.c	FUNCTION_4
0x40008db	     0xf29b424d000	       movaps xmmword [rsp + 0xd0], xmm6	        63	quote.c	FUNCTION_4
0x40008e3	     0xf29bc24e000	       movaps xmmword [rsp + 0xe0], xmm7	        63	quote.c	FUNCTION_4
0x40008eb	    0x64488b042528	                mov rax, qword fs:[0x28]	        63	quote.c	FUNCTION_4
0x40008f4	      0x4889442438	             mov qword [rsp + 0x38], rax	        63	quote.c	FUNCTION_4
0x40008f9	            0x31c0	                            xor eax, eax	        63	quote.c	FUNCTION_4
0x40008fb	    0x48c704240000	                      mov qword [rsp], 0	        64	quote.c	FUNCTION_4
0x4000903	    0x48c744240800	                  mov qword [rsp + 8], 0	        64	quote.c	FUNCTION_4
0x400090c	    0x48c744241000	               mov qword [rsp + 0x10], 0	        64	quote.c	FUNCTION_4
0x4000915	    0xc74424201000	           mov dword [rsp + 0x20], 0x10 	        67	quote.c	FUNCTION_4	CALL_1
0x400091d	    0xc74424243000	           mov dword [rsp + 0x24], 0x30 	        67	quote.c	FUNCTION_4	CALL_1
0x4000925	    0x488d84240001	                  lea rax, [rsp + 0x100]	        67	quote.c	FUNCTION_4	CALL_1
0x400092d	      0x4889442428	             mov qword [rsp + 0x28], rax	        67	quote.c	FUNCTION_4	CALL_1
0x4000932	      0x488d442440	                   lea rax, [rsp + 0x40]	        67	quote.c	FUNCTION_4	CALL_1
0x4000937	      0x4889442430	             mov qword [rsp + 0x30], rax	        67	quote.c	FUNCTION_4	CALL_1
0x400093c	      0x488d542420	                   lea rdx, [rsp + 0x20]	        68	quote.c	FUNCTION_4	CALL_2
0x4000941	          0x4889e7	                            mov rdi, rsp	        68	quote.c	FUNCTION_4	CALL_2
0x4000944	      0xe800000000	                          call 0x4000949	        68	quote.c	FUNCTION_4	CALL_2
0x4000949	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        71	quote.c	FUNCTION_4	CALL_4
0x400094e	          0x4889df	                            mov rdi, rbx	        71	quote.c	FUNCTION_4	CALL_4
0x4000951	      0xe800000000	                          call 0x4000956	        71	quote.c	FUNCTION_4	CALL_4
0x4000956	          0x4889e7	                            mov rdi, rsp	        72	quote.c	FUNCTION_4	CALL_5
0x4000959	      0xe800000000	                          call 0x400095e	        72	quote.c	FUNCTION_4	CALL_5
0x400095e	      0x488b442438	            mov rax, qword [rsp + 0x38] 	        73	quote.c	FUNCTION_4
0x4000963	    0x644833042528	                xor rax, qword fs:[0x28]	        73	quote.c	FUNCTION_4
0x400096c	            0x7405	                            je 0x4000973	        73	quote.c	FUNCTION_4
0x400096e	      0xe800000000	                          call 0x4000973	        73	quote.c	FUNCTION_4
0x4000973	    0x4881c4f00000	                           add rsp, 0xf0	        73	quote.c	FUNCTION_4
0x400097a	              0x5b	                                 pop rbx	        73	quote.c	FUNCTION_4
0x400097b	              0xc3	                                     ret	        73	quote.c	FUNCTION_4
write_name_quoted_relative	WHILE,0:SWITCH,0:FOR,0:functions,0:IF,0:DO,0:CALL,3:ELSE,0	27
0x4000dea	              0x55	                                push rbp	       323	quote.c	FUNCTION_18
0x4000deb	              0x53	                                push rbx	       323	quote.c	FUNCTION_18
0x4000dec	        0x4883ec28	                           sub rsp, 0x28	       323	quote.c	FUNCTION_18
0x4000df0	          0x4889d3	                            mov rbx, rdx	       323	quote.c	FUNCTION_18
0x4000df3	            0x89cd	                            mov ebp, ecx	       323	quote.c	FUNCTION_18
0x4000df5	    0x64488b042528	                mov rax, qword fs:[0x28]	       323	quote.c	FUNCTION_18
0x4000dfe	      0x4889442418	             mov qword [rsp + 0x18], rax	       323	quote.c	FUNCTION_18
0x4000e03	            0x31c0	                            xor eax, eax	       323	quote.c	FUNCTION_18
0x4000e05	    0x48c704240000	                      mov qword [rsp], 0	       324	quote.c	FUNCTION_18
0x4000e0d	    0x48c744240800	                  mov qword [rsp + 8], 0	       324	quote.c	FUNCTION_18
0x4000e16	    0x48c744241000	               mov qword [rsp + 0x10], 0	       324	quote.c	FUNCTION_18
0x4000e1f	          0x4889e2	                            mov rdx, rsp	       326	quote.c	FUNCTION_18	CALL_1
0x4000e22	      0xe800000000	                          call 0x4000e27	       326	quote.c	FUNCTION_18	CALL_1
0x4000e27	            0x89ea	                            mov edx, ebp	       327	quote.c	FUNCTION_18	CALL_2
0x4000e29	          0x4889de	                            mov rsi, rbx	       327	quote.c	FUNCTION_18	CALL_2
0x4000e2c	          0x4889c7	                            mov rdi, rax	       327	quote.c	FUNCTION_18	CALL_2
0x4000e2f	      0xe800000000	                          call 0x4000e34	       327	quote.c	FUNCTION_18	CALL_2
0x4000e34	          0x4889e7	                            mov rdi, rsp	       329	quote.c	FUNCTION_18	CALL_3
0x4000e37	      0xe800000000	                          call 0x4000e3c	       329	quote.c	FUNCTION_18	CALL_3
0x4000e3c	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       330	quote.c	FUNCTION_18
0x4000e41	    0x644833042528	                xor rax, qword fs:[0x28]	       330	quote.c	FUNCTION_18
0x4000e4a	            0x7405	                            je 0x4000e51	       330	quote.c	FUNCTION_18
0x4000e4c	      0xe800000000	                          call 0x4000e51	       330	quote.c	FUNCTION_18
0x4000e51	        0x4883c428	                           add rsp, 0x28	       330	quote.c	FUNCTION_18
0x4000e55	              0x5b	                                 pop rbx	       330	quote.c	FUNCTION_18
0x4000e56	              0x5d	                                 pop rbp	       330	quote.c	FUNCTION_18
0x4000e57	              0xc3	                                     ret	       330	quote.c	FUNCTION_18
sq_dequote	WHILE,0:SWITCH,0:FOR,0:functions,0:IF,0:DO,0:CALL,1:ELSE,0	3
0x4000a94	      0xbe00000000	                              mov esi, 0	       148	quote.c	FUNCTION_8	CALL_1
0x4000a99	      0xe8a2f5ffff	                call sym.sq_dequote_step	       148	quote.c	FUNCTION_8	CALL_1
0x4000a9e	            0xf3c3	                                     ret	       149	quote.c	FUNCTION_8
quote_c_style	WHILE,0:SWITCH,0:FOR,0:functions,0:IF,0:DO,0:CALL,1:ELSE,0	8
0x4000c14	        0x4883ec08	                              sub rsp, 8	       291	quote.c	FUNCTION_15
0x4000c18	          0x4189c8	                            mov r8d, ecx	       291	quote.c	FUNCTION_15
0x4000c1b	          0x4889d1	                            mov rcx, rdx	       292	quote.c	FUNCTION_15	CALL_1
0x4000c1e	          0x4889f2	                            mov rdx, rsi	       292	quote.c	FUNCTION_15	CALL_1
0x4000c21	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       292	quote.c	FUNCTION_15	CALL_1
0x4000c28	      0xe8d7f4ffff	          call sym.quote_c_style_counted	       292	quote.c	FUNCTION_15	CALL_1
0x4000c2d	        0x4883c408	                              add rsp, 8	       293	quote.c	FUNCTION_15
0x4000c31	              0xc3	                                     ret	       293	quote.c	FUNCTION_15
sq_dequote_to_argv	WHILE,0:SWITCH,0:FOR,0:functions,0:IF,0:DO,0:CALL,1:ELSE,0	72
0x4000aa0	            0x4156	                                push r14	       175	quote.c	FUNCTION_10
0x4000aa2	            0x4155	                                push r13	       175	quote.c	FUNCTION_10
0x4000aa4	            0x4154	                                push r12	       175	quote.c	FUNCTION_10
0x4000aa6	              0x55	                                push rbp	       175	quote.c	FUNCTION_10
0x4000aa7	              0x53	                                push rbx	       175	quote.c	FUNCTION_10
0x4000aa8	        0x4883ec10	                           sub rsp, 0x10	       175	quote.c	FUNCTION_10
0x4000aac	    0x64488b042528	                mov rax, qword fs:[0x28]	       175	quote.c	FUNCTION_10
0x4000ab5	      0x4889442408	                mov qword [rsp + 8], rax	       175	quote.c	FUNCTION_10
0x4000aba	            0x31c0	                            xor eax, eax	       175	quote.c	FUNCTION_10
0x4000abc	        0x48893c24	                    mov qword [rsp], rdi	       155	quote.c	FUNCTION_9
0x4000ac0	          0x803f00	                       cmp byte [rdi], 0	       157	quote.c	FUNCTION_9	IF_1
0x4000ac3	     0xf84ad000000	                            je 0x4000b76	       157	quote.c	FUNCTION_9	IF_1
0x4000ac9	          0x4889f5	                            mov rbp, rsi	       157	quote.c	FUNCTION_9	IF_1
0x4000acc	          0x4989d4	                            mov r12, rdx	       157	quote.c	FUNCTION_9	IF_1
0x4000acf	          0x4989cd	                            mov r13, rcx	       157	quote.c	FUNCTION_9	IF_1
0x4000ad2	    0x49beffffffff	         movabs r14, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_68	IF_1
0x4000adc	          0x4889e6	                            mov rsi, rsp	       160	quote.c	FUNCTION_9	DO_1	CALL_1
0x4000adf	        0x488b3c24	                    mov rdi, qword [rsp]	       160	quote.c	FUNCTION_9	DO_1	CALL_1
0x4000ae3	      0xe858f5ffff	                call sym.sq_dequote_step	       160	quote.c	FUNCTION_9	DO_1	CALL_1
0x4000ae8	          0x4889c3	                            mov rbx, rax	       160	quote.c	FUNCTION_9	DO_1	CALL_1
0x4000aeb	          0x4885c0	                           test rax, rax	       161	quote.c	FUNCTION_9	DO_1	IF_2
0x4000aee	     0xf8489000000	                            je 0x4000b7d	       161	quote.c	FUNCTION_9	DO_1	IF_2
0x4000af4	          0x4885ed	                           test rbp, rbp	       163	quote.c	FUNCTION_9	DO_1	IF_3
0x4000af7	            0x746b	                            je 0x4000b64	       163	quote.c	FUNCTION_9	DO_1	IF_3
0x4000af9	        0x418b0424	                    mov eax, dword [r12]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000afd	          0x8d5001	                      lea edx, [rax + 1]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000b00	        0x418b4500	                    mov eax, dword [r13]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000b04	            0x39c2	                            cmp edx, eax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000b06	            0x7e47	                           jle 0x4000b4f	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000b08	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000b0c	            0x89c6	                            mov esi, eax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000b0e	          0xc1ee1f	                           shr esi, 0x1f	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000b11	             0x1c6	                            add esi, eax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000b13	            0xd1fe	                              sar esi, 1	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000b15	            0x39f2	                            cmp edx, esi	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000b17	           0xf4ff2	                          cmovg esi, edx	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000b1a	        0x41897500	                    mov dword [r13], esi	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000b1e	          0x4863d6	                         movsxd rdx, esi	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000b21	          0x4c39f2	                            cmp rdx, r14	       795	git-compat-util.h	FUNCTION_68	IF_1
0x4000b24	            0x7614	                           jbe 0x4000b3a	       795	git-compat-util.h	FUNCTION_68	IF_1
0x4000b26	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_68	IF_1	CALL_1
0x4000b2b	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_68	IF_1	CALL_1
0x4000b30	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_68	IF_1	CALL_1
0x4000b35	      0xe800000000	                          call 0x4000b3a	       796	git-compat-util.h	FUNCTION_68	IF_1	CALL_1
0x4000b3a	    0x488d34d50000	                        lea rsi, [rdx*8]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000b42	        0x488b7d00	                    mov rdi, qword [rbp]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000b46	      0xe800000000	                          call 0x4000b4b	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000b4b	        0x48894500	                    mov qword [rbp], rax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x4000b4f	        0x488b5500	                    mov rdx, qword [rbp]	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x4000b53	        0x418b0424	                    mov eax, dword [r12]	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x4000b57	          0x8d4801	                      lea ecx, [rax + 1]	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x4000b5a	        0x41890c24	                    mov dword [r12], ecx	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x4000b5e	            0x4898	                                    cdqe	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x4000b60	        0x48891cc2	            mov qword [rdx + rax*8], rbx	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x4000b64	      0x48833c2400	                      cmp qword [rsp], 0	       169	quote.c	FUNCTION_9	DO_1
0x4000b69	     0xf856dffffff	                           jne 0x4000adc	       169	quote.c	FUNCTION_9	DO_1
0x4000b6f	      0xb800000000	                              mov eax, 0	       171	quote.c	FUNCTION_9
0x4000b74	            0xeb0c	                           jmp 0x4000b82	       171	quote.c	FUNCTION_9
0x4000b76	      0xb800000000	                              mov eax, 0	       158	quote.c	FUNCTION_9	IF_1
0x4000b7b	            0xeb05	                           jmp 0x4000b82	       158	quote.c	FUNCTION_9	IF_1
0x4000b7d	      0xb8ffffffff	                     mov eax, 0xffffffff	       162	quote.c	FUNCTION_9	DO_1	IF_2
0x4000b82	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       177	quote.c	FUNCTION_10
0x4000b87	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       177	quote.c	FUNCTION_10
0x4000b90	            0x7405	                            je 0x4000b97	       177	quote.c	FUNCTION_10
0x4000b92	      0xe800000000	                          call 0x4000b97	       177	quote.c	FUNCTION_10
0x4000b97	        0x4883c410	                           add rsp, 0x10	       177	quote.c	FUNCTION_10
0x4000b9b	              0x5b	                                 pop rbx	       177	quote.c	FUNCTION_10
0x4000b9c	              0x5d	                                 pop rbp	       177	quote.c	FUNCTION_10
0x4000b9d	            0x415c	                                 pop r12	       177	quote.c	FUNCTION_10
0x4000b9f	            0x415d	                                 pop r13	       177	quote.c	FUNCTION_10
0x4000ba1	            0x415e	                                 pop r14	       177	quote.c	FUNCTION_10
0x4000ba3	              0xc3	                                     ret	       177	quote.c	FUNCTION_10
sq_quote_buf	WHILE,2:SWITCH,0:FOR,0:functions,0:IF,1:DO,0:CALL,9:ELSE,0	135
0x400062e	            0x4156	                                push r14	        25	quote.c	FUNCTION_2
0x4000630	            0x4155	                                push r13	        25	quote.c	FUNCTION_2
0x4000632	            0x4154	                                push r12	        25	quote.c	FUNCTION_2
0x4000634	              0x55	                                push rbp	        25	quote.c	FUNCTION_2
0x4000635	              0x53	                                push rbx	        25	quote.c	FUNCTION_2
0x4000636	          0x4889fb	                            mov rbx, rdi	        25	quote.c	FUNCTION_2
0x4000639	          0x4989f6	                            mov r14, rsi	        25	quote.c	FUNCTION_2
0x400063c	    0x41bd00000000	                             mov r13d, 0	        26	quote.c	FUNCTION_2
0x4000642	        0x48397710	            cmp qword [rdi + 0x10], rsi 	        28	quote.c	FUNCTION_2	IF_1
0x4000646	            0x750d	                           jne 0x4000655	        28	quote.c	FUNCTION_2	IF_1
0x4000648	      0xbe00000000	                              mov esi, 0	        29	quote.c	FUNCTION_2	CALL_1
0x400064d	      0xe800000000	                          call 0x4000652	        29	quote.c	FUNCTION_2	CALL_1
0x4000652	          0x4989c5	                            mov r13, rax	        29	quote.c	FUNCTION_2	CALL_1
0x4000655	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_26
0x4000658	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x400065b	            0x740a	                            je 0x4000667	       141	strbuf.h	FUNCTION_26
0x400065d	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000661	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000665	            0x750d	                           jne 0x4000674	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000667	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400066c	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x400066f	      0xe800000000	                          call 0x4000674	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000674	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4000678	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x400067c	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x4000680	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4000684	        0xc6040227	              mov byte [rdx + rax], 0x27	       229	strbuf.h	FUNCTION_28
0x4000688	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x400068c	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4000690	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4000694	    0x49bc01000000	                movabs r12, 0x8200000001	       961	string2.h	FUNCTION_43	WHILE_1
0x400069e	      0xe9f1000000	                           jmp 0x4000794	       961	string2.h	FUNCTION_43	WHILE_1
0x40006a3	        0x498d4601	                      lea rax, [r14 + 1]	       961	string2.h	FUNCTION_43	WHILE_1
0x40006a7	      0xba00000000	                              mov edx, 0	       962	string2.h	FUNCTION_43	WHILE_1
0x40006ac	        0x4883c201	                              add rdx, 1	       963	string2.h	FUNCTION_43	WHILE_1
0x40006b0	          0x4889c5	                            mov rbp, rax	       961	string2.h	FUNCTION_43	WHILE_1
0x40006b3	           0xfb608	                   movzx ecx, byte [rax]	       961	string2.h	FUNCTION_43	WHILE_1
0x40006b6	          0x80f927	                            cmp cl, 0x27	       961	string2.h	FUNCTION_43	WHILE_1
0x40006b9	     0xf8744010000	                            ja 0x4000803	       961	string2.h	FUNCTION_43	WHILE_1
0x40006bf	        0x4883c001	                              add rax, 1	       961	string2.h	FUNCTION_43	WHILE_1
0x40006c3	        0x490fa3cc	                             bt r12, rcx	       961	string2.h	FUNCTION_43	WHILE_1
0x40006c7	            0x73e3	                           jae 0x40006ac	       961	string2.h	FUNCTION_43	WHILE_1
0x40006c9	          0x4c89f6	                            mov rsi, r14	        34	quote.c	FUNCTION_2	WHILE_1	CALL_3
0x40006cc	          0x4889df	                            mov rdi, rbx	        34	quote.c	FUNCTION_2	WHILE_1	CALL_3
0x40006cf	      0xe800000000	                          call 0x40006d4	        34	quote.c	FUNCTION_2	WHILE_1	CALL_3
0x40006d4	         0xfb64500	                   movzx eax, byte [rbp]	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_4
0x40006d8	            0x3c27	                            cmp al, 0x27	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_4
0x40006da	            0x7408	                            je 0x40006e4	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_4
0x40006dc	            0x3c21	                            cmp al, 0x21	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_4
0x40006de	     0xf85ad000000	                           jne 0x4000791	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_4
0x40006e4	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_29	CALL_2
0x40006e9	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_29	CALL_2
0x40006ee	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_29	CALL_2
0x40006f1	      0xe800000000	                          call 0x40006f6	       279	strbuf.h	FUNCTION_29	CALL_2
0x40006f6	        0x4883c501	                              add rbp, 1	        38	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_6
0x40006fa	      0x440fb675ff	              movzx r14d, byte [rbp - 1]	        38	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_6
0x40006ff	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_26
0x4000702	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4000705	            0x740a	                            je 0x4000711	       141	strbuf.h	FUNCTION_26
0x4000707	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400070b	        0x483b4308	                cmp rax, qword [rbx + 8]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400070f	            0x750d	                           jne 0x400071e	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000711	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000716	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000719	      0xe800000000	                          call 0x400071e	       228	strbuf.h	FUNCTION_28	CALL_2
0x400071e	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4000722	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x4000726	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x400072a	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x400072e	        0x44883402	              mov byte [rdx + rax], r14b	       229	strbuf.h	FUNCTION_28
0x4000732	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4000736	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x400073a	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x400073e	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_26
0x4000741	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4000744	            0x740a	                            je 0x4000750	       141	strbuf.h	FUNCTION_26
0x4000746	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400074a	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400074e	            0x750d	                           jne 0x400075d	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000750	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000755	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000758	      0xe800000000	                          call 0x400075d	       228	strbuf.h	FUNCTION_28	CALL_2
0x400075d	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4000761	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x4000765	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x4000769	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x400076d	        0xc6040227	              mov byte [rdx + rax], 0x27	       229	strbuf.h	FUNCTION_28
0x4000771	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4000775	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4000779	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x400077d	         0xfb64500	                   movzx eax, byte [rbp]	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_4
0x4000781	            0x3c27	                            cmp al, 0x27	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_4
0x4000783	     0xf845bffffff	                            je 0x40006e4	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_4
0x4000789	            0x3c21	                            cmp al, 0x21	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_4
0x400078b	     0xf8453ffffff	                            je 0x40006e4	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_4
0x4000791	          0x4989ee	                            mov r14, rbp	       962	string2.h	FUNCTION_43	WHILE_1
0x4000794	        0x410fb606	                   movzx eax, byte [r14]	        32	quote.c	FUNCTION_2	WHILE_1
0x4000798	            0x84c0	                             test al, al	        32	quote.c	FUNCTION_2	WHILE_1
0x400079a	            0x741e	                            je 0x40007ba	        32	quote.c	FUNCTION_2	WHILE_1
0x400079c	           0xfbec0	                           movsx eax, al	       961	string2.h	FUNCTION_43	WHILE_1
0x400079f	          0x83f821	                           cmp eax, 0x21	       962	string2.h	FUNCTION_43	WHILE_1
0x40007a2	            0x7409	                            je 0x40007ad	       962	string2.h	FUNCTION_43	WHILE_1
0x40007a4	          0x83f827	                           cmp eax, 0x27	       962	string2.h	FUNCTION_43	WHILE_1
0x40007a7	     0xf85f6feffff	                           jne 0x40006a3	       962	string2.h	FUNCTION_43	WHILE_1
0x40007ad	          0x4c89f5	                            mov rbp, r14	       961	string2.h	FUNCTION_43	WHILE_1
0x40007b0	      0xba00000000	                              mov edx, 0	       962	string2.h	FUNCTION_43	WHILE_1
0x40007b5	      0xe90fffffff	                           jmp 0x40006c9	       962	string2.h	FUNCTION_43	WHILE_1
0x40007ba	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_26
0x40007bd	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40007c0	            0x740a	                            je 0x40007cc	       141	strbuf.h	FUNCTION_26
0x40007c2	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40007c6	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40007ca	            0x750d	                           jne 0x40007d9	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40007cc	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40007d1	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x40007d4	      0xe800000000	                          call 0x40007d9	       228	strbuf.h	FUNCTION_28	CALL_2
0x40007d9	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40007dd	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x40007e1	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x40007e5	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x40007e9	        0xc6040227	              mov byte [rdx + rax], 0x27	       229	strbuf.h	FUNCTION_28
0x40007ed	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40007f1	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x40007f5	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40007f9	          0x4c89ef	                            mov rdi, r13	        43	quote.c	FUNCTION_2	CALL_9
0x40007fc	      0xe800000000	                          call 0x4000801	        43	quote.c	FUNCTION_2	CALL_9
0x4000801	            0xeb09	                           jmp 0x400080c	        44	quote.c	FUNCTION_2
0x4000803	        0x4883c001	                              add rax, 1	        44	quote.c	FUNCTION_2
0x4000807	      0xe9a0feffff	                           jmp 0x40006ac	        44	quote.c	FUNCTION_2
0x400080c	              0x5b	                                 pop rbx	        44	quote.c	FUNCTION_2
0x400080d	              0x5d	                                 pop rbp	        44	quote.c	FUNCTION_2
0x400080e	            0x415c	                                 pop r12	        44	quote.c	FUNCTION_2
0x4000810	            0x415d	                                 pop r13	        44	quote.c	FUNCTION_2
0x4000812	            0x415e	                                 pop r14	        44	quote.c	FUNCTION_2
0x4000814	              0xc3	                                     ret	        44	quote.c	FUNCTION_2
write_name_quoted	WHILE,0:SWITCH,0:FOR,0:functions,0:IF,1:DO,0:CALL,3:ELSE,1	20
0x4000db1	              0x55	                                push rbp	       312	quote.c	FUNCTION_17
0x4000db2	              0x53	                                push rbx	       312	quote.c	FUNCTION_17
0x4000db3	        0x4883ec08	                              sub rsp, 8	       312	quote.c	FUNCTION_17
0x4000db7	          0x4889f5	                            mov rbp, rsi	       312	quote.c	FUNCTION_17
0x4000dba	            0x89d3	                            mov ebx, edx	       312	quote.c	FUNCTION_17
0x4000dbc	            0x85d2	                           test edx, edx	       313	quote.c	FUNCTION_17	IF_1
0x4000dbe	            0x7414	                            je 0x4000dd4	       313	quote.c	FUNCTION_17	IF_1
0x4000dc0	      0xb900000000	                              mov ecx, 0	       314	quote.c	FUNCTION_17	IF_1	CALL_1
0x4000dc5	          0x4889f2	                            mov rdx, rsi	       314	quote.c	FUNCTION_17	IF_1	CALL_1
0x4000dc8	      0xbe00000000	                              mov esi, 0	       314	quote.c	FUNCTION_17	IF_1	CALL_1
0x4000dcd	      0xe800000000	                          call 0x4000dd2	       314	quote.c	FUNCTION_17	IF_1	CALL_1
0x4000dd2	            0xeb05	                           jmp 0x4000dd9	       314	quote.c	FUNCTION_17	IF_1	CALL_1
0x4000dd4	      0xe800000000	                          call 0x4000dd9	       316	quote.c	FUNCTION_17	ELSE_1	CALL_2
0x4000dd9	          0x4889ee	                            mov rsi, rbp	       318	quote.c	FUNCTION_17	CALL_3
0x4000ddc	            0x89df	                            mov edi, ebx	       318	quote.c	FUNCTION_17	CALL_3
0x4000dde	      0xe800000000	                          call 0x4000de3	       318	quote.c	FUNCTION_17	CALL_3
0x4000de3	        0x4883c408	                              add rsp, 8	       319	quote.c	FUNCTION_17
0x4000de7	              0x5b	                                 pop rbx	       319	quote.c	FUNCTION_17
0x4000de8	              0x5d	                                 pop rbp	       319	quote.c	FUNCTION_17
0x4000de9	              0xc3	                                     ret	       319	quote.c	FUNCTION_17
python_quote_buf	WHILE,1:SWITCH,0:FOR,0:functions,0:IF,2:DO,0:CALL,6:ELSE,0	123
0x400125d	            0x4154	                                push r12	       433	quote.c	FUNCTION_22
0x400125f	              0x55	                                push rbp	       433	quote.c	FUNCTION_22
0x4001260	              0x53	                                push rbx	       433	quote.c	FUNCTION_22
0x4001261	          0x4889fb	                            mov rbx, rdi	       433	quote.c	FUNCTION_22
0x4001264	          0x4989f4	                            mov r12, rsi	       433	quote.c	FUNCTION_22
0x4001267	          0x488b07	                    mov rax, qword [rdi]	       141	strbuf.h	FUNCTION_26
0x400126a	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x400126d	            0x740a	                            je 0x4001279	       141	strbuf.h	FUNCTION_26
0x400126f	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001273	        0x48394708	                cmp qword [rdi + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001277	            0x750d	                           jne 0x4001286	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001279	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400127e	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001281	      0xe800000000	                          call 0x4001286	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001286	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x400128a	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x400128e	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x4001292	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001296	        0xc6040227	              mov byte [rdx + rax], 0x27	       229	strbuf.h	FUNCTION_28
0x400129a	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x400129e	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x40012a2	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40012a6	      0xe917010000	                           jmp 0x40013c2	       230	strbuf.h	FUNCTION_28
0x40012ab	        0x4080fd0a	                            cmp bpl, 0xa	       441	quote.c	FUNCTION_22	WHILE_1	IF_1
0x40012af	     0xf8583000000	                           jne 0x4001338	       441	quote.c	FUNCTION_22	WHILE_1	IF_1
0x40012b5	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_26
0x40012b8	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40012bb	            0x740a	                            je 0x40012c7	       141	strbuf.h	FUNCTION_26
0x40012bd	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40012c1	        0x483b4308	                cmp rax, qword [rbx + 8]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40012c5	            0x750d	                           jne 0x40012d4	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40012c7	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40012cc	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x40012cf	      0xe800000000	                          call 0x40012d4	       228	strbuf.h	FUNCTION_28	CALL_2
0x40012d4	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40012d8	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x40012dc	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x40012e0	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x40012e4	        0xc604025c	              mov byte [rdx + rax], 0x5c	       229	strbuf.h	FUNCTION_28
0x40012e8	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40012ec	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x40012f0	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40012f4	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_26
0x40012f7	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40012fa	            0x740a	                            je 0x4001306	       141	strbuf.h	FUNCTION_26
0x40012fc	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001300	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001304	            0x750d	                           jne 0x4001313	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001306	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400130b	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x400130e	      0xe800000000	                          call 0x4001313	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001313	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001317	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x400131b	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x400131f	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001323	        0xc604026e	              mov byte [rdx + rax], 0x6e	       229	strbuf.h	FUNCTION_28
0x4001327	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x400132b	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x400132f	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001333	      0xe98a000000	                           jmp 0x40013c2	       444	quote.c	FUNCTION_22	WHILE_1	IF_1
0x4001338	        0x4080fd27	                           cmp bpl, 0x27	       446	quote.c	FUNCTION_22	WHILE_1	IF_2
0x400133c	            0x7406	                            je 0x4001344	       446	quote.c	FUNCTION_22	WHILE_1	IF_2
0x400133e	        0x4080fd5c	                           cmp bpl, 0x5c	       446	quote.c	FUNCTION_22	WHILE_1	IF_2
0x4001342	            0x753f	                           jne 0x4001383	       446	quote.c	FUNCTION_22	WHILE_1	IF_2
0x4001344	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_26
0x4001347	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x400134a	            0x740a	                            je 0x4001356	       141	strbuf.h	FUNCTION_26
0x400134c	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001350	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001354	            0x750d	                           jne 0x4001363	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001356	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400135b	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x400135e	      0xe800000000	                          call 0x4001363	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001363	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001367	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x400136b	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x400136f	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001373	        0xc604025c	              mov byte [rdx + rax], 0x5c	       229	strbuf.h	FUNCTION_28
0x4001377	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x400137b	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x400137f	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001383	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_26
0x4001386	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001389	            0x740a	                            je 0x4001395	       141	strbuf.h	FUNCTION_26
0x400138b	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400138f	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001393	            0x750d	                           jne 0x40013a2	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001395	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400139a	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x400139d	      0xe800000000	                          call 0x40013a2	       228	strbuf.h	FUNCTION_28	CALL_2
0x40013a2	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40013a6	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x40013aa	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x40013ae	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x40013b2	        0x40882c02	               mov byte [rdx + rax], bpl	       229	strbuf.h	FUNCTION_28
0x40013b6	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40013ba	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x40013be	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40013c2	        0x4983c401	                              add r12, 1	       440	quote.c	FUNCTION_22	WHILE_1
0x40013c6	    0x410fb66c24ff	               movzx ebp, byte [r12 - 1]	       440	quote.c	FUNCTION_22	WHILE_1
0x40013cc	          0x4084ed	                           test bpl, bpl	       440	quote.c	FUNCTION_22	WHILE_1
0x40013cf	     0xf85d6feffff	                           jne 0x40012ab	       440	quote.c	FUNCTION_22	WHILE_1
0x40013d5	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_26
0x40013d8	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40013db	            0x740a	                            je 0x40013e7	       141	strbuf.h	FUNCTION_26
0x40013dd	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40013e1	        0x483b4308	                cmp rax, qword [rbx + 8]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40013e5	            0x750d	                           jne 0x40013f4	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40013e7	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40013ec	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x40013ef	      0xe800000000	                          call 0x40013f4	       228	strbuf.h	FUNCTION_28	CALL_2
0x40013f4	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40013f8	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x40013fc	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x4001400	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001404	        0xc6040227	              mov byte [rdx + rax], 0x27	       229	strbuf.h	FUNCTION_28
0x4001408	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x400140c	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001410	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001414	              0x5b	                                 pop rbx	       451	quote.c	FUNCTION_22
0x4001415	              0x5d	                                 pop rbp	       451	quote.c	FUNCTION_22
0x4001416	            0x415c	                                 pop r12	       451	quote.c	FUNCTION_22
0x4001418	              0xc3	                                     ret	       451	quote.c	FUNCTION_22
basic_regex_quote_buf	WHILE,1:SWITCH,1:FOR,0:functions,0:IF,3:DO,0:CALL,8:ELSE,0	174
0x40015fc	            0x4154	                                push r12	       489	quote.c	FUNCTION_24
0x40015fe	              0x55	                                push rbp	       489	quote.c	FUNCTION_24
0x40015ff	              0x53	                                push rbx	       489	quote.c	FUNCTION_24
0x4001600	          0x4889fb	                            mov rbx, rdi	       489	quote.c	FUNCTION_24
0x4001603	          0x4989f4	                            mov r12, rsi	       489	quote.c	FUNCTION_24
0x4001606	          0x803e5e	                    cmp byte [rsi], 0x5e	       492	quote.c	FUNCTION_24	IF_1
0x4001609	     0xf858b000000	                           jne 0x400169a	       492	quote.c	FUNCTION_24	IF_1
0x400160f	          0x488b07	                    mov rax, qword [rdi]	       141	strbuf.h	FUNCTION_26
0x4001612	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001615	            0x740a	                            je 0x4001621	       141	strbuf.h	FUNCTION_26
0x4001617	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400161b	        0x483b4708	                cmp rax, qword [rdi + 8]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400161f	            0x750d	                           jne 0x400162e	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001621	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001626	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001629	      0xe800000000	                          call 0x400162e	       228	strbuf.h	FUNCTION_28	CALL_2
0x400162e	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001632	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x4001636	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x400163a	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x400163e	        0xc604025c	              mov byte [rdx + rax], 0x5c	       229	strbuf.h	FUNCTION_28
0x4001642	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001646	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x400164a	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x400164e	      0x498d6c2401	                      lea rbp, [r12 + 1]	       495	quote.c	FUNCTION_24	IF_1	CALL_2
0x4001653	      0x450fb62424	                  movzx r12d, byte [r12]	       495	quote.c	FUNCTION_24	IF_1	CALL_2
0x4001658	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_26
0x400165b	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x400165e	            0x740a	                            je 0x400166a	       141	strbuf.h	FUNCTION_26
0x4001660	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001664	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001668	            0x750d	                           jne 0x4001677	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400166a	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400166f	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001672	      0xe800000000	                          call 0x4001677	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001677	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x400167b	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x400167f	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x4001683	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001687	        0x44882402	              mov byte [rdx + rax], r12b	       229	strbuf.h	FUNCTION_28
0x400168b	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x400168f	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001693	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001697	          0x4989ec	                            mov r12, rbp	       495	quote.c	FUNCTION_24	IF_1	CALL_2
0x400169a	      0x41803c242a	                    cmp byte [r12], 0x2a	       497	quote.c	FUNCTION_24	IF_2
0x400169f	     0xf85be010000	                           jne 0x4001863	       497	quote.c	FUNCTION_24	IF_2
0x40016a5	        0x4983c401	                              add r12, 1	       499	quote.c	FUNCTION_24	CALL_3
0x40016a9	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_26
0x40016ac	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40016af	            0x740a	                            je 0x40016bb	       141	strbuf.h	FUNCTION_26
0x40016b1	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40016b5	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40016b9	            0x750d	                           jne 0x40016c8	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40016bb	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40016c0	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x40016c3	      0xe800000000	                          call 0x40016c8	       228	strbuf.h	FUNCTION_28	CALL_2
0x40016c8	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40016cc	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x40016d0	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x40016d4	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x40016d8	        0xc604022a	              mov byte [rdx + rax], 0x2a	       229	strbuf.h	FUNCTION_28
0x40016dc	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40016e0	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x40016e4	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40016e8	      0xe976010000	                           jmp 0x4001863	       230	strbuf.h	FUNCTION_28
0x40016ed	        0x4080fd2e	                           cmp bpl, 0x2e	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x40016f1	            0x7427	                            je 0x400171a	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x40016f3	        0x4080fd2e	                           cmp bpl, 0x2e	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x40016f7	            0x7f16	                            jg 0x400170f	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x40016f9	        0x4080fd24	                           cmp bpl, 0x24	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x40016fd	     0xf849a000000	                            je 0x400179d	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x4001703	        0x4080fd2a	                           cmp bpl, 0x2a	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x4001707	     0xf8517010000	                           jne 0x4001824	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x400170d	            0xeb0b	                           jmp 0x400171a	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x400170f	          0x8d45a5	                   lea eax, [rbp - 0x5b]	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x4001712	            0x3c01	                               cmp al, 1	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x4001714	     0xf870a010000	                            ja 0x4001824	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x400171a	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_26
0x400171d	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x4001720	            0x740a	                            je 0x400172c	       141	strbuf.h	FUNCTION_26
0x4001722	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001726	        0x483b4308	                cmp rax, qword [rbx + 8]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400172a	            0x750d	                           jne 0x4001739	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400172c	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001731	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001734	      0xe800000000	                          call 0x4001739	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001739	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x400173d	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x4001741	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x4001745	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001749	        0xc604025c	              mov byte [rdx + rax], 0x5c	       229	strbuf.h	FUNCTION_28
0x400174d	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001751	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001755	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001759	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_26
0x400175c	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x400175f	            0x740a	                            je 0x400176b	       141	strbuf.h	FUNCTION_26
0x4001761	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001765	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001769	            0x750d	                           jne 0x4001778	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400176b	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001770	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001773	      0xe800000000	                          call 0x4001778	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001778	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x400177c	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x4001780	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x4001784	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001788	        0x40882c02	               mov byte [rdx + rax], bpl	       229	strbuf.h	FUNCTION_28
0x400178c	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4001790	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x4001794	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001798	      0xe9c6000000	                           jmp 0x4001863	       230	strbuf.h	FUNCTION_28
0x400179d	      0x41803c2400	                       cmp byte [r12], 0	       513	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	IF_3
0x40017a2	            0x753f	                           jne 0x40017e3	       513	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	IF_3
0x40017a4	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_26
0x40017a7	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40017aa	            0x740a	                            je 0x40017b6	       141	strbuf.h	FUNCTION_26
0x40017ac	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40017b0	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40017b4	            0x750d	                           jne 0x40017c3	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40017b6	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40017bb	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x40017be	      0xe800000000	                          call 0x40017c3	       228	strbuf.h	FUNCTION_28	CALL_2
0x40017c3	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40017c7	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x40017cb	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x40017cf	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x40017d3	        0xc604025c	              mov byte [rdx + rax], 0x5c	       229	strbuf.h	FUNCTION_28
0x40017d7	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40017db	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x40017df	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40017e3	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_26
0x40017e6	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40017e9	            0x740a	                            je 0x40017f5	       141	strbuf.h	FUNCTION_26
0x40017eb	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40017ef	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40017f3	            0x750d	                           jne 0x4001802	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40017f5	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40017fa	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x40017fd	      0xe800000000	                          call 0x4001802	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001802	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001806	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x400180a	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x400180e	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001812	        0xc6040224	              mov byte [rdx + rax], 0x24	       229	strbuf.h	FUNCTION_28
0x4001816	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x400181a	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x400181e	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001822	            0xeb3f	                           jmp 0x4001863	       230	strbuf.h	FUNCTION_28
0x4001824	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_26
0x4001827	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x400182a	            0x740a	                            je 0x4001836	       141	strbuf.h	FUNCTION_26
0x400182c	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001830	        0x483b4308	                cmp rax, qword [rbx + 8]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001834	            0x750d	                           jne 0x4001843	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4001836	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400183b	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_28	CALL_2
0x400183e	      0xe800000000	                          call 0x4001843	       228	strbuf.h	FUNCTION_28	CALL_2
0x4001843	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4001847	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_28
0x400184b	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x400184f	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4001853	        0x40882c02	               mov byte [rdx + rax], bpl	       229	strbuf.h	FUNCTION_28
0x4001857	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_28
0x400185b	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_28
0x400185f	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4001863	        0x4983c401	                              add r12, 1	       501	quote.c	FUNCTION_24	WHILE_1
0x4001867	    0x410fb66c24ff	               movzx ebp, byte [r12 - 1]	       501	quote.c	FUNCTION_24	WHILE_1
0x400186d	          0x4084ed	                           test bpl, bpl	       501	quote.c	FUNCTION_24	WHILE_1
0x4001870	     0xf8577feffff	                           jne 0x40016ed	       501	quote.c	FUNCTION_24	WHILE_1
0x4001876	              0x5b	                                 pop rbx	       523	quote.c	FUNCTION_24
0x4001877	              0x5d	                                 pop rbp	       523	quote.c	FUNCTION_24
0x4001878	            0x415c	                                 pop r12	       523	quote.c	FUNCTION_24
0x400187a	              0xc3	                                     ret	       523	quote.c	FUNCTION_24
quote_c_style_counted	WHILE,0:SWITCH,0:FOR,1:functions,0:IF,6:DO,0:CALL,1:ELSE,1	353
0x4000104	            0x4157	                                push r15	       238	quote.c	FUNCTION_14
0x4000106	            0x4156	                                push r14	       238	quote.c	FUNCTION_14
0x4000108	            0x4155	                                push r13	       238	quote.c	FUNCTION_14
0x400010a	            0x4154	                                push r12	       238	quote.c	FUNCTION_14
0x400010c	              0x55	                                push rbp	       238	quote.c	FUNCTION_14
0x400010d	              0x53	                                push rbx	       238	quote.c	FUNCTION_14
0x400010e	        0x4883ec38	                           sub rsp, 0x38	       238	quote.c	FUNCTION_14
0x4000112	      0x48897c2428	             mov qword [rsp + 0x28], rdi	       238	quote.c	FUNCTION_14
0x4000117	          0x4989f7	                            mov r15, rsi	       238	quote.c	FUNCTION_14
0x400011a	          0x4889d5	                            mov rbp, rdx	       238	quote.c	FUNCTION_14
0x400011d	          0x4989ce	                            mov r14, rcx	       238	quote.c	FUNCTION_14
0x4000120	      0x4489442424	             mov dword [rsp + 0x24], r8d	       238	quote.c	FUNCTION_14
0x4000125	          0x4989fc	                            mov r12, rdi	       254	quote.c	FUNCTION_14
0x4000128	    0x48c744241000	               mov qword [rsp + 0x10], 0	       253	quote.c	FUNCTION_14
0x4000131	          0x4d85ff	                           test r15, r15	       215	quote.c	FUNCTION_13	IF_1
0x4000134	            0x7830	                            js 0x4000166	       215	quote.c	FUNCTION_13	IF_1
0x4000136	          0x4d89fd	                            mov r13, r15	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x4000139	          0x4d85ff	                           test r15, r15	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x400013c	     0xf844f030000	                            je 0x4000491	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x4000142	    0x8b1500000000	            mov edx, dword [0x04000148] 	       206	quote.c	FUNCTION_12
0x4000148	      0x410fb60424	                   movzx eax, byte [r12]	       206	quote.c	FUNCTION_12
0x400014d	     0xfbe80000000	                   movsx eax, byte [rax]	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x4000154	             0x1d0	                            add eax, edx	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x4000156	      0xbb00000000	                              mov ebx, 0	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x400015b	            0x85c0	                           test eax, eax	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x400015d	            0x7e43	                           jle 0x40001a2	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x400015f	      0x4c897c2418	             mov qword [rsp + 0x18], r15	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x4000164	            0xeb72	                           jmp 0x40001d8	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x4000166	    0x8b1500000000	            mov edx, dword [0x0400016c] 	       206	quote.c	FUNCTION_12
0x400016c	      0x410fb60424	                   movzx eax, byte [r12]	       206	quote.c	FUNCTION_12
0x4000171	     0xfbe80000000	                   movsx eax, byte [rax]	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4000178	             0x1d0	                            add eax, edx	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x400017a	            0x85c0	                           test eax, eax	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x400017c	     0xf8fbe030000	                            jg 0x4000540	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4000182	      0xbb00000000	                              mov ebx, 0	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4000187	        0x4883c301	                              add rbx, 1	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x400018b	      0x410fb6041c	             movzx eax, byte [r12 + rbx]	       206	quote.c	FUNCTION_12
0x4000190	     0xfbe80000000	                   movsx eax, byte [rax]	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4000197	             0x1d0	                            add eax, edx	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4000199	            0x85c0	                           test eax, eax	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x400019b	            0x7eea	                           jle 0x4000187	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x400019d	      0xe9a3030000	                           jmp 0x4000545	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x40001a2	        0x4883c301	                              add rbx, 1	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x40001a6	          0x4c39eb	                            cmp rbx, r13	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x40001a9	     0xf84e2020000	                            je 0x4000491	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x40001af	      0x410fb6041c	             movzx eax, byte [r12 + rbx]	       206	quote.c	FUNCTION_12
0x40001b4	     0xfbe80000000	                   movsx eax, byte [rax]	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x40001bb	             0x1d0	                            add eax, edx	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x40001bd	            0x85c0	                           test eax, eax	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x40001bf	            0x7ee1	                           jle 0x40001a2	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x40001c1	      0x4c896c2418	             mov qword [rsp + 0x18], r13	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x40001c6	            0xeb10	                           jmp 0x40001d8	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x40001c8	      0x41803c1c00	                 cmp byte [r12 + rbx], 0	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x40001cd	     0xf84bb020000	                            je 0x400048e	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x40001d3	      0x4c896c2418	             mov qword [rsp + 0x18], r13	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x40001d8	      0x837c242400	               cmp dword [rsp + 0x24], 0	       263	quote.c	FUNCTION_14	FOR_1	IF_2
0x40001dd	            0x7564	                           jne 0x4000243	       263	quote.c	FUNCTION_14	FOR_1	IF_2
0x40001df	      0x4c3b642428	            cmp r12, qword [rsp + 0x28] 	       263	quote.c	FUNCTION_14	FOR_1	IF_2
0x40001e4	            0x755d	                           jne 0x4000243	       263	quote.c	FUNCTION_14	FOR_1	IF_2
0x40001e6	          0x4885ed	                           test rbp, rbp	       264	quote.c	FUNCTION_14	FOR_1	IF_2
0x40001e9	            0x7440	                            je 0x400022b	       264	quote.c	FUNCTION_14	FOR_1	IF_2
0x40001eb	        0x488b4500	                    mov rax, qword [rbp]	       141	strbuf.h	FUNCTION_26
0x40001ef	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40001f2	            0x740a	                            je 0x40001fe	       141	strbuf.h	FUNCTION_26
0x40001f4	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40001f8	        0x48394508	                cmp qword [rbp + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40001fc	            0x750d	                           jne 0x400020b	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40001fe	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000203	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000206	      0xe800000000	                          call 0x400020b	       228	strbuf.h	FUNCTION_28	CALL_2
0x400020b	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_28
0x400020f	        0x488b4508	                mov rax, qword [rbp + 8]	       229	strbuf.h	FUNCTION_28
0x4000213	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x4000217	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_28
0x400021b	        0xc6040222	              mov byte [rdx + rax], 0x22	       229	strbuf.h	FUNCTION_28
0x400021f	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4000223	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_28
0x4000227	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x400022b	          0x4d85f6	                           test r14, r14	       264	quote.c	FUNCTION_14	FOR_1	IF_2
0x400022e	            0x740d	                            je 0x400023d	       264	quote.c	FUNCTION_14	FOR_1	IF_2
0x4000230	          0x4c89f6	                            mov rsi, r14	       264	quote.c	FUNCTION_14	FOR_1	IF_2
0x4000233	      0xbf22000000	                           mov edi, 0x22	       264	quote.c	FUNCTION_14	FOR_1	IF_2
0x4000238	      0xe800000000	                          call 0x400023d	       264	quote.c	FUNCTION_14	FOR_1	IF_2
0x400023d	    0x488344241001	               add qword [rsp + 0x10], 1	       264	quote.c	FUNCTION_14	FOR_1	IF_2
0x4000243	          0x4885ed	                           test rbp, rbp	       266	quote.c	FUNCTION_14	FOR_1
0x4000246	     0xf848b030000	                            je 0x40005d7	       266	quote.c	FUNCTION_14	FOR_1
0x400024c	          0x4889da	                            mov rdx, rbx	       266	quote.c	FUNCTION_14	FOR_1
0x400024f	          0x4c89e6	                            mov rsi, r12	       266	quote.c	FUNCTION_14	FOR_1
0x4000252	          0x4889ef	                            mov rdi, rbp	       266	quote.c	FUNCTION_14	FOR_1
0x4000255	      0xe800000000	                          call 0x400025a	       266	quote.c	FUNCTION_14	FOR_1
0x400025a	          0x4d85f6	                           test r14, r14	       266	quote.c	FUNCTION_14	FOR_1
0x400025d	     0xf852a030000	                           jne 0x400058d	       266	quote.c	FUNCTION_14	FOR_1
0x4000263	      0xe9ee020000	                           jmp 0x4000556	       266	quote.c	FUNCTION_14	FOR_1
0x4000268	        0x488b4500	                    mov rax, qword [rbp]	       141	strbuf.h	FUNCTION_26
0x400026c	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x400026f	            0x740a	                            je 0x400027b	       141	strbuf.h	FUNCTION_26
0x4000271	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000275	        0x483b4508	                cmp rax, qword [rbp + 8]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000279	            0x750d	                           jne 0x4000288	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x400027b	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000280	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000283	      0xe800000000	                          call 0x4000288	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000288	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_28
0x400028c	        0x488b4508	                mov rax, qword [rbp + 8]	       229	strbuf.h	FUNCTION_28
0x4000290	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x4000294	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4000298	        0xc604025c	              mov byte [rdx + rax], 0x5c	       229	strbuf.h	FUNCTION_28
0x400029c	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_28
0x40002a0	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_28
0x40002a4	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40002a8	          0x4d85f6	                           test r14, r14	       267	quote.c	FUNCTION_14	FOR_1
0x40002ab	            0x740d	                            je 0x40002ba	       267	quote.c	FUNCTION_14	FOR_1
0x40002ad	          0x4c89f6	                            mov rsi, r14	       267	quote.c	FUNCTION_14	FOR_1
0x40002b0	      0xbf5c000000	                           mov edi, 0x5c	       267	quote.c	FUNCTION_14	FOR_1
0x40002b5	      0xe800000000	                          call 0x40002ba	       267	quote.c	FUNCTION_14	FOR_1
0x40002ba	        0x498d041c	                    lea rax, [r12 + rbx]	       268	quote.c	FUNCTION_14	FOR_1
0x40002be	      0x4d8d641c01	                lea r12, [r12 + rbx + 1]	       269	quote.c	FUNCTION_14	FOR_1
0x40002c3	           0xfb600	                   movzx eax, byte [rax]	       269	quote.c	FUNCTION_14	FOR_1
0x40002c6	          0x880424	                      mov byte [rsp], al	       269	quote.c	FUNCTION_14	FOR_1
0x40002c9	        0x440fb6e8	                          movzx r13d, al	       269	quote.c	FUNCTION_14	FOR_1
0x40002cd	          0x4d85ff	                           test r15, r15	       270	quote.c	FUNCTION_14	FOR_1	IF_3
0x40002d0	            0x780c	                            js 0x40002de	       270	quote.c	FUNCTION_14	FOR_1	IF_3
0x40002d2	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       271	quote.c	FUNCTION_14	FOR_1	IF_3
0x40002d7	        0x4983ef01	                              sub r15, 1	       271	quote.c	FUNCTION_14	FOR_1	IF_3
0x40002db	          0x4929df	                            sub r15, rbx	       271	quote.c	FUNCTION_14	FOR_1	IF_3
0x40002de	          0x4963c5	                        movsxd rax, r13d	       272	quote.c	FUNCTION_14	FOR_1	IF_4
0x40002e1	     0xfb698000000	                   movzx ebx, byte [rax]	       272	quote.c	FUNCTION_14	FOR_1	IF_4
0x40002e8	          0x80fb1f	                            cmp bl, 0x1f	       272	quote.c	FUNCTION_14	FOR_1	IF_4
0x40002eb	            0x7e67	                           jle 0x4000354	       272	quote.c	FUNCTION_14	FOR_1	IF_4
0x40002ed	          0x4885ed	                           test rbp, rbp	       273	quote.c	FUNCTION_14	FOR_1	IF_4
0x40002f0	            0x743f	                            je 0x4000331	       273	quote.c	FUNCTION_14	FOR_1	IF_4
0x40002f2	        0x488b4500	                    mov rax, qword [rbp]	       141	strbuf.h	FUNCTION_26
0x40002f6	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40002f9	            0x740a	                            je 0x4000305	       141	strbuf.h	FUNCTION_26
0x40002fb	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40002ff	        0x48394508	                cmp qword [rbp + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000303	            0x750d	                           jne 0x4000312	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000305	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400030a	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_28	CALL_2
0x400030d	      0xe800000000	                          call 0x4000312	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000312	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_28
0x4000316	        0x488b4508	                mov rax, qword [rbp + 8]	       229	strbuf.h	FUNCTION_28
0x400031a	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x400031e	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4000322	          0x881c02	                mov byte [rdx + rax], bl	       229	strbuf.h	FUNCTION_28
0x4000325	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4000329	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_28
0x400032d	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4000331	          0x4d85f6	                           test r14, r14	       273	quote.c	FUNCTION_14	FOR_1	IF_4
0x4000334	            0x740b	                            je 0x4000341	       273	quote.c	FUNCTION_14	FOR_1	IF_4
0x4000336	           0xfbefb	                           movsx edi, bl	       273	quote.c	FUNCTION_14	FOR_1	IF_4
0x4000339	          0x4c89f6	                            mov rsi, r14	       273	quote.c	FUNCTION_14	FOR_1	IF_4
0x400033c	      0xe800000000	                          call 0x4000341	       273	quote.c	FUNCTION_14	FOR_1	IF_4
0x4000341	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       273	quote.c	FUNCTION_14	FOR_1	IF_4
0x4000346	        0x4883c002	                              add rax, 2	       273	quote.c	FUNCTION_14	FOR_1	IF_4
0x400034a	      0x4889442410	             mov qword [rsp + 0x10], rax	       273	quote.c	FUNCTION_14	FOR_1	IF_4
0x400034f	      0xe9ddfdffff	                           jmp 0x4000131	       273	quote.c	FUNCTION_14	FOR_1	IF_4
0x4000354	          0x4885ed	                           test rbp, rbp	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000357	     0xf8414020000	                            je 0x4000571	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x400035d	          0x4489eb	                           mov ebx, r13d	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000360	          0xc1eb06	                              shr ebx, 6	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000363	          0x83c330	                           add ebx, 0x30	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000366	        0x488b4500	                    mov rax, qword [rbp]	       141	strbuf.h	FUNCTION_26
0x400036a	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x400036d	            0x740a	                            je 0x4000379	       141	strbuf.h	FUNCTION_26
0x400036f	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000373	        0x48394508	                cmp qword [rbp + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000377	            0x750d	                           jne 0x4000386	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000379	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400037e	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000381	      0xe800000000	                          call 0x4000386	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000386	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_28
0x400038a	        0x488b4508	                mov rax, qword [rbp + 8]	       229	strbuf.h	FUNCTION_28
0x400038e	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x4000392	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4000396	          0x881c02	                mov byte [rdx + rax], bl	       229	strbuf.h	FUNCTION_28
0x4000399	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_28
0x400039d	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_28
0x40003a1	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x40003a5	          0x4d85f6	                           test r14, r14	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x40003a8	            0x741a	                            je 0x40003c4	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x40003aa	          0x4489ef	                           mov edi, r13d	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x40003ad	          0xc1ef06	                              shr edi, 6	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x40003b0	          0x83c730	                           add edi, 0x30	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x40003b3	          0x4c89f6	                            mov rsi, r14	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x40003b6	      0xe800000000	                          call 0x40003bb	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x40003bb	          0x4885ed	                           test rbp, rbp	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x40003be	     0xf8450020000	                            je 0x4000614	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x40003c4	          0x4489eb	                           mov ebx, r13d	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x40003c7	          0xc1fb03	                              sar ebx, 3	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x40003ca	          0x83e307	                              and ebx, 7	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x40003cd	          0x83c330	                           add ebx, 0x30	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x40003d0	        0x488b4500	                    mov rax, qword [rbp]	       141	strbuf.h	FUNCTION_26
0x40003d4	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40003d7	            0x740a	                            je 0x40003e3	       141	strbuf.h	FUNCTION_26
0x40003d9	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40003dd	        0x48394508	                cmp qword [rbp + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40003e1	            0x750d	                           jne 0x40003f0	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40003e3	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40003e8	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_28	CALL_2
0x40003eb	      0xe800000000	                          call 0x40003f0	       228	strbuf.h	FUNCTION_28	CALL_2
0x40003f0	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40003f4	        0x488b4508	                mov rax, qword [rbp + 8]	       229	strbuf.h	FUNCTION_28
0x40003f8	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x40003fc	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4000400	          0x881c02	                mov byte [rdx + rax], bl	       229	strbuf.h	FUNCTION_28
0x4000403	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4000407	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_28
0x400040b	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x400040f	          0x4d85f6	                           test r14, r14	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000412	     0xf85ca010000	                           jne 0x40005e2	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000418	      0xe962010000	                           jmp 0x400057f	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x400041d	          0x8b1c24	                    mov ebx, dword [rsp]	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000420	          0x83e307	                              and ebx, 7	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000423	          0x83c330	                           add ebx, 0x30	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000426	        0x488b4500	                    mov rax, qword [rbp]	       141	strbuf.h	FUNCTION_26
0x400042a	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x400042d	            0x740a	                            je 0x4000439	       141	strbuf.h	FUNCTION_26
0x400042f	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000433	        0x48394508	                cmp qword [rbp + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000437	            0x750d	                           jne 0x4000446	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x4000439	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x400043e	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000441	      0xe800000000	                          call 0x4000446	       228	strbuf.h	FUNCTION_28	CALL_2
0x4000446	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_28
0x400044a	        0x488b4508	                mov rax, qword [rbp + 8]	       229	strbuf.h	FUNCTION_28
0x400044e	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x4000452	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_28
0x4000456	          0x881c02	                mov byte [rdx + rax], bl	       229	strbuf.h	FUNCTION_28
0x4000459	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_28
0x400045d	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_28
0x4000461	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x4000465	          0x4d85f6	                           test r14, r14	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000468	            0x7411	                            je 0x400047b	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x400046a	          0x8b3c24	                    mov edi, dword [rsp]	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x400046d	          0x83e707	                              and edi, 7	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000470	          0x83c730	                           add edi, 0x30	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000473	          0x4c89f6	                            mov rsi, r14	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000476	      0xe800000000	                          call 0x400047b	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x400047b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000480	        0x4883c004	                              add rax, 4	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000484	      0x4889442410	             mov qword [rsp + 0x10], rax	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000489	      0xe9a3fcffff	                           jmp 0x4000131	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x400048e	          0x4989dd	                            mov r13, rbx	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000491	          0x4885ed	                           test rbp, rbp	       281	quote.c	FUNCTION_14
0x4000494	            0x740e	                            je 0x40004a4	       281	quote.c	FUNCTION_14
0x4000496	          0x4c89ea	                            mov rdx, r13	       281	quote.c	FUNCTION_14
0x4000499	          0x4c89e6	                            mov rsi, r12	       281	quote.c	FUNCTION_14
0x400049c	          0x4889ef	                            mov rdi, rbp	       281	quote.c	FUNCTION_14
0x400049f	      0xe800000000	                          call 0x40004a4	       281	quote.c	FUNCTION_14
0x40004a4	          0x4d85f6	                           test r14, r14	       281	quote.c	FUNCTION_14
0x40004a7	            0x7413	                            je 0x40004bc	       281	quote.c	FUNCTION_14
0x40004a9	          0x4c89f1	                            mov rcx, r14	       281	quote.c	FUNCTION_14
0x40004ac	      0xba01000000	                              mov edx, 1	       281	quote.c	FUNCTION_14
0x40004b1	          0x4c89ee	                            mov rsi, r13	       281	quote.c	FUNCTION_14
0x40004b4	          0x4c89e7	                            mov rdi, r12	       281	quote.c	FUNCTION_14
0x40004b7	      0xe800000000	                          call 0x40004bc	       281	quote.c	FUNCTION_14
0x40004bc	      0x4c036c2410	             add r13, qword [rsp + 0x10]	       281	quote.c	FUNCTION_14
0x40004c1	      0x4c3b642428	            cmp r12, qword [rsp + 0x28] 	       282	quote.c	FUNCTION_14	IF_5
0x40004c6	            0x746e	                            je 0x4000536	       282	quote.c	FUNCTION_14	IF_5
0x40004c8	          0x4c89e8	                            mov rax, r13	       281	quote.c	FUNCTION_14
0x40004cb	      0x837c242400	               cmp dword [rsp + 0x24], 0	       285	quote.c	FUNCTION_14	IF_6
0x40004d0	     0xf8549010000	                           jne 0x400061f	       285	quote.c	FUNCTION_14	IF_6
0x40004d6	          0x4885ed	                           test rbp, rbp	       286	quote.c	FUNCTION_14	IF_6
0x40004d9	            0x7440	                            je 0x400051b	       286	quote.c	FUNCTION_14	IF_6
0x40004db	        0x488b4500	                    mov rax, qword [rbp]	       141	strbuf.h	FUNCTION_26
0x40004df	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x40004e2	            0x740a	                            je 0x40004ee	       141	strbuf.h	FUNCTION_26
0x40004e4	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40004e8	        0x48394508	                cmp qword [rbp + 8], rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40004ec	            0x750d	                           jne 0x40004fb	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x40004ee	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x40004f3	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_28	CALL_2
0x40004f6	      0xe800000000	                          call 0x40004fb	       228	strbuf.h	FUNCTION_28	CALL_2
0x40004fb	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_28
0x40004ff	        0x488b4508	                mov rax, qword [rbp + 8]	       229	strbuf.h	FUNCTION_28
0x4000503	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x4000507	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_28
0x400050b	        0xc6040222	              mov byte [rdx + rax], 0x22	       229	strbuf.h	FUNCTION_28
0x400050f	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_28
0x4000513	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_28
0x4000517	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_28
0x400051b	          0x4d85f6	                           test r14, r14	       286	quote.c	FUNCTION_14	IF_6
0x400051e	            0x740d	                            je 0x400052d	       286	quote.c	FUNCTION_14	IF_6
0x4000520	          0x4c89f6	                            mov rsi, r14	       286	quote.c	FUNCTION_14	IF_6
0x4000523	      0xbf22000000	                           mov edi, 0x22	       286	quote.c	FUNCTION_14	IF_6
0x4000528	      0xe800000000	                          call 0x400052d	       286	quote.c	FUNCTION_14	IF_6
0x400052d	        0x498d4501	                      lea rax, [r13 + 1]	       286	quote.c	FUNCTION_14	IF_6
0x4000531	      0xe9e9000000	                           jmp 0x400061f	       286	quote.c	FUNCTION_14	IF_6
0x4000536	      0xb800000000	                              mov eax, 0	       283	quote.c	FUNCTION_14	IF_5
0x400053b	      0xe9df000000	                           jmp 0x400061f	       283	quote.c	FUNCTION_14	IF_5
0x4000540	      0xbb00000000	                              mov ebx, 0	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x4000545	          0x4d89fd	                            mov r13, r15	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x4000548	          0x4c39fb	                            cmp rbx, r15	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x400054b	     0xf8577fcffff	                           jne 0x40001c8	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x4000551	      0xe93bffffff	                           jmp 0x4000491	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0x4000556	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       266	quote.c	FUNCTION_14	FOR_1
0x400055b	          0x4801d8	                            add rax, rbx	       266	quote.c	FUNCTION_14	FOR_1
0x400055e	      0x4889442410	             mov qword [rsp + 0x10], rax	       266	quote.c	FUNCTION_14	FOR_1
0x4000563	          0x4885ed	                           test rbp, rbp	       267	quote.c	FUNCTION_14	FOR_1
0x4000566	     0xf844efdffff	                            je 0x40002ba	       267	quote.c	FUNCTION_14	FOR_1
0x400056c	      0xe9f7fcffff	                           jmp 0x4000268	       267	quote.c	FUNCTION_14	FOR_1
0x4000571	          0x4d85f6	                           test r14, r14	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000574	     0xf8530feffff	                           jne 0x40003aa	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x400057a	      0xe9fcfeffff	                           jmp 0x400047b	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x400057f	          0x4885ed	                           test rbp, rbp	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000582	     0xf84f3feffff	                            je 0x400047b	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000588	      0xe990feffff	                           jmp 0x400041d	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x400058d	          0x4c89f1	                            mov rcx, r14	       266	quote.c	FUNCTION_14	FOR_1
0x4000590	      0xba01000000	                              mov edx, 1	       266	quote.c	FUNCTION_14	FOR_1
0x4000595	          0x4889de	                            mov rsi, rbx	       266	quote.c	FUNCTION_14	FOR_1
0x4000598	          0x4c89e7	                            mov rdi, r12	       266	quote.c	FUNCTION_14	FOR_1
0x400059b	      0xe800000000	                          call 0x40005a0	       266	quote.c	FUNCTION_14	FOR_1
0x40005a0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       266	quote.c	FUNCTION_14	FOR_1
0x40005a5	          0x4801d8	                            add rax, rbx	       266	quote.c	FUNCTION_14	FOR_1
0x40005a8	      0x4889442410	             mov qword [rsp + 0x10], rax	       266	quote.c	FUNCTION_14	FOR_1
0x40005ad	      0xe9b6fcffff	                           jmp 0x4000268	       266	quote.c	FUNCTION_14	FOR_1
0x40005b2	          0x4c89f1	                            mov rcx, r14	       266	quote.c	FUNCTION_14	FOR_1
0x40005b5	      0xba01000000	                              mov edx, 1	       266	quote.c	FUNCTION_14	FOR_1
0x40005ba	          0x4889de	                            mov rsi, rbx	       266	quote.c	FUNCTION_14	FOR_1
0x40005bd	          0x4c89e7	                            mov rdi, r12	       266	quote.c	FUNCTION_14	FOR_1
0x40005c0	      0xe800000000	                          call 0x40005c5	       266	quote.c	FUNCTION_14	FOR_1
0x40005c5	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       266	quote.c	FUNCTION_14	FOR_1
0x40005ca	          0x4801d8	                            add rax, rbx	       266	quote.c	FUNCTION_14	FOR_1
0x40005cd	      0x4889442410	             mov qword [rsp + 0x10], rax	       266	quote.c	FUNCTION_14	FOR_1
0x40005d2	      0xe9d6fcffff	                           jmp 0x40002ad	       266	quote.c	FUNCTION_14	FOR_1
0x40005d7	          0x4d85f6	                           test r14, r14	       266	quote.c	FUNCTION_14	FOR_1
0x40005da	     0xf8476ffffff	                            je 0x4000556	       266	quote.c	FUNCTION_14	FOR_1
0x40005e0	            0xebd0	                           jmp 0x40005b2	       266	quote.c	FUNCTION_14	FOR_1
0x40005e2	        0x41c1fd03	                             sar r13d, 3	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x40005e6	        0x4183e507	                             and r13d, 7	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x40005ea	        0x418d7d30	                   lea edi, [r13 + 0x30]	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x40005ee	          0x4c89f6	                            mov rsi, r14	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x40005f1	      0xe800000000	                          call 0x40005f6	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x40005f6	      0xe922feffff	                           jmp 0x400041d	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x40005fb	          0x4489ef	                           mov edi, r13d	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x40005fe	          0xc1ff03	                              sar edi, 3	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000601	          0x83e707	                              and edi, 7	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000604	          0x83c730	                           add edi, 0x30	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000607	          0x4c89f6	                            mov rsi, r14	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x400060a	      0xe800000000	                          call 0x400060f	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x400060f	      0xe956feffff	                           jmp 0x400046a	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000614	          0x4d85f6	                           test r14, r14	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x4000617	     0xf8462ffffff	                            je 0x400057f	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x400061d	            0xebdc	                           jmp 0x40005fb	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1
0x400061f	        0x4883c438	                           add rsp, 0x38	       288	quote.c	FUNCTION_14
0x4000623	              0x5b	                                 pop rbx	       288	quote.c	FUNCTION_14
0x4000624	              0x5d	                                 pop rbp	       288	quote.c	FUNCTION_14
0x4000625	            0x415c	                                 pop r12	       288	quote.c	FUNCTION_14
0x4000627	            0x415d	                                 pop r13	       288	quote.c	FUNCTION_14
0x4000629	            0x415e	                                 pop r14	       288	quote.c	FUNCTION_14
0x400062b	            0x415f	                                 pop r15	       288	quote.c	FUNCTION_14
0x400062d	              0xc3	                                     ret	       288	quote.c	FUNCTION_14
sq_dequote_to_argv_array	WHILE,0:SWITCH,0:FOR,0:functions,0:IF,0:DO,0:CALL,1:ELSE,0	31
0x4000ba4	              0x53	                                push rbx	       180	quote.c	FUNCTION_11
0x4000ba5	        0x4883ec10	                           sub rsp, 0x10	       180	quote.c	FUNCTION_11
0x4000ba9	          0x4889f3	                            mov rbx, rsi	       180	quote.c	FUNCTION_11
0x4000bac	    0x64488b042528	                mov rax, qword fs:[0x28]	       180	quote.c	FUNCTION_11
0x4000bb5	      0x4889442408	                mov qword [rsp + 8], rax	       180	quote.c	FUNCTION_11
0x4000bba	            0x31c0	                            xor eax, eax	       180	quote.c	FUNCTION_11
0x4000bbc	        0x48893c24	                    mov qword [rsp], rdi	       155	quote.c	FUNCTION_9
0x4000bc0	          0x803f00	                       cmp byte [rdi], 0	       157	quote.c	FUNCTION_9	IF_1
0x4000bc3	            0x7434	                            je 0x4000bf9	       157	quote.c	FUNCTION_9	IF_1
0x4000bc5	          0x4889e6	                            mov rsi, rsp	       160	quote.c	FUNCTION_9	DO_1	CALL_1
0x4000bc8	        0x488b3c24	                    mov rdi, qword [rsp]	       160	quote.c	FUNCTION_9	DO_1	CALL_1
0x4000bcc	      0xe86ff4ffff	                call sym.sq_dequote_step	       160	quote.c	FUNCTION_9	DO_1	CALL_1
0x4000bd1	          0x4885c0	                           test rax, rax	       161	quote.c	FUNCTION_9	DO_1	IF_2
0x4000bd4	            0x741e	                            je 0x4000bf4	       161	quote.c	FUNCTION_9	DO_1	IF_2
0x4000bd6	          0x4885db	                           test rbx, rbx	       167	quote.c	FUNCTION_9	DO_1	IF_4
0x4000bd9	            0x740b	                            je 0x4000be6	       167	quote.c	FUNCTION_9	DO_1	IF_4
0x4000bdb	          0x4889c6	                            mov rsi, rax	       168	quote.c	FUNCTION_9	DO_1	CALL_3
0x4000bde	          0x4889df	                            mov rdi, rbx	       168	quote.c	FUNCTION_9	DO_1	CALL_3
0x4000be1	      0xe800000000	                          call 0x4000be6	       168	quote.c	FUNCTION_9	DO_1	CALL_3
0x4000be6	      0x48833c2400	                      cmp qword [rsp], 0	       169	quote.c	FUNCTION_9	DO_1
0x4000beb	            0x75d8	                           jne 0x4000bc5	       169	quote.c	FUNCTION_9	DO_1
0x4000bed	      0xb800000000	                              mov eax, 0	       171	quote.c	FUNCTION_9
0x4000bf2	            0xeb05	                           jmp 0x4000bf9	       171	quote.c	FUNCTION_9
0x4000bf4	      0xb8ffffffff	                     mov eax, 0xffffffff	       162	quote.c	FUNCTION_9	DO_1	IF_2
0x4000bf9	      0x488b542408	                mov rdx, qword [rsp + 8]	       182	quote.c	FUNCTION_11
0x4000bfe	    0x644833142528	                xor rdx, qword fs:[0x28]	       182	quote.c	FUNCTION_11
0x4000c07	            0x7405	                            je 0x4000c0e	       182	quote.c	FUNCTION_11
0x4000c09	      0xe800000000	                          call 0x4000c0e	       182	quote.c	FUNCTION_11
0x4000c0e	        0x4883c410	                           add rsp, 0x10	       182	quote.c	FUNCTION_11
0x4000c12	              0x5b	                                 pop rbx	       182	quote.c	FUNCTION_11
0x4000c13	              0xc3	                                     ret	       182	quote.c	FUNCTION_11
