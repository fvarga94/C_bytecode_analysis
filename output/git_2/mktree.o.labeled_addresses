ent_compare	FOR,0:ELSE,0:DO,0:IF,0:SWITCH,0:functions,0:CALL,1:WHILE,0	9
0x4000040	          0x488b16	                    mov rdx, qword [rsi]	        38	mktree.c	FUNCTION_2
0x4000043	          0x488b07	                    mov rax, qword [rdi]	        37	mktree.c	FUNCTION_2
0x4000046	        0x488d4a1c	                   lea rcx, [rdx + 0x1c]	        40	mktree.c	FUNCTION_2
0x400004a	          0x448b0a	                    mov r9d, dword [rdx]	        39	mktree.c	FUNCTION_2	CALL_1
0x400004d	        0x448b4218	            mov r8d, dword [rdx + 0x18] 	        39	mktree.c	FUNCTION_2	CALL_1
0x4000051	          0x8b7018	            mov esi, dword [rax + 0x18] 	        39	mktree.c	FUNCTION_2	CALL_1
0x4000054	            0x8b10	                    mov edx, dword [rax]	        39	mktree.c	FUNCTION_2	CALL_1
0x4000056	        0x488d781c	                   lea rdi, [rax + 0x1c]	        39	mktree.c	FUNCTION_2	CALL_1
0x400005a	      0xe900000000	                           jmp 0x400005f	        39	mktree.c	FUNCTION_2	CALL_1
cmd_mktree	FOR,0:ELSE,1:DO,0:IF,4:SWITCH,0:functions,0:CALL,17:WHILE,2	376
0x4000060	            0x4157	                                push r15	       143	mktree.c	FUNCTION_5
0x4000062	            0x4156	                                push r14	       143	mktree.c	FUNCTION_5
0x4000064	          0x4189fa	                           mov r10d, edi	       143	mktree.c	FUNCTION_5
0x4000067	            0x4155	                                push r13	       143	mktree.c	FUNCTION_5
0x4000069	            0x4154	                                push r12	       143	mktree.c	FUNCTION_5
0x400006b	      0xb920000000	                           mov ecx, 0x20	       152	mktree.c	FUNCTION_5
0x4000070	              0x55	                                push rbp	       143	mktree.c	FUNCTION_5
0x4000071	              0x53	                                push rbx	       143	mktree.c	FUNCTION_5
0x4000072	          0x4531c9	                            xor r9d, r9d	       159	mktree.c	FUNCTION_5	CALL_8
0x4000075	    0x41b800000000	                              mov r8d, 0	       159	mktree.c	FUNCTION_5	CALL_8
0x400007b	    0x4881ecc80100	                          sub rsp, 0x1c8	       143	mktree.c	FUNCTION_5
0x4000082	    0x64488b042528	                mov rax, qword fs:[0x28]	       143	mktree.c	FUNCTION_5
0x400008b	    0x48898424b801	            mov qword [rsp + 0x1b8], rax	       143	mktree.c	FUNCTION_5
0x4000093	            0x31c0	                            xor eax, eax	       143	mktree.c	FUNCTION_5
0x4000095	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	       152	mktree.c	FUNCTION_5
0x400009d	    0x48c744243000	               mov qword [rsp + 0x30], 0	       144	mktree.c	FUNCTION_5
0x40000a6	    0x48c744243800	               mov qword [rsp + 0x38], 0	       144	mktree.c	FUNCTION_5
0x40000af	    0x48c744244000	               mov qword [rsp + 0x40], 0	       144	mktree.c	FUNCTION_5
0x40000b8	    0xc74424140000	               mov dword [rsp + 0x14], 0	       146	mktree.c	FUNCTION_5
0x40000c0	          0xf348ab	              rep stosq qword [rdi], rax	       152	mktree.c	FUNCTION_5
0x40000c3	      0x488d442414	                   lea rax, [rsp + 0x14]	       152	mktree.c	FUNCTION_5
0x40000c8	    0x488d8c24b000	                   lea rcx, [rsp + 0xb0]	       159	mktree.c	FUNCTION_5	CALL_8
0x40000d0	          0x4489d7	                           mov edi, r10d	       159	mktree.c	FUNCTION_5	CALL_8
0x40000d3	    0xc74424180000	               mov dword [rsp + 0x18], 0	       147	mktree.c	FUNCTION_5
0x40000db	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       148	mktree.c	FUNCTION_5
0x40000e3	    0x48898424c000	             mov qword [rsp + 0xc0], rax	       152	mktree.c	FUNCTION_5
0x40000eb	      0x488d442418	                   lea rax, [rsp + 0x18]	       152	mktree.c	FUNCTION_5
0x40000f0	    0xc78424b00000	               mov dword [rsp + 0xb0], 7	       152	mktree.c	FUNCTION_5
0x40000fb	    0xc78424b40000	           mov dword [rsp + 0xb4], 0x7a 	       152	mktree.c	FUNCTION_5
0x4000106	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	       152	mktree.c	FUNCTION_5
0x4000112	    0x488984240001	            mov qword [rsp + 0x100], rax	       152	mktree.c	FUNCTION_5
0x400011a	      0x488d44241c	                   lea rax, [rsp + 0x1c]	       152	mktree.c	FUNCTION_5
0x400011f	    0xc78424d80000	               mov dword [rsp + 0xd8], 2	       152	mktree.c	FUNCTION_5
0x400012a	    0x48c78424e800	               mov qword [rsp + 0xe8], 1	       152	mktree.c	FUNCTION_5
0x4000136	    0xc78424f00000	               mov dword [rsp + 0xf0], 7	       152	mktree.c	FUNCTION_5
0x4000141	    0x488984244001	            mov qword [rsp + 0x140], rax	       152	mktree.c	FUNCTION_5
0x4000149	    0x48c78424f800	               mov qword [rsp + 0xf8], 0	       152	mktree.c	FUNCTION_5
0x4000155	    0x48c784241001	              mov qword [rsp + 0x110], 0	       152	mktree.c	FUNCTION_5
0x4000161	    0xc78424180100	              mov dword [rsp + 0x118], 2	       152	mktree.c	FUNCTION_5
0x400016c	    0x48c784242801	              mov qword [rsp + 0x128], 1	       152	mktree.c	FUNCTION_5
0x4000178	    0xc78424300100	              mov dword [rsp + 0x130], 7	       152	mktree.c	FUNCTION_5
0x4000183	    0x48c784243801	              mov qword [rsp + 0x138], 0	       152	mktree.c	FUNCTION_5
0x400018f	    0x48c784245001	              mov qword [rsp + 0x150], 0	       152	mktree.c	FUNCTION_5
0x400019b	    0xc78424580100	              mov dword [rsp + 0x158], 2	       152	mktree.c	FUNCTION_5
0x40001a6	    0x48c784246801	              mov qword [rsp + 0x168], 1	       152	mktree.c	FUNCTION_5
0x40001b2	      0xe800000000	                          call 0x40001b7	       159	mktree.c	FUNCTION_5	CALL_8
0x40001b7	        0x8b742414	            mov esi, dword [rsp + 0x14] 	       160	mktree.c	FUNCTION_5
0x40001bb	      0xb800000000	                              mov eax, 0	       160	mktree.c	FUNCTION_5
0x40001c0	      0xba00000000	                              mov edx, 0	       160	mktree.c	FUNCTION_5
0x40001c5	            0x85f6	                           test esi, esi	       160	mktree.c	FUNCTION_5
0x40001c7	        0x480f44c2	                          cmove rax, rdx	       160	mktree.c	FUNCTION_5
0x40001cb	        0x48890424	                    mov qword [rsp], rax	       160	mktree.c	FUNCTION_5
0x40001cf	            0xeb72	                           jmp 0x4000243	       160	mktree.c	FUNCTION_5
0x40001d1	     0xf1f80000000	                         nop dword [rax]	       160	mktree.c	FUNCTION_5
0x40001d8	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	        31	mktree.c	FUNCTION_1	CALL_6
0x40001dc	            0x89c2	                            mov edx, eax	        31	mktree.c	FUNCTION_1	CALL_6
0x40001de	          0xc1ea1f	                           shr edx, 0x1f	        31	mktree.c	FUNCTION_1	CALL_6
0x40001e1	             0x1c2	                            add edx, eax	        31	mktree.c	FUNCTION_1	CALL_6
0x40001e3	            0xd1fa	                              sar edx, 1	        31	mktree.c	FUNCTION_1	CALL_6
0x40001e5	            0x39d1	                            cmp ecx, edx	        31	mktree.c	FUNCTION_1	CALL_6
0x40001e7	     0xf8c43020000	                            jl 0x4000430	        31	mktree.c	FUNCTION_1	CALL_6
0x40001ed	          0x8d5101	                      lea edx, [rcx + 1]	        31	mktree.c	FUNCTION_1	CALL_6
0x40001f0	    0x891500000000	            mov dword [0x040001f6], edx 	        31	mktree.c	FUNCTION_1	CALL_6
0x40001f6	          0x4863d2	                         movsxd rdx, edx	        31	mktree.c	FUNCTION_1	CALL_6
0x40001f9	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x4000203	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x4000206	     0xf873b050000	                            ja 0x4000747	       795	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x400020c	    0x488b3d000000	            mov rdi, qword [0x04000213] 	        31	mktree.c	FUNCTION_1	CALL_6
0x4000213	    0x488d34d50000	                        lea rsi, [rdx*8]	        31	mktree.c	FUNCTION_1	CALL_6
0x400021b	      0xe800000000	                          call 0x4000220	        31	mktree.c	FUNCTION_1	CALL_6
0x4000220	    0x48630d000000	         movsxd rcx, dword [0x04000227] 	        31	mktree.c	FUNCTION_1	CALL_6
0x4000227	    0x488905000000	            mov qword [0x0400022e], rax 	        31	mktree.c	FUNCTION_1	CALL_6
0x400022e	          0x8d5101	                      lea edx, [rcx + 1]	        32	mktree.c	FUNCTION_1
0x4000231	        0x48891cc8	            mov qword [rax + rcx*8], rbx	        32	mktree.c	FUNCTION_1
0x4000235	          0x4c89f7	                            mov rdi, r14	       139	mktree.c	FUNCTION_4	CALL_22
0x4000238	    0x891500000000	            mov dword [0x0400023e], edx 	        32	mktree.c	FUNCTION_1
0x400023e	      0xe800000000	                          call 0x4000243	       139	mktree.c	FUNCTION_4	CALL_22
0x4000243	    0x488b35000000	            mov rsi, qword [0x0400024a] 	       164	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_9
0x400024a	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       164	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_9
0x400024f	        0x488b0424	                    mov rax, qword [rsp]	       164	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_9
0x4000253	            0xffd0	                                call rax	       164	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_9
0x4000255	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       164	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_9
0x4000258	     0xf84aa020000	                            je 0x4000508	       164	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_9
0x400025e	      0x4c8b642440	            mov r12, qword [rsp + 0x40] 	       168	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2
0x4000263	      0x41803c2400	                       cmp byte [r12], 0	       168	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2
0x4000268	     0xf84e2030000	                            je 0x4000650	       168	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2
0x400026e	      0x488d742420	                   lea rsi, [rsp + 0x20]	        84	mktree.c	FUNCTION_4	CALL_1
0x4000273	      0xba08000000	                              mov edx, 8	        84	mktree.c	FUNCTION_4	CALL_1
0x4000278	          0x4c89e7	                            mov rdi, r12	        84	mktree.c	FUNCTION_4	CALL_1
0x400027b	      0x448b7c2418	           mov r15d, dword [rsp + 0x18] 	       174	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	CALL_11
0x4000280	        0x8b6c2414	            mov ebp, dword [rsp + 0x14] 	       174	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	CALL_11
0x4000284	      0xe800000000	                          call 0x4000289	        84	mktree.c	FUNCTION_4	CALL_1
0x4000289	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	        85	mktree.c	FUNCTION_4	IF_1
0x400028e	          0x4989c5	                            mov r13, rax	        84	mktree.c	FUNCTION_4	CALL_1
0x4000291	          0x4885db	                           test rbx, rbx	        85	mktree.c	FUNCTION_4	IF_1
0x4000294	     0xf8405040000	                            je 0x400069f	        85	mktree.c	FUNCTION_4	IF_1
0x400029a	          0x4939dc	                            cmp r12, rbx	        85	mktree.c	FUNCTION_4	IF_1
0x400029d	     0xf84fc030000	                            je 0x400069f	        85	mktree.c	FUNCTION_4	IF_1
0x40002a3	          0x803b20	                    cmp byte [rbx], 0x20	        85	mktree.c	FUNCTION_4	IF_1
0x40002a6	     0xf85f3030000	                           jne 0x400069f	        85	mktree.c	FUNCTION_4	IF_1
0x40002ac	        0x4883c301	                              add rbx, 1	        87	mktree.c	FUNCTION_4
0x40002b0	      0xbe20000000	                           mov esi, 0x20	        88	mktree.c	FUNCTION_4	CALL_3
0x40002b5	          0x4889df	                            mov rdi, rbx	        88	mktree.c	FUNCTION_4	CALL_3
0x40002b8	      0xe800000000	                          call 0x40002bd	        88	mktree.c	FUNCTION_4	CALL_3
0x40002bd	          0x4885c0	                           test rax, rax	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40002c0	      0x4889442420	             mov qword [rsp + 0x20], rax	        88	mktree.c	FUNCTION_4	CALL_3
0x40002c5	     0xf84d4030000	                            je 0x400069f	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40002cb	        0x488d7801	                      lea rdi, [rax + 1]	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40002cf	      0x488d542428	                   lea rdx, [rsp + 0x28]	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40002d4	    0x488db4249000	                   lea rsi, [rsp + 0x90]	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40002dc	      0xe800000000	                          call 0x40002e1	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40002e1	            0x85c0	                           test eax, eax	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40002e3	     0xf85b6030000	                           jne 0x400069f	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40002e9	      0x488b442428	            mov rax, qword [rsp + 0x28] 	        90	mktree.c	FUNCTION_4	IF_2
0x40002ee	          0x803809	                       cmp byte [rax], 9	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40002f1	     0xf85a8030000	                           jne 0x400069f	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40002f7	      0x488b442420	            mov rax, qword [rsp + 0x20] 	        98	mktree.c	FUNCTION_4
0x40002fc	          0x4489e9	                           mov ecx, r13d	        94	mktree.c	FUNCTION_4	IF_3	CALL_6
0x40002ff	    0x81e100f00000	                         and ecx, 0xf000	        94	mktree.c	FUNCTION_4	IF_3	CALL_6
0x4000305	    0x81f900e00000	                         cmp ecx, 0xe000	        94	mktree.c	FUNCTION_4	IF_3	CALL_6
0x400030b	        0x488d5001	                      lea rdx, [rax + 1]	        98	mktree.c	FUNCTION_4
0x400030f	      0x4889542420	             mov qword [rsp + 0x20], rdx	        98	mktree.c	FUNCTION_4
0x4000314	          0xc60000	                       mov byte [rax], 0	        98	mktree.c	FUNCTION_4
0x4000317	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       100	mktree.c	FUNCTION_4
0x400031c	        0x4c8d6029	                   lea r12, [rax + 0x29]	       100	mktree.c	FUNCTION_4
0x4000320	     0xf841a010000	                            je 0x4000440	        94	mktree.c	FUNCTION_4	IF_3	CALL_6
0x4000326	            0x85ed	                           test ebp, ebp	       101	mktree.c	FUNCTION_4	IF_4
0x4000328	            0x750a	                           jne 0x4000334	       101	mktree.c	FUNCTION_4	IF_4
0x400032a	        0x80782922	            cmp byte [rax + 0x29], 0x22 	       101	mktree.c	FUNCTION_4	IF_4
0x400032e	     0xf8474010000	                            je 0x40004a8	       101	mktree.c	FUNCTION_4	IF_4
0x4000334	          0x4531f6	                          xor r14d, r14d	        76	mktree.c	FUNCTION_4
0x4000337	    0x81f900400000	                         cmp ecx, 0x4000	       399	cache.h	FUNCTION_39	CALL_1
0x400033d	      0xbd02000000	                              mov ebp, 2	       399	cache.h	FUNCTION_39	CALL_1
0x4000342	            0x7410	                            je 0x4000354	       399	cache.h	FUNCTION_39	CALL_1
0x4000344	            0x31ed	                            xor ebp, ebp	       399	cache.h	FUNCTION_39	CALL_1
0x4000346	    0x81f900e00000	                         cmp ecx, 0xe000	       399	cache.h	FUNCTION_39	CALL_1
0x400034c	        0x400f95c5	                               setne bpl	       399	cache.h	FUNCTION_39	CALL_1
0x4000350	        0x8d6c2d01	                lea ebp, [rbp + rbp + 1]	       399	cache.h	FUNCTION_39	CALL_1
0x4000354	            0x31d2	                            xor edx, edx	       113	mktree.c	FUNCTION_4	IF_6	CALL_11
0x4000356	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       113	mktree.c	FUNCTION_4	IF_6	CALL_11
0x400035d	          0x4889df	                            mov rdi, rbx	       113	mktree.c	FUNCTION_4	IF_6	CALL_11
0x4000360	      0xe800000000	                          call 0x4000365	       113	mktree.c	FUNCTION_4	IF_6	CALL_11
0x4000365	            0x39e8	                            cmp eax, ebp	       113	mktree.c	FUNCTION_4	IF_6	CALL_11
0x4000367	     0xf8585030000	                           jne 0x40006f2	       113	mktree.c	FUNCTION_4	IF_6	CALL_11
0x400036d	    0x488b3d000000	            mov rdi, qword [0x04000374] 	       119	mktree.c	FUNCTION_4	CALL_14
0x4000374	    0x488db4249000	                   lea rsi, [rsp + 0x90]	       119	mktree.c	FUNCTION_4	CALL_14
0x400037c	            0x31d2	                            xor edx, edx	       119	mktree.c	FUNCTION_4	CALL_14
0x400037e	      0xe800000000	                          call 0x4000383	       119	mktree.c	FUNCTION_4	CALL_14
0x4000383	            0x85c0	                           test eax, eax	       120	mktree.c	FUNCTION_4	IF_7
0x4000385	            0x89c3	                            mov ebx, eax	       119	mktree.c	FUNCTION_4	CALL_14
0x4000387	     0xf88d3000000	                            js 0x4000460	       120	mktree.c	FUNCTION_4	IF_7
0x400038d	            0x39c5	                            cmp ebp, eax	       127	mktree.c	FUNCTION_4	ELSE_2	IF_9
0x400038f	     0xf8579030000	                           jne 0x400070e	       127	mktree.c	FUNCTION_4	ELSE_2	IF_9
0x4000395	          0x4c89e7	                            mov rdi, r12	        22	mktree.c	FUNCTION_1	CALL_1
0x4000398	      0xe800000000	                          call 0x400039d	        22	mktree.c	FUNCTION_1	CALL_1
0x400039d	      0xbe2f000000	                           mov esi, 0x2f	        23	mktree.c	FUNCTION_1	IF_1	CALL_2
0x40003a2	          0x4c89e7	                            mov rdi, r12	        23	mktree.c	FUNCTION_1	IF_1	CALL_2
0x40003a5	          0x4889c5	                            mov rbp, rax	        22	mktree.c	FUNCTION_1	CALL_1
0x40003a8	      0xe800000000	                          call 0x40003ad	        23	mktree.c	FUNCTION_1	IF_1	CALL_2
0x40003ad	          0x4885c0	                           test rax, rax	        23	mktree.c	FUNCTION_1	IF_1	CALL_2
0x40003b0	     0xf8504030000	                           jne 0x40006ba	        23	mktree.c	FUNCTION_1	IF_1	CALL_2
0x40003b6	        0x4883fde3	             cmp rbp, 0xffffffffffffffe3	       785	git-compat-util.h	FUNCTION_19	IF_1	CALL_1
0x40003ba	     0xf871e030000	                            ja 0x40006de	       785	git-compat-util.h	FUNCTION_19	IF_1	CALL_1
0x40003c0	     0xf8403030000	                            je 0x40006c9	       785	git-compat-util.h	FUNCTION_19	IF_1	CALL_1
0x40003c6	        0x488d751d	                   lea rsi, [rbp + 0x1d]	        26	mktree.c	FUNCTION_1	CALL_4
0x40003ca	      0xbf01000000	                              mov edi, 1	        26	mktree.c	FUNCTION_1	CALL_4
0x40003cf	      0xe800000000	                          call 0x40003d4	        26	mktree.c	FUNCTION_1	CALL_4
0x40003d4	        0x488d781c	                   lea rdi, [rax + 0x1c]	        53	string3.h	FUNCTION_60	CALL_3
0x40003d8	          0x4889c3	                            mov rbx, rax	        26	mktree.c	FUNCTION_1	CALL_4
0x40003db	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_60	CALL_3
0x40003de	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_60	CALL_3
0x40003e1	      0xe800000000	                          call 0x40003e6	        53	string3.h	FUNCTION_60	CALL_3
0x40003e6	          0x44892b	                   mov dword [rbx], r13d	        27	mktree.c	FUNCTION_1
0x40003e9	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	        53	string3.h	FUNCTION_60	CALL_3
0x40003f1	          0x896b18	             mov dword [rbx + 0x18], ebp	        28	mktree.c	FUNCTION_1
0x40003f4	    0x48630d000000	         movsxd rcx, dword [0x040003fb] 	        31	mktree.c	FUNCTION_1	CALL_6
0x40003fb	        0x48894304	                mov qword [rbx + 4], rax	        53	string3.h	FUNCTION_60	CALL_3
0x40003ff	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	        53	string3.h	FUNCTION_60	CALL_3
0x4000407	        0x4889430c	              mov qword [rbx + 0xc], rax	        53	string3.h	FUNCTION_60	CALL_3
0x400040b	    0x8b8424a00000	            mov eax, dword [rsp + 0xa0] 	        53	string3.h	FUNCTION_60	CALL_3
0x4000412	          0x894314	             mov dword [rbx + 0x14], eax	        53	string3.h	FUNCTION_60	CALL_3
0x4000415	    0x8b0500000000	            mov eax, dword [0x0400041b] 	        31	mktree.c	FUNCTION_1	CALL_6
0x400041b	            0x39c1	                            cmp ecx, eax	        31	mktree.c	FUNCTION_1	CALL_6
0x400041d	     0xf8db5fdffff	                           jge 0x40001d8	        31	mktree.c	FUNCTION_1	CALL_6
0x4000423	    0x488b05000000	            mov rax, qword [0x0400042a] 	        31	mktree.c	FUNCTION_1	CALL_6
0x400042a	      0xe9fffdffff	                           jmp 0x400022e	        31	mktree.c	FUNCTION_1	CALL_6
0x400042f	              0x90	                                     nop	        31	mktree.c	FUNCTION_1	CALL_6
0x4000430	    0x891500000000	            mov dword [0x04000436], edx 	        31	mktree.c	FUNCTION_1	CALL_6
0x4000436	      0xe9bbfdffff	                           jmp 0x40001f6	        31	mktree.c	FUNCTION_1	CALL_6
0x400043b	       0xf1f440000	                   nop dword [rax + rax]	        31	mktree.c	FUNCTION_1	CALL_6
0x4000440	            0x85ed	                           test ebp, ebp	       101	mktree.c	FUNCTION_4	IF_4
0x4000442	            0x744c	                            je 0x4000490	       101	mktree.c	FUNCTION_4	IF_4
0x4000444	          0x4531f6	                          xor r14d, r14d	        76	mktree.c	FUNCTION_4
0x4000447	    0x41bf01000000	                             mov r15d, 1	        95	mktree.c	FUNCTION_4	IF_3
0x400044d	      0xbd01000000	                              mov ebp, 1	       399	cache.h	FUNCTION_39	CALL_1
0x4000452	      0xe9fdfeffff	                           jmp 0x4000354	       399	cache.h	FUNCTION_39	CALL_1
0x4000457	    0x660f1f840000	                    nop word [rax + rax]	       399	cache.h	FUNCTION_39	CALL_1
0x4000460	          0x4585ff	                         test r15d, r15d	       121	mktree.c	FUNCTION_4	IF_7	IF_8
0x4000463	     0xf852cffffff	                           jne 0x4000395	       121	mktree.c	FUNCTION_4	IF_7	IF_8
0x4000469	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_16
0x4000471	      0xe800000000	                          call 0x4000476	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_16
0x4000476	          0x4c89e6	                            mov rsi, r12	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_16
0x4000479	          0x4889c2	                            mov rdx, rax	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_16
0x400047c	      0xbf00000000	                              mov edi, 0	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_16
0x4000481	            0x31c0	                            xor eax, eax	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_16
0x4000483	      0xe800000000	                          call 0x4000488	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_16
0x4000488	     0xf1f84000000	                   nop dword [rax + rax]	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_16
0x4000490	          0x4531f6	                          xor r14d, r14d	        76	mktree.c	FUNCTION_4
0x4000493	        0x80782922	            cmp byte [rax + 0x29], 0x22 	       101	mktree.c	FUNCTION_4	IF_4
0x4000497	    0x41bf01000000	                             mov r15d, 1	        95	mktree.c	FUNCTION_4	IF_3
0x400049d	      0xbd01000000	                              mov ebp, 1	       399	cache.h	FUNCTION_39	CALL_1
0x40004a2	     0xf85acfeffff	                           jne 0x4000354	       101	mktree.c	FUNCTION_4	IF_4
0x40004a8	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_7
0x40004ad	            0x31d2	                            xor edx, edx	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_7
0x40004af	          0x4c89e6	                            mov rsi, r12	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_7
0x40004b2	        0x894c240c	              mov dword [rsp + 0xc], ecx	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_7
0x40004b6	    0x48c744245000	               mov qword [rsp + 0x50], 0	       102	mktree.c	FUNCTION_4	IF_4
0x40004bf	    0x48c744245800	               mov qword [rsp + 0x58], 0	       102	mktree.c	FUNCTION_4	IF_4
0x40004c8	    0x48c744246000	               mov qword [rsp + 0x60], 0	       102	mktree.c	FUNCTION_4	IF_4
0x40004d1	      0xe800000000	                          call 0x40004d6	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_7
0x40004d6	            0x85c0	                           test eax, eax	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_7
0x40004d8	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_7
0x40004dc	     0xf8576020000	                           jne 0x4000758	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_7
0x40004e2	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       105	mktree.c	FUNCTION_4	IF_4	CALL_9
0x40004e7	            0x31f6	                            xor esi, esi	       105	mktree.c	FUNCTION_4	IF_4	CALL_9
0x40004e9	        0x894c240c	              mov dword [rsp + 0xc], ecx	       105	mktree.c	FUNCTION_4	IF_4	CALL_9
0x40004ed	      0xe800000000	                          call 0x40004f2	       105	mktree.c	FUNCTION_4	IF_4	CALL_9
0x40004f2	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	       105	mktree.c	FUNCTION_4	IF_4	CALL_9
0x40004f6	          0x4989c4	                            mov r12, rax	       105	mktree.c	FUNCTION_4	IF_4	CALL_9
0x40004f9	          0x4989c6	                            mov r14, rax	       105	mktree.c	FUNCTION_4	IF_4	CALL_9
0x40004fc	      0xe936feffff	                           jmp 0x4000337	       105	mktree.c	FUNCTION_4	IF_4	CALL_9
0x4000501	     0xf1f80000000	                         nop dword [rax]	       105	mktree.c	FUNCTION_4	IF_4	CALL_9
0x4000508	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       176	mktree.c	FUNCTION_5	WHILE_1	IF_4
0x400050c	      0xbd01000000	                              mov ebp, 1	       165	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1
0x4000511	            0x85c0	                           test eax, eax	       176	mktree.c	FUNCTION_5	WHILE_1	IF_4
0x4000513	     0xf8441010000	                            je 0x400065a	       176	mktree.c	FUNCTION_5	WHILE_1	IF_4
0x4000519	    0x8b0d00000000	            mov ecx, dword [0x0400051f] 	       176	mktree.c	FUNCTION_5	WHILE_1	IF_4
0x400051f	            0x85c9	                           test ecx, ecx	       176	mktree.c	FUNCTION_5	WHILE_1	IF_4
0x4000521	     0xf8e5d010000	                           jle 0x4000684	       176	mktree.c	FUNCTION_5	WHILE_1	IF_4
0x4000527	          0x4863f1	                         movsxd rsi, ecx	        49	mktree.c	FUNCTION_3	CALL_1
0x400052a	    0x488b3d000000	            mov rdi, qword [0x04000531] 	        49	mktree.c	FUNCTION_3	CALL_1
0x4000531	      0xbd01000000	                              mov ebp, 1	       165	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1
0x4000536	        0x4883fe01	                              cmp rsi, 1	      1048	git-compat-util.h	FUNCTION_30	IF_1
0x400053a	            0x7424	                            je 0x4000560	      1048	git-compat-util.h	FUNCTION_30	IF_1
0x400053c	      0xb900000000	                              mov ecx, 0	      1049	git-compat-util.h	FUNCTION_30	CALL_1
0x4000541	      0xba08000000	                              mov edx, 8	      1049	git-compat-util.h	FUNCTION_30	CALL_1
0x4000546	      0xe800000000	                          call 0x400054b	      1049	git-compat-util.h	FUNCTION_30	CALL_1
0x400054b	    0x8b0d00000000	            mov ecx, dword [0x04000551] 	      1049	git-compat-util.h	FUNCTION_30	CALL_1
0x4000551	            0x85c9	                           test ecx, ecx	        50	mktree.c	FUNCTION_3	FOR_1
0x4000553	     0xf8e24010000	                           jle 0x400067d	        50	mktree.c	FUNCTION_3	FOR_1
0x4000559	    0x488b3d000000	            mov rdi, qword [0x04000560] 	        50	mktree.c	FUNCTION_3	FOR_1
0x4000560	            0x31d2	                            xor edx, edx	       165	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1
0x4000562	            0x31f6	                            xor esi, esi	       165	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1
0x4000564	         0xf1f4000	                         nop dword [rax]	       165	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1
0x4000568	        0x488b04d7	            mov rax, qword [rdi + rdx*8]	        51	mktree.c	FUNCTION_3	FOR_1
0x400056c	        0x4883c201	                              add rdx, 1	        51	mktree.c	FUNCTION_3	FOR_1
0x4000570	          0x8b4018	            mov eax, dword [rax + 0x18] 	        51	mktree.c	FUNCTION_3	FOR_1
0x4000573	          0x83c020	                           add eax, 0x20	        51	mktree.c	FUNCTION_3	FOR_1
0x4000576	            0x4898	                                    cdqe	        51	mktree.c	FUNCTION_3	FOR_1
0x4000578	          0x4801c6	                            add rsi, rax	        51	mktree.c	FUNCTION_3	FOR_1
0x400057b	            0x39d1	                            cmp ecx, edx	        50	mktree.c	FUNCTION_3	FOR_1
0x400057d	            0x7fe9	                            jg 0x4000568	        50	mktree.c	FUNCTION_3	FOR_1
0x400057f	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	        53	mktree.c	FUNCTION_3	CALL_2
0x4000584	          0x4531ed	                          xor r13d, r13d	        54	mktree.c	FUNCTION_3	FOR_2
0x4000587	          0x4531e4	                          xor r12d, r12d	        54	mktree.c	FUNCTION_3	FOR_2
0x400058a	      0xe800000000	                          call 0x400058f	        53	mktree.c	FUNCTION_3	CALL_2
0x400058f	    0x8b1500000000	            mov edx, dword [0x04000595] 	        54	mktree.c	FUNCTION_3	FOR_2
0x4000595	            0x85d2	                           test edx, edx	        54	mktree.c	FUNCTION_3	FOR_2
0x4000597	            0x7e5a	                           jle 0x40005f3	        54	mktree.c	FUNCTION_3	FOR_2
0x4000599	     0xf1f80000000	                         nop dword [rax]	        54	mktree.c	FUNCTION_3	FOR_2
0x40005a0	    0x488b05000000	            mov rax, qword [0x040005a7] 	        55	mktree.c	FUNCTION_3	FOR_2
0x40005a7	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	        56	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x40005ac	          0x4531c0	                            xor r8d, r8d	        56	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x40005af	      0xbe00000000	                              mov esi, 0	        56	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x40005b4	        0x4183c401	                             add r12d, 1	        54	mktree.c	FUNCTION_3	FOR_2
0x40005b8	        0x4a8b1c28	              mov rbx, qword [rax + r13]	        55	mktree.c	FUNCTION_3	FOR_2
0x40005bc	            0x31c0	                            xor eax, eax	        56	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x40005be	        0x4983c508	                              add r13, 8	        56	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x40005c2	            0x8b13	                    mov edx, dword [rbx]	        56	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x40005c4	        0x488d4b1c	                   lea rcx, [rbx + 0x1c]	        56	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x40005c8	      0xe800000000	                          call 0x40005cd	        56	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x40005cd	    0x488b05000000	            mov rax, qword [0x040005d4] 	        57	mktree.c	FUNCTION_3	FOR_2	CALL_4
0x40005d4	        0x488d7304	                      lea rsi, [rbx + 4]	        57	mktree.c	FUNCTION_3	FOR_2	CALL_4
0x40005d8	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	        57	mktree.c	FUNCTION_3	FOR_2	CALL_4
0x40005dd	        0x488b4058	            mov rax, qword [rax + 0x58] 	        57	mktree.c	FUNCTION_3	FOR_2	CALL_4
0x40005e1	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        57	mktree.c	FUNCTION_3	FOR_2	CALL_4
0x40005e5	      0xe800000000	                          call 0x40005ea	        57	mktree.c	FUNCTION_3	FOR_2	CALL_4
0x40005ea	    0x443b25000000	           cmp r12d, dword [0x040005f1] 	        54	mktree.c	FUNCTION_3	FOR_2
0x40005f1	            0x7cad	                            jl 0x40005a0	        54	mktree.c	FUNCTION_3	FOR_2
0x40005f3	    0x488b15000000	            mov rdx, qword [0x040005fa] 	        60	mktree.c	FUNCTION_3	CALL_5
0x40005fa	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	        60	mktree.c	FUNCTION_3	CALL_5
0x40005ff	      0x488d4c2470	                   lea rcx, [rsp + 0x70]	        60	mktree.c	FUNCTION_3	CALL_5
0x4000604	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	        60	mktree.c	FUNCTION_3	CALL_5
0x4000609	      0xe800000000	                          call 0x400060e	        60	mktree.c	FUNCTION_3	CALL_5
0x400060e	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	        61	mktree.c	FUNCTION_3	CALL_6
0x4000613	      0xe800000000	                          call 0x4000618	        61	mktree.c	FUNCTION_3	CALL_6
0x4000618	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       185	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_14
0x400061d	      0xe800000000	                          call 0x4000622	       185	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_14
0x4000622	          0x4889c7	                            mov rdi, rax	       185	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_14
0x4000625	      0xe800000000	                          call 0x400062a	       185	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_14
0x400062a	    0x488b3d000000	            mov rdi, qword [0x04000631] 	       186	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_15
0x4000631	      0xe800000000	                          call 0x4000636	       186	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_15
0x4000636	            0x85ed	                           test ebp, ebp	       162	mktree.c	FUNCTION_5	WHILE_1
0x4000638	    0xc70500000000	               mov dword [0x04000642], 0	       188	mktree.c	FUNCTION_5	WHILE_1
0x4000642	     0xf84fbfbffff	                            je 0x4000243	       162	mktree.c	FUNCTION_5	WHILE_1
0x4000648	            0xeb44	                           jmp 0x400068e	       162	mktree.c	FUNCTION_5	WHILE_1
0x400064a	    0x660f1f440000	                    nop word [rax + rax]	       162	mktree.c	FUNCTION_5	WHILE_1
0x4000650	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	       170	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2	IF_3
0x4000654	            0x85c9	                           test ecx, ecx	       170	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2	IF_3
0x4000656	            0x7456	                            je 0x40006ae	       170	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2	IF_3
0x4000658	            0x31ed	                            xor ebp, ebp	       170	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2	IF_3
0x400065a	    0x486335000000	         movsxd rsi, dword [0x04000661] 	        49	mktree.c	FUNCTION_3	CALL_1
0x4000661	    0x488b3d000000	            mov rdi, qword [0x04000668] 	        49	mktree.c	FUNCTION_3	CALL_1
0x4000668	        0x4883fe01	                              cmp rsi, 1	      1048	git-compat-util.h	FUNCTION_30	IF_1
0x400066c	          0x4889f1	                            mov rcx, rsi	        49	mktree.c	FUNCTION_3	CALL_1
0x400066f	     0xf87c7feffff	                            ja 0x400053c	      1048	git-compat-util.h	FUNCTION_30	IF_1
0x4000675	            0x85c9	                           test ecx, ecx	        50	mktree.c	FUNCTION_3	FOR_1
0x4000677	     0xf8fdcfeffff	                            jg 0x4000559	        50	mktree.c	FUNCTION_3	FOR_1
0x400067d	            0x31f6	                            xor esi, esi	        50	mktree.c	FUNCTION_3	FOR_1
0x400067f	      0xe9fbfeffff	                           jmp 0x400057f	        50	mktree.c	FUNCTION_3	FOR_1
0x4000684	    0xc70500000000	               mov dword [0x0400068e], 0	       188	mktree.c	FUNCTION_5	WHILE_1
0x400068e	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       190	mktree.c	FUNCTION_5	CALL_16
0x4000693	      0xe800000000	                          call 0x4000698	       190	mktree.c	FUNCTION_5	CALL_16
0x4000698	            0x31ff	                            xor edi, edi	       191	mktree.c	FUNCTION_5	CALL_17
0x400069a	      0xe800000000	                          call 0x400069f	       191	mktree.c	FUNCTION_5	CALL_17
0x400069f	          0x4c89e6	                            mov rsi, r12	        91	mktree.c	FUNCTION_4	CALL_5
0x40006a2	      0xbf00000000	                              mov edi, 0	        91	mktree.c	FUNCTION_4	CALL_5
0x40006a7	            0x31c0	                            xor eax, eax	        91	mktree.c	FUNCTION_4	CALL_5
0x40006a9	      0xe800000000	                          call 0x40006ae	        91	mktree.c	FUNCTION_4	CALL_5
0x40006ae	      0xbf00000000	                              mov edi, 0	       172	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2	CALL_10
0x40006b3	            0x31c0	                            xor eax, eax	       172	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2	CALL_10
0x40006b5	      0xe800000000	                          call 0x40006ba	       172	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2	CALL_10
0x40006ba	          0x4c89e6	                            mov rsi, r12	        24	mktree.c	FUNCTION_1	CALL_3
0x40006bd	      0xbf00000000	                              mov edi, 0	        24	mktree.c	FUNCTION_1	CALL_3
0x40006c2	            0x31c0	                            xor eax, eax	        24	mktree.c	FUNCTION_1	CALL_3
0x40006c4	      0xe800000000	                          call 0x40006c9	        24	mktree.c	FUNCTION_1	CALL_3
0x40006c9	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_2
0x40006ce	        0x4883ceff	              or rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_2
0x40006d2	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_2
0x40006d7	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_2
0x40006d9	      0xe800000000	                          call 0x40006de	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_2
0x40006de	          0x4889ea	                            mov rdx, rbp	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_2
0x40006e1	      0xbe1c000000	                           mov esi, 0x1c	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_2
0x40006e6	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_2
0x40006eb	            0x31c0	                            xor eax, eax	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_2
0x40006ed	      0xe800000000	                          call 0x40006f2	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_2
0x40006f2	            0x89ef	                            mov edi, ebp	       114	mktree.c	FUNCTION_4	IF_6	CALL_12
0x40006f4	      0xe800000000	                          call 0x40006f9	       114	mktree.c	FUNCTION_4	IF_6	CALL_12
0x40006f9	          0x4889da	                            mov rdx, rbx	       114	mktree.c	FUNCTION_4	IF_6	CALL_12
0x40006fc	          0x4889c1	                            mov rcx, rax	       114	mktree.c	FUNCTION_4	IF_6	CALL_12
0x40006ff	          0x4c89e6	                            mov rsi, r12	       114	mktree.c	FUNCTION_4	IF_6	CALL_12
0x4000702	      0xbf00000000	                              mov edi, 0	       114	mktree.c	FUNCTION_4	IF_6	CALL_12
0x4000707	            0x31c0	                            xor eax, eax	       114	mktree.c	FUNCTION_4	IF_6	CALL_12
0x4000709	      0xe800000000	                          call 0x400070e	       114	mktree.c	FUNCTION_4	IF_6	CALL_12
0x400070e	            0x89ef	                            mov edi, ebp	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x4000710	      0xe800000000	                          call 0x4000715	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x4000715	            0x89df	                            mov edi, ebx	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x4000717	          0x4889c5	                            mov rbp, rax	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x400071a	      0xe800000000	                          call 0x400071f	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x400071f	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x4000727	          0x4889c3	                            mov rbx, rax	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x400072a	      0xe800000000	                          call 0x400072f	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x400072f	          0x4989e8	                             mov r8, rbp	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x4000732	          0x4889c2	                            mov rdx, rax	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x4000735	          0x4889d9	                            mov rcx, rbx	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x4000738	          0x4c89e6	                            mov rsi, r12	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x400073b	      0xbf00000000	                              mov edi, 0	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x4000740	            0x31c0	                            xor eax, eax	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x4000742	      0xe800000000	                          call 0x4000747	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_17
0x4000747	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_2
0x400074c	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_2
0x4000751	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_2
0x4000753	      0xe800000000	                          call 0x4000758	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_2
0x4000758	      0xbf00000000	                              mov edi, 0	       104	mktree.c	FUNCTION_4	IF_4	CALL_8
0x400075d	            0x31c0	                            xor eax, eax	       104	mktree.c	FUNCTION_4	IF_4	CALL_8
0x400075f	      0xe800000000	                  call section_end..text	       104	mktree.c	FUNCTION_4	IF_4	CALL_8
