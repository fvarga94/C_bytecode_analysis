cmd_main	SWITCH,0:functions,0:CALL,6:IF,3:DO,0:FOR,0:ELSE,2:WHILE,0	69
0x4000150	        0x4883ec58	                           sub rsp, 0x58	        52	test-pkt-line.c	FUNCTION_4
0x4000154	    0x64488b042528	                mov rax, qword fs:[0x28]	        52	test-pkt-line.c	FUNCTION_4
0x400015d	      0x4889442448	             mov qword [rsp + 0x48], rax	        52	test-pkt-line.c	FUNCTION_4
0x4000162	            0x31c0	                            xor eax, eax	        52	test-pkt-line.c	FUNCTION_4
0x4000164	          0x83ff01	                              cmp edi, 1	        53	test-pkt-line.c	FUNCTION_4	IF_1
0x4000167	     0xf8ecd000000	                           jle 0x400023a	        53	test-pkt-line.c	FUNCTION_4	IF_1
0x400016d	        0x488b4608	                mov rax, qword [rsi + 8]	        56	test-pkt-line.c	FUNCTION_4	IF_2	CALL_2
0x4000171	            0x89fa	                            mov edx, edi	        56	test-pkt-line.c	FUNCTION_4	IF_2	CALL_2
0x4000173	          0x4989f0	                             mov r8, rsi	        56	test-pkt-line.c	FUNCTION_4	IF_2	CALL_2
0x4000176	      0xbf00000000	                              mov edi, 0	        56	test-pkt-line.c	FUNCTION_4	IF_2	CALL_2
0x400017b	      0xb905000000	                              mov ecx, 5	        56	test-pkt-line.c	FUNCTION_4	IF_2	CALL_2
0x4000180	          0x4889c6	                            mov rsi, rax	        56	test-pkt-line.c	FUNCTION_4	IF_2	CALL_2
0x4000183	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        56	test-pkt-line.c	FUNCTION_4	IF_2	CALL_2
0x4000185	     0xf84a1000000	                            je 0x400022c	        56	test-pkt-line.c	FUNCTION_4	IF_2	CALL_2
0x400018b	      0xbf00000000	                              mov edi, 0	        58	test-pkt-line.c	FUNCTION_4	ELSE_1	IF_3	CALL_4
0x4000190	      0xb907000000	                              mov ecx, 7	        58	test-pkt-line.c	FUNCTION_4	ELSE_1	IF_3	CALL_4
0x4000195	          0x4889c6	                            mov rsi, rax	        58	test-pkt-line.c	FUNCTION_4	ELSE_1	IF_3	CALL_4
0x4000198	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        58	test-pkt-line.c	FUNCTION_4	ELSE_1	IF_3	CALL_4
0x400019a	     0xf85a9000000	                           jne 0x4000249	        58	test-pkt-line.c	FUNCTION_4	ELSE_1	IF_3	CALL_4
0x40001a0	    0x41b803000000	                              mov r8d, 3	        30	test-pkt-line.c	FUNCTION_3	CALL_1
0x40001a6	            0x31c9	                            xor ecx, ecx	        30	test-pkt-line.c	FUNCTION_3	CALL_1
0x40001a8	            0x31d2	                            xor edx, edx	        30	test-pkt-line.c	FUNCTION_3	CALL_1
0x40001aa	            0x31f6	                            xor esi, esi	        30	test-pkt-line.c	FUNCTION_3	CALL_1
0x40001ac	          0x4889e7	                            mov rdi, rsp	        30	test-pkt-line.c	FUNCTION_3	CALL_1
0x40001af	      0xe800000000	                          call 0x40001b4	        30	test-pkt-line.c	FUNCTION_3	CALL_1
0x40001b4	         0xf1f4000	                         nop dword [rax]	        30	test-pkt-line.c	FUNCTION_3	CALL_1
0x40001b8	          0x4889e7	                            mov rdi, rsp	        34	test-pkt-line.c	FUNCTION_3	WHILE_1	CALL_2
0x40001bb	      0xe800000000	                          call 0x40001c0	        34	test-pkt-line.c	FUNCTION_3	WHILE_1	CALL_2
0x40001c0	            0x85c0	                           test eax, eax	        34	test-pkt-line.c	FUNCTION_3	WHILE_1	CALL_2
0x40001c2	            0x742c	                            je 0x40001f0	        34	test-pkt-line.c	FUNCTION_3	WHILE_1	CALL_2
0x40001c4	        0x8b442428	            mov eax, dword [rsp + 0x28] 	        35	test-pkt-line.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001c8	          0x83f802	                              cmp eax, 2	        35	test-pkt-line.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001cb	            0x7453	                            je 0x4000220	        35	test-pkt-line.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001cd	          0x83f803	                              cmp eax, 3	        35	test-pkt-line.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001d0	            0x743e	                            je 0x4000210	        35	test-pkt-line.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001d2	          0x83f801	                              cmp eax, 1	        35	test-pkt-line.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001d5	            0x75e1	                           jne 0x40001b8	        35	test-pkt-line.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40001d7	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       104	stdio2.h	FUNCTION_10	CALL_2
0x40001dc	      0xe800000000	                          call 0x40001e1	       104	stdio2.h	FUNCTION_10	CALL_2
0x40001e1	          0x4889e7	                            mov rdi, rsp	        34	test-pkt-line.c	FUNCTION_3	WHILE_1	CALL_2
0x40001e4	      0xe800000000	                          call 0x40001e9	        34	test-pkt-line.c	FUNCTION_3	WHILE_1	CALL_2
0x40001e9	            0x85c0	                           test eax, eax	        34	test-pkt-line.c	FUNCTION_3	WHILE_1	CALL_2
0x40001eb	            0x75d7	                           jne 0x40001c4	        34	test-pkt-line.c	FUNCTION_3	WHILE_1	CALL_2
0x40001ed	           0xf1f00	                         nop dword [rax]	        34	test-pkt-line.c	FUNCTION_3	WHILE_1	CALL_2
0x40001f0	            0x31c0	                            xor eax, eax	        64	test-pkt-line.c	FUNCTION_4
0x40001f2	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	        64	test-pkt-line.c	FUNCTION_4
0x40001f7	    0x644833142528	                xor rdx, qword fs:[0x28]	        64	test-pkt-line.c	FUNCTION_4
0x4000200	            0x7542	                           jne 0x4000244	        64	test-pkt-line.c	FUNCTION_4
0x4000202	        0x4883c458	                           add rsp, 0x58	        64	test-pkt-line.c	FUNCTION_4
0x4000206	              0xc3	                                     ret	        64	test-pkt-line.c	FUNCTION_4
0x4000207	    0x660f1f840000	                    nop word [rax + rax]	        64	test-pkt-line.c	FUNCTION_4
0x4000210	      0xbf00000000	                              mov edi, 0	       104	stdio2.h	FUNCTION_10	CALL_2
0x4000215	      0xe800000000	                          call 0x400021a	       104	stdio2.h	FUNCTION_10	CALL_2
0x400021a	            0xeb9c	                           jmp 0x40001b8	       104	stdio2.h	FUNCTION_10	CALL_2
0x400021c	         0xf1f4000	                         nop dword [rax]	       104	stdio2.h	FUNCTION_10	CALL_2
0x4000220	      0xbf00000000	                              mov edi, 0	       104	stdio2.h	FUNCTION_10	CALL_2
0x4000225	      0xe800000000	                          call 0x400022a	       104	stdio2.h	FUNCTION_10	CALL_2
0x400022a	            0xeb8c	                           jmp 0x40001b8	       104	stdio2.h	FUNCTION_10	CALL_2
0x400022c	        0x498d7010	                    lea rsi, [r8 + 0x10]	        57	test-pkt-line.c	FUNCTION_4	CALL_3
0x4000230	          0x8d7afe	                      lea edi, [rdx - 2]	        57	test-pkt-line.c	FUNCTION_4	CALL_3
0x4000233	      0xe888feffff	                           call sym.pack	        57	test-pkt-line.c	FUNCTION_4	CALL_3
0x4000238	            0xebb6	                           jmp 0x40001f0	        57	test-pkt-line.c	FUNCTION_4	CALL_3
0x400023a	      0xbf00000000	                              mov edi, 0	        54	test-pkt-line.c	FUNCTION_4	CALL_1
0x400023f	      0xe800000000	                          call 0x4000244	        54	test-pkt-line.c	FUNCTION_4	CALL_1
0x4000244	      0xe800000000	                          call 0x4000249	        64	test-pkt-line.c	FUNCTION_4
0x4000249	          0x4889c6	                            mov rsi, rax	        61	test-pkt-line.c	FUNCTION_4	CALL_6
0x400024c	      0xbf00000000	                              mov edi, 0	        61	test-pkt-line.c	FUNCTION_4	CALL_6
0x4000251	            0x31c0	                            xor eax, eax	        61	test-pkt-line.c	FUNCTION_4	CALL_6
0x4000253	      0xe800000000	                          call 0x4000258	        61	test-pkt-line.c	FUNCTION_4	CALL_6
pack	SWITCH,0:functions,0:CALL,3:IF,1:DO,0:FOR,1:ELSE,1:WHILE,1	36
0x40000c0	              0x55	                                push rbp	        14	test-pkt-line.c	FUNCTION_2
0x40000c1	              0x53	                                push rbx	        14	test-pkt-line.c	FUNCTION_2
0x40000c2	    0x4881ec080001	                        sub rsp, 0x10008	        14	test-pkt-line.c	FUNCTION_2
0x40000c9	    0x64488b042528	                mov rax, qword fs:[0x28]	        14	test-pkt-line.c	FUNCTION_2
0x40000d2	    0x48898424f8ff	          mov qword [rsp + 0xfff8], rax 	        14	test-pkt-line.c	FUNCTION_2
0x40000da	            0x31c0	                            xor eax, eax	        14	test-pkt-line.c	FUNCTION_2
0x40000dc	          0x83ff00	                              cmp edi, 0	        15	test-pkt-line.c	FUNCTION_2	IF_1
0x40000df	            0x7447	                            je 0x4000128	        15	test-pkt-line.c	FUNCTION_2	IF_1
0x40000e1	            0x7e1e	                           jle 0x4000101	        17	test-pkt-line.c	FUNCTION_2	IF_1	FOR_1
0x40000e3	          0x8d47ff	                      lea eax, [rdi - 1]	        17	test-pkt-line.c	FUNCTION_2	IF_1	FOR_1
0x40000e6	          0x4889f3	                            mov rbx, rsi	        17	test-pkt-line.c	FUNCTION_2	IF_1	FOR_1
0x40000e9	      0x488d6cc608	              lea rbp, [rsi + rax*8 + 8]	        17	test-pkt-line.c	FUNCTION_2	IF_1	FOR_1
0x40000ee	            0x6690	                                     nop	        17	test-pkt-line.c	FUNCTION_2	IF_1	FOR_1
0x40000f0	          0x488b3b	                    mov rdi, qword [rbx]	        18	test-pkt-line.c	FUNCTION_2	IF_1	CALL_1
0x40000f3	        0x4883c308	                              add rbx, 8	        18	test-pkt-line.c	FUNCTION_2	IF_1	CALL_1
0x40000f7	      0xe844ffffff	                      call sym.pack_line	        18	test-pkt-line.c	FUNCTION_2	IF_1	CALL_1
0x40000fc	          0x4839eb	                            cmp rbx, rbp	        17	test-pkt-line.c	FUNCTION_2	IF_1	FOR_1
0x40000ff	            0x75ef	                           jne 0x40000f0	        17	test-pkt-line.c	FUNCTION_2	IF_1	FOR_1
0x4000101	    0x488b8424f8ff	          mov rax, qword [rsp + 0xfff8] 	        25	test-pkt-line.c	FUNCTION_2
0x4000109	    0x644833042528	                xor rax, qword fs:[0x28]	        25	test-pkt-line.c	FUNCTION_2
0x4000112	            0x752f	                           jne 0x4000143	        25	test-pkt-line.c	FUNCTION_2
0x4000114	    0x4881c4080001	                        add rsp, 0x10008	        25	test-pkt-line.c	FUNCTION_2
0x400011b	              0x5b	                                 pop rbx	        25	test-pkt-line.c	FUNCTION_2
0x400011c	              0x5d	                                 pop rbp	        25	test-pkt-line.c	FUNCTION_2
0x400011d	              0xc3	                                     ret	        25	test-pkt-line.c	FUNCTION_2
0x400011e	            0x6690	                                     nop	        25	test-pkt-line.c	FUNCTION_2
0x4000120	          0x4889e7	                            mov rdi, rsp	        22	test-pkt-line.c	FUNCTION_2	ELSE_1	WHILE_1	CALL_3
0x4000123	      0xe818ffffff	                      call sym.pack_line	        22	test-pkt-line.c	FUNCTION_2	ELSE_1	WHILE_1	CALL_3
0x4000128	    0x488b15000000	            mov rdx, qword [0x0400012f] 	       263	stdio2.h	FUNCTION_21	CALL_8
0x400012f	      0xbef0ff0000	                         mov esi, 0xfff0	       263	stdio2.h	FUNCTION_21	CALL_8
0x4000134	          0x4889e7	                            mov rdi, rsp	       263	stdio2.h	FUNCTION_21	CALL_8
0x4000137	      0xe800000000	                          call 0x400013c	       263	stdio2.h	FUNCTION_21	CALL_8
0x400013c	          0x4885c0	                           test rax, rax	        21	test-pkt-line.c	FUNCTION_2	ELSE_1	WHILE_1	CALL_2
0x400013f	            0x75df	                           jne 0x4000120	        21	test-pkt-line.c	FUNCTION_2	ELSE_1	WHILE_1	CALL_2
0x4000141	            0xebbe	                           jmp 0x4000101	        21	test-pkt-line.c	FUNCTION_2	ELSE_1	WHILE_1	CALL_2
0x4000143	      0xe800000000	                          call 0x4000148	        25	test-pkt-line.c	FUNCTION_2
