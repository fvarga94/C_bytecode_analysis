internal_prefix_pathspec	functions,0:CALL,7:SWITCH,0:WHILE,1:ELSE,1:IF,1:FOR,2:DO,0	126
0x4000040	            0x4157	                                push r15	        27	mv.c	FUNCTION_1
0x4000042	            0x4156	                                push r14	        27	mv.c	FUNCTION_1
0x4000044	            0x4155	                                push r13	        27	mv.c	FUNCTION_1
0x4000046	            0x4154	                                push r12	        27	mv.c	FUNCTION_1
0x4000048	              0x55	                                push rbp	        27	mv.c	FUNCTION_1
0x4000049	              0x53	                                push rbx	        27	mv.c	FUNCTION_1
0x400004a	        0x4883ec38	                           sub rsp, 0x38	        27	mv.c	FUNCTION_1
0x400004e	      0x48897c2418	             mov qword [rsp + 0x18], rdi	        27	mv.c	FUNCTION_1
0x4000053	          0x4989f5	                            mov r13, rsi	        27	mv.c	FUNCTION_1
0x4000056	            0x89d3	                            mov ebx, edx	        27	mv.c	FUNCTION_1
0x4000058	          0x4189cf	                           mov r15d, ecx	        27	mv.c	FUNCTION_1
0x400005b	          0x4885ff	                           test rdi, rdi	        30	mv.c	FUNCTION_1	CALL_1
0x400005e	            0x741d	                            je 0x400007d	        30	mv.c	FUNCTION_1	CALL_1
0x4000060	      0xb800000000	                              mov eax, 0	        30	mv.c	FUNCTION_1	CALL_1
0x4000065	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	        30	mv.c	FUNCTION_1	CALL_1
0x400006c	            0xf2ae	              repne scasb al, byte [rdi]	        30	mv.c	FUNCTION_1	CALL_1
0x400006e	          0x4889c8	                            mov rax, rcx	        30	mv.c	FUNCTION_1	CALL_1
0x4000071	          0x48f7d0	                                 not rax	        30	mv.c	FUNCTION_1	CALL_1
0x4000074	          0x8d40ff	                      lea eax, [rax - 1]	        30	mv.c	FUNCTION_1	CALL_1
0x4000077	        0x89442414	             mov dword [rsp + 0x14], eax	        30	mv.c	FUNCTION_1	CALL_1
0x400007b	            0xeb08	                           jmp 0x4000085	        30	mv.c	FUNCTION_1	CALL_1
0x400007d	    0xc74424140000	               mov dword [rsp + 0x14], 0	        30	mv.c	FUNCTION_1	CALL_1
0x4000085	          0x8d5301	                      lea edx, [rbx + 1]	        31	mv.c	FUNCTION_1
0x4000088	          0x4863d2	                         movsxd rdx, edx	        31	mv.c	FUNCTION_1
0x400008b	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_20	IF_1
0x4000095	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_20	IF_1
0x4000098	            0x7614	                           jbe 0x40000ae	       795	git-compat-util.h	FUNCTION_20	IF_1
0x400009a	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x400009f	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x40000a4	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x40000a9	      0xe800000000	                          call 0x40000ae	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x40000ae	    0x488d04d50000	                        lea rax, [rdx*8]	       798	git-compat-util.h	FUNCTION_20
0x40000b6	      0x4889442408	                mov qword [rsp + 8], rax	       798	git-compat-util.h	FUNCTION_20
0x40000bb	          0x4889c7	                            mov rdi, rax	        31	mv.c	FUNCTION_1
0x40000be	      0xe800000000	                          call 0x40000c3	        31	mv.c	FUNCTION_1
0x40000c3	          0x4889c7	                            mov rdi, rax	        31	mv.c	FUNCTION_1
0x40000c6	        0x48890424	                    mov qword [rsp], rax	        31	mv.c	FUNCTION_1
0x40000ca	            0x85db	                           test ebx, ebx	        34	mv.c	FUNCTION_1	FOR_1
0x40000cc	     0xf8e0e010000	                           jle 0x40001e0	        34	mv.c	FUNCTION_1	FOR_1
0x40000d2	          0x4d89ec	                            mov r12, r13	        34	mv.c	FUNCTION_1	FOR_1
0x40000d5	          0x8d43ff	                      lea eax, [rbx - 1]	        34	mv.c	FUNCTION_1	FOR_1
0x40000d8	    0x488d04c50800	                    lea rax, [rax*8 + 8]	        34	mv.c	FUNCTION_1	FOR_1
0x40000e0	      0x4889442420	             mov qword [rsp + 0x20], rax	        34	mv.c	FUNCTION_1	FOR_1
0x40000e5	          0x4901c5	                            add r13, rax	        34	mv.c	FUNCTION_1	FOR_1
0x40000e8	          0x4d89ee	                            mov r14, r13	        34	mv.c	FUNCTION_1	FOR_1
0x40000eb	          0x4989fd	                            mov r13, rdi	        34	mv.c	FUNCTION_1	FOR_1
0x40000ee	          0x4489fb	                           mov ebx, r15d	        38	mv.c	FUNCTION_1	FOR_1	WHILE_1
0x40000f1	            0xd1eb	                              shr ebx, 1	        38	mv.c	FUNCTION_1	FOR_1	WHILE_1
0x40000f3	          0x83f301	                              xor ebx, 1	        38	mv.c	FUNCTION_1	FOR_1	WHILE_1
0x40000f6	          0x83e301	                              and ebx, 1	        38	mv.c	FUNCTION_1	FOR_1	WHILE_1
0x40000f9	        0x4183e701	                             and r15d, 1	        43	mv.c	FUNCTION_1	FOR_1	IF_1
0x40000fd	      0x48897c2428	             mov qword [rsp + 0x28], rdi	        43	mv.c	FUNCTION_1	FOR_1	IF_1
0x4000102	        0x498b1424	                    mov rdx, qword [r12]	        35	mv.c	FUNCTION_1	FOR_1	CALL_2
0x4000106	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	        35	mv.c	FUNCTION_1	FOR_1	CALL_2
0x400010d	          0x4889d7	                            mov rdi, rdx	        35	mv.c	FUNCTION_1	FOR_1	CALL_2
0x4000110	      0xb800000000	                              mov eax, 0	        35	mv.c	FUNCTION_1	FOR_1	CALL_2
0x4000115	            0xf2ae	              repne scasb al, byte [rdi]	        35	mv.c	FUNCTION_1	FOR_1	CALL_2
0x4000117	          0x48f7d1	                                 not rcx	        35	mv.c	FUNCTION_1	FOR_1	CALL_2
0x400011a	        0x4883e901	                              sub rcx, 1	        35	mv.c	FUNCTION_1	FOR_1	CALL_2
0x400011e	            0x89ce	                            mov esi, ecx	        35	mv.c	FUNCTION_1	FOR_1	CALL_2
0x4000120	            0x85c9	                           test ecx, ecx	        38	mv.c	FUNCTION_1	FOR_1	WHILE_1
0x4000122	            0x7e23	                           jle 0x4000147	        38	mv.c	FUNCTION_1	FOR_1	WHILE_1
0x4000124	            0x84db	                             test bl, bl	        38	mv.c	FUNCTION_1	FOR_1	WHILE_1
0x4000126	            0x741f	                            je 0x4000147	        38	mv.c	FUNCTION_1	FOR_1	WHILE_1
0x4000128	          0x4863c9	                         movsxd rcx, ecx	        39	mv.c	FUNCTION_1	FOR_1	WHILE_1
0x400012b	      0x807c0aff2f	         cmp byte [rdx + rcx - 1], 0x2f 	        39	mv.c	FUNCTION_1	FOR_1	WHILE_1
0x4000130	            0x7515	                           jne 0x4000147	        39	mv.c	FUNCTION_1	FOR_1	WHILE_1
0x4000132	          0x83ee01	                              sub esi, 1	        40	mv.c	FUNCTION_1	FOR_1	WHILE_1
0x4000135	            0x85f6	                           test esi, esi	        38	mv.c	FUNCTION_1	FOR_1	WHILE_1
0x4000137	            0x7e0e	                           jle 0x4000147	        38	mv.c	FUNCTION_1	FOR_1	WHILE_1
0x4000139	            0x84db	                             test bl, bl	        38	mv.c	FUNCTION_1	FOR_1	WHILE_1
0x400013b	            0x740a	                            je 0x4000147	        38	mv.c	FUNCTION_1	FOR_1	WHILE_1
0x400013d	          0x4863c6	                         movsxd rax, esi	        39	mv.c	FUNCTION_1	FOR_1	WHILE_1
0x4000140	      0x807c02ff2f	         cmp byte [rdx + rax - 1], 0x2f 	        39	mv.c	FUNCTION_1	FOR_1	WHILE_1
0x4000145	            0x74eb	                            je 0x4000132	        39	mv.c	FUNCTION_1	FOR_1	WHILE_1
0x4000147	          0x4863f6	                         movsxd rsi, esi	        42	mv.c	FUNCTION_1	FOR_1	CALL_3
0x400014a	          0x4889d7	                            mov rdi, rdx	        42	mv.c	FUNCTION_1	FOR_1	CALL_3
0x400014d	      0xe800000000	                          call 0x4000152	        42	mv.c	FUNCTION_1	FOR_1	CALL_3
0x4000152	          0x4889c5	                            mov rbp, rax	        42	mv.c	FUNCTION_1	FOR_1	CALL_3
0x4000155	          0x4585ff	                         test r15d, r15d	        43	mv.c	FUNCTION_1	FOR_1	IF_1
0x4000158	            0x741e	                            je 0x4000178	        43	mv.c	FUNCTION_1	FOR_1	IF_1
0x400015a	          0x4889c7	                            mov rdi, rax	        44	mv.c	FUNCTION_1	FOR_1	IF_1	CALL_4
0x400015d	      0xe800000000	                          call 0x4000162	        44	mv.c	FUNCTION_1	FOR_1	IF_1	CALL_4
0x4000162	          0x4889c7	                            mov rdi, rax	        44	mv.c	FUNCTION_1	FOR_1	IF_1	CALL_4
0x4000165	      0xe800000000	                          call 0x400016a	        44	mv.c	FUNCTION_1	FOR_1	IF_1	CALL_4
0x400016a	        0x49894500	                    mov qword [r13], rax	        44	mv.c	FUNCTION_1	FOR_1	IF_1	CALL_4
0x400016e	          0x4889ef	                            mov rdi, rbp	        45	mv.c	FUNCTION_1	FOR_1	IF_1	CALL_5
0x4000171	      0xe800000000	                          call 0x4000176	        45	mv.c	FUNCTION_1	FOR_1	IF_1	CALL_5
0x4000176	            0xeb04	                           jmp 0x400017c	        45	mv.c	FUNCTION_1	FOR_1	IF_1	CALL_5
0x4000178	        0x49894500	                    mov qword [r13], rax	        47	mv.c	FUNCTION_1	FOR_1	ELSE_1
0x400017c	        0x4983c408	                              add r12, 8	        47	mv.c	FUNCTION_1	FOR_1	ELSE_1
0x4000180	        0x4983c508	                              add r13, 8	        47	mv.c	FUNCTION_1	FOR_1	ELSE_1
0x4000184	          0x4d39f4	                            cmp r12, r14	        34	mv.c	FUNCTION_1	FOR_1
0x4000187	     0xf8575ffffff	                           jne 0x4000102	        34	mv.c	FUNCTION_1	FOR_1
0x400018d	      0x488b6c2428	            mov rbp, qword [rsp + 0x28] 	        34	mv.c	FUNCTION_1	FOR_1
0x4000192	        0x488b0424	                    mov rax, qword [rsp]	        50	mv.c	FUNCTION_1
0x4000196	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        50	mv.c	FUNCTION_1
0x400019b	    0x48c74438f800	            mov qword [rax + rdi - 8], 0	        50	mv.c	FUNCTION_1
0x40001a4	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	        50	mv.c	FUNCTION_1
0x40001a9	          0x4901c4	                            add r12, rax	        50	mv.c	FUNCTION_1
0x40001ac	      0x448b6c2414	           mov r13d, dword [rsp + 0x14] 	        50	mv.c	FUNCTION_1
0x40001b1	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	        50	mv.c	FUNCTION_1
0x40001b6	        0x488b5500	                    mov rdx, qword [rbp]	        54	mv.c	FUNCTION_1	FOR_2	CALL_6
0x40001ba	          0x4489ee	                           mov esi, r13d	        54	mv.c	FUNCTION_1	FOR_2	CALL_6
0x40001bd	          0x4c89f7	                            mov rdi, r14	        54	mv.c	FUNCTION_1	FOR_2	CALL_6
0x40001c0	      0xe800000000	                          call 0x40001c5	        54	mv.c	FUNCTION_1	FOR_2	CALL_6
0x40001c5	          0x4889c3	                            mov rbx, rax	        54	mv.c	FUNCTION_1	FOR_2	CALL_6
0x40001c8	        0x488b7d00	                    mov rdi, qword [rbp]	        55	mv.c	FUNCTION_1	FOR_2	CALL_7
0x40001cc	      0xe800000000	                          call 0x40001d1	        55	mv.c	FUNCTION_1	FOR_2	CALL_7
0x40001d1	        0x48895d00	                    mov qword [rbp], rbx	        56	mv.c	FUNCTION_1	FOR_2
0x40001d5	        0x4883c508	                              add rbp, 8	        56	mv.c	FUNCTION_1	FOR_2
0x40001d9	          0x4939ec	                            cmp r12, rbp	        53	mv.c	FUNCTION_1	FOR_2
0x40001dc	            0x75d8	                           jne 0x40001b6	        53	mv.c	FUNCTION_1	FOR_2
0x40001de	            0xeb12	                           jmp 0x40001f2	        53	mv.c	FUNCTION_1	FOR_2
0x40001e0	        0x488b0424	                    mov rax, qword [rsp]	        50	mv.c	FUNCTION_1
0x40001e4	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        50	mv.c	FUNCTION_1
0x40001e9	    0x48c74438f800	            mov qword [rax + rdi - 8], 0	        50	mv.c	FUNCTION_1
0x40001f2	        0x488b0424	                    mov rax, qword [rsp]	        60	mv.c	FUNCTION_1
0x40001f6	        0x4883c438	                           add rsp, 0x38	        60	mv.c	FUNCTION_1
0x40001fa	              0x5b	                                 pop rbx	        60	mv.c	FUNCTION_1
0x40001fb	              0x5d	                                 pop rbp	        60	mv.c	FUNCTION_1
0x40001fc	            0x415c	                                 pop r12	        60	mv.c	FUNCTION_1
0x40001fe	            0x415d	                                 pop r13	        60	mv.c	FUNCTION_1
0x4000200	            0x415e	                                 pop r14	        60	mv.c	FUNCTION_1
0x4000202	            0x415f	                                 pop r15	        60	mv.c	FUNCTION_1
0x4000204	              0xc3	                                     ret	        60	mv.c	FUNCTION_1
add_slash	functions,0:CALL,4:SWITCH,0:WHILE,0:ELSE,0:IF,1:FOR,0:DO,0	39
0x4000205	            0x4155	                                push r13	        63	mv.c	FUNCTION_2
0x4000207	            0x4154	                                push r12	        63	mv.c	FUNCTION_2
0x4000209	              0x55	                                push rbp	        63	mv.c	FUNCTION_2
0x400020a	              0x53	                                push rbx	        63	mv.c	FUNCTION_2
0x400020b	        0x4883ec08	                              sub rsp, 8	        63	mv.c	FUNCTION_2
0x400020f	          0x4889fe	                            mov rsi, rdi	        63	mv.c	FUNCTION_2
0x4000212	      0xb800000000	                              mov eax, 0	        64	mv.c	FUNCTION_2	CALL_1
0x4000217	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	        64	mv.c	FUNCTION_2	CALL_1
0x400021e	            0xf2ae	              repne scasb al, byte [rdi]	        64	mv.c	FUNCTION_2	CALL_1
0x4000220	          0x4889cb	                            mov rbx, rcx	        64	mv.c	FUNCTION_2	CALL_1
0x4000223	          0x48f7d3	                                 not rbx	        64	mv.c	FUNCTION_2	CALL_1
0x4000226	        0x4c8d6bff	                      lea r13, [rbx - 1]	        64	mv.c	FUNCTION_2	CALL_1
0x400022a	    0x42807c2eff2f	         cmp byte [rsi + r13 - 1], 0x2f 	        65	mv.c	FUNCTION_2	IF_1
0x4000230	            0x7445	                            je 0x4000277	        65	mv.c	FUNCTION_2	IF_1
0x4000232	          0x4989f4	                            mov r12, rsi	        65	mv.c	FUNCTION_2	IF_1
0x4000235	        0x4983fdfd	             cmp r13, 0xfffffffffffffffd	       785	git-compat-util.h	FUNCTION_19	IF_1
0x4000239	            0x7612	                           jbe 0x400024d	       785	git-compat-util.h	FUNCTION_19	IF_1
0x400023b	      0xba02000000	                              mov edx, 2	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_1
0x4000240	          0x4c89ee	                            mov rsi, r13	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_1
0x4000243	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_1
0x4000248	      0xe800000000	                          call 0x400024d	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_1
0x400024d	        0x498d7d02	                      lea rdi, [r13 + 2]	        66	mv.c	FUNCTION_2	IF_1	CALL_3
0x4000251	      0xe800000000	                          call 0x4000256	        66	mv.c	FUNCTION_2	IF_1	CALL_3
0x4000256	          0x4889c5	                            mov rbp, rax	        66	mv.c	FUNCTION_2	IF_1	CALL_3
0x4000259	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_54	CALL_3
0x400025c	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_54	CALL_3
0x400025f	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_54	CALL_3
0x4000262	      0xe800000000	                          call 0x4000267	        53	string3.h	FUNCTION_54	CALL_3
0x4000267	      0xc6441dff2f	         mov byte [rbp + rbx - 1], 0x2f 	        68	mv.c	FUNCTION_2	IF_1
0x400026c	    0x42c6442d0100	            mov byte [rbp + r13 + 1], 0 	        69	mv.c	FUNCTION_2	IF_1
0x4000272	          0x4889e8	                            mov rax, rbp	        70	mv.c	FUNCTION_2	IF_1
0x4000275	            0xeb03	                           jmp 0x400027a	        70	mv.c	FUNCTION_2	IF_1
0x4000277	          0x4889f0	                            mov rax, rsi	        72	mv.c	FUNCTION_2
0x400027a	        0x4883c408	                              add rsp, 8	        73	mv.c	FUNCTION_2
0x400027e	              0x5b	                                 pop rbx	        73	mv.c	FUNCTION_2
0x400027f	              0x5d	                                 pop rbp	        73	mv.c	FUNCTION_2
0x4000280	            0x415c	                                 pop r12	        73	mv.c	FUNCTION_2
0x4000282	            0x415d	                                 pop r13	        73	mv.c	FUNCTION_2
0x4000284	              0xc3	                                     ret	        73	mv.c	FUNCTION_2
