get_protocol_version_config	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,2:ELSE,0:CALL,3:functions,0	27
0x400007f	              0x53	                                push rbx	        18	protocol.c	ELSE_3	FUNCTION_2
0x4000080	        0x4883ec10	                           sub rsp, 0x10	        18	protocol.c	ELSE_3	FUNCTION_2
0x4000084	    0x64488b042528	                mov rax, qword fs:[0x28]	        18	protocol.c	ELSE_3	FUNCTION_2
0x400008d	      0x4889442408	                mov qword [rsp + 8], rax	        18	protocol.c	ELSE_3	FUNCTION_2
0x4000092	            0x31c0	                            xor eax, eax	        18	protocol.c	ELSE_3	FUNCTION_2
0x4000094	          0x4889e6	                            mov rsi, rsp	        20	protocol.c	ELSE_3	FUNCTION_2	IF_1	CALL_1
0x4000097	      0xbf00000000	                              mov edi, 0	        20	protocol.c	ELSE_3	FUNCTION_2	IF_1	CALL_1
0x400009c	      0xe800000000	                          call 0x40000a1	        20	protocol.c	ELSE_3	FUNCTION_2	IF_1	CALL_1
0x40000a1	            0x85c0	                           test eax, eax	        20	protocol.c	ELSE_3	FUNCTION_2	IF_1	CALL_1
0x40000a3	            0x7523	                           jne 0x40000c8	        20	protocol.c	ELSE_3	FUNCTION_2	IF_1	CALL_1
0x40000a5	        0x488b1c24	                    mov rbx, qword [rsp]	        21	protocol.c	ELSE_3	FUNCTION_2	IF_1	CALL_2
0x40000a9	          0x4889df	                            mov rdi, rbx	        21	protocol.c	ELSE_3	FUNCTION_2	IF_1	CALL_2
0x40000ac	      0xe88fffffff	         call sym.parse_protocol_version	        21	protocol.c	ELSE_3	FUNCTION_2	IF_1	CALL_2
0x40000b1	          0x83f8ff	             cmp eax, 0xffffffffffffffff	        23	protocol.c	ELSE_3	FUNCTION_2	IF_1	IF_2
0x40000b4	            0x7517	                           jne 0x40000cd	        23	protocol.c	ELSE_3	FUNCTION_2	IF_1	IF_2
0x40000b6	          0x4889de	                            mov rsi, rbx	        24	protocol.c	ELSE_3	FUNCTION_2	IF_1	IF_2	CALL_3
0x40000b9	      0xbf00000000	                              mov edi, 0	        24	protocol.c	ELSE_3	FUNCTION_2	IF_1	IF_2	CALL_3
0x40000be	      0xb800000000	                              mov eax, 0	        24	protocol.c	ELSE_3	FUNCTION_2	IF_1	IF_2	CALL_3
0x40000c3	      0xe800000000	                          call 0x40000c8	        24	protocol.c	ELSE_3	FUNCTION_2	IF_1	IF_2	CALL_3
0x40000c8	      0xb800000000	                              mov eax, 0	        30	protocol.c	ELSE_3	FUNCTION_2
0x40000cd	      0x488b542408	                mov rdx, qword [rsp + 8]	        31	protocol.c	ELSE_3	FUNCTION_2
0x40000d2	    0x644833142528	                xor rdx, qword fs:[0x28]	        31	protocol.c	ELSE_3	FUNCTION_2
0x40000db	            0x7405	                            je 0x40000e2	        31	protocol.c	ELSE_3	FUNCTION_2
0x40000dd	      0xe800000000	                          call 0x40000e2	        31	protocol.c	ELSE_3	FUNCTION_2
0x40000e2	        0x4883c410	                           add rsp, 0x10	        31	protocol.c	ELSE_3	FUNCTION_2
0x40000e6	              0x5b	                                 pop rbx	        31	protocol.c	ELSE_3	FUNCTION_2
0x40000e7	              0xc3	                                     ret	        31	protocol.c	ELSE_3	FUNCTION_2
determine_protocol_version_client	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,3:ELSE,0:CALL,4:functions,0	24
0x40001dd	      0xb800000000	                              mov eax, 0	        68	protocol.c	FUNCTION_4
0x40001e2	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_11	DO_1	IF_1
0x40001e5	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_11	DO_1	IF_1
0x40001e7	            0x7430	                            je 0x4000219	       484	git-compat-util.h	FUNCTION_11	DO_1	IF_1
0x40001e9	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_11	DO_1
0x40001ed	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_11	DO_1
0x40001f1	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_11	DO_1
0x40001f4	            0x74ec	                            je 0x40001e2	       488	git-compat-util.h	FUNCTION_11	DO_1
0x40001f6	      0xb800000000	                              mov eax, 0	        69	protocol.c	FUNCTION_4
0x40001fb	              0xc3	                                     ret	        81	protocol.c	FUNCTION_4
0x40001fc	      0xbf00000000	                              mov edi, 0	        75	protocol.c	FUNCTION_4	IF_1	CALL_3
0x4000201	      0xb800000000	                              mov eax, 0	        75	protocol.c	FUNCTION_4	IF_1	CALL_3
0x4000206	      0xe800000000	                          call 0x400020b	        75	protocol.c	FUNCTION_4	IF_1	CALL_3
0x400020b	            0x85c0	                           test eax, eax	        76	protocol.c	FUNCTION_4	IF_1	IF_3
0x400020d	            0x751a	                           jne 0x4000229	        76	protocol.c	FUNCTION_4	IF_1	IF_3
0x400020f	      0xbf00000000	                              mov edi, 0	        77	protocol.c	FUNCTION_4	IF_1	CALL_4
0x4000214	      0xe800000000	                          call 0x4000219	        77	protocol.c	FUNCTION_4	IF_1	CALL_4
0x4000219	        0x4883ec08	                              sub rsp, 8	        68	protocol.c	FUNCTION_4
0x400021d	      0xe81efeffff	         call sym.parse_protocol_version	        72	protocol.c	FUNCTION_4	IF_1	CALL_2
0x4000222	          0x83f8ff	             cmp eax, 0xffffffffffffffff	        74	protocol.c	FUNCTION_4	IF_1	IF_2
0x4000225	            0x75e4	                           jne 0x400020b	        74	protocol.c	FUNCTION_4	IF_1	IF_2
0x4000227	            0xebd3	                           jmp 0x40001fc	        74	protocol.c	FUNCTION_4	IF_1	IF_2
0x4000229	        0x4883c408	                              add rsp, 8	        81	protocol.c	FUNCTION_4
0x400022d	              0xc3	                                     ret	        81	protocol.c	FUNCTION_4
determine_protocol_version_server	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,1:ELSE,0:CALL,3:functions,1	65
0x40000e8	            0x4154	                                push r12	        34	protocol.c	FUNCTION_3
0x40000ea	              0x55	                                push rbp	        34	protocol.c	FUNCTION_3
0x40000eb	              0x53	                                push rbx	        34	protocol.c	FUNCTION_3
0x40000ec	        0x4883ec30	                           sub rsp, 0x30	        34	protocol.c	FUNCTION_3
0x40000f0	    0x64488b042528	                mov rax, qword fs:[0x28]	        34	protocol.c	FUNCTION_3
0x40000f9	      0x4889442428	             mov qword [rsp + 0x28], rax	        34	protocol.c	FUNCTION_3
0x40000fe	            0x31c0	                            xor eax, eax	        34	protocol.c	FUNCTION_3
0x4000100	      0xbf00000000	                              mov edi, 0	        35	protocol.c	FUNCTION_3	CALL_1
0x4000105	      0xe800000000	                          call 0x400010a	        35	protocol.c	FUNCTION_3	CALL_1
0x400010a	      0xbd00000000	                              mov ebp, 0	        36	protocol.c	FUNCTION_3
0x400010f	          0x4885c0	                           test rax, rax	        45	protocol.c	FUNCTION_3	IF_1
0x4000112	     0xf8497000000	                            je 0x40001af	        45	protocol.c	FUNCTION_3	IF_1
0x4000118	    0x48c704240000	                      mov qword [rsp], 0	        46	protocol.c	FUNCTION_3	IF_1
0x4000120	    0xc74424080000	                  mov dword [rsp + 8], 0	        46	protocol.c	FUNCTION_3	IF_1
0x4000128	    0xc744240c0000	                mov dword [rsp + 0xc], 0	        46	protocol.c	FUNCTION_3	IF_1
0x4000130	      0x804c241001	                 or byte [rsp + 0x10], 1	        46	protocol.c	FUNCTION_3	IF_1
0x4000135	    0x48c744241800	               mov qword [rsp + 0x18], 0	        46	protocol.c	FUNCTION_3	IF_1
0x400013e	      0xb9ffffffff	                     mov ecx, 0xffffffff	        48	protocol.c	FUNCTION_3	IF_1	CALL_2
0x4000143	      0xba3a000000	                           mov edx, 0x3a	        48	protocol.c	FUNCTION_3	IF_1	CALL_2
0x4000148	          0x4889c6	                            mov rsi, rax	        48	protocol.c	FUNCTION_3	IF_1	CALL_2
0x400014b	          0x4889e7	                            mov rdi, rsp	        48	protocol.c	FUNCTION_3	IF_1	CALL_2
0x400014e	      0xe800000000	                          call 0x4000153	        48	protocol.c	FUNCTION_3	IF_1	CALL_2
0x4000153	        0x488b1c24	                    mov rbx, qword [rsp]	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x4000157	          0x4885db	                           test rbx, rbx	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x400015a	            0x743a	                            je 0x4000196	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x400015c	      0x448b642408	               mov r12d, dword [rsp + 8]	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x4000161	        0x49c1e404	                              shl r12, 4	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x4000165	          0x4901dc	                            add r12, rbx	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x4000168	          0x4c39e3	                            cmp rbx, r12	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x400016b	            0x7330	                           jae 0x400019d	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x400016d	          0x488b3b	                    mov rdi, qword [rbx]	        54	protocol.c	FUNCTION_3	FUNCTION_1	CALL_1
0x4000170	      0xb800000000	                              mov eax, 0	        54	protocol.c	FUNCTION_3	FUNCTION_1	CALL_1
0x4000175	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_11	DO_1	IF_1
0x4000178	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_11	DO_1	IF_1
0x400017a	            0x7447	                            je 0x40001c3	       484	git-compat-util.h	FUNCTION_11	DO_1	IF_1
0x400017c	        0x4883c701	                              add rdi, 1	       488	git-compat-util.h	FUNCTION_11	DO_1
0x4000180	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_11	DO_1
0x4000184	          0x3a57ff	                  cmp dl, byte [rdi - 1]	       488	git-compat-util.h	FUNCTION_11	DO_1
0x4000187	            0x74ec	                            je 0x4000175	       488	git-compat-util.h	FUNCTION_11	DO_1
0x4000189	        0x4883c310	                           add rbx, 0x10	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x400018d	            0x7413	                            je 0x40001a2	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x400018f	          0x4c39e3	                            cmp rbx, r12	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x4000192	            0x72d9	                            jb 0x400016d	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x4000194	            0xeb0c	                           jmp 0x40001a2	        50	protocol.c	FUNCTION_3	IF_1	FUNCTION_1
0x4000196	      0xbd00000000	                              mov ebp, 0	        36	protocol.c	FUNCTION_3
0x400019b	            0xeb05	                           jmp 0x40001a2	        36	protocol.c	FUNCTION_3
0x400019d	      0xbd00000000	                              mov ebp, 0	        36	protocol.c	FUNCTION_3
0x40001a2	      0xbe00000000	                              mov esi, 0	        61	protocol.c	FUNCTION_3	IF_1	CALL_3
0x40001a7	          0x4889e7	                            mov rdi, rsp	        61	protocol.c	FUNCTION_3	IF_1	CALL_3
0x40001aa	      0xe800000000	                          call 0x40001af	        61	protocol.c	FUNCTION_3	IF_1	CALL_3
0x40001af	            0x89e8	                            mov eax, ebp	        65	protocol.c	FUNCTION_3
0x40001b1	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	        65	protocol.c	FUNCTION_3
0x40001b6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        65	protocol.c	FUNCTION_3
0x40001bf	            0x7413	                            je 0x40001d4	        65	protocol.c	FUNCTION_3
0x40001c1	            0xeb0c	                           jmp 0x40001cf	        65	protocol.c	FUNCTION_3
0x40001c3	      0xe878feffff	         call sym.parse_protocol_version	        55	protocol.c	FUNCTION_3	FUNCTION_1	CALL_2
0x40001c8	            0x39c5	                            cmp ebp, eax	        55	protocol.c	FUNCTION_3	FUNCTION_1	CALL_2
0x40001ca	           0xf4ce8	                          cmovl ebp, eax	        55	protocol.c	FUNCTION_3	FUNCTION_1	CALL_2
0x40001cd	            0xebba	                           jmp 0x4000189	        55	protocol.c	FUNCTION_3	FUNCTION_1	CALL_2
0x40001cf	      0xe800000000	                          call 0x40001d4	        65	protocol.c	FUNCTION_3
0x40001d4	        0x4883c430	                           add rsp, 0x30	        65	protocol.c	FUNCTION_3
0x40001d8	              0x5b	                                 pop rbx	        65	protocol.c	FUNCTION_3
0x40001d9	              0x5d	                                 pop rbp	        65	protocol.c	FUNCTION_3
0x40001da	            0x415c	                                 pop r12	        65	protocol.c	FUNCTION_3
0x40001dc	              0xc3	                                     ret	        65	protocol.c	FUNCTION_3
parse_protocol_version	DO,0:WHILE,0:FOR,0:SWITCH,0:IF,3:ELSE,3:CALL,3:functions,0	23
0x4000040	           0xfb617	                   movzx edx, byte [rdi]	         7	protocol.c	FUNCTION_1	IF_1	CALL_1
0x4000043	          0x83fa30	                           cmp edx, 0x30	         7	protocol.c	FUNCTION_1	IF_1	CALL_1
0x4000046	            0x750d	                           jne 0x4000055	         7	protocol.c	FUNCTION_1	IF_1	CALL_1
0x4000048	        0x807f0100	                   cmp byte [rdi + 1], 0	         7	protocol.c	FUNCTION_1	IF_1	CALL_1
0x400004c	           0xf95c0	                                setne al	         7	protocol.c	FUNCTION_1	IF_1	CALL_1
0x400004f	           0xfb6c0	                           movzx eax, al	         7	protocol.c	FUNCTION_1	IF_1	CALL_1
0x4000052	            0xf7d8	                                 neg eax	         7	protocol.c	FUNCTION_1	IF_1	CALL_1
0x4000054	              0xc3	                                     ret	         7	protocol.c	FUNCTION_1	IF_1	CALL_1
0x4000055	          0x83fa31	                           cmp edx, 0x31	         9	protocol.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x4000058	            0x750d	                           jne 0x4000067	         9	protocol.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x400005a	        0x807f0101	                   cmp byte [rdi + 1], 1	        10	protocol.c	FUNCTION_1	ELSE_1	IF_2
0x400005e	            0x19c0	                            sbb eax, eax	        10	protocol.c	FUNCTION_1	ELSE_1	IF_2
0x4000060	          0x83e002	                              and eax, 2	        10	protocol.c	FUNCTION_1	ELSE_1	IF_2
0x4000063	          0x83e801	                              sub eax, 1	        10	protocol.c	FUNCTION_1	ELSE_1	IF_2
0x4000066	              0xc3	                                     ret	        10	protocol.c	FUNCTION_1	ELSE_1	IF_2
0x4000067	      0xb8ffffffff	                     mov eax, 0xffffffff	        14	protocol.c	FUNCTION_1	ELSE_3
0x400006c	          0x83fa32	                           cmp edx, 0x32	        11	protocol.c	FUNCTION_1	ELSE_2	IF_3	CALL_3
0x400006f	            0x750c	                           jne 0x400007d	        11	protocol.c	FUNCTION_1	ELSE_2	IF_3	CALL_3
0x4000071	        0x807f0101	                   cmp byte [rdi + 1], 1	        14	protocol.c	FUNCTION_1	ELSE_3
0x4000075	            0x19c0	                            sbb eax, eax	        14	protocol.c	FUNCTION_1	ELSE_3
0x4000077	          0x83e003	                              and eax, 3	        14	protocol.c	FUNCTION_1	ELSE_3
0x400007a	          0x83e801	                              sub eax, 1	        14	protocol.c	FUNCTION_1	ELSE_3
0x400007d	            0xf3c3	                                     ret	        15	protocol.c	FUNCTION_1	ELSE_3
