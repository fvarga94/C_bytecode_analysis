prefix_path	CALL,3:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,1:ELSE,0:functions,0	17
0x40004c6	              0x53	                                push rbx	       120	setup.c	FUNCTION_3
0x40004c7	          0x4889d3	                            mov rbx, rdx	       120	setup.c	FUNCTION_3
0x40004ca	          0x4889d1	                            mov rcx, rdx	       121	setup.c	FUNCTION_3	CALL_1
0x40004cd	      0xba00000000	                              mov edx, 0	       121	setup.c	FUNCTION_3	CALL_1
0x40004d2	      0xe800000000	                          call 0x40004d7	       121	setup.c	FUNCTION_3	CALL_1
0x40004d7	          0x4885c0	                           test rax, rax	       122	setup.c	FUNCTION_3	IF_1
0x40004da	            0x7524	                           jne 0x4000500	       122	setup.c	FUNCTION_3	IF_1
0x40004dc	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x40004e1	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x40004e6	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x40004eb	      0xe800000000	                          call 0x40004f0	        54	gettext.h	FUNCTION_67
0x40004f0	          0x4889de	                            mov rsi, rbx	       123	setup.c	FUNCTION_3	CALL_3
0x40004f3	          0x4889c7	                            mov rdi, rax	       123	setup.c	FUNCTION_3	CALL_3
0x40004f6	      0xb800000000	                              mov eax, 0	       123	setup.c	FUNCTION_3	CALL_3
0x40004fb	      0xe800000000	                          call 0x4000500	       123	setup.c	FUNCTION_3	CALL_3
0x4000500	              0x5b	                                 pop rbx	       125	setup.c	FUNCTION_3
0x4000501	              0xc3	                                     ret	       125	setup.c	FUNCTION_3
path_inside_repo	CALL,3:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,1:ELSE,0:functions,0	24
0x4000502	        0x4883ec08	                              sub rsp, 8	       128	setup.c	FUNCTION_4
0x4000506	          0x4989f8	                             mov r8, rdi	       128	setup.c	FUNCTION_4
0x4000509	          0x4889f2	                            mov rdx, rsi	       128	setup.c	FUNCTION_4
0x400050c	          0x4885ff	                           test rdi, rdi	       129	setup.c	FUNCTION_4	CALL_1
0x400050f	            0x7416	                            je 0x4000527	       129	setup.c	FUNCTION_4	CALL_1
0x4000511	      0xb800000000	                              mov eax, 0	       129	setup.c	FUNCTION_4	CALL_1
0x4000516	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       129	setup.c	FUNCTION_4	CALL_1
0x400051d	            0xf2ae	              repne scasb al, byte [rdi]	       129	setup.c	FUNCTION_4	CALL_1
0x400051f	          0x48f7d1	                                 not rcx	       129	setup.c	FUNCTION_4	CALL_1
0x4000522	          0x8d71ff	                      lea esi, [rcx - 1]	       129	setup.c	FUNCTION_4	CALL_1
0x4000525	            0xeb05	                           jmp 0x400052c	       129	setup.c	FUNCTION_4	CALL_1
0x4000527	      0xbe00000000	                              mov esi, 0	       129	setup.c	FUNCTION_4	CALL_1
0x400052c	          0x4889d1	                            mov rcx, rdx	       130	setup.c	FUNCTION_4	CALL_2
0x400052f	      0xba00000000	                              mov edx, 0	       130	setup.c	FUNCTION_4	CALL_2
0x4000534	          0x4c89c7	                             mov rdi, r8	       130	setup.c	FUNCTION_4	CALL_2
0x4000537	      0xe800000000	                          call 0x400053c	       130	setup.c	FUNCTION_4	CALL_2
0x400053c	          0x4889c7	                            mov rdi, rax	       130	setup.c	FUNCTION_4	CALL_2
0x400053f	      0xb800000000	                              mov eax, 0	       135	setup.c	FUNCTION_4
0x4000544	          0x4885ff	                           test rdi, rdi	       131	setup.c	FUNCTION_4	IF_1
0x4000547	            0x740a	                            je 0x4000553	       131	setup.c	FUNCTION_4	IF_1
0x4000549	      0xe800000000	                          call 0x400054e	       132	setup.c	FUNCTION_4	IF_1	CALL_3
0x400054e	      0xb801000000	                              mov eax, 1	       133	setup.c	FUNCTION_4	IF_1
0x4000553	        0x4883c408	                              add rsp, 8	       136	setup.c	FUNCTION_4
0x4000557	              0xc3	                                     ret	       136	setup.c	FUNCTION_4
check_repo_format	CALL,15:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,9:ELSE,6:functions,0	125
0x4000040	              0x55	                                push rbp	       406	setup.c	FUNCTION_17
0x4000041	              0x53	                                push rbx	       406	setup.c	FUNCTION_17
0x4000042	        0x4883ec08	                              sub rsp, 8	       406	setup.c	FUNCTION_17
0x4000046	          0x4989f8	                             mov r8, rdi	       406	setup.c	FUNCTION_17
0x4000049	          0x4989f1	                             mov r9, rsi	       406	setup.c	FUNCTION_17
0x400004c	          0x4889d5	                            mov rbp, rdx	       406	setup.c	FUNCTION_17
0x400004f	      0xbf00000000	                              mov edi, 0	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x4000054	      0xb91d000000	                           mov ecx, 0x1d	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x4000059	          0x4c89c6	                             mov rsi, r8	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x400005c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x400005e	           0xf97c3	                                 seta bl	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x4000061	           0xf92c0	                                 setb al	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x4000064	            0x29c3	                            sub ebx, eax	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x4000066	           0xfbedb	                           movsx ebx, bl	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x4000069	          0x4c89c2	                             mov rdx, r8	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x400006c	      0xb800000000	                              mov eax, 0	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x4000071	            0x85db	                           test ebx, ebx	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x4000073	            0x7513	                           jne 0x4000088	       410	setup.c	FUNCTION_17	IF_1	CALL_1
0x4000075	          0x4c89ce	                             mov rsi, r9	       411	setup.c	FUNCTION_17	CALL_2
0x4000078	          0x4c89c7	                             mov rdi, r8	       411	setup.c	FUNCTION_17	CALL_2
0x400007b	      0xe800000000	                          call 0x4000080	       411	setup.c	FUNCTION_17	CALL_2
0x4000080	          0x894500	                    mov dword [rbp], eax	       411	setup.c	FUNCTION_17	CALL_2
0x4000083	      0xe94f010000	                           jmp 0x40001d7	       411	setup.c	FUNCTION_17	CALL_2
0x4000088	           0xfb608	                   movzx ecx, byte [rax]	       484	git-compat-util.h	FUNCTION_44	DO_1	IF_1
0x400008b	            0x84c9	                             test cl, cl	       484	git-compat-util.h	FUNCTION_44	DO_1	IF_1
0x400008d	     0xf84f9000000	                            je 0x400018c	       484	git-compat-util.h	FUNCTION_44	DO_1	IF_1
0x4000093	        0x4883c201	                              add rdx, 1	       488	git-compat-util.h	FUNCTION_44	DO_1
0x4000097	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_44	DO_1
0x400009b	          0x3a4aff	                  cmp cl, byte [rdx - 1]	       488	git-compat-util.h	FUNCTION_44	DO_1
0x400009e	            0x74e8	                            je 0x4000088	       488	git-compat-util.h	FUNCTION_44	DO_1
0x40000a0	      0xe90b010000	                           jmp 0x40001b0	       488	git-compat-util.h	FUNCTION_44	DO_1
0x40000a5	      0xbf00000000	                              mov edi, 0	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x40000aa	      0xb910000000	                           mov ecx, 0x10	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x40000af	          0x4889d6	                            mov rsi, rdx	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x40000b2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x40000b4	           0xf97c3	                                 seta bl	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x40000b7	           0xf92c0	                                 setb al	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x40000ba	            0x29c3	                            sub ebx, eax	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x40000bc	           0xfbedb	                           movsx ebx, bl	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x40000bf	            0x85db	                           test ebx, ebx	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x40000c1	            0x7513	                           jne 0x40000d6	       420	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4	CALL_5
0x40000c3	          0x4c89ce	                             mov rsi, r9	       421	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4
0x40000c6	          0x4c89c7	                             mov rdi, r8	       421	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4
0x40000c9	      0xe800000000	                          call 0x40000ce	       421	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4
0x40000ce	          0x894504	                mov dword [rbp + 4], eax	       421	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4
0x40000d1	      0xe901010000	                           jmp 0x40001d7	       421	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_2	IF_4
0x40000d6	      0xbf00000000	                              mov edi, 0	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x40000db	      0xb90d000000	                            mov ecx, 0xd	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x40000e0	          0x4889d6	                            mov rsi, rdx	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x40000e3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x40000e5	           0xf97c3	                                 seta bl	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x40000e8	           0xf92c0	                                 setb al	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x40000eb	            0x29c3	                            sub ebx, eax	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x40000ed	           0xfbedb	                           movsx ebx, bl	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x40000f0	            0x85db	                           test ebx, ebx	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x40000f2	            0x7528	                           jne 0x400011c	       422	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_7
0x40000f4	          0x4d85c9	                             test r9, r9	       423	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	IF_6
0x40000f7	            0x7512	                           jne 0x400010b	       423	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	IF_6
0x40000f9	          0x4c89c7	                             mov rdi, r8	       424	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_8
0x40000fc	      0xe800000000	                          call 0x4000101	       424	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_8
0x4000101	      0xbbffffffff	                     mov ebx, 0xffffffff	       424	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_8
0x4000106	      0xe9cc000000	                           jmp 0x40001d7	       424	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_8
0x400010b	          0x4c89cf	                             mov rdi, r9	       425	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_9
0x400010e	      0xe800000000	                          call 0x4000113	       425	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_9
0x4000113	        0x48894508	                mov qword [rbp + 8], rax	       425	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_9
0x4000117	      0xe9bb000000	                           jmp 0x40001d7	       425	setup.c	FUNCTION_17	ELSE_1	IF_2	ELSE_3	IF_5	CALL_9
0x400011c	        0x488d7d20	                   lea rdi, [rbp + 0x20]	       427	setup.c	FUNCTION_17	ELSE_1	IF_2	CALL_10
0x4000120	          0x4889d6	                            mov rsi, rdx	       427	setup.c	FUNCTION_17	ELSE_1	IF_2	CALL_10
0x4000123	      0xe800000000	                          call 0x4000128	       427	setup.c	FUNCTION_17	ELSE_1	IF_2	CALL_10
0x4000128	      0xbb00000000	                              mov ebx, 0	       435	setup.c	FUNCTION_17
0x400012d	      0xe9a5000000	                           jmp 0x40001d7	       435	setup.c	FUNCTION_17
0x4000132	          0x4c89ce	                             mov rsi, r9	       429	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_12
0x4000135	          0x4c89c7	                             mov rdi, r8	       429	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_12
0x4000138	      0xe800000000	                          call 0x400013d	       429	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_12
0x400013d	          0x894510	            mov dword [rbp + 0x10], eax 	       429	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_12
0x4000140	      0xe992000000	                           jmp 0x40001d7	       429	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_12
0x4000145	      0xbf00000000	                              mov edi, 0	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x400014a	      0xb90e000000	                            mov ecx, 0xe	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x400014f	          0x4c89c6	                             mov rsi, r8	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x4000152	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x4000154	           0xf97c3	                                 seta bl	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x4000157	           0xf92c0	                                 setb al	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x400015a	            0x29c3	                            sub ebx, eax	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x400015c	           0xfbedb	                           movsx ebx, bl	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x400015f	            0x85db	                           test ebx, ebx	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x4000161	            0x7522	                           jne 0x4000185	       430	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_13
0x4000163	          0x4d85c9	                             test r9, r9	       431	setup.c	FUNCTION_17	ELSE_6	IF_8	IF_9
0x4000166	            0x750f	                           jne 0x4000177	       431	setup.c	FUNCTION_17	ELSE_6	IF_8	IF_9
0x4000168	          0x4c89c7	                             mov rdi, r8	       432	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_14
0x400016b	      0xe800000000	                          call 0x4000170	       432	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_14
0x4000170	      0xbbffffffff	                     mov ebx, 0xffffffff	       432	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_14
0x4000175	            0xeb60	                           jmp 0x40001d7	       432	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_14
0x4000177	          0x4c89cf	                             mov rdi, r9	       433	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_15
0x400017a	      0xe800000000	                          call 0x400017f	       433	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_15
0x400017f	        0x48894518	            mov qword [rbp + 0x18], rax 	       433	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_15
0x4000183	            0xeb52	                           jmp 0x40001d7	       433	setup.c	FUNCTION_17	ELSE_6	IF_8	CALL_15
0x4000185	      0xbb00000000	                              mov ebx, 0	       435	setup.c	FUNCTION_17
0x400018a	            0xeb4b	                           jmp 0x40001d7	       435	setup.c	FUNCTION_17
0x400018c	      0xbf00000000	                              mov edi, 0	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x4000191	      0xb905000000	                              mov ecx, 5	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x4000196	          0x4889d6	                            mov rsi, rdx	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x4000199	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x400019b	           0xf97c3	                                 seta bl	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x400019e	           0xf92c0	                                 setb al	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x40001a1	            0x29c3	                            sub ebx, eax	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x40001a3	           0xfbedb	                           movsx ebx, bl	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x40001a6	            0x85db	                           test ebx, ebx	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x40001a8	     0xf85f7feffff	                           jne 0x40000a5	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x40001ae	            0xeb27	                           jmp 0x40001d7	       418	setup.c	FUNCTION_17	ELSE_1	IF_2	IF_3	CALL_4
0x40001b0	      0xbf00000000	                              mov edi, 0	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x40001b5	      0xb90a000000	                            mov ecx, 0xa	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x40001ba	          0x4c89c6	                             mov rsi, r8	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x40001bd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x40001bf	           0xf97c3	                                 seta bl	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x40001c2	           0xf92c0	                                 setb al	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x40001c5	            0x29c3	                            sub ebx, eax	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x40001c7	           0xfbedb	                           movsx ebx, bl	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x40001ca	            0x85db	                           test ebx, ebx	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x40001cc	     0xf8573ffffff	                           jne 0x4000145	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x40001d2	      0xe95bffffff	                           jmp 0x4000132	       428	setup.c	FUNCTION_17	ELSE_5	IF_7	CALL_11
0x40001d7	            0x89d8	                            mov eax, ebx	       436	setup.c	FUNCTION_17
0x40001d9	        0x4883c408	                              add rsp, 8	       436	setup.c	FUNCTION_17
0x40001dd	              0x5b	                                 pop rbx	       436	setup.c	FUNCTION_17
0x40001de	              0x5d	                                 pop rbp	       436	setup.c	FUNCTION_17
0x40001df	              0xc3	                                     ret	       436	setup.c	FUNCTION_17
get_common_dir_noenv	CALL,12:WHILE,1:FOR,0:SWITCH,0:DO,0:IF,3:ELSE,1:functions,0	115
0x4000770	              0x55	                                push rbp	       270	setup.c	FUNCTION_11
0x4000771	              0x53	                                push rbx	       270	setup.c	FUNCTION_11
0x4000772	        0x4883ec48	                           sub rsp, 0x48	       270	setup.c	FUNCTION_11
0x4000776	          0x4889fd	                            mov rbp, rdi	       270	setup.c	FUNCTION_11
0x4000779	          0x4889f3	                            mov rbx, rsi	       270	setup.c	FUNCTION_11
0x400077c	    0x64488b042528	                mov rax, qword fs:[0x28]	       270	setup.c	FUNCTION_11
0x4000785	      0x4889442438	             mov qword [rsp + 0x38], rax	       270	setup.c	FUNCTION_11
0x400078a	            0x31c0	                            xor eax, eax	       270	setup.c	FUNCTION_11
0x400078c	    0x48c704240000	                      mov qword [rsp], 0	       271	setup.c	FUNCTION_11
0x4000794	    0x48c744240800	                  mov qword [rsp + 8], 0	       271	setup.c	FUNCTION_11
0x400079d	    0x48c744241000	               mov qword [rsp + 0x10], 0	       271	setup.c	FUNCTION_11
0x40007a6	    0x48c744242000	               mov qword [rsp + 0x20], 0	       272	setup.c	FUNCTION_11
0x40007af	    0x48c744242800	               mov qword [rsp + 0x28], 0	       272	setup.c	FUNCTION_11
0x40007b8	    0x48c744243000	               mov qword [rsp + 0x30], 0	       272	setup.c	FUNCTION_11
0x40007c1	          0x4889f2	                            mov rdx, rsi	       275	setup.c	FUNCTION_11	CALL_1
0x40007c4	      0xbe00000000	                              mov esi, 0	       275	setup.c	FUNCTION_11	CALL_1
0x40007c9	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       275	setup.c	FUNCTION_11	CALL_1
0x40007ce	      0xe800000000	                          call 0x40007d3	       275	setup.c	FUNCTION_11	CALL_1
0x40007d3	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       276	setup.c	FUNCTION_11	IF_1	CALL_2
0x40007d8	      0xe800000000	                          call 0x40007dd	       276	setup.c	FUNCTION_11	IF_1	CALL_2
0x40007dd	            0x85c0	                           test eax, eax	       276	setup.c	FUNCTION_11	IF_1	CALL_2
0x40007df	     0xf8416010000	                            je 0x40008fb	       276	setup.c	FUNCTION_11	IF_1	CALL_2
0x40007e5	      0xba00000000	                              mov edx, 0	       277	setup.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x40007ea	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       277	setup.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x40007ef	          0x4889e7	                            mov rdi, rsp	       277	setup.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x40007f2	      0xe800000000	                          call 0x40007f7	       277	setup.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x40007f7	          0x4885c0	                           test rax, rax	       277	setup.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x40007fa	            0x7e24	                           jle 0x4000820	       277	setup.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x40007fc	      0x488b542408	                mov rdx, qword [rsp + 8]	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000801	          0x4885d2	                           test rdx, rdx	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000804	            0x746d	                            je 0x4000873	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000806	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400080b	        0x488d42ff	                      lea rax, [rdx - 1]	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400080f	       0xfb64c16ff	         movzx ecx, byte [rsi + rdx - 1]	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000814	          0x80f90a	                             cmp cl, 0xa	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000817	            0x7433	                            je 0x400084c	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000819	          0x80f90d	                             cmp cl, 0xd	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400081c	            0x742e	                            je 0x400084c	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400081e	            0xeb53	                           jmp 0x4000873	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000820	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	       278	setup.c	FUNCTION_11	IF_1	CALL_5
0x4000825	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x400082a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x400082f	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x4000834	      0xe800000000	                          call 0x4000839	        54	gettext.h	FUNCTION_67
0x4000839	          0x4889de	                            mov rsi, rbx	       278	setup.c	FUNCTION_11	IF_1	CALL_5
0x400083c	          0x4889c7	                            mov rdi, rax	       278	setup.c	FUNCTION_11	IF_1	CALL_5
0x400083f	      0xb800000000	                              mov eax, 0	       278	setup.c	FUNCTION_11	IF_1	CALL_5
0x4000844	      0xe800000000	                          call 0x4000849	       278	setup.c	FUNCTION_11	IF_1	CALL_5
0x4000849	          0x4889c8	                            mov rax, rcx	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400084c	      0x4889442408	                mov qword [rsp + 8], rax	       281	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000851	          0x4885c0	                           test rax, rax	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000854	            0x7418	                            je 0x400086e	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000856	        0x488d48ff	                      lea rcx, [rax - 1]	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400085a	       0xfb65406ff	         movzx edx, byte [rsi + rax - 1]	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400085f	          0x80fa0a	                             cmp dl, 0xa	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000862	            0x74e5	                            je 0x4000849	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000864	          0x80fa0d	                             cmp dl, 0xd	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000867	            0x74e0	                            je 0x4000849	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000869	          0x4889c2	                            mov rdx, rax	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400086c	            0xeb05	                           jmp 0x4000873	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x400086e	      0xba00000000	                              mov edx, 0	       279	setup.c	FUNCTION_11	IF_1	WHILE_1
0x4000873	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       282	setup.c	FUNCTION_11	IF_1
0x4000878	        0xc6041000	                 mov byte [rax + rdx], 0	       282	setup.c	FUNCTION_11	IF_1
0x400087c	    0x48c744242800	               mov qword [rsp + 0x28], 0	       164	strbuf.h	FUNCTION_71
0x4000885	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       165	strbuf.h	FUNCTION_71	IF_2
0x400088a	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_71	IF_2
0x4000890	            0x7405	                            je 0x4000897	       165	strbuf.h	FUNCTION_71	IF_2
0x4000892	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_71	IF_2
0x4000895	            0xeb22	                           jmp 0x40008b9	       166	strbuf.h	FUNCTION_71	IF_2
0x4000897	    0x803d00000000	                cmp byte [0x0400089e], 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x400089e	            0x7419	                            je 0x40008b9	       168	strbuf.h	FUNCTION_71	CALL_2
0x40008a0	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x40008a5	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_71	CALL_2
0x40008aa	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x40008af	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x40008b4	      0xe800000000	                          call 0x40008b9	       168	strbuf.h	FUNCTION_71	CALL_2
0x40008b9	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1154	cache.h	FUNCTION_100
0x40008be	          0x80382f	                    cmp byte [rax], 0x2f	       284	setup.c	FUNCTION_11	IF_1	IF_3	CALL_6
0x40008c1	            0x7417	                            je 0x40008da	       284	setup.c	FUNCTION_11	IF_1	IF_3	CALL_6
0x40008c3	          0x4889da	                            mov rdx, rbx	       285	setup.c	FUNCTION_11	IF_1	CALL_7
0x40008c6	      0xbe00000000	                              mov esi, 0	       285	setup.c	FUNCTION_11	IF_1	CALL_7
0x40008cb	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       285	setup.c	FUNCTION_11	IF_1	CALL_7
0x40008d0	      0xb800000000	                              mov eax, 0	       285	setup.c	FUNCTION_11	IF_1	CALL_7
0x40008d5	      0xe800000000	                          call 0x40008da	       285	setup.c	FUNCTION_11	IF_1	CALL_7
0x40008da	          0x4889e6	                            mov rsi, rsp	       286	setup.c	FUNCTION_11	IF_1	CALL_8
0x40008dd	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       286	setup.c	FUNCTION_11	IF_1	CALL_8
0x40008e2	      0xe800000000	                          call 0x40008e7	       286	setup.c	FUNCTION_11	IF_1	CALL_8
0x40008e7	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       287	setup.c	FUNCTION_11	IF_1	CALL_9
0x40008ec	          0x4889ef	                            mov rdi, rbp	       287	setup.c	FUNCTION_11	IF_1	CALL_9
0x40008ef	      0xe800000000	                          call 0x40008f4	       287	setup.c	FUNCTION_11	IF_1	CALL_9
0x40008f4	      0xbb01000000	                              mov ebx, 1	       288	setup.c	FUNCTION_11	IF_1
0x40008f9	            0xeb28	                           jmp 0x4000923	       288	setup.c	FUNCTION_11	IF_1
0x40008fb	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000900	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000907	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_73	CALL_2
0x400090a	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_73	CALL_2
0x400090c	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_73	CALL_2
0x400090f	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000913	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000916	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000919	      0xe800000000	                          call 0x400091e	       279	strbuf.h	FUNCTION_73	CALL_2
0x400091e	      0xbb00000000	                              mov ebx, 0	       273	setup.c	FUNCTION_11
0x4000923	          0x4889e7	                            mov rdi, rsp	       293	setup.c	FUNCTION_11	CALL_11
0x4000926	      0xe800000000	                          call 0x400092b	       293	setup.c	FUNCTION_11	CALL_11
0x400092b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       294	setup.c	FUNCTION_11	CALL_12
0x4000930	      0xe800000000	                          call 0x4000935	       294	setup.c	FUNCTION_11	CALL_12
0x4000935	            0x89d8	                            mov eax, ebx	       296	setup.c	FUNCTION_11
0x4000937	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	       296	setup.c	FUNCTION_11
0x400093c	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       296	setup.c	FUNCTION_11
0x4000945	            0x7405	                            je 0x400094c	       296	setup.c	FUNCTION_11
0x4000947	      0xe800000000	                          call 0x400094c	       296	setup.c	FUNCTION_11
0x400094c	        0x4883c448	                           add rsp, 0x48	       296	setup.c	FUNCTION_11
0x4000950	              0x5b	                                 pop rbx	       296	setup.c	FUNCTION_11
0x4000951	              0x5d	                                 pop rbp	       296	setup.c	FUNCTION_11
0x4000952	              0xc3	                                     ret	       296	setup.c	FUNCTION_11
setup_work_tree	CALL,7:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,4:ELSE,0:functions,0	37
0x4000cf8	    0x833d00000000	               cmp dword [0x04000cff], 0	       385	setup.c	FUNCTION_16	IF_1
0x4000cff	     0xf8596000000	                           jne 0x4000d9b	       385	setup.c	FUNCTION_16	IF_1
0x4000d05	        0x4883ec08	                              sub rsp, 8	       381	setup.c	FUNCTION_16
0x4000d09	    0x833d00000000	               cmp dword [0x04000d10], 0	       388	setup.c	FUNCTION_16	IF_2
0x4000d10	            0x7421	                            je 0x4000d33	       388	setup.c	FUNCTION_16	IF_2
0x4000d12	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x4000d17	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x4000d1c	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x4000d21	      0xe800000000	                          call 0x4000d26	        54	gettext.h	FUNCTION_67
0x4000d26	          0x4889c7	                            mov rdi, rax	       389	setup.c	FUNCTION_16	CALL_2
0x4000d29	      0xb800000000	                              mov eax, 0	       389	setup.c	FUNCTION_16	CALL_2
0x4000d2e	      0xe800000000	                          call 0x4000d33	       389	setup.c	FUNCTION_16	CALL_2
0x4000d33	      0xe800000000	                          call 0x4000d38	       391	setup.c	FUNCTION_16	CALL_3
0x4000d38	          0x4885c0	                           test rax, rax	       392	setup.c	FUNCTION_16	IF_3	CALL_4
0x4000d3b	            0x740c	                            je 0x4000d49	       392	setup.c	FUNCTION_16	IF_3	CALL_4
0x4000d3d	          0x4889c7	                            mov rdi, rax	       392	setup.c	FUNCTION_16	IF_3	CALL_4
0x4000d40	      0xe800000000	                          call 0x4000d45	       392	setup.c	FUNCTION_16	IF_3	CALL_4
0x4000d45	            0x85c0	                           test eax, eax	       392	setup.c	FUNCTION_16	IF_3	CALL_4
0x4000d47	            0x7421	                            je 0x4000d6a	       392	setup.c	FUNCTION_16	IF_3	CALL_4
0x4000d49	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x4000d4e	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x4000d53	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x4000d58	      0xe800000000	                          call 0x4000d5d	        54	gettext.h	FUNCTION_67
0x4000d5d	          0x4889c7	                            mov rdi, rax	       393	setup.c	FUNCTION_16	CALL_6
0x4000d60	      0xb800000000	                              mov eax, 0	       393	setup.c	FUNCTION_16	CALL_6
0x4000d65	      0xe800000000	                          call 0x4000d6a	       393	setup.c	FUNCTION_16	CALL_6
0x4000d6a	      0xbf00000000	                              mov edi, 0	       399	setup.c	FUNCTION_16	IF_4	CALL_7
0x4000d6f	      0xe800000000	                          call 0x4000d74	       399	setup.c	FUNCTION_16	IF_4	CALL_7
0x4000d74	          0x4885c0	                           test rax, rax	       399	setup.c	FUNCTION_16	IF_4	CALL_7
0x4000d77	            0x7414	                            je 0x4000d8d	       399	setup.c	FUNCTION_16	IF_4	CALL_7
0x4000d79	      0xba01000000	                              mov edx, 1	       400	setup.c	FUNCTION_16	IF_4
0x4000d7e	      0xbe00000000	                              mov esi, 0	       400	setup.c	FUNCTION_16	IF_4
0x4000d83	      0xbf00000000	                              mov edi, 0	       400	setup.c	FUNCTION_16	IF_4
0x4000d88	      0xe800000000	                          call 0x4000d8d	       400	setup.c	FUNCTION_16	IF_4
0x4000d8d	    0xc70500000000	               mov dword [0x04000d97], 1	       402	setup.c	FUNCTION_16
0x4000d97	        0x4883c408	                              add rsp, 8	       403	setup.c	FUNCTION_16
0x4000d9b	            0xf3c3	                                     ret	       403	setup.c	FUNCTION_16
prefix_path_gently	CALL,10:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,6:ELSE,1:functions,0	144
0x40002ec	            0x4156	                                push r14	        92	setup.c	FUNCTION_2
0x40002ee	            0x4155	                                push r13	        92	setup.c	FUNCTION_2
0x40002f0	            0x4154	                                push r12	        92	setup.c	FUNCTION_2
0x40002f2	              0x55	                                push rbp	        92	setup.c	FUNCTION_2
0x40002f3	              0x53	                                push rbx	        92	setup.c	FUNCTION_2
0x40002f4	          0x4889d3	                            mov rbx, rdx	        92	setup.c	FUNCTION_2
0x40002f7	          0x4989cc	                            mov r12, rcx	        92	setup.c	FUNCTION_2
0x40002fa	          0x80392f	                    cmp byte [rcx], 0x2f	        95	setup.c	FUNCTION_2	IF_1	CALL_1
0x40002fd	     0xf8560010000	                           jne 0x4000463	        95	setup.c	FUNCTION_2	IF_1	CALL_1
0x4000303	      0xb800000000	                              mov eax, 0	        96	setup.c	FUNCTION_2	IF_1	CALL_3
0x4000308	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	        96	setup.c	FUNCTION_2	IF_1	CALL_3
0x400030f	          0x4c89e7	                            mov rdi, r12	        96	setup.c	FUNCTION_2	IF_1	CALL_3
0x4000312	            0xf2ae	              repne scasb al, byte [rdi]	        96	setup.c	FUNCTION_2	IF_1	CALL_3
0x4000314	          0x48f7d1	                                 not rcx	        96	setup.c	FUNCTION_2	IF_1	CALL_3
0x4000317	        0x488d79ff	                      lea rdi, [rcx - 1]	        96	setup.c	FUNCTION_2	IF_1	CALL_3
0x400031b	      0xe800000000	                          call 0x4000320	        96	setup.c	FUNCTION_2	IF_1	CALL_3
0x4000320	          0x4889c5	                            mov rbp, rax	        96	setup.c	FUNCTION_2	IF_1	CALL_3
0x4000323	          0x4885db	                           test rbx, rbx	        97	setup.c	FUNCTION_2	IF_1	IF_2
0x4000326	            0x7406	                            je 0x400032e	        97	setup.c	FUNCTION_2	IF_1	IF_2
0x4000328	    0xc70300000000	                      mov dword [rbx], 0	        98	setup.c	FUNCTION_2	IF_1	IF_2
0x400032e	          0x4889da	                            mov rdx, rbx	        99	setup.c	FUNCTION_2	IF_1	IF_3	CALL_4
0x4000331	          0x4c89e6	                            mov rsi, r12	        99	setup.c	FUNCTION_2	IF_1	IF_3	CALL_4
0x4000334	          0x4889ef	                            mov rdi, rbp	        99	setup.c	FUNCTION_2	IF_1	IF_3	CALL_4
0x4000337	      0xe800000000	                          call 0x400033c	        99	setup.c	FUNCTION_2	IF_1	IF_3	CALL_4
0x400033c	            0x85c0	                           test eax, eax	        99	setup.c	FUNCTION_2	IF_1	IF_3	CALL_4
0x400033e	            0x7412	                            je 0x4000352	        99	setup.c	FUNCTION_2	IF_1	IF_3	CALL_4
0x4000340	          0x4889ef	                            mov rdi, rbp	       100	setup.c	FUNCTION_2	IF_1	IF_3	CALL_5
0x4000343	      0xe800000000	                          call 0x4000348	       100	setup.c	FUNCTION_2	IF_1	IF_3	CALL_5
0x4000348	      0xbd00000000	                              mov ebp, 0	       101	setup.c	FUNCTION_2	IF_1	IF_3
0x400034d	      0xe968010000	                           jmp 0x40004ba	       101	setup.c	FUNCTION_2	IF_1	IF_3
0x4000352	      0xe800000000	                          call 0x4000357	        33	setup.c	FUNCTION_1	CALL_1
0x4000357	          0x4989c5	                            mov r13, rax	        33	setup.c	FUNCTION_1	CALL_1
0x400035a	          0x4885c0	                           test rax, rax	        35	setup.c	FUNCTION_1	IF_1
0x400035d	     0xf844a010000	                            je 0x40004ad	        35	setup.c	FUNCTION_1	IF_1
0x4000363	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	        37	setup.c	FUNCTION_1	CALL_2
0x400036a	      0xb800000000	                              mov eax, 0	        37	setup.c	FUNCTION_1	CALL_2
0x400036f	          0x4c89e1	                            mov rcx, r12	        37	setup.c	FUNCTION_1	CALL_2
0x4000372	          0x4c89ef	                            mov rdi, r13	        37	setup.c	FUNCTION_1	CALL_2
0x4000375	            0xf2ae	              repne scasb al, byte [rdi]	        37	setup.c	FUNCTION_1	CALL_2
0x4000377	          0x48f7d1	                                 not rcx	        37	setup.c	FUNCTION_1	CALL_2
0x400037a	        0x4a8d1c21	                    lea rbx, [rcx + r12]	        37	setup.c	FUNCTION_1	CALL_2
0x400037e	          0x4c89e1	                            mov rcx, r12	        38	setup.c	FUNCTION_1	CALL_3
0x4000381	          0x4889ef	                            mov rdi, rbp	        38	setup.c	FUNCTION_1	CALL_3
0x4000384	            0xf2ae	              repne scasb al, byte [rdi]	        38	setup.c	FUNCTION_1	CALL_3
0x4000386	          0x4889c8	                            mov rax, rcx	        38	setup.c	FUNCTION_1	CALL_3
0x4000389	          0x48f7d0	                                 not rax	        38	setup.c	FUNCTION_1	CALL_3
0x400038c	          0x4901c4	                            add r12, rax	        38	setup.c	FUNCTION_1	CALL_3
0x400038f	        0x807d002f	                    cmp byte [rbp], 0x2f	       364	git-compat-util.h	FUNCTION_40
0x4000393	        0x410f94c6	                               sete r14b	       364	git-compat-util.h	FUNCTION_40
0x4000397	        0x450fb6f6	                        movzx r14d, r14b	       364	git-compat-util.h	FUNCTION_40
0x400039b	          0x4c39e3	                            cmp rbx, r12	        42	setup.c	FUNCTION_1	IF_2	CALL_4
0x400039e	            0x7759	                            ja 0x40003f9	        42	setup.c	FUNCTION_1	IF_2	CALL_4
0x40003a0	          0x4889da	                            mov rdx, rbx	        42	setup.c	FUNCTION_1	IF_2	CALL_4
0x40003a3	          0x4c89ee	                            mov rsi, r13	        42	setup.c	FUNCTION_1	IF_2	CALL_4
0x40003a6	          0x4889ef	                            mov rdi, rbp	        42	setup.c	FUNCTION_1	IF_2	CALL_4
0x40003a9	      0xe800000000	                          call 0x40003ae	        42	setup.c	FUNCTION_1	IF_2	CALL_4
0x40003ae	            0x85c0	                           test eax, eax	        42	setup.c	FUNCTION_1	IF_2	CALL_4
0x40003b0	            0x7547	                           jne 0x40003f9	        42	setup.c	FUNCTION_1	IF_2	CALL_4
0x40003b2	      0x488d741d00	                    lea rsi, [rbp + rbx]	        43	setup.c	FUNCTION_1	IF_2	IF_3
0x40003b7	           0xfb606	                   movzx eax, byte [rsi]	        43	setup.c	FUNCTION_1	IF_2	IF_3
0x40003ba	            0x3c2f	                            cmp al, 0x2f	        43	setup.c	FUNCTION_1	IF_2	IF_3
0x40003bc	            0x7518	                           jne 0x40003d6	        43	setup.c	FUNCTION_1	IF_2	IF_3
0x40003be	          0x4c89e2	                            mov rdx, r12	        59	string3.h	FUNCTION_108	CALL_3
0x40003c1	          0x4829da	                            sub rdx, rbx	        59	string3.h	FUNCTION_108	CALL_3
0x40003c4	      0x488d741d01	                lea rsi, [rbp + rbx + 1]	        59	string3.h	FUNCTION_108	CALL_3
0x40003c9	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_108	CALL_3
0x40003cc	      0xe800000000	                          call 0x40003d1	        59	string3.h	FUNCTION_108	CALL_3
0x40003d1	      0xe9e4000000	                           jmp 0x40004ba	        59	string3.h	FUNCTION_108	CALL_3
0x40003d6	      0x807c1dff2f	         cmp byte [rbp + rbx - 1], 0x2f 	        46	setup.c	FUNCTION_1	IF_2	ELSE_1	IF_4
0x40003db	            0x7407	                            je 0x40003e4	        46	setup.c	FUNCTION_1	IF_2	ELSE_1	IF_4
0x40003dd	          0x4189de	                           mov r14d, ebx	        52	setup.c	FUNCTION_1	IF_2
0x40003e0	            0x84c0	                             test al, al	        46	setup.c	FUNCTION_1	IF_2	ELSE_1	IF_4
0x40003e2	            0x7515	                           jne 0x40003f9	        46	setup.c	FUNCTION_1	IF_2	ELSE_1	IF_4
0x40003e4	      0x498d542401	                      lea rdx, [r12 + 1]	        59	string3.h	FUNCTION_108	CALL_3
0x40003e9	          0x4829da	                            sub rdx, rbx	        59	string3.h	FUNCTION_108	CALL_3
0x40003ec	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_108	CALL_3
0x40003ef	      0xe800000000	                          call 0x40003f4	        59	string3.h	FUNCTION_108	CALL_3
0x40003f4	      0xe9c1000000	                           jmp 0x40004ba	        59	string3.h	FUNCTION_108	CALL_3
0x40003f9	          0x4963de	                        movsxd rbx, r14d	        55	setup.c	FUNCTION_1
0x40003fc	          0x4801eb	                            add rbx, rbp	        55	setup.c	FUNCTION_1
0x40003ff	            0xeb40	                           jmp 0x4000441	        55	setup.c	FUNCTION_1
0x4000401	        0x4883c301	                              add rbx, 1	        59	setup.c	FUNCTION_1	WHILE_1
0x4000405	          0x803b2f	                    cmp byte [rbx], 0x2f	        60	setup.c	FUNCTION_1	WHILE_1	IF_5
0x4000408	            0x7537	                           jne 0x4000441	        60	setup.c	FUNCTION_1	WHILE_1	IF_5
0x400040a	          0xc60300	                       mov byte [rbx], 0	        61	setup.c	FUNCTION_1	WHILE_1	IF_5
0x400040d	          0x4889ef	                            mov rdi, rbp	        62	setup.c	FUNCTION_1	WHILE_1	IF_5	IF_6	CALL_8
0x4000410	      0xe800000000	                          call 0x4000415	        62	setup.c	FUNCTION_1	WHILE_1	IF_5	IF_6	CALL_8
0x4000415	          0x4c89ee	                            mov rsi, r13	        62	setup.c	FUNCTION_1	WHILE_1	IF_5	IF_6	CALL_8
0x4000418	          0x4889c7	                            mov rdi, rax	        62	setup.c	FUNCTION_1	WHILE_1	IF_5	IF_6	CALL_8
0x400041b	      0xe800000000	                          call 0x4000420	        62	setup.c	FUNCTION_1	WHILE_1	IF_5	IF_6	CALL_8
0x4000420	            0x85c0	                           test eax, eax	        62	setup.c	FUNCTION_1	WHILE_1	IF_5	IF_6	CALL_8
0x4000422	            0x751a	                           jne 0x400043e	        62	setup.c	FUNCTION_1	WHILE_1	IF_5	IF_6	CALL_8
0x4000424	          0x4889d8	                            mov rax, rbx	        59	string3.h	FUNCTION_108	CALL_3
0x4000427	          0x4829e8	                            sub rax, rbp	        59	string3.h	FUNCTION_108	CALL_3
0x400042a	          0x4c89e2	                            mov rdx, r12	        59	string3.h	FUNCTION_108	CALL_3
0x400042d	          0x4829c2	                            sub rdx, rax	        59	string3.h	FUNCTION_108	CALL_3
0x4000430	        0x488d7301	                      lea rsi, [rbx + 1]	        59	string3.h	FUNCTION_108	CALL_3
0x4000434	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_108	CALL_3
0x4000437	      0xe800000000	                          call 0x400043c	        59	string3.h	FUNCTION_108	CALL_3
0x400043c	            0xeb7c	                           jmp 0x40004ba	        59	string3.h	FUNCTION_108	CALL_3
0x400043e	          0xc6032f	                    mov byte [rbx], 0x2f	        66	setup.c	FUNCTION_1	WHILE_1	IF_5
0x4000441	          0x803b00	                       cmp byte [rbx], 0	        58	setup.c	FUNCTION_1	WHILE_1
0x4000444	            0x75bb	                           jne 0x4000401	        58	setup.c	FUNCTION_1	WHILE_1
0x4000446	          0x4889ef	                            mov rdi, rbp	        71	setup.c	FUNCTION_1	IF_7	CALL_11
0x4000449	      0xe800000000	                          call 0x400044e	        71	setup.c	FUNCTION_1	IF_7	CALL_11
0x400044e	          0x4c89ee	                            mov rsi, r13	        71	setup.c	FUNCTION_1	IF_7	CALL_11
0x4000451	          0x4889c7	                            mov rdi, rax	        71	setup.c	FUNCTION_1	IF_7	CALL_11
0x4000454	      0xe800000000	                          call 0x4000459	        71	setup.c	FUNCTION_1	IF_7	CALL_11
0x4000459	            0x85c0	                           test eax, eax	        71	setup.c	FUNCTION_1	IF_7	CALL_11
0x400045b	            0x7550	                           jne 0x40004ad	        71	setup.c	FUNCTION_1	IF_7	CALL_11
0x400045d	        0xc6450000	                       mov byte [rbp], 0	        72	setup.c	FUNCTION_1	IF_7
0x4000461	            0xeb57	                           jmp 0x40004ba	        72	setup.c	FUNCTION_1	IF_7
0x4000463	            0x89f5	                            mov ebp, esi	        72	setup.c	FUNCTION_1	IF_7
0x4000465	            0x85f6	                           test esi, esi	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x4000467	      0xba00000000	                              mov edx, 0	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x400046c	        0x480f45d7	                         cmovne rdx, rdi	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x4000470	      0xbf00000000	                              mov edi, 0	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x4000475	      0xb800000000	                              mov eax, 0	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x400047a	      0xe800000000	                          call 0x400047f	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x400047f	          0x4989c4	                            mov r12, rax	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x4000482	          0x4885db	                           test rbx, rbx	       109	setup.c	FUNCTION_2	ELSE_1	IF_5
0x4000485	            0x7402	                            je 0x4000489	       109	setup.c	FUNCTION_2	ELSE_1	IF_5
0x4000487	            0x892b	                    mov dword [rbx], ebp	       110	setup.c	FUNCTION_2	ELSE_1	IF_5
0x4000489	          0x4889da	                            mov rdx, rbx	       111	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_9
0x400048c	          0x4c89e6	                            mov rsi, r12	       111	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_9
0x400048f	          0x4c89e7	                            mov rdi, r12	       111	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_9
0x4000492	      0xe800000000	                          call 0x4000497	       111	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_9
0x4000497	          0x4c89e5	                            mov rbp, r12	       108	setup.c	FUNCTION_2	ELSE_1	CALL_8
0x400049a	            0x85c0	                           test eax, eax	       111	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_9
0x400049c	            0x741c	                            je 0x40004ba	       111	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_9
0x400049e	          0x4c89e7	                            mov rdi, r12	       112	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_10
0x40004a1	      0xe800000000	                          call 0x40004a6	       112	setup.c	FUNCTION_2	ELSE_1	IF_6	CALL_10
0x40004a6	      0xbd00000000	                              mov ebp, 0	       113	setup.c	FUNCTION_2	ELSE_1	IF_6
0x40004ab	            0xeb0d	                           jmp 0x40004ba	       113	setup.c	FUNCTION_2	ELSE_1	IF_6
0x40004ad	          0x4889ef	                            mov rdi, rbp	       104	setup.c	FUNCTION_2	IF_1	IF_4	CALL_7
0x40004b0	      0xe800000000	                          call 0x40004b5	       104	setup.c	FUNCTION_2	IF_1	IF_4	CALL_7
0x40004b5	      0xbd00000000	                              mov ebp, 0	       105	setup.c	FUNCTION_2	IF_1	IF_4
0x40004ba	          0x4889e8	                            mov rax, rbp	       117	setup.c	FUNCTION_2
0x40004bd	              0x5b	                                 pop rbx	       117	setup.c	FUNCTION_2
0x40004be	              0x5d	                                 pop rbp	       117	setup.c	FUNCTION_2
0x40004bf	            0x415c	                                 pop r12	       117	setup.c	FUNCTION_2
0x40004c1	            0x415d	                                 pop r13	       117	setup.c	FUNCTION_2
0x40004c3	            0x415e	                                 pop r14	       117	setup.c	FUNCTION_2
0x40004c5	              0xc3	                                     ret	       117	setup.c	FUNCTION_2
setup_git_directory	CALL,1:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,0:ELSE,0:functions,0	5
0x400283a	        0x4883ec08	                              sub rsp, 8	      1193	setup.c	FUNCTION_34
0x400283e	      0xbf00000000	                              mov edi, 0	      1194	setup.c	FUNCTION_34	CALL_1
0x4002843	      0xe800000000	                          call 0x4002848	      1194	setup.c	FUNCTION_34	CALL_1
0x4002848	        0x4883c408	                              add rsp, 8	      1195	setup.c	FUNCTION_34
0x400284c	              0xc3	                                     ret	      1195	setup.c	FUNCTION_34
is_git_directory	CALL,15:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,5:ELSE,1:functions,0	154
0x40009aa	              0x55	                                push rbp	       310	setup.c	FUNCTION_12
0x40009ab	              0x53	                                push rbx	       310	setup.c	FUNCTION_12
0x40009ac	        0x4883ec28	                           sub rsp, 0x28	       310	setup.c	FUNCTION_12
0x40009b0	          0x4889fb	                            mov rbx, rdi	       310	setup.c	FUNCTION_12
0x40009b3	    0x64488b042528	                mov rax, qword fs:[0x28]	       310	setup.c	FUNCTION_12
0x40009bc	      0x4889442418	             mov qword [rsp + 0x18], rax	       310	setup.c	FUNCTION_12
0x40009c1	            0x31c0	                            xor eax, eax	       310	setup.c	FUNCTION_12
0x40009c3	    0x48c704240000	                      mov qword [rsp], 0	       311	setup.c	FUNCTION_12
0x40009cb	    0x48c744240800	                  mov qword [rsp + 8], 0	       311	setup.c	FUNCTION_12
0x40009d4	    0x48c744241000	               mov qword [rsp + 0x10], 0	       311	setup.c	FUNCTION_12
0x40009dd	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_73	CALL_2
0x40009e4	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_73	CALL_2
0x40009e6	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_73	CALL_2
0x40009e9	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_73	CALL_2
0x40009ed	          0x4889de	                            mov rsi, rbx	       279	strbuf.h	FUNCTION_73	CALL_2
0x40009f0	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_73	CALL_2
0x40009f3	      0xe800000000	                          call 0x40009f8	       279	strbuf.h	FUNCTION_73	CALL_2
0x40009f8	      0x488b442408	                mov rax, qword [rsp + 8]	       595	strbuf.h	FUNCTION_78	IF_1
0x40009fd	          0x4885c0	                           test rax, rax	       595	strbuf.h	FUNCTION_78	IF_1
0x4000a00	            0x7450	                            je 0x4000a52	       595	strbuf.h	FUNCTION_78	IF_1
0x4000a02	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       595	strbuf.h	FUNCTION_78	IF_1
0x4000a07	      0x807c02ff2f	         cmp byte [rdx + rax - 1], 0x2f 	       595	strbuf.h	FUNCTION_78	IF_1
0x4000a0c	            0x7444	                            je 0x4000a52	       595	strbuf.h	FUNCTION_78	IF_1
0x4000a0e	        0x488b1424	                    mov rdx, qword [rsp]	       141	strbuf.h	FUNCTION_70
0x4000a12	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_70
0x4000a15	            0x7409	                            je 0x4000a20	       141	strbuf.h	FUNCTION_70
0x4000a17	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_72	IF_1	CALL_1
0x4000a1b	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_72	IF_1	CALL_1
0x4000a1e	            0x750d	                           jne 0x4000a2d	       227	strbuf.h	FUNCTION_72	IF_1	CALL_1
0x4000a20	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_72	CALL_2
0x4000a25	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_72	CALL_2
0x4000a28	      0xe800000000	                          call 0x4000a2d	       228	strbuf.h	FUNCTION_72	CALL_2
0x4000a2d	      0x488b442408	                mov rax, qword [rsp + 8]	       229	strbuf.h	FUNCTION_72
0x4000a32	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_72
0x4000a36	      0x4889542408	                mov qword [rsp + 8], rdx	       229	strbuf.h	FUNCTION_72
0x4000a3b	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_72
0x4000a40	        0xc604022f	              mov byte [rdx + rax], 0x2f	       229	strbuf.h	FUNCTION_72
0x4000a44	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_72
0x4000a49	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_72
0x4000a4e	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_72
0x4000a52	      0xba04000000	                              mov edx, 4	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000a57	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000a5c	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000a5f	      0xe800000000	                          call 0x4000a64	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000a64	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       319	setup.c	FUNCTION_12	IF_1	CALL_4
0x4000a69	      0xe800000000	                          call 0x4000a6e	       319	setup.c	FUNCTION_12	IF_1	CALL_4
0x4000a6e	      0xbd00000000	                              mov ebp, 0	       312	setup.c	FUNCTION_12
0x4000a73	            0x85c0	                           test eax, eax	       319	setup.c	FUNCTION_12	IF_1	CALL_4
0x4000a75	     0xf8596010000	                           jne 0x4000c11	       319	setup.c	FUNCTION_12	IF_1	CALL_4
0x4000a7b	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_71
0x4000a84	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_71	IF_2
0x4000a89	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_71	IF_2
0x4000a8f	            0x7405	                            je 0x4000a96	       165	strbuf.h	FUNCTION_71	IF_2
0x4000a91	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_71	IF_2
0x4000a94	            0xeb22	                           jmp 0x4000ab8	       166	strbuf.h	FUNCTION_71	IF_2
0x4000a96	    0x803d00000000	                cmp byte [0x04000a9d], 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4000a9d	            0x7419	                            je 0x4000ab8	       168	strbuf.h	FUNCTION_71	CALL_2
0x4000a9f	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4000aa4	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_71	CALL_2
0x4000aa9	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4000aae	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4000ab3	      0xe800000000	                          call 0x4000ab8	       168	strbuf.h	FUNCTION_71	CALL_2
0x4000ab8	          0x4889de	                            mov rsi, rbx	       323	setup.c	FUNCTION_12	CALL_5
0x4000abb	          0x4889e7	                            mov rdi, rsp	       323	setup.c	FUNCTION_12	CALL_5
0x4000abe	      0xe800000000	                          call 0x4000ac3	       323	setup.c	FUNCTION_12	CALL_5
0x4000ac3	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       324	setup.c	FUNCTION_12
0x4000ac8	      0xbf00000000	                              mov edi, 0	       327	setup.c	FUNCTION_12	IF_2	CALL_6
0x4000acd	      0xe800000000	                          call 0x4000ad2	       327	setup.c	FUNCTION_12	IF_2	CALL_6
0x4000ad2	          0x4885c0	                           test rax, rax	       327	setup.c	FUNCTION_12	IF_2	CALL_6
0x4000ad5	            0x7424	                            je 0x4000afb	       327	setup.c	FUNCTION_12	IF_2	CALL_6
0x4000ad7	      0xbf00000000	                              mov edi, 0	       328	setup.c	FUNCTION_12	IF_2	IF_3	CALL_8
0x4000adc	      0xe800000000	                          call 0x4000ae1	       328	setup.c	FUNCTION_12	IF_2	IF_3	CALL_8
0x4000ae1	      0xbe01000000	                              mov esi, 1	       328	setup.c	FUNCTION_12	IF_2	IF_3	CALL_8
0x4000ae6	          0x4889c7	                            mov rdi, rax	       328	setup.c	FUNCTION_12	IF_2	IF_3	CALL_8
0x4000ae9	      0xe800000000	                          call 0x4000aee	       328	setup.c	FUNCTION_12	IF_2	IF_3	CALL_8
0x4000aee	            0x85c0	                           test eax, eax	       328	setup.c	FUNCTION_12	IF_2	IF_3	CALL_8
0x4000af0	     0xf8488000000	                            je 0x4000b7e	       328	setup.c	FUNCTION_12	IF_2	IF_3	CALL_8
0x4000af6	      0xe90a010000	                           jmp 0x4000c05	       328	setup.c	FUNCTION_12	IF_2	IF_3	CALL_8
0x4000afb	        0x488b0424	                    mov rax, qword [rsp]	       162	strbuf.h	FUNCTION_71	IF_1
0x4000aff	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_71	IF_1
0x4000b03	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_71	IF_1
0x4000b07	          0x4839c3	                            cmp rbx, rax	       162	strbuf.h	FUNCTION_71	IF_1
0x4000b0a	            0x760f	                           jbe 0x4000b1b	       162	strbuf.h	FUNCTION_71	IF_1
0x4000b0c	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_71	CALL_1
0x4000b11	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_71	CALL_1
0x4000b16	      0xe800000000	                          call 0x4000b1b	       163	strbuf.h	FUNCTION_71	CALL_1
0x4000b1b	      0x48895c2408	                mov qword [rsp + 8], rbx	       164	strbuf.h	FUNCTION_71
0x4000b20	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_71	IF_2
0x4000b25	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_71	IF_2
0x4000b2b	            0x7406	                            je 0x4000b33	       165	strbuf.h	FUNCTION_71	IF_2
0x4000b2d	        0xc6041800	                 mov byte [rax + rbx], 0	       166	strbuf.h	FUNCTION_71	IF_2
0x4000b31	            0xeb22	                           jmp 0x4000b55	       166	strbuf.h	FUNCTION_71	IF_2
0x4000b33	    0x803d00000000	                cmp byte [0x04000b3a], 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4000b3a	            0x7419	                            je 0x4000b55	       168	strbuf.h	FUNCTION_71	CALL_2
0x4000b3c	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4000b41	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_71	CALL_2
0x4000b46	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4000b4b	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4000b50	      0xe800000000	                          call 0x4000b55	       168	strbuf.h	FUNCTION_71	CALL_2
0x4000b55	      0xba08000000	                              mov edx, 8	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000b5a	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000b5f	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000b62	      0xe800000000	                          call 0x4000b67	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000b67	      0xbe01000000	                              mov esi, 1	       334	setup.c	FUNCTION_12	ELSE_1	IF_4	CALL_11
0x4000b6c	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       334	setup.c	FUNCTION_12	ELSE_1	IF_4	CALL_11
0x4000b71	      0xe800000000	                          call 0x4000b76	       334	setup.c	FUNCTION_12	ELSE_1	IF_4	CALL_11
0x4000b76	            0x85c0	                           test eax, eax	       334	setup.c	FUNCTION_12	ELSE_1	IF_4	CALL_11
0x4000b78	     0xf858e000000	                           jne 0x4000c0c	       334	setup.c	FUNCTION_12	ELSE_1	IF_4	CALL_11
0x4000b7e	        0x488b0424	                    mov rax, qword [rsp]	       162	strbuf.h	FUNCTION_71	IF_1
0x4000b82	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_71	IF_1
0x4000b86	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_71	IF_1
0x4000b8a	          0x4839c3	                            cmp rbx, rax	       162	strbuf.h	FUNCTION_71	IF_1
0x4000b8d	            0x760f	                           jbe 0x4000b9e	       162	strbuf.h	FUNCTION_71	IF_1
0x4000b8f	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_71	CALL_1
0x4000b94	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_71	CALL_1
0x4000b99	      0xe800000000	                          call 0x4000b9e	       163	strbuf.h	FUNCTION_71	CALL_1
0x4000b9e	      0x48895c2408	                mov qword [rsp + 8], rbx	       164	strbuf.h	FUNCTION_71
0x4000ba3	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_71	IF_2
0x4000ba8	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_71	IF_2
0x4000bae	            0x7406	                            je 0x4000bb6	       165	strbuf.h	FUNCTION_71	IF_2
0x4000bb0	        0xc6041800	                 mov byte [rax + rbx], 0	       166	strbuf.h	FUNCTION_71	IF_2
0x4000bb4	            0xeb22	                           jmp 0x4000bd8	       166	strbuf.h	FUNCTION_71	IF_2
0x4000bb6	    0x803d00000000	                cmp byte [0x04000bbd], 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4000bbd	            0x7419	                            je 0x4000bd8	       168	strbuf.h	FUNCTION_71	CALL_2
0x4000bbf	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4000bc4	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_71	CALL_2
0x4000bc9	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4000bce	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4000bd3	      0xe800000000	                          call 0x4000bd8	       168	strbuf.h	FUNCTION_71	CALL_2
0x4000bd8	      0xba05000000	                              mov edx, 5	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000bdd	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000be2	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000be5	      0xe800000000	                          call 0x4000bea	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000bea	      0xbe01000000	                              mov esi, 1	       340	setup.c	FUNCTION_12	IF_5	CALL_14
0x4000bef	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       340	setup.c	FUNCTION_12	IF_5	CALL_14
0x4000bf4	      0xe800000000	                          call 0x4000bf9	       340	setup.c	FUNCTION_12	IF_5	CALL_14
0x4000bf9	            0x85c0	                           test eax, eax	       312	setup.c	FUNCTION_12
0x4000bfb	        0x400f94c5	                                sete bpl	       312	setup.c	FUNCTION_12
0x4000bff	        0x400fb6ed	                          movzx ebp, bpl	       312	setup.c	FUNCTION_12
0x4000c03	            0xeb0c	                           jmp 0x4000c11	       312	setup.c	FUNCTION_12
0x4000c05	      0xbd00000000	                              mov ebp, 0	       312	setup.c	FUNCTION_12
0x4000c0a	            0xeb05	                           jmp 0x4000c11	       312	setup.c	FUNCTION_12
0x4000c0c	      0xbd00000000	                              mov ebp, 0	       312	setup.c	FUNCTION_12
0x4000c11	          0x4889e7	                            mov rdi, rsp	       345	setup.c	FUNCTION_12	CALL_15
0x4000c14	      0xe800000000	                          call 0x4000c19	       345	setup.c	FUNCTION_12	CALL_15
0x4000c19	            0x89e8	                            mov eax, ebp	       347	setup.c	FUNCTION_12
0x4000c1b	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       347	setup.c	FUNCTION_12
0x4000c20	    0x644833342528	                xor rsi, qword fs:[0x28]	       347	setup.c	FUNCTION_12
0x4000c29	            0x7405	                            je 0x4000c30	       347	setup.c	FUNCTION_12
0x4000c2b	      0xe800000000	                          call 0x4000c30	       347	setup.c	FUNCTION_12
0x4000c30	        0x4883c428	                           add rsp, 0x28	       347	setup.c	FUNCTION_12
0x4000c34	              0x5b	                                 pop rbx	       347	setup.c	FUNCTION_12
0x4000c35	              0x5d	                                 pop rbp	       347	setup.c	FUNCTION_12
0x4000c36	              0xc3	                                     ret	       347	setup.c	FUNCTION_12
read_repository_format	CALL,3:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,0:ELSE,0:functions,0	31
0x4000d9d	              0x55	                                push rbp	       489	setup.c	FUNCTION_19
0x4000d9e	              0x53	                                push rbx	       489	setup.c	FUNCTION_19
0x4000d9f	        0x4883ec08	                              sub rsp, 8	       489	setup.c	FUNCTION_19
0x4000da3	          0x4889fb	                            mov rbx, rdi	       489	setup.c	FUNCTION_19
0x4000da6	          0x4889f5	                            mov rbp, rsi	       489	setup.c	FUNCTION_19
0x4000da9	    0x48c707000000	                      mov qword [rdi], 0	        90	string3.h	FUNCTION_110	CALL_6
0x4000db0	    0x48c747380000	               mov qword [rdi + 0x38], 0	        90	string3.h	FUNCTION_110	CALL_6
0x4000db8	        0x488d7f08	                      lea rdi, [rdi + 8]	        90	string3.h	FUNCTION_110	CALL_6
0x4000dbc	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_110	CALL_6
0x4000dc0	          0x4889d9	                            mov rcx, rbx	        90	string3.h	FUNCTION_110	CALL_6
0x4000dc3	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_110	CALL_6
0x4000dc6	          0x83c140	                           add ecx, 0x40	        90	string3.h	FUNCTION_110	CALL_6
0x4000dc9	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_110	CALL_6
0x4000dcc	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_110	CALL_6
0x4000dce	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_110	CALL_6
0x4000dd3	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_110	CALL_6
0x4000dd6	    0xc703ffffffff	            mov dword [rbx], 0xffffffff 	       491	setup.c	FUNCTION_19
0x4000ddc	    0xc74310ffffff	     mov dword [rbx + 0x10], 0xffffffff 	       492	setup.c	FUNCTION_19
0x4000de3	    0xc74314010000	               mov dword [rbx + 0x14], 1	       493	setup.c	FUNCTION_19
0x4000dea	        0x488d7b20	                   lea rdi, [rbx + 0x20]	       494	setup.c	FUNCTION_19	CALL_2
0x4000dee	      0xbe01000000	                              mov esi, 1	       494	setup.c	FUNCTION_19	CALL_2
0x4000df3	      0xe800000000	                          call 0x4000df8	       494	setup.c	FUNCTION_19	CALL_2
0x4000df8	          0x4889da	                            mov rdx, rbx	       495	setup.c	FUNCTION_19	CALL_3
0x4000dfb	          0x4889ee	                            mov rsi, rbp	       495	setup.c	FUNCTION_19	CALL_3
0x4000dfe	      0xbf00000000	                              mov edi, 0	       495	setup.c	FUNCTION_19	CALL_3
0x4000e03	      0xe800000000	                          call 0x4000e08	       495	setup.c	FUNCTION_19	CALL_3
0x4000e08	            0x8b03	                    mov eax, dword [rbx]	       496	setup.c	FUNCTION_19
0x4000e0a	        0x4883c408	                              add rsp, 8	       497	setup.c	FUNCTION_19
0x4000e0e	              0x5b	                                 pop rbx	       497	setup.c	FUNCTION_19
0x4000e0f	              0x5d	                                 pop rbp	       497	setup.c	FUNCTION_19
0x4000e10	              0xc3	                                     ret	       497	setup.c	FUNCTION_19
git_config_perm	CALL,9:WHILE,0:FOR,0:SWITCH,1:DO,0:IF,6:ELSE,0:functions,0	109
0x4002664	            0x4154	                                push r12	      1129	setup.c	FUNCTION_32
0x4002666	              0x55	                                push rbp	      1129	setup.c	FUNCTION_32
0x4002667	              0x53	                                push rbx	      1129	setup.c	FUNCTION_32
0x4002668	        0x4883ec10	                           sub rsp, 0x10	      1129	setup.c	FUNCTION_32
0x400266c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1129	setup.c	FUNCTION_32
0x4002675	      0x4889442408	                mov qword [rsp + 8], rax	      1129	setup.c	FUNCTION_32
0x400267a	            0x31c0	                            xor eax, eax	      1129	setup.c	FUNCTION_32
0x400267c	          0x4885f6	                           test rsi, rsi	      1133	setup.c	FUNCTION_32	IF_1
0x400267f	     0xf8434010000	                            je 0x40027b9	      1133	setup.c	FUNCTION_32	IF_1
0x4002685	          0x4889fd	                            mov rbp, rdi	      1133	setup.c	FUNCTION_32	IF_1
0x4002688	          0x4889f3	                            mov rbx, rsi	      1133	setup.c	FUNCTION_32	IF_1
0x400268b	      0xbf00000000	                              mov edi, 0	      1136	setup.c	FUNCTION_32	IF_2	CALL_1
0x4002690	      0xb906000000	                              mov ecx, 6	      1136	setup.c	FUNCTION_32	IF_2	CALL_1
0x4002695	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1136	setup.c	FUNCTION_32	IF_2	CALL_1
0x4002697	           0xf97c0	                                 seta al	      1136	setup.c	FUNCTION_32	IF_2	CALL_1
0x400269a	           0xf92c2	                                 setb dl	      1136	setup.c	FUNCTION_32	IF_2	CALL_1
0x400269d	            0x29d0	                            sub eax, edx	      1136	setup.c	FUNCTION_32	IF_2	CALL_1
0x400269f	           0xfbec0	                           movsx eax, al	      1136	setup.c	FUNCTION_32	IF_2	CALL_1
0x40026a2	            0x85c0	                           test eax, eax	      1136	setup.c	FUNCTION_32	IF_2	CALL_1
0x40026a4	     0xf8422010000	                            je 0x40027cc	      1136	setup.c	FUNCTION_32	IF_2	CALL_1
0x40026aa	      0xbf00000000	                              mov edi, 0	      1138	setup.c	FUNCTION_32	IF_3	CALL_2
0x40026af	      0xb906000000	                              mov ecx, 6	      1138	setup.c	FUNCTION_32	IF_3	CALL_2
0x40026b4	          0x4889de	                            mov rsi, rbx	      1138	setup.c	FUNCTION_32	IF_3	CALL_2
0x40026b7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1138	setup.c	FUNCTION_32	IF_3	CALL_2
0x40026b9	           0xf97c1	                                 seta cl	      1138	setup.c	FUNCTION_32	IF_3	CALL_2
0x40026bc	           0xf92c2	                                 setb dl	      1138	setup.c	FUNCTION_32	IF_3	CALL_2
0x40026bf	      0xb8b0010000	                          mov eax, 0x1b0	      1139	setup.c	FUNCTION_32	IF_3
0x40026c4	            0x38d1	                              cmp cl, dl	      1138	setup.c	FUNCTION_32	IF_3	CALL_2
0x40026c6	     0xf8400010000	                            je 0x40027cc	      1138	setup.c	FUNCTION_32	IF_3	CALL_2
0x40026cc	          0x803b61	                    cmp byte [rbx], 0x61	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x40026cf	            0x7516	                           jne 0x40026e7	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x40026d1	        0x807b016c	                cmp byte [rbx + 1], 0x6c	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x40026d5	            0x7510	                           jne 0x40026e7	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x40026d7	        0x807b026c	                cmp byte [rbx + 2], 0x6c	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x40026db	            0x750a	                           jne 0x40026e7	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x40026dd	        0x807b0300	                   cmp byte [rbx + 3], 0	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x40026e1	     0xf84d9000000	                            je 0x40027c0	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x40026e7	      0xbf00000000	                              mov edi, 0	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x40026ec	      0xb906000000	                              mov ecx, 6	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x40026f1	          0x4889de	                            mov rsi, rbx	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x40026f4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x40026f6	           0xf97c1	                                 seta cl	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x40026f9	           0xf92c2	                                 setb dl	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x40026fc	      0xb8b4010000	                          mov eax, 0x1b4	      1143	setup.c	FUNCTION_32	IF_4
0x4002701	            0x38d1	                              cmp cl, dl	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x4002703	     0xf84c3000000	                            je 0x40027cc	      1140	setup.c	FUNCTION_32	IF_4	CALL_3
0x4002709	      0xbf00000000	                              mov edi, 0	      1142	setup.c	FUNCTION_32	IF_4	CALL_5
0x400270e	      0xb90a000000	                            mov ecx, 0xa	      1142	setup.c	FUNCTION_32	IF_4	CALL_5
0x4002713	          0x4889de	                            mov rsi, rbx	      1142	setup.c	FUNCTION_32	IF_4	CALL_5
0x4002716	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1142	setup.c	FUNCTION_32	IF_4	CALL_5
0x4002718	           0xf97c1	                                 seta cl	      1142	setup.c	FUNCTION_32	IF_4	CALL_5
0x400271b	           0xf92c2	                                 setb dl	      1142	setup.c	FUNCTION_32	IF_4	CALL_5
0x400271e	            0x38d1	                              cmp cl, dl	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x4002720	     0xf84a6000000	                            je 0x40027cc	      1141	setup.c	FUNCTION_32	IF_4	CALL_4
0x4002726	      0xba08000000	                              mov edx, 8	      1146	setup.c	FUNCTION_32	CALL_6
0x400272b	          0x4889e6	                            mov rsi, rsp	      1146	setup.c	FUNCTION_32	CALL_6
0x400272e	          0x4889df	                            mov rdi, rbx	      1146	setup.c	FUNCTION_32	CALL_6
0x4002731	      0xe800000000	                          call 0x4002736	      1146	setup.c	FUNCTION_32	CALL_6
0x4002736	          0x4989c4	                            mov r12, rax	      1146	setup.c	FUNCTION_32	CALL_6
0x4002739	        0x488b0424	                    mov rax, qword [rsp]	      1149	setup.c	FUNCTION_32	IF_5
0x400273d	          0x803800	                       cmp byte [rax], 0	      1149	setup.c	FUNCTION_32	IF_5
0x4002740	            0x7417	                            je 0x4002759	      1149	setup.c	FUNCTION_32	IF_5
0x4002742	          0x4889de	                            mov rsi, rbx	      1150	setup.c	FUNCTION_32	CALL_7
0x4002745	          0x4889ef	                            mov rdi, rbp	      1150	setup.c	FUNCTION_32	CALL_7
0x4002748	      0xe800000000	                          call 0x400274d	      1150	setup.c	FUNCTION_32	CALL_7
0x400274d	            0x85c0	                           test eax, eax	      1150	setup.c	FUNCTION_32	CALL_7
0x400274f	      0xbab0010000	                          mov edx, 0x1b0	      1150	setup.c	FUNCTION_32	CALL_7
0x4002754	           0xf45c2	                         cmovne eax, edx	      1150	setup.c	FUNCTION_32	CALL_7
0x4002757	            0xeb73	                           jmp 0x40027cc	      1150	setup.c	FUNCTION_32	CALL_7
0x4002759	        0x4183fc01	                             cmp r12d, 1	      1156	setup.c	FUNCTION_32	SWITCH_1
0x400275d	            0x740d	                            je 0x400276c	      1156	setup.c	FUNCTION_32	SWITCH_1
0x400275f	        0x4183fc02	                             cmp r12d, 2	      1156	setup.c	FUNCTION_32	SWITCH_1
0x4002763	            0x740e	                            je 0x4002773	      1156	setup.c	FUNCTION_32	SWITCH_1
0x4002765	          0x4585e4	                         test r12d, r12d	      1156	setup.c	FUNCTION_32	SWITCH_1
0x4002768	            0x7510	                           jne 0x400277a	      1156	setup.c	FUNCTION_32	SWITCH_1
0x400276a	            0xeb5b	                           jmp 0x40027c7	      1156	setup.c	FUNCTION_32	SWITCH_1
0x400276c	      0xb8b0010000	                          mov eax, 0x1b0	      1160	setup.c	FUNCTION_32	SWITCH_1
0x4002771	            0xeb59	                           jmp 0x40027cc	      1160	setup.c	FUNCTION_32	SWITCH_1
0x4002773	      0xb8b4010000	                          mov eax, 0x1b4	      1162	setup.c	FUNCTION_32	SWITCH_1
0x4002778	            0xeb52	                           jmp 0x40027cc	      1162	setup.c	FUNCTION_32	SWITCH_1
0x400277a	          0x4489e2	                           mov edx, r12d	      1167	setup.c	FUNCTION_32	IF_6
0x400277d	    0x81e280010000	                          and edx, 0x180	      1167	setup.c	FUNCTION_32	IF_6
0x4002783	          0x4489e0	                           mov eax, r12d	      1176	setup.c	FUNCTION_32
0x4002786	      0x25b6010000	                          and eax, 0x1b6	      1176	setup.c	FUNCTION_32
0x400278b	            0xf7d8	                                 neg eax	      1176	setup.c	FUNCTION_32
0x400278d	    0x81fa80010000	                          cmp edx, 0x180	      1167	setup.c	FUNCTION_32	IF_6
0x4002793	            0x7437	                            je 0x40027cc	      1167	setup.c	FUNCTION_32	IF_6
0x4002795	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x400279a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x400279f	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x40027a4	      0xe800000000	                          call 0x40027a9	        54	gettext.h	FUNCTION_67
0x40027a9	          0x4489e6	                           mov esi, r12d	      1168	setup.c	FUNCTION_32	IF_6	CALL_9
0x40027ac	          0x4889c7	                            mov rdi, rax	      1168	setup.c	FUNCTION_32	IF_6	CALL_9
0x40027af	      0xb800000000	                              mov eax, 0	      1168	setup.c	FUNCTION_32	IF_6	CALL_9
0x40027b4	      0xe800000000	                          call 0x40027b9	      1168	setup.c	FUNCTION_32	IF_6	CALL_9
0x40027b9	      0xb8b0010000	                          mov eax, 0x1b0	      1134	setup.c	FUNCTION_32	IF_1
0x40027be	            0xeb0c	                           jmp 0x40027cc	      1134	setup.c	FUNCTION_32	IF_1
0x40027c0	      0xb8b4010000	                          mov eax, 0x1b4	      1143	setup.c	FUNCTION_32	IF_4
0x40027c5	            0xeb05	                           jmp 0x40027cc	      1143	setup.c	FUNCTION_32	IF_4
0x40027c7	      0xb800000000	                              mov eax, 0	      1158	setup.c	FUNCTION_32	SWITCH_1
0x40027cc	      0x488b542408	                mov rdx, qword [rsp + 8]	      1177	setup.c	FUNCTION_32
0x40027d1	    0x644833142528	                xor rdx, qword fs:[0x28]	      1177	setup.c	FUNCTION_32
0x40027da	            0x7405	                            je 0x40027e1	      1177	setup.c	FUNCTION_32
0x40027dc	      0xe800000000	                          call 0x40027e1	      1177	setup.c	FUNCTION_32
0x40027e1	        0x4883c410	                           add rsp, 0x10	      1177	setup.c	FUNCTION_32
0x40027e5	              0x5b	                                 pop rbx	      1177	setup.c	FUNCTION_32
0x40027e6	              0x5d	                                 pop rbp	      1177	setup.c	FUNCTION_32
0x40027e7	            0x415c	                                 pop r12	      1177	setup.c	FUNCTION_32
0x40027e9	              0xc3	                                     ret	      1177	setup.c	FUNCTION_32
setup_git_directory_gently_1	CALL,19:WHILE,1:FOR,1:SWITCH,0:DO,0:IF,14:ELSE,1:functions,0	237
0x400153e	            0x4157	                                push r15	       891	setup.c	FUNCTION_29
0x4001540	            0x4156	                                push r14	       891	setup.c	FUNCTION_29
0x4001542	            0x4155	                                push r13	       891	setup.c	FUNCTION_29
0x4001544	            0x4154	                                push r12	       891	setup.c	FUNCTION_29
0x4001546	              0x55	                                push rbp	       891	setup.c	FUNCTION_29
0x4001547	              0x53	                                push rbx	       891	setup.c	FUNCTION_29
0x4001548	        0x4883ec68	                           sub rsp, 0x68	       891	setup.c	FUNCTION_29
0x400154c	          0x4889fd	                            mov rbp, rdi	       891	setup.c	FUNCTION_29
0x400154f	          0x4989f7	                            mov r15, rsi	       891	setup.c	FUNCTION_29
0x4001552	      0x4889742418	             mov qword [rsp + 0x18], rsi	       891	setup.c	FUNCTION_29
0x4001557	          0x4189d6	                           mov r14d, edx	       891	setup.c	FUNCTION_29
0x400155a	    0x64488b042528	                mov rax, qword fs:[0x28]	       891	setup.c	FUNCTION_29
0x4001563	      0x4889442458	             mov qword [rsp + 0x58], rax	       891	setup.c	FUNCTION_29
0x4001568	            0x31c0	                            xor eax, eax	       891	setup.c	FUNCTION_29
0x400156a	      0xbf00000000	                              mov edi, 0	       892	setup.c	FUNCTION_29	CALL_1
0x400156f	      0xe800000000	                          call 0x4001574	       892	setup.c	FUNCTION_29	CALL_1
0x4001574	          0x4889c3	                            mov rbx, rax	       892	setup.c	FUNCTION_29	CALL_1
0x4001577	    0x48c744243000	               mov qword [rsp + 0x30], 0	       893	setup.c	FUNCTION_29
0x4001580	    0xc74424380000	               mov dword [rsp + 0x38], 0	       893	setup.c	FUNCTION_29
0x4001588	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	       893	setup.c	FUNCTION_29
0x4001590	      0x804c244001	                 or byte [rsp + 0x40], 1	       893	setup.c	FUNCTION_29
0x4001595	    0x48c744244800	               mov qword [rsp + 0x48], 0	       893	setup.c	FUNCTION_29
0x400159e	      0xbf00000000	                              mov edi, 0	       904	setup.c	FUNCTION_29	CALL_2
0x40015a3	      0xe800000000	                          call 0x40015a8	       904	setup.c	FUNCTION_29	CALL_2
0x40015a8	          0x4889c2	                            mov rdx, rax	       904	setup.c	FUNCTION_29	CALL_2
0x40015ab	      0x4889442410	             mov qword [rsp + 0x10], rax	       904	setup.c	FUNCTION_29	CALL_2
0x40015b0	          0x4889c6	                            mov rsi, rax	       905	setup.c	FUNCTION_29	IF_1
0x40015b3	          0x4885c0	                           test rax, rax	       905	setup.c	FUNCTION_29	IF_1
0x40015b6	            0x742d	                            je 0x40015e5	       905	setup.c	FUNCTION_29	IF_1
0x40015b8	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_73	CALL_2
0x40015bd	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_73	CALL_2
0x40015c4	          0x4889d7	                            mov rdi, rdx	       279	strbuf.h	FUNCTION_73	CALL_2
0x40015c7	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_73	CALL_2
0x40015c9	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_73	CALL_2
0x40015cc	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_73	CALL_2
0x40015cf	        0x488d50ff	                      lea rdx, [rax - 1]	       279	strbuf.h	FUNCTION_73	CALL_2
0x40015d3	          0x4c89ff	                            mov rdi, r15	       279	strbuf.h	FUNCTION_73	CALL_2
0x40015d6	      0xe800000000	                          call 0x40015db	       279	strbuf.h	FUNCTION_73	CALL_2
0x40015db	      0xb801000000	                              mov eax, 1	       907	setup.c	FUNCTION_29	IF_1
0x40015e0	      0xe9c0020000	                           jmp 0x40018a5	       907	setup.c	FUNCTION_29	IF_1
0x40015e5	    0x41bcffffffff	                    mov r12d, 0xffffffff	       921	setup.c	FUNCTION_29	IF_3
0x40015eb	          0x4885db	                           test rbx, rbx	       910	setup.c	FUNCTION_29	IF_2
0x40015ee	            0x7462	                            je 0x4001652	       910	setup.c	FUNCTION_29	IF_2
0x40015f0	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	       911	setup.c	FUNCTION_29	IF_2
0x40015f8	          0x4489e1	                           mov ecx, r12d	       913	setup.c	FUNCTION_29	IF_2	CALL_4
0x40015fb	      0xba3a000000	                           mov edx, 0x3a	       913	setup.c	FUNCTION_29	IF_2	CALL_4
0x4001600	          0x4889de	                            mov rsi, rbx	       913	setup.c	FUNCTION_29	IF_2	CALL_4
0x4001603	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       913	setup.c	FUNCTION_29	IF_2	CALL_4
0x4001608	      0xe800000000	                          call 0x400160d	       913	setup.c	FUNCTION_29	IF_2	CALL_4
0x400160d	      0x488d4c242c	                   lea rcx, [rsp + 0x2c]	       914	setup.c	FUNCTION_29	IF_2	CALL_5
0x4001612	      0xba00000000	                              mov edx, 0	       914	setup.c	FUNCTION_29	IF_2	CALL_5
0x4001617	      0xbe00000000	                              mov esi, 0	       914	setup.c	FUNCTION_29	IF_2	CALL_5
0x400161c	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       914	setup.c	FUNCTION_29	IF_2	CALL_5
0x4001621	      0xe800000000	                          call 0x4001626	       914	setup.c	FUNCTION_29	IF_2	CALL_5
0x4001626	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       916	setup.c	FUNCTION_29	IF_2	CALL_6
0x400162a	      0x488d742430	                   lea rsi, [rsp + 0x30]	       916	setup.c	FUNCTION_29	IF_2	CALL_6
0x400162f	      0xe800000000	                          call 0x4001634	       916	setup.c	FUNCTION_29	IF_2	CALL_6
0x4001634	          0x4189c4	                           mov r12d, eax	       916	setup.c	FUNCTION_29	IF_2	CALL_6
0x4001637	      0xbe00000000	                              mov esi, 0	       917	setup.c	FUNCTION_29	IF_2	CALL_7
0x400163c	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       917	setup.c	FUNCTION_29	IF_2	CALL_7
0x4001641	      0xe800000000	                          call 0x4001646	       917	setup.c	FUNCTION_29	IF_2	CALL_7
0x4001646	          0x4585e4	                         test r12d, r12d	       921	setup.c	FUNCTION_29	IF_3
0x4001649	      0xb8ffffffff	                     mov eax, 0xffffffff	       921	setup.c	FUNCTION_29	IF_3
0x400164e	        0x440f48e0	                         cmovs r12d, eax	       921	setup.c	FUNCTION_29	IF_3
0x4001652	      0xbe00000000	                              mov esi, 0	       934	setup.c	FUNCTION_29	CALL_8
0x4001657	      0xbf00000000	                              mov edi, 0	       934	setup.c	FUNCTION_29	CALL_8
0x400165c	      0xe800000000	                          call 0x4001661	       934	setup.c	FUNCTION_29	CALL_8
0x4001661	          0x4189c7	                           mov r15d, eax	       934	setup.c	FUNCTION_29	CALL_8
0x4001664	    0x48c744240800	                  mov qword [rsp + 8], 0	       896	setup.c	FUNCTION_29
0x400166d	            0x85c0	                           test eax, eax	       935	setup.c	FUNCTION_29	IF_4
0x400166f	            0x7518	                           jne 0x4001689	       935	setup.c	FUNCTION_29	IF_4
0x4001671	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       936	setup.c	FUNCTION_29	CALL_9
0x4001675	      0xba00000000	                              mov edx, 0	       936	setup.c	FUNCTION_29	CALL_9
0x400167a	      0xbe00000000	                              mov esi, 0	       936	setup.c	FUNCTION_29	CALL_9
0x400167f	      0xe85cebffff	              call sym.get_device_or_die	       936	setup.c	FUNCTION_29	CALL_9
0x4001684	      0x4889442408	                mov qword [rsp + 8], rax	       936	setup.c	FUNCTION_29	CALL_9
0x4001689	        0x4c8b6d08	                mov r13, qword [rbp + 8]	       938	setup.c	FUNCTION_29	FOR_1
0x400168d	          0x4489eb	                           mov ebx, r13d	       938	setup.c	FUNCTION_29	FOR_1
0x4001690	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	       938	setup.c	FUNCTION_29	FOR_1
0x4001698	        0x4183fd01	                             cmp r13d, 1	       940	setup.c	FUNCTION_29	FOR_1	IF_5
0x400169c	            0x7e3f	                           jle 0x40016dd	       940	setup.c	FUNCTION_29	FOR_1	IF_5
0x400169e	        0x488b4500	                    mov rax, qword [rbp]	       141	strbuf.h	FUNCTION_70
0x40016a2	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_70
0x40016a5	            0x7409	                            je 0x40016b0	       141	strbuf.h	FUNCTION_70
0x40016a7	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_72	IF_1	CALL_1
0x40016ab	          0x4c39e8	                            cmp rax, r13	       227	strbuf.h	FUNCTION_72	IF_1	CALL_1
0x40016ae	            0x750d	                           jne 0x40016bd	       227	strbuf.h	FUNCTION_72	IF_1	CALL_1
0x40016b0	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_72	CALL_2
0x40016b5	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_72	CALL_2
0x40016b8	      0xe800000000	                          call 0x40016bd	       228	strbuf.h	FUNCTION_72	CALL_2
0x40016bd	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_72
0x40016c1	        0x488b4508	                mov rax, qword [rbp + 8]	       229	strbuf.h	FUNCTION_72
0x40016c5	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_72
0x40016c9	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_72
0x40016cd	        0xc604022f	              mov byte [rdx + rax], 0x2f	       229	strbuf.h	FUNCTION_72
0x40016d1	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_72
0x40016d5	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_72
0x40016d9	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_72
0x40016dd	      0xba04000000	                              mov edx, 4	       279	strbuf.h	FUNCTION_73	CALL_2
0x40016e2	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_73	CALL_2
0x40016e7	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_73	CALL_2
0x40016ea	      0xe800000000	                          call 0x40016ef	       279	strbuf.h	FUNCTION_73	CALL_2
0x40016ef	          0x4585f6	                         test r14d, r14d	       943	setup.c	FUNCTION_29	FOR_1	CALL_12
0x40016f2	     0xf84bf010000	                            je 0x40018b7	       943	setup.c	FUNCTION_29	FOR_1	CALL_12
0x40016f8	      0xe9d9010000	                           jmp 0x40018d6	       943	setup.c	FUNCTION_29	FOR_1	CALL_12
0x40016fd	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	       947	setup.c	FUNCTION_29	FOR_1	IF_6	IF_7
0x4001701	          0x83f802	                              cmp eax, 2	       946	setup.c	FUNCTION_29	FOR_1	IF_6	IF_7
0x4001704	            0x7518	                           jne 0x400171e	       946	setup.c	FUNCTION_29	FOR_1	IF_6	IF_7
0x4001706	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       949	setup.c	FUNCTION_29	FOR_1	IF_6	IF_7	IF_8	CALL_13
0x400170a	      0xe800000000	                          call 0x400170f	       949	setup.c	FUNCTION_29	FOR_1	IF_6	IF_7	IF_8	CALL_13
0x400170f	            0x85c0	                           test eax, eax	       950	setup.c	FUNCTION_29	FOR_1	IF_6	IF_7	IF_8
0x4001711	      0xbe00000000	                              mov esi, 0	       950	setup.c	FUNCTION_29	FOR_1	IF_6	IF_7	IF_8
0x4001716	    0x480f44742410	           cmove rsi, qword [rsp + 0x10]	       950	setup.c	FUNCTION_29	FOR_1	IF_6	IF_7	IF_8
0x400171c	            0xeb09	                           jmp 0x4001727	       950	setup.c	FUNCTION_29	FOR_1	IF_6	IF_7	IF_8
0x400171e	          0x83f801	                              cmp eax, 1	       951	setup.c	FUNCTION_29	FOR_1	IF_6	ELSE_1	IF_9
0x4001721	     0xf8564010000	                           jne 0x400188b	       951	setup.c	FUNCTION_29	FOR_1	IF_6	ELSE_1	IF_9
0x4001727	          0x4963d5	                        movsxd rdx, r13d	       954	setup.c	FUNCTION_29	FOR_1	CALL_14
0x400172a	        0x488b4500	                    mov rax, qword [rbp]	       162	strbuf.h	FUNCTION_71	IF_1
0x400172e	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_71	IF_1
0x4001732	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_71	IF_1
0x4001736	          0x4839c2	                            cmp rdx, rax	       162	strbuf.h	FUNCTION_71	IF_1
0x4001739	            0x760f	                           jbe 0x400174a	       162	strbuf.h	FUNCTION_71	IF_1
0x400173b	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_71	CALL_1
0x4001740	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_71	CALL_1
0x4001745	      0xe800000000	                          call 0x400174a	       163	strbuf.h	FUNCTION_71	CALL_1
0x400174a	        0x48895508	                mov qword [rbp + 8], rdx	       164	strbuf.h	FUNCTION_71
0x400174e	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       165	strbuf.h	FUNCTION_71	IF_2
0x4001752	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_71	IF_2
0x4001758	            0x7406	                            je 0x4001760	       165	strbuf.h	FUNCTION_71	IF_2
0x400175a	        0xc6041000	                 mov byte [rax + rdx], 0	       166	strbuf.h	FUNCTION_71	IF_2
0x400175e	            0xeb22	                           jmp 0x4001782	       166	strbuf.h	FUNCTION_71	IF_2
0x4001760	    0x803d00000000	                cmp byte [0x04001767], 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001767	            0x7419	                            je 0x4001782	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001769	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x400176e	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001773	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001778	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x400177d	      0xe800000000	                          call 0x4001782	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001782	          0x4885f6	                           test rsi, rsi	       955	setup.c	FUNCTION_29	FOR_1	IF_10
0x4001785	            0x742f	                            je 0x40017b6	       955	setup.c	FUNCTION_29	FOR_1	IF_10
0x4001787	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_73	CALL_2
0x400178c	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_73	CALL_2
0x4001793	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_73	CALL_2
0x4001796	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_73	CALL_2
0x4001798	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_73	CALL_2
0x400179b	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_73	CALL_2
0x400179e	        0x488d50ff	                      lea rdx, [rax - 1]	       279	strbuf.h	FUNCTION_73	CALL_2
0x40017a2	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       279	strbuf.h	FUNCTION_73	CALL_2
0x40017a7	      0xe800000000	                          call 0x40017ac	       279	strbuf.h	FUNCTION_73	CALL_2
0x40017ac	      0xb802000000	                              mov eax, 2	       957	setup.c	FUNCTION_29	FOR_1	IF_10
0x40017b1	      0xe9ef000000	                           jmp 0x40018a5	       957	setup.c	FUNCTION_29	FOR_1	IF_10
0x40017b6	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       960	setup.c	FUNCTION_29	FOR_1	IF_11	CALL_16
0x40017ba	      0xe800000000	                          call 0x40017bf	       960	setup.c	FUNCTION_29	FOR_1	IF_11	CALL_16
0x40017bf	            0x85c0	                           test eax, eax	       960	setup.c	FUNCTION_29	FOR_1	IF_11	CALL_16
0x40017c1	            0x741e	                            je 0x40017e1	       960	setup.c	FUNCTION_29	FOR_1	IF_11	CALL_16
0x40017c3	      0xba01000000	                              mov edx, 1	       279	strbuf.h	FUNCTION_73	CALL_2
0x40017c8	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_73	CALL_2
0x40017cd	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       279	strbuf.h	FUNCTION_73	CALL_2
0x40017d2	      0xe800000000	                          call 0x40017d7	       279	strbuf.h	FUNCTION_73	CALL_2
0x40017d7	      0xb803000000	                              mov eax, 3	       962	setup.c	FUNCTION_29	FOR_1	IF_11
0x40017dc	      0xe9c4000000	                           jmp 0x40018a5	       962	setup.c	FUNCTION_29	FOR_1	IF_11
0x40017e1	        0x4183fd01	                             cmp r13d, 1	       965	setup.c	FUNCTION_29	FOR_1	IF_12
0x40017e5	     0xf8ea7000000	                           jle 0x4001892	       965	setup.c	FUNCTION_29	FOR_1	IF_12
0x40017eb	          0x83eb01	                              sub ebx, 1	       968	setup.c	FUNCTION_29	FOR_1	WHILE_1
0x40017ee	          0x4139dc	                           cmp r12d, ebx	       968	setup.c	FUNCTION_29	FOR_1	WHILE_1
0x40017f1	     0xf8da2000000	                           jge 0x4001899	       968	setup.c	FUNCTION_29	FOR_1	WHILE_1
0x40017f7	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       968	setup.c	FUNCTION_29	FOR_1	WHILE_1
0x40017fb	          0x4863d3	                         movsxd rdx, ebx	       968	setup.c	FUNCTION_29	FOR_1	WHILE_1
0x40017fe	        0x803c102f	              cmp byte [rax + rdx], 0x2f	       968	setup.c	FUNCTION_29	FOR_1	WHILE_1
0x4001802	            0x75e7	                           jne 0x40017eb	       968	setup.c	FUNCTION_29	FOR_1	WHILE_1
0x4001804	            0x85db	                           test ebx, ebx	       973	setup.c	FUNCTION_29	FOR_1	CALL_18
0x4001806	      0xba01000000	                              mov edx, 1	       973	setup.c	FUNCTION_29	FOR_1	CALL_18
0x400180b	           0xf4fd3	                          cmovg edx, ebx	       973	setup.c	FUNCTION_29	FOR_1	CALL_18
0x400180e	          0x4863d2	                         movsxd rdx, edx	       973	setup.c	FUNCTION_29	FOR_1	CALL_18
0x4001811	        0x488b4d00	                    mov rcx, qword [rbp]	       162	strbuf.h	FUNCTION_71	IF_1
0x4001815	        0x4883f901	                              cmp rcx, 1	       162	strbuf.h	FUNCTION_71	IF_1
0x4001819	        0x4883d1ff	             adc rcx, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_71	IF_1
0x400181d	          0x4839ca	                            cmp rdx, rcx	       162	strbuf.h	FUNCTION_71	IF_1
0x4001820	            0x760f	                           jbe 0x4001831	       162	strbuf.h	FUNCTION_71	IF_1
0x4001822	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_71	CALL_1
0x4001827	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_71	CALL_1
0x400182c	      0xe800000000	                          call 0x4001831	       163	strbuf.h	FUNCTION_71	CALL_1
0x4001831	        0x48895508	                mov qword [rbp + 8], rdx	       164	strbuf.h	FUNCTION_71
0x4001835	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_71	IF_2
0x400183b	            0x7406	                            je 0x4001843	       165	strbuf.h	FUNCTION_71	IF_2
0x400183d	        0xc6041000	                 mov byte [rax + rdx], 0	       166	strbuf.h	FUNCTION_71	IF_2
0x4001841	            0xeb22	                           jmp 0x4001865	       166	strbuf.h	FUNCTION_71	IF_2
0x4001843	    0x803d00000000	                cmp byte [0x0400184a], 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x400184a	            0x7419	                            je 0x4001865	       168	strbuf.h	FUNCTION_71	CALL_2
0x400184c	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001851	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001856	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x400185b	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001860	      0xe800000000	                          call 0x4001865	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001865	          0x4585ff	                         test r15d, r15d	       974	setup.c	FUNCTION_29	FOR_1	IF_14
0x4001868	     0xf851bfeffff	                           jne 0x4001689	       974	setup.c	FUNCTION_29	FOR_1	IF_14
0x400186e	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       975	setup.c	FUNCTION_29	FOR_1	IF_14	CALL_19
0x4001872	            0x89da	                            mov edx, ebx	       975	setup.c	FUNCTION_29	FOR_1	IF_14	CALL_19
0x4001874	      0xbe00000000	                              mov esi, 0	       975	setup.c	FUNCTION_29	FOR_1	IF_14	CALL_19
0x4001879	      0xe862e9ffff	              call sym.get_device_or_die	       975	setup.c	FUNCTION_29	FOR_1	IF_14	CALL_19
0x400187e	      0x4839442408	                cmp qword [rsp + 8], rax	       974	setup.c	FUNCTION_29	FOR_1	IF_14
0x4001883	     0xf8400feffff	                            je 0x4001689	       974	setup.c	FUNCTION_29	FOR_1	IF_14
0x4001889	            0xeb15	                           jmp 0x40018a0	       974	setup.c	FUNCTION_29	FOR_1	IF_14
0x400188b	      0xb8fdffffff	                     mov eax, 0xfffffffd	       952	setup.c	FUNCTION_29	FOR_1	IF_6	ELSE_1	IF_9
0x4001890	            0xeb13	                           jmp 0x40018a5	       952	setup.c	FUNCTION_29	FOR_1	IF_6	ELSE_1	IF_9
0x4001892	      0xb8ffffffff	                     mov eax, 0xffffffff	       966	setup.c	FUNCTION_29	FOR_1	IF_12
0x4001897	            0xeb0c	                           jmp 0x40018a5	       966	setup.c	FUNCTION_29	FOR_1	IF_12
0x4001899	      0xb8ffffffff	                     mov eax, 0xffffffff	       971	setup.c	FUNCTION_29	FOR_1	IF_13
0x400189e	            0xeb05	                           jmp 0x40018a5	       971	setup.c	FUNCTION_29	FOR_1	IF_13
0x40018a0	      0xb8feffffff	                     mov eax, 0xfffffffe	       976	setup.c	FUNCTION_29	FOR_1	IF_14
0x40018a5	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       978	setup.c	FUNCTION_29
0x40018aa	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       978	setup.c	FUNCTION_29
0x40018b3	            0x7445	                            je 0x40018fa	       978	setup.c	FUNCTION_29
0x40018b5	            0xeb3e	                           jmp 0x40018f5	       978	setup.c	FUNCTION_29
0x40018b7	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       943	setup.c	FUNCTION_29	FOR_1	CALL_12
0x40018bb	      0x488d74242c	                   lea rsi, [rsp + 0x2c]	       943	setup.c	FUNCTION_29	FOR_1	CALL_12
0x40018c0	      0xe800000000	                          call 0x40018c5	       943	setup.c	FUNCTION_29	FOR_1	CALL_12
0x40018c5	          0x4889c6	                            mov rsi, rax	       943	setup.c	FUNCTION_29	FOR_1	CALL_12
0x40018c8	          0x4885c0	                           test rax, rax	       945	setup.c	FUNCTION_29	FOR_1	IF_6
0x40018cb	     0xf8556feffff	                           jne 0x4001727	       945	setup.c	FUNCTION_29	FOR_1	IF_6
0x40018d1	      0xe927feffff	                           jmp 0x40016fd	       945	setup.c	FUNCTION_29	FOR_1	IF_6
0x40018d6	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       943	setup.c	FUNCTION_29	FOR_1	CALL_12
0x40018da	      0xbe00000000	                              mov esi, 0	       943	setup.c	FUNCTION_29	FOR_1	CALL_12
0x40018df	      0xe800000000	                          call 0x40018e4	       943	setup.c	FUNCTION_29	FOR_1	CALL_12
0x40018e4	          0x4889c6	                            mov rsi, rax	       943	setup.c	FUNCTION_29	FOR_1	CALL_12
0x40018e7	          0x4885c0	                           test rax, rax	       945	setup.c	FUNCTION_29	FOR_1	IF_6
0x40018ea	     0xf8537feffff	                           jne 0x4001727	       945	setup.c	FUNCTION_29	FOR_1	IF_6
0x40018f0	      0xe911feffff	                           jmp 0x4001706	       945	setup.c	FUNCTION_29	FOR_1	IF_6
0x40018f5	      0xe800000000	                          call 0x40018fa	       978	setup.c	FUNCTION_29
0x40018fa	        0x4883c468	                           add rsp, 0x68	       978	setup.c	FUNCTION_29
0x40018fe	              0x5b	                                 pop rbx	       978	setup.c	FUNCTION_29
0x40018ff	              0x5d	                                 pop rbp	       978	setup.c	FUNCTION_29
0x4001900	            0x415c	                                 pop r12	       978	setup.c	FUNCTION_29
0x4001902	            0x415d	                                 pop r13	       978	setup.c	FUNCTION_29
0x4001904	            0x415e	                                 pop r14	       978	setup.c	FUNCTION_29
0x4001906	            0x415f	                                 pop r15	       978	setup.c	FUNCTION_29
0x4001908	              0xc3	                                     ret	       978	setup.c	FUNCTION_29
is_nonbare_repository_dir	CALL,6:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,2:ELSE,0:functions,0	85
0x40013f8	              0x55	                                push rbp	       350	setup.c	FUNCTION_13
0x40013f9	              0x53	                                push rbx	       350	setup.c	FUNCTION_13
0x40013fa	        0x4883ec18	                           sub rsp, 0x18	       350	setup.c	FUNCTION_13
0x40013fe	    0x64488b042528	                mov rax, qword fs:[0x28]	       350	setup.c	FUNCTION_13
0x4001407	      0x4889442408	                mov qword [rsp + 8], rax	       350	setup.c	FUNCTION_13
0x400140c	            0x31c0	                            xor eax, eax	       350	setup.c	FUNCTION_13
0x400140e	        0x488b6f08	                mov rbp, qword [rdi + 8]	       353	setup.c	FUNCTION_13
0x4001412	          0x4885ed	                           test rbp, rbp	       354	setup.c	FUNCTION_13	CALL_1
0x4001415	            0x7519	                           jne 0x4001430	       354	setup.c	FUNCTION_13	CALL_1
0x4001417	      0xb900000000	                              mov ecx, 0	       354	setup.c	FUNCTION_13	CALL_1
0x400141c	      0xba62010000	                          mov edx, 0x162	       354	setup.c	FUNCTION_13	CALL_1
0x4001421	      0xbe00000000	                              mov esi, 0	       354	setup.c	FUNCTION_13	CALL_1
0x4001426	      0xbf00000000	                              mov edi, 0	       354	setup.c	FUNCTION_13	CALL_1
0x400142b	      0xe800000000	                          call 0x4001430	       354	setup.c	FUNCTION_13	CALL_1
0x4001430	          0x4889fb	                            mov rbx, rdi	       354	setup.c	FUNCTION_13	CALL_1
0x4001433	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       595	strbuf.h	FUNCTION_78	IF_1
0x4001437	      0x807c28ff2f	         cmp byte [rax + rbp - 1], 0x2f 	       595	strbuf.h	FUNCTION_78	IF_1
0x400143c	            0x743e	                            je 0x400147c	       595	strbuf.h	FUNCTION_78	IF_1
0x400143e	          0x488b07	                    mov rax, qword [rdi]	       141	strbuf.h	FUNCTION_70
0x4001441	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_70
0x4001444	            0x7409	                            je 0x400144f	       141	strbuf.h	FUNCTION_70
0x4001446	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_72	IF_1	CALL_1
0x400144a	          0x4839c5	                            cmp rbp, rax	       227	strbuf.h	FUNCTION_72	IF_1	CALL_1
0x400144d	            0x750d	                           jne 0x400145c	       227	strbuf.h	FUNCTION_72	IF_1	CALL_1
0x400144f	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_72	CALL_2
0x4001454	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_72	CALL_2
0x4001457	      0xe800000000	                          call 0x400145c	       228	strbuf.h	FUNCTION_72	CALL_2
0x400145c	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_72
0x4001460	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_72
0x4001464	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_72
0x4001468	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_72
0x400146c	        0xc604022f	              mov byte [rdx + rax], 0x2f	       229	strbuf.h	FUNCTION_72
0x4001470	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_72
0x4001474	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_72
0x4001478	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_72
0x400147c	      0xba04000000	                              mov edx, 4	       279	strbuf.h	FUNCTION_73	CALL_2
0x4001481	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_73	CALL_2
0x4001486	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_73	CALL_2
0x4001489	      0xe800000000	                          call 0x400148e	       279	strbuf.h	FUNCTION_73	CALL_2
0x400148e	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       357	setup.c	FUNCTION_13	IF_1	CALL_5
0x4001492	      0x488d742404	                      lea rsi, [rsp + 4]	       357	setup.c	FUNCTION_13	IF_1	CALL_5
0x4001497	      0xe800000000	                          call 0x400149c	       357	setup.c	FUNCTION_13	IF_1	CALL_5
0x400149c	      0xb901000000	                              mov ecx, 1	       358	setup.c	FUNCTION_13	IF_1
0x40014a1	          0x4885c0	                           test rax, rax	       357	setup.c	FUNCTION_13	IF_1	CALL_5
0x40014a4	            0x7511	                           jne 0x40014b7	       357	setup.c	FUNCTION_13	IF_1	CALL_5
0x40014a6	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       357	setup.c	FUNCTION_13	IF_1	CALL_5
0x40014aa	      0xe800000000	                          call 0x40014af	       357	setup.c	FUNCTION_13	IF_1	CALL_5
0x40014af	            0x85c0	                           test eax, eax	       351	setup.c	FUNCTION_13
0x40014b1	           0xf95c1	                                setne cl	       351	setup.c	FUNCTION_13
0x40014b4	           0xfb6c9	                           movzx ecx, cl	       351	setup.c	FUNCTION_13
0x40014b7	        0x8b442404	                mov eax, dword [rsp + 4]	       359	setup.c	FUNCTION_13	IF_2
0x40014bb	          0x83e803	                              sub eax, 3	       359	setup.c	FUNCTION_13	IF_2
0x40014be	          0x83f801	                              cmp eax, 1	       361	setup.c	FUNCTION_13	IF_2
0x40014c1	      0xb801000000	                              mov eax, 1	       361	setup.c	FUNCTION_13	IF_2
0x40014c6	           0xf46c8	                         cmovbe ecx, eax	       361	setup.c	FUNCTION_13	IF_2
0x40014c9	          0x488b13	                    mov rdx, qword [rbx]	       162	strbuf.h	FUNCTION_71	IF_1
0x40014cc	        0x4883fa01	                              cmp rdx, 1	       162	strbuf.h	FUNCTION_71	IF_1
0x40014d0	        0x4883d2ff	             adc rdx, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_71	IF_1
0x40014d4	          0x4839d5	                            cmp rbp, rdx	       162	strbuf.h	FUNCTION_71	IF_1
0x40014d7	            0x760f	                           jbe 0x40014e8	       162	strbuf.h	FUNCTION_71	IF_1
0x40014d9	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_71	CALL_1
0x40014de	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_71	CALL_1
0x40014e3	      0xe800000000	                          call 0x40014e8	       163	strbuf.h	FUNCTION_71	CALL_1
0x40014e8	        0x48896b08	                mov qword [rbx + 8], rbp	       164	strbuf.h	FUNCTION_71
0x40014ec	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       165	strbuf.h	FUNCTION_71	IF_2
0x40014f0	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_71	IF_2
0x40014f6	            0x7406	                            je 0x40014fe	       165	strbuf.h	FUNCTION_71	IF_2
0x40014f8	        0xc6042800	                 mov byte [rax + rbp], 0	       166	strbuf.h	FUNCTION_71	IF_2
0x40014fc	            0xeb22	                           jmp 0x4001520	       166	strbuf.h	FUNCTION_71	IF_2
0x40014fe	    0x803d00000000	                cmp byte [0x04001505], 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001505	            0x7419	                            je 0x4001520	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001507	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x400150c	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001511	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001516	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x400151b	      0xe800000000	                          call 0x4001520	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001520	            0x89c8	                            mov eax, ecx	       364	setup.c	FUNCTION_13
0x4001522	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       364	setup.c	FUNCTION_13
0x4001527	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       364	setup.c	FUNCTION_13
0x4001530	            0x7405	                            je 0x4001537	       364	setup.c	FUNCTION_13
0x4001532	      0xe800000000	                          call 0x4001537	       364	setup.c	FUNCTION_13
0x4001537	        0x4883c418	                           add rsp, 0x18	       364	setup.c	FUNCTION_13
0x400153b	              0x5b	                                 pop rbx	       364	setup.c	FUNCTION_13
0x400153c	              0x5d	                                 pop rbp	       364	setup.c	FUNCTION_13
0x400153d	              0xc3	                                     ret	       364	setup.c	FUNCTION_13
verify_filename	CALL,5:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,2:ELSE,0:functions,0	60
0x400069b	            0x4154	                                push r12	       232	setup.c	FUNCTION_8
0x400069d	              0x55	                                push rbp	       232	setup.c	FUNCTION_8
0x400069e	              0x53	                                push rbx	       232	setup.c	FUNCTION_8
0x400069f	          0x4889f3	                            mov rbx, rsi	       232	setup.c	FUNCTION_8
0x40006a2	          0x803e2d	                    cmp byte [rsi], 0x2d	       233	setup.c	FUNCTION_8	IF_1
0x40006a5	            0x7524	                           jne 0x40006cb	       233	setup.c	FUNCTION_8	IF_1
0x40006a7	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x40006ac	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x40006b1	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x40006b6	      0xe800000000	                          call 0x40006bb	        54	gettext.h	FUNCTION_67
0x40006bb	          0x4889de	                            mov rsi, rbx	       234	setup.c	FUNCTION_8	CALL_2
0x40006be	          0x4889c7	                            mov rdi, rax	       234	setup.c	FUNCTION_8	CALL_2
0x40006c1	      0xb800000000	                              mov eax, 0	       234	setup.c	FUNCTION_8	CALL_2
0x40006c6	      0xe800000000	                          call 0x40006cb	       234	setup.c	FUNCTION_8	CALL_2
0x40006cb	          0x4889fd	                            mov rbp, rdi	       234	setup.c	FUNCTION_8	CALL_2
0x40006ce	          0x4189d4	                           mov r12d, edx	       234	setup.c	FUNCTION_8	CALL_2
0x40006d1	          0x4889f7	                            mov rdi, rsi	       199	setup.c	FUNCTION_7	IF_1	CALL_1
0x40006d4	      0xe800000000	                          call 0x40006d9	       199	setup.c	FUNCTION_7	IF_1	CALL_1
0x40006d9	            0x85c0	                           test eax, eax	       199	setup.c	FUNCTION_7	IF_1	CALL_1
0x40006db	     0xf848a000000	                            je 0x400076b	       199	setup.c	FUNCTION_7	IF_1	CALL_1
0x40006e1	      0xbe00000000	                              mov esi, 0	       203	setup.c	FUNCTION_7	IF_2	CALL_2
0x40006e6	          0x4889df	                            mov rdi, rbx	       203	setup.c	FUNCTION_7	IF_2	CALL_2
0x40006e9	      0xe800000000	                          call 0x40006ee	       203	setup.c	FUNCTION_7	IF_2	CALL_2
0x40006ee	            0x85c0	                           test eax, eax	       235	setup.c	FUNCTION_8	IF_2	CALL_4
0x40006f0	            0x7579	                           jne 0x400076b	       235	setup.c	FUNCTION_8	IF_2	CALL_4
0x40006f2	          0x4889de	                            mov rsi, rbx	       235	setup.c	FUNCTION_8	IF_2	CALL_4
0x40006f5	          0x4889ef	                            mov rdi, rbp	       235	setup.c	FUNCTION_8	IF_2	CALL_4
0x40006f8	      0xe800000000	                          call 0x40006fd	       235	setup.c	FUNCTION_8	IF_2	CALL_4
0x40006fd	            0x85c0	                           test eax, eax	       235	setup.c	FUNCTION_8	IF_2	CALL_4
0x40006ff	            0x756a	                           jne 0x400076b	       235	setup.c	FUNCTION_8	IF_2	CALL_4
0x4000701	          0x4585e4	                         test r12d, r12d	       171	setup.c	FUNCTION_6	IF_1
0x4000704	            0x7524	                           jne 0x400072a	       171	setup.c	FUNCTION_6	IF_1
0x4000706	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x400070b	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x4000710	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x4000715	      0xe800000000	                          call 0x400071a	        54	gettext.h	FUNCTION_67
0x400071a	          0x4889de	                            mov rsi, rbx	       172	setup.c	FUNCTION_6	IF_1	CALL_2
0x400071d	          0x4889c7	                            mov rdi, rax	       172	setup.c	FUNCTION_6	IF_1	CALL_2
0x4000720	      0xb800000000	                              mov eax, 0	       172	setup.c	FUNCTION_6	IF_1	CALL_2
0x4000725	      0xe800000000	                          call 0x400072a	       172	setup.c	FUNCTION_6	IF_1	CALL_2
0x400072a	          0x803b3a	                    cmp byte [rbx], 0x3a	       181	setup.c	FUNCTION_6	IF_2
0x400072d	            0x750d	                           jne 0x400073c	       181	setup.c	FUNCTION_6	IF_2
0x400072f	         0xfb64301	               movzx eax, byte [rbx + 1]	       181	setup.c	FUNCTION_6	IF_2
0x4000733	    0xf68000000000	                      test byte [rax], 6	       181	setup.c	FUNCTION_6	IF_2
0x400073a	            0x740b	                            je 0x4000747	       181	setup.c	FUNCTION_6	IF_2
0x400073c	          0x4889ee	                            mov rsi, rbp	       182	setup.c	FUNCTION_6	CALL_3
0x400073f	          0x4889df	                            mov rdi, rbx	       182	setup.c	FUNCTION_6	CALL_3
0x4000742	      0xe800000000	                          call 0x4000747	       182	setup.c	FUNCTION_6	CALL_3
0x4000747	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x400074c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x4000751	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x4000756	      0xe800000000	                          call 0x400075b	        54	gettext.h	FUNCTION_67
0x400075b	          0x4889de	                            mov rsi, rbx	       185	setup.c	FUNCTION_6	CALL_5
0x400075e	          0x4889c7	                            mov rdi, rax	       185	setup.c	FUNCTION_6	CALL_5
0x4000761	      0xb800000000	                              mov eax, 0	       185	setup.c	FUNCTION_6	CALL_5
0x4000766	      0xe800000000	                          call 0x400076b	       185	setup.c	FUNCTION_6	CALL_5
0x400076b	              0x5b	                                 pop rbx	       238	setup.c	FUNCTION_8
0x400076c	              0x5d	                                 pop rbp	       238	setup.c	FUNCTION_8
0x400076d	            0x415c	                                 pop r12	       238	setup.c	FUNCTION_8
0x400076f	              0xc3	                                     ret	       238	setup.c	FUNCTION_8
check_repository_format	CALL,2:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,0:ELSE,0:functions,0	17
0x40027ea	        0x4883ec58	                           sub rsp, 0x58	      1180	setup.c	FUNCTION_33
0x40027ee	    0x64488b042528	                mov rax, qword fs:[0x28]	      1180	setup.c	FUNCTION_33
0x40027f7	      0x4889442448	             mov qword [rsp + 0x48], rax	      1180	setup.c	FUNCTION_33
0x40027fc	            0x31c0	                            xor eax, eax	      1180	setup.c	FUNCTION_33
0x40027fe	      0xe800000000	                          call 0x4002803	      1182	setup.c	FUNCTION_33	CALL_2
0x4002803	      0xba00000000	                              mov edx, 0	      1182	setup.c	FUNCTION_33	CALL_2
0x4002808	          0x4889e6	                            mov rsi, rsp	      1182	setup.c	FUNCTION_33	CALL_2
0x400280b	          0x4889c7	                            mov rdi, rax	      1182	setup.c	FUNCTION_33	CALL_2
0x400280e	      0xe8d7e6ffff	 call sym.check_repository_format_gently	      1182	setup.c	FUNCTION_33	CALL_2
0x4002813	    0x488b05000000	            mov rax, qword [0x0400281a] 	      1183	setup.c	FUNCTION_33
0x400281a	    0xc70001000000	                      mov dword [rax], 1	      1183	setup.c	FUNCTION_33
0x4002820	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      1184	setup.c	FUNCTION_33
0x4002825	    0x644833042528	                xor rax, qword fs:[0x28]	      1184	setup.c	FUNCTION_33
0x400282e	            0x7405	                            je 0x4002835	      1184	setup.c	FUNCTION_33
0x4002830	      0xe800000000	                          call 0x4002835	      1184	setup.c	FUNCTION_33
0x4002835	        0x4883c458	                           add rsp, 0x58	      1184	setup.c	FUNCTION_33
0x4002839	              0xc3	                                     ret	      1184	setup.c	FUNCTION_33
get_common_dir	CALL,3:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,1:ELSE,1:functions,0	27
0x4000953	              0x55	                                push rbp	       259	setup.c	FUNCTION_10
0x4000954	              0x53	                                push rbx	       259	setup.c	FUNCTION_10
0x4000955	        0x4883ec08	                              sub rsp, 8	       259	setup.c	FUNCTION_10
0x4000959	          0x4889fb	                            mov rbx, rdi	       259	setup.c	FUNCTION_10
0x400095c	          0x4889f5	                            mov rbp, rsi	       259	setup.c	FUNCTION_10
0x400095f	      0xbf00000000	                              mov edi, 0	       260	setup.c	FUNCTION_10	CALL_1
0x4000964	      0xe800000000	                          call 0x4000969	       260	setup.c	FUNCTION_10	CALL_1
0x4000969	          0x4885c0	                           test rax, rax	       261	setup.c	FUNCTION_10	IF_1
0x400096c	            0x742a	                            je 0x4000998	       261	setup.c	FUNCTION_10	IF_1
0x400096e	          0x4889c6	                            mov rsi, rax	       261	setup.c	FUNCTION_10	IF_1
0x4000971	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000976	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_73	CALL_2
0x400097d	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000980	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000982	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000985	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000989	          0x4889df	                            mov rdi, rbx	       279	strbuf.h	FUNCTION_73	CALL_2
0x400098c	      0xe800000000	                          call 0x4000991	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000991	      0xb801000000	                              mov eax, 1	       263	setup.c	FUNCTION_10	IF_1
0x4000996	            0xeb0b	                           jmp 0x40009a3	       263	setup.c	FUNCTION_10	IF_1
0x4000998	          0x4889ee	                            mov rsi, rbp	       265	setup.c	FUNCTION_10	ELSE_1	CALL_3
0x400099b	          0x4889df	                            mov rdi, rbx	       265	setup.c	FUNCTION_10	ELSE_1	CALL_3
0x400099e	      0xe800000000	                          call 0x40009a3	       265	setup.c	FUNCTION_10	ELSE_1	CALL_3
0x40009a3	        0x4883c408	                              add rsp, 8	       267	setup.c	FUNCTION_10
0x40009a7	              0x5b	                                 pop rbx	       267	setup.c	FUNCTION_10
0x40009a8	              0x5d	                                 pop rbp	       267	setup.c	FUNCTION_10
0x40009a9	              0xc3	                                     ret	       267	setup.c	FUNCTION_10
verify_non_filename	CALL,5:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,3:ELSE,0:functions,0	30
0x4000c9b	              0x55	                                push rbp	       246	setup.c	FUNCTION_9
0x4000c9c	              0x53	                                push rbx	       246	setup.c	FUNCTION_9
0x4000c9d	        0x4883ec08	                              sub rsp, 8	       246	setup.c	FUNCTION_9
0x4000ca1	          0x4889fd	                            mov rbp, rdi	       246	setup.c	FUNCTION_9
0x4000ca4	          0x4889f3	                            mov rbx, rsi	       246	setup.c	FUNCTION_9
0x4000ca7	      0xe800000000	                          call 0x4000cac	       247	setup.c	FUNCTION_9	IF_1	CALL_2
0x4000cac	            0x85c0	                           test eax, eax	       247	setup.c	FUNCTION_9	IF_1	CALL_2
0x4000cae	            0x7441	                            je 0x4000cf1	       247	setup.c	FUNCTION_9	IF_1	CALL_2
0x4000cb0	      0xe800000000	                          call 0x4000cb5	       247	setup.c	FUNCTION_9	IF_1	CALL_2
0x4000cb5	            0x85c0	                           test eax, eax	       247	setup.c	FUNCTION_9	IF_1	CALL_2
0x4000cb7	            0x7538	                           jne 0x4000cf1	       247	setup.c	FUNCTION_9	IF_1	CALL_2
0x4000cb9	          0x803b2d	                    cmp byte [rbx], 0x2d	       249	setup.c	FUNCTION_9	IF_2
0x4000cbc	            0x7433	                            je 0x4000cf1	       249	setup.c	FUNCTION_9	IF_2
0x4000cbe	          0x4889de	                            mov rsi, rbx	       251	setup.c	FUNCTION_9	IF_3	CALL_3
0x4000cc1	          0x4889ef	                            mov rdi, rbp	       251	setup.c	FUNCTION_9	IF_3	CALL_3
0x4000cc4	      0xe800000000	                          call 0x4000cc9	       251	setup.c	FUNCTION_9	IF_3	CALL_3
0x4000cc9	            0x85c0	                           test eax, eax	       251	setup.c	FUNCTION_9	IF_3	CALL_3
0x4000ccb	            0x7424	                            je 0x4000cf1	       251	setup.c	FUNCTION_9	IF_3	CALL_3
0x4000ccd	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x4000cd2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x4000cd7	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x4000cdc	      0xe800000000	                          call 0x4000ce1	        54	gettext.h	FUNCTION_67
0x4000ce1	          0x4889de	                            mov rsi, rbx	       253	setup.c	FUNCTION_9	CALL_5
0x4000ce4	          0x4889c7	                            mov rdi, rax	       253	setup.c	FUNCTION_9	CALL_5
0x4000ce7	      0xb800000000	                              mov eax, 0	       253	setup.c	FUNCTION_9	CALL_5
0x4000cec	      0xe800000000	                          call 0x4000cf1	       253	setup.c	FUNCTION_9	CALL_5
0x4000cf1	        0x4883c408	                              add rsp, 8	       256	setup.c	FUNCTION_9
0x4000cf5	              0x5b	                                 pop rbx	       256	setup.c	FUNCTION_9
0x4000cf6	              0x5d	                                 pop rbp	       256	setup.c	FUNCTION_9
0x4000cf7	              0xc3	                                     ret	       256	setup.c	FUNCTION_9
verify_repository_format	CALL,5:WHILE,0:FOR,1:SWITCH,0:DO,0:IF,2:ELSE,0:functions,0	60
0x4000e11	            0x4154	                                push r12	       501	setup.c	FUNCTION_20
0x4000e13	              0x55	                                push rbp	       501	setup.c	FUNCTION_20
0x4000e14	              0x53	                                push rbx	       501	setup.c	FUNCTION_20
0x4000e15	          0x4989f4	                            mov r12, rsi	       501	setup.c	FUNCTION_20
0x4000e18	            0x8b1f	                    mov ebx, dword [rdi]	       502	setup.c	FUNCTION_20	IF_1
0x4000e1a	          0x83fb01	                              cmp ebx, 1	       502	setup.c	FUNCTION_20	IF_1
0x4000e1d	            0x7e35	                           jle 0x4000e54	       502	setup.c	FUNCTION_20	IF_1
0x4000e1f	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x4000e24	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x4000e29	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x4000e2e	      0xe800000000	                          call 0x4000e33	        54	gettext.h	FUNCTION_67
0x4000e33	            0x89d9	                            mov ecx, ebx	       503	setup.c	FUNCTION_20	IF_1	CALL_2
0x4000e35	      0xba01000000	                              mov edx, 1	       503	setup.c	FUNCTION_20	IF_1	CALL_2
0x4000e3a	          0x4889c6	                            mov rsi, rax	       503	setup.c	FUNCTION_20	IF_1	CALL_2
0x4000e3d	          0x4c89e7	                            mov rdi, r12	       503	setup.c	FUNCTION_20	IF_1	CALL_2
0x4000e40	      0xb800000000	                              mov eax, 0	       503	setup.c	FUNCTION_20	IF_1	CALL_2
0x4000e45	      0xe800000000	                          call 0x4000e4a	       503	setup.c	FUNCTION_20	IF_1	CALL_2
0x4000e4a	      0xb8ffffffff	                     mov eax, 0xffffffff	       505	setup.c	FUNCTION_20	IF_1
0x4000e4f	      0xe991000000	                           jmp 0x4000ee5	       505	setup.c	FUNCTION_20	IF_1
0x4000e54	          0x4889fd	                            mov rbp, rdi	       505	setup.c	FUNCTION_20	IF_1
0x4000e57	            0x85db	                           test ebx, ebx	       508	setup.c	FUNCTION_20	IF_2
0x4000e59	     0xf8e81000000	                           jle 0x4000ee0	       508	setup.c	FUNCTION_20	IF_2
0x4000e5f	      0xb800000000	                              mov eax, 0	       519	setup.c	FUNCTION_20
0x4000e64	        0x837f2800	               cmp dword [rdi + 0x28], 0	       508	setup.c	FUNCTION_20	IF_2
0x4000e68	            0x747b	                            je 0x4000ee5	       508	setup.c	FUNCTION_20	IF_2
0x4000e6a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x4000e6f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x4000e74	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x4000e79	      0xe800000000	                          call 0x4000e7e	        54	gettext.h	FUNCTION_67
0x4000e7e	          0x4889c6	                            mov rsi, rax	        54	gettext.h	FUNCTION_67
0x4000e81	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000e86	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000e8d	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000e90	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000e92	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000e95	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000e99	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000e9c	      0xe800000000	                          call 0x4000ea1	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000ea1	      0xb8ffffffff	                     mov eax, 0xffffffff	       516	setup.c	FUNCTION_20	IF_2
0x4000ea6	        0x837d2800	               cmp dword [rbp + 0x28], 0	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x4000eaa	            0x7439	                            je 0x4000ee5	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x4000eac	      0xbb00000000	                              mov ebx, 0	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x4000eb1	          0x4863c3	                         movsxd rax, ebx	       514	setup.c	FUNCTION_20	IF_2	FOR_1	CALL_5
0x4000eb4	        0x48c1e004	                              shl rax, 4	       514	setup.c	FUNCTION_20	IF_2	FOR_1	CALL_5
0x4000eb8	        0x48034520	             add rax, qword [rbp + 0x20]	       514	setup.c	FUNCTION_20	IF_2	FOR_1	CALL_5
0x4000ebc	          0x488b10	                    mov rdx, qword [rax]	       514	setup.c	FUNCTION_20	IF_2	FOR_1	CALL_5
0x4000ebf	      0xbe00000000	                              mov esi, 0	       514	setup.c	FUNCTION_20	IF_2	FOR_1	CALL_5
0x4000ec4	          0x4c89e7	                            mov rdi, r12	       514	setup.c	FUNCTION_20	IF_2	FOR_1	CALL_5
0x4000ec7	      0xb800000000	                              mov eax, 0	       514	setup.c	FUNCTION_20	IF_2	FOR_1	CALL_5
0x4000ecc	      0xe800000000	                          call 0x4000ed1	       514	setup.c	FUNCTION_20	IF_2	FOR_1	CALL_5
0x4000ed1	          0x83c301	                              add ebx, 1	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x4000ed4	          0x395d28	            cmp dword [rbp + 0x28], ebx 	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x4000ed7	            0x77d8	                            ja 0x4000eb1	       513	setup.c	FUNCTION_20	IF_2	FOR_1
0x4000ed9	      0xb8ffffffff	                     mov eax, 0xffffffff	       516	setup.c	FUNCTION_20	IF_2
0x4000ede	            0xeb05	                           jmp 0x4000ee5	       516	setup.c	FUNCTION_20	IF_2
0x4000ee0	      0xb800000000	                              mov eax, 0	       519	setup.c	FUNCTION_20
0x4000ee5	              0x5b	                                 pop rbx	       520	setup.c	FUNCTION_20
0x4000ee6	              0x5d	                                 pop rbp	       520	setup.c	FUNCTION_20
0x4000ee7	            0x415c	                                 pop r12	       520	setup.c	FUNCTION_20
0x4000ee9	              0xc3	                                     ret	       520	setup.c	FUNCTION_20
read_gitfile_error_die	CALL,13:WHILE,0:FOR,0:SWITCH,1:DO,0:IF,0:ELSE,0:functions,0	64
0x400107f	              0x55	                                push rbp	       523	setup.c	FUNCTION_21
0x4001080	              0x53	                                push rbx	       523	setup.c	FUNCTION_21
0x4001081	        0x4883ec08	                              sub rsp, 8	       523	setup.c	FUNCTION_21
0x4001085	          0x83ff08	                              cmp edi, 8	       524	setup.c	FUNCTION_21	SWITCH_1
0x4001088	     0xf87e7000000	                            ja 0x4001175	       524	setup.c	FUNCTION_21	SWITCH_1
0x400108e	          0x4889f3	                            mov rbx, rsi	       524	setup.c	FUNCTION_21	SWITCH_1
0x4001091	          0x4889d5	                            mov rbp, rdx	       524	setup.c	FUNCTION_21	SWITCH_1
0x4001094	            0x89ff	                            mov edi, edi	       524	setup.c	FUNCTION_21	SWITCH_1
0x4001096	    0xff24fd000000	                       jmp qword [rdi*8]	       524	setup.c	FUNCTION_21	SWITCH_1
0x400109d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x40010a2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x40010a7	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x40010ac	      0xe800000000	                          call 0x40010b1	        54	gettext.h	FUNCTION_67
0x40010b1	          0x4889de	                            mov rsi, rbx	       530	setup.c	FUNCTION_21	SWITCH_1	CALL_2
0x40010b4	          0x4889c7	                            mov rdi, rax	       530	setup.c	FUNCTION_21	SWITCH_1	CALL_2
0x40010b7	      0xb800000000	                              mov eax, 0	       530	setup.c	FUNCTION_21	SWITCH_1	CALL_2
0x40010bc	      0xe800000000	                          call 0x40010c1	       530	setup.c	FUNCTION_21	SWITCH_1	CALL_2
0x40010c1	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x40010c6	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x40010cb	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x40010d0	      0xe800000000	                          call 0x40010d5	        54	gettext.h	FUNCTION_67
0x40010d5	          0x4889de	                            mov rsi, rbx	       532	setup.c	FUNCTION_21	SWITCH_1	CALL_4
0x40010d8	          0x4889c7	                            mov rdi, rax	       532	setup.c	FUNCTION_21	SWITCH_1	CALL_4
0x40010db	      0xb800000000	                              mov eax, 0	       532	setup.c	FUNCTION_21	SWITCH_1	CALL_4
0x40010e0	      0xe800000000	                          call 0x40010e5	       532	setup.c	FUNCTION_21	SWITCH_1	CALL_4
0x40010e5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x40010ea	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x40010ef	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x40010f4	      0xe800000000	                          call 0x40010f9	        54	gettext.h	FUNCTION_67
0x40010f9	          0x4889de	                            mov rsi, rbx	       534	setup.c	FUNCTION_21	SWITCH_1	CALL_6
0x40010fc	          0x4889c7	                            mov rdi, rax	       534	setup.c	FUNCTION_21	SWITCH_1	CALL_6
0x40010ff	      0xb800000000	                              mov eax, 0	       534	setup.c	FUNCTION_21	SWITCH_1	CALL_6
0x4001104	      0xe800000000	                          call 0x4001109	       534	setup.c	FUNCTION_21	SWITCH_1	CALL_6
0x4001109	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x400110e	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x4001113	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x4001118	      0xe800000000	                          call 0x400111d	        54	gettext.h	FUNCTION_67
0x400111d	          0x4889de	                            mov rsi, rbx	       536	setup.c	FUNCTION_21	SWITCH_1	CALL_8
0x4001120	          0x4889c7	                            mov rdi, rax	       536	setup.c	FUNCTION_21	SWITCH_1	CALL_8
0x4001123	      0xb800000000	                              mov eax, 0	       536	setup.c	FUNCTION_21	SWITCH_1	CALL_8
0x4001128	      0xe800000000	                          call 0x400112d	       536	setup.c	FUNCTION_21	SWITCH_1	CALL_8
0x400112d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x4001132	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x4001137	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x400113c	      0xe800000000	                          call 0x4001141	        54	gettext.h	FUNCTION_67
0x4001141	          0x4889de	                            mov rsi, rbx	       538	setup.c	FUNCTION_21	SWITCH_1	CALL_10
0x4001144	          0x4889c7	                            mov rdi, rax	       538	setup.c	FUNCTION_21	SWITCH_1	CALL_10
0x4001147	      0xb800000000	                              mov eax, 0	       538	setup.c	FUNCTION_21	SWITCH_1	CALL_10
0x400114c	      0xe800000000	                          call 0x4001151	       538	setup.c	FUNCTION_21	SWITCH_1	CALL_10
0x4001151	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x4001156	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x400115b	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x4001160	      0xe800000000	                          call 0x4001165	        54	gettext.h	FUNCTION_67
0x4001165	          0x4889ee	                            mov rsi, rbp	       540	setup.c	FUNCTION_21	SWITCH_1	CALL_12
0x4001168	          0x4889c7	                            mov rdi, rax	       540	setup.c	FUNCTION_21	SWITCH_1	CALL_12
0x400116b	      0xb800000000	                              mov eax, 0	       540	setup.c	FUNCTION_21	SWITCH_1	CALL_12
0x4001170	      0xe800000000	                          call 0x4001175	       540	setup.c	FUNCTION_21	SWITCH_1	CALL_12
0x4001175	      0xbf00000000	                              mov edi, 0	       542	setup.c	FUNCTION_21	SWITCH_1	CALL_13
0x400117a	      0xb800000000	                              mov eax, 0	       542	setup.c	FUNCTION_21	SWITCH_1	CALL_13
0x400117f	      0xe800000000	                          call 0x4001184	       542	setup.c	FUNCTION_21	SWITCH_1	CALL_13
0x4001184	        0x4883c408	                              add rsp, 8	       544	setup.c	FUNCTION_21
0x4001188	              0x5b	                                 pop rbx	       544	setup.c	FUNCTION_21
0x4001189	              0x5d	                                 pop rbp	       544	setup.c	FUNCTION_21
0x400118a	              0xc3	                                     ret	       544	setup.c	FUNCTION_21
daemonize	CALL,11:WHILE,0:FOR,0:SWITCH,1:DO,0:IF,1:ELSE,0:functions,0	36
0x40028ec	        0x4883ec08	                              sub rsp, 8	      1217	setup.c	FUNCTION_37
0x40028f0	      0xe800000000	                          call 0x40028f5	      1222	setup.c	FUNCTION_37	SWITCH_1	CALL_1
0x40028f5	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1222	setup.c	FUNCTION_37	SWITCH_1	CALL_1
0x40028f8	            0x7406	                            je 0x4002900	      1222	setup.c	FUNCTION_37	SWITCH_1	CALL_1
0x40028fa	            0x85c0	                           test eax, eax	      1222	setup.c	FUNCTION_37	SWITCH_1	CALL_1
0x40028fc	            0x742d	                            je 0x400292b	      1222	setup.c	FUNCTION_37	SWITCH_1	CALL_1
0x40028fe	            0xeb21	                           jmp 0x4002921	      1222	setup.c	FUNCTION_37	SWITCH_1	CALL_1
0x4002900	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x4002905	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x400290a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x400290f	      0xe800000000	                          call 0x4002914	        54	gettext.h	FUNCTION_67
0x4002914	          0x4889c7	                            mov rdi, rax	      1226	setup.c	FUNCTION_37	SWITCH_1	CALL_3
0x4002917	      0xb800000000	                              mov eax, 0	      1226	setup.c	FUNCTION_37	SWITCH_1	CALL_3
0x400291c	      0xe800000000	                          call 0x4002921	      1226	setup.c	FUNCTION_37	SWITCH_1	CALL_3
0x4002921	      0xbf00000000	                              mov edi, 0	      1228	setup.c	FUNCTION_37	SWITCH_1	CALL_4
0x4002926	      0xe800000000	                          call 0x400292b	      1228	setup.c	FUNCTION_37	SWITCH_1	CALL_4
0x400292b	      0xe800000000	                          call 0x4002930	      1230	setup.c	FUNCTION_37	IF_1	CALL_5
0x4002930	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1230	setup.c	FUNCTION_37	IF_1	CALL_5
0x4002933	            0x7521	                           jne 0x4002956	      1230	setup.c	FUNCTION_37	IF_1	CALL_5
0x4002935	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x400293a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x400293f	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x4002944	      0xe800000000	                          call 0x4002949	        54	gettext.h	FUNCTION_67
0x4002949	          0x4889c7	                            mov rdi, rax	      1231	setup.c	FUNCTION_37	CALL_7
0x400294c	      0xb800000000	                              mov eax, 0	      1231	setup.c	FUNCTION_37	CALL_7
0x4002951	      0xe800000000	                          call 0x4002956	      1231	setup.c	FUNCTION_37	CALL_7
0x4002956	      0xbf00000000	                              mov edi, 0	      1232	setup.c	FUNCTION_37	CALL_8
0x400295b	      0xe800000000	                          call 0x4002960	      1232	setup.c	FUNCTION_37	CALL_8
0x4002960	      0xbf01000000	                              mov edi, 1	      1233	setup.c	FUNCTION_37	CALL_9
0x4002965	      0xe800000000	                          call 0x400296a	      1233	setup.c	FUNCTION_37	CALL_9
0x400296a	      0xbf02000000	                              mov edi, 2	      1234	setup.c	FUNCTION_37	CALL_10
0x400296f	      0xe800000000	                          call 0x4002974	      1234	setup.c	FUNCTION_37	CALL_10
0x4002974	      0xe800000000	                          call 0x4002979	      1235	setup.c	FUNCTION_37	CALL_11
0x4002979	      0xb800000000	                              mov eax, 0	      1238	setup.c	FUNCTION_37
0x400297e	        0x4883c408	                              add rsp, 8	      1238	setup.c	FUNCTION_37
0x4002982	              0xc3	                                     ret	      1238	setup.c	FUNCTION_37
is_inside_work_tree	CALL,2:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,1:ELSE,0:functions,0	12
0x4000c69	    0x833d00000000	               cmp dword [0x04000c70], 0	       375	setup.c	FUNCTION_15	IF_1
0x4000c70	            0x7922	                           jns 0x4000c94	       375	setup.c	FUNCTION_15	IF_1
0x4000c72	        0x4883ec08	                              sub rsp, 8	       374	setup.c	FUNCTION_15
0x4000c76	      0xe800000000	                          call 0x4000c7b	       376	setup.c	FUNCTION_15	CALL_2
0x4000c7b	          0x4889c7	                            mov rdi, rax	       376	setup.c	FUNCTION_15	CALL_2
0x4000c7e	      0xe800000000	                          call 0x4000c83	       376	setup.c	FUNCTION_15	CALL_2
0x4000c83	    0x890500000000	            mov dword [0x04000c89], eax 	       376	setup.c	FUNCTION_15	CALL_2
0x4000c89	    0x8b0500000000	            mov eax, dword [0x04000c8f] 	       378	setup.c	FUNCTION_15
0x4000c8f	        0x4883c408	                              add rsp, 8	       378	setup.c	FUNCTION_15
0x4000c93	              0xc3	                                     ret	       378	setup.c	FUNCTION_15
0x4000c94	    0x8b0500000000	            mov eax, dword [0x04000c9a] 	       378	setup.c	FUNCTION_15
0x4000c9a	              0xc3	                                     ret	       378	setup.c	FUNCTION_15
check_repository_format_gently	CALL,11:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,7:ELSE,1:functions,0	90
0x4000eea	            0x4154	                                push r12	       439	setup.c	FUNCTION_18
0x4000eec	              0x55	                                push rbp	       439	setup.c	FUNCTION_18
0x4000eed	              0x53	                                push rbx	       439	setup.c	FUNCTION_18
0x4000eee	        0x4883ec40	                           sub rsp, 0x40	       439	setup.c	FUNCTION_18
0x4000ef2	          0x4889f3	                            mov rbx, rsi	       439	setup.c	FUNCTION_18
0x4000ef5	          0x4889d5	                            mov rbp, rdx	       439	setup.c	FUNCTION_18
0x4000ef8	    0x64488b042528	                mov rax, qword fs:[0x28]	       439	setup.c	FUNCTION_18
0x4000f01	      0x4889442438	             mov qword [rsp + 0x38], rax	       439	setup.c	FUNCTION_18
0x4000f06	            0x31c0	                            xor eax, eax	       439	setup.c	FUNCTION_18
0x4000f08	    0x48c704240000	                      mov qword [rsp], 0	       440	setup.c	FUNCTION_18
0x4000f10	    0x48c744240800	                  mov qword [rsp + 8], 0	       440	setup.c	FUNCTION_18
0x4000f19	    0x48c744241000	               mov qword [rsp + 0x10], 0	       440	setup.c	FUNCTION_18
0x4000f22	    0x48c744242000	               mov qword [rsp + 0x20], 0	       441	setup.c	FUNCTION_18
0x4000f2b	    0x48c744242800	               mov qword [rsp + 0x28], 0	       441	setup.c	FUNCTION_18
0x4000f34	    0x48c744243000	               mov qword [rsp + 0x30], 0	       441	setup.c	FUNCTION_18
0x4000f3d	          0x4889fe	                            mov rsi, rdi	       444	setup.c	FUNCTION_18	CALL_1
0x4000f40	          0x4889e7	                            mov rdi, rsp	       444	setup.c	FUNCTION_18	CALL_1
0x4000f43	      0xe800000000	                          call 0x4000f48	       444	setup.c	FUNCTION_18	CALL_1
0x4000f48	          0x4189c4	                           mov r12d, eax	       444	setup.c	FUNCTION_18	CALL_1
0x4000f4b	      0xba07000000	                              mov edx, 7	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000f50	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000f55	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000f58	      0xe800000000	                          call 0x4000f5d	       279	strbuf.h	FUNCTION_73	CALL_2
0x4000f5d	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       446	setup.c	FUNCTION_18	CALL_3
0x4000f62	          0x4889df	                            mov rdi, rbx	       446	setup.c	FUNCTION_18	CALL_3
0x4000f65	      0xe800000000	                          call 0x4000f6a	       446	setup.c	FUNCTION_18	CALL_3
0x4000f6a	          0x4889e7	                            mov rdi, rsp	       447	setup.c	FUNCTION_18	CALL_4
0x4000f6d	      0xe800000000	                          call 0x4000f72	       447	setup.c	FUNCTION_18	CALL_4
0x4000f72	          0x833b00	                      cmp dword [rbx], 0	       454	setup.c	FUNCTION_18	IF_1
0x4000f75	     0xf88e1000000	                            js 0x400105c	       454	setup.c	FUNCTION_18	IF_1
0x4000f7b	      0x488d742420	                   lea rsi, [rsp + 0x20]	       457	setup.c	FUNCTION_18	IF_2	CALL_5
0x4000f80	          0x4889df	                            mov rdi, rbx	       457	setup.c	FUNCTION_18	IF_2	CALL_5
0x4000f83	      0xe800000000	                          call 0x4000f88	       457	setup.c	FUNCTION_18	IF_2	CALL_5
0x4000f88	            0x85c0	                           test eax, eax	       457	setup.c	FUNCTION_18	IF_2	CALL_5
0x4000f8a	            0x7948	                           jns 0x4000fd4	       457	setup.c	FUNCTION_18	IF_2	CALL_5
0x4000f8c	          0x4885ed	                           test rbp, rbp	       458	setup.c	FUNCTION_18	IF_2	IF_3
0x4000f8f	            0x742f	                            je 0x4000fc0	       458	setup.c	FUNCTION_18	IF_2	IF_3
0x4000f91	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       459	setup.c	FUNCTION_18	IF_2	IF_3	CALL_6
0x4000f96	      0xbf00000000	                              mov edi, 0	       459	setup.c	FUNCTION_18	IF_2	IF_3	CALL_6
0x4000f9b	      0xb800000000	                              mov eax, 0	       459	setup.c	FUNCTION_18	IF_2	IF_3	CALL_6
0x4000fa0	      0xe800000000	                          call 0x4000fa5	       459	setup.c	FUNCTION_18	IF_2	IF_3	CALL_6
0x4000fa5	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       460	setup.c	FUNCTION_18	IF_2	IF_3	CALL_7
0x4000faa	      0xe800000000	                          call 0x4000faf	       460	setup.c	FUNCTION_18	IF_2	IF_3	CALL_7
0x4000faf	    0xc74500ffffff	            mov dword [rbp], 0xffffffff 	       461	setup.c	FUNCTION_18	IF_2	IF_3
0x4000fb6	      0xb8ffffffff	                     mov eax, 0xffffffff	       462	setup.c	FUNCTION_18	IF_2	IF_3
0x4000fbb	      0xe9a1000000	                           jmp 0x4001061	       462	setup.c	FUNCTION_18	IF_2	IF_3
0x4000fc0	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       464	setup.c	FUNCTION_18	IF_2	CALL_8
0x4000fc5	      0xbf00000000	                              mov edi, 0	       464	setup.c	FUNCTION_18	IF_2	CALL_8
0x4000fca	      0xb800000000	                              mov eax, 0	       464	setup.c	FUNCTION_18	IF_2	CALL_8
0x4000fcf	      0xe800000000	                          call 0x4000fd4	       464	setup.c	FUNCTION_18	IF_2	CALL_8
0x4000fd4	          0x8b4304	                mov eax, dword [rbx + 4]	       467	setup.c	FUNCTION_18
0x4000fd7	    0x890500000000	            mov dword [0x04000fdd], eax 	       467	setup.c	FUNCTION_18
0x4000fdd	        0x488b4308	                mov rax, qword [rbx + 8]	       468	setup.c	FUNCTION_18
0x4000fe1	    0x488905000000	            mov qword [0x04000fe8], rax 	       468	setup.c	FUNCTION_18
0x4000fe8	        0x488d7b20	                   lea rdi, [rbx + 0x20]	       469	setup.c	FUNCTION_18	CALL_9
0x4000fec	      0xbe00000000	                              mov esi, 0	       469	setup.c	FUNCTION_18	CALL_9
0x4000ff1	      0xe800000000	                          call 0x4000ff6	       469	setup.c	FUNCTION_18	CALL_9
0x4000ff6	          0x4585e4	                         test r12d, r12d	       470	setup.c	FUNCTION_18	IF_4
0x4000ff9	            0x7551	                           jne 0x400104c	       470	setup.c	FUNCTION_18	IF_4
0x4000ffb	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       471	setup.c	FUNCTION_18	IF_4	IF_5
0x4000ffe	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       471	setup.c	FUNCTION_18	IF_4	IF_5
0x4001001	            0x7415	                            je 0x4001018	       471	setup.c	FUNCTION_18	IF_4	IF_5
0x4001003	    0x890500000000	            mov dword [0x04001009], eax 	       472	setup.c	FUNCTION_18	IF_4	IF_5
0x4001009	          0x83f801	                              cmp eax, 1	       473	setup.c	FUNCTION_18	IF_4	IF_5	IF_6
0x400100c	            0x750a	                           jne 0x4001018	       473	setup.c	FUNCTION_18	IF_4	IF_5	IF_6
0x400100e	    0xc70500000000	     mov dword [0x04001018], 0xffffffff 	       474	setup.c	FUNCTION_18	IF_4	IF_5	IF_6
0x4001018	      0xb800000000	                              mov eax, 0	       485	setup.c	FUNCTION_18
0x400101d	      0x48837b1800	               cmp qword [rbx + 0x18], 0	       476	setup.c	FUNCTION_18	IF_4	IF_7
0x4001022	            0x743d	                            je 0x4001061	       476	setup.c	FUNCTION_18	IF_4	IF_7
0x4001024	    0x488b3d000000	            mov rdi, qword [0x0400102b] 	       477	setup.c	FUNCTION_18	IF_4	IF_7	CALL_10
0x400102b	      0xe800000000	                          call 0x4001030	       477	setup.c	FUNCTION_18	IF_4	IF_7	CALL_10
0x4001030	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       478	setup.c	FUNCTION_18	IF_4	IF_7
0x4001034	    0x488905000000	            mov qword [0x0400103b], rax 	       478	setup.c	FUNCTION_18	IF_4	IF_7
0x400103b	    0xc70500000000	     mov dword [0x04001045], 0xffffffff 	       479	setup.c	FUNCTION_18	IF_4	IF_7
0x4001045	      0xb800000000	                              mov eax, 0	       485	setup.c	FUNCTION_18
0x400104a	            0xeb15	                           jmp 0x4001061	       485	setup.c	FUNCTION_18
0x400104c	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       482	setup.c	FUNCTION_18	ELSE_1	CALL_11
0x4001050	      0xe800000000	                          call 0x4001055	       482	setup.c	FUNCTION_18	ELSE_1	CALL_11
0x4001055	      0xb800000000	                              mov eax, 0	       485	setup.c	FUNCTION_18
0x400105a	            0xeb05	                           jmp 0x4001061	       485	setup.c	FUNCTION_18
0x400105c	      0xb800000000	                              mov eax, 0	       455	setup.c	FUNCTION_18	IF_1
0x4001061	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       486	setup.c	FUNCTION_18
0x4001066	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       486	setup.c	FUNCTION_18
0x400106f	            0x7405	                            je 0x4001076	       486	setup.c	FUNCTION_18
0x4001071	      0xe800000000	                          call 0x4001076	       486	setup.c	FUNCTION_18
0x4001076	        0x4883c440	                           add rsp, 0x40	       486	setup.c	FUNCTION_18
0x400107a	              0x5b	                                 pop rbx	       486	setup.c	FUNCTION_18
0x400107b	              0x5d	                                 pop rbp	       486	setup.c	FUNCTION_18
0x400107c	            0x415c	                                 pop r12	       486	setup.c	FUNCTION_18
0x400107e	              0xc3	                                     ret	       486	setup.c	FUNCTION_18
canonicalize_ceiling_entry	CALL,3:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,4:ELSE,3:functions,0	34
0x400028a	            0x4154	                                push r12	       841	setup.c	FUNCTION_28
0x400028c	              0x55	                                push rbp	       841	setup.c	FUNCTION_28
0x400028d	              0x53	                                push rbx	       841	setup.c	FUNCTION_28
0x400028e	          0x488b17	                    mov rdx, qword [rdi]	       843	setup.c	FUNCTION_28
0x4000291	           0xfb602	                   movzx eax, byte [rdx]	       845	setup.c	FUNCTION_28	IF_1
0x4000294	            0x84c0	                             test al, al	       845	setup.c	FUNCTION_28	IF_1
0x4000296	            0x750d	                           jne 0x40002a5	       845	setup.c	FUNCTION_28	IF_1
0x4000298	    0xc70601000000	                      mov dword [rsi], 1	       846	setup.c	FUNCTION_28	IF_1
0x400029e	      0xbb00000000	                              mov ebx, 0	       847	setup.c	FUNCTION_28	IF_1
0x40002a3	            0xeb40	                           jmp 0x40002e5	       847	setup.c	FUNCTION_28	IF_1
0x40002a5	      0xbb00000000	                              mov ebx, 0	       849	setup.c	FUNCTION_28	ELSE_1	IF_2
0x40002aa	            0x3c2f	                            cmp al, 0x2f	       848	setup.c	FUNCTION_28	ELSE_1	IF_2	CALL_1
0x40002ac	            0x7537	                           jne 0x40002e5	       848	setup.c	FUNCTION_28	ELSE_1	IF_2	CALL_1
0x40002ae	            0x8b1e	                    mov ebx, dword [rsi]	       850	setup.c	FUNCTION_28	ELSE_2	IF_3
0x40002b0	            0x85db	                           test ebx, ebx	       850	setup.c	FUNCTION_28	ELSE_2	IF_3
0x40002b2	            0x752c	                           jne 0x40002e0	       850	setup.c	FUNCTION_28	ELSE_2	IF_3
0x40002b4	          0x4889fd	                            mov rbp, rdi	       850	setup.c	FUNCTION_28	ELSE_2	IF_3
0x40002b7	      0xbe00000000	                              mov esi, 0	       854	setup.c	FUNCTION_28	ELSE_3	CALL_2
0x40002bc	          0x4889d7	                            mov rdi, rdx	       854	setup.c	FUNCTION_28	ELSE_3	CALL_2
0x40002bf	      0xe800000000	                          call 0x40002c4	       854	setup.c	FUNCTION_28	ELSE_3	CALL_2
0x40002c4	          0x4989c4	                            mov r12, rax	       854	setup.c	FUNCTION_28	ELSE_3	CALL_2
0x40002c7	          0x4885c0	                           test rax, rax	       855	setup.c	FUNCTION_28	ELSE_3	IF_4
0x40002ca	            0x7419	                            je 0x40002e5	       855	setup.c	FUNCTION_28	ELSE_3	IF_4
0x40002cc	        0x488b7d00	                    mov rdi, qword [rbp]	       858	setup.c	FUNCTION_28	ELSE_3	CALL_3
0x40002d0	      0xe800000000	                          call 0x40002d5	       858	setup.c	FUNCTION_28	ELSE_3	CALL_3
0x40002d5	        0x4c896500	                    mov qword [rbp], r12	       859	setup.c	FUNCTION_28	ELSE_3
0x40002d9	      0xbb01000000	                              mov ebx, 1	       860	setup.c	FUNCTION_28	ELSE_3
0x40002de	            0xeb05	                           jmp 0x40002e5	       860	setup.c	FUNCTION_28	ELSE_3
0x40002e0	      0xbb01000000	                              mov ebx, 1	       852	setup.c	FUNCTION_28	ELSE_2	IF_3
0x40002e5	            0x89d8	                            mov eax, ebx	       862	setup.c	FUNCTION_28
0x40002e7	              0x5b	                                 pop rbx	       862	setup.c	FUNCTION_28
0x40002e8	              0x5d	                                 pop rbp	       862	setup.c	FUNCTION_28
0x40002e9	            0x415c	                                 pop r12	       862	setup.c	FUNCTION_28
0x40002eb	              0xc3	                                     ret	       862	setup.c	FUNCTION_28
discover_git_directory	CALL,17:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,5:ELSE,1:functions,0	190
0x4001c6e	            0x4157	                                push r15	       982	setup.c	FUNCTION_30
0x4001c70	            0x4156	                                push r14	       982	setup.c	FUNCTION_30
0x4001c72	            0x4155	                                push r13	       982	setup.c	FUNCTION_30
0x4001c74	            0x4154	                                push r12	       982	setup.c	FUNCTION_30
0x4001c76	              0x55	                                push rbp	       982	setup.c	FUNCTION_30
0x4001c77	              0x53	                                push rbx	       982	setup.c	FUNCTION_30
0x4001c78	    0x4881ec980000	                           sub rsp, 0x98	       982	setup.c	FUNCTION_30
0x4001c7f	          0x4889fd	                            mov rbp, rdi	       982	setup.c	FUNCTION_30
0x4001c82	          0x4889f3	                            mov rbx, rsi	       982	setup.c	FUNCTION_30
0x4001c85	    0x64488b042528	                mov rax, qword fs:[0x28]	       982	setup.c	FUNCTION_30
0x4001c8e	    0x488984248800	             mov qword [rsp + 0x88], rax	       982	setup.c	FUNCTION_30
0x4001c96	            0x31c0	                            xor eax, eax	       982	setup.c	FUNCTION_30
0x4001c98	    0x48c704240000	                      mov qword [rsp], 0	       983	setup.c	FUNCTION_30
0x4001ca0	    0x48c744240800	                  mov qword [rsp + 8], 0	       983	setup.c	FUNCTION_30
0x4001ca9	    0x48c744241000	               mov qword [rsp + 0x10], 0	       983	setup.c	FUNCTION_30
0x4001cb2	    0x48c744242000	               mov qword [rsp + 0x20], 0	       983	setup.c	FUNCTION_30
0x4001cbb	    0x48c744242800	               mov qword [rsp + 0x28], 0	       983	setup.c	FUNCTION_30
0x4001cc4	    0x48c744243000	               mov qword [rsp + 0x30], 0	       983	setup.c	FUNCTION_30
0x4001ccd	        0x4c8b6e08	                mov r13, qword [rsi + 8]	       984	setup.c	FUNCTION_30
0x4001cd1	        0x4c8b7708	                mov r14, qword [rdi + 8]	       985	setup.c	FUNCTION_30
0x4001cd5	          0x4889e7	                            mov rdi, rsp	       988	setup.c	FUNCTION_30	IF_1	CALL_1
0x4001cd8	      0xe800000000	                          call 0x4001cdd	       988	setup.c	FUNCTION_30	IF_1	CALL_1
0x4001cdd	            0x85c0	                           test eax, eax	       988	setup.c	FUNCTION_30	IF_1	CALL_1
0x4001cdf	     0xf8577020000	                           jne 0x4001f5c	       988	setup.c	FUNCTION_30	IF_1	CALL_1
0x4001ce5	          0x4189c4	                           mov r12d, eax	       988	setup.c	FUNCTION_30	IF_1	CALL_1
0x4001ce8	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	       991	setup.c	FUNCTION_30
0x4001ced	      0xba00000000	                              mov edx, 0	       992	setup.c	FUNCTION_30	IF_2	CALL_2
0x4001cf2	          0x4889de	                            mov rsi, rbx	       992	setup.c	FUNCTION_30	IF_2	CALL_2
0x4001cf5	          0x4889e7	                            mov rdi, rsp	       992	setup.c	FUNCTION_30	IF_2	CALL_2
0x4001cf8	      0xe841f8ffff	   call sym.setup_git_directory_gently_1	       992	setup.c	FUNCTION_30	IF_2	CALL_2
0x4001cfd	            0x85c0	                           test eax, eax	       992	setup.c	FUNCTION_30	IF_2	CALL_2
0x4001cff	            0x7f13	                            jg 0x4001d14	       992	setup.c	FUNCTION_30	IF_2	CALL_2
0x4001d01	          0x4889e7	                            mov rdi, rsp	       993	setup.c	FUNCTION_30	IF_2	CALL_3
0x4001d04	      0xe800000000	                          call 0x4001d09	       993	setup.c	FUNCTION_30	IF_2	CALL_3
0x4001d09	    0x41bcffffffff	                    mov r12d, 0xffffffff	       994	setup.c	FUNCTION_30	IF_2
0x4001d0f	      0xe956020000	                           jmp 0x4001f6a	       994	setup.c	FUNCTION_30	IF_2
0x4001d14	      0x488b442408	                mov rax, qword [rsp + 8]	      1001	setup.c	FUNCTION_30	IF_3	CALL_4
0x4001d19	          0x4939c7	                            cmp r15, rax	      1001	setup.c	FUNCTION_30	IF_3	CALL_4
0x4001d1c	     0xf86cb000000	                           jbe 0x4001ded	      1001	setup.c	FUNCTION_30	IF_3	CALL_4
0x4001d22	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      1001	setup.c	FUNCTION_30	IF_3	CALL_4
0x4001d26	        0x4a8d0c2e	                    lea rcx, [rsi + r13]	      1001	setup.c	FUNCTION_30	IF_3	CALL_4
0x4001d2a	           0xfb611	                   movzx edx, byte [rcx]	      1154	cache.h	FUNCTION_100
0x4001d2d	          0x80fa2f	                            cmp dl, 0x2f	      1001	setup.c	FUNCTION_30	IF_3	CALL_4
0x4001d30	     0xf84b7000000	                            je 0x4001ded	      1001	setup.c	FUNCTION_30	IF_3	CALL_4
0x4001d36	          0x80fa2e	                            cmp dl, 0x2e	      1003	setup.c	FUNCTION_30	IF_3	IF_4	CALL_5
0x4001d39	            0x7559	                           jne 0x4001d94	      1003	setup.c	FUNCTION_30	IF_3	IF_4	CALL_5
0x4001d3b	        0x80790100	                   cmp byte [rcx + 1], 0	      1003	setup.c	FUNCTION_30	IF_3	IF_4	CALL_5
0x4001d3f	            0x7553	                           jne 0x4001d94	      1003	setup.c	FUNCTION_30	IF_3	IF_4	CALL_5
0x4001d41	          0x488b03	                    mov rax, qword [rbx]	       162	strbuf.h	FUNCTION_71	IF_1
0x4001d44	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_71	IF_1
0x4001d48	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_71	IF_1
0x4001d4c	          0x4939c5	                            cmp r13, rax	       162	strbuf.h	FUNCTION_71	IF_1
0x4001d4f	            0x760f	                           jbe 0x4001d60	       162	strbuf.h	FUNCTION_71	IF_1
0x4001d51	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_71	CALL_1
0x4001d56	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_71	CALL_1
0x4001d5b	      0xe800000000	                          call 0x4001d60	       163	strbuf.h	FUNCTION_71	CALL_1
0x4001d60	        0x4c896b08	                mov qword [rbx + 8], r13	       164	strbuf.h	FUNCTION_71
0x4001d64	    0x4881fe000000	                              cmp rsi, 0	       165	strbuf.h	FUNCTION_71	IF_2
0x4001d6b	            0x7405	                            je 0x4001d72	       165	strbuf.h	FUNCTION_71	IF_2
0x4001d6d	          0xc60100	                       mov byte [rcx], 0	       166	strbuf.h	FUNCTION_71	IF_2
0x4001d70	            0xeb66	                           jmp 0x4001dd8	       166	strbuf.h	FUNCTION_71	IF_2
0x4001d72	    0x803d00000000	                cmp byte [0x04001d79], 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001d79	            0x745d	                            je 0x4001dd8	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001d7b	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001d80	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001d85	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001d8a	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001d8f	      0xe800000000	                          call 0x4001d94	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001d94	        0x488b1424	                    mov rdx, qword [rsp]	       141	strbuf.h	FUNCTION_70
0x4001d98	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_70
0x4001d9b	            0x7409	                            je 0x4001da6	       141	strbuf.h	FUNCTION_70
0x4001d9d	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_72	IF_1	CALL_1
0x4001da1	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_72	IF_1	CALL_1
0x4001da4	            0x750d	                           jne 0x4001db3	       227	strbuf.h	FUNCTION_72	IF_1	CALL_1
0x4001da6	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_72	CALL_2
0x4001dab	          0x4889e7	                            mov rdi, rsp	       228	strbuf.h	FUNCTION_72	CALL_2
0x4001dae	      0xe800000000	                          call 0x4001db3	       228	strbuf.h	FUNCTION_72	CALL_2
0x4001db3	      0x488b442408	                mov rax, qword [rsp + 8]	       229	strbuf.h	FUNCTION_72
0x4001db8	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_72
0x4001dbc	      0x4889542408	                mov qword [rsp + 8], rdx	       229	strbuf.h	FUNCTION_72
0x4001dc1	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       229	strbuf.h	FUNCTION_72
0x4001dc6	        0xc604022f	              mov byte [rdx + rax], 0x2f	       229	strbuf.h	FUNCTION_72
0x4001dca	      0x488b442408	                mov rax, qword [rsp + 8]	       230	strbuf.h	FUNCTION_72
0x4001dcf	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       230	strbuf.h	FUNCTION_72
0x4001dd4	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_72
0x4001dd8	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1007	setup.c	FUNCTION_30	IF_3	CALL_8
0x4001ddd	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      1007	setup.c	FUNCTION_30	IF_3	CALL_8
0x4001de2	          0x4c89ee	                            mov rsi, r13	      1007	setup.c	FUNCTION_30	IF_3	CALL_8
0x4001de5	          0x4889df	                            mov rdi, rbx	      1007	setup.c	FUNCTION_30	IF_3	CALL_8
0x4001de8	      0xe800000000	                          call 0x4001ded	      1007	setup.c	FUNCTION_30	IF_3	CALL_8
0x4001ded	          0x4c89ee	                            mov rsi, r13	      1010	setup.c	FUNCTION_30	CALL_9
0x4001df0	        0x48037310	             add rsi, qword [rbx + 0x10]	      1010	setup.c	FUNCTION_30	CALL_9
0x4001df4	          0x4889ef	                            mov rdi, rbp	      1010	setup.c	FUNCTION_30	CALL_9
0x4001df7	      0xe800000000	                          call 0x4001dfc	      1010	setup.c	FUNCTION_30	CALL_9
0x4001dfc	    0x48c744240800	                  mov qword [rsp + 8], 0	       164	strbuf.h	FUNCTION_71
0x4001e05	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       165	strbuf.h	FUNCTION_71	IF_2
0x4001e0a	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_71	IF_2
0x4001e10	            0x7405	                            je 0x4001e17	       165	strbuf.h	FUNCTION_71	IF_2
0x4001e12	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_71	IF_2
0x4001e15	            0xeb22	                           jmp 0x4001e39	       166	strbuf.h	FUNCTION_71	IF_2
0x4001e17	    0x803d00000000	                cmp byte [0x04001e1e], 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001e1e	            0x7419	                            je 0x4001e39	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001e20	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001e25	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001e2a	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001e2f	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001e34	      0xe800000000	                          call 0x4001e39	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001e39	          0x4c89f2	                            mov rdx, r14	      1013	setup.c	FUNCTION_30	CALL_10
0x4001e3c	        0x48035510	             add rdx, qword [rbp + 0x10]	      1013	setup.c	FUNCTION_30	CALL_10
0x4001e40	      0xbe00000000	                              mov esi, 0	      1013	setup.c	FUNCTION_30	CALL_10
0x4001e45	          0x4889e7	                            mov rdi, rsp	      1013	setup.c	FUNCTION_30	CALL_10
0x4001e48	      0xb800000000	                              mov eax, 0	      1013	setup.c	FUNCTION_30	CALL_10
0x4001e4d	      0xe800000000	                          call 0x4001e52	      1013	setup.c	FUNCTION_30	CALL_10
0x4001e52	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1014	setup.c	FUNCTION_30	CALL_11
0x4001e57	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1014	setup.c	FUNCTION_30	CALL_11
0x4001e5c	      0xe800000000	                          call 0x4001e61	      1014	setup.c	FUNCTION_30	CALL_11
0x4001e61	          0x4889e7	                            mov rdi, rsp	      1015	setup.c	FUNCTION_30	CALL_12
0x4001e64	      0xe800000000	                          call 0x4001e69	      1015	setup.c	FUNCTION_30	CALL_12
0x4001e69	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1017	setup.c	FUNCTION_30	IF_5	CALL_13
0x4001e6e	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1017	setup.c	FUNCTION_30	IF_5	CALL_13
0x4001e73	      0xe800000000	                          call 0x4001e78	      1017	setup.c	FUNCTION_30	IF_5	CALL_13
0x4001e78	            0x85c0	                           test eax, eax	      1017	setup.c	FUNCTION_30	IF_5	CALL_13
0x4001e7a	     0xf89ea000000	                           jns 0x4001f6a	      1017	setup.c	FUNCTION_30	IF_5	CALL_13
0x4001e80	          0x4c89ee	                            mov rsi, r13	      1018	setup.c	FUNCTION_30	IF_5	CALL_14
0x4001e83	        0x48037310	             add rsi, qword [rbx + 0x10]	      1018	setup.c	FUNCTION_30	IF_5	CALL_14
0x4001e87	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      1018	setup.c	FUNCTION_30	IF_5	CALL_14
0x4001e8c	      0xbf00000000	                              mov edi, 0	      1018	setup.c	FUNCTION_30	IF_5	CALL_14
0x4001e91	      0xb800000000	                              mov eax, 0	      1018	setup.c	FUNCTION_30	IF_5	CALL_14
0x4001e96	      0xe800000000	                          call 0x4001e9b	      1018	setup.c	FUNCTION_30	IF_5	CALL_14
0x4001e9b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1020	setup.c	FUNCTION_30	IF_5	CALL_15
0x4001ea0	      0xe800000000	                          call 0x4001ea5	      1020	setup.c	FUNCTION_30	IF_5	CALL_15
0x4001ea5	        0x488b4500	                    mov rax, qword [rbp]	       162	strbuf.h	FUNCTION_71	IF_1
0x4001ea9	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_71	IF_1
0x4001ead	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_71	IF_1
0x4001eb1	          0x4939c6	                            cmp r14, rax	       162	strbuf.h	FUNCTION_71	IF_1
0x4001eb4	            0x760f	                           jbe 0x4001ec5	       162	strbuf.h	FUNCTION_71	IF_1
0x4001eb6	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_71	CALL_1
0x4001ebb	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_71	CALL_1
0x4001ec0	      0xe800000000	                          call 0x4001ec5	       163	strbuf.h	FUNCTION_71	CALL_1
0x4001ec5	        0x4c897508	                mov qword [rbp + 8], r14	       164	strbuf.h	FUNCTION_71
0x4001ec9	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       165	strbuf.h	FUNCTION_71	IF_2
0x4001ecd	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_71	IF_2
0x4001ed3	            0x7407	                            je 0x4001edc	       165	strbuf.h	FUNCTION_71	IF_2
0x4001ed5	      0x42c6043000	                 mov byte [rax + r14], 0	       166	strbuf.h	FUNCTION_71	IF_2
0x4001eda	            0xeb22	                           jmp 0x4001efe	       166	strbuf.h	FUNCTION_71	IF_2
0x4001edc	    0x803d00000000	                cmp byte [0x04001ee3], 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001ee3	            0x7419	                            je 0x4001efe	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001ee5	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001eea	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001eef	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001ef4	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001ef9	      0xe800000000	                          call 0x4001efe	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001efe	          0x488b03	                    mov rax, qword [rbx]	       162	strbuf.h	FUNCTION_71	IF_1
0x4001f01	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_71	IF_1
0x4001f05	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_71	IF_1
0x4001f09	          0x4939c5	                            cmp r13, rax	       162	strbuf.h	FUNCTION_71	IF_1
0x4001f0c	            0x760f	                           jbe 0x4001f1d	       162	strbuf.h	FUNCTION_71	IF_1
0x4001f0e	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_71	CALL_1
0x4001f13	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_71	CALL_1
0x4001f18	      0xe800000000	                          call 0x4001f1d	       163	strbuf.h	FUNCTION_71	CALL_1
0x4001f1d	        0x4c896b08	                mov qword [rbx + 8], r13	       164	strbuf.h	FUNCTION_71
0x4001f21	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       165	strbuf.h	FUNCTION_71	IF_2
0x4001f25	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_71	IF_2
0x4001f2b	            0x740d	                            je 0x4001f3a	       165	strbuf.h	FUNCTION_71	IF_2
0x4001f2d	      0x42c6042800	                 mov byte [rax + r13], 0	       166	strbuf.h	FUNCTION_71	IF_2
0x4001f32	    0x41bcffffffff	                    mov r12d, 0xffffffff	      1023	setup.c	FUNCTION_30	IF_5
0x4001f38	            0xeb30	                           jmp 0x4001f6a	      1023	setup.c	FUNCTION_30	IF_5
0x4001f3a	    0x803d00000000	                cmp byte [0x04001f41], 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001f41	            0x7421	                            je 0x4001f64	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001f43	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001f48	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001f4d	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001f52	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001f57	      0xe800000000	                          call 0x4001f5c	       168	strbuf.h	FUNCTION_71	CALL_2
0x4001f5c	    0x41bcffffffff	                    mov r12d, 0xffffffff	       989	setup.c	FUNCTION_30	IF_1
0x4001f62	            0xeb06	                           jmp 0x4001f6a	       989	setup.c	FUNCTION_30	IF_1
0x4001f64	    0x41bcffffffff	                    mov r12d, 0xffffffff	      1023	setup.c	FUNCTION_30	IF_5
0x4001f6a	          0x4489e0	                           mov eax, r12d	      1027	setup.c	FUNCTION_30
0x4001f6d	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	      1027	setup.c	FUNCTION_30
0x4001f75	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1027	setup.c	FUNCTION_30
0x4001f7e	            0x7405	                            je 0x4001f85	      1027	setup.c	FUNCTION_30
0x4001f80	      0xe800000000	                          call 0x4001f85	      1027	setup.c	FUNCTION_30
0x4001f85	    0x4881c4980000	                           add rsp, 0x98	      1027	setup.c	FUNCTION_30
0x4001f8c	              0x5b	                                 pop rbx	      1027	setup.c	FUNCTION_30
0x4001f8d	              0x5d	                                 pop rbp	      1027	setup.c	FUNCTION_30
0x4001f8e	            0x415c	                                 pop r12	      1027	setup.c	FUNCTION_30
0x4001f90	            0x415d	                                 pop r13	      1027	setup.c	FUNCTION_30
0x4001f92	            0x415e	                                 pop r14	      1027	setup.c	FUNCTION_30
0x4001f94	            0x415f	                                 pop r15	      1027	setup.c	FUNCTION_30
0x4001f96	              0xc3	                                     ret	      1027	setup.c	FUNCTION_30
setup_git_directory_gently	CALL,27:WHILE,0:FOR,0:SWITCH,1:DO,0:IF,10:ELSE,1:functions,0	390
0x4001f97	            0x4155	                                push r13	      1030	setup.c	FUNCTION_31
0x4001f99	            0x4154	                                push r12	      1030	setup.c	FUNCTION_31
0x4001f9b	              0x55	                                push rbp	      1030	setup.c	FUNCTION_31
0x4001f9c	              0x53	                                push rbx	      1030	setup.c	FUNCTION_31
0x4001f9d	    0x4881ec980000	                           sub rsp, 0x98	      1030	setup.c	FUNCTION_31
0x4001fa4	          0x4889fb	                            mov rbx, rdi	      1030	setup.c	FUNCTION_31
0x4001fa7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1030	setup.c	FUNCTION_31
0x4001fb0	    0x488984248800	             mov qword [rsp + 0x88], rax	      1030	setup.c	FUNCTION_31
0x4001fb8	            0x31c0	                            xor eax, eax	      1030	setup.c	FUNCTION_31
0x4001fba	    0x48c704240000	                      mov qword [rsp], 0	      1032	setup.c	FUNCTION_31
0x4001fc2	    0x48c744240800	                  mov qword [rsp + 8], 0	      1032	setup.c	FUNCTION_31
0x4001fcb	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1032	setup.c	FUNCTION_31
0x4001fd4	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1032	setup.c	FUNCTION_31
0x4001fdd	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1032	setup.c	FUNCTION_31
0x4001fe6	    0x48c744243000	               mov qword [rsp + 0x30], 0	      1032	setup.c	FUNCTION_31
0x4001fef	      0xe800000000	                          call 0x4001ff4	      1043	setup.c	FUNCTION_31	CALL_1
0x4001ff4	          0x4885db	                           test rbx, rbx	      1050	setup.c	FUNCTION_31	IF_1
0x4001ff7	            0x7406	                            je 0x4001fff	      1050	setup.c	FUNCTION_31	IF_1
0x4001ff9	    0xc70300000000	                      mov dword [rbx], 0	      1051	setup.c	FUNCTION_31	IF_1
0x4001fff	      0xbf00000000	                              mov edi, 0	      1053	setup.c	FUNCTION_31	IF_2	CALL_2
0x4002004	      0xe800000000	                          call 0x4002009	      1053	setup.c	FUNCTION_31	IF_2	CALL_2
0x4002009	            0x85c0	                           test eax, eax	      1053	setup.c	FUNCTION_31	IF_2	CALL_2
0x400200b	            0x7421	                            je 0x400202e	      1053	setup.c	FUNCTION_31	IF_2	CALL_2
0x400200d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x4002012	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x4002017	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x400201c	      0xe800000000	                          call 0x4002021	        54	gettext.h	FUNCTION_67
0x4002021	          0x4889c7	                            mov rdi, rax	      1054	setup.c	FUNCTION_31	CALL_4
0x4002024	      0xb800000000	                              mov eax, 0	      1054	setup.c	FUNCTION_31	CALL_4
0x4002029	      0xe800000000	                          call 0x400202e	      1054	setup.c	FUNCTION_31	CALL_4
0x400202e	      0xbe00000000	                              mov esi, 0	      1055	setup.c	FUNCTION_31	CALL_5
0x4002033	          0x4889e7	                            mov rdi, rsp	      1055	setup.c	FUNCTION_31	CALL_5
0x4002036	      0xe800000000	                          call 0x400203b	      1055	setup.c	FUNCTION_31	CALL_5
0x400203b	      0xba01000000	                              mov edx, 1	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x4002040	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x4002045	          0x4889e7	                            mov rdi, rsp	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x4002048	      0xe8f1f4ffff	   call sym.setup_git_directory_gently_1	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x400204d	          0x83c002	                              add eax, 2	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x4002050	          0x83f805	                              cmp eax, 5	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x4002053	     0xf87f1040000	                            ja 0x400254a	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x4002059	            0x89c0	                            mov eax, eax	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x400205b	    0xff24c5000000	                       jmp qword [rax*8]	      1057	setup.c	FUNCTION_31	SWITCH_1	CALL_6
0x4002062	          0x4889d9	                            mov rcx, rbx	      1062	setup.c	FUNCTION_31	SWITCH_1	CALL_7
0x4002065	      0x488d542440	                   lea rdx, [rsp + 0x40]	      1062	setup.c	FUNCTION_31	SWITCH_1	CALL_7
0x400206a	      0xbe00000000	                              mov esi, 0	      1062	setup.c	FUNCTION_31	SWITCH_1	CALL_7
0x400206f	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1062	setup.c	FUNCTION_31	SWITCH_1	CALL_7
0x4002074	      0xe890f8ffff	         call sym.setup_explicit_git_dir	      1062	setup.c	FUNCTION_31	SWITCH_1	CALL_7
0x4002079	          0x4889c5	                            mov rbp, rax	      1062	setup.c	FUNCTION_31	SWITCH_1	CALL_7
0x400207c	      0xe9dd040000	                           jmp 0x400255e	      1063	setup.c	FUNCTION_31	SWITCH_1
0x4002081	    0x488b05000000	            mov rax, qword [0x04002088] 	      1065	setup.c	FUNCTION_31	SWITCH_1	IF_3	CALL_8
0x4002088	      0x4839442408	                cmp qword [rsp + 8], rax	      1065	setup.c	FUNCTION_31	SWITCH_1	IF_3	CALL_8
0x400208d	            0x7337	                           jae 0x40020c6	      1065	setup.c	FUNCTION_31	SWITCH_1	IF_3	CALL_8
0x400208f	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1065	setup.c	FUNCTION_31	SWITCH_1	IF_3	CALL_8
0x4002094	      0xe800000000	                          call 0x4002099	      1065	setup.c	FUNCTION_31	SWITCH_1	IF_3	CALL_8
0x4002099	            0x85c0	                           test eax, eax	      1065	setup.c	FUNCTION_31	SWITCH_1	IF_3	CALL_8
0x400209b	            0x7429	                            je 0x40020c6	      1065	setup.c	FUNCTION_31	SWITCH_1	IF_3	CALL_8
0x400209d	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      1066	setup.c	FUNCTION_31	SWITCH_1	CALL_10
0x40020a2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x40020a7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x40020ac	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x40020b1	      0xe800000000	                          call 0x40020b6	        54	gettext.h	FUNCTION_67
0x40020b6	          0x4889de	                            mov rsi, rbx	      1066	setup.c	FUNCTION_31	SWITCH_1	CALL_10
0x40020b9	          0x4889c7	                            mov rdi, rax	      1066	setup.c	FUNCTION_31	SWITCH_1	CALL_10
0x40020bc	      0xb800000000	                              mov eax, 0	      1066	setup.c	FUNCTION_31	SWITCH_1	CALL_10
0x40020c1	      0xe800000000	                          call 0x40020c6	      1066	setup.c	FUNCTION_31	SWITCH_1	CALL_10
0x40020c6	      0x4c8b642408	                mov r12, qword [rsp + 8]	      1067	setup.c	FUNCTION_31	SWITCH_1	CALL_11
0x40020cb	      0x488b6c2430	            mov rbp, qword [rsp + 0x30] 	      1067	setup.c	FUNCTION_31	SWITCH_1	CALL_11
0x40020d0	          0x4889da	                            mov rdx, rbx	       732	setup.c	FUNCTION_24	IF_1	CALL_1
0x40020d3	      0x488d742440	                   lea rsi, [rsp + 0x40]	       732	setup.c	FUNCTION_24	IF_1	CALL_1
0x40020d8	          0x4889ef	                            mov rdi, rbp	       732	setup.c	FUNCTION_24	IF_1	CALL_1
0x40020db	      0xe80aeeffff	 call sym.check_repository_format_gently	       732	setup.c	FUNCTION_24	IF_1	CALL_1
0x40020e0	            0x85c0	                           test eax, eax	       732	setup.c	FUNCTION_24	IF_1	CALL_1
0x40020e2	     0xf858f040000	                           jne 0x4002577	       732	setup.c	FUNCTION_24	IF_1	CALL_1
0x40020e8	      0xbf00000000	                              mov edi, 0	       736	setup.c	FUNCTION_24	IF_2	CALL_2
0x40020ed	      0xe800000000	                          call 0x40020f2	       736	setup.c	FUNCTION_24	IF_2	CALL_2
0x40020f2	          0x4885c0	                           test rax, rax	       736	setup.c	FUNCTION_24	IF_2	CALL_2
0x40020f5	            0x750e	                           jne 0x4002105	       736	setup.c	FUNCTION_24	IF_2	CALL_2
0x40020f7	    0x48833d000000	               cmp qword [0x040020ff], 0	       736	setup.c	FUNCTION_24	IF_2	CALL_2
0x40020ff	     0xf8481000000	                            je 0x4002186	       736	setup.c	FUNCTION_24	IF_2	CALL_2
0x4002105	          0x4d63e4	                        movsxd r12, r12d	       740	setup.c	FUNCTION_24	IF_2	IF_3	CALL_3
0x4002108	    0x41bd00000000	                             mov r13d, 0	       737	setup.c	FUNCTION_24	IF_2
0x400210e	    0x4c3b25000000	            cmp r12, qword [0x04002115] 	       740	setup.c	FUNCTION_24	IF_2	IF_3	CALL_3
0x4002115	            0x7419	                            je 0x4002130	       740	setup.c	FUNCTION_24	IF_2	IF_3	CALL_3
0x4002117	        0x807d002f	                    cmp byte [rbp], 0x2f	       740	setup.c	FUNCTION_24	IF_2	IF_3	CALL_3
0x400211b	            0x7413	                            je 0x4002130	       740	setup.c	FUNCTION_24	IF_2	IF_3	CALL_3
0x400211d	      0xbe01000000	                              mov esi, 1	       741	setup.c	FUNCTION_24	IF_2	CALL_4
0x4002122	          0x4889ef	                            mov rdi, rbp	       741	setup.c	FUNCTION_24	IF_2	CALL_4
0x4002125	      0xe800000000	                          call 0x400212a	       741	setup.c	FUNCTION_24	IF_2	CALL_4
0x400212a	          0x4889c5	                            mov rbp, rax	       741	setup.c	FUNCTION_24	IF_2	CALL_4
0x400212d	          0x4989c5	                            mov r13, rax	       741	setup.c	FUNCTION_24	IF_2	CALL_4
0x4002130	    0x488b3d000000	            mov rdi, qword [0x04002137] 	       742	setup.c	FUNCTION_24	IF_2	IF_4	CALL_5
0x4002137	      0xe800000000	                          call 0x400213c	       742	setup.c	FUNCTION_24	IF_2	IF_4	CALL_5
0x400213c	            0x85c0	                           test eax, eax	       742	setup.c	FUNCTION_24	IF_2	IF_4	CALL_5
0x400213e	            0x7421	                            je 0x4002161	       742	setup.c	FUNCTION_24	IF_2	IF_4	CALL_5
0x4002140	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x4002145	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x400214a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x400214f	      0xe800000000	                          call 0x4002154	        54	gettext.h	FUNCTION_67
0x4002154	          0x4889c7	                            mov rdi, rax	       743	setup.c	FUNCTION_24	IF_2	CALL_7
0x4002157	      0xb800000000	                              mov eax, 0	       743	setup.c	FUNCTION_24	IF_2	CALL_7
0x400215c	      0xe800000000	                          call 0x4002161	       743	setup.c	FUNCTION_24	IF_2	CALL_7
0x4002161	          0x4889d9	                            mov rcx, rbx	       744	setup.c	FUNCTION_24	IF_2	CALL_8
0x4002164	      0x488d542440	                   lea rdx, [rsp + 0x40]	       744	setup.c	FUNCTION_24	IF_2	CALL_8
0x4002169	      0xbe00000000	                              mov esi, 0	       744	setup.c	FUNCTION_24	IF_2	CALL_8
0x400216e	          0x4889ef	                            mov rdi, rbp	       744	setup.c	FUNCTION_24	IF_2	CALL_8
0x4002171	      0xe893f7ffff	         call sym.setup_explicit_git_dir	       744	setup.c	FUNCTION_24	IF_2	CALL_8
0x4002176	          0x4889c5	                            mov rbp, rax	       744	setup.c	FUNCTION_24	IF_2	CALL_8
0x4002179	          0x4c89ef	                            mov rdi, r13	       745	setup.c	FUNCTION_24	IF_2	CALL_9
0x400217c	      0xe800000000	                          call 0x4002181	       745	setup.c	FUNCTION_24	IF_2	CALL_9
0x4002181	      0xe9d8030000	                           jmp 0x400255e	       745	setup.c	FUNCTION_24	IF_2	CALL_9
0x4002186	    0x833d00000000	               cmp dword [0x0400218d], 0	       750	setup.c	FUNCTION_24	IF_5
0x400218d	            0x7e51	                           jle 0x40021e0	       750	setup.c	FUNCTION_24	IF_5
0x400218f	          0x4d63e4	                        movsxd r12, r12d	       751	setup.c	FUNCTION_24	IF_5	CALL_11
0x4002192	          0x4889ef	                            mov rdi, rbp	       751	setup.c	FUNCTION_24	IF_5	CALL_11
0x4002195	    0x4c3b25000000	            cmp r12, qword [0x0400219c] 	       751	setup.c	FUNCTION_24	IF_5	CALL_11
0x400219c	            0x7408	                            je 0x40021a6	       751	setup.c	FUNCTION_24	IF_5	CALL_11
0x400219e	      0xe800000000	                          call 0x40021a3	       751	setup.c	FUNCTION_24	IF_5	CALL_11
0x40021a3	          0x4889c7	                            mov rdi, rax	       751	setup.c	FUNCTION_24	IF_5	CALL_11
0x40021a6	      0xe800000000	                          call 0x40021ab	       751	setup.c	FUNCTION_24	IF_5	CALL_11
0x40021ab	    0x488b3d000000	            mov rdi, qword [0x040021b2] 	       752	setup.c	FUNCTION_24	IF_5	IF_6	CALL_12
0x40021b2	      0xe800000000	                          call 0x40021b7	       752	setup.c	FUNCTION_24	IF_5	IF_6	CALL_12
0x40021b7	            0x85c0	                           test eax, eax	       752	setup.c	FUNCTION_24	IF_5	IF_6	CALL_12
0x40021b9	     0xf84b8030000	                            je 0x4002577	       752	setup.c	FUNCTION_24	IF_5	IF_6	CALL_12
0x40021bf	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x40021c4	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x40021c9	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x40021ce	      0xe800000000	                          call 0x40021d3	        54	gettext.h	FUNCTION_67
0x40021d3	          0x4889c7	                            mov rdi, rax	       753	setup.c	FUNCTION_24	IF_5	CALL_14
0x40021d6	      0xb800000000	                              mov eax, 0	       753	setup.c	FUNCTION_24	IF_5	CALL_14
0x40021db	      0xe800000000	                          call 0x40021e0	       753	setup.c	FUNCTION_24	IF_5	CALL_14
0x40021e0	      0xbf00000000	                              mov edi, 0	       758	setup.c	FUNCTION_24	CALL_15
0x40021e5	      0xe800000000	                          call 0x40021ea	       758	setup.c	FUNCTION_24	CALL_15
0x40021ea	      0xbe00000000	                              mov esi, 0	       759	setup.c	FUNCTION_24	IF_7	CALL_16
0x40021ef	          0x4889ef	                            mov rdi, rbp	       759	setup.c	FUNCTION_24	IF_7	CALL_16
0x40021f2	      0xe800000000	                          call 0x40021f7	       759	setup.c	FUNCTION_24	IF_7	CALL_16
0x40021f7	            0x85c0	                           test eax, eax	       759	setup.c	FUNCTION_24	IF_7	CALL_16
0x40021f9	            0x7408	                            je 0x4002203	       759	setup.c	FUNCTION_24	IF_7	CALL_16
0x40021fb	          0x4889ef	                            mov rdi, rbp	       760	setup.c	FUNCTION_24	CALL_17
0x40021fe	      0xe800000000	                          call 0x4002203	       760	setup.c	FUNCTION_24	CALL_17
0x4002203	    0xc70500000000	               mov dword [0x0400220d], 0	       761	setup.c	FUNCTION_24
0x400220d	    0xc70500000000	               mov dword [0x04002217], 1	       762	setup.c	FUNCTION_24
0x4002217	    0x488b15000000	            mov rdx, qword [0x0400221e] 	       763	setup.c	FUNCTION_24	IF_8
0x400221e	          0x4963c4	                        movsxd rax, r12d	       763	setup.c	FUNCTION_24	IF_8
0x4002221	          0x4839d0	                            cmp rax, rdx	       763	setup.c	FUNCTION_24	IF_8
0x4002224	     0xf844d030000	                            je 0x4002577	       763	setup.c	FUNCTION_24	IF_8
0x400222a	    0x488b05000000	            mov rax, qword [0x04002231] 	       372	git-compat-util.h	FUNCTION_41
0x4002231	          0x80382f	                    cmp byte [rax], 0x2f	       364	git-compat-util.h	FUNCTION_40
0x4002234	        0x400f94c5	                                sete bpl	       364	git-compat-util.h	FUNCTION_40
0x4002238	        0x400fb6ed	                          movzx ebp, bpl	       364	git-compat-util.h	FUNCTION_40
0x400223c	      0x418d442401	                      lea eax, [r12 + 1]	       768	setup.c	FUNCTION_24	IF_9
0x4002241	          0x4439e5	                           cmp ebp, r12d	       768	setup.c	FUNCTION_24	IF_9
0x4002244	           0xf45e8	                         cmovne ebp, eax	       768	setup.c	FUNCTION_24	IF_9
0x4002247	    0x488b05000000	            mov rax, qword [0x0400224e] 	       141	strbuf.h	FUNCTION_70
0x400224e	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_70
0x4002251	            0x7409	                            je 0x400225c	       141	strbuf.h	FUNCTION_70
0x4002253	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_72	IF_1	CALL_1
0x4002257	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_72	IF_1	CALL_1
0x400225a	            0x750f	                           jne 0x400226b	       227	strbuf.h	FUNCTION_72	IF_1	CALL_1
0x400225c	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_72	CALL_2
0x4002261	      0xbf00000000	                              mov edi, 0	       228	strbuf.h	FUNCTION_72	CALL_2
0x4002266	      0xe800000000	                          call 0x400226b	       228	strbuf.h	FUNCTION_72	CALL_2
0x400226b	    0x488b05000000	            mov rax, qword [0x04002272] 	       229	strbuf.h	FUNCTION_72
0x4002272	        0x488d5001	                      lea rdx, [rax + 1]	       229	strbuf.h	FUNCTION_72
0x4002276	    0x488915000000	            mov qword [0x0400227d], rdx 	       229	strbuf.h	FUNCTION_72
0x400227d	    0x488b15000000	            mov rdx, qword [0x04002284] 	       229	strbuf.h	FUNCTION_72
0x4002284	        0xc604022f	              mov byte [rdx + rax], 0x2f	       229	strbuf.h	FUNCTION_72
0x4002288	    0x488b05000000	            mov rax, qword [0x0400228f] 	       230	strbuf.h	FUNCTION_72
0x400228f	    0x488b15000000	            mov rdx, qword [0x04002296] 	       230	strbuf.h	FUNCTION_72
0x4002296	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_72
0x400229a	          0x4863ed	                         movsxd rbp, ebp	       771	setup.c	FUNCTION_24
0x400229d	    0x48032d000000	             add rbp, qword [0x040022a4]	       771	setup.c	FUNCTION_24
0x40022a4	      0xe9b5020000	                           jmp 0x400255e	       771	setup.c	FUNCTION_24
0x40022a9	    0x488b05000000	            mov rax, qword [0x040022b0] 	      1071	setup.c	FUNCTION_31	SWITCH_1	IF_4	CALL_12
0x40022b0	      0x4839442408	                cmp qword [rsp + 8], rax	      1071	setup.c	FUNCTION_31	SWITCH_1	IF_4	CALL_12
0x40022b5	            0x7337	                           jae 0x40022ee	      1071	setup.c	FUNCTION_31	SWITCH_1	IF_4	CALL_12
0x40022b7	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1071	setup.c	FUNCTION_31	SWITCH_1	IF_4	CALL_12
0x40022bc	      0xe800000000	                          call 0x40022c1	      1071	setup.c	FUNCTION_31	SWITCH_1	IF_4	CALL_12
0x40022c1	            0x85c0	                           test eax, eax	      1071	setup.c	FUNCTION_31	SWITCH_1	IF_4	CALL_12
0x40022c3	            0x7429	                            je 0x40022ee	      1071	setup.c	FUNCTION_31	SWITCH_1	IF_4	CALL_12
0x40022c5	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      1072	setup.c	FUNCTION_31	SWITCH_1	CALL_14
0x40022ca	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x40022cf	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x40022d4	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x40022d9	      0xe800000000	                          call 0x40022de	        54	gettext.h	FUNCTION_67
0x40022de	          0x4889de	                            mov rsi, rbx	      1072	setup.c	FUNCTION_31	SWITCH_1	CALL_14
0x40022e1	          0x4889c7	                            mov rdi, rax	      1072	setup.c	FUNCTION_31	SWITCH_1	CALL_14
0x40022e4	      0xb800000000	                              mov eax, 0	      1072	setup.c	FUNCTION_31	SWITCH_1	CALL_14
0x40022e9	      0xe800000000	                          call 0x40022ee	      1072	setup.c	FUNCTION_31	SWITCH_1	CALL_14
0x40022ee	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      1073	setup.c	FUNCTION_31	SWITCH_1	CALL_15
0x40022f3	          0x4889da	                            mov rdx, rbx	       781	setup.c	FUNCTION_25	IF_1	CALL_1
0x40022f6	      0x488d742440	                   lea rsi, [rsp + 0x40]	       781	setup.c	FUNCTION_25	IF_1	CALL_1
0x40022fb	      0xbf00000000	                              mov edi, 0	       781	setup.c	FUNCTION_25	IF_1	CALL_1
0x4002300	      0xe8e5ebffff	 call sym.check_repository_format_gently	       781	setup.c	FUNCTION_25	IF_1	CALL_1
0x4002305	            0x85c0	                           test eax, eax	       781	setup.c	FUNCTION_25	IF_1	CALL_1
0x4002307	     0xf856a020000	                           jne 0x4002577	       781	setup.c	FUNCTION_25	IF_1	CALL_1
0x400230d	      0xba01000000	                              mov edx, 1	       784	setup.c	FUNCTION_25
0x4002312	      0xbe00000000	                              mov esi, 0	       784	setup.c	FUNCTION_25
0x4002317	      0xbf00000000	                              mov edi, 0	       784	setup.c	FUNCTION_25
0x400231c	      0xe800000000	                          call 0x4002321	       784	setup.c	FUNCTION_25
0x4002321	      0xbf00000000	                              mov edi, 0	       787	setup.c	FUNCTION_25	IF_2	CALL_2
0x4002326	      0xe800000000	                          call 0x400232b	       787	setup.c	FUNCTION_25	IF_2	CALL_2
0x400232b	          0x4885c0	                           test rax, rax	       787	setup.c	FUNCTION_25	IF_2	CALL_2
0x400232e	            0x750a	                           jne 0x400233a	       787	setup.c	FUNCTION_25	IF_2	CALL_2
0x4002330	    0x48833d000000	               cmp qword [0x04002338], 0	       787	setup.c	FUNCTION_25	IF_2	CALL_2
0x4002338	            0x7475	                            je 0x40023af	       787	setup.c	FUNCTION_25	IF_2	CALL_2
0x400233a	          0x4863f5	                         movsxd rsi, ebp	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x400233d	      0xbd00000000	                              mov ebp, 0	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x4002342	    0x483b35000000	            cmp rsi, qword [0x04002349] 	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x4002349	            0x740f	                            je 0x400235a	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x400234b	    0x488b3d000000	            mov rdi, qword [0x04002352] 	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x4002352	      0xe800000000	                          call 0x4002357	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x4002357	          0x4889c5	                            mov rbp, rax	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x400235a	    0x48892d000000	            mov qword [0x04002361], rbp 	       790	setup.c	FUNCTION_25	IF_2	CALL_3
0x4002361	    0x488b3d000000	            mov rdi, qword [0x04002368] 	       791	setup.c	FUNCTION_25	IF_2	IF_3	CALL_4
0x4002368	      0xe800000000	                          call 0x400236d	       791	setup.c	FUNCTION_25	IF_2	IF_3	CALL_4
0x400236d	            0x85c0	                           test eax, eax	       791	setup.c	FUNCTION_25	IF_2	IF_3	CALL_4
0x400236f	            0x7421	                            je 0x4002392	       791	setup.c	FUNCTION_25	IF_2	IF_3	CALL_4
0x4002371	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x4002376	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x400237b	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x4002380	      0xe800000000	                          call 0x4002385	        54	gettext.h	FUNCTION_67
0x4002385	          0x4889c7	                            mov rdi, rax	       792	setup.c	FUNCTION_25	IF_2	CALL_6
0x4002388	      0xb800000000	                              mov eax, 0	       792	setup.c	FUNCTION_25	IF_2	CALL_6
0x400238d	      0xe800000000	                          call 0x4002392	       792	setup.c	FUNCTION_25	IF_2	CALL_6
0x4002392	          0x4889d9	                            mov rcx, rbx	       793	setup.c	FUNCTION_25	IF_2	CALL_7
0x4002395	      0x488d542440	                   lea rdx, [rsp + 0x40]	       793	setup.c	FUNCTION_25	IF_2	CALL_7
0x400239a	      0xbe00000000	                              mov esi, 0	       793	setup.c	FUNCTION_25	IF_2	CALL_7
0x400239f	          0x4889ef	                            mov rdi, rbp	       793	setup.c	FUNCTION_25	IF_2	CALL_7
0x40023a2	      0xe862f5ffff	         call sym.setup_explicit_git_dir	       793	setup.c	FUNCTION_25	IF_2	CALL_7
0x40023a7	          0x4889c5	                            mov rbp, rax	       793	setup.c	FUNCTION_25	IF_2	CALL_7
0x40023aa	      0xe9af010000	                           jmp 0x400255e	       793	setup.c	FUNCTION_25	IF_2	CALL_7
0x40023af	    0xc70500000000	               mov dword [0x040023b9], 1	       796	setup.c	FUNCTION_25
0x40023b9	    0xc70500000000	               mov dword [0x040023c3], 0	       797	setup.c	FUNCTION_25
0x40023c3	          0x4863c5	                         movsxd rax, ebp	       798	setup.c	FUNCTION_25	IF_4
0x40023c6	    0x483b05000000	            cmp rax, qword [0x040023cd] 	       798	setup.c	FUNCTION_25	IF_4
0x40023cd	     0xf84b4000000	                            je 0x4002487	       798	setup.c	FUNCTION_25	IF_4
0x40023d3	    0x488b3d000000	            mov rdi, qword [0x040023da] 	       799	setup.c	FUNCTION_25	IF_4	IF_5	CALL_8
0x40023da	      0xe800000000	                          call 0x40023df	       799	setup.c	FUNCTION_25	IF_4	IF_5	CALL_8
0x40023df	            0x85c0	                           test eax, eax	       799	setup.c	FUNCTION_25	IF_4	IF_5	CALL_8
0x40023e1	            0x7421	                            je 0x4002404	       799	setup.c	FUNCTION_25	IF_4	IF_5	CALL_8
0x40023e3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x40023e8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x40023ed	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x40023f2	      0xe800000000	                          call 0x40023f7	        54	gettext.h	FUNCTION_67
0x40023f7	          0x4889c7	                            mov rdi, rax	       800	setup.c	FUNCTION_25	IF_4	CALL_10
0x40023fa	      0xb800000000	                              mov eax, 0	       800	setup.c	FUNCTION_25	IF_4	CALL_10
0x40023ff	      0xe800000000	                          call 0x4002404	       800	setup.c	FUNCTION_25	IF_4	CALL_10
0x4002404	    0x488b0d000000	            mov rcx, qword [0x0400240b] 	       801	setup.c	FUNCTION_25	IF_4
0x400240b	          0x80392f	                    cmp byte [rcx], 0x2f	       802	setup.c	FUNCTION_25	IF_4	CALL_11
0x400240e	           0xf94c0	                                 sete al	       802	setup.c	FUNCTION_25	IF_4	CALL_11
0x4002411	           0xfb6c0	                           movzx eax, al	       802	setup.c	FUNCTION_25	IF_4	CALL_11
0x4002414	            0x39e8	                            cmp eax, ebp	       802	setup.c	FUNCTION_25	IF_4	CALL_11
0x4002416	           0xf4cc5	                          cmovl eax, ebp	       802	setup.c	FUNCTION_25	IF_4	CALL_11
0x4002419	            0x4898	                                    cdqe	       802	setup.c	FUNCTION_25	IF_4	CALL_11
0x400241b	    0x488b15000000	            mov rdx, qword [0x04002422] 	       162	strbuf.h	FUNCTION_71	IF_1
0x4002422	        0x4883fa01	                              cmp rdx, 1	       162	strbuf.h	FUNCTION_71	IF_1
0x4002426	        0x4883d2ff	             adc rdx, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_71	IF_1
0x400242a	          0x4839d0	                            cmp rax, rdx	       162	strbuf.h	FUNCTION_71	IF_1
0x400242d	            0x760f	                           jbe 0x400243e	       162	strbuf.h	FUNCTION_71	IF_1
0x400242f	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_71	CALL_1
0x4002434	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_71	CALL_1
0x4002439	      0xe800000000	                          call 0x400243e	       163	strbuf.h	FUNCTION_71	CALL_1
0x400243e	    0x488905000000	            mov qword [0x04002445], rax 	       164	strbuf.h	FUNCTION_71
0x4002445	    0x4881f9000000	                              cmp rcx, 0	       165	strbuf.h	FUNCTION_71	IF_2
0x400244c	            0x7406	                            je 0x4002454	       165	strbuf.h	FUNCTION_71	IF_2
0x400244e	        0xc6040100	                 mov byte [rcx + rax], 0	       166	strbuf.h	FUNCTION_71	IF_2
0x4002452	            0xeb22	                           jmp 0x4002476	       166	strbuf.h	FUNCTION_71	IF_2
0x4002454	    0x803d00000000	                cmp byte [0x0400245b], 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x400245b	            0x7419	                            je 0x4002476	       168	strbuf.h	FUNCTION_71	CALL_2
0x400245d	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4002462	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_71	CALL_2
0x4002467	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x400246c	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_71	CALL_2
0x4002471	      0xe800000000	                          call 0x4002476	       168	strbuf.h	FUNCTION_71	CALL_2
0x4002476	    0x488b3d000000	            mov rdi, qword [0x0400247d] 	       803	setup.c	FUNCTION_25	IF_4	CALL_12
0x400247d	      0xe800000000	                          call 0x4002482	       803	setup.c	FUNCTION_25	IF_4	CALL_12
0x4002482	      0xe9f0000000	                           jmp 0x4002577	       803	setup.c	FUNCTION_25	IF_4	CALL_12
0x4002487	      0xbf00000000	                              mov edi, 0	       806	setup.c	FUNCTION_25	CALL_13
0x400248c	      0xe800000000	                          call 0x4002491	       806	setup.c	FUNCTION_25	CALL_13
0x4002491	      0xe9e1000000	                           jmp 0x4002577	       806	setup.c	FUNCTION_25	CALL_13
0x4002496	    0x488b3d000000	            mov rdi, qword [0x0400249d] 	      1076	setup.c	FUNCTION_31	SWITCH_1	CALL_16
0x400249d	          0x4885db	                           test rbx, rbx	       812	setup.c	FUNCTION_26	IF_1
0x40024a0	            0x7526	                           jne 0x40024c8	       812	setup.c	FUNCTION_26	IF_1
0x40024a2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x40024a7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x40024ac	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x40024b1	      0xe800000000	                          call 0x40024b6	        54	gettext.h	FUNCTION_67
0x40024b6	      0xbe00000000	                              mov esi, 0	       813	setup.c	FUNCTION_26	CALL_2
0x40024bb	          0x4889c7	                            mov rdi, rax	       813	setup.c	FUNCTION_26	CALL_2
0x40024be	      0xb800000000	                              mov eax, 0	       813	setup.c	FUNCTION_26	CALL_2
0x40024c3	      0xe800000000	                          call 0x40024c8	       813	setup.c	FUNCTION_26	CALL_2
0x40024c8	      0xe800000000	                          call 0x40024cd	       814	setup.c	FUNCTION_26	IF_2	CALL_3
0x40024cd	            0x85c0	                           test eax, eax	       814	setup.c	FUNCTION_26	IF_2	CALL_3
0x40024cf	            0x7421	                            je 0x40024f2	       814	setup.c	FUNCTION_26	IF_2	CALL_3
0x40024d1	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x40024d6	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x40024db	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x40024e0	      0xe800000000	                          call 0x40024e5	        54	gettext.h	FUNCTION_67
0x40024e5	          0x4889c7	                            mov rdi, rax	       815	setup.c	FUNCTION_26	CALL_5
0x40024e8	      0xb800000000	                              mov eax, 0	       815	setup.c	FUNCTION_26	CALL_5
0x40024ed	      0xe800000000	                          call 0x40024f2	       815	setup.c	FUNCTION_26	CALL_5
0x40024f2	    0xc70301000000	                      mov dword [rbx], 1	       816	setup.c	FUNCTION_26
0x40024f8	            0xeb7d	                           jmp 0x4002577	      1077	setup.c	FUNCTION_31	SWITCH_1
0x40024fa	          0x4885db	                           test rbx, rbx	      1079	setup.c	FUNCTION_31	SWITCH_1	IF_5
0x40024fd	            0x7422	                            je 0x4002521	      1079	setup.c	FUNCTION_31	SWITCH_1	IF_5
0x40024ff	    0xc70301000000	                      mov dword [rbx], 1	      1080	setup.c	FUNCTION_31	SWITCH_1	IF_5
0x4002505	      0xbf00000000	                              mov edi, 0	      1081	setup.c	FUNCTION_31	SWITCH_1	IF_5	CALL_17
0x400250a	      0xe800000000	                          call 0x400250f	      1081	setup.c	FUNCTION_31	SWITCH_1	IF_5	CALL_17
0x400250f	          0x4889e7	                            mov rdi, rsp	      1082	setup.c	FUNCTION_31	SWITCH_1	IF_5	CALL_18
0x4002512	      0xe800000000	                          call 0x4002517	      1082	setup.c	FUNCTION_31	SWITCH_1	IF_5	CALL_18
0x4002517	      0xb800000000	                              mov eax, 0	      1083	setup.c	FUNCTION_31	SWITCH_1	IF_5
0x400251c	      0xe90c010000	                           jmp 0x400262d	      1083	setup.c	FUNCTION_31	SWITCH_1	IF_5
0x4002521	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      1085	setup.c	FUNCTION_31	SWITCH_1	CALL_20
0x4002526	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x400252b	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x4002530	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x4002535	      0xe800000000	                          call 0x400253a	        54	gettext.h	FUNCTION_67
0x400253a	          0x4889de	                            mov rsi, rbx	      1085	setup.c	FUNCTION_31	SWITCH_1	CALL_20
0x400253d	          0x4889c7	                            mov rdi, rax	      1085	setup.c	FUNCTION_31	SWITCH_1	CALL_20
0x4002540	      0xb800000000	                              mov eax, 0	      1085	setup.c	FUNCTION_31	SWITCH_1	CALL_20
0x4002545	      0xe800000000	                          call 0x400254a	      1085	setup.c	FUNCTION_31	SWITCH_1	CALL_20
0x400254a	      0xbf00000000	                              mov edi, 0	      1089	setup.c	FUNCTION_31	SWITCH_1	CALL_21
0x400254f	      0xb800000000	                              mov eax, 0	      1089	setup.c	FUNCTION_31	SWITCH_1	CALL_21
0x4002554	      0xe800000000	                          call 0x4002559	      1089	setup.c	FUNCTION_31	SWITCH_1	CALL_21
0x4002559	      0xbd00000000	                              mov ebp, 0	      1059	setup.c	FUNCTION_31	SWITCH_1
0x400255e	          0x4885ed	                           test rbp, rbp	      1092	setup.c	FUNCTION_31	IF_6
0x4002561	            0x7414	                            je 0x4002577	      1092	setup.c	FUNCTION_31	IF_6
0x4002563	      0xba01000000	                              mov edx, 1	      1093	setup.c	FUNCTION_31	IF_6
0x4002568	          0x4889ee	                            mov rsi, rbp	      1093	setup.c	FUNCTION_31	IF_6
0x400256b	      0xbf00000000	                              mov edi, 0	      1093	setup.c	FUNCTION_31	IF_6
0x4002570	      0xe800000000	                          call 0x4002575	      1093	setup.c	FUNCTION_31	IF_6
0x4002575	            0xeb19	                           jmp 0x4002590	      1093	setup.c	FUNCTION_31	IF_6
0x4002577	      0xba01000000	                              mov edx, 1	      1095	setup.c	FUNCTION_31	ELSE_1
0x400257c	      0xbe00000000	                              mov esi, 0	      1095	setup.c	FUNCTION_31	ELSE_1
0x4002581	      0xbf00000000	                              mov edi, 0	      1095	setup.c	FUNCTION_31	ELSE_1
0x4002586	      0xe800000000	                          call 0x400258b	      1095	setup.c	FUNCTION_31	ELSE_1
0x400258b	      0xbd00000000	                              mov ebp, 0	      1095	setup.c	FUNCTION_31	ELSE_1
0x4002590	    0x488b05000000	            mov rax, qword [0x04002597] 	      1097	setup.c	FUNCTION_31
0x4002597	          0x4885db	                           test rbx, rbx	      1097	setup.c	FUNCTION_31
0x400259a	            0x740b	                            je 0x40025a7	      1097	setup.c	FUNCTION_31
0x400259c	          0x833b00	                      cmp dword [rbx], 0	      1097	setup.c	FUNCTION_31
0x400259f	           0xf94c2	                                 sete dl	      1097	setup.c	FUNCTION_31
0x40025a2	           0xfb6d2	                           movzx edx, dl	      1097	setup.c	FUNCTION_31
0x40025a5	            0xeb05	                           jmp 0x40025ac	      1097	setup.c	FUNCTION_31
0x40025a7	      0xba01000000	                              mov edx, 1	      1097	setup.c	FUNCTION_31
0x40025ac	            0x8910	                    mov dword [rax], edx	      1097	setup.c	FUNCTION_31
0x40025ae	    0x488b05000000	            mov rax, qword [0x040025b5] 	      1098	setup.c	FUNCTION_31
0x40025b5	        0x48896808	                mov qword [rax + 8], rbp	      1098	setup.c	FUNCTION_31
0x40025b9	          0x833800	                      cmp dword [rax], 0	      1111	setup.c	FUNCTION_31	IF_7	CALL_22
0x40025bc	     0xf8580000000	                           jne 0x4002642	      1111	setup.c	FUNCTION_31	IF_7	CALL_22
0x40025c2	      0xbf00000000	                              mov edi, 0	      1111	setup.c	FUNCTION_31	IF_7	CALL_22
0x40025c7	      0xe800000000	                          call 0x40025cc	      1111	setup.c	FUNCTION_31	IF_7	CALL_22
0x40025cc	          0x4885c0	                           test rax, rax	      1111	setup.c	FUNCTION_31	IF_7	CALL_22
0x40025cf	            0x7447	                            je 0x4002618	      1111	setup.c	FUNCTION_31	IF_7	CALL_22
0x40025d1	    0x488b05000000	            mov rax, qword [0x040025d8] 	      1112	setup.c	FUNCTION_31	IF_7	IF_8
0x40025d8	        0x48833800	                      cmp qword [rax], 0	      1112	setup.c	FUNCTION_31	IF_7	IF_8
0x40025dc	            0x751e	                           jne 0x40025fc	      1112	setup.c	FUNCTION_31	IF_7	IF_8
0x40025de	      0xbf00000000	                              mov edi, 0	      1113	setup.c	FUNCTION_31	IF_7	IF_8	CALL_23
0x40025e3	      0xe800000000	                          call 0x40025e8	      1113	setup.c	FUNCTION_31	IF_7	IF_8	CALL_23
0x40025e8	          0x4885c0	                           test rax, rax	      1115	setup.c	FUNCTION_31	IF_7	IF_8	IF_9
0x40025eb	      0xba00000000	                              mov edx, 0	      1115	setup.c	FUNCTION_31	IF_7	IF_8	IF_9
0x40025f0	        0x480f44c2	                          cmove rax, rdx	      1115	setup.c	FUNCTION_31	IF_7	IF_8	IF_9
0x40025f4	          0x4889c7	                            mov rdi, rax	      1116	setup.c	FUNCTION_31	IF_7	IF_8	CALL_24
0x40025f7	      0xe800000000	                          call 0x40025fc	      1116	setup.c	FUNCTION_31	IF_7	IF_8	CALL_24
0x40025fc	    0x488b05000000	            mov rax, qword [0x04002603] 	      1118	setup.c	FUNCTION_31	IF_7	IF_10
0x4002603	          0x833800	                      cmp dword [rax], 0	      1118	setup.c	FUNCTION_31	IF_7	IF_10
0x4002606	            0x7410	                            je 0x4002618	      1118	setup.c	FUNCTION_31	IF_7	IF_10
0x4002608	        0x8b742454	            mov esi, dword [rsp + 0x54] 	      1119	setup.c	FUNCTION_31	IF_7	CALL_25
0x400260c	    0x488b3d000000	            mov rdi, qword [0x04002613] 	      1119	setup.c	FUNCTION_31	IF_7	CALL_25
0x4002613	      0xe800000000	                          call 0x4002618	      1119	setup.c	FUNCTION_31	IF_7	CALL_25
0x4002618	          0x4889e7	                            mov rdi, rsp	      1122	setup.c	FUNCTION_31	CALL_26
0x400261b	      0xe800000000	                          call 0x4002620	      1122	setup.c	FUNCTION_31	CALL_26
0x4002620	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1123	setup.c	FUNCTION_31	CALL_27
0x4002625	      0xe800000000	                          call 0x400262a	      1123	setup.c	FUNCTION_31	CALL_27
0x400262a	          0x4889e8	                            mov rax, rbp	      1125	setup.c	FUNCTION_31
0x400262d	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	      1126	setup.c	FUNCTION_31
0x4002635	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1126	setup.c	FUNCTION_31
0x400263e	            0x7416	                            je 0x4002656	      1126	setup.c	FUNCTION_31
0x4002640	            0xeb0f	                           jmp 0x4002651	      1126	setup.c	FUNCTION_31
0x4002642	    0x488b05000000	            mov rax, qword [0x04002649] 	      1112	setup.c	FUNCTION_31	IF_7	IF_8
0x4002649	        0x48833800	                      cmp qword [rax], 0	      1112	setup.c	FUNCTION_31	IF_7	IF_8
0x400264d	            0x748f	                            je 0x40025de	      1112	setup.c	FUNCTION_31	IF_7	IF_8
0x400264f	            0xebb7	                           jmp 0x4002608	      1112	setup.c	FUNCTION_31	IF_7	IF_8
0x4002651	      0xe800000000	                          call 0x4002656	      1126	setup.c	FUNCTION_31
0x4002656	    0x4881c4980000	                           add rsp, 0x98	      1126	setup.c	FUNCTION_31
0x400265d	              0x5b	                                 pop rbx	      1126	setup.c	FUNCTION_31
0x400265e	              0x5d	                                 pop rbp	      1126	setup.c	FUNCTION_31
0x400265f	            0x415c	                                 pop r12	      1126	setup.c	FUNCTION_31
0x4002661	            0x415d	                                 pop r13	      1126	setup.c	FUNCTION_31
0x4002663	              0xc3	                                     ret	      1126	setup.c	FUNCTION_31
setup_explicit_git_dir	CALL,47:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,17:ELSE,5:functions,0	222
0x4001909	            0x4157	                                push r15	       632	setup.c	FUNCTION_23
0x400190b	            0x4156	                                push r14	       632	setup.c	FUNCTION_23
0x400190d	            0x4155	                                push r13	       632	setup.c	FUNCTION_23
0x400190f	            0x4154	                                push r12	       632	setup.c	FUNCTION_23
0x4001911	              0x55	                                push rbp	       632	setup.c	FUNCTION_23
0x4001912	              0x53	                                push rbx	       632	setup.c	FUNCTION_23
0x4001913	        0x4883ec08	                              sub rsp, 8	       632	setup.c	FUNCTION_23
0x4001917	          0x4889fb	                            mov rbx, rdi	       632	setup.c	FUNCTION_23
0x400191a	          0x4889f5	                            mov rbp, rsi	       632	setup.c	FUNCTION_23
0x400191d	          0x4989d6	                            mov r14, rdx	       632	setup.c	FUNCTION_23
0x4001920	          0x4989cc	                            mov r12, rcx	       632	setup.c	FUNCTION_23
0x4001923	      0xbf00000000	                              mov edi, 0	       633	setup.c	FUNCTION_23	CALL_1
0x4001928	      0xe800000000	                          call 0x400192d	       633	setup.c	FUNCTION_23	CALL_1
0x400192d	          0x4989c5	                            mov r13, rax	       633	setup.c	FUNCTION_23	CALL_1
0x4001930	      0xb800000000	                              mov eax, 0	       638	setup.c	FUNCTION_23	IF_1	CALL_2
0x4001935	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       638	setup.c	FUNCTION_23	IF_1	CALL_2
0x400193c	          0x4889df	                            mov rdi, rbx	       638	setup.c	FUNCTION_23	IF_1	CALL_2
0x400193f	            0xf2ae	              repne scasb al, byte [rdi]	       638	setup.c	FUNCTION_23	IF_1	CALL_2
0x4001941	          0x48f7d1	                                 not rcx	       638	setup.c	FUNCTION_23	IF_1	CALL_2
0x4001944	        0x4883e901	                              sub rcx, 1	       638	setup.c	FUNCTION_23	IF_1	CALL_2
0x4001948	    0x4881f9d80f00	                          cmp rcx, 0xfd8	       638	setup.c	FUNCTION_23	IF_1	CALL_2
0x400194f	            0x7626	                           jbe 0x4001977	       638	setup.c	FUNCTION_23	IF_1	CALL_2
0x4001951	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x4001956	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x400195b	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x4001960	      0xe800000000	                          call 0x4001965	        54	gettext.h	FUNCTION_67
0x4001965	      0xbe00000000	                              mov esi, 0	       639	setup.c	FUNCTION_23	CALL_4
0x400196a	          0x4889c7	                            mov rdi, rax	       639	setup.c	FUNCTION_23	CALL_4
0x400196d	      0xb800000000	                              mov eax, 0	       639	setup.c	FUNCTION_23	CALL_4
0x4001972	      0xe800000000	                          call 0x4001977	       639	setup.c	FUNCTION_23	CALL_4
0x4001977	      0xbe00000000	                              mov esi, 0	       641	setup.c	FUNCTION_23
0x400197c	          0x4889df	                            mov rdi, rbx	       641	setup.c	FUNCTION_23
0x400197f	      0xe800000000	                          call 0x4001984	       641	setup.c	FUNCTION_23
0x4001984	          0x4989c7	                            mov r15, rax	       641	setup.c	FUNCTION_23
0x4001987	          0x4885c0	                           test rax, rax	       642	setup.c	FUNCTION_23	IF_2
0x400198a	            0x740e	                            je 0x400199a	       642	setup.c	FUNCTION_23	IF_2
0x400198c	          0x4889c7	                            mov rdi, rax	       643	setup.c	FUNCTION_23	IF_2	CALL_5
0x400198f	      0xe800000000	                          call 0x4001994	       643	setup.c	FUNCTION_23	IF_2	CALL_5
0x4001994	          0x4989c7	                            mov r15, rax	       643	setup.c	FUNCTION_23	IF_2	CALL_5
0x4001997	          0x4889c3	                            mov rbx, rax	       643	setup.c	FUNCTION_23	IF_2	CALL_5
0x400199a	          0x4889df	                            mov rdi, rbx	       647	setup.c	FUNCTION_23	IF_3	CALL_6
0x400199d	      0xe800000000	                          call 0x40019a2	       647	setup.c	FUNCTION_23	IF_3	CALL_6
0x40019a2	            0x85c0	                           test eax, eax	       647	setup.c	FUNCTION_23	IF_3	CALL_6
0x40019a4	            0x7543	                           jne 0x40019e9	       647	setup.c	FUNCTION_23	IF_3	CALL_6
0x40019a6	          0x4d85e4	                           test r12, r12	       648	setup.c	FUNCTION_23	IF_3	IF_4
0x40019a9	            0x741a	                            je 0x40019c5	       648	setup.c	FUNCTION_23	IF_3	IF_4
0x40019ab	    0x41c704240100	                      mov dword [r12], 1	       649	setup.c	FUNCTION_23	IF_3	IF_4
0x40019b3	          0x4c89ff	                            mov rdi, r15	       650	setup.c	FUNCTION_23	IF_3	IF_4	CALL_7
0x40019b6	      0xe800000000	                          call 0x40019bb	       650	setup.c	FUNCTION_23	IF_3	IF_4	CALL_7
0x40019bb	      0xb800000000	                              mov eax, 0	       651	setup.c	FUNCTION_23	IF_3	IF_4
0x40019c0	      0xe99a020000	                           jmp 0x4001c5f	       651	setup.c	FUNCTION_23	IF_3	IF_4
0x40019c5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x40019ca	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x40019cf	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x40019d4	      0xe800000000	                          call 0x40019d9	        54	gettext.h	FUNCTION_67
0x40019d9	          0x4889de	                            mov rsi, rbx	       653	setup.c	FUNCTION_23	IF_3	CALL_9
0x40019dc	          0x4889c7	                            mov rdi, rax	       653	setup.c	FUNCTION_23	IF_3	CALL_9
0x40019df	      0xb800000000	                              mov eax, 0	       653	setup.c	FUNCTION_23	IF_3	CALL_9
0x40019e4	      0xe800000000	                          call 0x40019e9	       653	setup.c	FUNCTION_23	IF_3	CALL_9
0x40019e9	          0x4c89e2	                            mov rdx, r12	       656	setup.c	FUNCTION_23	IF_5	CALL_10
0x40019ec	          0x4c89f6	                            mov rsi, r14	       656	setup.c	FUNCTION_23	IF_5	CALL_10
0x40019ef	          0x4889df	                            mov rdi, rbx	       656	setup.c	FUNCTION_23	IF_5	CALL_10
0x40019f2	      0xe8f3f4ffff	 call sym.check_repository_format_gently	       656	setup.c	FUNCTION_23	IF_5	CALL_10
0x40019f7	            0x85c0	                           test eax, eax	       656	setup.c	FUNCTION_23	IF_5	CALL_10
0x40019f9	            0x7412	                            je 0x4001a0d	       656	setup.c	FUNCTION_23	IF_5	CALL_10
0x40019fb	          0x4c89ff	                            mov rdi, r15	       657	setup.c	FUNCTION_23	IF_5	CALL_11
0x40019fe	      0xe800000000	                          call 0x4001a03	       657	setup.c	FUNCTION_23	IF_5	CALL_11
0x4001a03	      0xb800000000	                              mov eax, 0	       658	setup.c	FUNCTION_23	IF_5
0x4001a08	      0xe952020000	                           jmp 0x4001c5f	       658	setup.c	FUNCTION_23	IF_5
0x4001a0d	          0x4d85ed	                           test r13, r13	       662	setup.c	FUNCTION_23	IF_6
0x4001a10	            0x740d	                            je 0x4001a1f	       662	setup.c	FUNCTION_23	IF_6
0x4001a12	          0x4c89ef	                            mov rdi, r13	       663	setup.c	FUNCTION_23	CALL_12
0x4001a15	      0xe800000000	                          call 0x4001a1a	       663	setup.c	FUNCTION_23	CALL_12
0x4001a1a	      0xe94f010000	                           jmp 0x4001b6e	       663	setup.c	FUNCTION_23	CALL_12
0x4001a1f	    0x833d00000000	               cmp dword [0x04001a26], 0	       664	setup.c	FUNCTION_23	ELSE_1	IF_7
0x4001a26	            0x7e3d	                           jle 0x4001a65	       664	setup.c	FUNCTION_23	ELSE_1	IF_7
0x4001a28	    0x48833d000000	               cmp qword [0x04001a30], 0	       665	setup.c	FUNCTION_23	ELSE_1	IF_7	IF_8
0x4001a30	            0x7419	                            je 0x4001a4b	       665	setup.c	FUNCTION_23	ELSE_1	IF_7	IF_8
0x4001a32	      0xbf00000000	                              mov edi, 0	       667	setup.c	FUNCTION_23	ELSE_1	IF_7	IF_8	CALL_13
0x4001a37	      0xb800000000	                              mov eax, 0	       667	setup.c	FUNCTION_23	ELSE_1	IF_7	IF_8	CALL_13
0x4001a3c	      0xe800000000	                          call 0x4001a41	       667	setup.c	FUNCTION_23	ELSE_1	IF_7	IF_8	CALL_13
0x4001a41	    0xc70500000000	               mov dword [0x04001a4b], 1	       668	setup.c	FUNCTION_23	ELSE_1	IF_7	IF_8
0x4001a4b	          0x4889df	                            mov rdi, rbx	       672	setup.c	FUNCTION_23	ELSE_1	IF_7	CALL_14
0x4001a4e	      0xe800000000	                          call 0x4001a53	       672	setup.c	FUNCTION_23	ELSE_1	IF_7	CALL_14
0x4001a53	          0x4c89ff	                            mov rdi, r15	       673	setup.c	FUNCTION_23	ELSE_1	IF_7	CALL_15
0x4001a56	      0xe800000000	                          call 0x4001a5b	       673	setup.c	FUNCTION_23	ELSE_1	IF_7	CALL_15
0x4001a5b	      0xb800000000	                              mov eax, 0	       674	setup.c	FUNCTION_23	ELSE_1	IF_7
0x4001a60	      0xe9fa010000	                           jmp 0x4001c5f	       674	setup.c	FUNCTION_23	ELSE_1	IF_7
0x4001a65	    0x488b3d000000	            mov rdi, qword [0x04001a6c] 	       676	setup.c	FUNCTION_23	ELSE_2	IF_9
0x4001a6c	          0x4885ff	                           test rdi, rdi	       676	setup.c	FUNCTION_23	ELSE_2	IF_9
0x4001a6f	     0xf84c2000000	                            je 0x4001b37	       676	setup.c	FUNCTION_23	ELSE_2	IF_9
0x4001a75	          0x803f2f	                    cmp byte [rdi], 0x2f	       677	setup.c	FUNCTION_23	ELSE_2	IF_9	IF_10	CALL_16
0x4001a78	            0x750a	                           jne 0x4001a84	       677	setup.c	FUNCTION_23	ELSE_2	IF_9	IF_10	CALL_16
0x4001a7a	      0xe800000000	                          call 0x4001a7f	       678	setup.c	FUNCTION_23	ELSE_2	IF_9	CALL_17
0x4001a7f	      0xe9ea000000	                           jmp 0x4001b6e	       678	setup.c	FUNCTION_23	ELSE_2	IF_9	CALL_17
0x4001a84	          0x4889df	                            mov rdi, rbx	       681	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	IF_11	CALL_18
0x4001a87	      0xe800000000	                          call 0x4001a8c	       681	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	IF_11	CALL_18
0x4001a8c	            0x85c0	                           test eax, eax	       681	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	IF_11	CALL_18
0x4001a8e	            0x7424	                            je 0x4001ab4	       681	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	IF_11	CALL_18
0x4001a90	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x4001a95	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x4001a9a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x4001a9f	      0xe800000000	                          call 0x4001aa4	        54	gettext.h	FUNCTION_67
0x4001aa4	          0x4889de	                            mov rsi, rbx	       682	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	CALL_20
0x4001aa7	          0x4889c7	                            mov rdi, rax	       682	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	CALL_20
0x4001aaa	      0xb800000000	                              mov eax, 0	       682	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	CALL_20
0x4001aaf	      0xe800000000	                          call 0x4001ab4	       682	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	CALL_20
0x4001ab4	    0x488b3d000000	            mov rdi, qword [0x04001abb] 	       683	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	IF_12	CALL_21
0x4001abb	      0xe800000000	                          call 0x4001ac0	       683	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	IF_12	CALL_21
0x4001ac0	            0x85c0	                           test eax, eax	       683	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	IF_12	CALL_21
0x4001ac2	            0x742b	                            je 0x4001aef	       683	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	IF_12	CALL_21
0x4001ac4	    0x488b1d000000	            mov rbx, qword [0x04001acb] 	       684	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	CALL_23
0x4001acb	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x4001ad0	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x4001ad5	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x4001ada	      0xe800000000	                          call 0x4001adf	        54	gettext.h	FUNCTION_67
0x4001adf	          0x4889de	                            mov rsi, rbx	       684	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	CALL_23
0x4001ae2	          0x4889c7	                            mov rdi, rax	       684	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	CALL_23
0x4001ae5	      0xb800000000	                              mov eax, 0	       684	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	CALL_23
0x4001aea	      0xe800000000	                          call 0x4001aef	       684	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	CALL_23
0x4001aef	      0xe800000000	                          call 0x4001af4	       685	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	CALL_24
0x4001af4	          0x4989c4	                            mov r12, rax	       685	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	CALL_24
0x4001af7	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	       686	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	IF_13	CALL_25
0x4001afb	      0xe800000000	                          call 0x4001b00	       686	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	IF_13	CALL_25
0x4001b00	            0x85c0	                           test eax, eax	       686	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	IF_13	CALL_25
0x4001b02	            0x7421	                            je 0x4001b25	       686	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	IF_13	CALL_25
0x4001b04	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x4001b09	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x4001b0e	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x4001b13	      0xe800000000	                          call 0x4001b18	        54	gettext.h	FUNCTION_67
0x4001b18	          0x4889c7	                            mov rdi, rax	       687	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	CALL_27
0x4001b1b	      0xb800000000	                              mov eax, 0	       687	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	CALL_27
0x4001b20	      0xe800000000	                          call 0x4001b25	       687	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	CALL_27
0x4001b25	          0x4c89e7	                            mov rdi, r12	       688	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	CALL_28
0x4001b28	      0xe800000000	                          call 0x4001b2d	       688	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	CALL_28
0x4001b2d	          0x4c89e7	                            mov rdi, r12	       689	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	CALL_29
0x4001b30	      0xe800000000	                          call 0x4001b35	       689	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	CALL_29
0x4001b35	            0xeb37	                           jmp 0x4001b6e	       689	setup.c	FUNCTION_23	ELSE_2	IF_9	ELSE_3	CALL_29
0x4001b37	      0xbe01000000	                              mov esi, 1	       692	setup.c	FUNCTION_23	ELSE_4	IF_14	CALL_30
0x4001b3c	      0xbf00000000	                              mov edi, 0	       692	setup.c	FUNCTION_23	ELSE_4	IF_14	CALL_30
0x4001b41	      0xe800000000	                          call 0x4001b46	       692	setup.c	FUNCTION_23	ELSE_4	IF_14	CALL_30
0x4001b46	            0x85c0	                           test eax, eax	       692	setup.c	FUNCTION_23	ELSE_4	IF_14	CALL_30
0x4001b48	            0x751a	                           jne 0x4001b64	       692	setup.c	FUNCTION_23	ELSE_4	IF_14	CALL_30
0x4001b4a	          0x4889df	                            mov rdi, rbx	       694	setup.c	FUNCTION_23	ELSE_4	IF_14	CALL_31
0x4001b4d	      0xe800000000	                          call 0x4001b52	       694	setup.c	FUNCTION_23	ELSE_4	IF_14	CALL_31
0x4001b52	          0x4c89ff	                            mov rdi, r15	       695	setup.c	FUNCTION_23	ELSE_4	IF_14	CALL_32
0x4001b55	      0xe800000000	                          call 0x4001b5a	       695	setup.c	FUNCTION_23	ELSE_4	IF_14	CALL_32
0x4001b5a	      0xb800000000	                              mov eax, 0	       696	setup.c	FUNCTION_23	ELSE_4	IF_14
0x4001b5f	      0xe9fb000000	                           jmp 0x4001c5f	       696	setup.c	FUNCTION_23	ELSE_4	IF_14
0x4001b64	      0xbf00000000	                              mov edi, 0	       699	setup.c	FUNCTION_23	CALL_33
0x4001b69	      0xe800000000	                          call 0x4001b6e	       699	setup.c	FUNCTION_23	CALL_33
0x4001b6e	      0xe800000000	                          call 0x4001b73	       702	setup.c	FUNCTION_23	CALL_34
0x4001b73	          0x4989c5	                            mov r13, rax	       702	setup.c	FUNCTION_23	CALL_34
0x4001b76	        0x4c8b6510	            mov r12, qword [rbp + 0x10] 	       705	setup.c	FUNCTION_23	IF_15	CALL_35
0x4001b7a	          0x4889c6	                            mov rsi, rax	       705	setup.c	FUNCTION_23	IF_15	CALL_35
0x4001b7d	          0x4c89e7	                            mov rdi, r12	       705	setup.c	FUNCTION_23	IF_15	CALL_35
0x4001b80	      0xe800000000	                          call 0x4001b85	       705	setup.c	FUNCTION_23	IF_15	CALL_35
0x4001b85	            0x85c0	                           test eax, eax	       705	setup.c	FUNCTION_23	IF_15	CALL_35
0x4001b87	            0x751a	                           jne 0x4001ba3	       705	setup.c	FUNCTION_23	IF_15	CALL_35
0x4001b89	          0x4889df	                            mov rdi, rbx	       706	setup.c	FUNCTION_23	IF_15	CALL_36
0x4001b8c	      0xe800000000	                          call 0x4001b91	       706	setup.c	FUNCTION_23	IF_15	CALL_36
0x4001b91	          0x4c89ff	                            mov rdi, r15	       707	setup.c	FUNCTION_23	IF_15	CALL_37
0x4001b94	      0xe800000000	                          call 0x4001b99	       707	setup.c	FUNCTION_23	IF_15	CALL_37
0x4001b99	      0xb800000000	                              mov eax, 0	       708	setup.c	FUNCTION_23	IF_15
0x4001b9e	      0xe9bc000000	                           jmp 0x4001c5f	       708	setup.c	FUNCTION_23	IF_15
0x4001ba3	          0x4c89ee	                            mov rsi, r13	       711	setup.c	FUNCTION_23	CALL_38
0x4001ba6	          0x4c89e7	                            mov rdi, r12	       711	setup.c	FUNCTION_23	CALL_38
0x4001ba9	      0xe800000000	                          call 0x4001bae	       711	setup.c	FUNCTION_23	CALL_38
0x4001bae	          0x4189c4	                           mov r12d, eax	       711	setup.c	FUNCTION_23	CALL_38
0x4001bb1	            0x85c0	                           test eax, eax	       712	setup.c	FUNCTION_23	IF_16
0x4001bb3	     0xf8891000000	                            js 0x4001c4a	       712	setup.c	FUNCTION_23	IF_16
0x4001bb9	          0x4889df	                            mov rdi, rbx	       713	setup.c	FUNCTION_23	IF_16	CALL_40
0x4001bbc	      0xe800000000	                          call 0x4001bc1	       713	setup.c	FUNCTION_23	IF_16	CALL_40
0x4001bc1	          0x4889c7	                            mov rdi, rax	       713	setup.c	FUNCTION_23	IF_16	CALL_40
0x4001bc4	      0xe800000000	                          call 0x4001bc9	       713	setup.c	FUNCTION_23	IF_16	CALL_40
0x4001bc9	          0x4c89ef	                            mov rdi, r13	       714	setup.c	FUNCTION_23	IF_16	IF_17	CALL_41
0x4001bcc	      0xe800000000	                          call 0x4001bd1	       714	setup.c	FUNCTION_23	IF_16	IF_17	CALL_41
0x4001bd1	            0x85c0	                           test eax, eax	       714	setup.c	FUNCTION_23	IF_16	IF_17	CALL_41
0x4001bd3	            0x7424	                            je 0x4001bf9	       714	setup.c	FUNCTION_23	IF_16	IF_17	CALL_41
0x4001bd5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x4001bda	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x4001bdf	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x4001be4	      0xe800000000	                          call 0x4001be9	        54	gettext.h	FUNCTION_67
0x4001be9	          0x4c89ee	                            mov rsi, r13	       715	setup.c	FUNCTION_23	IF_16	CALL_43
0x4001bec	          0x4889c7	                            mov rdi, rax	       715	setup.c	FUNCTION_23	IF_16	CALL_43
0x4001bef	      0xb800000000	                              mov eax, 0	       715	setup.c	FUNCTION_23	IF_16	CALL_43
0x4001bf4	      0xe800000000	                          call 0x4001bf9	       715	setup.c	FUNCTION_23	IF_16	CALL_43
0x4001bf9	        0x488b4500	                    mov rax, qword [rbp]	       141	strbuf.h	FUNCTION_70
0x4001bfd	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_70
0x4001c00	            0x740a	                            je 0x4001c0c	       141	strbuf.h	FUNCTION_70
0x4001c02	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_72	IF_1	CALL_1
0x4001c06	        0x483b4508	                cmp rax, qword [rbp + 8]	       227	strbuf.h	FUNCTION_72	IF_1	CALL_1
0x4001c0a	            0x750d	                           jne 0x4001c19	       227	strbuf.h	FUNCTION_72	IF_1	CALL_1
0x4001c0c	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_72	CALL_2
0x4001c11	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_72	CALL_2
0x4001c14	      0xe800000000	                          call 0x4001c19	       228	strbuf.h	FUNCTION_72	CALL_2
0x4001c19	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_72
0x4001c1d	        0x488b4508	                mov rax, qword [rbp + 8]	       229	strbuf.h	FUNCTION_72
0x4001c21	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_72
0x4001c25	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_72
0x4001c29	        0xc604022f	              mov byte [rdx + rax], 0x2f	       229	strbuf.h	FUNCTION_72
0x4001c2d	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_72
0x4001c31	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_72
0x4001c35	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_72
0x4001c39	          0x4c89ff	                            mov rdi, r15	       717	setup.c	FUNCTION_23	IF_16	CALL_45
0x4001c3c	      0xe800000000	                          call 0x4001c41	       717	setup.c	FUNCTION_23	IF_16	CALL_45
0x4001c41	          0x4963c4	                        movsxd rax, r12d	       718	setup.c	FUNCTION_23	IF_16
0x4001c44	        0x48034510	             add rax, qword [rbp + 0x10]	       718	setup.c	FUNCTION_23	IF_16
0x4001c48	            0xeb15	                           jmp 0x4001c5f	       718	setup.c	FUNCTION_23	IF_16
0x4001c4a	          0x4889df	                            mov rdi, rbx	       722	setup.c	FUNCTION_23	CALL_46
0x4001c4d	      0xe800000000	                          call 0x4001c52	       722	setup.c	FUNCTION_23	CALL_46
0x4001c52	          0x4c89ff	                            mov rdi, r15	       723	setup.c	FUNCTION_23	CALL_47
0x4001c55	      0xe800000000	                          call 0x4001c5a	       723	setup.c	FUNCTION_23	CALL_47
0x4001c5a	      0xb800000000	                              mov eax, 0	       724	setup.c	FUNCTION_23
0x4001c5f	        0x4883c408	                              add rsp, 8	       725	setup.c	FUNCTION_23
0x4001c63	              0x5b	                                 pop rbx	       725	setup.c	FUNCTION_23
0x4001c64	              0x5d	                                 pop rbp	       725	setup.c	FUNCTION_23
0x4001c65	            0x415c	                                 pop r12	       725	setup.c	FUNCTION_23
0x4001c67	            0x415d	                                 pop r13	       725	setup.c	FUNCTION_23
0x4001c69	            0x415e	                                 pop r14	       725	setup.c	FUNCTION_23
0x4001c6b	            0x415f	                                 pop r15	       725	setup.c	FUNCTION_23
0x4001c6d	              0xc3	                                     ret	       725	setup.c	FUNCTION_23
sanitize_stdfds	CALL,5:WHILE,1:FOR,0:SWITCH,0:DO,0:IF,2:ELSE,0:functions,0	31
0x400287d	        0x4883ec08	                              sub rsp, 8	      1206	setup.c	FUNCTION_36
0x4002881	      0xba00000000	                              mov edx, 0	        53	fcntl2.h	FUNCTION_119	IF_2	CALL_9
0x4002886	      0xbe02000000	                              mov esi, 2	        53	fcntl2.h	FUNCTION_119	IF_2	CALL_9
0x400288b	      0xbf00000000	                              mov edi, 0	        53	fcntl2.h	FUNCTION_119	IF_2	CALL_9
0x4002890	      0xb800000000	                              mov eax, 0	        53	fcntl2.h	FUNCTION_119	IF_2	CALL_9
0x4002895	      0xe800000000	                          call 0x400289a	        53	fcntl2.h	FUNCTION_119	IF_2	CALL_9
0x400289a	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1208	setup.c	FUNCTION_36	WHILE_1
0x400289d	            0x7416	                            je 0x40028b5	      1208	setup.c	FUNCTION_36	WHILE_1
0x400289f	          0x83f801	                              cmp eax, 1	      1208	setup.c	FUNCTION_36	WHILE_1
0x40028a2	            0x7f11	                            jg 0x40028b5	      1208	setup.c	FUNCTION_36	WHILE_1
0x40028a4	            0x89c7	                            mov edi, eax	      1209	setup.c	FUNCTION_36	CALL_2
0x40028a6	      0xe800000000	                          call 0x40028ab	      1209	setup.c	FUNCTION_36	CALL_2
0x40028ab	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1208	setup.c	FUNCTION_36	WHILE_1
0x40028ae	            0x7405	                            je 0x40028b5	      1208	setup.c	FUNCTION_36	WHILE_1
0x40028b0	          0x83f801	                              cmp eax, 1	      1208	setup.c	FUNCTION_36	WHILE_1
0x40028b3	            0x7eef	                           jle 0x40028a4	      1208	setup.c	FUNCTION_36	WHILE_1
0x40028b5	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1210	setup.c	FUNCTION_36	IF_1
0x40028b8	            0x7521	                           jne 0x40028db	      1210	setup.c	FUNCTION_36	IF_1
0x40028ba	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_67
0x40028bf	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_67
0x40028c4	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_67
0x40028c9	      0xe800000000	                          call 0x40028ce	        54	gettext.h	FUNCTION_67
0x40028ce	          0x4889c7	                            mov rdi, rax	      1211	setup.c	FUNCTION_36	CALL_4
0x40028d1	      0xb800000000	                              mov eax, 0	      1211	setup.c	FUNCTION_36	CALL_4
0x40028d6	      0xe800000000	                          call 0x40028db	      1211	setup.c	FUNCTION_36	CALL_4
0x40028db	          0x83f802	                              cmp eax, 2	      1212	setup.c	FUNCTION_36	IF_2
0x40028de	            0x7e07	                           jle 0x40028e7	      1212	setup.c	FUNCTION_36	IF_2
0x40028e0	            0x89c7	                            mov edi, eax	      1213	setup.c	FUNCTION_36	CALL_5
0x40028e2	      0xe800000000	                          call 0x40028e7	      1213	setup.c	FUNCTION_36	CALL_5
0x40028e7	        0x4883c408	                              add rsp, 8	      1214	setup.c	FUNCTION_36
0x40028eb	              0xc3	                                     ret	      1214	setup.c	FUNCTION_36
resolve_gitdir_gently	CALL,2:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,1:ELSE,0:functions,0	18
0x400284d	              0x55	                                push rbp	      1198	setup.c	FUNCTION_35
0x400284e	              0x53	                                push rbx	      1198	setup.c	FUNCTION_35
0x400284f	        0x4883ec08	                              sub rsp, 8	      1198	setup.c	FUNCTION_35
0x4002853	          0x4889fb	                            mov rbx, rdi	      1198	setup.c	FUNCTION_35
0x4002856	          0x4889f5	                            mov rbp, rsi	      1198	setup.c	FUNCTION_35
0x4002859	      0xe800000000	                          call 0x400285e	      1199	setup.c	FUNCTION_35	IF_1	CALL_1
0x400285e	          0x4889da	                            mov rdx, rbx	      1200	setup.c	FUNCTION_35	IF_1
0x4002861	            0x85c0	                           test eax, eax	      1199	setup.c	FUNCTION_35	IF_1	CALL_1
0x4002863	            0x750e	                           jne 0x4002873	      1199	setup.c	FUNCTION_35	IF_1	CALL_1
0x4002865	          0x4889ee	                            mov rsi, rbp	      1201	setup.c	FUNCTION_35	CALL_2
0x4002868	          0x4889df	                            mov rdi, rbx	      1201	setup.c	FUNCTION_35	CALL_2
0x400286b	      0xe800000000	                          call 0x4002870	      1201	setup.c	FUNCTION_35	CALL_2
0x4002870	          0x4889c2	                            mov rdx, rax	      1201	setup.c	FUNCTION_35	CALL_2
0x4002873	          0x4889d0	                            mov rax, rdx	      1202	setup.c	FUNCTION_35
0x4002876	        0x4883c408	                              add rsp, 8	      1202	setup.c	FUNCTION_35
0x400287a	              0x5b	                                 pop rbx	      1202	setup.c	FUNCTION_35
0x400287b	              0x5d	                                 pop rbp	      1202	setup.c	FUNCTION_35
0x400287c	              0xc3	                                     ret	      1202	setup.c	FUNCTION_35
is_inside_git_dir	CALL,2:WHILE,0:FOR,0:SWITCH,0:DO,0:IF,1:ELSE,0:functions,0	12
0x4000c37	    0x833d00000000	               cmp dword [0x04000c3e], 0	       368	setup.c	FUNCTION_14	IF_1
0x4000c3e	            0x7922	                           jns 0x4000c62	       368	setup.c	FUNCTION_14	IF_1
0x4000c40	        0x4883ec08	                              sub rsp, 8	       367	setup.c	FUNCTION_14
0x4000c44	      0xe800000000	                          call 0x4000c49	       369	setup.c	FUNCTION_14	CALL_2
0x4000c49	          0x4889c7	                            mov rdi, rax	       369	setup.c	FUNCTION_14	CALL_2
0x4000c4c	      0xe800000000	                          call 0x4000c51	       369	setup.c	FUNCTION_14	CALL_2
0x4000c51	    0x890500000000	            mov dword [0x04000c57], eax 	       369	setup.c	FUNCTION_14	CALL_2
0x4000c57	    0x8b0500000000	            mov eax, dword [0x04000c5d] 	       371	setup.c	FUNCTION_14
0x4000c5d	        0x4883c408	                              add rsp, 8	       371	setup.c	FUNCTION_14
0x4000c61	              0xc3	                                     ret	       371	setup.c	FUNCTION_14
0x4000c62	    0x8b0500000000	            mov eax, dword [0x04000c68] 	       371	setup.c	FUNCTION_14
0x4000c68	              0xc3	                                     ret	       371	setup.c	FUNCTION_14
