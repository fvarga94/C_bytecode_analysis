option_parse_strategy	WHILE,0:functions,0:FOR,0:IF,1:SWITCH,0:CALL,2:ELSE,0:DO,0	12
0x40015b9	            0x85d2	                           test edx, edx	       174	merge.c	FUNCTION_4	IF_1
0x40015bb	            0x751e	                           jne 0x40015db	       174	merge.c	FUNCTION_4	IF_1
0x40015bd	        0x4883ec08	                              sub rsp, 8	       173	merge.c	FUNCTION_4
0x40015c1	          0x4889f7	                            mov rdi, rsi	       173	merge.c	FUNCTION_4
0x40015c4	      0xe8c5fcffff	                   call sym.get_strategy	       177	merge.c	FUNCTION_4	CALL_2
0x40015c9	          0x4889c7	                            mov rdi, rax	       177	merge.c	FUNCTION_4	CALL_2
0x40015cc	      0xe810eeffff	                call sym.append_strategy	       177	merge.c	FUNCTION_4	CALL_2
0x40015d1	      0xb800000000	                              mov eax, 0	       179	merge.c	FUNCTION_4
0x40015d6	        0x4883c408	                              add rsp, 8	       179	merge.c	FUNCTION_4
0x40015da	              0xc3	                                     ret	       179	merge.c	FUNCTION_4
0x40015db	      0xb800000000	                              mov eax, 0	       179	merge.c	FUNCTION_4
0x40015e0	              0xc3	                                     ret	       179	merge.c	FUNCTION_4
restore_state	WHILE,0:functions,0:FOR,0:IF,1:SWITCH,0:CALL,5:ELSE,0:DO,0	63
0x40007b7	              0x55	                                push rbp	       320	merge.c	FUNCTION_11
0x40007b8	              0x53	                                push rbx	       320	merge.c	FUNCTION_11
0x40007b9	    0x4881ec880000	                           sub rsp, 0x88	       320	merge.c	FUNCTION_11
0x40007c0	          0x4889fd	                            mov rbp, rdi	       320	merge.c	FUNCTION_11
0x40007c3	          0x4889f3	                            mov rbx, rsi	       320	merge.c	FUNCTION_11
0x40007c6	    0x64488b042528	                mov rax, qword fs:[0x28]	       320	merge.c	FUNCTION_11
0x40007cf	      0x4889442478	             mov qword [rsp + 0x78], rax	       320	merge.c	FUNCTION_11
0x40007d4	            0x31c0	                            xor eax, eax	       320	merge.c	FUNCTION_11
0x40007d6	    0x48c704240000	                      mov qword [rsp], 0	       321	merge.c	FUNCTION_11
0x40007de	    0x48c744240800	                  mov qword [rsp + 8], 0	       321	merge.c	FUNCTION_11
0x40007e7	    0x48c744241000	               mov qword [rsp + 0x10], 0	       321	merge.c	FUNCTION_11
0x40007f0	    0x48c744242000	               mov qword [rsp + 0x20], 0	       322	merge.c	FUNCTION_11
0x40007f9	    0x48c744242800	               mov qword [rsp + 0x28], 0	       322	merge.c	FUNCTION_11
0x4000802	    0x48c744243000	               mov qword [rsp + 0x30], 0	       322	merge.c	FUNCTION_11
0x400080b	    0x48c744243800	               mov qword [rsp + 0x38], 0	       322	merge.c	FUNCTION_11
0x4000814	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_48	CALL_1
0x4000819	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_48	CALL_1
0x400081e	          0x4889df	                            mov rdi, rbx	       975	cache.h	FUNCTION_48	CALL_1
0x4000821	      0xe800000000	                          call 0x4000826	       975	cache.h	FUNCTION_48	CALL_1
0x4000826	            0x85c0	                           test eax, eax	       324	merge.c	FUNCTION_11	IF_1	CALL_1
0x4000828	     0xf84ae000000	                            je 0x40008dc	       324	merge.c	FUNCTION_11	IF_1	CALL_1
0x400082e	    0x48c744244000	               mov qword [rsp + 0x40], 0	       306	merge.c	FUNCTION_10
0x4000837	    0x48c744244800	               mov qword [rsp + 0x48], 0	       308	merge.c	FUNCTION_10	IF_1
0x4000840	    0x48c744245000	               mov qword [rsp + 0x50], 0	       309	merge.c	FUNCTION_10
0x4000849	    0x48c744245800	               mov qword [rsp + 0x58], 0	       310	merge.c	FUNCTION_10
0x4000852	          0x4889ef	                            mov rdi, rbp	       311	merge.c	FUNCTION_10	CALL_1
0x4000855	      0xe800000000	                          call 0x400085a	       311	merge.c	FUNCTION_10	CALL_1
0x400085a	      0x4889442460	             mov qword [rsp + 0x60], rax	       311	merge.c	FUNCTION_10	CALL_1
0x400085f	    0x48c744246800	               mov qword [rsp + 0x68], 0	       312	merge.c	FUNCTION_10
0x4000868	      0xbe02000000	                              mov esi, 2	       314	merge.c	FUNCTION_10	IF_2	CALL_2
0x400086d	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       314	merge.c	FUNCTION_10	IF_2	CALL_2
0x4000872	      0xe800000000	                          call 0x4000877	       314	merge.c	FUNCTION_10	IF_2	CALL_2
0x4000877	            0x85c0	                           test eax, eax	       314	merge.c	FUNCTION_10	IF_2	CALL_2
0x4000879	            0x741e	                            je 0x4000899	       314	merge.c	FUNCTION_10	IF_2	CALL_2
0x400087b	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x4000880	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x4000885	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x400088a	      0xe800000000	                          call 0x400088f	        54	gettext.h	FUNCTION_70
0x400088f	          0x4889c7	                            mov rdi, rax	       315	merge.c	FUNCTION_10	CALL_4
0x4000892	            0xb000	                               mov al, 0	       315	merge.c	FUNCTION_10	CALL_4
0x4000894	      0xe800000000	                          call 0x4000899	       315	merge.c	FUNCTION_10	CALL_4
0x4000899	          0x4889df	                            mov rdi, rbx	       329	merge.c	FUNCTION_11	CALL_3
0x400089c	      0xe800000000	                          call 0x40008a1	       329	merge.c	FUNCTION_11	CALL_3
0x40008a1	      0x4889442430	             mov qword [rsp + 0x30], rax	       329	merge.c	FUNCTION_11	CALL_3
0x40008a6	      0xbe02000000	                              mov esi, 2	       335	merge.c	FUNCTION_11	CALL_4
0x40008ab	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       335	merge.c	FUNCTION_11	CALL_4
0x40008b0	      0xe800000000	                          call 0x40008b5	       335	merge.c	FUNCTION_11	CALL_4
0x40008b5	          0x4889e7	                            mov rdi, rsp	       337	merge.c	FUNCTION_11	CALL_5
0x40008b8	      0xe800000000	                          call 0x40008bd	       337	merge.c	FUNCTION_11	CALL_5
0x40008bd	    0x41b800000000	                              mov r8d, 0	       338	merge.c	FUNCTION_11
0x40008c3	      0xb900000000	                              mov ecx, 0	       338	merge.c	FUNCTION_11
0x40008c8	      0xba00000000	                              mov edx, 0	       338	merge.c	FUNCTION_11
0x40008cd	      0xbe04000000	                              mov esi, 4	       338	merge.c	FUNCTION_11
0x40008d2	      0xbf00000000	                              mov edi, 0	       338	merge.c	FUNCTION_11
0x40008d7	      0xe800000000	                          call 0x40008dc	       338	merge.c	FUNCTION_11
0x40008dc	      0x488b442478	            mov rax, qword [rsp + 0x78] 	       339	merge.c	FUNCTION_11
0x40008e1	    0x644833042528	                xor rax, qword fs:[0x28]	       339	merge.c	FUNCTION_11
0x40008ea	            0x7405	                            je 0x40008f1	       339	merge.c	FUNCTION_11
0x40008ec	      0xe800000000	                          call 0x40008f1	       339	merge.c	FUNCTION_11
0x40008f1	    0x4881c4880000	                           add rsp, 0x88	       339	merge.c	FUNCTION_11
0x40008f8	              0x5b	                                 pop rbx	       339	merge.c	FUNCTION_11
0x40008f9	              0x5d	                                 pop rbp	       339	merge.c	FUNCTION_11
0x40008fa	              0xc3	                                     ret	       339	merge.c	FUNCTION_11
write_merge_heads	WHILE,0:functions,0:FOR,1:IF,2:SWITCH,0:CALL,10:ELSE,1:DO,0	63
0x40005a5	              0x55	                                push rbp	       928	merge.c	FUNCTION_32
0x40005a6	              0x53	                                push rbx	       928	merge.c	FUNCTION_32
0x40005a7	        0x4883ec28	                           sub rsp, 0x28	       928	merge.c	FUNCTION_32
0x40005ab	          0x4889fb	                            mov rbx, rdi	       928	merge.c	FUNCTION_32
0x40005ae	    0x64488b042528	                mov rax, qword fs:[0x28]	       928	merge.c	FUNCTION_32
0x40005b7	      0x4889442418	             mov qword [rsp + 0x18], rax	       928	merge.c	FUNCTION_32
0x40005bc	            0x31c0	                            xor eax, eax	       928	merge.c	FUNCTION_32
0x40005be	    0x48c704240000	                      mov qword [rsp], 0	       930	merge.c	FUNCTION_32
0x40005c6	    0x48c744240800	                  mov qword [rsp + 8], 0	       930	merge.c	FUNCTION_32
0x40005cf	    0x48c744241000	               mov qword [rsp + 0x10], 0	       930	merge.c	FUNCTION_32
0x40005d8	            0xeb39	                           jmp 0x4000613	       932	merge.c	FUNCTION_32	FOR_1
0x40005da	          0x488b03	                    mov rax, qword [rbx]	       934	merge.c	FUNCTION_32	FOR_1
0x40005dd	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       935	merge.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x40005e1	          0x4885d2	                           test rdx, rdx	       935	merge.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x40005e4	            0x740e	                            je 0x40005f4	       935	merge.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x40005e6	          0x488b3a	                    mov rdi, qword [rdx]	       935	merge.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x40005e9	          0x4885ff	                           test rdi, rdi	       935	merge.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x40005ec	            0x7406	                            je 0x40005f4	       935	merge.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x40005ee	        0x4883c704	                              add rdi, 4	       936	merge.c	FUNCTION_32	FOR_1	IF_1	CALL_2
0x40005f2	            0xeb04	                           jmp 0x40005f8	       936	merge.c	FUNCTION_32	FOR_1	IF_1	CALL_2
0x40005f4	        0x488d7804	                      lea rdi, [rax + 4]	       938	merge.c	FUNCTION_32	FOR_1	ELSE_1
0x40005f8	      0xe800000000	                          call 0x40005fd	       940	merge.c	FUNCTION_32	FOR_1	CALL_4
0x40005fd	          0x4889c2	                            mov rdx, rax	       940	merge.c	FUNCTION_32	FOR_1	CALL_4
0x4000600	      0xbe00000000	                              mov esi, 0	       940	merge.c	FUNCTION_32	FOR_1	CALL_4
0x4000605	          0x4889e7	                            mov rdi, rsp	       940	merge.c	FUNCTION_32	FOR_1	CALL_4
0x4000608	            0xb000	                               mov al, 0	       940	merge.c	FUNCTION_32	FOR_1	CALL_4
0x400060a	      0xe800000000	                          call 0x400060f	       940	merge.c	FUNCTION_32	FOR_1	CALL_4
0x400060f	        0x488b5b08	                mov rbx, qword [rbx + 8]	       932	merge.c	FUNCTION_32	FOR_1
0x4000613	          0x4885db	                           test rbx, rbx	       932	merge.c	FUNCTION_32	FOR_1
0x4000616	            0x75c2	                           jne 0x40005da	       932	merge.c	FUNCTION_32	FOR_1
0x4000618	      0x488b6c2408	                mov rbp, qword [rsp + 8]	       942	merge.c	FUNCTION_32	CALL_6
0x400061d	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       942	merge.c	FUNCTION_32	CALL_6
0x4000622	      0xe800000000	                          call 0x4000627	       942	merge.c	FUNCTION_32	CALL_6
0x4000627	          0x4889ea	                            mov rdx, rbp	       942	merge.c	FUNCTION_32	CALL_6
0x400062a	          0x4889de	                            mov rsi, rbx	       942	merge.c	FUNCTION_32	CALL_6
0x400062d	          0x4889c7	                            mov rdi, rax	       942	merge.c	FUNCTION_32	CALL_6
0x4000630	      0xe800000000	                          call 0x4000635	       942	merge.c	FUNCTION_32	CALL_6
0x4000635	      0xbe00000000	                              mov esi, 0	       944	merge.c	FUNCTION_32
0x400063a	          0x4889e7	                            mov rdi, rsp	       944	merge.c	FUNCTION_32
0x400063d	      0xe8d3feffff	                  call sym.strbuf_setlen	       944	merge.c	FUNCTION_32
0x4000642	    0x833d00000000	               cmp dword [0x04000649], 0	       945	merge.c	FUNCTION_32	IF_2
0x4000649	            0x7512	                           jne 0x400065d	       945	merge.c	FUNCTION_32	IF_2
0x400064b	      0xba05000000	                              mov edx, 5	       279	strbuf.h	FUNCTION_76	CALL_2
0x4000650	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_76	CALL_2
0x4000655	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_76	CALL_2
0x4000658	      0xe800000000	                          call 0x400065d	       279	strbuf.h	FUNCTION_76	CALL_2
0x400065d	      0x488b6c2408	                mov rbp, qword [rsp + 8]	       947	merge.c	FUNCTION_32	CALL_9
0x4000662	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       947	merge.c	FUNCTION_32	CALL_9
0x4000667	      0xe800000000	                          call 0x400066c	       947	merge.c	FUNCTION_32	CALL_9
0x400066c	          0x4889ea	                            mov rdx, rbp	       947	merge.c	FUNCTION_32	CALL_9
0x400066f	          0x4889de	                            mov rsi, rbx	       947	merge.c	FUNCTION_32	CALL_9
0x4000672	          0x4889c7	                            mov rdi, rax	       947	merge.c	FUNCTION_32	CALL_9
0x4000675	      0xe800000000	                          call 0x400067a	       947	merge.c	FUNCTION_32	CALL_9
0x400067a	          0x4889e7	                            mov rdi, rsp	       948	merge.c	FUNCTION_32	CALL_10
0x400067d	      0xe800000000	                          call 0x4000682	       948	merge.c	FUNCTION_32	CALL_10
0x4000682	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       949	merge.c	FUNCTION_32
0x4000687	    0x644833042528	                xor rax, qword fs:[0x28]	       949	merge.c	FUNCTION_32
0x4000690	            0x7405	                            je 0x4000697	       949	merge.c	FUNCTION_32
0x4000692	      0xe800000000	                          call 0x4000697	       949	merge.c	FUNCTION_32
0x4000697	        0x4883c428	                           add rsp, 0x28	       949	merge.c	FUNCTION_32
0x400069b	              0x5b	                                 pop rbx	       949	merge.c	FUNCTION_32
0x400069c	              0x5d	                                 pop rbp	       949	merge.c	FUNCTION_32
0x400069d	              0xc3	                                     ret	       949	merge.c	FUNCTION_32
finish_up_to_date	WHILE,0:functions,0:FOR,0:IF,1:SWITCH,0:CALL,2:ELSE,0:DO,0	20
0x4000730	              0x53	                                push rbx	       343	merge.c	FUNCTION_12
0x4000731	    0x833d00000000	               cmp dword [0x04000738], 0	       344	merge.c	FUNCTION_12	IF_1
0x4000738	            0x783c	                            js 0x4000776	       344	merge.c	FUNCTION_12	IF_1
0x400073a	          0x4889fb	                            mov rbx, rdi	       344	merge.c	FUNCTION_12	IF_1
0x400073d	      0xb800000000	                              mov eax, 0	       345	merge.c	FUNCTION_12	CALL_1
0x4000742	    0x833d00000000	               cmp dword [0x04000749], 0	       345	merge.c	FUNCTION_12	CALL_1
0x4000749	            0x7414	                            je 0x400075f	       345	merge.c	FUNCTION_12	CALL_1
0x400074b	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x4000750	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x4000755	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x400075a	      0xe800000000	                          call 0x400075f	        54	gettext.h	FUNCTION_70
0x400075f	          0x4889d9	                            mov rcx, rbx	       104	stdio2.h	CALL_389
0x4000762	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_389
0x4000765	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_389
0x400076a	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_389
0x400076f	            0xb000	                               mov al, 0	       104	stdio2.h	CALL_389
0x4000771	      0xe800000000	                          call 0x4000776	       104	stdio2.h	CALL_389
0x4000776	      0xe8fafdffff	                      call sym.drop_save	       346	merge.c	FUNCTION_12	CALL_2
0x400077b	              0x5b	                                 pop rbx	       347	merge.c	FUNCTION_12
0x400077c	              0xc3	                                     ret	       347	merge.c	FUNCTION_12
try_merge_strategy	WHILE,0:functions,0:FOR,2:IF,7:SWITCH,0:CALL,22:ELSE,1:DO,0	178
0x40008fb	            0x4156	                                push r14	       649	merge.c	FUNCTION_20
0x40008fd	            0x4155	                                push r13	       649	merge.c	FUNCTION_20
0x40008ff	            0x4154	                                push r12	       649	merge.c	FUNCTION_20
0x4000901	              0x55	                                push rbp	       649	merge.c	FUNCTION_20
0x4000902	              0x53	                                push rbx	       649	merge.c	FUNCTION_20
0x4000903	    0x4881ecb00400	                          sub rsp, 0x4b0	       649	merge.c	FUNCTION_20
0x400090a	          0x4889fb	                            mov rbx, rdi	       649	merge.c	FUNCTION_20
0x400090d	          0x4889f5	                            mov rbp, rsi	       649	merge.c	FUNCTION_20
0x4000910	          0x4989d5	                            mov r13, rdx	       649	merge.c	FUNCTION_20
0x4000913	          0x4989ce	                            mov r14, rcx	       649	merge.c	FUNCTION_20
0x4000916	    0x64488b042528	                mov rax, qword fs:[0x28]	       649	merge.c	FUNCTION_20
0x400091f	    0x48898424a804	            mov qword [rsp + 0x4a8], rax	       649	merge.c	FUNCTION_20
0x4000927	            0x31c0	                            xor eax, eax	       649	merge.c	FUNCTION_20
0x4000929	      0xbe01000000	                              mov esi, 1	       653	merge.c	FUNCTION_20	CALL_1
0x400092e	      0xbf00000000	                              mov edi, 0	       653	merge.c	FUNCTION_20	CALL_1
0x4000933	      0xe800000000	                          call 0x4000938	       653	merge.c	FUNCTION_20	CALL_1
0x4000938	    0x41b800000000	                              mov r8d, 0	       654	merge.c	FUNCTION_20
0x400093e	      0xb900000000	                              mov ecx, 0	       654	merge.c	FUNCTION_20
0x4000943	      0xba00000000	                              mov edx, 0	       654	merge.c	FUNCTION_20
0x4000948	      0xbe04000000	                              mov esi, 4	       654	merge.c	FUNCTION_20
0x400094d	      0xbf00000000	                              mov edi, 0	       654	merge.c	FUNCTION_20
0x4000952	      0xe800000000	                          call 0x4000957	       654	merge.c	FUNCTION_20
0x4000957	      0xba03000000	                              mov edx, 3	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x400095c	      0xbe00000000	                              mov esi, 0	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x4000961	      0xbf00000000	                              mov edi, 0	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x4000966	      0xe800000000	                          call 0x400096b	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x400096b	            0x85c0	                           test eax, eax	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x400096d	            0x742b	                            je 0x400099a	       655	merge.c	FUNCTION_20	IF_1	CALL_2
0x400096f	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x4000974	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x4000979	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x400097e	      0xe800000000	                          call 0x4000983	        54	gettext.h	FUNCTION_70
0x4000983	          0x4889c7	                            mov rdi, rax	       657	merge.c	FUNCTION_20	CALL_3
0x4000986	      0xb800000000	                              mov eax, 0	       657	merge.c	FUNCTION_20	CALL_3
0x400098b	      0xe800000000	                          call 0x4000990	       657	merge.c	FUNCTION_20	CALL_3
0x4000990	      0xb8ffffffff	                     mov eax, 0xffffffff	       657	merge.c	FUNCTION_20	CALL_3
0x4000995	      0xe91f020000	                           jmp 0x4000bb9	       657	merge.c	FUNCTION_20	CALL_3
0x400099a	      0xbf00000000	                              mov edi, 0	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x400099f	      0xb90a000000	                            mov ecx, 0xa	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40009a4	          0x4889de	                            mov rsi, rbx	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40009a7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40009a9	           0xf97c2	                                 seta dl	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40009ac	           0xf92c0	                                 setb al	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40009af	            0x38c2	                              cmp dl, al	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40009b1	            0x741d	                            je 0x40009d0	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40009b3	      0xbf00000000	                              mov edi, 0	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40009b8	      0xb908000000	                              mov ecx, 8	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40009bd	          0x4889de	                            mov rsi, rbx	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40009c0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40009c2	           0xf97c2	                                 seta dl	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40009c5	           0xf92c0	                                 setb al	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40009c8	            0x38c2	                              cmp dl, al	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40009ca	     0xf85c7010000	                           jne 0x4000b97	       659	merge.c	FUNCTION_20	IF_2	CALL_5
0x40009d0	    0x48c744240800	                  mov qword [rsp + 8], 0	       662	merge.c	FUNCTION_20	IF_2
0x40009d9	      0x49837d0800	                  cmp qword [r13 + 8], 0	       666	merge.c	FUNCTION_20	IF_2	IF_3
0x40009de	            0x742b	                            je 0x4000a0b	       666	merge.c	FUNCTION_20	IF_2	IF_3
0x40009e0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x40009e5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x40009ea	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x40009ef	      0xe800000000	                          call 0x40009f4	        54	gettext.h	FUNCTION_70
0x40009f4	          0x4889c7	                            mov rdi, rax	       667	merge.c	FUNCTION_20	IF_2	IF_3	CALL_6
0x40009f7	      0xb800000000	                              mov eax, 0	       667	merge.c	FUNCTION_20	IF_2	IF_3	CALL_6
0x40009fc	      0xe800000000	                          call 0x4000a01	       667	merge.c	FUNCTION_20	IF_2	IF_3	CALL_6
0x4000a01	      0xb802000000	                              mov eax, 2	       668	merge.c	FUNCTION_20	IF_2	IF_3
0x4000a06	      0xe9ae010000	                           jmp 0x4000bb9	       668	merge.c	FUNCTION_20	IF_2	IF_3
0x4000a0b	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       671	merge.c	FUNCTION_20	IF_2	CALL_7
0x4000a10	      0xe800000000	                          call 0x4000a15	       671	merge.c	FUNCTION_20	IF_2	CALL_7
0x4000a15	      0xbf00000000	                              mov edi, 0	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x4000a1a	      0xb908000000	                              mov ecx, 8	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x4000a1f	          0x4889de	                            mov rsi, rbx	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x4000a22	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x4000a24	           0xf97c2	                                 seta dl	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x4000a27	           0xf92c0	                                 setb al	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x4000a2a	            0x38c2	                              cmp dl, al	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x4000a2c	            0x7509	                           jne 0x4000a37	       672	merge.c	FUNCTION_20	IF_2	IF_4	CALL_8
0x4000a2e	    0x48c744243000	               mov qword [rsp + 0x30], 0	       673	merge.c	FUNCTION_20	IF_2	IF_4
0x4000a37	     0xfb605000000	           movzx eax, byte [0x04000a3e] 	       675	merge.c	FUNCTION_20	IF_2
0x4000a3e	          0x83e001	                              and eax, 1	       675	merge.c	FUNCTION_20	IF_2
0x4000a41	       0xfb654243c	           movzx edx, byte [rsp + 0x3c] 	       675	merge.c	FUNCTION_20	IF_2
0x4000a46	          0x83e2fe	                     and edx, 0xfffffffe	       675	merge.c	FUNCTION_20	IF_2
0x4000a49	             0x9d0	                             or eax, edx	       675	merge.c	FUNCTION_20	IF_2
0x4000a4b	        0x8844243c	               mov byte [rsp + 0x3c], al	       675	merge.c	FUNCTION_20	IF_2
0x4000a4f	    0x8b0500000000	            mov eax, dword [0x04000a55] 	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x4000a55	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x4000a58	            0x750a	                           jne 0x4000a64	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x4000a5a	      0xbf02000000	                              mov edi, 2	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x4000a5f	      0xe800000000	                          call 0x4000a64	       677	merge.c	FUNCTION_20	IF_2	CALL_9
0x4000a64	        0x89442460	             mov dword [rsp + 0x60], eax	       676	merge.c	FUNCTION_20	IF_2
0x4000a68	    0x48833d000000	               cmp qword [0x04000a70], 0	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x4000a70	            0x7469	                            je 0x4000adb	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x4000a72	      0xb800000000	                              mov eax, 0	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x4000a77	      0xbb00000000	                              mov ebx, 0	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x4000a7c	    0x4c8d24c50000	                        lea r12, [rax*8]	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x4000a84	    0x488b15000000	            mov rdx, qword [0x04000a8b] 	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x4000a8b	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x4000a8f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x4000a94	      0xe800000000	                          call 0x4000a99	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x4000a99	            0x85c0	                           test eax, eax	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x4000a9b	            0x742f	                            je 0x4000acc	       680	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5	CALL_10
0x4000a9d	    0x488b05000000	            mov rax, qword [0x04000aa4] 	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x4000aa4	        0x4a8b1c20	              mov rbx, qword [rax + r12]	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x4000aa8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x4000aad	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x4000ab2	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x4000ab7	      0xe800000000	                          call 0x4000abc	        54	gettext.h	FUNCTION_70
0x4000abc	          0x4889de	                            mov rsi, rbx	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x4000abf	          0x4889c7	                            mov rdi, rax	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x4000ac2	      0xb800000000	                              mov eax, 0	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x4000ac7	      0xe800000000	                          call 0x4000acc	       681	merge.c	FUNCTION_20	IF_2	FOR_1	IF_5
0x4000acc	          0x83c301	                              add ebx, 1	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x4000acf	          0x4863c3	                         movsxd rax, ebx	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x4000ad2	    0x483b05000000	            cmp rax, qword [0x04000ad9] 	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x4000ad9	            0x72a1	                            jb 0x4000a7c	       679	merge.c	FUNCTION_20	IF_2	FOR_1
0x4000adb	    0x48c744241800	               mov qword [rsp + 0x18], 0	       683	merge.c	FUNCTION_20	IF_2
0x4000ae4	        0x498b4500	                    mov rax, qword [r13]	       684	merge.c	FUNCTION_20	IF_2	CALL_13
0x4000ae8	        0x488b4018	            mov rax, qword [rax + 0x18] 	       684	merge.c	FUNCTION_20	IF_2	CALL_13
0x4000aec	        0x4883c008	                              add rax, 8	       684	merge.c	FUNCTION_20	IF_2	CALL_13
0x4000af0	      0x4889442420	             mov qword [rsp + 0x20], rax	       684	merge.c	FUNCTION_20	IF_2	CALL_13
0x4000af5	          0x4885ed	                           test rbp, rbp	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x4000af8	            0x7417	                            je 0x4000b11	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x4000afa	      0x488d742408	                      lea rsi, [rsp + 8]	       687	merge.c	FUNCTION_20	IF_2	CALL_14
0x4000aff	        0x488b7d00	                    mov rdi, qword [rbp]	       687	merge.c	FUNCTION_20	IF_2	CALL_14
0x4000b03	      0xe800000000	                          call 0x4000b08	       687	merge.c	FUNCTION_20	IF_2	CALL_14
0x4000b08	        0x488b6d08	                mov rbp, qword [rbp + 8]	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x4000b0c	          0x4885ed	                           test rbp, rbp	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x4000b0f	            0x75e9	                           jne 0x4000afa	       686	merge.c	FUNCTION_20	IF_2	FOR_2
0x4000b11	      0xbe01000000	                              mov esi, 1	       689	merge.c	FUNCTION_20	IF_2	CALL_15
0x4000b16	      0xbf00000000	                              mov edi, 0	       689	merge.c	FUNCTION_20	IF_2	CALL_15
0x4000b1b	      0xe800000000	                          call 0x4000b20	       689	merge.c	FUNCTION_20	IF_2	CALL_15
0x4000b20	          0x4989e0	                             mov r8, rsp	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x4000b23	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x4000b28	        0x498b5500	                    mov rdx, qword [r13]	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x4000b2c	          0x4c89f6	                            mov rsi, r14	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x4000b2f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x4000b34	      0xe800000000	                          call 0x4000b39	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x4000b39	            0x89c3	                            mov ebx, eax	       690	merge.c	FUNCTION_20	IF_2	CALL_16
0x4000b3b	            0x85c0	                           test eax, eax	       692	merge.c	FUNCTION_20	IF_2	IF_6
0x4000b3d	            0x790a	                           jns 0x4000b49	       692	merge.c	FUNCTION_20	IF_2	IF_6
0x4000b3f	      0xbf80000000	                           mov edi, 0x80	       693	merge.c	FUNCTION_20	IF_2	CALL_17
0x4000b44	      0xe800000000	                          call 0x4000b49	       693	merge.c	FUNCTION_20	IF_2	CALL_17
0x4000b49	      0xba03000000	                              mov edx, 3	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x4000b4e	      0xbe00000000	                              mov esi, 0	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x4000b53	      0xbf00000000	                              mov edi, 0	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x4000b58	      0xe800000000	                          call 0x4000b5d	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x4000b5d	            0x85c0	                           test eax, eax	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x4000b5f	            0x742c	                            je 0x4000b8d	       694	merge.c	FUNCTION_20	IF_2	IF_7	CALL_18
0x4000b61	      0xe800000000	                          call 0x4000b66	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x4000b66	          0x4889c3	                            mov rbx, rax	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x4000b69	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x4000b6e	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x4000b73	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x4000b78	      0xe800000000	                          call 0x4000b7d	        54	gettext.h	FUNCTION_70
0x4000b7d	          0x4889de	                            mov rsi, rbx	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x4000b80	          0x4889c7	                            mov rdi, rax	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x4000b83	      0xb800000000	                              mov eax, 0	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x4000b88	      0xe800000000	                          call 0x4000b8d	       696	merge.c	FUNCTION_20	IF_2	CALL_21
0x4000b8d	            0x85db	                           test ebx, ebx	       697	merge.c	FUNCTION_20	IF_2
0x4000b8f	           0xf94c0	                                 sete al	       697	merge.c	FUNCTION_20	IF_2
0x4000b92	           0xfb6c0	                           movzx eax, al	       697	merge.c	FUNCTION_20	IF_2
0x4000b95	            0xeb22	                           jmp 0x4000bb9	       697	merge.c	FUNCTION_20	IF_2
0x4000b97	          0x4d89e9	                             mov r9, r13	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x4000b9a	    0x41b800000000	                              mov r8d, 0	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x4000ba0	          0x4889e9	                            mov rcx, rbp	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x4000ba3	    0x488b15000000	            mov rdx, qword [0x04000baa] 	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x4000baa	    0x488b35000000	            mov rsi, qword [0x04000bb1] 	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x4000bb1	          0x4889df	                            mov rdi, rbx	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x4000bb4	      0xe800000000	                          call 0x4000bb9	       699	merge.c	FUNCTION_20	ELSE_1	CALL_22
0x4000bb9	    0x488b8c24a804	           mov rcx, qword [rsp + 0x4a8] 	       702	merge.c	FUNCTION_20
0x4000bc1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       702	merge.c	FUNCTION_20
0x4000bca	            0x7405	                            je 0x4000bd1	       702	merge.c	FUNCTION_20
0x4000bcc	      0xe800000000	                          call 0x4000bd1	       702	merge.c	FUNCTION_20
0x4000bd1	    0x4881c4b00400	                          add rsp, 0x4b0	       702	merge.c	FUNCTION_20
0x4000bd8	              0x5b	                                 pop rbx	       702	merge.c	FUNCTION_20
0x4000bd9	              0x5d	                                 pop rbp	       702	merge.c	FUNCTION_20
0x4000bda	            0x415c	                                 pop r12	       702	merge.c	FUNCTION_20
0x4000bdc	            0x415d	                                 pop r13	       702	merge.c	FUNCTION_20
0x4000bde	            0x415e	                                 pop r14	       702	merge.c	FUNCTION_20
0x4000be0	              0xc3	                                     ret	       702	merge.c	FUNCTION_20
prepare_to_commit	WHILE,0:functions,0:FOR,0:IF,8:SWITCH,0:CALL,27:ELSE,0:DO,0	152
0x4001011	            0x4154	                                push r12	       770	merge.c	FUNCTION_26
0x4001013	              0x55	                                push rbp	       770	merge.c	FUNCTION_26
0x4001014	              0x53	                                push rbx	       770	merge.c	FUNCTION_26
0x4001015	        0x4883ec20	                           sub rsp, 0x20	       770	merge.c	FUNCTION_26
0x4001019	          0x4889fb	                            mov rbx, rdi	       770	merge.c	FUNCTION_26
0x400101c	    0x64488b042528	                mov rax, qword fs:[0x28]	       770	merge.c	FUNCTION_26
0x4001025	      0x4889442418	             mov qword [rsp + 0x18], rax	       770	merge.c	FUNCTION_26
0x400102a	            0x31c0	                            xor eax, eax	       770	merge.c	FUNCTION_26
0x400102c	    0x48c704240000	                      mov qword [rsp], 0	       771	merge.c	FUNCTION_26
0x4001034	    0x48c744240800	                  mov qword [rsp + 8], 0	       771	merge.c	FUNCTION_26
0x400103d	    0x48c744241000	               mov qword [rsp + 0x10], 0	       771	merge.c	FUNCTION_26
0x4001046	      0xbe00000000	                              mov esi, 0	       772	merge.c	FUNCTION_26	CALL_1
0x400104b	          0x4889e7	                            mov rdi, rsp	       772	merge.c	FUNCTION_26	CALL_1
0x400104e	      0xe800000000	                          call 0x4001053	       772	merge.c	FUNCTION_26	CALL_1
0x4001053	      0xbe0a000000	                            mov esi, 0xa	       773	merge.c	FUNCTION_26	CALL_2
0x4001058	          0x4889e7	                            mov rdi, rsp	       773	merge.c	FUNCTION_26	CALL_2
0x400105b	      0xe83ef6ffff	                   call sym.strbuf_addch	       773	merge.c	FUNCTION_26	CALL_2
0x4001060	    0x833d00000000	               cmp dword [0x04001067], 0	       774	merge.c	FUNCTION_26	IF_1
0x4001067	            0x7416	                            je 0x400107f	       774	merge.c	FUNCTION_26	IF_1
0x4001069	      0xba00000000	                              mov edx, 0	       775	merge.c	FUNCTION_26	IF_1
0x400106e	      0xbe07030000	                          mov esi, 0x307	       775	merge.c	FUNCTION_26	IF_1
0x4001073	      0xbf00000000	                              mov edi, 0	       775	merge.c	FUNCTION_26	IF_1
0x4001078	            0xb000	                               mov al, 0	       775	merge.c	FUNCTION_26	IF_1
0x400107a	      0xe800000000	                          call 0x400107f	       775	merge.c	FUNCTION_26	IF_1
0x400107f	    0x833d00000000	               cmp dword [0x04001086], 0	       776	merge.c	FUNCTION_26	IF_2
0x4001086	            0x7e2a	                           jle 0x40010b2	       776	merge.c	FUNCTION_26	IF_2
0x4001088	     0xfbe2d000000	           movsx ebp, byte [0x0400108f] 	       777	merge.c	FUNCTION_26	CALL_4
0x400108f	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x4001094	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x4001099	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x400109e	      0xe800000000	                          call 0x40010a3	        54	gettext.h	FUNCTION_70
0x40010a3	            0x89ea	                            mov edx, ebp	       777	merge.c	FUNCTION_26	CALL_4
0x40010a5	          0x4889c6	                            mov rsi, rax	       777	merge.c	FUNCTION_26	CALL_4
0x40010a8	          0x4889e7	                            mov rdi, rsp	       777	merge.c	FUNCTION_26	CALL_4
0x40010ab	            0xb000	                               mov al, 0	       777	merge.c	FUNCTION_26	CALL_4
0x40010ad	      0xe800000000	                          call 0x40010b2	       777	merge.c	FUNCTION_26	CALL_4
0x40010b2	    0x833d00000000	               cmp dword [0x040010b9], 0	       778	merge.c	FUNCTION_26	IF_3
0x40010b9	            0x741e	                            je 0x40010d9	       778	merge.c	FUNCTION_26	IF_3
0x40010bb	      0x488b742408	                mov rsi, qword [rsp + 8]	       779	merge.c	FUNCTION_26	CALL_6
0x40010c0	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       779	merge.c	FUNCTION_26	CALL_6
0x40010c5	      0xe800000000	                          call 0x40010ca	       779	merge.c	FUNCTION_26	CALL_6
0x40010ca	      0xba00000000	                              mov edx, 0	       779	merge.c	FUNCTION_26	CALL_6
0x40010cf	            0x89c6	                            mov esi, eax	       779	merge.c	FUNCTION_26	CALL_6
0x40010d1	          0x4889e7	                            mov rdi, rsp	       779	merge.c	FUNCTION_26	CALL_6
0x40010d4	      0xe800000000	                          call 0x40010d9	       779	merge.c	FUNCTION_26	CALL_6
0x40010d9	          0x4889df	                            mov rdi, rbx	       780	merge.c	FUNCTION_26	CALL_7
0x40010dc	      0xe8c4f4ffff	              call sym.write_merge_heads	       780	merge.c	FUNCTION_26	CALL_7
0x40010e1	      0x4c8b642408	                mov r12, qword [rsp + 8]	       781	merge.c	FUNCTION_26	CALL_9
0x40010e6	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	       781	merge.c	FUNCTION_26	CALL_9
0x40010eb	      0xe800000000	                          call 0x40010f0	       781	merge.c	FUNCTION_26	CALL_9
0x40010f0	          0x4c89e2	                            mov rdx, r12	       781	merge.c	FUNCTION_26	CALL_9
0x40010f3	          0x4889ee	                            mov rsi, rbp	       781	merge.c	FUNCTION_26	CALL_9
0x40010f6	          0x4889c7	                            mov rdi, rax	       781	merge.c	FUNCTION_26	CALL_9
0x40010f9	      0xe800000000	                          call 0x40010fe	       781	merge.c	FUNCTION_26	CALL_9
0x40010fe	      0xe800000000	                          call 0x4001103	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x4001103	          0x4889c5	                            mov rbp, rax	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x4001106	      0xe800000000	                          call 0x400110b	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x400110b	    0x833d00000000	               cmp dword [0x04001112], 0	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x4001112	        0x400f9fc7	                                setg dil	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x4001116	        0x400fb6ff	                          movzx edi, dil	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x400111a	    0x41b900000000	                              mov r9d, 0	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x4001120	    0x41b800000000	                              mov r8d, 0	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x4001126	          0x4889e9	                            mov rcx, rbp	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x4001129	      0xba00000000	                              mov edx, 0	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x400112e	          0x4889c6	                            mov rsi, rax	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x4001131	            0xb000	                               mov al, 0	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x4001133	      0xe800000000	                          call 0x4001138	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x4001138	            0x85c0	                           test eax, eax	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x400113a	            0x740d	                            je 0x4001149	       782	merge.c	FUNCTION_26	IF_4	CALL_11
0x400113c	      0xbe00000000	                              mov esi, 0	       784	merge.c	FUNCTION_26	CALL_13
0x4001141	          0x4889df	                            mov rdi, rbx	       784	merge.c	FUNCTION_26	CALL_13
0x4001144	      0xe877feffff	                   call sym.abort_commit	       784	merge.c	FUNCTION_26	CALL_13
0x4001149	    0x833d00000000	               cmp dword [0x04001150], 0	       785	merge.c	FUNCTION_26	IF_5
0x4001150	            0x7e28	                           jle 0x400117a	       785	merge.c	FUNCTION_26	IF_5
0x4001152	      0xe800000000	                          call 0x4001157	       786	merge.c	FUNCTION_26	IF_5	IF_6	CALL_15
0x4001157	      0xba00000000	                              mov edx, 0	       786	merge.c	FUNCTION_26	IF_5	IF_6	CALL_15
0x400115c	      0xbe00000000	                              mov esi, 0	       786	merge.c	FUNCTION_26	IF_5	IF_6	CALL_15
0x4001161	          0x4889c7	                            mov rdi, rax	       786	merge.c	FUNCTION_26	IF_5	IF_6	CALL_15
0x4001164	      0xe800000000	                          call 0x4001169	       786	merge.c	FUNCTION_26	IF_5	IF_6	CALL_15
0x4001169	            0x85c0	                           test eax, eax	       786	merge.c	FUNCTION_26	IF_5	IF_6	CALL_15
0x400116b	            0x740d	                            je 0x400117a	       786	merge.c	FUNCTION_26	IF_5	IF_6	CALL_15
0x400116d	      0xbe00000000	                              mov esi, 0	       787	merge.c	FUNCTION_26	IF_5	CALL_16
0x4001172	          0x4889df	                            mov rdi, rbx	       787	merge.c	FUNCTION_26	IF_5	CALL_16
0x4001175	      0xe846feffff	                   call sym.abort_commit	       787	merge.c	FUNCTION_26	IF_5	CALL_16
0x400117a	    0x833d00000000	               cmp dword [0x04001181], 0	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x4001181	            0x7445	                            je 0x40011c8	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x4001183	      0xe800000000	                          call 0x4001188	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x4001188	          0x4889c5	                            mov rbp, rax	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x400118b	      0xe800000000	                          call 0x4001190	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x4001190	    0x833d00000000	               cmp dword [0x04001197], 0	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x4001197	        0x400f9fc7	                                setg dil	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x400119b	        0x400fb6ff	                          movzx edi, dil	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x400119f	    0x41b800000000	                              mov r8d, 0	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40011a5	          0x4889e9	                            mov rcx, rbp	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40011a8	      0xba00000000	                              mov edx, 0	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40011ad	          0x4889c6	                            mov rsi, rax	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40011b0	            0xb000	                               mov al, 0	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40011b2	      0xe800000000	                          call 0x40011b7	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40011b7	            0x85c0	                           test eax, eax	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40011b9	            0x740d	                            je 0x40011c8	       790	merge.c	FUNCTION_26	IF_7	CALL_18
0x40011bb	      0xbe00000000	                              mov esi, 0	       793	merge.c	FUNCTION_26	CALL_20
0x40011c0	          0x4889df	                            mov rdi, rbx	       793	merge.c	FUNCTION_26	CALL_20
0x40011c3	      0xe8f8fdffff	                   call sym.abort_commit	       793	merge.c	FUNCTION_26	CALL_20
0x40011c8	      0xe800000000	                          call 0x40011cd	       744	merge.c	FUNCTION_24	CALL_1
0x40011cd	          0x4889c5	                            mov rbp, rax	       744	merge.c	FUNCTION_24	CALL_1
0x40011d0	      0xbe00000000	                              mov esi, 0	       745	merge.c	FUNCTION_24
0x40011d5	          0x4889e7	                            mov rdi, rsp	       745	merge.c	FUNCTION_24
0x40011d8	      0xe838f3ffff	                  call sym.strbuf_setlen	       745	merge.c	FUNCTION_24
0x40011dd	      0xba00000000	                              mov edx, 0	       746	merge.c	FUNCTION_24	IF_1	CALL_2
0x40011e2	          0x4889ee	                            mov rsi, rbp	       746	merge.c	FUNCTION_24	IF_1	CALL_2
0x40011e5	          0x4889e7	                            mov rdi, rsp	       746	merge.c	FUNCTION_24	IF_1	CALL_2
0x40011e8	      0xe800000000	                          call 0x40011ed	       746	merge.c	FUNCTION_24	IF_1	CALL_2
0x40011ed	          0x4885c0	                           test rax, rax	       746	merge.c	FUNCTION_24	IF_1	CALL_2
0x40011f0	            0x7921	                           jns 0x4001213	       746	merge.c	FUNCTION_24	IF_1	CALL_2
0x40011f2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x40011f7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x40011fc	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x4001201	      0xe800000000	                          call 0x4001206	        54	gettext.h	FUNCTION_70
0x4001206	          0x4889ee	                            mov rsi, rbp	       747	merge.c	FUNCTION_24	CALL_4
0x4001209	          0x4889c7	                            mov rdi, rax	       747	merge.c	FUNCTION_24	CALL_4
0x400120c	            0xb000	                               mov al, 0	       747	merge.c	FUNCTION_24	CALL_4
0x400120e	      0xe800000000	                          call 0x4001213	       747	merge.c	FUNCTION_24	CALL_4
0x4001213	    0x833d00000000	               cmp dword [0x0400121a], 0	       796	merge.c	FUNCTION_26	CALL_22
0x400121a	        0x400f9fc6	                                setg sil	       796	merge.c	FUNCTION_26	CALL_22
0x400121e	        0x400fb6f6	                          movzx esi, sil	       796	merge.c	FUNCTION_26	CALL_22
0x4001222	          0x4889e7	                            mov rdi, rsp	       796	merge.c	FUNCTION_26	CALL_22
0x4001225	      0xe800000000	                          call 0x400122a	       796	merge.c	FUNCTION_26	CALL_22
0x400122a	    0x48837c240800	                  cmp qword [rsp + 8], 0	       797	merge.c	FUNCTION_26	IF_8
0x4001230	            0x751f	                           jne 0x4001251	       797	merge.c	FUNCTION_26	IF_8
0x4001232	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x4001237	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x400123c	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x4001241	      0xe800000000	                          call 0x4001246	        54	gettext.h	FUNCTION_70
0x4001246	          0x4889c6	                            mov rsi, rax	       798	merge.c	FUNCTION_26	CALL_24
0x4001249	          0x4889df	                            mov rdi, rbx	       798	merge.c	FUNCTION_26	CALL_24
0x400124c	      0xe86ffdffff	                   call sym.abort_commit	       798	merge.c	FUNCTION_26	CALL_24
0x4001251	      0xbf00000000	                              mov edi, 0	       799	merge.c	FUNCTION_26	CALL_25
0x4001256	      0xe800000000	                          call 0x400125b	       799	merge.c	FUNCTION_26	CALL_25
0x400125b	          0x4889e6	                            mov rsi, rsp	       800	merge.c	FUNCTION_26	CALL_26
0x400125e	      0xbf00000000	                              mov edi, 0	       800	merge.c	FUNCTION_26	CALL_26
0x4001263	      0xe800000000	                          call 0x4001268	       800	merge.c	FUNCTION_26	CALL_26
0x4001268	          0x4889e7	                            mov rdi, rsp	       801	merge.c	FUNCTION_26	CALL_27
0x400126b	      0xe800000000	                          call 0x4001270	       801	merge.c	FUNCTION_26	CALL_27
0x4001270	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       802	merge.c	FUNCTION_26
0x4001275	    0x644833042528	                xor rax, qword fs:[0x28]	       802	merge.c	FUNCTION_26
0x400127e	            0x7405	                            je 0x4001285	       802	merge.c	FUNCTION_26
0x4001280	      0xe800000000	                          call 0x4001285	       802	merge.c	FUNCTION_26
0x4001285	        0x4883c420	                           add rsp, 0x20	       802	merge.c	FUNCTION_26
0x4001289	              0x5b	                                 pop rbx	       802	merge.c	FUNCTION_26
0x400128a	              0x5d	                                 pop rbp	       802	merge.c	FUNCTION_26
0x400128b	            0x415c	                                 pop r12	       802	merge.c	FUNCTION_26
0x400128d	              0xc3	                                     ret	       802	merge.c	FUNCTION_26
get_strategy	WHILE,0:functions,0:FOR,5:IF,7:SWITCH,0:CALL,14:ELSE,0:DO,0	179
0x400128e	            0x4157	                                push r15	       113	merge.c	FUNCTION_2
0x4001290	            0x4156	                                push r14	       113	merge.c	FUNCTION_2
0x4001292	            0x4155	                                push r13	       113	merge.c	FUNCTION_2
0x4001294	            0x4154	                                push r12	       113	merge.c	FUNCTION_2
0x4001296	              0x55	                                push rbp	       113	merge.c	FUNCTION_2
0x4001297	              0x53	                                push rbx	       113	merge.c	FUNCTION_2
0x4001298	        0x4883ec38	                           sub rsp, 0x38	       113	merge.c	FUNCTION_2
0x400129c	      0x48897c2408	                mov qword [rsp + 8], rdi	       113	merge.c	FUNCTION_2
0x40012a1	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	       113	merge.c	FUNCTION_2
0x40012aa	      0x48894c2428	             mov qword [rsp + 0x28], rcx	       113	merge.c	FUNCTION_2
0x40012af	            0x31c9	                            xor ecx, ecx	       113	merge.c	FUNCTION_2
0x40012b1	          0x4885ff	                           test rdi, rdi	       119	merge.c	FUNCTION_2	IF_1
0x40012b4	     0xf84d6020000	                            je 0x4001590	       119	merge.c	FUNCTION_2	IF_1
0x40012ba	      0xbb00000000	                              mov ebx, 0	       119	merge.c	FUNCTION_2	IF_1
0x40012bf	          0x4889d8	                            mov rax, rbx	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40012c2	        0x48c1e004	                              shl rax, 4	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40012c6	    0x488bb0000000	                    mov rsi, qword [rax]	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40012cd	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40012d2	      0xe800000000	                          call 0x40012d7	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40012d7	            0x85c0	                           test eax, eax	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40012d9	            0x7513	                           jne 0x40012ee	       123	merge.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40012db	          0x4863eb	                         movsxd rbp, ebx	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x40012de	        0x48c1e504	                              shl rbp, 4	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x40012e2	    0x488d85000000	                          lea rax, [rbp]	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x40012e9	      0xe9a7020000	                           jmp 0x4001595	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x40012ee	        0x4883c301	                              add rbx, 1	       124	merge.c	FUNCTION_2	FOR_1	IF_2
0x40012f2	        0x4883fb05	                              cmp rbx, 5	       122	merge.c	FUNCTION_2	FOR_1
0x40012f6	            0x75c7	                           jne 0x40012bf	       122	merge.c	FUNCTION_2	FOR_1
0x40012f8	    0x833d00000000	               cmp dword [0x040012ff], 0	       126	merge.c	FUNCTION_2	IF_3
0x40012ff	     0xf85cc000000	                           jne 0x40013d1	       126	merge.c	FUNCTION_2	IF_3
0x4001305	    0xc70500000000	               mov dword [0x0400130f], 1	       128	merge.c	FUNCTION_2	IF_3
0x400130f	    0x48c744241000	               mov qword [rsp + 0x10], 0	        90	string3.h	FUNCTION_103	CALL_6
0x4001318	    0x48c744241800	               mov qword [rsp + 0x18], 0	        90	string3.h	FUNCTION_103	CALL_6
0x4001321	      0xba00000000	                              mov edx, 0	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x4001326	      0xbe00000000	                              mov esi, 0	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x400132b	      0xbf00000000	                              mov edi, 0	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x4001330	      0xe800000000	                          call 0x4001335	       131	merge.c	FUNCTION_2	IF_3	CALL_3
0x4001335	    0x833d00000000	               cmp dword [0x0400133c], 0	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x400133c	     0xf8e80000000	                           jle 0x40013c2	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4001342	    0x41bf00000000	                             mov r15d, 0	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x4001348	          0x4963c7	                        movsxd rax, r15d	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x400134b	    0x488b15000000	            mov rdx, qword [0x04001352] 	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x4001352	        0x4c8b24c2	            mov r12, qword [rdx + rax*8]	       134	merge.c	FUNCTION_2	IF_3	FOR_2
0x4001356	        0x4d8b2c24	                    mov r13, qword [r12]	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400135a	      0xbb00000000	                              mov ebx, 0	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400135f	    0x41be00000000	                             mov r14d, 0	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4001365	        0x4983c408	                              add r12, 8	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4001369	    0x488bab000000	                    mov rbp, qword [rbx]	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4001370	        0x4c892424	                    mov qword [rsp], r12	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4001374	          0x4c89ea	                            mov rdx, r13	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4001377	          0x4889ee	                            mov rsi, rbp	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400137a	          0x4c89e7	                            mov rdi, r12	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x400137d	      0xe800000000	                          call 0x4001382	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4001382	            0x85c0	                           test eax, eax	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4001384	            0x750f	                           jne 0x4001395	       136	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4	CALL_4
0x4001386	    0x42807c2d0000	                 cmp byte [rbp + r13], 0	       137	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x400138c	      0xb801000000	                              mov eax, 1	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x4001391	        0x440f44f0	                         cmove r14d, eax	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x4001395	        0x4883c310	                           add rbx, 0x10	       138	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3	IF_4
0x4001399	        0x4883fb50	                           cmp rbx, 0x50	       135	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3
0x400139d	            0x75ca	                           jne 0x4001369	       135	merge.c	FUNCTION_2	IF_3	FOR_2	FOR_3
0x400139f	          0x4585f6	                         test r14d, r14d	       139	merge.c	FUNCTION_2	IF_3	FOR_2	IF_5
0x40013a2	            0x7511	                           jne 0x40013b5	       139	merge.c	FUNCTION_2	IF_3	FOR_2	IF_5
0x40013a4	          0x4489ea	                           mov edx, r13d	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x40013a7	        0x488b3424	                    mov rsi, qword [rsp]	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x40013ab	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x40013b0	      0xe800000000	                          call 0x40013b5	       140	merge.c	FUNCTION_2	IF_3	FOR_2	CALL_5
0x40013b5	        0x4183c701	                             add r15d, 1	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x40013b9	    0x44393d000000	           cmp dword [0x040013c0], r15d 	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x40013c0	            0x7f86	                            jg 0x4001348	       132	merge.c	FUNCTION_2	IF_3	FOR_2
0x40013c2	      0x488d742410	                   lea rsi, [rsp + 0x10]	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x40013c7	      0xbf00000000	                              mov edi, 0	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x40013cc	      0xe800000000	                          call 0x40013d1	       142	merge.c	FUNCTION_2	IF_3	CALL_6
0x40013d1	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40013d6	          0x4889de	                            mov rsi, rbx	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40013d9	      0xbf00000000	                              mov edi, 0	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40013de	      0xe800000000	                          call 0x40013e3	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40013e3	            0x85c0	                           test eax, eax	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40013e5	     0xf857a010000	                           jne 0x4001565	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40013eb	          0x4889de	                            mov rsi, rbx	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40013ee	      0xbf00000000	                              mov edi, 0	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40013f3	      0xe800000000	                          call 0x40013f8	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40013f8	            0x85c0	                           test eax, eax	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x40013fa	     0xf8565010000	                           jne 0x4001565	       144	merge.c	FUNCTION_2	IF_6	CALL_8
0x4001400	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x4001405	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x400140a	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x400140f	      0xe800000000	                          call 0x4001414	        54	gettext.h	FUNCTION_70
0x4001414	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        97	stdio2.h	CALL_386
0x4001419	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_386
0x400141c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_386
0x4001421	    0x488b3d000000	            mov rdi, qword [0x04001428] 	        97	stdio2.h	CALL_386
0x4001428	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_386
0x400142d	      0xe800000000	                          call 0x4001432	        97	stdio2.h	CALL_386
0x4001432	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x4001437	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x400143c	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x4001441	      0xe800000000	                          call 0x4001446	        54	gettext.h	FUNCTION_70
0x4001446	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_386
0x4001449	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_386
0x400144e	    0x488b3d000000	            mov rdi, qword [0x04001455] 	        97	stdio2.h	CALL_386
0x4001455	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_386
0x400145a	      0xe800000000	                          call 0x400145f	        97	stdio2.h	CALL_386
0x400145f	    0x833d00000000	               cmp dword [0x04001466], 0	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x4001466	            0x7e3d	                           jle 0x40014a5	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x4001468	      0xbb00000000	                              mov ebx, 0	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x400146d	          0x4863d3	                         movsxd rdx, ebx	       148	merge.c	FUNCTION_2	IF_6	FOR_4
0x4001470	    0x488b05000000	            mov rax, qword [0x04001477] 	       148	merge.c	FUNCTION_2	IF_6	FOR_4
0x4001477	        0x488b0cd0	            mov rcx, qword [rax + rdx*8]	        97	stdio2.h	CALL_386
0x400147b	        0x4883c108	                              add rcx, 8	        97	stdio2.h	CALL_386
0x400147f	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_386
0x4001484	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_386
0x4001489	    0x488b3d000000	            mov rdi, qword [0x04001490] 	        97	stdio2.h	CALL_386
0x4001490	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_386
0x4001495	      0xe800000000	                          call 0x400149a	        97	stdio2.h	CALL_386
0x400149a	          0x83c301	                              add ebx, 1	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x400149d	    0x391d00000000	            cmp dword [0x040014a3], ebx 	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x40014a3	            0x7fc8	                            jg 0x400146d	       147	merge.c	FUNCTION_2	IF_6	FOR_4
0x40014a5	    0x488b0d000000	            mov rcx, qword [0x040014ac] 	        97	stdio2.h	CALL_386
0x40014ac	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_386
0x40014b1	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_386
0x40014b6	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_386
0x40014bb	      0xe800000000	                          call 0x40014c0	        97	stdio2.h	CALL_386
0x40014c0	    0x833d00000000	               cmp dword [0x040014c7], 0	       150	merge.c	FUNCTION_2	IF_6	IF_7
0x40014c7	     0xf848e000000	                            je 0x400155b	       150	merge.c	FUNCTION_2	IF_6	IF_7
0x40014cd	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x40014d2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x40014d7	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x40014dc	      0xe800000000	                          call 0x40014e1	        54	gettext.h	FUNCTION_70
0x40014e1	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_386
0x40014e4	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_386
0x40014e9	    0x488b3d000000	            mov rdi, qword [0x040014f0] 	        97	stdio2.h	CALL_386
0x40014f0	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_386
0x40014f5	      0xe800000000	                          call 0x40014fa	        97	stdio2.h	CALL_386
0x40014fa	    0x833d00000000	               cmp dword [0x04001501], 0	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x4001501	            0x7e3d	                           jle 0x4001540	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x4001503	      0xbb00000000	                              mov ebx, 0	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x4001508	          0x4863d3	                         movsxd rdx, ebx	       153	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x400150b	    0x488b05000000	            mov rax, qword [0x04001512] 	       153	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x4001512	        0x488b0cd0	            mov rcx, qword [rax + rdx*8]	        97	stdio2.h	CALL_386
0x4001516	        0x4883c108	                              add rcx, 8	        97	stdio2.h	CALL_386
0x400151a	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_386
0x400151f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_386
0x4001524	    0x488b3d000000	            mov rdi, qword [0x0400152b] 	        97	stdio2.h	CALL_386
0x400152b	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_386
0x4001530	      0xe800000000	                          call 0x4001535	        97	stdio2.h	CALL_386
0x4001535	          0x83c301	                              add ebx, 1	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x4001538	    0x391d00000000	            cmp dword [0x0400153e], ebx 	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x400153e	            0x7fc8	                            jg 0x4001508	       152	merge.c	FUNCTION_2	IF_6	IF_7	FOR_5
0x4001540	    0x488b0d000000	            mov rcx, qword [0x04001547] 	        97	stdio2.h	CALL_386
0x4001547	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_386
0x400154c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_386
0x4001551	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_386
0x4001556	      0xe800000000	                          call 0x400155b	        97	stdio2.h	CALL_386
0x400155b	      0xbf01000000	                              mov edi, 1	       156	merge.c	FUNCTION_2	IF_6	CALL_12
0x4001560	      0xe800000000	                          call 0x4001565	       156	merge.c	FUNCTION_2	IF_6	CALL_12
0x4001565	      0xbe10000000	                           mov esi, 0x10	       159	merge.c	FUNCTION_2	CALL_13
0x400156a	      0xbf01000000	                              mov edi, 1	       159	merge.c	FUNCTION_2	CALL_13
0x400156f	      0xe800000000	                          call 0x4001574	       159	merge.c	FUNCTION_2	CALL_13
0x4001574	          0x4889c3	                            mov rbx, rax	       159	merge.c	FUNCTION_2	CALL_13
0x4001577	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       160	merge.c	FUNCTION_2	CALL_14
0x400157c	      0xe800000000	                          call 0x4001581	       160	merge.c	FUNCTION_2	CALL_14
0x4001581	          0x488903	                    mov qword [rbx], rax	       160	merge.c	FUNCTION_2	CALL_14
0x4001584	    0xc74308080000	                  mov dword [rbx + 8], 8	       161	merge.c	FUNCTION_2
0x400158b	          0x4889d8	                            mov rax, rbx	       162	merge.c	FUNCTION_2
0x400158e	            0xeb05	                           jmp 0x4001595	       162	merge.c	FUNCTION_2
0x4001590	      0xb800000000	                              mov eax, 0	       120	merge.c	FUNCTION_2	IF_1
0x4001595	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       163	merge.c	FUNCTION_2
0x400159a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       163	merge.c	FUNCTION_2
0x40015a3	            0x7405	                            je 0x40015aa	       163	merge.c	FUNCTION_2
0x40015a5	      0xe800000000	                          call 0x40015aa	       163	merge.c	FUNCTION_2
0x40015aa	        0x4883c438	                           add rsp, 0x38	       163	merge.c	FUNCTION_2
0x40015ae	              0x5b	                                 pop rbx	       163	merge.c	FUNCTION_2
0x40015af	              0x5d	                                 pop rbp	       163	merge.c	FUNCTION_2
0x40015b0	            0x415c	                                 pop r12	       163	merge.c	FUNCTION_2
0x40015b2	            0x415d	                                 pop r13	       163	merge.c	FUNCTION_2
0x40015b4	            0x415e	                                 pop r14	       163	merge.c	FUNCTION_2
0x40015b6	            0x415f	                                 pop r15	       163	merge.c	FUNCTION_2
0x40015b8	              0xc3	                                     ret	       163	merge.c	FUNCTION_2
git_merge_config	WHILE,0:functions,0:FOR,0:IF,13:SWITCH,0:CALL,27:ELSE,8:DO,0	209
0x4000052	            0x4155	                                push r13	       558	merge.c	FUNCTION_17
0x4000054	            0x4154	                                push r12	       558	merge.c	FUNCTION_17
0x4000056	              0x55	                                push rbp	       558	merge.c	FUNCTION_17
0x4000057	              0x53	                                push rbx	       558	merge.c	FUNCTION_17
0x4000058	        0x4883ec08	                              sub rsp, 8	       558	merge.c	FUNCTION_17
0x400005c	          0x4889fb	                            mov rbx, rdi	       558	merge.c	FUNCTION_17
0x400005f	          0x4989f4	                            mov r12, rsi	       558	merge.c	FUNCTION_17
0x4000062	          0x4989d5	                            mov r13, rdx	       558	merge.c	FUNCTION_17
0x4000065	    0x48833d000000	               cmp qword [0x0400006d], 0	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x400006d	            0x747c	                            je 0x40000eb	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x400006f	      0xbe00000000	                              mov esi, 0	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4000074	      0xe800000000	                          call 0x4000079	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4000079	            0x85c0	                           test eax, eax	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x400007b	            0x746e	                            je 0x40000eb	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x400007d	        0x488d7b07	                      lea rdi, [rbx + 7]	       562	merge.c	FUNCTION_17	IF_1	CALL_2
0x4000081	    0x488b35000000	            mov rsi, qword [0x04000088] 	       562	merge.c	FUNCTION_17	IF_1	CALL_2
0x4000088	      0xe800000000	                          call 0x400008d	       562	merge.c	FUNCTION_17	IF_1	CALL_2
0x400008d	            0x85c0	                           test eax, eax	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x400008f	            0x745a	                            je 0x40000eb	       561	merge.c	FUNCTION_17	IF_1	CALL_1
0x4000091	    0x488b3d000000	            mov rdi, qword [0x04000098] 	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x4000098	      0xb800000000	                              mov eax, 0	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x400009d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x40000a4	            0xf2ae	              repne scasb al, byte [rdi]	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x40000a6	          0x48f7d1	                                 not rcx	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x40000a9	      0x488d740b06	                lea rsi, [rbx + rcx + 6]	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x40000ae	      0xbf00000000	                              mov edi, 0	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x40000b3	      0xb90e000000	                            mov ecx, 0xe	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x40000b8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x40000ba	        0x400f97c5	                                seta bpl	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x40000be	           0xf92c0	                                 setb al	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x40000c1	            0x29c5	                            sub ebp, eax	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x40000c3	        0x400fbeed	                          movsx ebp, bpl	       563	merge.c	FUNCTION_17	IF_1	CALL_4
0x40000c7	            0x85ed	                           test ebp, ebp	       562	merge.c	FUNCTION_17	IF_1	CALL_2
0x40000c9	            0x7520	                           jne 0x40000eb	       562	merge.c	FUNCTION_17	IF_1	CALL_2
0x40000cb	    0x488b3d000000	            mov rdi, qword [0x040000d2] 	       564	merge.c	FUNCTION_17	IF_1	CALL_5
0x40000d2	      0xe800000000	                          call 0x40000d7	       564	merge.c	FUNCTION_17	IF_1	CALL_5
0x40000d7	          0x4c89e7	                            mov rdi, r12	       565	merge.c	FUNCTION_17	IF_1	CALL_6
0x40000da	      0xe800000000	                          call 0x40000df	       565	merge.c	FUNCTION_17	IF_1	CALL_6
0x40000df	    0x488905000000	            mov qword [0x040000e6], rax 	       565	merge.c	FUNCTION_17	IF_1	CALL_6
0x40000e6	      0xe932020000	                           jmp 0x400031d	       566	merge.c	FUNCTION_17	IF_1
0x40000eb	      0xbf00000000	                              mov edi, 0	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000f0	      0xb90f000000	                            mov ecx, 0xf	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000f5	          0x4889de	                            mov rsi, rbx	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000f8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000fa	           0xf97c2	                                 seta dl	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x40000fd	           0xf92c0	                                 setb al	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4000100	            0x38c2	                              cmp dl, al	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4000102	            0x7419	                            je 0x400011d	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4000104	      0xbf00000000	                              mov edi, 0	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4000109	      0xb90b000000	                            mov ecx, 0xb	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x400010e	          0x4889de	                            mov rsi, rbx	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4000111	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4000113	           0xf97c2	                                 seta dl	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4000116	           0xf92c0	                                 setb al	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x4000119	            0x38c2	                              cmp dl, al	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x400011b	            0x7516	                           jne 0x4000133	       569	merge.c	FUNCTION_17	IF_2	CALL_8
0x400011d	          0x4c89e6	                            mov rsi, r12	       570	merge.c	FUNCTION_17	CALL_9
0x4000120	          0x4889df	                            mov rdi, rbx	       570	merge.c	FUNCTION_17	CALL_9
0x4000123	      0xe800000000	                          call 0x4000128	       570	merge.c	FUNCTION_17	CALL_9
0x4000128	    0x890500000000	            mov dword [0x0400012e], eax 	       570	merge.c	FUNCTION_17	CALL_9
0x400012e	      0xe9b0010000	                           jmp 0x40002e3	       570	merge.c	FUNCTION_17	CALL_9
0x4000133	      0xbf00000000	                              mov edi, 0	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x4000138	      0xb917000000	                           mov ecx, 0x17	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x400013d	          0x4889de	                            mov rsi, rbx	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x4000140	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x4000142	           0xf97c2	                                 seta dl	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x4000145	           0xf92c0	                                 setb al	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x4000148	            0x38c2	                              cmp dl, al	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x400014a	            0x7516	                           jne 0x4000162	       571	merge.c	FUNCTION_17	ELSE_1	IF_3	CALL_10
0x400014c	          0x4c89e6	                            mov rsi, r12	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x400014f	          0x4889df	                            mov rdi, rbx	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x4000152	      0xe800000000	                          call 0x4000157	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x4000157	    0x890500000000	            mov dword [0x0400015d], eax 	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x400015d	      0xe981010000	                           jmp 0x40002e3	       572	merge.c	FUNCTION_17	ELSE_1	IF_3
0x4000162	      0xbf00000000	                              mov edi, 0	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x4000167	      0xb90d000000	                            mov ecx, 0xd	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x400016c	          0x4889de	                            mov rsi, rbx	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x400016f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x4000171	           0xf97c2	                                 seta dl	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x4000174	           0xf92c0	                                 setb al	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x4000177	            0x38c2	                              cmp dl, al	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x4000179	            0x7517	                           jne 0x4000192	       573	merge.c	FUNCTION_17	ELSE_2	IF_4	CALL_12
0x400017b	          0x4c89e2	                            mov rdx, r12	       574	merge.c	FUNCTION_17	ELSE_2	IF_4
0x400017e	          0x4889de	                            mov rsi, rbx	       574	merge.c	FUNCTION_17	ELSE_2	IF_4
0x4000181	      0xbf00000000	                              mov edi, 0	       574	merge.c	FUNCTION_17	ELSE_2	IF_4
0x4000186	      0xe800000000	                          call 0x400018b	       574	merge.c	FUNCTION_17	ELSE_2	IF_4
0x400018b	            0x89c5	                            mov ebp, eax	       574	merge.c	FUNCTION_17	ELSE_2	IF_4
0x400018d	      0xe98b010000	                           jmp 0x400031d	       574	merge.c	FUNCTION_17	ELSE_2	IF_4
0x4000192	      0xbf00000000	                              mov edi, 0	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x4000197	      0xb90d000000	                            mov ecx, 0xd	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x400019c	          0x4889de	                            mov rsi, rbx	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x400019f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x40001a1	           0xf97c2	                                 seta dl	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x40001a4	           0xf92c0	                                 setb al	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x40001a7	            0x38c2	                              cmp dl, al	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x40001a9	            0x7517	                           jne 0x40001c2	       575	merge.c	FUNCTION_17	ELSE_3	IF_5	CALL_14
0x40001ab	          0x4c89e2	                            mov rdx, r12	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40001ae	          0x4889de	                            mov rsi, rbx	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40001b1	      0xbf00000000	                              mov edi, 0	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40001b6	      0xe800000000	                          call 0x40001bb	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40001bb	            0x89c5	                            mov ebp, eax	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40001bd	      0xe95b010000	                           jmp 0x400031d	       576	merge.c	FUNCTION_17	ELSE_3	IF_5
0x40001c2	      0xbf00000000	                              mov edi, 0	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x40001c7	      0xb912000000	                           mov ecx, 0x12	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x40001cc	          0x4889de	                            mov rsi, rbx	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x40001cf	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x40001d1	           0xf97c2	                                 seta dl	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x40001d4	           0xf92c0	                                 setb al	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x40001d7	            0x38c2	                              cmp dl, al	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x40001d9	            0x7516	                           jne 0x40001f1	       577	merge.c	FUNCTION_17	ELSE_4	IF_6	CALL_16
0x40001db	          0x4c89e6	                            mov rsi, r12	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40001de	          0x4889df	                            mov rdi, rbx	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40001e1	      0xe800000000	                          call 0x40001e6	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40001e6	    0x890500000000	            mov dword [0x040001ec], eax 	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40001ec	      0xe9f2000000	                           jmp 0x40002e3	       578	merge.c	FUNCTION_17	ELSE_4	IF_6
0x40001f1	      0xbf00000000	                              mov edi, 0	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x40001f6	      0xb909000000	                              mov ecx, 9	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x40001fb	          0x4889de	                            mov rsi, rbx	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x40001fe	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000200	        0x400f97c5	                                seta bpl	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000204	           0xf92c0	                                 setb al	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000207	            0x29c5	                            sub ebp, eax	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000209	        0x400fbeed	                          movsx ebp, bpl	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x400020d	            0x85ed	                           test ebp, ebp	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x400020f	            0x755b	                           jne 0x400026c	       579	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_18
0x4000211	          0x4c89e7	                            mov rdi, r12	       580	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_19
0x4000214	      0xe800000000	                          call 0x4000219	       580	merge.c	FUNCTION_17	ELSE_5	IF_7	CALL_19
0x4000219	            0x85c0	                           test eax, eax	       581	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x400021b	            0x7813	                            js 0x4000230	       581	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x400021d	            0x85c0	                           test eax, eax	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x400021f	           0xf95c0	                                setne al	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x4000222	           0xfb6c0	                           movzx eax, al	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x4000225	    0x890500000000	            mov dword [0x0400022b], eax 	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x400022b	      0xe9ed000000	                           jmp 0x400031d	       582	merge.c	FUNCTION_17	ELSE_5	IF_7	IF_8
0x4000230	          0x4d85e4	                           test r12, r12	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000233	     0xf84e4000000	                            je 0x400031d	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000239	      0xbf00000000	                              mov edi, 0	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x400023e	      0xb905000000	                              mov ecx, 5	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000243	          0x4c89e6	                            mov rsi, r12	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000246	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000248	           0xf97c0	                                 seta al	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x400024b	           0xf92c2	                                 setb dl	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x400024e	            0x29d0	                            sub eax, edx	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000250	           0xfbec0	                           movsx eax, al	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000253	            0x85c0	                           test eax, eax	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x4000255	     0xf85c2000000	                           jne 0x400031d	       583	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9	CALL_20
0x400025b	    0xc70500000000	               mov dword [0x04000265], 2	       584	merge.c	FUNCTION_17	ELSE_5	IF_7	ELSE_6	IF_9
0x4000265	            0x89c5	                            mov ebp, eax	       586	merge.c	FUNCTION_17	ELSE_5	IF_7
0x4000267	      0xe9b1000000	                           jmp 0x400031d	       586	merge.c	FUNCTION_17	ELSE_5	IF_7
0x400026c	      0xbf00000000	                              mov edi, 0	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000271	      0xb918000000	                           mov ecx, 0x18	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000276	          0x4889de	                            mov rsi, rbx	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000279	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x400027b	        0x400f97c5	                                seta bpl	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x400027f	           0xf92c0	                                 setb al	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000282	            0x29c5	                            sub ebp, eax	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000284	        0x400fbeed	                          movsx ebp, bpl	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x4000288	            0x85ed	                           test ebp, ebp	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x400028a	            0x7513	                           jne 0x400029f	       587	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_21
0x400028c	          0x4c89e6	                            mov rsi, r12	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x400028f	          0x4889df	                            mov rdi, rbx	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x4000292	      0xe800000000	                          call 0x4000297	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x4000297	    0x890500000000	            mov dword [0x0400029d], eax 	       588	merge.c	FUNCTION_17	ELSE_7	IF_10	CALL_22
0x400029d	            0xeb7e	                           jmp 0x400031d	       589	merge.c	FUNCTION_17	ELSE_7	IF_10
0x400029f	      0xbf00000000	                              mov edi, 0	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x40002a4	      0xb90f000000	                            mov ecx, 0xf	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x40002a9	          0x4889de	                            mov rsi, rbx	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x40002ac	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x40002ae	        0x400f97c5	                                seta bpl	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x40002b2	           0xf92c0	                                 setb al	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x40002b5	            0x29c5	                            sub ebp, eax	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x40002b7	        0x400fbeed	                          movsx ebp, bpl	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x40002bb	            0x85ed	                           test ebp, ebp	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x40002bd	            0x7524	                           jne 0x40002e3	       590	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_23
0x40002bf	          0x4c89e6	                            mov rsi, r12	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40002c2	          0x4889df	                            mov rdi, rbx	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40002c5	      0xe800000000	                          call 0x40002ca	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40002ca	            0x85c0	                           test eax, eax	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40002cc	      0xba00000000	                              mov edx, 0	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40002d1	      0xb800000000	                              mov eax, 0	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40002d6	        0x480f44c2	                          cmove rax, rdx	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40002da	    0x488905000000	            mov qword [0x040002e1], rax 	       591	merge.c	FUNCTION_17	ELSE_8	IF_11	CALL_24
0x40002e1	            0xeb3a	                           jmp 0x400031d	       592	merge.c	FUNCTION_17	ELSE_8	IF_11
0x40002e3	          0x4c89ea	                            mov rdx, r13	       595	merge.c	FUNCTION_17	CALL_25
0x40002e6	          0x4c89e6	                            mov rsi, r12	       595	merge.c	FUNCTION_17	CALL_25
0x40002e9	          0x4889df	                            mov rdi, rbx	       595	merge.c	FUNCTION_17	CALL_25
0x40002ec	      0xe800000000	                          call 0x40002f1	       595	merge.c	FUNCTION_17	CALL_25
0x40002f1	            0x89c5	                            mov ebp, eax	       597	merge.c	FUNCTION_17	IF_12
0x40002f3	            0x85c0	                           test eax, eax	       596	merge.c	FUNCTION_17	IF_12
0x40002f5	            0x7526	                           jne 0x400031d	       596	merge.c	FUNCTION_17	IF_12
0x40002f7	      0xba00000000	                              mov edx, 0	       598	merge.c	FUNCTION_17	CALL_26
0x40002fc	          0x4c89e6	                            mov rsi, r12	       598	merge.c	FUNCTION_17	CALL_26
0x40002ff	          0x4889df	                            mov rdi, rbx	       598	merge.c	FUNCTION_17	CALL_26
0x4000302	      0xe800000000	                          call 0x4000307	       598	merge.c	FUNCTION_17	CALL_26
0x4000307	            0x89c5	                            mov ebp, eax	       600	merge.c	FUNCTION_17	IF_13
0x4000309	            0x85c0	                           test eax, eax	       599	merge.c	FUNCTION_17	IF_13
0x400030b	            0x7510	                           jne 0x400031d	       599	merge.c	FUNCTION_17	IF_13
0x400030d	          0x4c89ea	                            mov rdx, r13	       601	merge.c	FUNCTION_17	CALL_27
0x4000310	          0x4c89e6	                            mov rsi, r12	       601	merge.c	FUNCTION_17	CALL_27
0x4000313	          0x4889df	                            mov rdi, rbx	       601	merge.c	FUNCTION_17	CALL_27
0x4000316	      0xe800000000	                          call 0x400031b	       601	merge.c	FUNCTION_17	CALL_27
0x400031b	            0x89c5	                            mov ebp, eax	       601	merge.c	FUNCTION_17	CALL_27
0x400031d	            0x89e8	                            mov eax, ebp	       602	merge.c	FUNCTION_17
0x400031f	        0x4883c408	                              add rsp, 8	       602	merge.c	FUNCTION_17
0x4000323	              0x5b	                                 pop rbx	       602	merge.c	FUNCTION_17
0x4000324	              0x5d	                                 pop rbp	       602	merge.c	FUNCTION_17
0x4000325	            0x415c	                                 pop r12	       602	merge.c	FUNCTION_17
0x4000327	            0x415d	                                 pop r13	       602	merge.c	FUNCTION_17
0x4000329	              0xc3	                                     ret	       602	merge.c	FUNCTION_17
write_merge_state	WHILE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,4:ELSE,0:DO,0	18
0x40006ee	              0x55	                                push rbp	       952	merge.c	FUNCTION_33
0x40006ef	              0x53	                                push rbx	       952	merge.c	FUNCTION_33
0x40006f0	        0x4883ec08	                              sub rsp, 8	       952	merge.c	FUNCTION_33
0x40006f4	      0xe8acfeffff	              call sym.write_merge_heads	       953	merge.c	FUNCTION_33	CALL_1
0x40006f9	      0xbe0a000000	                            mov esi, 0xa	       954	merge.c	FUNCTION_33	CALL_2
0x40006fe	      0xbf00000000	                              mov edi, 0	       954	merge.c	FUNCTION_33	CALL_2
0x4000703	      0xe896ffffff	                   call sym.strbuf_addch	       954	merge.c	FUNCTION_33	CALL_2
0x4000708	    0x488b2d000000	            mov rbp, qword [0x0400070f] 	       955	merge.c	FUNCTION_33	CALL_4
0x400070f	    0x488b1d000000	            mov rbx, qword [0x04000716] 	       955	merge.c	FUNCTION_33	CALL_4
0x4000716	      0xe800000000	                          call 0x400071b	       955	merge.c	FUNCTION_33	CALL_4
0x400071b	          0x4889ea	                            mov rdx, rbp	       955	merge.c	FUNCTION_33	CALL_4
0x400071e	          0x4889de	                            mov rsi, rbx	       955	merge.c	FUNCTION_33	CALL_4
0x4000721	          0x4889c7	                            mov rdi, rax	       955	merge.c	FUNCTION_33	CALL_4
0x4000724	      0xe800000000	                          call 0x4000729	       955	merge.c	FUNCTION_33	CALL_4
0x4000729	        0x4883c408	                              add rsp, 8	       956	merge.c	FUNCTION_33
0x400072d	              0x5b	                                 pop rbx	       956	merge.c	FUNCTION_33
0x400072e	              0x5d	                                 pop rbp	       956	merge.c	FUNCTION_33
0x400072f	              0xc3	                                     ret	       956	merge.c	FUNCTION_33
reduce_parents	WHILE,1:functions,0:FOR,0:IF,1:SWITCH,0:CALL,4:ELSE,1:DO,0	41
0x4000472	            0x4154	                                push r12	       987	merge.c	FUNCTION_35
0x4000474	              0x55	                                push rbp	       987	merge.c	FUNCTION_35
0x4000475	              0x53	                                push rbx	       987	merge.c	FUNCTION_35
0x4000476	        0x4883ec20	                           sub rsp, 0x20	       987	merge.c	FUNCTION_35
0x400047a	          0x4889fd	                            mov rbp, rdi	       987	merge.c	FUNCTION_35
0x400047d	          0x4989f4	                            mov r12, rsi	       987	merge.c	FUNCTION_35
0x4000480	          0x4889d7	                            mov rdi, rdx	       987	merge.c	FUNCTION_35
0x4000483	      0x4889542408	                mov qword [rsp + 8], rdx	       987	merge.c	FUNCTION_35
0x4000488	    0x64488b042528	                mov rax, qword fs:[0x28]	       987	merge.c	FUNCTION_35
0x4000491	      0x4889442418	             mov qword [rsp + 0x18], rax	       987	merge.c	FUNCTION_35
0x4000496	            0x31c0	                            xor eax, eax	       987	merge.c	FUNCTION_35
0x4000498	    0xc70601000000	                      mov dword [rsi], 1	       997	merge.c	FUNCTION_35
0x400049e	      0xe800000000	                          call 0x40004a3	      1000	merge.c	FUNCTION_35	CALL_1
0x40004a3	      0x4889442410	             mov qword [rsp + 0x10], rax	      1000	merge.c	FUNCTION_35	CALL_1
0x40004a8	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1001	merge.c	FUNCTION_35	CALL_2
0x40004ad	      0xe800000000	                          call 0x40004b2	      1001	merge.c	FUNCTION_35	CALL_2
0x40004b2	    0x48c744240800	                  mov qword [rsp + 8], 0	      1003	merge.c	FUNCTION_35
0x40004bb	      0x488d5c2408	                      lea rbx, [rsp + 8]	      1004	merge.c	FUNCTION_35
0x40004c0	            0xeb28	                           jmp 0x40004ea	      1005	merge.c	FUNCTION_35	WHILE_1
0x40004c2	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1006	merge.c	FUNCTION_35	WHILE_1	CALL_3
0x40004c7	      0xe800000000	                          call 0x40004cc	      1006	merge.c	FUNCTION_35	WHILE_1	CALL_3
0x40004cc	          0x4839e8	                            cmp rax, rbp	      1007	merge.c	FUNCTION_35	WHILE_1	IF_1
0x40004cf	            0x750a	                           jne 0x40004db	      1007	merge.c	FUNCTION_35	WHILE_1	IF_1
0x40004d1	    0x41c704240000	                      mov dword [r12], 0	      1008	merge.c	FUNCTION_35	WHILE_1	IF_1
0x40004d9	            0xeb0f	                           jmp 0x40004ea	      1008	merge.c	FUNCTION_35	WHILE_1	IF_1
0x40004db	          0x4889de	                            mov rsi, rbx	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x40004de	          0x4889c7	                            mov rdi, rax	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x40004e1	      0xe800000000	                          call 0x40004e6	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x40004e6	        0x488d5808	                      lea rbx, [rax + 8]	      1010	merge.c	FUNCTION_35	WHILE_1	CALL_4
0x40004ea	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      1005	merge.c	FUNCTION_35	WHILE_1
0x40004f0	            0x75d0	                           jne 0x40004c2	      1005	merge.c	FUNCTION_35	WHILE_1
0x40004f2	      0x488b442408	                mov rax, qword [rsp + 8]	      1013	merge.c	FUNCTION_35
0x40004f7	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1013	merge.c	FUNCTION_35
0x40004fc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1013	merge.c	FUNCTION_35
0x4000505	            0x7405	                            je 0x400050c	      1013	merge.c	FUNCTION_35
0x4000507	      0xe800000000	                          call 0x400050c	      1013	merge.c	FUNCTION_35
0x400050c	        0x4883c420	                           add rsp, 0x20	      1013	merge.c	FUNCTION_35
0x4000510	              0x5b	                                 pop rbx	      1013	merge.c	FUNCTION_35
0x4000511	              0x5d	                                 pop rbp	      1013	merge.c	FUNCTION_35
0x4000512	            0x415c	                                 pop r12	      1013	merge.c	FUNCTION_35
0x4000514	              0xc3	                                     ret	      1013	merge.c	FUNCTION_35
write_tree_trivial	WHILE,0:functions,0:FOR,0:IF,1:SWITCH,0:CALL,3:ELSE,0:DO,0	15
0x400077d	        0x4883ec08	                              sub rsp, 8	       641	merge.c	FUNCTION_19
0x4000781	      0xba00000000	                              mov edx, 0	       642	merge.c	FUNCTION_19	IF_1	CALL_1
0x4000786	      0xbe00000000	                              mov esi, 0	       642	merge.c	FUNCTION_19	IF_1	CALL_1
0x400078b	      0xe800000000	                          call 0x4000790	       642	merge.c	FUNCTION_19	IF_1	CALL_1
0x4000790	            0x85c0	                           test eax, eax	       642	merge.c	FUNCTION_19	IF_1	CALL_1
0x4000792	            0x741e	                            je 0x40007b2	       642	merge.c	FUNCTION_19	IF_1	CALL_1
0x4000794	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x4000799	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x400079e	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x40007a3	      0xe800000000	                          call 0x40007a8	        54	gettext.h	FUNCTION_70
0x40007a8	          0x4889c7	                            mov rdi, rax	       643	merge.c	FUNCTION_19	CALL_3
0x40007ab	            0xb000	                               mov al, 0	       643	merge.c	FUNCTION_19	CALL_3
0x40007ad	      0xe800000000	                          call 0x40007b2	       643	merge.c	FUNCTION_19	CALL_3
0x40007b2	        0x4883c408	                              add rsp, 8	       644	merge.c	FUNCTION_19
0x40007b6	              0xc3	                                     ret	       644	merge.c	FUNCTION_19
drop_save	WHILE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,6:ELSE,0:DO,0	12
0x4000575	        0x4883ec08	                              sub rsp, 8	       247	merge.c	FUNCTION_7
0x4000579	      0xe800000000	                          call 0x400057e	       248	merge.c	FUNCTION_7	CALL_2
0x400057e	          0x4889c7	                            mov rdi, rax	       248	merge.c	FUNCTION_7	CALL_2
0x4000581	      0xe800000000	                          call 0x4000586	       248	merge.c	FUNCTION_7	CALL_2
0x4000586	      0xe800000000	                          call 0x400058b	       249	merge.c	FUNCTION_7	CALL_4
0x400058b	          0x4889c7	                            mov rdi, rax	       249	merge.c	FUNCTION_7	CALL_4
0x400058e	      0xe800000000	                          call 0x4000593	       249	merge.c	FUNCTION_7	CALL_4
0x4000593	      0xe800000000	                          call 0x4000598	       250	merge.c	FUNCTION_7	CALL_6
0x4000598	          0x4889c7	                            mov rdi, rax	       250	merge.c	FUNCTION_7	CALL_6
0x400059b	      0xe800000000	                          call 0x40005a0	       250	merge.c	FUNCTION_7	CALL_6
0x40005a0	        0x4883c408	                              add rsp, 8	       251	merge.c	FUNCTION_7
0x40005a4	              0xc3	                                     ret	       251	merge.c	FUNCTION_7
count_diff_files	WHILE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0:ELSE,0:DO,0	3
0x400004c	          0x8b470c	              mov eax, dword [rdi + 0xc]	       709	merge.c	FUNCTION_21
0x400004f	             0x102	                    add dword [rdx], eax	       709	merge.c	FUNCTION_21
0x4000051	              0xc3	                                     ret	       709	merge.c	FUNCTION_21
finish	WHILE,0:functions,0:FOR,0:IF,5:SWITCH,0:CALL,16:ELSE,3:DO,0	208
0x4000be1	            0x4156	                                push r14	       390	merge.c	FUNCTION_14
0x4000be3	            0x4155	                                push r13	       390	merge.c	FUNCTION_14
0x4000be5	            0x4154	                                push r12	       390	merge.c	FUNCTION_14
0x4000be7	              0x55	                                push rbp	       390	merge.c	FUNCTION_14
0x4000be8	              0x53	                                push rbx	       390	merge.c	FUNCTION_14
0x4000be9	    0x4881ec800a00	                          sub rsp, 0xa80	       390	merge.c	FUNCTION_14
0x4000bf0	          0x4889fb	                            mov rbx, rdi	       390	merge.c	FUNCTION_14
0x4000bf3	          0x4889f5	                            mov rbp, rsi	       390	merge.c	FUNCTION_14
0x4000bf6	          0x4989d4	                            mov r12, rdx	       390	merge.c	FUNCTION_14
0x4000bf9	    0x64488b042528	                mov rax, qword fs:[0x28]	       390	merge.c	FUNCTION_14
0x4000c02	    0x48898424780a	            mov qword [rsp + 0xa78], rax	       390	merge.c	FUNCTION_14
0x4000c0a	            0x31c0	                            xor eax, eax	       390	merge.c	FUNCTION_14
0x4000c0c	    0x48c704240000	                      mov qword [rsp], 0	       391	merge.c	FUNCTION_14
0x4000c14	    0x48c744240800	                  mov qword [rsp + 8], 0	       391	merge.c	FUNCTION_14
0x4000c1d	    0x48c744241000	               mov qword [rsp + 0x10], 0	       391	merge.c	FUNCTION_14
0x4000c26	        0x4c8d6f04	                      lea r13, [rdi + 4]	       392	merge.c	FUNCTION_14
0x4000c2a	          0x4885c9	                           test rcx, rcx	       394	merge.c	FUNCTION_14	IF_1
0x4000c2d	            0x752c	                           jne 0x4000c5b	       394	merge.c	FUNCTION_14	IF_1
0x4000c2f	      0xbf00000000	                              mov edi, 0	       395	merge.c	FUNCTION_14	CALL_2
0x4000c34	      0xe800000000	                          call 0x4000c39	       395	merge.c	FUNCTION_14	CALL_2
0x4000c39	          0x4889c6	                            mov rsi, rax	       395	merge.c	FUNCTION_14	CALL_2
0x4000c3c	            0xb000	                               mov al, 0	       279	strbuf.h	FUNCTION_76	CALL_2
0x4000c3e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_76	CALL_2
0x4000c45	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_76	CALL_2
0x4000c48	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_76	CALL_2
0x4000c4a	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_76	CALL_2
0x4000c4d	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_76	CALL_2
0x4000c51	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_76	CALL_2
0x4000c54	      0xe800000000	                          call 0x4000c59	       279	strbuf.h	FUNCTION_76	CALL_2
0x4000c59	            0xeb33	                           jmp 0x4000c8e	       279	strbuf.h	FUNCTION_76	CALL_2
0x4000c5b	          0x4989ce	                            mov r14, rcx	       279	strbuf.h	FUNCTION_76	CALL_2
0x4000c5e	    0x833d00000000	               cmp dword [0x04000c65], 0	       397	merge.c	FUNCTION_14	ELSE_1	IF_2
0x4000c65	            0x7808	                            js 0x4000c6f	       397	merge.c	FUNCTION_14	ELSE_1	IF_2
0x4000c67	          0x4889cf	                            mov rdi, rcx	       104	stdio2.h	CALL_389
0x4000c6a	      0xe800000000	                          call 0x4000c6f	       104	stdio2.h	CALL_389
0x4000c6f	      0xbf00000000	                              mov edi, 0	       399	merge.c	FUNCTION_14	ELSE_1	CALL_3
0x4000c74	      0xe800000000	                          call 0x4000c79	       399	merge.c	FUNCTION_14	ELSE_1	CALL_3
0x4000c79	          0x4c89f1	                            mov rcx, r14	       399	merge.c	FUNCTION_14	ELSE_1	CALL_3
0x4000c7c	          0x4889c2	                            mov rdx, rax	       399	merge.c	FUNCTION_14	ELSE_1	CALL_3
0x4000c7f	      0xbe00000000	                              mov esi, 0	       399	merge.c	FUNCTION_14	ELSE_1	CALL_3
0x4000c84	          0x4889e7	                            mov rdi, rsp	       399	merge.c	FUNCTION_14	ELSE_1	CALL_3
0x4000c87	            0xb000	                               mov al, 0	       399	merge.c	FUNCTION_14	ELSE_1	CALL_3
0x4000c89	      0xe800000000	                          call 0x4000c8e	       399	merge.c	FUNCTION_14	ELSE_1	CALL_3
0x4000c8e	    0x833d00000000	               cmp dword [0x04000c95], 0	       402	merge.c	FUNCTION_14	IF_3
0x4000c95	     0xf84b7010000	                            je 0x4000e52	       402	merge.c	FUNCTION_14	IF_3
0x4000c9b	    0x48c744242000	               mov qword [rsp + 0x20], 0	       352	merge.c	FUNCTION_13
0x4000ca4	    0x48c744242800	               mov qword [rsp + 0x28], 0	       352	merge.c	FUNCTION_13
0x4000cad	    0x48c744243000	               mov qword [rsp + 0x30], 0	       352	merge.c	FUNCTION_13
0x4000cb6	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       354	merge.c	FUNCTION_13
0x4000cbb	      0xb928000000	                           mov ecx, 0x28	       354	merge.c	FUNCTION_13
0x4000cc0	      0xb800000000	                              mov eax, 0	       354	merge.c	FUNCTION_13
0x4000cc5	            0xf3ab	              rep stosd dword [rdi], eax	       354	merge.c	FUNCTION_13
0x4000cc7	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x4000ccc	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x4000cd1	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x4000cd6	      0xe800000000	                          call 0x4000cdb	        54	gettext.h	FUNCTION_70
0x4000cdb	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_389
0x4000cde	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_389
0x4000ce3	            0xb000	                               mov al, 0	       104	stdio2.h	CALL_389
0x4000ce5	      0xe800000000	                          call 0x4000cea	       104	stdio2.h	CALL_389
0x4000cea	      0xbe00000000	                              mov esi, 0	       358	merge.c	FUNCTION_13	CALL_2
0x4000cef	    0x488dbc24c001	                  lea rdi, [rsp + 0x1c0]	       358	merge.c	FUNCTION_13	CALL_2
0x4000cf7	      0xe800000000	                          call 0x4000cfc	       358	merge.c	FUNCTION_13	CALL_2
0x4000cfc	    0x808c24390200	             or byte [rsp + 0x239], 0x20	       359	merge.c	FUNCTION_13
0x4000d04	    0xc78424640200	              mov dword [rsp + 0x264], 1	       360	merge.c	FUNCTION_13
0x4000d0f	          0x830b20	                    or dword [rbx], 0x20	       362	merge.c	FUNCTION_13
0x4000d12	      0xba00000000	                              mov edx, 0	       363	merge.c	FUNCTION_13	CALL_3
0x4000d17	          0x4889de	                            mov rsi, rbx	       363	merge.c	FUNCTION_13	CALL_3
0x4000d1a	    0x488dbc24c001	                  lea rdi, [rsp + 0x1c0]	       363	merge.c	FUNCTION_13	CALL_3
0x4000d22	      0xe800000000	                          call 0x4000d27	       363	merge.c	FUNCTION_13	CALL_3
0x4000d27	            0xeb1a	                           jmp 0x4000d43	       363	merge.c	FUNCTION_13	CALL_3
0x4000d29	      0xba00000000	                              mov edx, 0	       366	merge.c	FUNCTION_13	CALL_4
0x4000d2e	        0x488b7500	                    mov rsi, qword [rbp]	       366	merge.c	FUNCTION_13	CALL_4
0x4000d32	    0x488dbc24c001	                  lea rdi, [rsp + 0x1c0]	       366	merge.c	FUNCTION_13	CALL_4
0x4000d3a	      0xe800000000	                          call 0x4000d3f	       366	merge.c	FUNCTION_13	CALL_4
0x4000d3f	        0x488b6d08	                mov rbp, qword [rbp + 8]	       365	merge.c	FUNCTION_13	FOR_1
0x4000d43	          0x4885ed	                           test rbp, rbp	       365	merge.c	FUNCTION_13	FOR_1
0x4000d46	            0x75e1	                           jne 0x4000d29	       365	merge.c	FUNCTION_13	FOR_1
0x4000d48	      0xb900000000	                              mov ecx, 0	       368	merge.c	FUNCTION_13	CALL_5
0x4000d4d	    0x488d9424c001	                  lea rdx, [rsp + 0x1c0]	       368	merge.c	FUNCTION_13	CALL_5
0x4000d55	      0xbe00000000	                              mov esi, 0	       368	merge.c	FUNCTION_13	CALL_5
0x4000d5a	      0xbf00000000	                              mov edi, 0	       368	merge.c	FUNCTION_13	CALL_5
0x4000d5f	      0xe800000000	                          call 0x4000d64	       368	merge.c	FUNCTION_13	CALL_5
0x4000d64	    0x488dbc24c001	                  lea rdi, [rsp + 0x1c0]	       369	merge.c	FUNCTION_13	IF_1	CALL_6
0x4000d6c	      0xe800000000	                          call 0x4000d71	       369	merge.c	FUNCTION_13	IF_1	CALL_6
0x4000d71	            0x85c0	                           test eax, eax	       369	merge.c	FUNCTION_13	IF_1	CALL_6
0x4000d73	            0x741e	                            je 0x4000d93	       369	merge.c	FUNCTION_13	IF_1	CALL_6
0x4000d75	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x4000d7a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x4000d7f	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x4000d84	      0xe800000000	                          call 0x4000d89	        54	gettext.h	FUNCTION_70
0x4000d89	          0x4889c7	                            mov rdi, rax	       370	merge.c	FUNCTION_13	CALL_8
0x4000d8c	            0xb000	                               mov al, 0	       370	merge.c	FUNCTION_13	CALL_8
0x4000d8e	      0xe800000000	                          call 0x4000d93	       370	merge.c	FUNCTION_13	CALL_8
0x4000d93	    0x8b8424600200	           mov eax, dword [rsp + 0x260] 	       372	merge.c	FUNCTION_13
0x4000d9a	        0x89442444	             mov dword [rsp + 0x44], eax	       372	merge.c	FUNCTION_13
0x4000d9e	      0x488d7c2458	                   lea rdi, [rsp + 0x58]	       373	merge.c	FUNCTION_13
0x4000da3	    0x488db4244002	                  lea rsi, [rsp + 0x240]	       373	merge.c	FUNCTION_13
0x4000dab	      0xb906000000	                              mov ecx, 6	       373	merge.c	FUNCTION_13
0x4000db0	            0xf3a5	  rep movsd dword [rdi], dword ptr [rsi]	       373	merge.c	FUNCTION_13
0x4000db2	    0x8b8424640200	           mov eax, dword [rsp + 0x264] 	       374	merge.c	FUNCTION_13
0x4000db9	        0x89442440	             mov dword [rsp + 0x40], eax	       374	merge.c	FUNCTION_13
0x4000dbd	      0xba22000000	                           mov edx, 0x22	       279	strbuf.h	FUNCTION_76	CALL_2
0x4000dc2	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_76	CALL_2
0x4000dc7	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       279	strbuf.h	FUNCTION_76	CALL_2
0x4000dcc	      0xe800000000	                          call 0x4000dd1	       279	strbuf.h	FUNCTION_76	CALL_2
0x4000dd1	            0xeb3e	                           jmp 0x4000e11	       279	strbuf.h	FUNCTION_76	CALL_2
0x4000dd3	      0xbe0a000000	                            mov esi, 0xa	       378	merge.c	FUNCTION_13	WHILE_1	CALL_11
0x4000dd8	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       378	merge.c	FUNCTION_13	WHILE_1	CALL_11
0x4000ddd	      0xe8bcf8ffff	                   call sym.strbuf_addch	       378	merge.c	FUNCTION_13	WHILE_1	CALL_11
0x4000de2	        0x488d7b04	                      lea rdi, [rbx + 4]	       380	merge.c	FUNCTION_13	WHILE_1	CALL_13
0x4000de6	      0xe800000000	                          call 0x4000deb	       379	merge.c	FUNCTION_13	WHILE_1	CALL_12
0x4000deb	          0x4889c2	                            mov rdx, rax	       379	merge.c	FUNCTION_13	WHILE_1	CALL_12
0x4000dee	      0xbe00000000	                              mov esi, 0	       379	merge.c	FUNCTION_13	WHILE_1	CALL_12
0x4000df3	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       379	merge.c	FUNCTION_13	WHILE_1	CALL_12
0x4000df8	            0xb000	                               mov al, 0	       379	merge.c	FUNCTION_13	WHILE_1	CALL_12
0x4000dfa	      0xe800000000	                          call 0x4000dff	       379	merge.c	FUNCTION_13	WHILE_1	CALL_12
0x4000dff	      0x488d542420	                   lea rdx, [rsp + 0x20]	       381	merge.c	FUNCTION_13	WHILE_1	CALL_14
0x4000e04	          0x4889de	                            mov rsi, rbx	       381	merge.c	FUNCTION_13	WHILE_1	CALL_14
0x4000e07	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       381	merge.c	FUNCTION_13	WHILE_1	CALL_14
0x4000e0c	      0xe800000000	                          call 0x4000e11	       381	merge.c	FUNCTION_13	WHILE_1	CALL_14
0x4000e11	    0x488dbc24c001	                  lea rdi, [rsp + 0x1c0]	       377	merge.c	FUNCTION_13	WHILE_1	CALL_10
0x4000e19	      0xe800000000	                          call 0x4000e1e	       377	merge.c	FUNCTION_13	WHILE_1	CALL_10
0x4000e1e	          0x4889c3	                            mov rbx, rax	       377	merge.c	FUNCTION_13	WHILE_1	CALL_10
0x4000e21	          0x4885c0	                           test rax, rax	       377	merge.c	FUNCTION_13	WHILE_1	CALL_10
0x4000e24	            0x75ad	                           jne 0x4000dd3	       377	merge.c	FUNCTION_13	WHILE_1	CALL_10
0x4000e26	      0x488b6c2428	            mov rbp, qword [rsp + 0x28] 	       383	merge.c	FUNCTION_13	CALL_16
0x4000e2b	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	       383	merge.c	FUNCTION_13	CALL_16
0x4000e30	      0xe800000000	                          call 0x4000e35	       383	merge.c	FUNCTION_13	CALL_16
0x4000e35	          0x4889ea	                            mov rdx, rbp	       383	merge.c	FUNCTION_13	CALL_16
0x4000e38	          0x4889de	                            mov rsi, rbx	       383	merge.c	FUNCTION_13	CALL_16
0x4000e3b	          0x4889c7	                            mov rdi, rax	       383	merge.c	FUNCTION_13	CALL_16
0x4000e3e	      0xe800000000	                          call 0x4000e43	       383	merge.c	FUNCTION_13	CALL_16
0x4000e43	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       384	merge.c	FUNCTION_13	CALL_17
0x4000e48	      0xe800000000	                          call 0x4000e4d	       384	merge.c	FUNCTION_13	CALL_17
0x4000e4d	      0xe99f000000	                           jmp 0x4000ef1	       384	merge.c	FUNCTION_13	CALL_17
0x4000e52	    0x833d00000000	               cmp dword [0x04000e59], 0	       405	merge.c	FUNCTION_14	ELSE_2	IF_4
0x4000e59	            0x782f	                            js 0x4000e8a	       405	merge.c	FUNCTION_14	ELSE_2	IF_4
0x4000e5b	    0x48833d000000	               cmp qword [0x04000e63], 0	       405	merge.c	FUNCTION_14	ELSE_2	IF_4
0x4000e63	            0x7525	                           jne 0x4000e8a	       405	merge.c	FUNCTION_14	ELSE_2	IF_4
0x4000e65	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x4000e6a	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x4000e6f	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x4000e74	      0xe800000000	                          call 0x4000e79	        54	gettext.h	FUNCTION_70
0x4000e79	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_389
0x4000e7c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_389
0x4000e81	            0xb000	                               mov al, 0	       104	stdio2.h	CALL_389
0x4000e83	      0xe800000000	                          call 0x4000e88	       104	stdio2.h	CALL_389
0x4000e88	            0xeb67	                           jmp 0x4000ef1	       104	stdio2.h	CALL_389
0x4000e8a	    0x48c78424c001	              mov qword [rsp + 0x1c0], 0	       408	merge.c	FUNCTION_14	ELSE_2	ELSE_3
0x4000e96	    0x48c78424c801	              mov qword [rsp + 0x1c8], 0	       408	merge.c	FUNCTION_14	ELSE_2	ELSE_3
0x4000ea2	    0x48c78424d001	              mov qword [rsp + 0x1d0], 0	       408	merge.c	FUNCTION_14	ELSE_2	ELSE_3
0x4000eae	    0x41b901000000	                              mov r9d, 1	       409	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_7
0x4000eb4	    0x41b800000000	                              mov r8d, 0	       409	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_7
0x4000eba	          0x4c89e9	                            mov rcx, r13	       409	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_7
0x4000ebd	          0x4c89e2	                            mov rdx, r12	       409	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_7
0x4000ec0	      0xbe00000000	                              mov esi, 0	       409	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_7
0x4000ec5	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       409	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_7
0x4000eca	      0xe800000000	                          call 0x4000ecf	       409	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_7
0x4000ecf	    0x488b05000000	            mov rax, qword [0x04000ed6] 	       415	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_8
0x4000ed6	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       415	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_8
0x4000eda	      0xe800000000	                          call 0x4000edf	       415	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_8
0x4000edf	      0xbe02000000	                              mov esi, 2	       416	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_9
0x4000ee4	    0x488dbc24c001	                  lea rdi, [rsp + 0x1c0]	       416	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_9
0x4000eec	      0xe800000000	                          call 0x4000ef1	       416	merge.c	FUNCTION_14	ELSE_2	ELSE_3	CALL_9
0x4000ef1	          0x4d85e4	                           test r12, r12	       419	merge.c	FUNCTION_14	IF_5
0x4000ef4	            0x746f	                            je 0x4000f65	       419	merge.c	FUNCTION_14	IF_5
0x4000ef6	    0x833d00000000	               cmp dword [0x04000efd], 0	       419	merge.c	FUNCTION_14	IF_5
0x4000efd	            0x7466	                            je 0x4000f65	       419	merge.c	FUNCTION_14	IF_5
0x4000eff	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       421	merge.c	FUNCTION_14	IF_5	CALL_10
0x4000f04	      0xe800000000	                          call 0x4000f09	       421	merge.c	FUNCTION_14	IF_5	CALL_10
0x4000f09	    0xc78424080100	    mov dword [rsp + 0x108], 0xffffffff 	       422	merge.c	FUNCTION_14	IF_5
0x4000f14	    0xc78424100100	    mov dword [rsp + 0x110], 0xffffffff 	       423	merge.c	FUNCTION_14	IF_5
0x4000f1f	    0x838c24a00000	              or dword [rsp + 0xa0], 0xa	       424	merge.c	FUNCTION_14	IF_5
0x4000f27	    0xc78424900000	               mov dword [rsp + 0x90], 1	       426	merge.c	FUNCTION_14	IF_5
0x4000f32	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       427	merge.c	FUNCTION_14	IF_5	CALL_11
0x4000f37	      0xe800000000	                          call 0x4000f3c	       427	merge.c	FUNCTION_14	IF_5	CALL_11
0x4000f3c	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	       428	merge.c	FUNCTION_14	IF_5	CALL_12
0x4000f41	      0xba00000000	                              mov edx, 0	       428	merge.c	FUNCTION_14	IF_5	CALL_12
0x4000f46	          0x4c89e6	                            mov rsi, r12	       428	merge.c	FUNCTION_14	IF_5	CALL_12
0x4000f49	          0x4c89ef	                            mov rdi, r13	       428	merge.c	FUNCTION_14	IF_5	CALL_12
0x4000f4c	      0xe800000000	                          call 0x4000f51	       428	merge.c	FUNCTION_14	IF_5	CALL_12
0x4000f51	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       429	merge.c	FUNCTION_14	IF_5	CALL_13
0x4000f56	      0xe800000000	                          call 0x4000f5b	       429	merge.c	FUNCTION_14	IF_5	CALL_13
0x4000f5b	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       430	merge.c	FUNCTION_14	IF_5	CALL_14
0x4000f60	      0xe800000000	                          call 0x4000f65	       430	merge.c	FUNCTION_14	IF_5	CALL_14
0x4000f65	    0x833d00000000	               cmp dword [0x04000f6c], 0	       434	merge.c	FUNCTION_14	CALL_15
0x4000f6c	      0xba00000000	                              mov edx, 0	       434	merge.c	FUNCTION_14	CALL_15
0x4000f71	      0xb800000000	                              mov eax, 0	       434	merge.c	FUNCTION_14	CALL_15
0x4000f76	        0x480f45d0	                         cmovne rdx, rax	       434	merge.c	FUNCTION_14	CALL_15
0x4000f7a	      0xb900000000	                              mov ecx, 0	       434	merge.c	FUNCTION_14	CALL_15
0x4000f7f	      0xbe00000000	                              mov esi, 0	       434	merge.c	FUNCTION_14	CALL_15
0x4000f84	      0xbf00000000	                              mov edi, 0	       434	merge.c	FUNCTION_14	CALL_15
0x4000f89	            0xb000	                               mov al, 0	       434	merge.c	FUNCTION_14	CALL_15
0x4000f8b	      0xe800000000	                          call 0x4000f90	       434	merge.c	FUNCTION_14	CALL_15
0x4000f90	          0x4889e7	                            mov rdi, rsp	       436	merge.c	FUNCTION_14	CALL_16
0x4000f93	      0xe800000000	                          call 0x4000f98	       436	merge.c	FUNCTION_14	CALL_16
0x4000f98	    0x488b8424780a	           mov rax, qword [rsp + 0xa78] 	       437	merge.c	FUNCTION_14
0x4000fa0	    0x644833042528	                xor rax, qword fs:[0x28]	       437	merge.c	FUNCTION_14
0x4000fa9	            0x7405	                            je 0x4000fb0	       437	merge.c	FUNCTION_14
0x4000fab	      0xe800000000	                          call 0x4000fb0	       437	merge.c	FUNCTION_14
0x4000fb0	    0x4881c4800a00	                          add rsp, 0xa80	       437	merge.c	FUNCTION_14
0x4000fb7	              0x5b	                                 pop rbx	       437	merge.c	FUNCTION_14
0x4000fb8	              0x5d	                                 pop rbp	       437	merge.c	FUNCTION_14
0x4000fb9	            0x415c	                                 pop r12	       437	merge.c	FUNCTION_14
0x4000fbb	            0x415d	                                 pop r13	       437	merge.c	FUNCTION_14
0x4000fbd	            0x415e	                                 pop r14	       437	merge.c	FUNCTION_14
0x4000fbf	              0xc3	                                     ret	       437	merge.c	FUNCTION_14
add_strategies	WHILE,0:functions,0:FOR,1:IF,2:SWITCH,0:CALL,6:ELSE,0:DO,0	57
0x40015e1	            0x4154	                                push r12	       724	merge.c	FUNCTION_23
0x40015e3	              0x55	                                push rbp	       724	merge.c	FUNCTION_23
0x40015e4	              0x53	                                push rbx	       724	merge.c	FUNCTION_23
0x40015e5	        0x4883ec30	                           sub rsp, 0x30	       724	merge.c	FUNCTION_23
0x40015e9	    0x64488b042528	                mov rax, qword fs:[0x28]	       724	merge.c	FUNCTION_23
0x40015f2	      0x4889442428	             mov qword [rsp + 0x28], rax	       724	merge.c	FUNCTION_23
0x40015f7	            0x31c0	                            xor eax, eax	       724	merge.c	FUNCTION_23
0x40015f9	          0x4885ff	                           test rdi, rdi	       727	merge.c	FUNCTION_23	IF_1
0x40015fc	            0x7512	                           jne 0x4001610	       727	merge.c	FUNCTION_23	IF_1
0x40015fe	          0x4189f4	                           mov r12d, esi	       727	merge.c	FUNCTION_23	IF_1
0x4001601	      0xbb00000000	                              mov ebx, 0	       727	merge.c	FUNCTION_23	IF_1
0x4001606	      0xbd00000000	                              mov ebp, 0	       727	merge.c	FUNCTION_23	IF_1
0x400160b	      0xe98c000000	                           jmp 0x400169c	       727	merge.c	FUNCTION_23	IF_1
0x4001610	    0x48c704240000	                      mov qword [rsp], 0	       728	merge.c	FUNCTION_23	IF_1
0x4001618	    0xc74424080000	                  mov dword [rsp + 8], 0	       728	merge.c	FUNCTION_23	IF_1
0x4001620	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       728	merge.c	FUNCTION_23	IF_1
0x4001628	      0x804c241001	                 or byte [rsp + 0x10], 1	       728	merge.c	FUNCTION_23	IF_1
0x400162d	    0x48c744241800	               mov qword [rsp + 0x18], 0	       728	merge.c	FUNCTION_23	IF_1
0x4001636	      0xb9ffffffff	                     mov ecx, 0xffffffff	       730	merge.c	FUNCTION_23	IF_1	CALL_1
0x400163b	      0xba20000000	                           mov edx, 0x20	       730	merge.c	FUNCTION_23	IF_1	CALL_1
0x4001640	          0x4889fe	                            mov rsi, rdi	       730	merge.c	FUNCTION_23	IF_1	CALL_1
0x4001643	          0x4889e7	                            mov rdi, rsp	       730	merge.c	FUNCTION_23	IF_1	CALL_1
0x4001646	      0xe800000000	                          call 0x400164b	       730	merge.c	FUNCTION_23	IF_1	CALL_1
0x400164b	        0x488b1c24	                    mov rbx, qword [rsp]	       731	merge.c	FUNCTION_23	IF_1	CALL_2
0x400164f	            0xeb14	                           jmp 0x4001665	       731	merge.c	FUNCTION_23	IF_1	CALL_2
0x4001651	          0x488b3b	                    mov rdi, qword [rbx]	       732	merge.c	FUNCTION_23	IF_1	CALL_4
0x4001654	      0xe835fcffff	                   call sym.get_strategy	       732	merge.c	FUNCTION_23	IF_1	CALL_4
0x4001659	          0x4889c7	                            mov rdi, rax	       732	merge.c	FUNCTION_23	IF_1	CALL_4
0x400165c	      0xe880edffff	                call sym.append_strategy	       732	merge.c	FUNCTION_23	IF_1	CALL_4
0x4001661	        0x4883c310	                           add rbx, 0x10	       731	merge.c	FUNCTION_23	IF_1	CALL_2
0x4001665	          0x4885db	                           test rbx, rbx	       731	merge.c	FUNCTION_23	IF_1	CALL_2
0x4001668	            0x7411	                            je 0x400167b	       731	merge.c	FUNCTION_23	IF_1	CALL_2
0x400166a	        0x8b442408	                mov eax, dword [rsp + 8]	       731	merge.c	FUNCTION_23	IF_1	CALL_2
0x400166e	        0x48c1e004	                              shl rax, 4	       731	merge.c	FUNCTION_23	IF_1	CALL_2
0x4001672	        0x48030424	                    add rax, qword [rsp]	       731	merge.c	FUNCTION_23	IF_1	CALL_2
0x4001676	          0x4839c3	                            cmp rbx, rax	       731	merge.c	FUNCTION_23	IF_1	CALL_2
0x4001679	            0x72d6	                            jb 0x4001651	       731	merge.c	FUNCTION_23	IF_1	CALL_2
0x400167b	      0xbe00000000	                              mov esi, 0	       733	merge.c	FUNCTION_23	IF_1	CALL_5
0x4001680	          0x4889e7	                            mov rdi, rsp	       733	merge.c	FUNCTION_23	IF_1	CALL_5
0x4001683	      0xe800000000	                          call 0x4001688	       733	merge.c	FUNCTION_23	IF_1	CALL_5
0x4001688	            0xeb17	                           jmp 0x40016a1	       733	merge.c	FUNCTION_23	IF_1	CALL_5
0x400168a	        0x44856308	              test dword [rbx + 8], r12d	       737	merge.c	FUNCTION_23	FOR_1	IF_2
0x400168e	            0x7408	                            je 0x4001698	       737	merge.c	FUNCTION_23	FOR_1	IF_2
0x4001690	          0x4889df	                            mov rdi, rbx	       738	merge.c	FUNCTION_23	FOR_1	IF_2
0x4001693	      0xe849edffff	                call sym.append_strategy	       738	merge.c	FUNCTION_23	FOR_1	IF_2
0x4001698	        0x4883c310	                           add rbx, 0x10	       738	merge.c	FUNCTION_23	FOR_1	IF_2
0x400169c	          0x4839eb	                            cmp rbx, rbp	       736	merge.c	FUNCTION_23	FOR_1
0x400169f	            0x75e9	                           jne 0x400168a	       736	merge.c	FUNCTION_23	FOR_1
0x40016a1	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       740	merge.c	FUNCTION_23
0x40016a6	    0x644833042528	                xor rax, qword fs:[0x28]	       740	merge.c	FUNCTION_23
0x40016af	            0x7405	                            je 0x40016b6	       740	merge.c	FUNCTION_23
0x40016b1	      0xe800000000	                          call 0x40016b6	       740	merge.c	FUNCTION_23
0x40016b6	        0x4883c430	                           add rsp, 0x30	       740	merge.c	FUNCTION_23
0x40016ba	              0x5b	                                 pop rbx	       740	merge.c	FUNCTION_23
0x40016bb	              0x5d	                                 pop rbp	       740	merge.c	FUNCTION_23
0x40016bc	            0x415c	                                 pop r12	       740	merge.c	FUNCTION_23
0x40016be	              0xc3	                                     ret	       740	merge.c	FUNCTION_23
append_strategy	WHILE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0:ELSE,0:DO,0	31
0x40003e1	              0x53	                                push rbx	       166	merge.c	FUNCTION_3
0x40003e2	          0x4889fb	                            mov rbx, rdi	       166	merge.c	FUNCTION_3
0x40003e5	    0x488b05000000	            mov rax, qword [0x040003ec] 	       167	merge.c	FUNCTION_3
0x40003ec	        0x488d5001	                      lea rdx, [rax + 1]	       167	merge.c	FUNCTION_3
0x40003f0	    0x488b05000000	            mov rax, qword [0x040003f7] 	       167	merge.c	FUNCTION_3
0x40003f7	          0x4839c2	                            cmp rdx, rax	       167	merge.c	FUNCTION_3
0x40003fa	            0x7657	                           jbe 0x4000453	       167	merge.c	FUNCTION_3
0x40003fc	      0x488d744030	          lea rsi, [rax + rax*2 + 0x30] 	       167	merge.c	FUNCTION_3
0x4000401	          0x48d1ee	                              shr rsi, 1	       167	merge.c	FUNCTION_3
0x4000404	          0x4839f2	                            cmp rdx, rsi	       167	merge.c	FUNCTION_3
0x4000407	        0x480f47f2	                          cmova rsi, rdx	       167	merge.c	FUNCTION_3
0x400040b	    0x488935000000	            mov qword [0x04000412], rsi 	       167	merge.c	FUNCTION_3
0x4000412	          0x4889f2	                            mov rdx, rsi	       167	merge.c	FUNCTION_3
0x4000415	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_126	IF_1
0x400041f	          0x4839c6	                            cmp rsi, rax	       795	git-compat-util.h	FUNCTION_126	IF_1
0x4000422	            0x7614	                           jbe 0x4000438	       795	git-compat-util.h	FUNCTION_126	IF_1
0x4000424	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_126	IF_1	CALL_1
0x4000429	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_126	IF_1	CALL_1
0x400042e	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_126	IF_1	CALL_1
0x4000433	      0xe800000000	                          call 0x4000438	       796	git-compat-util.h	FUNCTION_126	IF_1	CALL_1
0x4000438	    0x488d34f50000	                        lea rsi, [rsi*8]	       167	merge.c	FUNCTION_3
0x4000440	    0x488b3d000000	            mov rdi, qword [0x04000447] 	       167	merge.c	FUNCTION_3
0x4000447	      0xe800000000	                          call 0x400044c	       167	merge.c	FUNCTION_3
0x400044c	    0x488905000000	            mov qword [0x04000453], rax 	       167	merge.c	FUNCTION_3
0x4000453	    0x488b05000000	            mov rax, qword [0x0400045a] 	       168	merge.c	FUNCTION_3
0x400045a	        0x488d5001	                      lea rdx, [rax + 1]	       168	merge.c	FUNCTION_3
0x400045e	    0x488915000000	            mov qword [0x04000465], rdx 	       168	merge.c	FUNCTION_3
0x4000465	    0x488b15000000	            mov rdx, qword [0x0400046c] 	       168	merge.c	FUNCTION_3
0x400046c	        0x48891cc2	            mov qword [rdx + rax*8], rbx	       168	merge.c	FUNCTION_3
0x4000470	              0x5b	                                 pop rbx	       169	merge.c	FUNCTION_3
0x4000471	              0xc3	                                     ret	       169	merge.c	FUNCTION_3
collect_parents	WHILE,0:functions,0:FOR,2:IF,6:SWITCH,0:CALL,13:ELSE,1:DO,0	509
0x400177b	            0x4157	                                push r15	      1087	merge.c	FUNCTION_38
0x400177d	            0x4156	                                push r14	      1087	merge.c	FUNCTION_38
0x400177f	            0x4155	                                push r13	      1087	merge.c	FUNCTION_38
0x4001781	            0x4154	                                push r12	      1087	merge.c	FUNCTION_38
0x4001783	              0x55	                                push rbp	      1087	merge.c	FUNCTION_38
0x4001784	              0x53	                                push rbx	      1087	merge.c	FUNCTION_38
0x4001785	    0x4881ecf80000	                           sub rsp, 0xf8	      1087	merge.c	FUNCTION_38
0x400178c	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      1087	merge.c	FUNCTION_38
0x4001791	      0x4889742428	             mov qword [rsp + 0x28], rsi	      1087	merge.c	FUNCTION_38
0x4001796	          0x4189d6	                           mov r14d, edx	      1087	merge.c	FUNCTION_38
0x4001799	          0x4989cf	                            mov r15, rcx	      1087	merge.c	FUNCTION_38
0x400179c	      0x4c89442418	              mov qword [rsp + 0x18], r8	      1087	merge.c	FUNCTION_38
0x40017a1	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      1087	merge.c	FUNCTION_38
0x40017aa	    0x48898c24e800	             mov qword [rsp + 0xe8], rcx	      1087	merge.c	FUNCTION_38
0x40017b2	            0x31c9	                            xor ecx, ecx	      1087	merge.c	FUNCTION_38
0x40017b4	    0x48c744244000	               mov qword [rsp + 0x40], 0	      1089	merge.c	FUNCTION_38
0x40017bd	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1091	merge.c	FUNCTION_38
0x40017c6	    0x48c744245800	               mov qword [rsp + 0x58], 0	      1091	merge.c	FUNCTION_38
0x40017cf	    0x48c744246000	               mov qword [rsp + 0x60], 0	      1091	merge.c	FUNCTION_38
0x40017d8	          0x4d85c0	                             test r8, r8	      1093	merge.c	FUNCTION_38	IF_1
0x40017db	            0x7420	                            je 0x40017fd	      1093	merge.c	FUNCTION_38	IF_1
0x40017dd	      0x4c8d6c2450	                   lea r13, [rsp + 0x50]	      1094	merge.c	FUNCTION_38	IF_1
0x40017e2	    0x833d00000000	               cmp dword [0x040017e9], 0	      1093	merge.c	FUNCTION_38	IF_1
0x40017e9	            0x7418	                            je 0x4001803	      1093	merge.c	FUNCTION_38	IF_1
0x40017eb	    0x833d00000000	               cmp dword [0x040017f2], 0	      1094	merge.c	FUNCTION_38	IF_1
0x40017f2	      0xb800000000	                              mov eax, 0	      1094	merge.c	FUNCTION_38	IF_1
0x40017f7	        0x4c0f44e8	                          cmove r13, rax	      1094	merge.c	FUNCTION_38	IF_1
0x40017fb	            0xeb06	                           jmp 0x4001803	      1094	merge.c	FUNCTION_38	IF_1
0x40017fd	    0x41bd00000000	                             mov r13d, 0	      1091	merge.c	FUNCTION_38
0x4001803	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1096	merge.c	FUNCTION_38	IF_2
0x4001808	      0x488d5c2440	                   lea rbx, [rsp + 0x40]	      1090	merge.c	FUNCTION_38
0x400180d	          0x4885c0	                           test rax, rax	      1096	merge.c	FUNCTION_38	IF_2
0x4001810	            0x7413	                            je 0x4001825	      1096	merge.c	FUNCTION_38	IF_2
0x4001812	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1097	merge.c	FUNCTION_38	CALL_1
0x4001817	          0x4889c7	                            mov rdi, rax	      1097	merge.c	FUNCTION_38	CALL_1
0x400181a	      0xe800000000	                          call 0x400181f	      1097	merge.c	FUNCTION_38	CALL_1
0x400181f	        0x488d5808	                      lea rbx, [rax + 8]	      1097	merge.c	FUNCTION_38	CALL_1
0x4001823	            0xeb00	                           jmp 0x4001825	      1097	merge.c	FUNCTION_38	CALL_1
0x4001825	        0x4183fe01	                             cmp r14d, 1	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4001829	            0x7413	                            je 0x400183e	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x400182b	      0xbd00000000	                              mov ebp, 0	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4001830	          0x4585f6	                         test r14d, r14d	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4001833	     0xf8f58020000	                            jg 0x4001a91	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4001839	      0xe9a1020000	                           jmp 0x4001adf	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x400183e	          0x498b37	                    mov rsi, qword [r15]	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4001841	      0xbf00000000	                              mov edi, 0	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4001846	      0xb90b000000	                            mov ecx, 0xb	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x400184b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x400184d	           0xf97c2	                                 seta dl	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4001850	           0xf92c0	                                 setb al	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4001853	      0xbd00000000	                              mov ebp, 0	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4001858	            0x38c2	                              cmp dl, al	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x400185a	     0xf8531020000	                           jne 0x4001a91	      1099	merge.c	FUNCTION_38	IF_3	CALL_2
0x4001860	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	      1033	merge.c	FUNCTION_37
0x400186c	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	      1033	merge.c	FUNCTION_37
0x4001878	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	      1033	merge.c	FUNCTION_37
0x4001884	    0x4c8da424b000	                   lea r12, [rsp + 0xb0]	      1036	merge.c	FUNCTION_37	IF_1
0x400188c	          0x4d85ed	                           test r13, r13	      1036	merge.c	FUNCTION_37	IF_1
0x400188f	        0x4d0f45e5	                         cmovne r12, r13	      1036	merge.c	FUNCTION_37	IF_1
0x4001893	      0xe800000000	                          call 0x4001898	      1038	merge.c	FUNCTION_37	CALL_1
0x4001898	      0x4889442438	             mov qword [rsp + 0x38], rax	      1038	merge.c	FUNCTION_37	CALL_1
0x400189d	      0xbe00000000	                              mov esi, 0	        53	fcntl2.h	FUNCTION_139	IF_2	CALL_9
0x40018a2	          0x4889c7	                            mov rdi, rax	        53	fcntl2.h	FUNCTION_139	IF_2	CALL_9
0x40018a5	      0xb800000000	                              mov eax, 0	        53	fcntl2.h	FUNCTION_139	IF_2	CALL_9
0x40018aa	      0xe800000000	                          call 0x40018af	        53	fcntl2.h	FUNCTION_139	IF_2	CALL_9
0x40018af	            0x89c5	                            mov ebp, eax	        53	fcntl2.h	FUNCTION_139	IF_2	CALL_9
0x40018b1	            0x85c0	                           test eax, eax	      1040	merge.c	FUNCTION_37	IF_2
0x40018b3	            0x7926	                           jns 0x40018db	      1040	merge.c	FUNCTION_37	IF_2
0x40018b5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x40018ba	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x40018bf	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x40018c4	      0xe800000000	                          call 0x40018c9	        54	gettext.h	FUNCTION_70
0x40018c9	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1041	merge.c	FUNCTION_37	CALL_4
0x40018ce	          0x4889c7	                            mov rdi, rax	      1041	merge.c	FUNCTION_37	CALL_4
0x40018d1	      0xb800000000	                              mov eax, 0	      1041	merge.c	FUNCTION_37	CALL_4
0x40018d6	      0xe800000000	                          call 0x40018db	      1041	merge.c	FUNCTION_37	CALL_4
0x40018db	      0xba00000000	                              mov edx, 0	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x40018e0	            0x89c6	                            mov esi, eax	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x40018e2	          0x4c89e7	                            mov rdi, r12	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x40018e5	      0xe800000000	                          call 0x40018ea	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x40018ea	          0x4885c0	                           test rax, rax	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x40018ed	            0x7926	                           jns 0x4001915	      1043	merge.c	FUNCTION_37	IF_3	CALL_5
0x40018ef	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x40018f4	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x40018f9	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x40018fe	      0xe800000000	                          call 0x4001903	        54	gettext.h	FUNCTION_70
0x4001903	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1044	merge.c	FUNCTION_37	CALL_7
0x4001908	          0x4889c7	                            mov rdi, rax	      1044	merge.c	FUNCTION_37	CALL_7
0x400190b	      0xb800000000	                              mov eax, 0	      1044	merge.c	FUNCTION_37	CALL_7
0x4001910	      0xe800000000	                          call 0x4001915	      1044	merge.c	FUNCTION_37	CALL_7
0x4001915	            0x89ef	                            mov edi, ebp	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x4001917	      0xe800000000	                          call 0x400191c	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x400191c	            0x85c0	                           test eax, eax	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x400191e	     0xf8911010000	                           jns 0x4001a35	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x4001924	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x4001929	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x400192e	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x4001933	      0xe800000000	                          call 0x4001938	        54	gettext.h	FUNCTION_70
0x4001938	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1046	merge.c	FUNCTION_37	CALL_10
0x400193d	          0x4889c7	                            mov rdi, rax	      1046	merge.c	FUNCTION_37	CALL_10
0x4001940	      0xb800000000	                              mov eax, 0	      1046	merge.c	FUNCTION_37	CALL_10
0x4001945	      0xe800000000	                          call 0x400194a	      1046	merge.c	FUNCTION_37	CALL_10
0x400194a	      0x4d8b742410	            mov r14, qword [r12 + 0x10] 	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x400194f	        0x4d8d3c2e	                    lea r15, [r14 + rbp]	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x4001953	      0xbe0a000000	                            mov esi, 0xa	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x4001958	          0x4c89ff	                            mov rdi, r15	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x400195b	      0xe800000000	                          call 0x4001960	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x4001960	      0x4889442430	             mov qword [rsp + 0x30], rax	      1053	merge.c	FUNCTION_37	FOR_1	CALL_11
0x4001965	          0x4885c0	                           test rax, rax	      1054	merge.c	FUNCTION_37	FOR_1	IF_5
0x4001968	            0x7409	                            je 0x4001973	      1054	merge.c	FUNCTION_37	FOR_1	IF_5
0x400196a	          0x4c29f0	                            sub rax, r14	      1055	merge.c	FUNCTION_37	FOR_1	IF_5
0x400196d	        0x448d7001	                     lea r14d, [rax + 1]	      1055	merge.c	FUNCTION_37	FOR_1	IF_5
0x4001971	            0xeb05	                           jmp 0x4001978	      1055	merge.c	FUNCTION_37	FOR_1	IF_5
0x4001973	      0x448b742420	           mov r14d, dword [rsp + 0x20] 	      1057	merge.c	FUNCTION_37	FOR_1	ELSE_1
0x4001978	          0x4489f0	                           mov eax, r14d	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x400197b	        0x2b44240c	              sub eax, dword [rsp + 0xc]	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x400197f	          0x83f829	                           cmp eax, 0x29	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x4001982	            0x7e63	                           jle 0x40019e7	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x4001984	    0x488db424d000	                   lea rsi, [rsp + 0xd0]	      1060	merge.c	FUNCTION_37	FOR_1	IF_6	CALL_12
0x400198c	          0x4c89ff	                            mov rdi, r15	      1060	merge.c	FUNCTION_37	FOR_1	IF_6	CALL_12
0x400198f	      0xe800000000	                          call 0x4001994	      1060	merge.c	FUNCTION_37	FOR_1	IF_6	CALL_12
0x4001994	            0x85c0	                           test eax, eax	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x4001996	            0x754f	                           jne 0x40019e7	      1059	merge.c	FUNCTION_37	FOR_1	IF_6
0x4001998	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x400199d	      0x4c8d7c2828	            lea r15, [rax + rbp + 0x28] 	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x40019a2	      0xba02000000	                              mov edx, 2	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x40019a7	      0xbe00000000	                              mov esi, 0	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x40019ac	          0x4c89ff	                            mov rdi, r15	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x40019af	      0xe800000000	                          call 0x40019b4	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x40019b4	            0x85c0	                           test eax, eax	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x40019b6	            0x7576	                           jne 0x4001a2e	      1062	merge.c	FUNCTION_37	FOR_1	ELSE_2	IF_7	CALL_13
0x40019b8	        0x410fb607	                   movzx eax, byte [r15]	      1065	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x40019bc	        0x8844240c	                mov byte [rsp + 0xc], al	      1065	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x40019c0	        0x41c60700	                       mov byte [r15], 0	      1066	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x40019c4	          0x4889ef	                            mov rdi, rbp	      1067	merge.c	FUNCTION_37	FOR_1	ELSE_3	CALL_14
0x40019c7	      0x49037c2410	             add rdi, qword [r12 + 0x10]	      1067	merge.c	FUNCTION_37	FOR_1	ELSE_3	CALL_14
0x40019cc	      0xe800000000	                          call 0x40019d1	      1067	merge.c	FUNCTION_37	FOR_1	ELSE_3	CALL_14
0x40019d1	          0x4889c7	                            mov rdi, rax	      1067	merge.c	FUNCTION_37	FOR_1	ELSE_3	CALL_14
0x40019d4	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      1068	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x40019d9	       0xfb64c240c	            movzx ecx, byte [rsp + 0xc] 	      1068	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x40019de	        0x884c2828	         mov byte [rax + rbp + 0x28], cl	      1068	merge.c	FUNCTION_37	FOR_1	ELSE_3
0x40019e2	          0x4885ff	                           test rdi, rdi	      1070	merge.c	FUNCTION_37	FOR_1	IF_8
0x40019e5	            0x753b	                           jne 0x4001a22	      1070	merge.c	FUNCTION_37	FOR_1	IF_8
0x40019e7	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1071	merge.c	FUNCTION_37	FOR_1	IF_8	IF_9
0x40019ec	          0x4885c0	                           test rax, rax	      1071	merge.c	FUNCTION_37	FOR_1	IF_8	IF_9
0x40019ef	            0x7403	                            je 0x40019f4	      1071	merge.c	FUNCTION_37	FOR_1	IF_8	IF_9
0x40019f1	          0xc60000	                       mov byte [rax], 0	      1072	merge.c	FUNCTION_37	FOR_1	IF_8	IF_9
0x40019f4	      0x49036c2410	             add rbp, qword [r12 + 0x10]	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x40019f9	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x40019fe	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x4001a03	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x4001a08	      0xe800000000	                          call 0x4001a0d	        54	gettext.h	FUNCTION_70
0x4001a0d	          0x4889ea	                            mov rdx, rbp	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x4001a10	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x4001a15	          0x4889c7	                            mov rdi, rax	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x4001a18	      0xb800000000	                              mov eax, 0	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x4001a1d	      0xe800000000	                          call 0x4001a22	      1073	merge.c	FUNCTION_37	FOR_1	IF_8	CALL_16
0x4001a22	          0x4889de	                            mov rsi, rbx	      1076	merge.c	FUNCTION_37	FOR_1	CALL_17
0x4001a25	      0xe800000000	                          call 0x4001a2a	      1076	merge.c	FUNCTION_37	FOR_1	CALL_17
0x4001a2a	        0x488d5808	                      lea rbx, [rax + 8]	      1076	merge.c	FUNCTION_37	FOR_1	CALL_17
0x4001a2e	      0x448974240c	             mov dword [rsp + 0xc], r14d	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x4001a33	            0xeb08	                           jmp 0x4001a3d	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x4001a35	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1045	merge.c	FUNCTION_37	IF_4	CALL_8
0x4001a3d	      0x48636c240c	          movsxd rbp, dword [rsp + 0xc] 	      1048	merge.c	FUNCTION_37	FOR_1
0x4001a42	      0x498b442408	                mov rax, qword [r12 + 8]	      1048	merge.c	FUNCTION_37	FOR_1
0x4001a47	      0x4889442420	             mov qword [rsp + 0x20], rax	      1048	merge.c	FUNCTION_37	FOR_1
0x4001a4c	          0x4839c5	                            cmp rbp, rax	      1048	merge.c	FUNCTION_37	FOR_1
0x4001a4f	     0xf82f5feffff	                            jb 0x400194a	      1048	merge.c	FUNCTION_37	FOR_1
0x4001a55	    0x488d8424b000	                   lea rax, [rsp + 0xb0]	      1079	merge.c	FUNCTION_37	IF_10
0x4001a5d	          0x4939c4	                            cmp r12, rax	      1079	merge.c	FUNCTION_37	IF_10
0x4001a60	            0x7508	                           jne 0x4001a6a	      1079	merge.c	FUNCTION_37	IF_10
0x4001a62	          0x4889c7	                            mov rdi, rax	      1080	merge.c	FUNCTION_37	CALL_18
0x4001a65	      0xe800000000	                          call 0x4001a6a	      1080	merge.c	FUNCTION_37	CALL_18
0x4001a6a	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      1101	merge.c	FUNCTION_38	IF_3	CALL_4
0x4001a6f	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1101	merge.c	FUNCTION_38	IF_3	CALL_4
0x4001a74	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1101	merge.c	FUNCTION_38	IF_3	CALL_4
0x4001a79	      0xe8f4e9ffff	                 call sym.reduce_parents	      1101	merge.c	FUNCTION_38	IF_3	CALL_4
0x4001a7e	      0x4889442440	             mov qword [rsp + 0x40], rax	      1101	merge.c	FUNCTION_38	IF_3	CALL_4
0x4001a83	          0x4d85ed	                           test r13, r13	      1118	merge.c	FUNCTION_38	IF_6
0x4001a86	     0xf846a050000	                            je 0x4001ff6	      1118	merge.c	FUNCTION_38	IF_6
0x4001a8c	      0xe99c040000	                           jmp 0x4001f2d	      1118	merge.c	FUNCTION_38	IF_6
0x4001a91	        0x498b3cef	            mov rdi, qword [r15 + rbp*8]	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x4001a95	      0xe800000000	                          call 0x4001a9a	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x4001a9a	          0x4989c4	                            mov r12, rax	      1104	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_5
0x4001a9d	          0x4885c0	                           test rax, rax	      1105	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4
0x4001aa0	            0x7525	                           jne 0x4001ac7	      1105	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4
0x4001aa2	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x4001aa7	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x4001aac	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x4001ab1	      0xe800000000	                          call 0x4001ab6	        54	gettext.h	FUNCTION_70
0x4001ab6	        0x498b3cef	            mov rdi, qword [r15 + rbp*8]	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4001aba	          0x4889c2	                            mov rdx, rax	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4001abd	      0xbe00000000	                              mov esi, 0	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4001ac2	      0xe800000000	                          call 0x4001ac7	      1106	merge.c	FUNCTION_38	ELSE_1	FOR_1	IF_4	CALL_6
0x4001ac7	          0x4889de	                            mov rsi, rbx	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4001aca	          0x4c89e7	                            mov rdi, r12	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4001acd	      0xe800000000	                          call 0x4001ad2	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4001ad2	        0x488d5808	                      lea rbx, [rax + 8]	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4001ad6	        0x4883c501	                              add rbp, 1	      1108	merge.c	FUNCTION_38	ELSE_1	FOR_1	CALL_8
0x4001ada	          0x4139ee	                           cmp r14d, ebp	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4001add	            0x7fb2	                            jg 0x4001a91	      1103	merge.c	FUNCTION_38	ELSE_1	FOR_1
0x4001adf	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4001ae4	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4001ae9	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4001aee	      0xe87fe9ffff	                 call sym.reduce_parents	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4001af3	          0x4989c4	                            mov r12, rax	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4001af6	      0x4889442440	             mov qword [rsp + 0x40], rax	      1110	merge.c	FUNCTION_38	ELSE_1	CALL_9
0x4001afb	          0x4d85ed	                           test r13, r13	      1111	merge.c	FUNCTION_38	ELSE_1	IF_5
0x4001afe	     0xf84f2040000	                            je 0x4001ff6	      1111	merge.c	FUNCTION_38	ELSE_1	IF_5
0x4001b04	          0x4885c0	                           test rax, rax	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x4001b07	     0xf8420040000	                            je 0x4001f2d	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x4001b0d	        0x498b0424	                    mov rax, qword [r12]	      1114	merge.c	FUNCTION_38	ELSE_1	IF_5	CALL_11
0x4001b11	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      1114	merge.c	FUNCTION_38	ELSE_1	IF_5	CALL_11
0x4001b15	        0x4883c608	                              add rsi, 8	      1114	merge.c	FUNCTION_38	ELSE_1	IF_5	CALL_11
0x4001b19	    0x48c744247000	               mov qword [rsp + 0x70], 0	       444	merge.c	FUNCTION_15
0x4001b22	    0x48c744247800	               mov qword [rsp + 0x78], 0	       444	merge.c	FUNCTION_15
0x4001b2b	    0x48c784248000	               mov qword [rsp + 0x80], 0	       444	merge.c	FUNCTION_15
0x4001b37	    0x48c784249000	               mov qword [rsp + 0x90], 0	       445	merge.c	FUNCTION_15
0x4001b43	    0x48c784249800	               mov qword [rsp + 0x98], 0	       445	merge.c	FUNCTION_15
0x4001b4f	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	       445	merge.c	FUNCTION_15
0x4001b5b	      0xba00000000	                              mov edx, 0	       450	merge.c	FUNCTION_15	CALL_1
0x4001b60	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       450	merge.c	FUNCTION_15	CALL_1
0x4001b68	      0xe800000000	                          call 0x4001b6d	       450	merge.c	FUNCTION_15	CALL_1
0x4001b6d	    0x488bac24a000	            mov rbp, qword [rsp + 0xa0] 	       451	merge.c	FUNCTION_15
0x4001b75	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	        90	string3.h	FUNCTION_103	CALL_6
0x4001b81	    0x48c78424d800	               mov qword [rsp + 0xd8], 0	        90	string3.h	FUNCTION_103	CALL_6
0x4001b8d	    0xc78424e00000	               mov dword [rsp + 0xe0], 0	        90	string3.h	FUNCTION_103	CALL_6
0x4001b98	          0x4889ef	                            mov rdi, rbp	       454	merge.c	FUNCTION_15	CALL_3
0x4001b9b	      0xe800000000	                          call 0x4001ba0	       454	merge.c	FUNCTION_15	CALL_3
0x4001ba0	          0x4989c6	                            mov r14, rax	       454	merge.c	FUNCTION_15	CALL_3
0x4001ba3	          0x4885c0	                           test rax, rax	       455	merge.c	FUNCTION_15	IF_1
0x4001ba6	            0x7524	                           jne 0x4001bcc	       455	merge.c	FUNCTION_15	IF_1
0x4001ba8	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x4001bad	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x4001bb2	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x4001bb7	      0xe800000000	                          call 0x4001bbc	        54	gettext.h	FUNCTION_70
0x4001bbc	          0x4889ee	                            mov rsi, rbp	       456	merge.c	FUNCTION_15	CALL_5
0x4001bbf	          0x4889c7	                            mov rdi, rax	       456	merge.c	FUNCTION_15	CALL_5
0x4001bc2	      0xb800000000	                              mov eax, 0	       456	merge.c	FUNCTION_15	CALL_5
0x4001bc7	      0xe800000000	                          call 0x4001bcc	       456	merge.c	FUNCTION_15	CALL_5
0x4001bcc	      0xb800000000	                              mov eax, 0	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4001bd1	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4001bd8	          0x4889ef	                            mov rdi, rbp	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4001bdb	            0xf2ae	              repne scasb al, byte [rdi]	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4001bdd	          0x4889ca	                            mov rdx, rcx	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4001be0	          0x48f7d2	                                 not rdx	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4001be3	        0x488d72ff	                      lea rsi, [rdx - 1]	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4001be7	      0x488d4c2448	                   lea rcx, [rsp + 0x48]	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4001bec	    0x488d9424d000	                   lea rdx, [rsp + 0xd0]	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4001bf4	          0x4889ef	                            mov rdi, rbp	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4001bf7	      0xe800000000	                          call 0x4001bfc	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4001bfc	            0x85c0	                           test eax, eax	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4001bfe	     0xf8eb7000000	                           jle 0x4001cbb	       458	merge.c	FUNCTION_15	IF_2	CALL_7
0x4001c04	      0xbe00000000	                              mov esi, 0	       459	merge.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4001c09	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	       459	merge.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4001c0e	      0xe800000000	                          call 0x4001c13	       459	merge.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4001c13	            0x85c0	                           test eax, eax	       459	merge.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4001c15	            0x742a	                            je 0x4001c41	       459	merge.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4001c17	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4001c1f	      0xe800000000	                          call 0x4001c24	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4001c24	          0x4889e9	                            mov rcx, rbp	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4001c27	          0x4889c2	                            mov rdx, rax	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4001c2a	      0xbe00000000	                              mov esi, 0	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4001c2f	          0x4c89ef	                            mov rdi, r13	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4001c32	      0xb800000000	                              mov eax, 0	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4001c37	      0xe800000000	                          call 0x4001c3c	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4001c3c	      0xe9c7020000	                           jmp 0x4001f08	       460	merge.c	FUNCTION_15	IF_2	IF_3	CALL_9
0x4001c41	      0xbe00000000	                              mov esi, 0	       464	merge.c	FUNCTION_15	IF_2	IF_4	CALL_11
0x4001c46	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	       464	merge.c	FUNCTION_15	IF_2	IF_4	CALL_11
0x4001c4b	      0xe800000000	                          call 0x4001c50	       464	merge.c	FUNCTION_15	IF_2	IF_4	CALL_11
0x4001c50	            0x85c0	                           test eax, eax	       464	merge.c	FUNCTION_15	IF_2	IF_4	CALL_11
0x4001c52	            0x742a	                            je 0x4001c7e	       464	merge.c	FUNCTION_15	IF_2	IF_4	CALL_11
0x4001c54	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4001c5c	      0xe800000000	                          call 0x4001c61	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4001c61	          0x4889e9	                            mov rcx, rbp	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4001c64	          0x4889c2	                            mov rdx, rax	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4001c67	      0xbe00000000	                              mov esi, 0	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4001c6c	          0x4c89ef	                            mov rdi, r13	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4001c6f	      0xb800000000	                              mov eax, 0	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4001c74	      0xe800000000	                          call 0x4001c79	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4001c79	      0xe98a020000	                           jmp 0x4001f08	       465	merge.c	FUNCTION_15	IF_2	IF_4	CALL_12
0x4001c7e	      0xbe00000000	                              mov esi, 0	       469	merge.c	FUNCTION_15	IF_2	IF_5	CALL_14
0x4001c83	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	       469	merge.c	FUNCTION_15	IF_2	IF_5	CALL_14
0x4001c88	      0xe800000000	                          call 0x4001c8d	       469	merge.c	FUNCTION_15	IF_2	IF_5	CALL_14
0x4001c8d	            0x85c0	                           test eax, eax	       469	merge.c	FUNCTION_15	IF_2	IF_5	CALL_14
0x4001c8f	            0x742a	                            je 0x4001cbb	       469	merge.c	FUNCTION_15	IF_2	IF_5	CALL_14
0x4001c91	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4001c99	      0xe800000000	                          call 0x4001c9e	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4001c9e	          0x4889e9	                            mov rcx, rbp	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4001ca1	          0x4889c2	                            mov rdx, rax	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4001ca4	      0xbe00000000	                              mov esi, 0	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4001ca9	          0x4c89ef	                            mov rdi, r13	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4001cac	      0xb800000000	                              mov eax, 0	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4001cb1	      0xe800000000	                          call 0x4001cb6	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4001cb6	      0xe94d020000	                           jmp 0x4001f08	       470	merge.c	FUNCTION_15	IF_2	IF_5	CALL_15
0x4001cbb	      0xb800000000	                              mov eax, 0	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4001cc0	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4001cc7	          0x4889ef	                            mov rdi, rbp	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4001cca	            0xf2ae	              repne scasb al, byte [rdi]	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4001ccc	          0x4889cb	                            mov rbx, rcx	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4001ccf	          0x48f7d3	                                 not rbx	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4001cd2	      0x488d441dff	                lea rax, [rbp + rbx - 1]	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4001cd7	          0x4839c5	                            cmp rbp, rax	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4001cda	            0x7327	                           jae 0x4001d03	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4001cdc	        0x8078ff5e	                cmp byte [rax - 1], 0x5e	       478	merge.c	FUNCTION_15	FOR_1
0x4001ce0	            0x7521	                           jne 0x4001d03	       478	merge.c	FUNCTION_15	FOR_1
0x4001ce2	      0xbb00000000	                              mov ebx, 0	       478	merge.c	FUNCTION_15	FOR_1
0x4001ce7	          0x83c301	                              add ebx, 1	       480	merge.c	FUNCTION_15	FOR_1
0x4001cea	        0x4883e801	                              sub rax, 1	       479	merge.c	FUNCTION_15	FOR_1
0x4001cee	          0x4839c5	                            cmp rbp, rax	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4001cf1	            0x7406	                            je 0x4001cf9	       477	merge.c	FUNCTION_15	FOR_1	CALL_17
0x4001cf3	        0x8078ff5e	                cmp byte [rax - 1], 0x5e	       478	merge.c	FUNCTION_15	FOR_1
0x4001cf7	            0x74ee	                            je 0x4001ce7	       478	merge.c	FUNCTION_15	FOR_1
0x4001cf9	    0x41bf01000000	                             mov r15d, 1	       482	merge.c	FUNCTION_15	IF_6
0x4001cff	            0x85db	                           test ebx, ebx	       481	merge.c	FUNCTION_15	IF_6
0x4001d01	            0x756d	                           jne 0x4001d70	       481	merge.c	FUNCTION_15	IF_6
0x4001d03	      0xbe7e000000	                           mov esi, 0x7e	       485	merge.c	FUNCTION_15	ELSE_1	CALL_18
0x4001d08	          0x4889ef	                            mov rdi, rbp	       485	merge.c	FUNCTION_15	ELSE_1	CALL_18
0x4001d0b	      0xe800000000	                          call 0x4001d10	       485	merge.c	FUNCTION_15	ELSE_1	CALL_18
0x4001d10	          0x4885c0	                           test rax, rax	       486	merge.c	FUNCTION_15	ELSE_1	IF_7
0x4001d13	     0xf8479010000	                            je 0x4001e92	       486	merge.c	FUNCTION_15	ELSE_1	IF_7
0x4001d19	        0x488d5001	                      lea rdx, [rax + 1]	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001d1d	         0xfb64001	               movzx eax, byte [rax + 1]	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001d21	            0x84c0	                             test al, al	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001d23	     0xf84e7020000	                            je 0x4002010	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001d29	           0xfb6c8	                           movzx ecx, al	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001d2c	    0xf68100000000	                      test byte [rcx], 2	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001d33	     0xf8459010000	                            je 0x4001e92	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001d39	      0xbb01000000	                              mov ebx, 1	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001d3e	      0xb900000000	                              mov ecx, 0	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001d43	            0x3c30	                            cmp al, 0x30	       491	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001d45	           0xf95c0	                                setne al	       491	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001d48	           0xfb6c0	                           movzx eax, al	       491	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001d4b	             0x9c1	                             or ecx, eax	       491	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001d4d	          0x83c301	                              add ebx, 1	       492	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001d50	        0x4883c201	                              add rdx, 1	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001d54	           0xfb602	                   movzx eax, byte [rdx]	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001d57	            0x84c0	                             test al, al	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001d59	     0xf84bb020000	                            je 0x400201a	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001d5f	           0xfb6f0	                           movzx esi, al	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001d62	    0xf68600000000	                      test byte [rsi], 2	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001d69	            0x75d8	                           jne 0x4001d43	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001d6b	      0xe922010000	                           jmp 0x4001e92	       490	merge.c	FUNCTION_15	ELSE_1	IF_7	WHILE_1
0x4001d70	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	       503	merge.c	FUNCTION_15	IF_11
0x4001d7c	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	       503	merge.c	FUNCTION_15	IF_11
0x4001d88	    0x48c78424c000	               mov qword [rsp + 0xc0], 0	       503	merge.c	FUNCTION_15	IF_11
0x4001d94	          0x4889ea	                            mov rdx, rbp	       504	merge.c	FUNCTION_15	IF_11	CALL_19
0x4001d97	      0xbe00000000	                              mov esi, 0	       504	merge.c	FUNCTION_15	IF_11	CALL_19
0x4001d9c	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	       504	merge.c	FUNCTION_15	IF_11	CALL_19
0x4001da4	      0xb800000000	                              mov eax, 0	       504	merge.c	FUNCTION_15	IF_11	CALL_19
0x4001da9	      0xe800000000	                          call 0x4001dae	       504	merge.c	FUNCTION_15	IF_11	CALL_19
0x4001dae	          0x4863db	                         movsxd rbx, ebx	       505	merge.c	FUNCTION_15	IF_11	CALL_20
0x4001db1	    0x488b8424b800	            mov rax, qword [rsp + 0xb8] 	       505	merge.c	FUNCTION_15	IF_11	CALL_20
0x4001db9	          0x4829d8	                            sub rax, rbx	       505	merge.c	FUNCTION_15	IF_11	CALL_20
0x4001dbc	    0x488b9424b000	            mov rdx, qword [rsp + 0xb0] 	       162	strbuf.h	FUNCTION_74	IF_1
0x4001dc4	        0x4883fa01	                              cmp rdx, 1	       162	strbuf.h	FUNCTION_74	IF_1
0x4001dc8	        0x4883d2ff	             adc rdx, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_74	IF_1
0x4001dcc	          0x4839d0	                            cmp rax, rdx	       162	strbuf.h	FUNCTION_74	IF_1
0x4001dcf	            0x760f	                           jbe 0x4001de0	       162	strbuf.h	FUNCTION_74	IF_1
0x4001dd1	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_74	CALL_1
0x4001dd6	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_74	CALL_1
0x4001ddb	      0xe800000000	                          call 0x4001de0	       163	strbuf.h	FUNCTION_74	CALL_1
0x4001de0	    0x48898424b800	             mov qword [rsp + 0xb8], rax	       164	strbuf.h	FUNCTION_74
0x4001de8	    0x488b9424c000	            mov rdx, qword [rsp + 0xc0] 	       165	strbuf.h	FUNCTION_74	IF_2
0x4001df0	    0x4881fa000000	                              cmp rdx, 0	       165	strbuf.h	FUNCTION_74	IF_2
0x4001df7	            0x7406	                            je 0x4001dff	       165	strbuf.h	FUNCTION_74	IF_2
0x4001df9	        0xc6040200	                 mov byte [rdx + rax], 0	       166	strbuf.h	FUNCTION_74	IF_2
0x4001dfd	            0xeb22	                           jmp 0x4001e21	       166	strbuf.h	FUNCTION_74	IF_2
0x4001dff	    0x803d00000000	                cmp byte [0x04001e06], 0	       168	strbuf.h	FUNCTION_74	CALL_2
0x4001e06	            0x7419	                            je 0x4001e21	       168	strbuf.h	FUNCTION_74	CALL_2
0x4001e08	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_74	CALL_2
0x4001e0d	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_74	CALL_2
0x4001e12	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_74	CALL_2
0x4001e17	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_74	CALL_2
0x4001e1c	      0xe800000000	                          call 0x4001e21	       168	strbuf.h	FUNCTION_74	CALL_2
0x4001e21	    0x488bbc24c000	            mov rdi, qword [rsp + 0xc0] 	       506	merge.c	FUNCTION_15	IF_11	IF_12	CALL_21
0x4001e29	      0xe800000000	                          call 0x4001e2e	       506	merge.c	FUNCTION_15	IF_11	IF_12	CALL_21
0x4001e2e	            0x85c0	                           test eax, eax	       506	merge.c	FUNCTION_15	IF_11	IF_12	CALL_21
0x4001e30	            0x7453	                            je 0x4001e85	       506	merge.c	FUNCTION_15	IF_11	IF_12	CALL_21
0x4001e32	          0x4585ff	                         test r15d, r15d	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4001e35	      0xb800000000	                              mov eax, 0	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4001e3a	      0xbd00000000	                              mov ebp, 0	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4001e3f	        0x480f44e8	                          cmove rbp, rax	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4001e43	    0x488b8424c000	            mov rax, qword [rsp + 0xc0] 	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4001e4b	        0x488d580b	                    lea rbx, [rax + 0xb]	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4001e4f	        0x498d7e04	                      lea rdi, [r14 + 4]	       509	merge.c	FUNCTION_15	IF_11	IF_12	CALL_23
0x4001e53	      0xe800000000	                          call 0x4001e58	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4001e58	          0x4989e8	                             mov r8, rbp	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4001e5b	          0x4889d9	                            mov rcx, rbx	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4001e5e	          0x4889c2	                            mov rdx, rax	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4001e61	      0xbe00000000	                              mov esi, 0	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4001e66	          0x4c89ef	                            mov rdi, r13	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4001e69	      0xb800000000	                              mov eax, 0	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4001e6e	      0xe800000000	                          call 0x4001e73	       507	merge.c	FUNCTION_15	IF_11	IF_12	CALL_22
0x4001e73	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	       512	merge.c	FUNCTION_15	IF_11	IF_12	CALL_24
0x4001e7b	      0xe800000000	                          call 0x4001e80	       512	merge.c	FUNCTION_15	IF_11	IF_12	CALL_24
0x4001e80	      0xe983000000	                           jmp 0x4001f08	       512	merge.c	FUNCTION_15	IF_11	IF_12	CALL_24
0x4001e85	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	       515	merge.c	FUNCTION_15	IF_11	CALL_25
0x4001e8d	      0xe800000000	                          call 0x4001e92	       515	merge.c	FUNCTION_15	IF_11	CALL_25
0x4001e92	        0x498b5e18	            mov rbx, qword [r14 + 0x18] 	       518	merge.c	FUNCTION_15	IF_13
0x4001e96	          0x4885db	                           test rbx, rbx	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4001e99	            0x744c	                            je 0x4001ee7	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4001e9b	          0x488b13	                    mov rdx, qword [rbx]	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4001e9e	          0x4885d2	                           test rdx, rdx	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4001ea1	            0x7444	                            je 0x4001ee7	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4001ea3	           0xfb602	                   movzx eax, byte [rdx]	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4001ea6	          0x83e00e	                            and eax, 0xe	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4001ea9	            0x3c08	                               cmp al, 8	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4001eab	            0x753a	                           jne 0x4001ee7	       521	merge.c	FUNCTION_15	IF_13	IF_14
0x4001ead	           0xfb63a	                   movzx edi, byte [rdx]	       524	merge.c	FUNCTION_15	IF_13	IF_14	CALL_29
0x4001eb0	          0x40d0ef	                              shr dil, 1	       524	merge.c	FUNCTION_15	IF_13	IF_14	CALL_29
0x4001eb3	          0x83e707	                              and edi, 7	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001eb6	      0xe800000000	                          call 0x4001ebb	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001ebb	          0x4989c6	                            mov r14, rax	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001ebe	          0x488b3b	                    mov rdi, qword [rbx]	       523	merge.c	FUNCTION_15	IF_13	IF_14	CALL_28
0x4001ec1	        0x4883c704	                              add rdi, 4	       523	merge.c	FUNCTION_15	IF_13	IF_14	CALL_28
0x4001ec5	      0xe800000000	                          call 0x4001eca	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001eca	          0x4989e8	                             mov r8, rbp	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001ecd	          0x4c89f1	                            mov rcx, r14	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001ed0	          0x4889c2	                            mov rdx, rax	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001ed3	      0xbe00000000	                              mov esi, 0	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001ed8	          0x4c89ef	                            mov rdi, r13	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001edb	      0xb800000000	                              mov eax, 0	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001ee0	      0xe800000000	                          call 0x4001ee5	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001ee5	            0xeb21	                           jmp 0x4001f08	       522	merge.c	FUNCTION_15	IF_13	IF_14	CALL_27
0x4001ee7	        0x498d7e04	                      lea rdi, [r14 + 4]	       531	merge.c	FUNCTION_15	CALL_31
0x4001eeb	      0xe800000000	                          call 0x4001ef0	       530	merge.c	FUNCTION_15	CALL_30
0x4001ef0	          0x4889e9	                            mov rcx, rbp	       530	merge.c	FUNCTION_15	CALL_30
0x4001ef3	          0x4889c2	                            mov rdx, rax	       530	merge.c	FUNCTION_15	CALL_30
0x4001ef6	      0xbe00000000	                              mov esi, 0	       530	merge.c	FUNCTION_15	CALL_30
0x4001efb	          0x4c89ef	                            mov rdi, r13	       530	merge.c	FUNCTION_15	CALL_30
0x4001efe	      0xb800000000	                              mov eax, 0	       530	merge.c	FUNCTION_15	CALL_30
0x4001f03	      0xe800000000	                          call 0x4001f08	       530	merge.c	FUNCTION_15	CALL_30
0x4001f08	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	       533	merge.c	FUNCTION_15	CALL_32
0x4001f0d	      0xe800000000	                          call 0x4001f12	       533	merge.c	FUNCTION_15	CALL_32
0x4001f12	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	       534	merge.c	FUNCTION_15	CALL_33
0x4001f1a	      0xe800000000	                          call 0x4001f1f	       534	merge.c	FUNCTION_15	CALL_33
0x4001f1f	      0x4d8b642408	                mov r12, qword [r12 + 8]	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x4001f24	          0x4d85e4	                           test r12, r12	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x4001f27	     0xf85e0fbffff	                           jne 0x4001b0d	      1113	merge.c	FUNCTION_38	ELSE_1	IF_5	FOR_2
0x4001f2d	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	        90	string3.h	FUNCTION_103	CALL_6
0x4001f39	    0x833d00000000	               cmp dword [0x04001f40], 0	      1020	merge.c	FUNCTION_36
0x4001f40	           0xf94c1	                                 sete cl	      1020	merge.c	FUNCTION_36
0x4001f43	    0x8b0500000000	            mov eax, dword [0x04001f49] 	      1021	merge.c	FUNCTION_36
0x4001f49	    0x898424b40000	             mov dword [rsp + 0xb4], eax	      1021	merge.c	FUNCTION_36
0x4001f50	    0x833d00000000	               cmp dword [0x04001f57], 0	      1022	merge.c	FUNCTION_36
0x4001f57	           0xf9fc2	                                 setg dl	      1022	merge.c	FUNCTION_36
0x4001f5a	          0x8d0412	                    lea eax, [rdx + rdx]	      1022	merge.c	FUNCTION_36
0x4001f5d	             0x9c8	                             or eax, ecx	      1022	merge.c	FUNCTION_36
0x4001f5f	    0x888424b00000	               mov byte [rsp + 0xb0], al	      1022	merge.c	FUNCTION_36
0x4001f66	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      1024	merge.c	FUNCTION_36	CALL_2
0x4001f6e	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      1024	merge.c	FUNCTION_36	CALL_2
0x4001f73	          0x4889de	                            mov rsi, rbx	      1024	merge.c	FUNCTION_36	CALL_2
0x4001f76	          0x4c89ef	                            mov rdi, r13	      1024	merge.c	FUNCTION_36	CALL_2
0x4001f79	      0xe800000000	                          call 0x4001f7e	      1024	merge.c	FUNCTION_36	CALL_2
0x4001f7e	        0x488b4308	                mov rax, qword [rbx + 8]	      1025	merge.c	FUNCTION_36	IF_1
0x4001f82	          0x4885c0	                           test rax, rax	      1025	merge.c	FUNCTION_36	IF_1
0x4001f85	            0x7467	                            je 0x4001fee	      1025	merge.c	FUNCTION_36	IF_1
0x4001f87	        0x488d48ff	                      lea rcx, [rax - 1]	      1026	merge.c	FUNCTION_36	CALL_3
0x4001f8b	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       162	strbuf.h	FUNCTION_74	IF_1
0x4001f90	          0x488b12	                    mov rdx, qword [rdx]	       162	strbuf.h	FUNCTION_74	IF_1
0x4001f93	        0x4883fa01	                              cmp rdx, 1	       162	strbuf.h	FUNCTION_74	IF_1
0x4001f97	        0x4883d2ff	             adc rdx, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_74	IF_1
0x4001f9b	          0x4839d1	                            cmp rcx, rdx	       162	strbuf.h	FUNCTION_74	IF_1
0x4001f9e	            0x760f	                           jbe 0x4001faf	       162	strbuf.h	FUNCTION_74	IF_1
0x4001fa0	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_74	CALL_1
0x4001fa5	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_74	CALL_1
0x4001faa	      0xe800000000	                          call 0x4001faf	       163	strbuf.h	FUNCTION_74	CALL_1
0x4001faf	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       164	strbuf.h	FUNCTION_74
0x4001fb4	        0x48894a08	                mov qword [rdx + 8], rcx	       164	strbuf.h	FUNCTION_74
0x4001fb8	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       165	strbuf.h	FUNCTION_74	IF_2
0x4001fbc	    0x4881fa000000	                              cmp rdx, 0	       165	strbuf.h	FUNCTION_74	IF_2
0x4001fc3	            0x7407	                            je 0x4001fcc	       165	strbuf.h	FUNCTION_74	IF_2
0x4001fc5	      0xc64402ff00	             mov byte [rdx + rax - 1], 0	       166	strbuf.h	FUNCTION_74	IF_2
0x4001fca	            0xeb22	                           jmp 0x4001fee	       166	strbuf.h	FUNCTION_74	IF_2
0x4001fcc	    0x803d00000000	                cmp byte [0x04001fd3], 0	       168	strbuf.h	FUNCTION_74	CALL_2
0x4001fd3	            0x7419	                            je 0x4001fee	       168	strbuf.h	FUNCTION_74	CALL_2
0x4001fd5	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_74	CALL_2
0x4001fda	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_74	CALL_2
0x4001fdf	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_74	CALL_2
0x4001fe4	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_74	CALL_2
0x4001fe9	      0xe800000000	                          call 0x4001fee	       168	strbuf.h	FUNCTION_74	CALL_2
0x4001fee	          0x4c89ef	                            mov rdi, r13	      1120	merge.c	FUNCTION_38	IF_6	CALL_13
0x4001ff1	      0xe800000000	                          call 0x4001ff6	      1120	merge.c	FUNCTION_38	IF_6	CALL_13
0x4001ff6	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      1124	merge.c	FUNCTION_38
0x4001ffb	    0x488b8c24e800	            mov rcx, qword [rsp + 0xe8] 	      1124	merge.c	FUNCTION_38
0x4002003	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1124	merge.c	FUNCTION_38
0x400200c	            0x7431	                            je 0x400203f	      1124	merge.c	FUNCTION_38
0x400200e	            0xeb2a	                           jmp 0x400203a	      1124	merge.c	FUNCTION_38
0x4002010	      0xbb01000000	                              mov ebx, 1	       489	merge.c	FUNCTION_15	ELSE_1	IF_7
0x4002015	      0xb900000000	                              mov ecx, 0	       487	merge.c	FUNCTION_15	ELSE_1	IF_7
0x400201a	          0x83fb01	                              cmp ebx, 1	       482	merge.c	FUNCTION_15	IF_6
0x400201d	        0x410f94c7	                               sete r15b	       482	merge.c	FUNCTION_15	IF_6
0x4002021	            0x85c9	                           test ecx, ecx	       482	merge.c	FUNCTION_15	IF_6
0x4002023	           0xf95c0	                                setne al	       482	merge.c	FUNCTION_15	IF_6
0x4002026	          0x4109c7	                            or r15d, eax	       482	merge.c	FUNCTION_15	IF_6
0x4002029	        0x450fb6ff	                        movzx r15d, r15b	       482	merge.c	FUNCTION_15	IF_6
0x400202d	            0x85db	                           test ebx, ebx	       502	merge.c	FUNCTION_15	IF_11
0x400202f	     0xf845dfeffff	                            je 0x4001e92	       502	merge.c	FUNCTION_15	IF_11
0x4002035	      0xe936fdffff	                           jmp 0x4001d70	       502	merge.c	FUNCTION_15	IF_11
0x400203a	      0xe800000000	                          call 0x400203f	      1124	merge.c	FUNCTION_38
0x400203f	    0x4881c4f80000	                           add rsp, 0xf8	      1124	merge.c	FUNCTION_38
0x4002046	              0x5b	                                 pop rbx	      1124	merge.c	FUNCTION_38
0x4002047	              0x5d	                                 pop rbp	      1124	merge.c	FUNCTION_38
0x4002048	            0x415c	                                 pop r12	      1124	merge.c	FUNCTION_38
0x400204a	            0x415d	                                 pop r13	      1124	merge.c	FUNCTION_38
0x400204c	            0x415e	                                 pop r14	      1124	merge.c	FUNCTION_38
0x400204e	            0x415f	                                 pop r15	      1124	merge.c	FUNCTION_38
0x4002050	              0xc3	                                     ret	      1124	merge.c	FUNCTION_38
option_parse_message	WHILE,0:functions,0:FOR,0:IF,2:SWITCH,0:CALL,3:ELSE,2:DO,0	43
0x40016bf	        0x4883ec08	                              sub rsp, 8	        99	merge.c	FUNCTION_1
0x40016c3	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	       100	merge.c	FUNCTION_1
0x40016c7	            0x85d2	                           test edx, edx	       102	merge.c	FUNCTION_1	IF_1
0x40016c9	            0x7443	                            je 0x400170e	       102	merge.c	FUNCTION_1	IF_1
0x40016cb	    0x48c747080000	                  mov qword [rdi + 8], 0	       164	strbuf.h	FUNCTION_74
0x40016d3	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       165	strbuf.h	FUNCTION_74	IF_2
0x40016d7	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_74	IF_2
0x40016dd	            0x740d	                            je 0x40016ec	       165	strbuf.h	FUNCTION_74	IF_2
0x40016df	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_74	IF_2
0x40016e2	      0xb800000000	                              mov eax, 0	       109	merge.c	FUNCTION_1
0x40016e7	      0xe98a000000	                           jmp 0x4001776	       109	merge.c	FUNCTION_1
0x40016ec	    0x803d00000000	                cmp byte [0x040016f3], 0	       168	strbuf.h	FUNCTION_74	CALL_2
0x40016f3	            0x747c	                            je 0x4001771	       168	strbuf.h	FUNCTION_74	CALL_2
0x40016f5	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_74	CALL_2
0x40016fa	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_74	CALL_2
0x40016ff	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_74	CALL_2
0x4001704	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_74	CALL_2
0x4001709	      0xe800000000	                          call 0x400170e	       168	strbuf.h	FUNCTION_74	CALL_2
0x400170e	          0x4885f6	                           test rsi, rsi	       104	merge.c	FUNCTION_1	ELSE_1	IF_2
0x4001711	            0x7436	                            je 0x4001749	       104	merge.c	FUNCTION_1	ELSE_1	IF_2
0x4001713	      0x48837f0800	                  cmp qword [rdi + 8], 0	       105	merge.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x4001718	      0xba00000000	                              mov edx, 0	       105	merge.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x400171d	      0xb800000000	                              mov eax, 0	       105	merge.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x4001722	        0x480f45d0	                         cmovne rdx, rax	       105	merge.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x4001726	          0x4889f1	                            mov rcx, rsi	       105	merge.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x4001729	      0xbe00000000	                              mov esi, 0	       105	merge.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x400172e	      0xb800000000	                              mov eax, 0	       105	merge.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x4001733	      0xe800000000	                          call 0x4001738	       105	merge.c	FUNCTION_1	ELSE_1	IF_2	CALL_2
0x4001738	    0xc70500000000	               mov dword [0x04001742], 1	       106	merge.c	FUNCTION_1	ELSE_1	IF_2
0x4001742	      0xb800000000	                              mov eax, 0	       109	merge.c	FUNCTION_1
0x4001747	            0xeb2d	                           jmp 0x4001776	       109	merge.c	FUNCTION_1
0x4001749	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x400174e	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x4001753	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x4001758	      0xe800000000	                          call 0x400175d	        54	gettext.h	FUNCTION_70
0x400175d	          0x4889c7	                            mov rdi, rax	       108	merge.c	FUNCTION_1	CALL_3
0x4001760	      0xb800000000	                              mov eax, 0	       108	merge.c	FUNCTION_1	CALL_3
0x4001765	      0xe800000000	                          call 0x400176a	       108	merge.c	FUNCTION_1	CALL_3
0x400176a	      0xb8ffffffff	                     mov eax, 0xffffffff	       108	merge.c	FUNCTION_1	CALL_3
0x400176f	            0xeb05	                           jmp 0x4001776	       108	merge.c	FUNCTION_1	CALL_3
0x4001771	      0xb800000000	                              mov eax, 0	       109	merge.c	FUNCTION_1
0x4001776	        0x4883c408	                              add rsp, 8	       110	merge.c	FUNCTION_1
0x400177a	              0xc3	                                     ret	       110	merge.c	FUNCTION_1
strbuf_addch	WHILE,0:functions,0:FOR,0:IF,1:SWITCH,0:CALL,2:ELSE,0:DO,0	26
0x400069e	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_75
0x400069f	              0x53	                                push rbx	       226	strbuf.h	FUNCTION_75
0x40006a0	        0x4883ec08	                              sub rsp, 8	       226	strbuf.h	FUNCTION_75
0x40006a4	          0x4889fb	                            mov rbx, rdi	       226	strbuf.h	FUNCTION_75
0x40006a7	            0x89f5	                            mov ebp, esi	       226	strbuf.h	FUNCTION_75
0x40006a9	          0x488b07	                    mov rax, qword [rdi]	       141	strbuf.h	FUNCTION_73
0x40006ac	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_73
0x40006af	            0x7409	                            je 0x40006ba	       141	strbuf.h	FUNCTION_73
0x40006b1	          0x48ffc8	                                 dec rax	       227	strbuf.h	FUNCTION_75	IF_1	CALL_1
0x40006b4	        0x48394708	                cmp qword [rdi + 8], rax	       227	strbuf.h	FUNCTION_75	IF_1	CALL_1
0x40006b8	            0x750d	                           jne 0x40006c7	       227	strbuf.h	FUNCTION_75	IF_1	CALL_1
0x40006ba	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_75	CALL_2
0x40006bf	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_75	CALL_2
0x40006c2	      0xe800000000	                          call 0x40006c7	       228	strbuf.h	FUNCTION_75	CALL_2
0x40006c7	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_75
0x40006cb	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_75
0x40006cf	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_75
0x40006d3	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_75
0x40006d7	        0x40882c02	               mov byte [rdx + rax], bpl	       229	strbuf.h	FUNCTION_75
0x40006db	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_75
0x40006df	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_75
0x40006e3	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_75
0x40006e7	        0x4883c408	                              add rsp, 8	       231	strbuf.h	FUNCTION_75
0x40006eb	              0x5b	                                 pop rbx	       231	strbuf.h	FUNCTION_75
0x40006ec	              0x5d	                                 pop rbp	       231	strbuf.h	FUNCTION_75
0x40006ed	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_75
abort_commit	WHILE,0:functions,0:FOR,0:IF,1:SWITCH,0:CALL,3:ELSE,0:DO,0	20
0x4000fc0	              0x53	                                push rbx	       752	merge.c	FUNCTION_25
0x4000fc1	          0x4889fb	                            mov rbx, rdi	       752	merge.c	FUNCTION_25
0x4000fc4	          0x4885f6	                           test rsi, rsi	       753	merge.c	FUNCTION_25	IF_1
0x4000fc7	            0x740c	                            je 0x4000fd5	       753	merge.c	FUNCTION_25	IF_1
0x4000fc9	      0xbf00000000	                              mov edi, 0	       754	merge.c	FUNCTION_25	IF_1
0x4000fce	            0xb000	                               mov al, 0	       754	merge.c	FUNCTION_25	IF_1
0x4000fd0	      0xe800000000	                          call 0x4000fd5	       754	merge.c	FUNCTION_25	IF_1
0x4000fd5	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_70
0x4000fda	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_70
0x4000fdf	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_70
0x4000fe4	      0xe800000000	                          call 0x4000fe9	        54	gettext.h	FUNCTION_70
0x4000fe9	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_386
0x4000fec	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_386
0x4000ff1	    0x488b3d000000	            mov rdi, qword [0x04000ff8] 	        97	stdio2.h	CALL_386
0x4000ff8	            0xb000	                               mov al, 0	        97	stdio2.h	CALL_386
0x4000ffa	      0xe800000000	                          call 0x4000fff	        97	stdio2.h	CALL_386
0x4000fff	          0x4889df	                            mov rdi, rbx	       757	merge.c	FUNCTION_25	CALL_2
0x4001002	      0xe8e7f6ffff	              call sym.write_merge_state	       757	merge.c	FUNCTION_25	CALL_2
0x4001007	      0xbf01000000	                              mov edi, 1	       758	merge.c	FUNCTION_25	CALL_3
0x400100c	      0xe800000000	              call sym.prepare_to_commit	       758	merge.c	FUNCTION_25	CALL_3
option_parse_x	WHILE,0:functions,0:FOR,0:IF,1:SWITCH,0:CALL,1:ELSE,0:DO,0	42
0x400032a	            0x85d2	                           test edx, edx	       184	merge.c	FUNCTION_5	IF_1
0x400032c	     0xf85a9000000	                           jne 0x40003db	       184	merge.c	FUNCTION_5	IF_1
0x4000332	              0x55	                                push rbp	       183	merge.c	FUNCTION_5
0x4000333	              0x53	                                push rbx	       183	merge.c	FUNCTION_5
0x4000334	        0x4883ec08	                              sub rsp, 8	       183	merge.c	FUNCTION_5
0x4000338	          0x4889f3	                            mov rbx, rsi	       183	merge.c	FUNCTION_5
0x400033b	    0x488b05000000	            mov rax, qword [0x04000342] 	       187	merge.c	FUNCTION_5
0x4000342	        0x488d7001	                      lea rsi, [rax + 1]	       187	merge.c	FUNCTION_5
0x4000346	    0x488b05000000	            mov rax, qword [0x0400034d] 	       187	merge.c	FUNCTION_5
0x400034d	          0x4839c6	                            cmp rsi, rax	       187	merge.c	FUNCTION_5
0x4000350	            0x7654	                           jbe 0x40003a6	       187	merge.c	FUNCTION_5
0x4000352	      0x488d544030	          lea rdx, [rax + rax*2 + 0x30] 	       187	merge.c	FUNCTION_5
0x4000357	          0x48d1ea	                              shr rdx, 1	       187	merge.c	FUNCTION_5
0x400035a	          0x4839d6	                            cmp rsi, rdx	       187	merge.c	FUNCTION_5
0x400035d	        0x480f47d6	                          cmova rdx, rsi	       187	merge.c	FUNCTION_5
0x4000361	    0x488915000000	            mov qword [0x04000368], rdx 	       187	merge.c	FUNCTION_5
0x4000368	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_126	IF_1
0x4000372	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_126	IF_1
0x4000375	            0x7614	                           jbe 0x400038b	       795	git-compat-util.h	FUNCTION_126	IF_1
0x4000377	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_126	IF_1	CALL_1
0x400037c	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_126	IF_1	CALL_1
0x4000381	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_126	IF_1	CALL_1
0x4000386	      0xe800000000	                          call 0x400038b	       796	git-compat-util.h	FUNCTION_126	IF_1	CALL_1
0x400038b	    0x488d34d50000	                        lea rsi, [rdx*8]	       187	merge.c	FUNCTION_5
0x4000393	    0x488b3d000000	            mov rdi, qword [0x0400039a] 	       187	merge.c	FUNCTION_5
0x400039a	      0xe800000000	                          call 0x400039f	       187	merge.c	FUNCTION_5
0x400039f	    0x488905000000	            mov qword [0x040003a6], rax 	       187	merge.c	FUNCTION_5
0x40003a6	    0x488b05000000	            mov rax, qword [0x040003ad] 	       188	merge.c	FUNCTION_5	CALL_1
0x40003ad	        0x488d5001	                      lea rdx, [rax + 1]	       188	merge.c	FUNCTION_5	CALL_1
0x40003b1	    0x488915000000	            mov qword [0x040003b8], rdx 	       188	merge.c	FUNCTION_5	CALL_1
0x40003b8	    0x488b15000000	            mov rdx, qword [0x040003bf] 	       188	merge.c	FUNCTION_5	CALL_1
0x40003bf	        0x488d2cc2	                  lea rbp, [rdx + rax*8]	       188	merge.c	FUNCTION_5	CALL_1
0x40003c3	          0x4889df	                            mov rdi, rbx	       188	merge.c	FUNCTION_5	CALL_1
0x40003c6	      0xe800000000	                          call 0x40003cb	       188	merge.c	FUNCTION_5	CALL_1
0x40003cb	        0x48894500	                    mov qword [rbp], rax	       188	merge.c	FUNCTION_5	CALL_1
0x40003cf	      0xb800000000	                              mov eax, 0	       190	merge.c	FUNCTION_5
0x40003d4	        0x4883c408	                              add rsp, 8	       190	merge.c	FUNCTION_5
0x40003d8	              0x5b	                                 pop rbx	       190	merge.c	FUNCTION_5
0x40003d9	              0x5d	                                 pop rbp	       190	merge.c	FUNCTION_5
0x40003da	              0xc3	                                     ret	       190	merge.c	FUNCTION_5
0x40003db	      0xb800000000	                              mov eax, 0	       190	merge.c	FUNCTION_5
0x40003e0	              0xc3	                                     ret	       190	merge.c	FUNCTION_5
option_parse_n	WHILE,0:functions,0:FOR,0:IF,0:SWITCH,0:CALL,0:ELSE,0:DO,0	3
0x4000040	    0x891500000000	            mov dword [0x04000046], edx 	       195	merge.c	FUNCTION_6
0x4000046	      0xb800000000	                              mov eax, 0	       197	merge.c	FUNCTION_6
0x400004b	              0xc3	                                     ret	       197	merge.c	FUNCTION_6
