llist_mergesort	CALL,12:DO,0:WHILE,2:SWITCH,0:functions,0:ELSE,4:IF,6:FOR,1	171
0x4000040	            0x4157	                                push r15	        30	mergesort.c	FUNCTION_3
0x4000042	            0x4156	                                push r14	        30	mergesort.c	FUNCTION_3
0x4000044	            0x4155	                                push r13	        30	mergesort.c	FUNCTION_3
0x4000046	            0x4154	                                push r12	        30	mergesort.c	FUNCTION_3
0x4000048	              0x55	                                push rbp	        30	mergesort.c	FUNCTION_3
0x4000049	              0x53	                                push rbx	        30	mergesort.c	FUNCTION_3
0x400004a	        0x4883ec38	                           sub rsp, 0x38	        30	mergesort.c	FUNCTION_3
0x400004e	          0x4885ff	                           test rdi, rdi	        33	mergesort.c	FUNCTION_3	IF_1
0x4000051	      0x48897c2428	             mov qword [rsp + 0x28], rdi	        30	mergesort.c	FUNCTION_3
0x4000056	      0x4889542408	                mov qword [rsp + 8], rdx	        30	mergesort.c	FUNCTION_3
0x400005b	      0x48894c2418	             mov qword [rsp + 0x18], rcx	        30	mergesort.c	FUNCTION_3
0x4000060	     0xf8407020000	                            je 0x400026d	        33	mergesort.c	FUNCTION_3	IF_1
0x4000066	          0x4989f7	                            mov r15, rsi	        33	mergesort.c	FUNCTION_3	IF_1
0x4000069	    0x48c744242001	               mov qword [rsp + 0x20], 1	        33	mergesort.c	FUNCTION_3	IF_1
0x4000072	      0x488b442420	            mov rax, qword [rsp + 0x20] 	        12	mergesort.c	FUNCTION_1	WHILE_1
0x4000077	      0x4c8b642428	            mov r12, qword [rsp + 0x28] 	        12	mergesort.c	FUNCTION_1	WHILE_1
0x400007c	        0x488d48ff	                      lea rcx, [rax - 1]	        12	mergesort.c	FUNCTION_1	WHILE_1
0x4000080	          0x4885c0	                           test rax, rax	        12	mergesort.c	FUNCTION_1	WHILE_1
0x4000083	      0x48894c2410	             mov qword [rsp + 0x10], rcx	        12	mergesort.c	FUNCTION_1	WHILE_1
0x4000088	            0x742c	                            je 0x40000b6	        12	mergesort.c	FUNCTION_1	WHILE_1
0x400008a	            0x31db	                            xor ebx, ebx	        12	mergesort.c	FUNCTION_1	WHILE_1
0x400008c	            0xeb0f	                           jmp 0x400009d	        12	mergesort.c	FUNCTION_1	WHILE_1
0x400008e	            0x6690	                                     nop	        12	mergesort.c	FUNCTION_1	WHILE_1
0x4000090	        0x4883c301	                              add rbx, 1	        12	mergesort.c	FUNCTION_1	WHILE_1
0x4000094	          0x4885c0	                           test rax, rax	        12	mergesort.c	FUNCTION_1	WHILE_1
0x4000097	     0xf848a010000	                            je 0x4000227	        12	mergesort.c	FUNCTION_1	WHILE_1
0x400009d	          0x4c89e7	                            mov rdi, r12	        13	mergesort.c	FUNCTION_1	CALL_1
0x40000a0	          0x41ffd7	                                call r15	        13	mergesort.c	FUNCTION_1	CALL_1
0x40000a3	      0x483b5c2410	            cmp rbx, qword [rsp + 0x10] 	        12	mergesort.c	FUNCTION_1	WHILE_1
0x40000a8	          0x4989c4	                            mov r12, rax	        13	mergesort.c	FUNCTION_1	CALL_1
0x40000ab	            0x75e3	                           jne 0x4000090	        12	mergesort.c	FUNCTION_1	WHILE_1
0x40000ad	          0x4885c0	                           test rax, rax	        41	mergesort.c	FUNCTION_3	FOR_1	IF_2
0x40000b0	     0xf8471010000	                            je 0x4000227	        41	mergesort.c	FUNCTION_3	FOR_1	IF_2
0x40000b6	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	        45	mergesort.c	FUNCTION_3	FOR_1	IF_3	CALL_2
0x40000bb	          0x4c89e6	                            mov rsi, r12	        45	mergesort.c	FUNCTION_3	FOR_1	IF_3	CALL_2
0x40000be	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        45	mergesort.c	FUNCTION_3	FOR_1	IF_3	CALL_2
0x40000c3	          0x4c89f7	                            mov rdi, r14	        45	mergesort.c	FUNCTION_3	FOR_1	IF_3	CALL_2
0x40000c6	            0xffd0	                                call rax	        45	mergesort.c	FUNCTION_3	FOR_1	IF_3	CALL_2
0x40000c8	            0x85c0	                           test eax, eax	        45	mergesort.c	FUNCTION_3	FOR_1	IF_3	CALL_2
0x40000ca	     0xf8e7a010000	                           jle 0x400024a	        45	mergesort.c	FUNCTION_3	FOR_1	IF_3	CALL_2
0x40000d0	          0x4c89e7	                            mov rdi, r12	        21	mergesort.c	FUNCTION_2	CALL_1
0x40000d3	      0xbb00000000	                              mov ebx, 0	        12	mergesort.c	FUNCTION_1	WHILE_1
0x40000d8	          0x41ffd7	                                call r15	        21	mergesort.c	FUNCTION_2	CALL_1
0x40000db	          0x4885c0	                           test rax, rax	        12	mergesort.c	FUNCTION_1	WHILE_1
0x40000de	    0x480f455c2410	          cmovne rbx, qword [rsp + 0x10]	        12	mergesort.c	FUNCTION_1	WHILE_1
0x40000e4	      0x4c8b6c2420	            mov r13, qword [rsp + 0x20] 	        12	mergesort.c	FUNCTION_1	WHILE_1
0x40000e9	          0x4889c5	                            mov rbp, rax	        21	mergesort.c	FUNCTION_2	CALL_1
0x40000ec	        0x4c893424	                    mov qword [rsp], r14	        12	mergesort.c	FUNCTION_1	WHILE_1
0x40000f0	      0x4c89642428	             mov qword [rsp + 0x28], r12	        12	mergesort.c	FUNCTION_1	WHILE_1
0x40000f5	      0x4c8b642428	            mov r12, qword [rsp + 0x28] 	        67	mergesort.c	FUNCTION_3	FOR_1	WHILE_1
0x40000fa	            0xeb36	                           jmp 0x4000132	        67	mergesort.c	FUNCTION_3	FOR_1	WHILE_1
0x40000fc	         0xf1f4000	                         nop dword [rax]	        67	mergesort.c	FUNCTION_3	FOR_1	WHILE_1
0x4000100	          0x4885db	                           test rbx, rbx	        51	mergesort.c	FUNCTION_3	FOR_1	WHILE_1	WHILE_2
0x4000103	     0xf84af000000	                            je 0x40001b8	        51	mergesort.c	FUNCTION_3	FOR_1	WHILE_1	WHILE_2
0x4000109	          0x4889ef	                            mov rdi, rbp	        21	mergesort.c	FUNCTION_2	CALL_1
0x400010c	          0x41ffd7	                                call r15	        21	mergesort.c	FUNCTION_2	CALL_1
0x400010f	          0x4885c0	                           test rax, rax	        22	mergesort.c	FUNCTION_2
0x4000112	     0xf84e8000000	                            je 0x4000200	        22	mergesort.c	FUNCTION_2
0x4000118	          0x4989ee	                            mov r14, rbp	        22	mergesort.c	FUNCTION_2
0x400011b	        0x4883eb01	                              sub rbx, 1	        22	mergesort.c	FUNCTION_2
0x400011f	          0x4889c5	                            mov rbp, rax	        22	mergesort.c	FUNCTION_2
0x4000122	          0x4c89e7	                            mov rdi, r12	        62	mergesort.c	FUNCTION_3	FOR_1	WHILE_1	WHILE_2	CALL_10
0x4000125	          0x4d89f4	                            mov r12, r14	        62	mergesort.c	FUNCTION_3	FOR_1	WHILE_1	WHILE_2	CALL_10
0x4000128	          0x4c89f6	                            mov rsi, r14	        62	mergesort.c	FUNCTION_3	FOR_1	WHILE_1	WHILE_2	CALL_10
0x400012b	      0x488b442408	                mov rax, qword [rsp + 8]	        62	mergesort.c	FUNCTION_3	FOR_1	WHILE_1	WHILE_2	CALL_10
0x4000130	            0xffd0	                                call rax	        62	mergesort.c	FUNCTION_3	FOR_1	WHILE_1	WHILE_2	CALL_10
0x4000132	          0x4d85ed	                           test r13, r13	        51	mergesort.c	FUNCTION_3	FOR_1	WHILE_1	WHILE_2
0x4000135	            0x74c9	                            je 0x4000100	        51	mergesort.c	FUNCTION_3	FOR_1	WHILE_1	WHILE_2
0x4000137	          0x4885db	                           test rbx, rbx	        56	mergesort.c	FUNCTION_3	FOR_1	WHILE_1	WHILE_2	ELSE_2	IF_5
0x400013a	            0x751c	                           jne 0x4000158	        56	mergesort.c	FUNCTION_3	FOR_1	WHILE_1	WHILE_2	ELSE_2	IF_5
0x400013c	        0x4c8b3424	                    mov r14, qword [rsp]	        21	mergesort.c	FUNCTION_2	CALL_1
0x4000140	          0x4c89f7	                            mov rdi, r14	        21	mergesort.c	FUNCTION_2	CALL_1
0x4000143	          0x41ffd7	                                call r15	        21	mergesort.c	FUNCTION_2	CALL_1
0x4000146	          0x4885c0	                           test rax, rax	        22	mergesort.c	FUNCTION_2
0x4000149	            0x7455	                            je 0x40001a0	        22	mergesort.c	FUNCTION_2
0x400014b	        0x4983ed01	                              sub r13, 1	        22	mergesort.c	FUNCTION_2
0x400014f	        0x48890424	                    mov qword [rsp], rax	        22	mergesort.c	FUNCTION_2
0x4000153	            0xebcd	                           jmp 0x4000122	        22	mergesort.c	FUNCTION_2
0x4000155	           0xf1f00	                         nop dword [rax]	        22	mergesort.c	FUNCTION_2
0x4000158	          0x4889ee	                            mov rsi, rbp	        58	mergesort.c	FUNCTION_3	FOR_1	WHILE_1	WHILE_2	ELSE_3	IF_6	CALL_7
0x400015b	        0x488b3c24	                    mov rdi, qword [rsp]	        58	mergesort.c	FUNCTION_3	FOR_1	WHILE_1	WHILE_2	ELSE_3	IF_6	CALL_7
0x400015f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        58	mergesort.c	FUNCTION_3	FOR_1	WHILE_1	WHILE_2	ELSE_3	IF_6	CALL_7
0x4000164	            0xffd0	                                call rax	        58	mergesort.c	FUNCTION_3	FOR_1	WHILE_1	WHILE_2	ELSE_3	IF_6	CALL_7
0x4000166	            0x85c0	                           test eax, eax	        58	mergesort.c	FUNCTION_3	FOR_1	WHILE_1	WHILE_2	ELSE_3	IF_6	CALL_7
0x4000168	            0x7e16	                           jle 0x4000180	        58	mergesort.c	FUNCTION_3	FOR_1	WHILE_1	WHILE_2	ELSE_3	IF_6	CALL_7
0x400016a	          0x4889ef	                            mov rdi, rbp	        21	mergesort.c	FUNCTION_2	CALL_1
0x400016d	          0x41ffd7	                                call r15	        21	mergesort.c	FUNCTION_2	CALL_1
0x4000170	          0x4885c0	                           test rax, rax	        22	mergesort.c	FUNCTION_2
0x4000173	            0x75a3	                           jne 0x4000118	        22	mergesort.c	FUNCTION_2
0x4000175	          0x4989ee	                            mov r14, rbp	        22	mergesort.c	FUNCTION_2
0x4000178	            0x31db	                            xor ebx, ebx	        22	mergesort.c	FUNCTION_2
0x400017a	            0x31ed	                            xor ebp, ebp	        22	mergesort.c	FUNCTION_2
0x400017c	            0xeba4	                           jmp 0x4000122	        22	mergesort.c	FUNCTION_2
0x400017e	            0x6690	                                     nop	        22	mergesort.c	FUNCTION_2
0x4000180	        0x4c8b3424	                    mov r14, qword [rsp]	        21	mergesort.c	FUNCTION_2	CALL_1
0x4000184	          0x4c89f7	                            mov rdi, r14	        21	mergesort.c	FUNCTION_2	CALL_1
0x4000187	          0x41ffd7	                                call r15	        21	mergesort.c	FUNCTION_2	CALL_1
0x400018a	          0x4885c0	                           test rax, rax	        22	mergesort.c	FUNCTION_2
0x400018d	            0x75bc	                           jne 0x400014b	        22	mergesort.c	FUNCTION_2
0x400018f	        0x4c8b3424	                    mov r14, qword [rsp]	        61	mergesort.c	FUNCTION_3	FOR_1	WHILE_1	WHILE_2	CALL_9
0x4000193	          0x4531ed	                          xor r13d, r13d	        22	mergesort.c	FUNCTION_2
0x4000196	    0x48c704240000	                      mov qword [rsp], 0	        22	mergesort.c	FUNCTION_2
0x400019e	            0xeb82	                           jmp 0x4000122	        22	mergesort.c	FUNCTION_2
0x40001a0	        0x4c8b3424	                    mov r14, qword [rsp]	        57	mergesort.c	FUNCTION_3	FOR_1	WHILE_1	WHILE_2	ELSE_2	IF_5
0x40001a4	          0x4531ed	                          xor r13d, r13d	        22	mergesort.c	FUNCTION_2
0x40001a7	    0x48c704240000	                      mov qword [rsp], 0	        22	mergesort.c	FUNCTION_2
0x40001af	      0xe96effffff	                           jmp 0x4000122	        22	mergesort.c	FUNCTION_2
0x40001b4	         0xf1f4000	                         nop dword [rax]	        22	mergesort.c	FUNCTION_2
0x40001b8	    0x48837c242000	               cmp qword [rsp + 0x20], 0	        12	mergesort.c	FUNCTION_1	WHILE_1
0x40001be	            0x747b	                            je 0x400023b	        12	mergesort.c	FUNCTION_1	WHILE_1
0x40001c0	          0x4885ed	                           test rbp, rbp	        12	mergesort.c	FUNCTION_1	WHILE_1
0x40001c3	            0x744c	                            je 0x4000211	        12	mergesort.c	FUNCTION_1	WHILE_1
0x40001c5	          0x4889e8	                            mov rax, rbp	        12	mergesort.c	FUNCTION_1	WHILE_1
0x40001c8	            0xeb0f	                           jmp 0x40001d9	        12	mergesort.c	FUNCTION_1	WHILE_1
0x40001ca	    0x660f1f440000	                    nop word [rax + rax]	        12	mergesort.c	FUNCTION_1	WHILE_1
0x40001d0	        0x4983c501	                              add r13, 1	        12	mergesort.c	FUNCTION_1	WHILE_1
0x40001d4	          0x4885c0	                           test rax, rax	        12	mergesort.c	FUNCTION_1	WHILE_1
0x40001d7	            0x7416	                            je 0x40001ef	        12	mergesort.c	FUNCTION_1	WHILE_1
0x40001d9	          0x4889c7	                            mov rdi, rax	        13	mergesort.c	FUNCTION_1	CALL_1
0x40001dc	          0x41ffd7	                                call r15	        13	mergesort.c	FUNCTION_1	CALL_1
0x40001df	      0x4c3b6c2410	            cmp r13, qword [rsp + 0x10] 	        12	mergesort.c	FUNCTION_1	WHILE_1
0x40001e4	            0x75ea	                           jne 0x40001d0	        12	mergesort.c	FUNCTION_1	WHILE_1
0x40001e6	          0x4885c0	                           test rax, rax	        67	mergesort.c	FUNCTION_3	FOR_1	WHILE_1
0x40001e9	    0x480f455c2420	          cmovne rbx, qword [rsp + 0x20]	        67	mergesort.c	FUNCTION_3	FOR_1	WHILE_1
0x40001ef	        0x48892c24	                    mov qword [rsp], rbp	        67	mergesort.c	FUNCTION_3	FOR_1	WHILE_1
0x40001f3	      0x4c8b6c2420	            mov r13, qword [rsp + 0x20] 	        67	mergesort.c	FUNCTION_3	FOR_1	WHILE_1
0x40001f8	          0x4889c5	                            mov rbp, rax	        67	mergesort.c	FUNCTION_3	FOR_1	WHILE_1
0x40001fb	      0xe932ffffff	                           jmp 0x4000132	        67	mergesort.c	FUNCTION_3	FOR_1	WHILE_1
0x4000200	          0x4989ee	                            mov r14, rbp	        22	mergesort.c	FUNCTION_2
0x4000203	            0x31db	                            xor ebx, ebx	        22	mergesort.c	FUNCTION_2
0x4000205	            0x31ed	                            xor ebp, ebp	        22	mergesort.c	FUNCTION_2
0x4000207	      0xe916ffffff	                           jmp 0x4000122	        22	mergesort.c	FUNCTION_2
0x400020c	      0x4c8b642428	            mov r12, qword [rsp + 0x28] 	        22	mergesort.c	FUNCTION_2
0x4000211	            0x31f6	                            xor esi, esi	        70	mergesort.c	FUNCTION_3	FOR_1	CALL_12
0x4000213	          0x4c89e7	                            mov rdi, r12	        70	mergesort.c	FUNCTION_3	FOR_1	CALL_12
0x4000216	      0x488b442408	                mov rax, qword [rsp + 8]	        70	mergesort.c	FUNCTION_3	FOR_1	CALL_12
0x400021b	            0xffd0	                                call rax	        70	mergesort.c	FUNCTION_3	FOR_1	CALL_12
0x400021d	      0x48d1642420	               shl qword [rsp + 0x20], 1	        35	mergesort.c	FUNCTION_3	FOR_1
0x4000222	      0xe94bfeffff	                           jmp 0x4000072	        71	mergesort.c	FUNCTION_3	FOR_1
0x4000227	      0x488b442428	            mov rax, qword [rsp + 0x28] 	        41	mergesort.c	FUNCTION_3	FOR_1	IF_2
0x400022c	        0x4883c438	                           add rsp, 0x38	        73	mergesort.c	FUNCTION_3
0x4000230	              0x5b	                                 pop rbx	        73	mergesort.c	FUNCTION_3
0x4000231	              0x5d	                                 pop rbp	        73	mergesort.c	FUNCTION_3
0x4000232	            0x415c	                                 pop r12	        73	mergesort.c	FUNCTION_3
0x4000234	            0x415d	                                 pop r13	        73	mergesort.c	FUNCTION_3
0x4000236	            0x415e	                                 pop r14	        73	mergesort.c	FUNCTION_3
0x4000238	            0x415f	                                 pop r15	        73	mergesort.c	FUNCTION_3
0x400023a	              0xc3	                                     ret	        73	mergesort.c	FUNCTION_3
0x400023b	          0x4885ed	                           test rbp, rbp	        67	mergesort.c	FUNCTION_3	FOR_1	WHILE_1
0x400023e	            0x74d1	                            je 0x4000211	        67	mergesort.c	FUNCTION_3	FOR_1	WHILE_1
0x4000240	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	        67	mergesort.c	FUNCTION_3	FOR_1	WHILE_1
0x4000245	          0x4889e8	                            mov rax, rbp	        67	mergesort.c	FUNCTION_3	FOR_1	WHILE_1
0x4000248	            0xeba5	                           jmp 0x40001ef	        67	mergesort.c	FUNCTION_3	FOR_1	WHILE_1
0x400024a	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	        21	mergesort.c	FUNCTION_2	CALL_1
0x400024f	          0x41ffd7	                                call r15	        21	mergesort.c	FUNCTION_2	CALL_1
0x4000252	          0x4885c0	                           test rax, rax	        22	mergesort.c	FUNCTION_2
0x4000255	        0x48890424	                    mov qword [rsp], rax	        21	mergesort.c	FUNCTION_2	CALL_1
0x4000259	            0x74b1	                            je 0x400020c	        22	mergesort.c	FUNCTION_2
0x400025b	          0x4c89e5	                            mov rbp, r12	        22	mergesort.c	FUNCTION_2
0x400025e	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	        12	mergesort.c	FUNCTION_1	WHILE_1
0x4000263	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	        22	mergesort.c	FUNCTION_2
0x4000268	      0xe988feffff	                           jmp 0x40000f5	        22	mergesort.c	FUNCTION_2
0x400026d	        0x4883c438	                           add rsp, 0x38	        73	mergesort.c	FUNCTION_3
0x4000271	            0x31c0	                            xor eax, eax	        34	mergesort.c	FUNCTION_3	IF_1
0x4000273	              0x5b	                                 pop rbx	        73	mergesort.c	FUNCTION_3
0x4000274	              0x5d	                                 pop rbp	        73	mergesort.c	FUNCTION_3
0x4000275	            0x415c	                                 pop r12	        73	mergesort.c	FUNCTION_3
0x4000277	            0x415d	                                 pop r13	        73	mergesort.c	FUNCTION_3
0x4000279	            0x415e	                                 pop r14	        73	mergesort.c	FUNCTION_3
0x400027b	            0x415f	                                 pop r15	        73	mergesort.c	FUNCTION_3
0x400027d	              0xc3	                                     ret	        73	mergesort.c	FUNCTION_3
