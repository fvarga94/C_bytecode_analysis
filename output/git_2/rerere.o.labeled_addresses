outf	SWITCH,0:ELSE,0:FOR,1:DO,0:functions,0:WHILE,0:CALL,1:IF,1	33
0x4000040	            0x85d2	                           test edx, edx	        20	rerere.c	FUNCTION_1	FOR_1
0x4000042	            0x7e55	                           jle 0x4000099	        20	rerere.c	FUNCTION_1	FOR_1
0x4000044	          0x8d42ff	                      lea eax, [rdx - 1]	        20	rerere.c	FUNCTION_1	FOR_1
0x4000047	              0x55	                                push rbp	        18	rerere.c	FUNCTION_1
0x4000048	              0x53	                                push rbx	        18	rerere.c	FUNCTION_1
0x4000049	        0x488d5e08	                      lea rbx, [rsi + 8]	        18	rerere.c	FUNCTION_1
0x400004d	        0x48c1e004	                              shl rax, 4	        18	rerere.c	FUNCTION_1
0x4000051	        0x4883ec08	                              sub rsp, 8	        18	rerere.c	FUNCTION_1
0x4000055	      0x488d6c0618	            lea rbp, [rsi + rax + 0x18] 	        18	rerere.c	FUNCTION_1
0x400005a	            0xeb0d	                           jmp 0x4000069	        18	rerere.c	FUNCTION_1
0x400005c	         0xf1f4000	                         nop dword [rax]	        18	rerere.c	FUNCTION_1
0x4000060	        0x4883c310	                           add rbx, 0x10	        18	rerere.c	FUNCTION_1
0x4000064	          0x4839eb	                            cmp rbx, rbp	        20	rerere.c	FUNCTION_1	FOR_1
0x4000067	            0x7427	                            je 0x4000090	        20	rerere.c	FUNCTION_1	FOR_1
0x4000069	        0x488b73f8	                mov rsi, qword [rbx - 8]	        21	rerere.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400006d	          0x488b13	                    mov rdx, qword [rbx]	        21	rerere.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000070	      0xbf01000000	                              mov edi, 1	        21	rerere.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000075	      0xe800000000	                          call 0x400007a	        21	rerere.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400007a	          0x4885c0	                           test rax, rax	        21	rerere.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400007d	            0x79e1	                           jns 0x4000060	        21	rerere.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400007f	        0x4883c408	                              add rsp, 8	        24	rerere.c	FUNCTION_1
0x4000083	      0xb8ffffffff	                     mov eax, 0xffffffff	        22	rerere.c	FUNCTION_1	FOR_1	IF_1
0x4000088	              0x5b	                                 pop rbx	        24	rerere.c	FUNCTION_1
0x4000089	              0x5d	                                 pop rbp	        24	rerere.c	FUNCTION_1
0x400008a	              0xc3	                                     ret	        24	rerere.c	FUNCTION_1
0x400008b	       0xf1f440000	                   nop dword [rax + rax]	        24	rerere.c	FUNCTION_1
0x4000090	        0x4883c408	                              add rsp, 8	        24	rerere.c	FUNCTION_1
0x4000094	            0x31c0	                            xor eax, eax	        23	rerere.c	FUNCTION_1
0x4000096	              0x5b	                                 pop rbx	        24	rerere.c	FUNCTION_1
0x4000097	              0x5d	                                 pop rbp	        24	rerere.c	FUNCTION_1
0x4000098	              0xc3	                                     ret	        24	rerere.c	FUNCTION_1
0x4000099	            0x31c0	                            xor eax, eax	        23	rerere.c	FUNCTION_1
0x400009b	              0xc3	                                     ret	        24	rerere.c	FUNCTION_1
cmd_rerere	SWITCH,0:ELSE,6:FOR,3:DO,0:functions,0:WHILE,0:CALL,28:IF,14	244
0x40000a0	            0x4157	                                push r15	        53	rerere.c	FUNCTION_3
0x40000a2	            0x4156	                                push r14	        53	rerere.c	FUNCTION_3
0x40000a4	          0x4189fa	                           mov r10d, edi	        53	rerere.c	FUNCTION_3
0x40000a7	            0x4155	                                push r13	        53	rerere.c	FUNCTION_3
0x40000a9	            0x4154	                                push r12	        53	rerere.c	FUNCTION_3
0x40000ab	      0xb910000000	                           mov ecx, 0x10	        57	rerere.c	FUNCTION_3
0x40000b0	              0x55	                                push rbp	        53	rerere.c	FUNCTION_3
0x40000b1	              0x53	                                push rbx	        53	rerere.c	FUNCTION_3
0x40000b2	          0x4531c9	                            xor r9d, r9d	        63	rerere.c	FUNCTION_3	CALL_4
0x40000b5	    0x41b800000000	                              mov r8d, 0	        63	rerere.c	FUNCTION_3	CALL_4
0x40000bb	          0x4889d5	                            mov rbp, rdx	        53	rerere.c	FUNCTION_3
0x40000be	          0x4889f3	                            mov rbx, rsi	        53	rerere.c	FUNCTION_3
0x40000c1	    0x4881ec480100	                          sub rsp, 0x148	        53	rerere.c	FUNCTION_3
0x40000c8	    0x64488b042528	                mov rax, qword fs:[0x28]	        53	rerere.c	FUNCTION_3
0x40000d1	    0x488984243801	            mov qword [rsp + 0x138], rax	        53	rerere.c	FUNCTION_3
0x40000d9	            0x31c0	                            xor eax, eax	        53	rerere.c	FUNCTION_3
0x40000db	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	        57	rerere.c	FUNCTION_3
0x40000e3	      0x804c247001	                 or byte [rsp + 0x70], 1	        54	rerere.c	FUNCTION_3
0x40000e8	    0x48c744246000	               mov qword [rsp + 0x60], 0	        54	rerere.c	FUNCTION_3
0x40000f1	    0xc74424680000	               mov dword [rsp + 0x68], 0	        54	rerere.c	FUNCTION_3
0x40000f9	    0xc744246c0000	               mov dword [rsp + 0x6c], 0	        54	rerere.c	FUNCTION_3
0x4000101	          0xf348ab	              rep stosq qword [rdi], rax	        57	rerere.c	FUNCTION_3
0x4000104	      0x488d44240c	                    lea rax, [rsp + 0xc]	        57	rerere.c	FUNCTION_3
0x4000109	    0x488d8c24b000	                   lea rcx, [rsp + 0xb0]	        63	rerere.c	FUNCTION_3	CALL_4
0x4000111	          0x4489d7	                           mov edi, r10d	        63	rerere.c	FUNCTION_3	CALL_4
0x4000114	    0x48c744247800	               mov qword [rsp + 0x78], 0	        54	rerere.c	FUNCTION_3
0x400011d	    0xc744240cffff	      mov dword [rsp + 0xc], 0xffffffff 	        55	rerere.c	FUNCTION_3
0x4000125	    0xc78424b00000	               mov dword [rsp + 0xb0], 7	        57	rerere.c	FUNCTION_3
0x4000130	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	        57	rerere.c	FUNCTION_3
0x400013c	    0x48898424c000	             mov qword [rsp + 0xc0], rax	        57	rerere.c	FUNCTION_3
0x4000144	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	        57	rerere.c	FUNCTION_3
0x4000150	    0xc78424d80000	               mov dword [rsp + 0xd8], 2	        57	rerere.c	FUNCTION_3
0x400015b	    0x48c78424e800	               mov qword [rsp + 0xe8], 1	        57	rerere.c	FUNCTION_3
0x4000167	      0xe800000000	                          call 0x400016c	        63	rerere.c	FUNCTION_3	CALL_4
0x400016c	            0x31f6	                            xor esi, esi	        65	rerere.c	FUNCTION_3	CALL_5
0x400016e	      0xbf00000000	                              mov edi, 0	        65	rerere.c	FUNCTION_3	CALL_5
0x4000173	          0x4189c4	                           mov r12d, eax	        63	rerere.c	FUNCTION_3	CALL_4
0x4000176	      0xe800000000	                          call 0x400017b	        65	rerere.c	FUNCTION_3	CALL_5
0x400017b	      0x837c240c01	                cmp dword [rsp + 0xc], 1	        67	rerere.c	FUNCTION_3	IF_1
0x4000180	      0xba01000000	                              mov edx, 1	        67	rerere.c	FUNCTION_3	IF_1
0x4000185	            0x7405	                            je 0x400018c	        67	rerere.c	FUNCTION_3	IF_1
0x4000187	            0x19d2	                            sbb edx, edx	        70	rerere.c	FUNCTION_3	IF_2
0x4000189	          0x83e202	                              and edx, 2	        70	rerere.c	FUNCTION_3	IF_2
0x400018c	          0x4585e4	                         test r12d, r12d	        72	rerere.c	FUNCTION_3	IF_3
0x400018f	     0xf8ea3020000	                           jle 0x4000438	        72	rerere.c	FUNCTION_3	IF_3
0x4000195	          0x4c8b03	                     mov r8, qword [rbx]	        75	rerere.c	FUNCTION_3	IF_4	CALL_7
0x4000198	      0xbf00000000	                              mov edi, 0	        75	rerere.c	FUNCTION_3	IF_4	CALL_7
0x400019d	      0xb907000000	                              mov ecx, 7	        75	rerere.c	FUNCTION_3	IF_4	CALL_7
0x40001a2	          0x4c89c6	                             mov rsi, r8	        75	rerere.c	FUNCTION_3	IF_4	CALL_7
0x40001a5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        75	rerere.c	FUNCTION_3	IF_4	CALL_7
0x40001a7	            0x755f	                           jne 0x4000208	        75	rerere.c	FUNCTION_3	IF_4	CALL_7
0x40001a9	        0x4183fc01	                             cmp r12d, 1	        77	rerere.c	FUNCTION_3	IF_4	IF_5
0x40001ad	     0xf8495020000	                            je 0x4000448	        77	rerere.c	FUNCTION_3	IF_4	IF_5
0x40001b3	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	        79	rerere.c	FUNCTION_3	IF_4	CALL_9
0x40001bb	        0x4c8d4308	                       lea r8, [rbx + 8]	        79	rerere.c	FUNCTION_3	IF_4	CALL_9
0x40001bf	          0x4889e9	                            mov rcx, rbp	        79	rerere.c	FUNCTION_3	IF_4	CALL_9
0x40001c2	      0xba01000000	                              mov edx, 1	        79	rerere.c	FUNCTION_3	IF_4	CALL_9
0x40001c7	            0x31f6	                            xor esi, esi	        79	rerere.c	FUNCTION_3	IF_4	CALL_9
0x40001c9	      0xe800000000	                          call 0x40001ce	        79	rerere.c	FUNCTION_3	IF_4	CALL_9
0x40001ce	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	        81	rerere.c	FUNCTION_3	IF_4	CALL_10
0x40001d6	      0xe800000000	                          call 0x40001db	        81	rerere.c	FUNCTION_3	IF_4	CALL_10
0x40001db	    0x488b94243801	           mov rdx, qword [rsp + 0x138] 	       117	rerere.c	FUNCTION_3
0x40001e3	    0x644833142528	                xor rdx, qword fs:[0x28]	       117	rerere.c	FUNCTION_3
0x40001ec	     0xf85c6020000	                           jne 0x40004b8	       117	rerere.c	FUNCTION_3
0x40001f2	    0x4881c4480100	                          add rsp, 0x148	       117	rerere.c	FUNCTION_3
0x40001f9	              0x5b	                                 pop rbx	       117	rerere.c	FUNCTION_3
0x40001fa	              0x5d	                                 pop rbp	       117	rerere.c	FUNCTION_3
0x40001fb	            0x415c	                                 pop r12	       117	rerere.c	FUNCTION_3
0x40001fd	            0x415d	                                 pop r13	       117	rerere.c	FUNCTION_3
0x40001ff	            0x415e	                                 pop r14	       117	rerere.c	FUNCTION_3
0x4000201	            0x415f	                                 pop r15	       117	rerere.c	FUNCTION_3
0x4000203	              0xc3	                                     ret	       117	rerere.c	FUNCTION_3
0x4000204	         0xf1f4000	                         nop dword [rax]	       117	rerere.c	FUNCTION_3
0x4000208	      0xbf00000000	                              mov edi, 0	        84	rerere.c	FUNCTION_3	IF_6	CALL_11
0x400020d	      0xb906000000	                              mov ecx, 6	        84	rerere.c	FUNCTION_3	IF_6	CALL_11
0x4000212	          0x4c89c6	                             mov rsi, r8	        84	rerere.c	FUNCTION_3	IF_6	CALL_11
0x4000215	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        84	rerere.c	FUNCTION_3	IF_6	CALL_11
0x4000217	     0xf8403020000	                            je 0x4000420	        84	rerere.c	FUNCTION_3	IF_6	CALL_11
0x400021d	        0x41803867	                     cmp byte [r8], 0x67	        86	rerere.c	FUNCTION_3	ELSE_1	IF_7	CALL_13
0x4000221	            0x752d	                           jne 0x4000250	        86	rerere.c	FUNCTION_3	ELSE_1	IF_7	CALL_13
0x4000223	      0x4180780163	                 cmp byte [r8 + 1], 0x63	        86	rerere.c	FUNCTION_3	ELSE_1	IF_7	CALL_13
0x4000228	            0x7526	                           jne 0x4000250	        86	rerere.c	FUNCTION_3	ELSE_1	IF_7	CALL_13
0x400022a	      0x4180780200	                    cmp byte [r8 + 2], 0	        86	rerere.c	FUNCTION_3	ELSE_1	IF_7	CALL_13
0x400022f	            0x751f	                           jne 0x4000250	        86	rerere.c	FUNCTION_3	ELSE_1	IF_7	CALL_13
0x4000231	      0x4c8d7c2460	                   lea r15, [rsp + 0x60]	        87	rerere.c	FUNCTION_3	ELSE_1	IF_7
0x4000236	          0x4c89ff	                            mov rdi, r15	        87	rerere.c	FUNCTION_3	ELSE_1	IF_7
0x4000239	      0xe800000000	                          call 0x400023e	        87	rerere.c	FUNCTION_3	ELSE_1	IF_7
0x400023e	      0xbe01000000	                              mov esi, 1	       115	rerere.c	FUNCTION_3	CALL_28
0x4000243	          0x4c89ff	                            mov rdi, r15	       115	rerere.c	FUNCTION_3	CALL_28
0x4000246	      0xe800000000	                          call 0x400024b	       115	rerere.c	FUNCTION_3	CALL_28
0x400024b	            0x31c0	                            xor eax, eax	       116	rerere.c	FUNCTION_3
0x400024d	            0xeb8c	                           jmp 0x40001db	       116	rerere.c	FUNCTION_3
0x400024f	              0x90	                                     nop	       116	rerere.c	FUNCTION_3
0x4000250	      0xbf00000000	                              mov edi, 0	        88	rerere.c	FUNCTION_3	ELSE_2	IF_8	CALL_15
0x4000255	      0xb907000000	                              mov ecx, 7	        88	rerere.c	FUNCTION_3	ELSE_2	IF_8	CALL_15
0x400025a	          0x4c89c6	                             mov rsi, r8	        88	rerere.c	FUNCTION_3	ELSE_2	IF_8	CALL_15
0x400025d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        88	rerere.c	FUNCTION_3	ELSE_2	IF_8	CALL_15
0x400025f	     0xf8463010000	                            je 0x40003c8	        88	rerere.c	FUNCTION_3	ELSE_2	IF_8	CALL_15
0x4000265	      0xbf00000000	                              mov edi, 0	        93	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_18
0x400026a	      0xb90a000000	                            mov ecx, 0xa	        93	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_18
0x400026f	          0x4c89c6	                             mov rsi, r8	        93	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_18
0x4000272	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        93	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_18
0x4000274	     0xf84e6010000	                            je 0x4000460	        93	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_18
0x400027a	      0xbf00000000	                              mov edi, 0	       103	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	CALL_21
0x400027f	      0xb905000000	                              mov ecx, 5	       103	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	CALL_21
0x4000284	          0x4c89c6	                             mov rsi, r8	       103	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	CALL_21
0x4000287	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       103	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	CALL_21
0x4000289	     0xf852e020000	                           jne 0x40004bd	       103	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	CALL_21
0x400028f	      0x4c8d7c2460	                   lea r15, [rsp + 0x60]	       104	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	IF_13	CALL_22
0x4000294	          0x83ca04	                               or edx, 4	       104	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	IF_13	CALL_22
0x4000297	            0x89d6	                            mov esi, edx	       104	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	IF_13	CALL_22
0x4000299	          0x4c89ff	                            mov rdi, r15	       104	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	IF_13	CALL_22
0x400029c	      0xe800000000	                          call 0x40002a1	       104	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	IF_13	CALL_22
0x40002a1	            0x85c0	                           test eax, eax	       104	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	IF_13	CALL_22
0x40002a3	            0x78a6	                            js 0x400024b	       104	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	IF_13	CALL_22
0x40002a5	        0x8b442468	            mov eax, dword [rsp + 0x68] 	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x40002a9	            0x85c0	                           test eax, eax	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x40002ab	            0x7491	                            je 0x400023e	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x40002ad	          0x4531e4	                          xor r12d, r12d	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x40002b0	            0x31ed	                            xor ebp, ebp	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x40002b2	    0x4c8dac248000	                   lea r13, [rsp + 0x80]	        90	string3.h	FUNCTION_7	CALL_6
0x40002ba	      0xe9bb000000	                           jmp 0x400037a	        90	string3.h	FUNCTION_7	CALL_6
0x40002bf	              0x90	                                     nop	        90	string3.h	FUNCTION_7	CALL_6
0x40002c0	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x40002c5	          0x4889de	                            mov rsi, rbx	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x40002c8	      0xe800000000	                          call 0x40002cd	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x40002cd	            0x85c0	                           test eax, eax	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x40002cf	     0xf85d6000000	                           jne 0x40003ab	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x40002d5	          0x4889d9	                            mov rcx, rbx	       104	stdio2.h	FUNCTION_21	CALL_2
0x40002d8	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	FUNCTION_21	CALL_2
0x40002db	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	FUNCTION_21	CALL_2
0x40002e0	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_21	CALL_2
0x40002e5	      0xe800000000	                          call 0x40002ea	       104	stdio2.h	FUNCTION_21	CALL_2
0x40002ea	    0x488b3d000000	            mov rdi, qword [0x040002f1] 	        39	rerere.c	FUNCTION_2	CALL_4
0x40002f1	      0xe800000000	                          call 0x40002f6	        39	rerere.c	FUNCTION_2	CALL_4
0x40002f6	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_7	CALL_6
0x40002f8	      0xb906000000	                              mov ecx, 6	        90	string3.h	FUNCTION_7	CALL_6
0x40002fd	          0x4c89ef	                            mov rdi, r13	        90	string3.h	FUNCTION_7	CALL_6
0x4000300	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_7	CALL_6
0x4000303	      0x4c8d442410	                    lea r8, [rsp + 0x10]	        45	rerere.c	FUNCTION_2	CALL_7
0x4000308	      0x488d542440	                   lea rdx, [rsp + 0x40]	        45	rerere.c	FUNCTION_2	CALL_7
0x400030d	      0x488d742430	                   lea rsi, [rsp + 0x30]	        45	rerere.c	FUNCTION_2	CALL_7
0x4000312	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        45	rerere.c	FUNCTION_2	CALL_7
0x4000317	          0x4c89e9	                            mov rcx, r13	        45	rerere.c	FUNCTION_2	CALL_7
0x400031a	    0x48c744244000	               mov qword [rsp + 0x40], 0	        90	string3.h	FUNCTION_7	CALL_6
0x4000323	    0x48c744244800	               mov qword [rsp + 0x48], 0	        90	string3.h	FUNCTION_7	CALL_6
0x400032c	    0x48c744245000	               mov qword [rsp + 0x50], 0	        90	string3.h	FUNCTION_7	CALL_6
0x4000335	    0x48c784248000	               mov qword [rsp + 0x80], 3	        43	rerere.c	FUNCTION_2
0x4000341	    0x48c744241800	               mov qword [rsp + 0x18], 0	        44	rerere.c	FUNCTION_2
0x400034a	      0xe800000000	                          call 0x400034f	        45	rerere.c	FUNCTION_2	CALL_7
0x400034f	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	        47	rerere.c	FUNCTION_2	CALL_8
0x4000354	            0x89c3	                            mov ebx, eax	        45	rerere.c	FUNCTION_2	CALL_7
0x4000356	      0xe800000000	                          call 0x400035b	        47	rerere.c	FUNCTION_2	CALL_8
0x400035b	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	        48	rerere.c	FUNCTION_2	CALL_9
0x4000360	      0xe800000000	                          call 0x4000365	        48	rerere.c	FUNCTION_2	CALL_9
0x4000365	            0x85db	                           test ebx, ebx	       109	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	IF_14	CALL_24
0x4000367	            0x7542	                           jne 0x40003ab	       109	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	IF_14	CALL_24
0x4000369	          0x83c501	                              add ebp, 1	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x400036c	        0x4983c410	                           add r12, 0x10	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x4000370	        0x396c2468	            cmp dword [rsp + 0x68], ebp 	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x4000374	     0xf86c4feffff	                           jbe 0x400023e	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x400037a	          0x4c89e0	                            mov rax, r12	       107	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x400037d	      0x4803442460	             add rax, qword [rsp + 0x60]	       107	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x4000382	      0xbe00000000	                              mov esi, 0	       109	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	IF_14	CALL_24
0x4000387	        0x4c8b7008	                mov r14, qword [rax + 8]	       108	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x400038b	          0x488b18	                    mov rbx, qword [rax]	       107	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x400038e	          0x4c89f7	                            mov rdi, r14	       109	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	IF_14	CALL_24
0x4000391	      0xe800000000	                          call 0x4000396	       109	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	IF_14	CALL_24
0x4000396	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x400039b	          0x4889c6	                            mov rsi, rax	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x400039e	      0xe800000000	                          call 0x40003a3	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x40003a3	            0x85c0	                           test eax, eax	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x40003a5	     0xf8415ffffff	                            je 0x40002c0	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x40003ab	            0x31f6	                            xor esi, esi	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_26
0x40003ad	          0x4c89f7	                            mov rdi, r14	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_26
0x40003b0	      0xe800000000	                          call 0x40003b5	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_26
0x40003b5	      0xbf00000000	                              mov edi, 0	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_26
0x40003ba	          0x4889c6	                            mov rsi, rax	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_26
0x40003bd	            0x31c0	                            xor eax, eax	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_26
0x40003bf	      0xe800000000	                          call 0x40003c4	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_26
0x40003c4	         0xf1f4000	                         nop dword [rax]	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_26
0x40003c8	      0x4c8d7c2460	                   lea r15, [rsp + 0x60]	        89	rerere.c	FUNCTION_3	ELSE_2	IF_8	IF_9	CALL_16
0x40003cd	          0x83ca04	                               or edx, 4	        89	rerere.c	FUNCTION_3	ELSE_2	IF_8	IF_9	CALL_16
0x40003d0	            0x89d6	                            mov esi, edx	        89	rerere.c	FUNCTION_3	ELSE_2	IF_8	IF_9	CALL_16
0x40003d2	          0x4c89ff	                            mov rdi, r15	        89	rerere.c	FUNCTION_3	ELSE_2	IF_8	IF_9	CALL_16
0x40003d5	      0xe800000000	                          call 0x40003da	        89	rerere.c	FUNCTION_3	ELSE_2	IF_8	IF_9	CALL_16
0x40003da	            0x85c0	                           test eax, eax	        89	rerere.c	FUNCTION_3	ELSE_2	IF_8	IF_9	CALL_16
0x40003dc	     0xf8869feffff	                            js 0x400024b	        89	rerere.c	FUNCTION_3	ELSE_2	IF_8	IF_9	CALL_16
0x40003e2	        0x8b4c2468	            mov ecx, dword [rsp + 0x68] 	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x40003e6	            0x85c9	                           test ecx, ecx	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x40003e8	     0xf8450feffff	                            je 0x400023e	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x40003ee	            0x31ed	                            xor ebp, ebp	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x40003f0	            0x31db	                            xor ebx, ebx	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x40003f2	    0x660f1f440000	                    nop word [rax + rax]	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x40003f8	      0x488b442460	            mov rax, qword [rsp + 0x60] 	        92	rerere.c	FUNCTION_3	ELSE_2	IF_8	CALL_17
0x40003fd	          0x83c301	                              add ebx, 1	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x4000400	        0x488b3c28	              mov rdi, qword [rax + rbp]	       104	stdio2.h	FUNCTION_21	CALL_2
0x4000404	        0x4883c510	                           add rbp, 0x10	       104	stdio2.h	FUNCTION_21	CALL_2
0x4000408	      0xe800000000	                          call 0x400040d	       104	stdio2.h	FUNCTION_21	CALL_2
0x400040d	        0x395c2468	            cmp dword [rsp + 0x68], ebx 	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x4000411	            0x77e5	                            ja 0x40003f8	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x4000413	      0xe926feffff	                           jmp 0x400023e	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x4000418	     0xf1f84000000	                   nop dword [rax + rax]	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x4000420	      0x4c8d7c2460	                   lea r15, [rsp + 0x60]	        85	rerere.c	FUNCTION_3	IF_6	CALL_12
0x4000425	          0x4c89ff	                            mov rdi, r15	        85	rerere.c	FUNCTION_3	IF_6	CALL_12
0x4000428	      0xe800000000	                          call 0x400042d	        85	rerere.c	FUNCTION_3	IF_6	CALL_12
0x400042d	      0xe90cfeffff	                           jmp 0x400023e	        85	rerere.c	FUNCTION_3	IF_6	CALL_12
0x4000432	    0x660f1f440000	                    nop word [rax + rax]	        85	rerere.c	FUNCTION_3	IF_6	CALL_12
0x4000438	            0x89d7	                            mov edi, edx	        73	rerere.c	FUNCTION_3	CALL_6
0x400043a	      0xe800000000	                          call 0x400043f	        73	rerere.c	FUNCTION_3	CALL_6
0x400043f	      0xe997fdffff	                           jmp 0x40001db	        73	rerere.c	FUNCTION_3	CALL_6
0x4000444	         0xf1f4000	                         nop dword [rax]	        73	rerere.c	FUNCTION_3	CALL_6
0x4000448	      0xbf00000000	                              mov edi, 0	        78	rerere.c	FUNCTION_3	IF_4	CALL_8
0x400044d	            0x31c0	                            xor eax, eax	        78	rerere.c	FUNCTION_3	IF_4	CALL_8
0x400044f	      0xe800000000	                          call 0x4000454	        78	rerere.c	FUNCTION_3	IF_4	CALL_8
0x4000454	      0xe95afdffff	                           jmp 0x40001b3	        78	rerere.c	FUNCTION_3	IF_4	CALL_8
0x4000459	     0xf1f80000000	                         nop dword [rax]	        78	rerere.c	FUNCTION_3	IF_4	CALL_8
0x4000460	      0x4c8d7c2460	                   lea r15, [rsp + 0x60]	        94	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_19
0x4000465	          0x4c89ff	                            mov rdi, r15	        94	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_19
0x4000468	      0xe800000000	                          call 0x400046d	        94	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_19
0x400046d	        0x8b542468	            mov edx, dword [rsp + 0x68] 	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x4000471	            0x85d2	                           test edx, edx	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x4000473	     0xf84c5fdffff	                            je 0x400023e	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x4000479	            0x31ed	                            xor ebp, ebp	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x400047b	            0x31db	                            xor ebx, ebx	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x400047d	            0xeb1a	                           jmp 0x4000499	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x400047f	              0x90	                                     nop	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x4000480	          0x488b38	                    mov rdi, qword [rax]	       104	stdio2.h	FUNCTION_21	CALL_2
0x4000483	      0xe800000000	                          call 0x4000488	       104	stdio2.h	FUNCTION_21	CALL_2
0x4000488	          0x83c301	                              add ebx, 1	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x400048b	        0x4883c510	                           add rbp, 0x10	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x400048f	        0x395c2468	            cmp dword [rsp + 0x68], ebx 	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x4000493	     0xf86a5fdffff	                           jbe 0x400023e	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x4000499	          0x4889e8	                            mov rax, rbp	        96	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2	IF_11
0x400049c	      0x4803442460	             add rax, qword [rsp + 0x60]	        96	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2	IF_11
0x40004a1	    0x488b15000000	            mov rdx, qword [0x040004a8] 	        96	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2	IF_11
0x40004a8	        0x48395008	                cmp qword [rax + 8], rdx	        96	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2	IF_11
0x40004ac	            0x75d2	                           jne 0x4000480	        96	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2	IF_11
0x40004ae	    0x48c740080000	                  mov qword [rax + 8], 0	       101	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2	ELSE_4
0x40004b6	            0xebd0	                           jmp 0x4000488	       101	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2	ELSE_4
0x40004b8	      0xe800000000	                          call 0x40004bd	       117	rerere.c	FUNCTION_3
0x40004bd	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	       113	rerere.c	FUNCTION_3	CALL_27
0x40004c5	      0xbf00000000	                              mov edi, 0	       113	rerere.c	FUNCTION_3	CALL_27
0x40004ca	      0xe800000000	              call str.rerere_autoupdate	       113	rerere.c	FUNCTION_3	CALL_27
