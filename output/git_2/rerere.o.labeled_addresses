cmd_rerere	FOR,3:functions,0:ELSE,6:CALL,26:SWITCH,0:WHILE,0:IF,14:DO,0	242
0x4000092	            0x4155	                                push r13	        53	rerere.c	FUNCTION_3
0x4000094	            0x4154	                                push r12	        53	rerere.c	FUNCTION_3
0x4000096	              0x55	                                push rbp	        53	rerere.c	FUNCTION_3
0x4000097	              0x53	                                push rbx	        53	rerere.c	FUNCTION_3
0x4000098	    0x4881ec480100	                          sub rsp, 0x148	        53	rerere.c	FUNCTION_3
0x400009f	          0x4189fa	                           mov r10d, edi	        53	rerere.c	FUNCTION_3
0x40000a2	          0x4889f3	                            mov rbx, rsi	        53	rerere.c	FUNCTION_3
0x40000a5	          0x4889d5	                            mov rbp, rdx	        53	rerere.c	FUNCTION_3
0x40000a8	    0x64488b042528	                mov rax, qword fs:[0x28]	        53	rerere.c	FUNCTION_3
0x40000b1	    0x488984243801	            mov qword [rsp + 0x138], rax	        53	rerere.c	FUNCTION_3
0x40000b9	            0x31c0	                            xor eax, eax	        53	rerere.c	FUNCTION_3
0x40000bb	    0x48c744246000	               mov qword [rsp + 0x60], 0	        54	rerere.c	FUNCTION_3
0x40000c4	    0xc74424680000	               mov dword [rsp + 0x68], 0	        54	rerere.c	FUNCTION_3
0x40000cc	    0xc744246c0000	               mov dword [rsp + 0x6c], 0	        54	rerere.c	FUNCTION_3
0x40000d4	      0x804c247001	                 or byte [rsp + 0x70], 1	        54	rerere.c	FUNCTION_3
0x40000d9	    0x48c744247800	               mov qword [rsp + 0x78], 0	        54	rerere.c	FUNCTION_3
0x40000e2	    0xc744240cffff	      mov dword [rsp + 0xc], 0xffffffff 	        55	rerere.c	FUNCTION_3
0x40000ea	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	        57	rerere.c	FUNCTION_3
0x40000f2	      0xb910000000	                           mov ecx, 0x10	        57	rerere.c	FUNCTION_3
0x40000f7	          0xf348ab	              rep stosq qword [rdi], rax	        57	rerere.c	FUNCTION_3
0x40000fa	    0xc78424b00000	               mov dword [rsp + 0xb0], 7	        57	rerere.c	FUNCTION_3
0x4000105	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	        57	rerere.c	FUNCTION_3
0x4000111	      0x488d44240c	                    lea rax, [rsp + 0xc]	        57	rerere.c	FUNCTION_3
0x4000116	    0x48898424c000	             mov qword [rsp + 0xc0], rax	        57	rerere.c	FUNCTION_3
0x400011e	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	        57	rerere.c	FUNCTION_3
0x400012a	    0xc78424d80000	               mov dword [rsp + 0xd8], 2	        57	rerere.c	FUNCTION_3
0x4000135	    0x48c78424e800	               mov qword [rsp + 0xe8], 1	        57	rerere.c	FUNCTION_3
0x4000141	    0x41b900000000	                              mov r9d, 0	        63	rerere.c	FUNCTION_3	CALL_4
0x4000147	    0x41b800000000	                              mov r8d, 0	        63	rerere.c	FUNCTION_3	CALL_4
0x400014d	    0x488d8c24b000	                   lea rcx, [rsp + 0xb0]	        63	rerere.c	FUNCTION_3	CALL_4
0x4000155	          0x4489d7	                           mov edi, r10d	        63	rerere.c	FUNCTION_3	CALL_4
0x4000158	      0xe800000000	                          call 0x400015d	        63	rerere.c	FUNCTION_3	CALL_4
0x400015d	          0x4189c4	                           mov r12d, eax	        63	rerere.c	FUNCTION_3	CALL_4
0x4000160	      0xbe00000000	                              mov esi, 0	        65	rerere.c	FUNCTION_3	CALL_5
0x4000165	      0xbf00000000	                              mov edi, 0	        65	rerere.c	FUNCTION_3	CALL_5
0x400016a	      0xe800000000	                          call 0x400016f	        65	rerere.c	FUNCTION_3	CALL_5
0x400016f	        0x8b44240c	              mov eax, dword [rsp + 0xc]	        67	rerere.c	FUNCTION_3	IF_1
0x4000173	      0xba02000000	                              mov edx, 2	        70	rerere.c	FUNCTION_3	IF_2
0x4000178	            0x85c0	                           test eax, eax	        69	rerere.c	FUNCTION_3	IF_2
0x400017a	            0x7409	                            je 0x4000185	        69	rerere.c	FUNCTION_3	IF_2
0x400017c	          0x83f801	                              cmp eax, 1	        55	rerere.c	FUNCTION_3
0x400017f	           0xf94c2	                                 sete dl	        55	rerere.c	FUNCTION_3
0x4000182	           0xfb6d2	                           movzx edx, dl	        55	rerere.c	FUNCTION_3
0x4000185	          0x4585e4	                         test r12d, r12d	        72	rerere.c	FUNCTION_3	IF_3
0x4000188	            0x7f0e	                            jg 0x4000198	        72	rerere.c	FUNCTION_3	IF_3
0x400018a	            0x89d7	                            mov edi, edx	        73	rerere.c	FUNCTION_3	CALL_6
0x400018c	      0xe800000000	                          call 0x4000191	        73	rerere.c	FUNCTION_3	CALL_6
0x4000191	            0x89c3	                            mov ebx, eax	        73	rerere.c	FUNCTION_3	CALL_6
0x4000193	      0xe900030000	                           jmp 0x4000498	        73	rerere.c	FUNCTION_3	CALL_6
0x4000198	          0x488b03	                    mov rax, qword [rbx]	        75	rerere.c	FUNCTION_3	IF_4	CALL_7
0x400019b	      0xbf00000000	                              mov edi, 0	        75	rerere.c	FUNCTION_3	IF_4	CALL_7
0x40001a0	      0xb907000000	                              mov ecx, 7	        75	rerere.c	FUNCTION_3	IF_4	CALL_7
0x40001a5	          0x4889c6	                            mov rsi, rax	        75	rerere.c	FUNCTION_3	IF_4	CALL_7
0x40001a8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        75	rerere.c	FUNCTION_3	IF_4	CALL_7
0x40001aa	        0x400f97c6	                                seta sil	        75	rerere.c	FUNCTION_3	IF_4	CALL_7
0x40001ae	           0xf92c1	                                 setb cl	        75	rerere.c	FUNCTION_3	IF_4	CALL_7
0x40001b1	          0x4038ce	                             cmp sil, cl	        75	rerere.c	FUNCTION_3	IF_4	CALL_7
0x40001b4	            0x7547	                           jne 0x40001fd	        75	rerere.c	FUNCTION_3	IF_4	CALL_7
0x40001b6	        0x4183fc01	                             cmp r12d, 1	        77	rerere.c	FUNCTION_3	IF_4	IF_5
0x40001ba	            0x7f0f	                            jg 0x40001cb	        77	rerere.c	FUNCTION_3	IF_4	IF_5
0x40001bc	      0xbf00000000	                              mov edi, 0	        78	rerere.c	FUNCTION_3	IF_4	CALL_8
0x40001c1	      0xb800000000	                              mov eax, 0	        78	rerere.c	FUNCTION_3	IF_4	CALL_8
0x40001c6	      0xe800000000	                          call 0x40001cb	        78	rerere.c	FUNCTION_3	IF_4	CALL_8
0x40001cb	        0x4c8d4308	                       lea r8, [rbx + 8]	        79	rerere.c	FUNCTION_3	IF_4	CALL_9
0x40001cf	          0x4889e9	                            mov rcx, rbp	        79	rerere.c	FUNCTION_3	IF_4	CALL_9
0x40001d2	      0xba01000000	                              mov edx, 1	        79	rerere.c	FUNCTION_3	IF_4	CALL_9
0x40001d7	      0xbe00000000	                              mov esi, 0	        79	rerere.c	FUNCTION_3	IF_4	CALL_9
0x40001dc	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	        79	rerere.c	FUNCTION_3	IF_4	CALL_9
0x40001e4	      0xe800000000	                          call 0x40001e9	        79	rerere.c	FUNCTION_3	IF_4	CALL_9
0x40001e9	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	        81	rerere.c	FUNCTION_3	IF_4	CALL_10
0x40001f1	      0xe800000000	                          call 0x40001f6	        81	rerere.c	FUNCTION_3	IF_4	CALL_10
0x40001f6	            0x89c3	                            mov ebx, eax	        81	rerere.c	FUNCTION_3	IF_4	CALL_10
0x40001f8	      0xe99b020000	                           jmp 0x4000498	        81	rerere.c	FUNCTION_3	IF_4	CALL_10
0x40001fd	      0xbf00000000	                              mov edi, 0	        84	rerere.c	FUNCTION_3	IF_6	CALL_11
0x4000202	      0xb906000000	                              mov ecx, 6	        84	rerere.c	FUNCTION_3	IF_6	CALL_11
0x4000207	          0x4889c6	                            mov rsi, rax	        84	rerere.c	FUNCTION_3	IF_6	CALL_11
0x400020a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        84	rerere.c	FUNCTION_3	IF_6	CALL_11
0x400020c	        0x400f97c6	                                seta sil	        84	rerere.c	FUNCTION_3	IF_6	CALL_11
0x4000210	           0xf92c1	                                 setb cl	        84	rerere.c	FUNCTION_3	IF_6	CALL_11
0x4000213	          0x4038ce	                             cmp sil, cl	        84	rerere.c	FUNCTION_3	IF_6	CALL_11
0x4000216	            0x750f	                           jne 0x4000227	        84	rerere.c	FUNCTION_3	IF_6	CALL_11
0x4000218	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	        85	rerere.c	FUNCTION_3	IF_6	CALL_12
0x400021d	      0xe800000000	                          call 0x4000222	        85	rerere.c	FUNCTION_3	IF_6	CALL_12
0x4000222	      0xe95d020000	                           jmp 0x4000484	        85	rerere.c	FUNCTION_3	IF_6	CALL_12
0x4000227	          0x803867	                    cmp byte [rax], 0x67	        86	rerere.c	FUNCTION_3	ELSE_1	IF_7	CALL_13
0x400022a	            0x751b	                           jne 0x4000247	        86	rerere.c	FUNCTION_3	ELSE_1	IF_7	CALL_13
0x400022c	        0x80780163	                cmp byte [rax + 1], 0x63	        86	rerere.c	FUNCTION_3	ELSE_1	IF_7	CALL_13
0x4000230	            0x7515	                           jne 0x4000247	        86	rerere.c	FUNCTION_3	ELSE_1	IF_7	CALL_13
0x4000232	        0x80780200	                   cmp byte [rax + 2], 0	        86	rerere.c	FUNCTION_3	ELSE_1	IF_7	CALL_13
0x4000236	            0x750f	                           jne 0x4000247	        86	rerere.c	FUNCTION_3	ELSE_1	IF_7	CALL_13
0x4000238	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	        87	rerere.c	FUNCTION_3	ELSE_1	IF_7
0x400023d	      0xe800000000	                          call 0x4000242	        87	rerere.c	FUNCTION_3	ELSE_1	IF_7
0x4000242	      0xe93d020000	                           jmp 0x4000484	        87	rerere.c	FUNCTION_3	ELSE_1	IF_7
0x4000247	      0xbf00000000	                              mov edi, 0	        88	rerere.c	FUNCTION_3	ELSE_2	IF_8	CALL_15
0x400024c	      0xb907000000	                              mov ecx, 7	        88	rerere.c	FUNCTION_3	ELSE_2	IF_8	CALL_15
0x4000251	          0x4889c6	                            mov rsi, rax	        88	rerere.c	FUNCTION_3	ELSE_2	IF_8	CALL_15
0x4000254	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        88	rerere.c	FUNCTION_3	ELSE_2	IF_8	CALL_15
0x4000256	           0xf97c3	                                 seta bl	        88	rerere.c	FUNCTION_3	ELSE_2	IF_8	CALL_15
0x4000259	           0xf92c1	                                 setb cl	        88	rerere.c	FUNCTION_3	ELSE_2	IF_8	CALL_15
0x400025c	            0x29cb	                            sub ebx, ecx	        88	rerere.c	FUNCTION_3	ELSE_2	IF_8	CALL_15
0x400025e	           0xfbedb	                           movsx ebx, bl	        88	rerere.c	FUNCTION_3	ELSE_2	IF_8	CALL_15
0x4000261	            0x85db	                           test ebx, ebx	        88	rerere.c	FUNCTION_3	ELSE_2	IF_8	CALL_15
0x4000263	            0x7544	                           jne 0x40002a9	        88	rerere.c	FUNCTION_3	ELSE_2	IF_8	CALL_15
0x4000265	          0x83ca04	                               or edx, 4	        89	rerere.c	FUNCTION_3	ELSE_2	IF_8	IF_9	CALL_16
0x4000268	            0x89d6	                            mov esi, edx	        89	rerere.c	FUNCTION_3	ELSE_2	IF_8	IF_9	CALL_16
0x400026a	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	        89	rerere.c	FUNCTION_3	ELSE_2	IF_8	IF_9	CALL_16
0x400026f	      0xe800000000	                          call 0x4000274	        89	rerere.c	FUNCTION_3	ELSE_2	IF_8	IF_9	CALL_16
0x4000274	            0x85c0	                           test eax, eax	        89	rerere.c	FUNCTION_3	ELSE_2	IF_8	IF_9	CALL_16
0x4000276	     0xf881c020000	                            js 0x4000498	        89	rerere.c	FUNCTION_3	ELSE_2	IF_8	IF_9	CALL_16
0x400027c	      0x837c246800	               cmp dword [rsp + 0x68], 0	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x4000281	     0xf84fd010000	                            je 0x4000484	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x4000287	          0x4863c3	                         movsxd rax, ebx	        92	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x400028a	        0x48c1e004	                              shl rax, 4	        92	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x400028e	      0x4803442460	             add rax, qword [rsp + 0x60]	        92	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x4000293	          0x488b38	                    mov rdi, qword [rax]	       104	stdio2.h	CALL_13
0x4000296	      0xe800000000	                          call 0x400029b	       104	stdio2.h	CALL_13
0x400029b	          0x83c301	                              add ebx, 1	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x400029e	        0x395c2468	            cmp dword [rsp + 0x68], ebx 	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x40002a2	            0x77e3	                            ja 0x4000287	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x40002a4	      0xe9db010000	                           jmp 0x4000484	        91	rerere.c	FUNCTION_3	ELSE_2	IF_8	FOR_1
0x40002a9	      0xbf00000000	                              mov edi, 0	        93	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_17
0x40002ae	      0xb90a000000	                            mov ecx, 0xa	        93	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_17
0x40002b3	          0x4889c6	                            mov rsi, rax	        93	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_17
0x40002b6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        93	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_17
0x40002b8	        0x400f97c6	                                seta sil	        93	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_17
0x40002bc	           0xf92c1	                                 setb cl	        93	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_17
0x40002bf	          0x4038ce	                             cmp sil, cl	        93	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_17
0x40002c2	            0x7553	                           jne 0x4000317	        93	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_17
0x40002c4	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	        94	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_18
0x40002c9	      0xe800000000	                          call 0x40002ce	        94	rerere.c	FUNCTION_3	ELSE_3	IF_10	CALL_18
0x40002ce	      0x837c246800	               cmp dword [rsp + 0x68], 0	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x40002d3	     0xf84ab010000	                            je 0x4000484	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x40002d9	      0xbb00000000	                              mov ebx, 0	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x40002de	          0x4863c3	                         movsxd rax, ebx	        96	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2	IF_11
0x40002e1	        0x48c1e004	                              shl rax, 4	        96	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2	IF_11
0x40002e5	      0x4803442460	             add rax, qword [rsp + 0x60]	        96	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2	IF_11
0x40002ea	    0x488b15000000	            mov rdx, qword [0x040002f1] 	        96	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2	IF_11
0x40002f1	        0x48395008	                cmp qword [rax + 8], rdx	        96	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2	IF_11
0x40002f5	            0x740a	                            je 0x4000301	        96	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2	IF_11
0x40002f7	          0x488b38	                    mov rdi, qword [rax]	       104	stdio2.h	CALL_13
0x40002fa	      0xe800000000	                          call 0x40002ff	       104	stdio2.h	CALL_13
0x40002ff	            0xeb08	                           jmp 0x4000309	       104	stdio2.h	CALL_13
0x4000301	    0x48c740080000	                  mov qword [rax + 8], 0	       101	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2	ELSE_4
0x4000309	          0x83c301	                              add ebx, 1	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x400030c	        0x395c2468	            cmp dword [rsp + 0x68], ebx 	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x4000310	            0x77cc	                            ja 0x40002de	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x4000312	      0xe96d010000	                           jmp 0x4000484	        95	rerere.c	FUNCTION_3	ELSE_3	IF_10	FOR_2
0x4000317	      0xbf00000000	                              mov edi, 0	       103	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	CALL_19
0x400031c	      0xb905000000	                              mov ecx, 5	       103	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	CALL_19
0x4000321	          0x4889c6	                            mov rsi, rax	       103	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	CALL_19
0x4000324	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       103	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	CALL_19
0x4000326	           0xf97c3	                                 seta bl	       103	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	CALL_19
0x4000329	           0xf92c0	                                 setb al	       103	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	CALL_19
0x400032c	            0x29c3	                            sub ebx, eax	       103	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	CALL_19
0x400032e	           0xfbedb	                           movsx ebx, bl	       103	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	CALL_19
0x4000331	            0x85db	                           test ebx, ebx	       103	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	CALL_19
0x4000333	     0xf8539010000	                           jne 0x4000472	       103	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	CALL_19
0x4000339	          0x83ca04	                               or edx, 4	       104	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	IF_13	CALL_20
0x400033c	            0x89d6	                            mov esi, edx	       104	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	IF_13	CALL_20
0x400033e	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       104	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	IF_13	CALL_20
0x4000343	      0xe800000000	                          call 0x4000348	       104	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	IF_13	CALL_20
0x4000348	            0x85c0	                           test eax, eax	       104	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	IF_13	CALL_20
0x400034a	     0xf8848010000	                            js 0x4000498	       104	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	IF_13	CALL_20
0x4000350	      0x837c246800	               cmp dword [rsp + 0x68], 0	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x4000355	     0xf8429010000	                            je 0x4000484	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x400035b	    0x4c8da4248000	                   lea r12, [rsp + 0x80]	        90	string3.h	FUNCTION_24	CALL_6
0x4000363	          0x4863c3	                         movsxd rax, ebx	       107	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x4000366	        0x48c1e004	                              shl rax, 4	       107	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x400036a	      0x4803442460	             add rax, qword [rsp + 0x60]	       107	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x400036f	          0x488b28	                    mov rbp, qword [rax]	       107	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x4000372	        0x4c8b6808	                mov r13, qword [rax + 8]	       108	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x4000376	      0xbe00000000	                              mov esi, 0	       109	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	IF_14	CALL_22
0x400037b	          0x4c89ef	                            mov rdi, r13	       109	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	IF_14	CALL_22
0x400037e	      0xe800000000	                          call 0x4000383	       109	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	IF_14	CALL_22
0x4000383	          0x4889c6	                            mov rsi, rax	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x4000386	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x400038b	      0xe800000000	                          call 0x4000390	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x4000390	            0x85c0	                           test eax, eax	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x4000392	     0xf85ac000000	                           jne 0x4000444	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x4000398	          0x4889ee	                            mov rsi, rbp	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x400039b	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x40003a0	      0xe800000000	                          call 0x40003a5	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x40003a5	            0x85c0	                           test eax, eax	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x40003a7	     0xf8597000000	                           jne 0x4000444	        35	rerere.c	FUNCTION_2	IF_1	CALL_2
0x40003ad	          0x4889e9	                            mov rcx, rbp	       104	stdio2.h	CALL_13
0x40003b0	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_13
0x40003b3	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_13
0x40003b8	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_13
0x40003bd	      0xe800000000	                          call 0x40003c2	       104	stdio2.h	CALL_13
0x40003c2	    0x488b3d000000	            mov rdi, qword [0x040003c9] 	        39	rerere.c	FUNCTION_2	CALL_3
0x40003c9	      0xe800000000	                          call 0x40003ce	        39	rerere.c	FUNCTION_2	CALL_3
0x40003ce	    0x48c744244000	               mov qword [rsp + 0x40], 0	        90	string3.h	FUNCTION_24	CALL_6
0x40003d7	    0x48c744244800	               mov qword [rsp + 0x48], 0	        90	string3.h	FUNCTION_24	CALL_6
0x40003e0	    0x48c744245000	               mov qword [rsp + 0x50], 0	        90	string3.h	FUNCTION_24	CALL_6
0x40003e9	      0xb906000000	                              mov ecx, 6	        90	string3.h	FUNCTION_24	CALL_6
0x40003ee	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_24	CALL_6
0x40003f3	          0x4c89e7	                            mov rdi, r12	        90	string3.h	FUNCTION_24	CALL_6
0x40003f6	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_24	CALL_6
0x40003f9	    0x48c784248000	               mov qword [rsp + 0x80], 3	        43	rerere.c	FUNCTION_2
0x4000405	    0x48c744241800	               mov qword [rsp + 0x18], 0	        44	rerere.c	FUNCTION_2
0x400040e	      0x4c8d442410	                    lea r8, [rsp + 0x10]	        45	rerere.c	FUNCTION_2	CALL_6
0x4000413	          0x4c89e1	                            mov rcx, r12	        45	rerere.c	FUNCTION_2	CALL_6
0x4000416	      0x488d542440	                   lea rdx, [rsp + 0x40]	        45	rerere.c	FUNCTION_2	CALL_6
0x400041b	      0x488d742430	                   lea rsi, [rsp + 0x30]	        45	rerere.c	FUNCTION_2	CALL_6
0x4000420	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        45	rerere.c	FUNCTION_2	CALL_6
0x4000425	      0xe800000000	                          call 0x400042a	        45	rerere.c	FUNCTION_2	CALL_6
0x400042a	            0x89c5	                            mov ebp, eax	        45	rerere.c	FUNCTION_2	CALL_6
0x400042c	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	        47	rerere.c	FUNCTION_2	CALL_7
0x4000431	      0xe800000000	                          call 0x4000436	        47	rerere.c	FUNCTION_2	CALL_7
0x4000436	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	        48	rerere.c	FUNCTION_2	CALL_8
0x400043b	      0xe800000000	                          call 0x4000440	        48	rerere.c	FUNCTION_2	CALL_8
0x4000440	            0x85ed	                           test ebp, ebp	       109	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	IF_14	CALL_22
0x4000442	            0x741f	                            je 0x4000463	       109	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	IF_14	CALL_22
0x4000444	      0xbe00000000	                              mov esi, 0	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_24
0x4000449	          0x4c89ef	                            mov rdi, r13	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_24
0x400044c	      0xe800000000	                          call 0x4000451	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_24
0x4000451	          0x4889c6	                            mov rsi, rax	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_24
0x4000454	      0xbf00000000	                              mov edi, 0	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_24
0x4000459	      0xb800000000	                              mov eax, 0	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_24
0x400045e	      0xe800000000	                          call 0x4000463	       110	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3	CALL_24
0x4000463	          0x83c301	                              add ebx, 1	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x4000466	        0x395c2468	            cmp dword [rsp + 0x68], ebx 	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x400046a	     0xf87f3feffff	                            ja 0x4000363	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x4000470	            0xeb12	                           jmp 0x4000484	       106	rerere.c	FUNCTION_3	ELSE_4	ELSE_5	IF_12	FOR_3
0x4000472	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	       113	rerere.c	FUNCTION_3	CALL_25
0x400047a	      0xbf00000000	                              mov edi, 0	       113	rerere.c	FUNCTION_3	CALL_25
0x400047f	      0xe800000000	                          call 0x4000484	       113	rerere.c	FUNCTION_3	CALL_25
0x4000484	      0xbe01000000	                              mov esi, 1	       115	rerere.c	FUNCTION_3	CALL_26
0x4000489	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       115	rerere.c	FUNCTION_3	CALL_26
0x400048e	      0xe800000000	                          call 0x4000493	       115	rerere.c	FUNCTION_3	CALL_26
0x4000493	      0xbb00000000	                              mov ebx, 0	       116	rerere.c	FUNCTION_3
0x4000498	            0x89d8	                            mov eax, ebx	       117	rerere.c	FUNCTION_3
0x400049a	    0x488b94243801	           mov rdx, qword [rsp + 0x138] 	       117	rerere.c	FUNCTION_3
0x40004a2	    0x644833142528	                xor rdx, qword fs:[0x28]	       117	rerere.c	FUNCTION_3
0x40004ab	            0x7405	                            je 0x40004b2	       117	rerere.c	FUNCTION_3
0x40004ad	      0xe800000000	                          call 0x40004b2	       117	rerere.c	FUNCTION_3
0x40004b2	    0x4881c4480100	                          add rsp, 0x148	       117	rerere.c	FUNCTION_3
0x40004b9	              0x5b	                                 pop rbx	       117	rerere.c	FUNCTION_3
0x40004ba	              0x5d	                                 pop rbp	       117	rerere.c	FUNCTION_3
0x40004bb	            0x415c	                                 pop r12	       117	rerere.c	FUNCTION_3
0x40004bd	            0x415d	                                 pop r13	       117	rerere.c	FUNCTION_3
0x40004bf	              0xc3	                                     ret	       117	rerere.c	FUNCTION_3
outf	FOR,1:functions,0:ELSE,0:CALL,1:SWITCH,0:WHILE,0:IF,1:DO,0	27
0x4000040	            0x85d2	                           test edx, edx	        20	rerere.c	FUNCTION_1	FOR_1
0x4000042	            0x7e3c	                           jle 0x4000080	        20	rerere.c	FUNCTION_1	FOR_1
0x4000044	              0x55	                                push rbp	        18	rerere.c	FUNCTION_1
0x4000045	              0x53	                                push rbx	        18	rerere.c	FUNCTION_1
0x4000046	        0x4883ec08	                              sub rsp, 8	        18	rerere.c	FUNCTION_1
0x400004a	        0x488d5e08	                      lea rbx, [rsi + 8]	        18	rerere.c	FUNCTION_1
0x400004e	          0x8d42ff	                      lea eax, [rdx - 1]	        18	rerere.c	FUNCTION_1
0x4000051	        0x48c1e004	                              shl rax, 4	        18	rerere.c	FUNCTION_1
0x4000055	      0x488d6c0618	            lea rbp, [rsi + rax + 0x18] 	        18	rerere.c	FUNCTION_1
0x400005a	        0x488b73f8	                mov rsi, qword [rbx - 8]	        21	rerere.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400005e	          0x488b13	                    mov rdx, qword [rbx]	        21	rerere.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000061	      0xbf01000000	                              mov edi, 1	        21	rerere.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000066	      0xe800000000	                          call 0x400006b	        21	rerere.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400006b	          0x4885c0	                           test rax, rax	        21	rerere.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400006e	            0x7816	                            js 0x4000086	        21	rerere.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000070	        0x4883c310	                           add rbx, 0x10	        21	rerere.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000074	          0x4839eb	                            cmp rbx, rbp	        20	rerere.c	FUNCTION_1	FOR_1
0x4000077	            0x75e1	                           jne 0x400005a	        20	rerere.c	FUNCTION_1	FOR_1
0x4000079	      0xb800000000	                              mov eax, 0	        23	rerere.c	FUNCTION_1
0x400007e	            0xeb0b	                           jmp 0x400008b	        23	rerere.c	FUNCTION_1
0x4000080	      0xb800000000	                              mov eax, 0	        23	rerere.c	FUNCTION_1
0x4000085	              0xc3	                                     ret	        24	rerere.c	FUNCTION_1
0x4000086	      0xb8ffffffff	                     mov eax, 0xffffffff	        22	rerere.c	FUNCTION_1	FOR_1	IF_1
0x400008b	        0x4883c408	                              add rsp, 8	        24	rerere.c	FUNCTION_1
0x400008f	              0x5b	                                 pop rbx	        24	rerere.c	FUNCTION_1
0x4000090	              0x5d	                                 pop rbp	        24	rerere.c	FUNCTION_1
0x4000091	              0xc3	                                     ret	        24	rerere.c	FUNCTION_1
