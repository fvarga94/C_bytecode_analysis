too_many_loose_objects	DO,0:SWITCH,0:CALL,6:WHILE,1:FOR,0:functions,0:IF,4:ELSE,0	50
0x4000234	      0xb800000000	                              mov eax, 0	       158	gc.c	FUNCTION_7	IF_1
0x4000239	    0x833d00000000	               cmp dword [0x04000240], 0	       157	gc.c	FUNCTION_7	IF_1
0x4000240	     0xf8e9e000000	                           jle 0x40002e4	       157	gc.c	FUNCTION_7	IF_1
0x4000246	            0x4155	                                push r13	       144	gc.c	FUNCTION_7
0x4000248	            0x4154	                                push r12	       144	gc.c	FUNCTION_7
0x400024a	              0x55	                                push rbp	       144	gc.c	FUNCTION_7
0x400024b	              0x53	                                push rbx	       144	gc.c	FUNCTION_7
0x400024c	        0x4883ec08	                              sub rsp, 8	       144	gc.c	FUNCTION_7
0x4000250	      0xbf00000000	                              mov edi, 0	       160	gc.c	FUNCTION_7	CALL_2
0x4000255	      0xe800000000	                          call 0x400025a	       160	gc.c	FUNCTION_7	CALL_2
0x400025a	          0x4889c7	                            mov rdi, rax	       160	gc.c	FUNCTION_7	CALL_2
0x400025d	      0xe800000000	                          call 0x4000262	       160	gc.c	FUNCTION_7	CALL_2
0x4000262	          0x4889c5	                            mov rbp, rax	       160	gc.c	FUNCTION_7	CALL_2
0x4000265	          0x4885c0	                           test rax, rax	       161	gc.c	FUNCTION_7	IF_2
0x4000268	            0x746b	                            je 0x40002d5	       161	gc.c	FUNCTION_7	IF_2
0x400026a	    0x448b2d000000	           mov r13d, dword [0x04000271] 	       164	gc.c	FUNCTION_7	CALL_3
0x4000271	    0x418d85fe0100	                  lea eax, [r13 + 0x1fe]	       164	gc.c	FUNCTION_7	CALL_3
0x4000278	    0x4181c5ff0000	                          add r13d, 0xff	       164	gc.c	FUNCTION_7	CALL_3
0x400027f	        0x440f48e8	                         cmovs r13d, eax	       164	gc.c	FUNCTION_7	CALL_3
0x4000283	        0x41c1fd08	                             sar r13d, 8	       164	gc.c	FUNCTION_7	CALL_3
0x4000287	    0x41bc00000000	                             mov r12d, 0	       154	gc.c	FUNCTION_7
0x400028d	            0xeb23	                           jmp 0x40002b2	       165	gc.c	FUNCTION_7	WHILE_1	CALL_4
0x400028f	        0x488d7b13	                   lea rdi, [rbx + 0x13]	       166	gc.c	FUNCTION_7	WHILE_1	IF_3	CALL_5
0x4000293	      0xbe00000000	                              mov esi, 0	       166	gc.c	FUNCTION_7	WHILE_1	IF_3	CALL_5
0x4000298	      0xe800000000	                          call 0x400029d	       166	gc.c	FUNCTION_7	WHILE_1	IF_3	CALL_5
0x400029d	        0x4883f826	                           cmp rax, 0x26	       166	gc.c	FUNCTION_7	WHILE_1	IF_3	CALL_5
0x40002a1	            0x750f	                           jne 0x40002b2	       166	gc.c	FUNCTION_7	WHILE_1	IF_3	CALL_5
0x40002a3	        0x807b3900	                cmp byte [rbx + 0x39], 0	       166	gc.c	FUNCTION_7	WHILE_1	IF_3	CALL_5
0x40002a7	            0x7509	                           jne 0x40002b2	       166	gc.c	FUNCTION_7	WHILE_1	IF_3	CALL_5
0x40002a9	        0x4183c401	                             add r12d, 1	       169	gc.c	FUNCTION_7	WHILE_1	IF_4
0x40002ad	          0x4539e5	                          cmp r13d, r12d	       169	gc.c	FUNCTION_7	WHILE_1	IF_4
0x40002b0	            0x7c12	                            jl 0x40002c4	       169	gc.c	FUNCTION_7	WHILE_1	IF_4
0x40002b2	          0x4889ef	                            mov rdi, rbp	       165	gc.c	FUNCTION_7	WHILE_1	CALL_4
0x40002b5	      0xe800000000	                          call 0x40002ba	       165	gc.c	FUNCTION_7	WHILE_1	CALL_4
0x40002ba	          0x4889c3	                            mov rbx, rax	       165	gc.c	FUNCTION_7	WHILE_1	CALL_4
0x40002bd	          0x4885c0	                           test rax, rax	       165	gc.c	FUNCTION_7	WHILE_1	CALL_4
0x40002c0	            0x75cd	                           jne 0x400028f	       165	gc.c	FUNCTION_7	WHILE_1	CALL_4
0x40002c2	            0xeb05	                           jmp 0x40002c9	       165	gc.c	FUNCTION_7	WHILE_1	CALL_4
0x40002c4	      0xbb01000000	                              mov ebx, 1	       170	gc.c	FUNCTION_7	WHILE_1	IF_4
0x40002c9	          0x4889ef	                            mov rdi, rbp	       174	gc.c	FUNCTION_7	CALL_6
0x40002cc	      0xe800000000	                          call 0x40002d1	       174	gc.c	FUNCTION_7	CALL_6
0x40002d1	            0x89d8	                            mov eax, ebx	       175	gc.c	FUNCTION_7
0x40002d3	            0xeb05	                           jmp 0x40002da	       175	gc.c	FUNCTION_7
0x40002d5	      0xb800000000	                              mov eax, 0	       162	gc.c	FUNCTION_7	IF_2
0x40002da	        0x4883c408	                              add rsp, 8	       176	gc.c	FUNCTION_7
0x40002de	              0x5b	                                 pop rbx	       176	gc.c	FUNCTION_7
0x40002df	              0x5d	                                 pop rbp	       176	gc.c	FUNCTION_7
0x40002e0	            0x415c	                                 pop r12	       176	gc.c	FUNCTION_7
0x40002e2	            0x415d	                                 pop r13	       176	gc.c	FUNCTION_7
0x40002e4	            0xf3c3	                                     ret	       176	gc.c	FUNCTION_7
gc_before_repack	DO,0:SWITCH,0:CALL,4:WHILE,0:FOR,0:functions,0:IF,2:ELSE,0	34
0x4000040	        0x4883ec08	                              sub rsp, 8	       475	gc.c	FUNCTION_18
0x4000044	    0x833d00000000	               cmp dword [0x0400004b], 0	       476	gc.c	FUNCTION_18	IF_1	CALL_1
0x400004b	            0x7435	                            je 0x4000082	       476	gc.c	FUNCTION_18	IF_1	CALL_1
0x400004d	      0xbe02000000	                              mov esi, 2	       476	gc.c	FUNCTION_18	IF_1	CALL_1
0x4000052	    0x488b3d000000	            mov rdi, qword [0x04000059] 	       476	gc.c	FUNCTION_18	IF_1	CALL_1
0x4000059	      0xe800000000	                          call 0x400005e	       476	gc.c	FUNCTION_18	IF_1	CALL_1
0x400005e	            0x85c0	                           test eax, eax	       476	gc.c	FUNCTION_18	IF_1	CALL_1
0x4000060	            0x7420	                            je 0x4000082	       476	gc.c	FUNCTION_18	IF_1	CALL_1
0x4000062	    0x488b05000000	            mov rax, qword [0x04000069] 	       477	gc.c	FUNCTION_18	CALL_2
0x4000069	          0x488b30	                    mov rsi, qword [rax]	       477	gc.c	FUNCTION_18	CALL_2
0x400006c	      0xbf00000000	                              mov edi, 0	       477	gc.c	FUNCTION_18	CALL_2
0x4000071	      0xb800000000	                              mov eax, 0	       477	gc.c	FUNCTION_18	CALL_2
0x4000076	      0xe800000000	                          call 0x400007b	       477	gc.c	FUNCTION_18	CALL_2
0x400007b	      0xb8ffffffff	                     mov eax, 0xffffffff	       477	gc.c	FUNCTION_18	CALL_2
0x4000080	            0xeb57	                           jmp 0x40000d9	       477	gc.c	FUNCTION_18	CALL_2
0x4000082	    0x833d00000000	               cmp dword [0x04000089], 0	       479	gc.c	FUNCTION_18	IF_2	CALL_3
0x4000089	            0x7435	                            je 0x40000c0	       479	gc.c	FUNCTION_18	IF_2	CALL_3
0x400008b	      0xbe02000000	                              mov esi, 2	       479	gc.c	FUNCTION_18	IF_2	CALL_3
0x4000090	    0x488b3d000000	            mov rdi, qword [0x04000097] 	       479	gc.c	FUNCTION_18	IF_2	CALL_3
0x4000097	      0xe800000000	                          call 0x400009c	       479	gc.c	FUNCTION_18	IF_2	CALL_3
0x400009c	            0x85c0	                           test eax, eax	       479	gc.c	FUNCTION_18	IF_2	CALL_3
0x400009e	            0x7420	                            je 0x40000c0	       479	gc.c	FUNCTION_18	IF_2	CALL_3
0x40000a0	    0x488b05000000	            mov rax, qword [0x040000a7] 	       480	gc.c	FUNCTION_18	CALL_4
0x40000a7	          0x488b30	                    mov rsi, qword [rax]	       480	gc.c	FUNCTION_18	CALL_4
0x40000aa	      0xbf00000000	                              mov edi, 0	       480	gc.c	FUNCTION_18	CALL_4
0x40000af	      0xb800000000	                              mov eax, 0	       480	gc.c	FUNCTION_18	CALL_4
0x40000b4	      0xe800000000	                          call 0x40000b9	       480	gc.c	FUNCTION_18	CALL_4
0x40000b9	      0xb8ffffffff	                     mov eax, 0xffffffff	       480	gc.c	FUNCTION_18	CALL_4
0x40000be	            0xeb19	                           jmp 0x40000d9	       480	gc.c	FUNCTION_18	CALL_4
0x40000c0	    0xc70500000000	               mov dword [0x040000ca], 0	       482	gc.c	FUNCTION_18
0x40000ca	    0xc70500000000	               mov dword [0x040000d4], 0	       483	gc.c	FUNCTION_18
0x40000d4	      0xb800000000	                              mov eax, 0	       484	gc.c	FUNCTION_18
0x40000d9	        0x4883c408	                              add rsp, 8	       485	gc.c	FUNCTION_18
0x40000dd	              0xc3	                                     ret	       485	gc.c	FUNCTION_18
process_log_file_on_signal	DO,0:SWITCH,0:CALL,3:WHILE,0:FOR,0:functions,0:IF,0:ELSE,0	9
0x400040a	              0x53	                                push rbx	       111	gc.c	FUNCTION_5
0x400040b	            0x89fb	                            mov ebx, edi	       111	gc.c	FUNCTION_5
0x400040d	      0xe8d4feffff	               call sym.process_log_file	       112	gc.c	FUNCTION_5	CALL_1
0x4000412	            0x89df	                            mov edi, ebx	       113	gc.c	FUNCTION_5	CALL_2
0x4000414	      0xe800000000	                          call 0x4000419	       113	gc.c	FUNCTION_5	CALL_2
0x4000419	            0x89df	                            mov edi, ebx	       114	gc.c	FUNCTION_5	CALL_3
0x400041b	      0xe800000000	                          call 0x4000420	       114	gc.c	FUNCTION_5	CALL_3
0x4000420	              0x5b	                                 pop rbx	       115	gc.c	FUNCTION_5
0x4000421	              0xc3	                                     ret	       115	gc.c	FUNCTION_5
find_base_packs	DO,0:SWITCH,0:CALL,3:WHILE,0:FOR,1:functions,0:IF,5:ELSE,1	47
0x40000f7	            0x4155	                                push r13	       180	gc.c	FUNCTION_8
0x40000f9	            0x4154	                                push r12	       180	gc.c	FUNCTION_8
0x40000fb	              0x55	                                push rbp	       180	gc.c	FUNCTION_8
0x40000fc	              0x53	                                push rbx	       180	gc.c	FUNCTION_8
0x40000fd	        0x4883ec08	                              sub rsp, 8	       180	gc.c	FUNCTION_8
0x4000101	          0x4989fd	                            mov r13, rdi	       180	gc.c	FUNCTION_8
0x4000104	          0x4989f4	                            mov r12, rsi	       180	gc.c	FUNCTION_8
0x4000107	    0x488b3d000000	            mov rdi, qword [0x0400010e] 	       183	gc.c	FUNCTION_8	FOR_1	CALL_1
0x400010e	      0xe800000000	                          call 0x4000113	       183	gc.c	FUNCTION_8	FOR_1	CALL_1
0x4000113	          0x4889c3	                            mov rbx, rax	       183	gc.c	FUNCTION_8	FOR_1	CALL_1
0x4000116	          0x4885c0	                           test rax, rax	       183	gc.c	FUNCTION_8	FOR_1	CALL_1
0x4000119	            0x745b	                            je 0x4000176	       183	gc.c	FUNCTION_8	FOR_1	CALL_1
0x400011b	      0xbd00000000	                              mov ebp, 0	       183	gc.c	FUNCTION_8	FOR_1	CALL_1
0x4000120	        0xf6436001	               test byte [rbx + 0x60], 1	       184	gc.c	FUNCTION_8	FOR_1	IF_1
0x4000124	            0x7432	                            je 0x4000158	       184	gc.c	FUNCTION_8	FOR_1	IF_1
0x4000126	          0x4d85e4	                           test r12, r12	       186	gc.c	FUNCTION_8	FOR_1	IF_2
0x4000129	            0x7417	                            je 0x4000142	       186	gc.c	FUNCTION_8	FOR_1	IF_2
0x400012b	        0x4c3b6320	            cmp r12, qword [rbx + 0x20] 	       187	gc.c	FUNCTION_8	FOR_1	IF_2	IF_3
0x400012f	            0x7727	                            ja 0x4000158	       187	gc.c	FUNCTION_8	FOR_1	IF_2	IF_3
0x4000131	    0x488db3800000	                   lea rsi, [rbx + 0x80]	       188	gc.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x4000138	          0x4c89ef	                            mov rdi, r13	       188	gc.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x400013b	      0xe800000000	                          call 0x4000140	       188	gc.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x4000140	            0xeb16	                           jmp 0x4000158	       188	gc.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x4000142	          0x4885ed	                           test rbp, rbp	       189	gc.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000145	            0x740e	                            je 0x4000155	       189	gc.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000147	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       189	gc.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x400014b	        0x483b4320	            cmp rax, qword [rbx + 0x20] 	       189	gc.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x400014f	        0x480f4ceb	                          cmovl rbp, rbx	       189	gc.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000153	            0xeb03	                           jmp 0x4000158	       189	gc.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000155	          0x4889dd	                            mov rbp, rbx	       189	gc.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4000158	          0x488b1b	                    mov rbx, qword [rbx]	       183	gc.c	FUNCTION_8	FOR_1	CALL_1
0x400015b	          0x4885db	                           test rbx, rbx	       183	gc.c	FUNCTION_8	FOR_1	CALL_1
0x400015e	            0x75c0	                           jne 0x4000120	       183	gc.c	FUNCTION_8	FOR_1	CALL_1
0x4000160	          0x4885ed	                           test rbp, rbp	       194	gc.c	FUNCTION_8	IF_5
0x4000163	            0x7414	                            je 0x4000179	       194	gc.c	FUNCTION_8	IF_5
0x4000165	    0x488db5800000	                   lea rsi, [rbp + 0x80]	       195	gc.c	FUNCTION_8	CALL_3
0x400016c	          0x4c89ef	                            mov rdi, r13	       195	gc.c	FUNCTION_8	CALL_3
0x400016f	      0xe800000000	                          call 0x4000174	       195	gc.c	FUNCTION_8	CALL_3
0x4000174	            0xeb03	                           jmp 0x4000179	       195	gc.c	FUNCTION_8	CALL_3
0x4000176	          0x4889c5	                            mov rbp, rax	       181	gc.c	FUNCTION_8
0x4000179	          0x4889e8	                            mov rax, rbp	       198	gc.c	FUNCTION_8
0x400017c	        0x4883c408	                              add rsp, 8	       198	gc.c	FUNCTION_8
0x4000180	              0x5b	                                 pop rbx	       198	gc.c	FUNCTION_8
0x4000181	              0x5d	                                 pop rbp	       198	gc.c	FUNCTION_8
0x4000182	            0x415c	                                 pop r12	       198	gc.c	FUNCTION_8
0x4000184	            0x415d	                                 pop r13	       198	gc.c	FUNCTION_8
0x4000186	              0xc3	                                     ret	       198	gc.c	FUNCTION_8
process_log_file_at_exit	DO,0:SWITCH,0:CALL,2:WHILE,0:FOR,0:functions,0:IF,0:ELSE,0	6
0x40003f0	        0x4883ec08	                              sub rsp, 8	       105	gc.c	FUNCTION_4
0x40003f4	    0x488b3d000000	            mov rdi, qword [0x040003fb] 	       106	gc.c	FUNCTION_4	CALL_1
0x40003fb	      0xe800000000	                          call 0x4000400	       106	gc.c	FUNCTION_4	CALL_1
0x4000400	      0xe8e1feffff	               call sym.process_log_file	       107	gc.c	FUNCTION_4	CALL_2
0x4000405	        0x4883c408	                              add rsp, 8	       108	gc.c	FUNCTION_4
0x4000409	              0xc3	                                     ret	       108	gc.c	FUNCTION_4
report_pack_garbage	DO,0:SWITCH,0:CALL,1:WHILE,0:FOR,0:functions,0:IF,1:ELSE,0	7
0x40000de	          0x83ff02	                              cmp edi, 2	        73	gc.c	FUNCTION_2	IF_1
0x40000e1	            0x7512	                           jne 0x40000f5	        73	gc.c	FUNCTION_2	IF_1
0x40000e3	        0x4883ec08	                              sub rsp, 8	        72	gc.c	FUNCTION_2
0x40000e7	      0xbf00000000	                              mov edi, 0	        74	gc.c	FUNCTION_2	CALL_1
0x40000ec	      0xe800000000	                          call 0x40000f1	        74	gc.c	FUNCTION_2	CALL_1
0x40000f1	        0x4883c408	                              add rsp, 8	        75	gc.c	FUNCTION_2
0x40000f5	            0xf3c3	                                     ret	        75	gc.c	FUNCTION_2
keep_one_pack	DO,0:SWITCH,0:CALL,2:WHILE,0:FOR,0:functions,0:IF,0:ELSE,0	11
0x4000207	        0x4883ec08	                              sub rsp, 8	       296	gc.c	FUNCTION_12
0x400020b	          0x488b3f	                    mov rdi, qword [rdi]	       297	gc.c	FUNCTION_12	CALL_2
0x400020e	      0xe800000000	                          call 0x4000213	       297	gc.c	FUNCTION_12	CALL_2
0x4000213	          0x4889c2	                            mov rdx, rax	       297	gc.c	FUNCTION_12	CALL_2
0x4000216	      0xbe00000000	                              mov esi, 0	       297	gc.c	FUNCTION_12	CALL_2
0x400021b	      0xbf00000000	                              mov edi, 0	       297	gc.c	FUNCTION_12	CALL_2
0x4000220	      0xb800000000	                              mov eax, 0	       297	gc.c	FUNCTION_12	CALL_2
0x4000225	      0xe800000000	                          call 0x400022a	       297	gc.c	FUNCTION_12	CALL_2
0x400022a	      0xb800000000	                              mov eax, 0	       299	gc.c	FUNCTION_12
0x400022f	        0x4883c408	                              add rsp, 8	       299	gc.c	FUNCTION_12
0x4000233	              0xc3	                                     ret	       299	gc.c	FUNCTION_12
add_repack_all_option	DO,0:SWITCH,0:CALL,5:WHILE,0:FOR,0:functions,0:IF,3:ELSE,1	35
0x4000187	              0x53	                                push rbx	       302	gc.c	FUNCTION_13
0x4000188	          0x4889fb	                            mov rbx, rdi	       302	gc.c	FUNCTION_13
0x400018b	    0x488b05000000	            mov rax, qword [0x04000192] 	       303	gc.c	FUNCTION_13	IF_1	CALL_1
0x4000192	          0x4885c0	                           test rax, rax	       303	gc.c	FUNCTION_13	IF_1	CALL_1
0x4000195	            0x7428	                            je 0x40001bf	       303	gc.c	FUNCTION_13	IF_1	CALL_1
0x4000197	          0x80386e	                    cmp byte [rax], 0x6e	       303	gc.c	FUNCTION_13	IF_1	CALL_1
0x400019a	            0x7523	                           jne 0x40001bf	       303	gc.c	FUNCTION_13	IF_1	CALL_1
0x400019c	        0x8078016f	                cmp byte [rax + 1], 0x6f	       303	gc.c	FUNCTION_13	IF_1	CALL_1
0x40001a0	            0x751d	                           jne 0x40001bf	       303	gc.c	FUNCTION_13	IF_1	CALL_1
0x40001a2	        0x80780277	                cmp byte [rax + 2], 0x77	       303	gc.c	FUNCTION_13	IF_1	CALL_1
0x40001a6	            0x7517	                           jne 0x40001bf	       303	gc.c	FUNCTION_13	IF_1	CALL_1
0x40001a8	        0x80780300	                   cmp byte [rax + 3], 0	       303	gc.c	FUNCTION_13	IF_1	CALL_1
0x40001ac	            0x7511	                           jne 0x40001bf	       303	gc.c	FUNCTION_13	IF_1	CALL_1
0x40001ae	      0xbe00000000	                              mov esi, 0	       304	gc.c	FUNCTION_13	CALL_2
0x40001b3	      0xbf00000000	                              mov edi, 0	       304	gc.c	FUNCTION_13	CALL_2
0x40001b8	      0xe800000000	                          call 0x40001bd	       304	gc.c	FUNCTION_13	CALL_2
0x40001bd	            0xeb2f	                           jmp 0x40001ee	       304	gc.c	FUNCTION_13	CALL_2
0x40001bf	      0xbe00000000	                              mov esi, 0	       306	gc.c	FUNCTION_13	ELSE_1	CALL_3
0x40001c4	      0xbf00000000	                              mov edi, 0	       306	gc.c	FUNCTION_13	ELSE_1	CALL_3
0x40001c9	      0xe800000000	                          call 0x40001ce	       306	gc.c	FUNCTION_13	ELSE_1	CALL_3
0x40001ce	    0x488b15000000	            mov rdx, qword [0x040001d5] 	       307	gc.c	FUNCTION_13	ELSE_1	IF_2
0x40001d5	          0x4885d2	                           test rdx, rdx	       307	gc.c	FUNCTION_13	ELSE_1	IF_2
0x40001d8	            0x7414	                            je 0x40001ee	       307	gc.c	FUNCTION_13	ELSE_1	IF_2
0x40001da	      0xbe00000000	                              mov esi, 0	       308	gc.c	FUNCTION_13	ELSE_1	CALL_4
0x40001df	      0xbf00000000	                              mov edi, 0	       308	gc.c	FUNCTION_13	ELSE_1	CALL_4
0x40001e4	      0xb800000000	                              mov eax, 0	       308	gc.c	FUNCTION_13	ELSE_1	CALL_4
0x40001e9	      0xe800000000	                          call 0x40001ee	       308	gc.c	FUNCTION_13	ELSE_1	CALL_4
0x40001ee	          0x4885db	                           test rbx, rbx	       311	gc.c	FUNCTION_13	IF_3
0x40001f1	            0x7412	                            je 0x4000205	       311	gc.c	FUNCTION_13	IF_3
0x40001f3	      0xba00000000	                              mov edx, 0	       312	gc.c	FUNCTION_13	CALL_5
0x40001f8	      0xbe00000000	                              mov esi, 0	       312	gc.c	FUNCTION_13	CALL_5
0x40001fd	          0x4889df	                            mov rdi, rbx	       312	gc.c	FUNCTION_13	CALL_5
0x4000200	      0xe800000000	                          call 0x4000205	       312	gc.c	FUNCTION_13	CALL_5
0x4000205	              0x5b	                                 pop rbx	       313	gc.c	FUNCTION_13
0x4000206	              0xc3	                                     ret	       313	gc.c	FUNCTION_13
