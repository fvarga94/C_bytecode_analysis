cmd__strcmp_offset	WHILE,0:DO,0:IF,1:SWITCH,0:ELSE,0:CALL,3:FOR,0:functions,0	35
0x4000040	        0x4883ec18	                           sub rsp, 0x18	         5	test-strcmp-offset.c	FUNCTION_1
0x4000044	        0x488b7e08	                mov rdi, qword [rsi + 8]	         9	test-strcmp-offset.c	FUNCTION_1	IF_1
0x4000048	          0x4889f0	                            mov rax, rsi	         5	test-strcmp-offset.c	FUNCTION_1
0x400004b	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	         5	test-strcmp-offset.c	FUNCTION_1
0x4000054	      0x48894c2408	                mov qword [rsp + 8], rcx	         5	test-strcmp-offset.c	FUNCTION_1
0x4000059	            0x31c9	                            xor ecx, ecx	         5	test-strcmp-offset.c	FUNCTION_1
0x400005b	          0x4885ff	                           test rdi, rdi	         9	test-strcmp-offset.c	FUNCTION_1	IF_1
0x400005e	            0x744f	                            je 0x40000af	         9	test-strcmp-offset.c	FUNCTION_1	IF_1
0x4000060	        0x488b7610	            mov rsi, qword [rsi + 0x10] 	         9	test-strcmp-offset.c	FUNCTION_1	IF_1
0x4000064	          0x4885f6	                           test rsi, rsi	         9	test-strcmp-offset.c	FUNCTION_1	IF_1
0x4000067	            0x7446	                            je 0x40000af	         9	test-strcmp-offset.c	FUNCTION_1	IF_1
0x4000069	          0x4889e2	                            mov rdx, rsp	        12	test-strcmp-offset.c	FUNCTION_1	CALL_2
0x400006c	      0xe800000000	                          call 0x4000071	        12	test-strcmp-offset.c	FUNCTION_1	CALL_2
0x4000071	            0x31d2	                            xor edx, edx	        18	test-strcmp-offset.c	FUNCTION_1
0x4000073	        0x488b0c24	                    mov rcx, qword [rsp]	       104	stdio2.h	FUNCTION_7	CALL_2
0x4000077	          0x83f800	                              cmp eax, 0	        18	test-strcmp-offset.c	FUNCTION_1
0x400007a	           0xf9fc2	                                 setg dl	        18	test-strcmp-offset.c	FUNCTION_1
0x400007d	            0x85c0	                           test eax, eax	        18	test-strcmp-offset.c	FUNCTION_1
0x400007f	      0xb8ffffffff	                     mov eax, 0xffffffff	        18	test-strcmp-offset.c	FUNCTION_1
0x4000084	           0xf48d0	                          cmovs edx, eax	        18	test-strcmp-offset.c	FUNCTION_1
0x4000087	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	FUNCTION_7	CALL_2
0x400008c	            0x31c0	                            xor eax, eax	       104	stdio2.h	FUNCTION_7	CALL_2
0x400008e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_7	CALL_2
0x4000093	      0xe800000000	                          call 0x4000098	       104	stdio2.h	FUNCTION_7	CALL_2
0x4000098	            0x31c0	                            xor eax, eax	        23	test-strcmp-offset.c	FUNCTION_1
0x400009a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        23	test-strcmp-offset.c	FUNCTION_1
0x400009f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        23	test-strcmp-offset.c	FUNCTION_1
0x40000a8	            0x7514	                           jne 0x40000be	        23	test-strcmp-offset.c	FUNCTION_1
0x40000aa	        0x4883c418	                           add rsp, 0x18	        23	test-strcmp-offset.c	FUNCTION_1
0x40000ae	              0xc3	                                     ret	        23	test-strcmp-offset.c	FUNCTION_1
0x40000af	          0x488b30	                    mov rsi, qword [rax]	        10	test-strcmp-offset.c	FUNCTION_1	CALL_1
0x40000b2	      0xbf00000000	                              mov edi, 0	        10	test-strcmp-offset.c	FUNCTION_1	CALL_1
0x40000b7	            0x31c0	                            xor eax, eax	        10	test-strcmp-offset.c	FUNCTION_1	CALL_1
0x40000b9	      0xe800000000	                          call 0x40000be	        10	test-strcmp-offset.c	FUNCTION_1	CALL_1
0x40000be	      0xe800000000	   call str.usage:__s__string1___string2	        23	test-strcmp-offset.c	FUNCTION_1
