next_hfs_char	DO,0:FOR,0:IF,1:functions,0:ELSE,0:SWITCH,1:WHILE,1:CALL,1	31
0x4000260	              0x53	                                push rbx	       647	utf8.c	FUNCTION_24
0x4000261	          0x4889fb	                            mov rbx, rdi	       647	utf8.c	FUNCTION_24
0x4000264	            0x31f6	                            xor esi, esi	       649	utf8.c	FUNCTION_24	WHILE_1	CALL_1
0x4000266	          0x4889df	                            mov rdi, rbx	       649	utf8.c	FUNCTION_24	WHILE_1	CALL_1
0x4000269	      0xe8d2fdffff	             call sym.pick_one_utf8_char	       649	utf8.c	FUNCTION_24	WHILE_1	CALL_1
0x400026e	        0x48833b00	                      cmp qword [rbx], 0	       656	utf8.c	FUNCTION_24	WHILE_1	IF_1
0x4000272	            0x7441	                            je 0x40002b5	       656	utf8.c	FUNCTION_24	WHILE_1	IF_1
0x4000274	      0x3d2e200000	                         cmp eax, 0x202e	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x4000279	            0x7715	                            ja 0x4000290	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x400027b	      0x3d2a200000	                         cmp eax, 0x202a	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x4000280	            0x73e2	                           jae 0x4000264	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x4000282	    0x8d90f4dfffff	                 lea edx, [rax - 0x200c]	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x4000288	          0x83fa03	                              cmp edx, 3	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x400028b	            0x76d7	                           jbe 0x4000264	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x400028d	              0x5b	                                 pop rbx	       682	utf8.c	FUNCTION_24
0x400028e	              0xc3	                                     ret	       682	utf8.c	FUNCTION_24
0x400028f	              0x90	                                     nop	       682	utf8.c	FUNCTION_24
0x4000290	      0x3d6a200000	                         cmp eax, 0x206a	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x4000295	            0x72f6	                            jb 0x400028d	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x4000297	      0x3d6f200000	                         cmp eax, 0x206f	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x400029c	            0x76c6	                           jbe 0x4000264	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x400029e	      0x3dfffe0000	                         cmp eax, 0xfeff	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x40002a3	            0x75e8	                           jne 0x400028d	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x40002a5	            0x31f6	                            xor esi, esi	       649	utf8.c	FUNCTION_24	WHILE_1	CALL_1
0x40002a7	          0x4889df	                            mov rdi, rbx	       649	utf8.c	FUNCTION_24	WHILE_1	CALL_1
0x40002aa	      0xe891fdffff	             call sym.pick_one_utf8_char	       649	utf8.c	FUNCTION_24	WHILE_1	CALL_1
0x40002af	        0x48833b00	                      cmp qword [rbx], 0	       656	utf8.c	FUNCTION_24	WHILE_1	IF_1
0x40002b3	            0x75bf	                           jne 0x4000274	       656	utf8.c	FUNCTION_24	WHILE_1	IF_1
0x40002b5	            0x31c0	                            xor eax, eax	       657	utf8.c	FUNCTION_24	WHILE_1	IF_1
0x40002b7	              0x5b	                                 pop rbx	       682	utf8.c	FUNCTION_24
0x40002b8	              0xc3	                                     ret	       682	utf8.c	FUNCTION_24
is_hfs_dotgit	DO,0:FOR,0:IF,5:functions,0:ELSE,0:SWITCH,0:WHILE,0:CALL,6	35
0x40012d0	        0x4883ec08	                              sub rsp, 8	       685	utf8.c	FUNCTION_25
0x40012d4	        0x48893c24	                    mov qword [rsp], rdi	       685	utf8.c	FUNCTION_25
0x40012d8	          0x4889e7	                            mov rdi, rsp	       688	utf8.c	FUNCTION_25	CALL_1
0x40012db	      0xe880efffff	                  call sym.next_hfs_char	       688	utf8.c	FUNCTION_25	CALL_1
0x40012e0	          0x83f82e	                           cmp eax, 0x2e	       689	utf8.c	FUNCTION_25	IF_1
0x40012e3	            0x740b	                            je 0x40012f0	       689	utf8.c	FUNCTION_25	IF_1
0x40012e5	            0x31c0	                            xor eax, eax	       690	utf8.c	FUNCTION_25	IF_1
0x40012e7	        0x4883c408	                              add rsp, 8	       711	utf8.c	FUNCTION_25
0x40012eb	              0xc3	                                     ret	       711	utf8.c	FUNCTION_25
0x40012ec	         0xf1f4000	                         nop dword [rax]	       711	utf8.c	FUNCTION_25
0x40012f0	          0x4889e7	                            mov rdi, rsp	       691	utf8.c	FUNCTION_25	CALL_2
0x40012f3	      0xe868efffff	                  call sym.next_hfs_char	       691	utf8.c	FUNCTION_25	CALL_2
0x40012f8	          0x83e0df	                     and eax, 0xffffffdf	       698	utf8.c	FUNCTION_25	IF_2
0x40012fb	          0x83f847	                           cmp eax, 0x47	       698	utf8.c	FUNCTION_25	IF_2
0x40012fe	            0x75e5	                           jne 0x40012e5	       698	utf8.c	FUNCTION_25	IF_2
0x4001300	          0x4889e7	                            mov rdi, rsp	       700	utf8.c	FUNCTION_25	CALL_3
0x4001303	      0xe858efffff	                  call sym.next_hfs_char	       700	utf8.c	FUNCTION_25	CALL_3
0x4001308	          0x83e0df	                     and eax, 0xffffffdf	       701	utf8.c	FUNCTION_25	IF_3
0x400130b	          0x83f849	                           cmp eax, 0x49	       701	utf8.c	FUNCTION_25	IF_3
0x400130e	            0x75d5	                           jne 0x40012e5	       701	utf8.c	FUNCTION_25	IF_3
0x4001310	          0x4889e7	                            mov rdi, rsp	       703	utf8.c	FUNCTION_25	CALL_4
0x4001313	      0xe848efffff	                  call sym.next_hfs_char	       703	utf8.c	FUNCTION_25	CALL_4
0x4001318	          0x83e0df	                     and eax, 0xffffffdf	       704	utf8.c	FUNCTION_25	IF_4
0x400131b	          0x83f854	                           cmp eax, 0x54	       704	utf8.c	FUNCTION_25	IF_4
0x400131e	            0x75c5	                           jne 0x40012e5	       704	utf8.c	FUNCTION_25	IF_4
0x4001320	          0x4889e7	                            mov rdi, rsp	       706	utf8.c	FUNCTION_25	CALL_5
0x4001323	      0xe838efffff	                  call sym.next_hfs_char	       706	utf8.c	FUNCTION_25	CALL_5
0x4001328	          0x83f82f	                           cmp eax, 0x2f	       690	utf8.c	FUNCTION_25	IF_1
0x400132b	           0xf95c1	                                setne cl	       690	utf8.c	FUNCTION_25	IF_1
0x400132e	            0x85c0	                           test eax, eax	       690	utf8.c	FUNCTION_25	IF_1
0x4001330	           0xf95c0	                                setne al	       690	utf8.c	FUNCTION_25	IF_1
0x4001333	            0x21c8	                            and eax, ecx	       690	utf8.c	FUNCTION_25	IF_1
0x4001335	          0x83f001	                              xor eax, 1	       690	utf8.c	FUNCTION_25	IF_1
0x4001338	           0xfb6c0	                           movzx eax, al	       690	utf8.c	FUNCTION_25	IF_1
0x400133b	            0xebaa	                           jmp 0x40012e7	       690	utf8.c	FUNCTION_25	IF_1
pick_one_utf8_char	DO,0:FOR,0:IF,9:functions,0:ELSE,5:SWITCH,0:WHILE,0:CALL,0	148
0x4000040	          0x4885f6	                           test rsi, rsi	       128	utf8.c	FUNCTION_4
0x4000043	            0x747b	                            je 0x40000c0	       128	utf8.c	FUNCTION_4
0x4000045	          0x488b0e	                    mov rcx, qword [rsi]	       128	utf8.c	FUNCTION_4
0x4000048	          0x4885c9	                           test rcx, rcx	       130	utf8.c	FUNCTION_4	IF_1
0x400004b	            0x7461	                            je 0x40000ae	       130	utf8.c	FUNCTION_4	IF_1
0x400004d	          0x4c8b07	                     mov r8, qword [rdi]	       119	utf8.c	FUNCTION_4
0x4000050	      0xba01000000	                              mov edx, 1	       135	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x4000055	        0x410fb600	                    movzx eax, byte [r8]	       132	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x4000059	            0x84c0	                             test al, al	       132	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x400005b	            0x7813	                            js 0x4000070	       132	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x400005d	          0x4901d0	                             add r8, rdx	       180	utf8.c	FUNCTION_4
0x4000060	          0x4885f6	                           test rsi, rsi	       181	utf8.c	FUNCTION_4	IF_9
0x4000063	          0x4c8907	                     mov qword [rdi], r8	       180	utf8.c	FUNCTION_4
0x4000066	            0x7406	                            je 0x400006e	       181	utf8.c	FUNCTION_4	IF_9
0x4000068	          0x4829d1	                            sub rcx, rdx	       182	utf8.c	FUNCTION_4	IF_9
0x400006b	          0x48890e	                    mov qword [rsi], rcx	       182	utf8.c	FUNCTION_4	IF_9
0x400006e	            0xf3c3	                                     ret	       184	utf8.c	FUNCTION_4
0x4000070	            0x89c2	                            mov edx, eax	       136	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4000072	          0x83e2e0	                     and edx, 0xffffffe0	       136	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4000075	          0x80fac0	                            cmp dl, 0xc0	       136	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4000078	     0xf84c2000000	                            je 0x4000140	       136	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x400007e	            0x89c2	                            mov edx, eax	       144	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4000080	          0x83e2f0	                     and edx, 0xfffffff0	       144	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4000083	          0x80fae0	                            cmp dl, 0xe0	       144	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4000086	     0xf8404010000	                            je 0x4000190	       144	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x400008c	            0x89c2	                            mov edx, eax	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400008e	          0x83e2f8	                     and edx, 0xfffffff8	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000091	          0x80faf0	                            cmp dl, 0xf0	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000094	            0x7518	                           jne 0x40000ae	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000096	        0x4883f903	                              cmp rcx, 3	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400009a	            0x7612	                           jbe 0x40000ae	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400009c	      0x410fb65001	                movzx edx, byte [r8 + 1]	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40000a1	          0x4189d1	                            mov r9d, edx	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40000a4	        0x4183e1c0	                     and r9d, 0xffffffc0	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40000a8	        0x4180f980	                           cmp r9b, 0x80	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40000ac	            0x7429	                            je 0x40000d7	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40000ae	    0x48c707000000	                      mov qword [rdi], 0	       176	utf8.c	FUNCTION_4	ELSE_5
0x40000b5	            0x31c0	                            xor eax, eax	       177	utf8.c	FUNCTION_4	ELSE_5
0x40000b7	              0xc3	                                     ret	       177	utf8.c	FUNCTION_4	ELSE_5
0x40000b8	     0xf1f84000000	                   nop dword [rax + rax]	       177	utf8.c	FUNCTION_4	ELSE_5
0x40000c0	          0x4c8b07	                     mov r8, qword [rdi]	       119	utf8.c	FUNCTION_4
0x40000c3	      0xb9e7030000	                          mov ecx, 0x3e7	       128	utf8.c	FUNCTION_4
0x40000c8	      0xba01000000	                              mov edx, 1	       135	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x40000cd	        0x410fb600	                    movzx eax, byte [r8]	       132	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x40000d1	            0x84c0	                             test al, al	       132	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x40000d3	            0x7988	                           jns 0x400005d	       132	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x40000d5	            0xeb99	                           jmp 0x4000070	       132	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x40000d7	      0x450fb64802	                movzx r9d, byte [r8 + 2]	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40000dc	          0x4589ca	                           mov r10d, r9d	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40000df	        0x4183e2c0	                    and r10d, 0xffffffc0	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40000e3	        0x4180fa80	                          cmp r10b, 0x80	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40000e7	            0x75c5	                           jne 0x40000ae	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40000e9	      0x450fb65003	               movzx r10d, byte [r8 + 3]	       165	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40000ee	          0x4589d3	                          mov r11d, r10d	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40000f1	        0x4183e3c0	                    and r11d, 0xffffffc0	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40000f5	        0x4180fb80	                          cmp r11b, 0x80	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40000f9	            0x75b3	                           jne 0x40000ae	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40000fb	            0x3cf0	                            cmp al, 0xf0	       165	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40000fd	     0xf8439010000	                            je 0x400023c	       165	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000103	            0x3cf4	                            cmp al, 0xf4	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000105	     0xf8423010000	                            je 0x400022e	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400010b	            0x77a1	                            ja 0x40000ae	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400010d	          0x83e007	                              and eax, 7	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000110	          0x83e23f	                           and edx, 0x3f	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000113	        0x4183e23f	                          and r10d, 0x3f	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000117	          0xc1e20c	                            shl edx, 0xc	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x400011a	          0xc1e012	                           shl eax, 0x12	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x400011d	             0x9d0	                             or eax, edx	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x400011f	          0x4489ca	                            mov edx, r9d	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000122	          0x83e23f	                           and edx, 0x3f	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000125	          0x4409d0	                            or eax, r10d	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000128	          0xc1e206	                              shl edx, 6	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x400012b	             0x9d0	                             or eax, edx	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x400012d	      0xba04000000	                              mov edx, 4	       173	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000132	      0xe926ffffff	                           jmp 0x400005d	       173	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000137	    0x660f1f840000	                    nop word [rax + rax]	       173	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000140	        0x4883f901	                              cmp rcx, 1	       138	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x4000144	     0xf8664ffffff	                           jbe 0x40000ae	       138	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x400014a	      0x450fb64801	                movzx r9d, byte [r8 + 1]	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x400014f	          0x4489ca	                            mov edx, r9d	       138	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x4000152	          0x83e2c0	                     and edx, 0xffffffc0	       138	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x4000155	          0x80fa80	                            cmp dl, 0x80	       138	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x4000158	     0xf8550ffffff	                           jne 0x40000ae	       138	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x400015e	            0x89c2	                            mov edx, eax	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x4000160	          0x83e2fe	                     and edx, 0xfffffffe	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x4000163	          0x80fac0	                            cmp dl, 0xc0	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x4000166	     0xf8442ffffff	                            je 0x40000ae	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x400016c	          0x83e01f	                           and eax, 0x1f	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x400016f	          0xc1e006	                              shl eax, 6	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4000172	            0x89c2	                            mov edx, eax	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4000174	          0x4489c8	                            mov eax, r9d	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4000177	          0x83e03f	                           and eax, 0x3f	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x400017a	             0x9d0	                             or eax, edx	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x400017c	      0xba02000000	                              mov edx, 2	       143	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4000181	      0xe9d7feffff	                           jmp 0x400005d	       143	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4000186	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       143	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4000190	        0x4883f902	                              cmp rcx, 2	       146	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000194	     0xf8614ffffff	                           jbe 0x40000ae	       146	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400019a	      0x410fb65001	                movzx edx, byte [r8 + 1]	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400019f	          0x4189d1	                            mov r9d, edx	       146	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40001a2	        0x4183e1c0	                     and r9d, 0xffffffc0	       146	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40001a6	        0x4180f980	                           cmp r9b, 0x80	       146	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40001aa	     0xf85fefeffff	                           jne 0x40000ae	       146	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40001b0	      0x450fb64802	                movzx r9d, byte [r8 + 2]	       148	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40001b5	          0x4589ca	                           mov r10d, r9d	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40001b8	        0x4183e2c0	                    and r10d, 0xffffffc0	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40001bc	        0x4180fa80	                          cmp r10b, 0x80	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40001c0	     0xf85e8feffff	                           jne 0x40000ae	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40001c6	            0x3ce0	                            cmp al, 0xe0	       148	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40001c8	            0x7452	                            je 0x400021c	       148	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40001ca	            0x3ced	                            cmp al, 0xed	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40001cc	            0x743c	                            je 0x400020a	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40001ce	          0x80fabf	                            cmp dl, 0xbf	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40001d1	            0x7515	                           jne 0x40001e8	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40001d3	            0x3cef	                            cmp al, 0xef	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40001d5	            0x7511	                           jne 0x40001e8	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40001d7	          0x4589ca	                           mov r10d, r9d	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40001da	        0x4183e2fe	                    and r10d, 0xfffffffe	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40001de	        0x4180fabe	                          cmp r10b, 0xbe	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40001e2	     0xf84c6feffff	                            je 0x40000ae	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40001e8	          0xc1e00c	                            shl eax, 0xc	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x40001eb	          0x83e23f	                           and edx, 0x3f	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x40001ee	      0x2500f00000	                         and eax, 0xf000	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x40001f3	          0xc1e206	                              shl edx, 6	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x40001f6	             0x9c2	                             or edx, eax	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x40001f8	          0x4489c8	                            mov eax, r9d	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x40001fb	          0x83e03f	                           and eax, 0x3f	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x40001fe	             0x9d0	                             or eax, edx	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4000200	      0xba03000000	                              mov edx, 3	       159	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4000205	      0xe953feffff	                           jmp 0x400005d	       159	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x400020a	          0x4189d2	                           mov r10d, edx	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400020d	        0x4183e2e0	                    and r10d, 0xffffffe0	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000211	        0x4180faa0	                          cmp r10b, 0xa0	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000215	            0x75d1	                           jne 0x40001e8	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000217	      0xe992feffff	                           jmp 0x40000ae	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400021c	          0x4189d2	                           mov r10d, edx	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400021f	        0x4183e2e0	                    and r10d, 0xffffffe0	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000223	        0x4180fa80	                          cmp r10b, 0x80	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000227	            0x75bf	                           jne 0x40001e8	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000229	      0xe980feffff	                           jmp 0x40000ae	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400022e	          0x80fa8f	                            cmp dl, 0x8f	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000231	     0xf86d6feffff	                           jbe 0x400010d	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000237	      0xe972feffff	                           jmp 0x40000ae	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400023c	          0x4189d3	                           mov r11d, edx	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400023f	        0x4183e3f0	                    and r11d, 0xfffffff0	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000243	        0x4180fb80	                          cmp r11b, 0x80	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000247	     0xf85c0feffff	                           jne 0x400010d	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400024d	      0xe95cfeffff	                           jmp 0x40000ae	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
strbuf_utf8_align	DO,0:FOR,0:IF,4:functions,0:ELSE,2:SWITCH,0:WHILE,0:CALL,6	77
0x4001380	            0x4156	                                push r14	       726	utf8.c	FUNCTION_27
0x4001382	            0x4155	                                push r13	       726	utf8.c	FUNCTION_27
0x4001384	          0x4989fd	                            mov r13, rdi	       726	utf8.c	FUNCTION_27
0x4001387	            0x4154	                                push r12	       726	utf8.c	FUNCTION_27
0x4001389	              0x55	                                push rbp	       726	utf8.c	FUNCTION_27
0x400138a	          0x4889cf	                            mov rdi, rcx	       727	utf8.c	FUNCTION_27	CALL_1
0x400138d	              0x53	                                push rbx	       726	utf8.c	FUNCTION_27
0x400138e	          0x4889cd	                            mov rbp, rcx	       726	utf8.c	FUNCTION_27
0x4001391	          0x4189d4	                           mov r12d, edx	       726	utf8.c	FUNCTION_27
0x4001394	          0x4189f6	                           mov r14d, esi	       726	utf8.c	FUNCTION_27
0x4001397	      0xe800000000	                          call 0x400139c	       727	utf8.c	FUNCTION_27	CALL_1
0x400139c	            0x31d2	                            xor edx, edx	       728	utf8.c	FUNCTION_27	CALL_2
0x400139e	          0x4889c3	                            mov rbx, rax	       727	utf8.c	FUNCTION_27	CALL_1
0x40013a1	            0x89c6	                            mov esi, eax	       728	utf8.c	FUNCTION_27	CALL_2
0x40013a3	          0x4889ef	                            mov rdi, rbp	       728	utf8.c	FUNCTION_27	CALL_2
0x40013a6	      0xe800000000	                          call 0x40013ab	       728	utf8.c	FUNCTION_27	CALL_2
0x40013ab	            0x29c3	                            sub ebx, eax	       729	utf8.c	FUNCTION_27
0x40013ad	          0x4439e0	                           cmp eax, r12d	       731	utf8.c	FUNCTION_27	IF_1
0x40013b0	            0x731e	                           jae 0x40013d0	       731	utf8.c	FUNCTION_27	IF_1
0x40013b2	          0x4585f6	                         test r14d, r14d	       736	utf8.c	FUNCTION_27	IF_2
0x40013b5	            0x7459	                            je 0x4001410	       736	utf8.c	FUNCTION_27	IF_2
0x40013b7	        0x4183fe01	                             cmp r14d, 1	       738	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x40013bb	            0x7463	                            je 0x4001420	       738	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x40013bd	        0x4183fe02	                             cmp r14d, 2	       741	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x40013c1	            0x742d	                            je 0x40013f0	       741	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x40013c3	              0x5b	                                 pop rbx	       743	utf8.c	FUNCTION_27
0x40013c4	              0x5d	                                 pop rbp	       743	utf8.c	FUNCTION_27
0x40013c5	            0x415c	                                 pop r12	       743	utf8.c	FUNCTION_27
0x40013c7	            0x415d	                                 pop r13	       743	utf8.c	FUNCTION_27
0x40013c9	            0x415e	                                 pop r14	       743	utf8.c	FUNCTION_27
0x40013cb	              0xc3	                                     ret	       743	utf8.c	FUNCTION_27
0x40013cc	         0xf1f4000	                         nop dword [rax]	       743	utf8.c	FUNCTION_27
0x40013d0	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_32	CALL_2
0x40013d3	      0xe800000000	                          call 0x40013d8	       279	strbuf.h	FUNCTION_32	CALL_2
0x40013d8	              0x5b	                                 pop rbx	       743	utf8.c	FUNCTION_27
0x40013d9	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_32	CALL_2
0x40013dc	          0x4c89ef	                            mov rdi, r13	       279	strbuf.h	FUNCTION_32	CALL_2
0x40013df	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_32	CALL_2
0x40013e2	              0x5d	                                 pop rbp	       743	utf8.c	FUNCTION_27
0x40013e3	            0x415c	                                 pop r12	       743	utf8.c	FUNCTION_27
0x40013e5	            0x415d	                                 pop r13	       743	utf8.c	FUNCTION_27
0x40013e7	            0x415e	                                 pop r14	       743	utf8.c	FUNCTION_27
0x40013e9	      0xe900000000	                           jmp 0x40013ee	       279	strbuf.h	FUNCTION_32	CALL_2
0x40013ee	            0x6690	                                     nop	       279	strbuf.h	FUNCTION_32	CALL_2
0x40013f0	        0x428d1423	                    lea edx, [rbx + r12]	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x40013f4	          0x4889e9	                            mov rcx, rbp	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x40013f7	      0xbe00000000	                              mov esi, 0	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x40013fc	              0x5b	                                 pop rbx	       743	utf8.c	FUNCTION_27
0x40013fd	          0x4c89ef	                            mov rdi, r13	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x4001400	            0x31c0	                            xor eax, eax	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x4001402	              0x5d	                                 pop rbp	       743	utf8.c	FUNCTION_27
0x4001403	            0x415c	                                 pop r12	       743	utf8.c	FUNCTION_27
0x4001405	            0x415d	                                 pop r13	       743	utf8.c	FUNCTION_27
0x4001407	            0x415e	                                 pop r14	       743	utf8.c	FUNCTION_27
0x4001409	      0xe900000000	                           jmp 0x400140e	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x400140e	            0x6690	                                     nop	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x4001410	        0x428d1423	                    lea edx, [rbx + r12]	       737	utf8.c	FUNCTION_27	CALL_4
0x4001414	          0x4889e9	                            mov rcx, rbp	       737	utf8.c	FUNCTION_27	CALL_4
0x4001417	      0xbe00000000	                              mov esi, 0	       737	utf8.c	FUNCTION_27	CALL_4
0x400141c	            0xebde	                           jmp 0x40013fc	       737	utf8.c	FUNCTION_27	CALL_4
0x400141e	            0x6690	                                     nop	       737	utf8.c	FUNCTION_27	CALL_4
0x4001420	        0x468d0423	                    lea r8d, [rbx + r12]	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x4001424	          0x4489e2	                           mov edx, r12d	       739	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x4001427	          0x4989e9	                             mov r9, rbp	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x400142a	              0x5b	                                 pop rbx	       743	utf8.c	FUNCTION_27
0x400142b	          0x4c89ef	                            mov rdi, r13	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x400142e	            0x29c2	                            sub edx, eax	       739	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x4001430	      0xb900000000	                              mov ecx, 0	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x4001435	              0x5d	                                 pop rbp	       743	utf8.c	FUNCTION_27
0x4001436	            0x415c	                                 pop r12	       743	utf8.c	FUNCTION_27
0x4001438	            0x415d	                                 pop r13	       743	utf8.c	FUNCTION_27
0x400143a	            0x415e	                                 pop r14	       743	utf8.c	FUNCTION_27
0x400143c	            0xd1ea	                              shr edx, 1	       739	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x400143e	      0xbe00000000	                              mov esi, 0	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x4001443	            0x31c0	                            xor eax, eax	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x4001445	          0x4129d0	                            sub r8d, edx	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x4001448	      0xe900000000	            jmp sym.strbuf_setlen.part.2	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
strbuf_add_wrapped_text	DO,0:FOR,1:IF,13:functions,0:ELSE,6:SWITCH,0:WHILE,1:CALL,12	265
0x4000600	            0x4157	                                push r15	       266	utf8.c	FUNCTION_10
0x4000602	            0x4156	                                push r14	       266	utf8.c	FUNCTION_10
0x4000604	          0x4989ff	                            mov r15, rdi	       266	utf8.c	FUNCTION_10
0x4000607	            0x4155	                                push r13	       266	utf8.c	FUNCTION_10
0x4000609	            0x4154	                                push r12	       266	utf8.c	FUNCTION_10
0x400060b	              0x55	                                push rbp	       266	utf8.c	FUNCTION_10
0x400060c	              0x53	                                push rbx	       266	utf8.c	FUNCTION_10
0x400060d	            0x89d3	                            mov ebx, edx	       266	utf8.c	FUNCTION_10
0x400060f	        0x4883ec38	                           sub rsp, 0x38	       266	utf8.c	FUNCTION_10
0x4000613	          0x4585c0	                           test r8d, r8d	       271	utf8.c	FUNCTION_10	IF_1
0x4000616	        0x894c2404	                mov dword [rsp + 4], ecx	       266	utf8.c	FUNCTION_10
0x400061a	        0x488b4f08	                mov rcx, qword [rdi + 8]	       269	utf8.c	FUNCTION_10
0x400061e	      0x4889742428	             mov qword [rsp + 0x28], rsi	       266	utf8.c	FUNCTION_10
0x4000623	        0x44890424	                    mov dword [rsp], r8d	       266	utf8.c	FUNCTION_10
0x4000627	      0x4889742418	             mov qword [rsp + 0x18], rsi	       268	utf8.c	FUNCTION_10
0x400062c	      0x48894c2420	             mov qword [rsp + 0x20], rcx	       269	utf8.c	FUNCTION_10
0x4000631	     0xf8e29030000	                           jle 0x4000960	       271	utf8.c	FUNCTION_10	IF_1
0x4000637	            0x89d0	                            mov eax, edx	       281	utf8.c	FUNCTION_10	IF_2
0x4000639	    0xc744240c0100	                mov dword [rsp + 0xc], 1	       281	utf8.c	FUNCTION_10	IF_2
0x4000641	          0x4989f4	                            mov r12, rsi	       281	utf8.c	FUNCTION_10	IF_2
0x4000644	            0xf7d8	                                 neg eax	       281	utf8.c	FUNCTION_10	IF_2
0x4000646	            0x85d2	                           test edx, edx	       281	utf8.c	FUNCTION_10	IF_2
0x4000648	          0x4889fd	                            mov rbp, rdi	       281	utf8.c	FUNCTION_10	IF_2
0x400064b	           0xf49c2	                         cmovns eax, edx	       281	utf8.c	FUNCTION_10	IF_2
0x400064e	        0x89542414	             mov dword [rsp + 0x14], edx	       281	utf8.c	FUNCTION_10	IF_2
0x4000652	        0x89442410	             mov dword [rsp + 0x10], eax	       281	utf8.c	FUNCTION_10	IF_2
0x4000656	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       279	utf8.c	FUNCTION_10
0x400065a	      0x448b742410	           mov r14d, dword [rsp + 0x10] 	       326	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x400065f	    0x41bf00000000	                             mov r15d, 0	       279	utf8.c	FUNCTION_10
0x4000665	          0x4c89e6	                            mov rsi, r12	       326	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x4000668	            0x85c0	                           test eax, eax	       279	utf8.c	FUNCTION_10
0x400066a	        0x89442408	                mov dword [rsp + 8], eax	       326	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x400066e	        0x4d0f48fc	                          cmovs r15, r12	       279	utf8.c	FUNCTION_10
0x4000672	    0x660f1f440000	                    nop word [rax + rax]	       279	utf8.c	FUNCTION_10
0x4000678	           0xfb61e	                   movzx ebx, byte [rsi]	        15	utf8.c	IF_1	FUNCTION_1
0x400067b	          0x80fb1b	                            cmp bl, 0x1b	        15	utf8.c	IF_1	FUNCTION_1
0x400067e	            0x747f	                            je 0x40006ff	        15	utf8.c	IF_1	FUNCTION_1
0x4000680	            0x84db	                             test bl, bl	       293	utf8.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x4000682	     0xf8448010000	                            je 0x40007d0	       293	utf8.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x4000688	           0xfb6c3	                           movzx eax, bl	       293	utf8.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x400068b	    0xf68000000000	                      test byte [rax], 1	       293	utf8.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x4000692	     0xf8488010000	                            je 0x4000820	       293	utf8.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x4000698	          0x4d85ff	                           test r15, r15	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x400069b	            0x740a	                            je 0x40006a7	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x400069d	        0x443b3424	                   cmp r14d, dword [rsp]	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x40006a1	     0xf8fb9000000	                            jg 0x4000760	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x40006a7	            0x84db	                             test bl, bl	       296	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x40006a9	        0x410f94c5	                               sete r13b	       296	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x40006ad	          0x4d85ff	                           test r15, r15	       298	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_6
0x40006b0	     0xf848a020000	                            je 0x4000940	       298	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_6
0x40006b6	          0x4889f2	                            mov rdx, rsi	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x40006b9	          0x4889ef	                            mov rdi, rbp	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x40006bc	          0x4c89fe	                            mov rsi, r15	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x40006bf	          0x4c29fa	                            sub rdx, r15	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x40006c2	      0xe800000000	                          call 0x40006c7	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x40006c7	          0x4584ed	                         test r13b, r13b	       303	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_7
0x40006ca	     0xf8539010000	                           jne 0x4000809	       303	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_7
0x40006d0	          0x80fb09	                               cmp bl, 9	       306	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_8
0x40006d3	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	       305	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x40006d8	     0xf84e2010000	                            je 0x40008c0	       306	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_8
0x40006de	          0x80fb0a	                             cmp bl, 0xa	       308	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9
0x40006e1	          0x4c89fe	                            mov rsi, r15	       305	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x40006e4	     0xf84e6010000	                            je 0x40008d0	       308	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9
0x40006ea	        0x4883c601	                              add rsi, 1	       341	utf8.c	FUNCTION_10	FOR_1	ELSE_6
0x40006ee	        0x4183c601	                             add r14d, 1	       340	utf8.c	FUNCTION_10	FOR_1	ELSE_6
0x40006f2	      0x4889742428	             mov qword [rsp + 0x28], rsi	       341	utf8.c	FUNCTION_10	FOR_1	ELSE_6
0x40006f7	           0xfb61e	                   movzx ebx, byte [rsi]	        15	utf8.c	IF_1	FUNCTION_1
0x40006fa	          0x80fb1b	                            cmp bl, 0x1b	        15	utf8.c	IF_1	FUNCTION_1
0x40006fd	            0x7581	                           jne 0x4000680	        15	utf8.c	IF_1	FUNCTION_1
0x40006ff	          0x4889f7	                            mov rdi, rsi	        15	utf8.c	IF_1	FUNCTION_1
0x4000702	      0xe879fcffff	call sym.display_mode_esc_sequence_len.part.4	        15	utf8.c	IF_1	FUNCTION_1
0x4000707	          0x4885c0	                           test rax, rax	       289	utf8.c	FUNCTION_10	FOR_1	WHILE_1	CALL_2
0x400070a	     0xf8478ffffff	                            je 0x4000688	       289	utf8.c	FUNCTION_10	FOR_1	WHILE_1	CALL_2
0x4000710	          0x4801c6	                            add rsi, rax	       290	utf8.c	FUNCTION_10	FOR_1	WHILE_1
0x4000713	      0x4889742428	             mov qword [rsp + 0x28], rsi	       290	utf8.c	FUNCTION_10	FOR_1	WHILE_1
0x4000718	      0xe95bffffff	                           jmp 0x4000678	       290	utf8.c	FUNCTION_10	FOR_1	WHILE_1
0x400071d	        0x488b4500	                    mov rax, qword [rbp]	       290	utf8.c	FUNCTION_10	FOR_1	WHILE_1
0x4000721	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_29
0x4000724	     0xf85c2020000	                           jne 0x40009ec	       141	strbuf.h	FUNCTION_29
0x400072a	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_31	CALL_2
0x400072f	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_31	CALL_2
0x4000732	      0xe800000000	                          call 0x4000737	       228	strbuf.h	FUNCTION_31	CALL_2
0x4000737	        0x488b5508	                mov rdx, qword [rbp + 8]	       228	strbuf.h	FUNCTION_31	CALL_2
0x400073b	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_31
0x400073f	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_31
0x4000743	          0x4989df	                            mov r15, rbx	       309	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9
0x4000746	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_31
0x400074a	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_31
0x400074e	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_31
0x4000752	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_31
0x4000756	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_31
0x400075a	    0x660f1f440000	                    nop word [rax + rax]	       230	strbuf.h	FUNCTION_31
0x4000760	        0x488b4500	                    mov rax, qword [rbp]	       230	strbuf.h	FUNCTION_31
0x4000764	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_29
0x4000767	     0xf8533010000	                           jne 0x40008a0	       141	strbuf.h	FUNCTION_29
0x400076d	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_31	CALL_2
0x4000772	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_31	CALL_2
0x4000775	      0xe800000000	                          call 0x400077a	       228	strbuf.h	FUNCTION_31	CALL_2
0x400077a	        0x488b5508	                mov rdx, qword [rbp + 8]	       228	strbuf.h	FUNCTION_31	CALL_2
0x400077e	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_31
0x4000782	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_31
0x4000786	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_31
0x400078a	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_31
0x400078e	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_31
0x4000792	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_31
0x4000796	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_31
0x400079a	        0x410fb607	                   movzx eax, byte [r15]	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0x400079e	    0x440fb6a00000	                  movzx r12d, byte [rax]	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0x40007a6	        0x8b442404	                mov eax, dword [rsp + 4]	       327	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x40007aa	          0x4189c6	                           mov r14d, eax	       327	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x40007ad	        0x89442408	                mov dword [rsp + 8], eax	       327	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x40007b1	        0x4183e401	                             and r12d, 1	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0x40007b5	          0x4d01fc	                            add r12, r15	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0x40007b8	          0x4531ff	                          xor r15d, r15d	       326	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x40007bb	      0x4c89642428	             mov qword [rsp + 0x28], r12	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0x40007c0	          0x4c89e6	                            mov rsi, r12	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0x40007c3	      0xe9b0feffff	                           jmp 0x4000678	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0x40007c8	     0xf1f84000000	                   nop dword [rax + rax]	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0x40007d0	        0x443b3424	                   cmp r14d, dword [rsp]	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x40007d4	        0x410f9ec5	                              setle r13b	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x40007d8	          0x4d85ff	                           test r15, r15	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x40007db	           0xf94c0	                                 sete al	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x40007de	          0x4108c5	                             or r13b, al	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x40007e1	     0xf8479ffffff	                            je 0x4000760	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x40007e7	          0x4939f4	                            cmp r12, rsi	       296	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x40007ea	            0x741d	                            je 0x4000809	       296	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x40007ec	          0x4d85ff	                           test r15, r15	       298	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_6
0x40007ef	     0xf844b010000	                            je 0x4000940	       298	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_6
0x40007f5	          0x4d89fe	                            mov r14, r15	       298	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_6
0x40007f8	          0x4889f2	                            mov rdx, rsi	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x40007fb	          0x4889ef	                            mov rdi, rbp	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x40007fe	          0x4c29f2	                            sub rdx, r14	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x4000801	          0x4c89f6	                            mov rsi, r14	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x4000804	      0xe800000000	                          call 0x4000809	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x4000809	        0x4883c438	                           add rsp, 0x38	       344	utf8.c	FUNCTION_10
0x400080d	              0x5b	                                 pop rbx	       344	utf8.c	FUNCTION_10
0x400080e	              0x5d	                                 pop rbp	       344	utf8.c	FUNCTION_10
0x400080f	            0x415c	                                 pop r12	       344	utf8.c	FUNCTION_10
0x4000811	            0x415d	                                 pop r13	       344	utf8.c	FUNCTION_10
0x4000813	            0x415e	                                 pop r14	       344	utf8.c	FUNCTION_10
0x4000815	            0x415f	                                 pop r15	       344	utf8.c	FUNCTION_10
0x4000817	              0xc3	                                     ret	       344	utf8.c	FUNCTION_10
0x4000818	     0xf1f84000000	                   nop dword [rax + rax]	       344	utf8.c	FUNCTION_10
0x4000820	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       331	utf8.c	FUNCTION_10	FOR_1	IF_12
0x4000824	            0x85c0	                           test eax, eax	       331	utf8.c	FUNCTION_10	FOR_1	IF_12
0x4000826	     0xf84befeffff	                            je 0x40006ea	       331	utf8.c	FUNCTION_10	FOR_1	IF_12
0x400082c	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	       332	utf8.c	FUNCTION_10	FOR_1	IF_12	CALL_11
0x4000831	            0x31f6	                            xor esi, esi	       332	utf8.c	FUNCTION_10	FOR_1	IF_12	CALL_11
0x4000833	      0xe800000000	                          call 0x4000838	       332	utf8.c	FUNCTION_10	FOR_1	IF_12	CALL_11
0x4000838	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       333	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13
0x400083d	          0x4101c6	                           add r14d, eax	       332	utf8.c	FUNCTION_10	FOR_1	IF_12	CALL_11
0x4000840	          0x4885f6	                           test rsi, rsi	       333	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13
0x4000843	     0xf852ffeffff	                           jne 0x4000678	       333	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13
0x4000849	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       335	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13
0x400084e	      0x4889442428	             mov qword [rsp + 0x28], rax	       335	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13
0x4000853	        0x488b4500	                    mov rax, qword [rbp]	       162	strbuf.h	FUNCTION_30	IF_1
0x4000857	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_30	IF_1
0x400085b	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_30	IF_1
0x400085f	      0x4839442420	            cmp qword [rsp + 0x20], rax 	       162	strbuf.h	FUNCTION_30	IF_1
0x4000864	     0xf87b1010000	                            ja 0x4000a1b	       162	strbuf.h	FUNCTION_30	IF_1
0x400086a	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       165	strbuf.h	FUNCTION_30	IF_2
0x400086e	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       164	strbuf.h	FUNCTION_30
0x4000873	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_30	IF_2
0x4000879	        0x48894d08	                mov qword [rbp + 8], rcx	       164	strbuf.h	FUNCTION_30
0x400087d	     0xf8485010000	                            je 0x4000a08	       165	strbuf.h	FUNCTION_30	IF_2
0x4000883	        0xc6040800	                 mov byte [rax + rcx], 0	       166	strbuf.h	FUNCTION_30	IF_2
0x4000887	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       166	strbuf.h	FUNCTION_30	IF_2
0x400088c	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       166	strbuf.h	FUNCTION_30	IF_2
0x4000894	          0x4989cc	                            mov r12, rcx	       166	strbuf.h	FUNCTION_30	IF_2
0x4000897	      0xe9bafdffff	                           jmp 0x4000656	       166	strbuf.h	FUNCTION_30	IF_2
0x400089c	         0xf1f4000	                         nop dword [rax]	       166	strbuf.h	FUNCTION_30	IF_2
0x40008a0	        0x488b5508	                mov rdx, qword [rbp + 8]	       141	strbuf.h	FUNCTION_29
0x40008a4	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_31	IF_1	CALL_1
0x40008a8	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_31	IF_1	CALL_1
0x40008ab	     0xf85cdfeffff	                           jne 0x400077e	       227	strbuf.h	FUNCTION_31	IF_1	CALL_1
0x40008b1	      0xe9b7feffff	                           jmp 0x400076d	       227	strbuf.h	FUNCTION_31	IF_1	CALL_1
0x40008b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       227	strbuf.h	FUNCTION_31	IF_1	CALL_1
0x40008c0	        0x4183ce07	                              or r14d, 7	       307	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_8
0x40008c4	          0x4c89fe	                            mov rsi, r15	       305	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x40008c7	      0xe91efeffff	                           jmp 0x40006ea	       305	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x40008cc	         0xf1f4000	                         nop dword [rax]	       305	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x40008d0	      0x410fb64701	               movzx eax, byte [r15 + 1]	       310	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10
0x40008d5	        0x498d5f01	                      lea rbx, [r15 + 1]	       309	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9
0x40008d9	            0x3c0a	                             cmp al, 0xa	       310	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10
0x40008db	     0xf843cfeffff	                            je 0x400071d	       310	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10
0x40008e1	    0xf68000000000	                      test byte [rax], 6	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11	CALL_7
0x40008e8	          0x4989df	                            mov r15, rbx	       309	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9
0x40008eb	     0xf846ffeffff	                            je 0x4000760	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11	CALL_7
0x40008f1	        0x488b4500	                    mov rax, qword [rbp]	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11	CALL_7
0x40008f5	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_29
0x40008f8	     0xf84d8000000	                            je 0x40009d6	       141	strbuf.h	FUNCTION_29
0x40008fe	        0x488b5508	                mov rdx, qword [rbp + 8]	       141	strbuf.h	FUNCTION_29
0x4000902	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_31	IF_1	CALL_1
0x4000906	          0x4839d0	                            cmp rax, rdx	       227	strbuf.h	FUNCTION_31	IF_1	CALL_1
0x4000909	     0xf84c7000000	                            je 0x40009d6	       227	strbuf.h	FUNCTION_31	IF_1	CALL_1
0x400090f	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       229	strbuf.h	FUNCTION_31
0x4000913	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_31
0x4000917	          0x4989df	                            mov r15, rbx	       309	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9
0x400091a	        0x48894d08	                mov qword [rbp + 8], rcx	       229	strbuf.h	FUNCTION_31
0x400091e	        0xc6041020	              mov byte [rax + rdx], 0x20	       229	strbuf.h	FUNCTION_31
0x4000922	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       230	strbuf.h	FUNCTION_31
0x4000926	        0x488b4508	                mov rax, qword [rbp + 8]	       230	strbuf.h	FUNCTION_31
0x400092a	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_31
0x400092e	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       230	strbuf.h	FUNCTION_31
0x4000933	      0xe9b2fdffff	                           jmp 0x40006ea	       230	strbuf.h	FUNCTION_31
0x4000938	     0xf1f84000000	                   nop dword [rax + rax]	       230	strbuf.h	FUNCTION_31
0x4000940	      0x4863542408	            movsxd rdx, dword [rsp + 8] 	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x4000945	      0xbe20000000	                           mov esi, 0x20	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x400094a	          0x4889ef	                            mov rdi, rbp	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x400094d	          0x4d89e7	                            mov r15, r12	       295	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x4000950	      0xe800000000	                          call 0x4000955	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x4000955	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x400095a	      0xe957fdffff	                           jmp 0x40006b6	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x400095f	              0x90	                                     nop	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x4000960	            0x85d2	                           test edx, edx	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x4000962	      0xb800000000	                              mov eax, 0	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x4000967	           0xf48d8	                          cmovs ebx, eax	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x400096a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       247	utf8.c	FUNCTION_9	WHILE_1
0x400096f	          0x803800	                       cmp byte [rax], 0	       247	utf8.c	FUNCTION_9	WHILE_1
0x4000972	     0xf8491feffff	                            je 0x4000809	       247	utf8.c	FUNCTION_9	WHILE_1
0x4000978	      0x4c8b642418	            mov r12, qword [rsp + 0x18] 	       247	utf8.c	FUNCTION_9	WHILE_1
0x400097d	      0x448b6c2404	               mov r13d, dword [rsp + 4]	       247	utf8.c	FUNCTION_9	WHILE_1
0x4000982	            0xeb07	                           jmp 0x400098b	       247	utf8.c	FUNCTION_9	WHILE_1
0x4000984	         0xf1f4000	                         nop dword [rax]	       247	utf8.c	FUNCTION_9	WHILE_1
0x4000988	          0x4989ec	                            mov r12, rbp	       247	utf8.c	FUNCTION_9	WHILE_1
0x400098b	      0xbe0a000000	                            mov esi, 0xa	       248	utf8.c	FUNCTION_9	WHILE_1	CALL_1
0x4000990	          0x4c89e7	                            mov rdi, r12	       248	utf8.c	FUNCTION_9	WHILE_1	CALL_1
0x4000993	      0xe800000000	                          call 0x4000998	       248	utf8.c	FUNCTION_9	WHILE_1	CALL_1
0x4000998	          0x4889c5	                            mov rbp, rax	       248	utf8.c	FUNCTION_9	WHILE_1	CALL_1
0x400099b	            0x31c0	                            xor eax, eax	       250	utf8.c	FUNCTION_9	WHILE_1	IF_2
0x400099d	          0x4863d3	                         movsxd rdx, ebx	       251	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x40009a0	        0x807d000a	                     cmp byte [rbp], 0xa	       250	utf8.c	FUNCTION_9	WHILE_1	IF_2
0x40009a4	      0xbe20000000	                           mov esi, 0x20	       251	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x40009a9	          0x4c89ff	                            mov rdi, r15	       251	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x40009ac	          0x4489eb	                           mov ebx, r13d	       254	utf8.c	FUNCTION_9	WHILE_1
0x40009af	           0xf94c0	                                 sete al	       250	utf8.c	FUNCTION_9	WHILE_1	IF_2
0x40009b2	          0x4801c5	                            add rbp, rax	       250	utf8.c	FUNCTION_9	WHILE_1	IF_2
0x40009b5	      0xe800000000	                          call 0x40009ba	       251	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x40009ba	          0x4889ea	                            mov rdx, rbp	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_3
0x40009bd	          0x4c89e6	                            mov rsi, r12	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_3
0x40009c0	          0x4c89ff	                            mov rdi, r15	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_3
0x40009c3	          0x4c29e2	                            sub rdx, r12	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_3
0x40009c6	      0xe800000000	                          call 0x40009cb	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_3
0x40009cb	        0x807d0000	                       cmp byte [rbp], 0	       247	utf8.c	FUNCTION_9	WHILE_1
0x40009cf	            0x75b7	                           jne 0x4000988	       247	utf8.c	FUNCTION_9	WHILE_1
0x40009d1	      0xe933feffff	                           jmp 0x4000809	       247	utf8.c	FUNCTION_9	WHILE_1
0x40009d6	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_31	CALL_2
0x40009db	          0x4889ef	                            mov rdi, rbp	       228	strbuf.h	FUNCTION_31	CALL_2
0x40009de	      0xe800000000	                          call 0x40009e3	       228	strbuf.h	FUNCTION_31	CALL_2
0x40009e3	        0x488b5508	                mov rdx, qword [rbp + 8]	       228	strbuf.h	FUNCTION_31	CALL_2
0x40009e7	      0xe923ffffff	                           jmp 0x400090f	       228	strbuf.h	FUNCTION_31	CALL_2
0x40009ec	        0x488b5508	                mov rdx, qword [rbp + 8]	       141	strbuf.h	FUNCTION_29
0x40009f0	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_31	IF_1	CALL_1
0x40009f4	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_31	IF_1	CALL_1
0x40009f7	     0xf853efdffff	                           jne 0x400073b	       227	strbuf.h	FUNCTION_31	IF_1	CALL_1
0x40009fd	      0xe928fdffff	                           jmp 0x400072a	       227	strbuf.h	FUNCTION_31	IF_1	CALL_1
0x4000a02	    0x660f1f440000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_31	IF_1	CALL_1
0x4000a08	    0x803d00000000	                cmp byte [0x04000a0f], 0	       168	strbuf.h	FUNCTION_30	CALL_2
0x4000a0f	            0x7516	                           jne 0x4000a27	       168	strbuf.h	FUNCTION_30	CALL_2
0x4000a11	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       268	utf8.c	FUNCTION_10
0x4000a16	      0xe971feffff	                           jmp 0x400088c	       268	utf8.c	FUNCTION_10
0x4000a1b	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_30	CALL_1
0x4000a20	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_30	CALL_1
0x4000a22	      0xe800000000	                          call 0x4000a27	       163	strbuf.h	FUNCTION_30	CALL_1
0x4000a27	      0xe800000000	                          call 0x4000a2c	       163	strbuf.h	FUNCTION_30	CALL_1
reencode_string_iconv	DO,0:FOR,0:IF,3:functions,0:ELSE,1:SWITCH,0:WHILE,1:CALL,4	71
0x4000e80	            0x4156	                                push r14	       474	utf8.c	FUNCTION_17
0x4000e82	            0x4155	                                push r13	       474	utf8.c	FUNCTION_17
0x4000e84	          0x4989ce	                            mov r14, rcx	       474	utf8.c	FUNCTION_17
0x4000e87	            0x4154	                                push r12	       474	utf8.c	FUNCTION_17
0x4000e89	              0x55	                                push rbp	       474	utf8.c	FUNCTION_17
0x4000e8a	          0x4989d5	                            mov r13, rdx	       474	utf8.c	FUNCTION_17
0x4000e8d	              0x53	                                push rbx	       474	utf8.c	FUNCTION_17
0x4000e8e	          0x4889fb	                            mov rbx, rdi	       474	utf8.c	FUNCTION_17
0x4000e91	        0x488d7e01	                      lea rdi, [rsi + 1]	       481	utf8.c	FUNCTION_17	CALL_1
0x4000e95	        0x4883ec30	                           sub rsp, 0x30	       474	utf8.c	FUNCTION_17
0x4000e99	      0x4889742408	                mov qword [rsp + 8], rsi	       474	utf8.c	FUNCTION_17
0x4000e9e	      0x4889742410	             mov qword [rsp + 0x10], rsi	       479	utf8.c	FUNCTION_17
0x4000ea3	    0x64488b042528	                mov rax, qword fs:[0x28]	       474	utf8.c	FUNCTION_17
0x4000eac	      0x4889442428	             mov qword [rsp + 0x28], rax	       474	utf8.c	FUNCTION_17
0x4000eb1	            0x31c0	                            xor eax, eax	       474	utf8.c	FUNCTION_17
0x4000eb3	      0xe800000000	                          call 0x4000eb8	       481	utf8.c	FUNCTION_17	CALL_1
0x4000eb8	      0x48895c2420	             mov qword [rsp + 0x20], rbx	       483	utf8.c	FUNCTION_17
0x4000ebd	          0x4989c4	                            mov r12, rax	       481	utf8.c	FUNCTION_17	CALL_1
0x4000ec0	      0x4889442418	             mov qword [rsp + 0x18], rax	       482	utf8.c	FUNCTION_17
0x4000ec5	            0xeb4b	                           jmp 0x4000f12	       482	utf8.c	FUNCTION_17
0x4000ec7	    0x660f1f840000	                    nop word [rax + rax]	       482	utf8.c	FUNCTION_17
0x4000ed0	      0xe800000000	                          call 0x4000ed5	       490	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x4000ed5	          0x833807	                      cmp dword [rax], 7	       490	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x4000ed8	     0xf8592000000	                           jne 0x4000f70	       490	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x4000ede	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       499	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4000ee3	      0x488b442408	                mov rax, qword [rsp + 8]	       500	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4000ee8	          0x4c89e7	                            mov rdi, r12	       501	utf8.c	FUNCTION_17	WHILE_1	IF_1	CALL_4
0x4000eeb	          0x4c29e3	                            sub rbx, r12	       499	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4000eee	      0x488d6c4320	          lea rbp, [rbx + rax*2 + 0x20] 	       500	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4000ef3	          0x4889ee	                            mov rsi, rbp	       501	utf8.c	FUNCTION_17	WHILE_1	IF_1	CALL_4
0x4000ef6	      0xe800000000	                          call 0x4000efb	       501	utf8.c	FUNCTION_17	WHILE_1	IF_1	CALL_4
0x4000efb	          0x4989c4	                            mov r12, rax	       501	utf8.c	FUNCTION_17	WHILE_1	IF_1	CALL_4
0x4000efe	        0x488d0418	                    lea rax, [rax + rbx]	       502	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4000f02	          0x48f7d3	                                 not rbx	       503	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4000f05	          0x4801eb	                            add rbx, rbp	       503	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4000f08	      0x4889442418	             mov qword [rsp + 0x18], rax	       502	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4000f0d	      0x48895c2410	             mov qword [rsp + 0x10], rbx	       503	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4000f12	      0x4c8d442410	                    lea r8, [rsp + 0x10]	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x4000f17	      0x488d4c2418	                   lea rcx, [rsp + 0x18]	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x4000f1c	      0x488d542408	                      lea rdx, [rsp + 8]	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x4000f21	      0x488d742420	                   lea rsi, [rsp + 0x20]	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x4000f26	          0x4c89ef	                            mov rdi, r13	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x4000f29	      0xe800000000	                          call 0x4000f2e	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x4000f2e	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       488	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4000f32	            0x749c	                            je 0x4000ed0	       488	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4000f34	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       506	utf8.c	FUNCTION_17	WHILE_1	ELSE_1
0x4000f39	          0x4d85f6	                           test r14, r14	       507	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x4000f3c	          0xc60000	                       mov byte [rax], 0	       506	utf8.c	FUNCTION_17	WHILE_1	ELSE_1
0x4000f3f	            0x743b	                            je 0x4000f7c	       507	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x4000f41	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x4000f46	          0x4c29e0	                            sub rax, r12	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x4000f49	          0x418906	                    mov dword [r14], eax	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x4000f4c	          0x4c89e0	                            mov rax, r12	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x4000f4f	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       513	utf8.c	FUNCTION_17
0x4000f54	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       513	utf8.c	FUNCTION_17
0x4000f5d	            0x7522	                           jne 0x4000f81	       513	utf8.c	FUNCTION_17
0x4000f5f	        0x4883c430	                           add rsp, 0x30	       513	utf8.c	FUNCTION_17
0x4000f63	              0x5b	                                 pop rbx	       513	utf8.c	FUNCTION_17
0x4000f64	              0x5d	                                 pop rbp	       513	utf8.c	FUNCTION_17
0x4000f65	            0x415c	                                 pop r12	       513	utf8.c	FUNCTION_17
0x4000f67	            0x415d	                                 pop r13	       513	utf8.c	FUNCTION_17
0x4000f69	            0x415e	                                 pop r14	       513	utf8.c	FUNCTION_17
0x4000f6b	              0xc3	                                     ret	       513	utf8.c	FUNCTION_17
0x4000f6c	         0xf1f4000	                         nop dword [rax]	       513	utf8.c	FUNCTION_17
0x4000f70	          0x4c89e7	                            mov rdi, r12	       491	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2	CALL_3
0x4000f73	      0xe800000000	                          call 0x4000f78	       491	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2	CALL_3
0x4000f78	            0x31c0	                            xor eax, eax	       492	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x4000f7a	            0xebd3	                           jmp 0x4000f4f	       492	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x4000f7c	          0x4c89e0	                            mov rax, r12	       492	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x4000f7f	            0xebce	                           jmp 0x4000f4f	       492	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x4000f81	      0xe800000000	                          call 0x4000f86	       513	utf8.c	FUNCTION_17
strbuf_add_wrapped_bytes	DO,0:FOR,0:IF,0:functions,0:ELSE,0:SWITCH,0:WHILE,0:CALL,3	26
0x4000a30	            0x4156	                                push r14	       348	utf8.c	FUNCTION_11
0x4000a32	            0x4155	                                push r13	       348	utf8.c	FUNCTION_11
0x4000a34	          0x4589ce	                           mov r14d, r9d	       348	utf8.c	FUNCTION_11
0x4000a37	            0x4154	                                push r12	       348	utf8.c	FUNCTION_11
0x4000a39	              0x55	                                push rbp	       348	utf8.c	FUNCTION_11
0x4000a3a	          0x4189cc	                           mov r12d, ecx	       348	utf8.c	FUNCTION_11
0x4000a3d	              0x53	                                push rbx	       348	utf8.c	FUNCTION_11
0x4000a3e	          0x4589c5	                           mov r13d, r8d	       348	utf8.c	FUNCTION_11
0x4000a41	          0x4889fd	                            mov rbp, rdi	       348	utf8.c	FUNCTION_11
0x4000a44	          0x4889f7	                            mov rdi, rsi	       348	utf8.c	FUNCTION_11
0x4000a47	          0x4863f2	                         movsxd rsi, edx	       349	utf8.c	FUNCTION_11	CALL_1
0x4000a4a	      0xe800000000	                          call 0x4000a4f	       349	utf8.c	FUNCTION_11	CALL_1
0x4000a4f	          0x4889ef	                            mov rdi, rbp	       350	utf8.c	FUNCTION_11	CALL_2
0x4000a52	          0x4889c3	                            mov rbx, rax	       349	utf8.c	FUNCTION_11	CALL_1
0x4000a55	          0x4589f0	                           mov r8d, r14d	       350	utf8.c	FUNCTION_11	CALL_2
0x4000a58	          0x4489e9	                           mov ecx, r13d	       350	utf8.c	FUNCTION_11	CALL_2
0x4000a5b	          0x4489e2	                           mov edx, r12d	       350	utf8.c	FUNCTION_11	CALL_2
0x4000a5e	          0x4889c6	                            mov rsi, rax	       350	utf8.c	FUNCTION_11	CALL_2
0x4000a61	      0xe800000000	                          call 0x4000a66	       350	utf8.c	FUNCTION_11	CALL_2
0x4000a66	          0x4889df	                            mov rdi, rbx	       351	utf8.c	FUNCTION_11	CALL_3
0x4000a69	              0x5b	                                 pop rbx	       352	utf8.c	FUNCTION_11
0x4000a6a	              0x5d	                                 pop rbp	       352	utf8.c	FUNCTION_11
0x4000a6b	            0x415c	                                 pop r12	       352	utf8.c	FUNCTION_11
0x4000a6d	            0x415d	                                 pop r13	       352	utf8.c	FUNCTION_11
0x4000a6f	            0x415e	                                 pop r14	       352	utf8.c	FUNCTION_11
0x4000a71	      0xe900000000	                           jmp 0x4000a76	       351	utf8.c	FUNCTION_11	CALL_3
reencode_string_len	DO,0:FOR,0:IF,3:functions,0:ELSE,0:SWITCH,0:WHILE,0:CALL,6	54
0x4000f90	          0x4885c9	                           test rcx, rcx	       544	utf8.c	FUNCTION_19	IF_1
0x4000f93	     0xf8497000000	                            je 0x4001030	       544	utf8.c	FUNCTION_19	IF_1
0x4000f99	            0x4157	                                push r15	       540	utf8.c	FUNCTION_19
0x4000f9b	            0x4156	                                push r14	       540	utf8.c	FUNCTION_19
0x4000f9d	          0x4989cf	                            mov r15, rcx	       540	utf8.c	FUNCTION_19
0x4000fa0	            0x4155	                                push r13	       540	utf8.c	FUNCTION_19
0x4000fa2	            0x4154	                                push r12	       540	utf8.c	FUNCTION_19
0x4000fa4	          0x4989fd	                            mov r13, rdi	       540	utf8.c	FUNCTION_19
0x4000fa7	              0x55	                                push rbp	       540	utf8.c	FUNCTION_19
0x4000fa8	              0x53	                                push rbx	       540	utf8.c	FUNCTION_19
0x4000fa9	          0x4889d7	                            mov rdi, rdx	       547	utf8.c	FUNCTION_19	CALL_1
0x4000fac	            0x89f3	                            mov ebx, esi	       547	utf8.c	FUNCTION_19	CALL_1
0x4000fae	          0x4889ce	                            mov rsi, rcx	       547	utf8.c	FUNCTION_19	CALL_1
0x4000fb1	          0x4d89c6	                             mov r14, r8	       547	utf8.c	FUNCTION_19	CALL_1
0x4000fb4	        0x4883ec08	                              sub rsp, 8	       540	utf8.c	FUNCTION_19
0x4000fb8	          0x4989d4	                            mov r12, rdx	       540	utf8.c	FUNCTION_19
0x4000fbb	      0xe800000000	                          call 0x4000fc0	       547	utf8.c	FUNCTION_19	CALL_1
0x4000fc0	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       548	utf8.c	FUNCTION_19	IF_2
0x4000fc4	          0x4889c5	                            mov rbp, rax	       547	utf8.c	FUNCTION_19	CALL_1
0x4000fc7	            0x7437	                            je 0x4001000	       548	utf8.c	FUNCTION_19	IF_2
0x4000fc9	          0x4863f3	                         movsxd rsi, ebx	       557	utf8.c	FUNCTION_19	CALL_5
0x4000fcc	          0x4c89f1	                            mov rcx, r14	       557	utf8.c	FUNCTION_19	CALL_5
0x4000fcf	          0x4889ea	                            mov rdx, rbp	       557	utf8.c	FUNCTION_19	CALL_5
0x4000fd2	          0x4c89ef	                            mov rdi, r13	       557	utf8.c	FUNCTION_19	CALL_5
0x4000fd5	      0xe800000000	                          call 0x4000fda	       557	utf8.c	FUNCTION_19	CALL_5
0x4000fda	          0x4889ef	                            mov rdi, rbp	       558	utf8.c	FUNCTION_19	CALL_6
0x4000fdd	          0x4889c3	                            mov rbx, rax	       557	utf8.c	FUNCTION_19	CALL_5
0x4000fe0	      0xe800000000	                          call 0x4000fe5	       558	utf8.c	FUNCTION_19	CALL_6
0x4000fe5	          0x4889d8	                            mov rax, rbx	       559	utf8.c	FUNCTION_19
0x4000fe8	        0x4883c408	                              add rsp, 8	       560	utf8.c	FUNCTION_19
0x4000fec	              0x5b	                                 pop rbx	       560	utf8.c	FUNCTION_19
0x4000fed	              0x5d	                                 pop rbp	       560	utf8.c	FUNCTION_19
0x4000fee	            0x415c	                                 pop r12	       560	utf8.c	FUNCTION_19
0x4000ff0	            0x415d	                                 pop r13	       560	utf8.c	FUNCTION_19
0x4000ff2	            0x415e	                                 pop r14	       560	utf8.c	FUNCTION_19
0x4000ff4	            0x415f	                                 pop r15	       560	utf8.c	FUNCTION_19
0x4000ff6	              0xc3	                                     ret	       560	utf8.c	FUNCTION_19
0x4000ff7	    0x660f1f840000	                    nop word [rax + rax]	       560	utf8.c	FUNCTION_19
0x4001000	          0x4c89ff	                            mov rdi, r15	       549	utf8.c	FUNCTION_19	IF_2	CALL_2
0x4001003	      0xe8c8f3ffff	              call sym.fallback_encoding	       549	utf8.c	FUNCTION_19	IF_2	CALL_2
0x4001008	          0x4c89e7	                            mov rdi, r12	       550	utf8.c	FUNCTION_19	IF_2	CALL_3
0x400100b	          0x4889c5	                            mov rbp, rax	       549	utf8.c	FUNCTION_19	IF_2	CALL_2
0x400100e	      0xe8bdf3ffff	              call sym.fallback_encoding	       550	utf8.c	FUNCTION_19	IF_2	CALL_3
0x4001013	          0x4889ee	                            mov rsi, rbp	       552	utf8.c	FUNCTION_19	IF_2	CALL_4
0x4001016	          0x4889c7	                            mov rdi, rax	       552	utf8.c	FUNCTION_19	IF_2	CALL_4
0x4001019	      0xe800000000	                          call 0x400101e	       552	utf8.c	FUNCTION_19	IF_2	CALL_4
0x400101e	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       553	utf8.c	FUNCTION_19	IF_2	IF_3
0x4001022	          0x4889c5	                            mov rbp, rax	       552	utf8.c	FUNCTION_19	IF_2	CALL_4
0x4001025	            0x75a2	                           jne 0x4000fc9	       553	utf8.c	FUNCTION_19	IF_2	IF_3
0x4001027	            0x31c0	                            xor eax, eax	       545	utf8.c	FUNCTION_19	IF_1
0x4001029	            0xebbd	                           jmp 0x4000fe8	       545	utf8.c	FUNCTION_19	IF_1
0x400102b	       0xf1f440000	                   nop dword [rax + rax]	       545	utf8.c	FUNCTION_19	IF_1
0x4001030	            0x31c0	                            xor eax, eax	       545	utf8.c	FUNCTION_19	IF_1
0x4001032	              0xc3	                                     ret	       560	utf8.c	FUNCTION_19
skip_utf8_bom	DO,0:FOR,0:IF,1:functions,0:ELSE,0:SWITCH,0:WHILE,0:CALL,4	22
0x4001340	            0x4154	                                push r12	       716	utf8.c	FUNCTION_26
0x4001342	              0x55	                                push rbp	       716	utf8.c	FUNCTION_26
0x4001343	            0x31ed	                            xor ebp, ebp	       719	utf8.c	FUNCTION_26	IF_1
0x4001345	        0x4883fe02	                              cmp rsi, 2	       717	utf8.c	FUNCTION_26	IF_1	CALL_1
0x4001349	              0x53	                                push rbx	       716	utf8.c	FUNCTION_26
0x400134a	            0x7628	                           jbe 0x4001374	       717	utf8.c	FUNCTION_26	IF_1	CALL_1
0x400134c	          0x4c8b27	                    mov r12, qword [rdi]	       718	utf8.c	FUNCTION_26	IF_1	CALL_3
0x400134f	          0x4889fb	                            mov rbx, rdi	       718	utf8.c	FUNCTION_26	IF_1	CALL_3
0x4001352	      0xba03000000	                              mov edx, 3	       718	utf8.c	FUNCTION_26	IF_1	CALL_3
0x4001357	      0xbe00000000	                              mov esi, 0	       718	utf8.c	FUNCTION_26	IF_1	CALL_3
0x400135c	          0x4c89e7	                            mov rdi, r12	       718	utf8.c	FUNCTION_26	IF_1	CALL_3
0x400135f	      0xe800000000	                          call 0x4001364	       718	utf8.c	FUNCTION_26	IF_1	CALL_3
0x4001364	            0x85c0	                           test eax, eax	       717	utf8.c	FUNCTION_26	IF_1	CALL_1
0x4001366	            0x750c	                           jne 0x4001374	       717	utf8.c	FUNCTION_26	IF_1	CALL_1
0x4001368	        0x4983c403	                              add r12, 3	       720	utf8.c	FUNCTION_26	CALL_4
0x400136c	      0xbd01000000	                              mov ebp, 1	       721	utf8.c	FUNCTION_26
0x4001371	          0x4c8923	                    mov qword [rbx], r12	       720	utf8.c	FUNCTION_26	CALL_4
0x4001374	            0x89e8	                            mov eax, ebp	       722	utf8.c	FUNCTION_26
0x4001376	              0x5b	                                 pop rbx	       722	utf8.c	FUNCTION_26
0x4001377	              0x5d	                                 pop rbp	       722	utf8.c	FUNCTION_26
0x4001378	            0x415c	                                 pop r12	       722	utf8.c	FUNCTION_26
0x400137a	              0xc3	                                     ret	       722	utf8.c	FUNCTION_26
is_utf8	DO,0:FOR,0:IF,2:functions,0:ELSE,0:SWITCH,0:WHILE,1:CALL,1	29
0x40005a0	        0x4883ec08	                              sub rsp, 8	       229	utf8.c	FUNCTION_8
0x40005a4	        0x48893c24	                    mov qword [rsp], rdi	       229	utf8.c	FUNCTION_8
0x40005a8	     0xf1f84000000	                   nop dword [rax + rax]	       229	utf8.c	FUNCTION_8
0x40005b0	           0xfb607	                   movzx eax, byte [rdi]	       230	utf8.c	FUNCTION_8	WHILE_1
0x40005b3	            0x84c0	                             test al, al	       230	utf8.c	FUNCTION_8	WHILE_1
0x40005b5	            0x741b	                            je 0x40005d2	       230	utf8.c	FUNCTION_8	WHILE_1
0x40005b7	          0x8d50f7	                      lea edx, [rax - 9]	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40005ba	          0x80fa01	                               cmp dl, 1	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40005bd	            0x7604	                           jbe 0x40005c3	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40005bf	            0x3c0d	                             cmp al, 0xd	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40005c1	            0x751d	                           jne 0x40005e0	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40005c3	        0x4883c701	                              add rdi, 1	       232	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40005c7	        0x48893c24	                    mov qword [rsp], rdi	       232	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40005cb	           0xfb607	                   movzx eax, byte [rdi]	       230	utf8.c	FUNCTION_8	WHILE_1
0x40005ce	            0x84c0	                             test al, al	       230	utf8.c	FUNCTION_8	WHILE_1
0x40005d0	            0x75e5	                           jne 0x40005b7	       230	utf8.c	FUNCTION_8	WHILE_1
0x40005d2	      0xb801000000	                              mov eax, 1	       239	utf8.c	FUNCTION_8
0x40005d7	        0x4883c408	                              add rsp, 8	       240	utf8.c	FUNCTION_8
0x40005db	              0xc3	                                     ret	       240	utf8.c	FUNCTION_8
0x40005dc	         0xf1f4000	                         nop dword [rax]	       240	utf8.c	FUNCTION_8
0x40005e0	            0x31f6	                            xor esi, esi	       235	utf8.c	FUNCTION_8	WHILE_1	CALL_1
0x40005e2	          0x4889e7	                            mov rdi, rsp	       235	utf8.c	FUNCTION_8	WHILE_1	CALL_1
0x40005e5	      0xe800000000	                          call 0x40005ea	       235	utf8.c	FUNCTION_8	WHILE_1	CALL_1
0x40005ea	        0x488b3c24	                    mov rdi, qword [rsp]	       236	utf8.c	FUNCTION_8	WHILE_1	IF_2
0x40005ee	          0x4885ff	                           test rdi, rdi	       236	utf8.c	FUNCTION_8	WHILE_1	IF_2
0x40005f1	            0x75bd	                           jne 0x40005b0	       236	utf8.c	FUNCTION_8	WHILE_1	IF_2
0x40005f3	            0x31c0	                            xor eax, eax	       237	utf8.c	FUNCTION_8	WHILE_1	IF_2
0x40005f5	        0x4883c408	                              add rsp, 8	       240	utf8.c	FUNCTION_8
0x40005f9	              0xc3	                                     ret	       240	utf8.c	FUNCTION_8
has_prohibited_utf_bom	DO,0:FOR,0:IF,0:functions,0:ELSE,0:SWITCH,0:WHILE,0:CALL,8	77
0x4001040	            0x4154	                                push r12	       575	utf8.c	FUNCTION_21
0x4001042	              0x55	                                push rbp	       575	utf8.c	FUNCTION_21
0x4001043	          0x4889fd	                            mov rbp, rdi	       575	utf8.c	FUNCTION_21
0x4001046	              0x53	                                push rbx	       575	utf8.c	FUNCTION_21
0x4001047	          0x4889f3	                            mov rbx, rsi	       575	utf8.c	FUNCTION_21
0x400104a	          0x4889fe	                            mov rsi, rdi	       577	utf8.c	FUNCTION_21	CALL_1
0x400104d	      0xbf00000000	                              mov edi, 0	       577	utf8.c	FUNCTION_21	CALL_1
0x4001052	          0x4989d4	                            mov r12, rdx	       575	utf8.c	FUNCTION_21
0x4001055	      0xe8b6f2ffff	              call sym.same_utf_encoding	       577	utf8.c	FUNCTION_21	CALL_1
0x400105a	            0x85c0	                           test eax, eax	       581	utf8.c	FUNCTION_21
0x400105c	            0x7432	                            je 0x4001090	       581	utf8.c	FUNCTION_21
0x400105e	        0x4983fc01	                              cmp r12, 1	       566	utf8.c	FUNCTION_20	CALL_1
0x4001062	            0x763d	                           jbe 0x40010a1	       566	utf8.c	FUNCTION_20	CALL_1
0x4001064	          0x4885db	                           test rbx, rbx	       566	utf8.c	FUNCTION_20	CALL_1
0x4001067	            0x7438	                            je 0x40010a1	       566	utf8.c	FUNCTION_20	CALL_1
0x4001069	      0xba02000000	                              mov edx, 2	       566	utf8.c	FUNCTION_20	CALL_1
0x400106e	      0xbe00000000	                              mov esi, 0	       566	utf8.c	FUNCTION_20	CALL_1
0x4001073	          0x4889df	                            mov rdi, rbx	       566	utf8.c	FUNCTION_20	CALL_1
0x4001076	      0xe800000000	                          call 0x400107b	       566	utf8.c	FUNCTION_20	CALL_1
0x400107b	            0x85c0	                           test eax, eax	       566	utf8.c	FUNCTION_20	CALL_1
0x400107d	            0x7579	                           jne 0x40010f8	       566	utf8.c	FUNCTION_20	CALL_1
0x400107f	              0x5b	                                 pop rbx	       587	utf8.c	FUNCTION_21
0x4001080	      0xb801000000	                              mov eax, 1	       581	utf8.c	FUNCTION_21
0x4001085	              0x5d	                                 pop rbp	       587	utf8.c	FUNCTION_21
0x4001086	            0x415c	                                 pop r12	       587	utf8.c	FUNCTION_21
0x4001088	              0xc3	                                     ret	       587	utf8.c	FUNCTION_21
0x4001089	     0xf1f80000000	                         nop dword [rax]	       587	utf8.c	FUNCTION_21
0x4001090	          0x4889ee	                            mov rsi, rbp	       578	utf8.c	FUNCTION_21	CALL_2
0x4001093	      0xbf00000000	                              mov edi, 0	       578	utf8.c	FUNCTION_21	CALL_2
0x4001098	      0xe873f2ffff	              call sym.same_utf_encoding	       578	utf8.c	FUNCTION_21	CALL_2
0x400109d	            0x85c0	                           test eax, eax	       577	utf8.c	FUNCTION_21	CALL_1
0x400109f	            0x75bd	                           jne 0x400105e	       577	utf8.c	FUNCTION_21	CALL_1
0x40010a1	          0x4889ee	                            mov rsi, rbp	       582	utf8.c	FUNCTION_21	CALL_5
0x40010a4	      0xbf00000000	                              mov edi, 0	       582	utf8.c	FUNCTION_21	CALL_5
0x40010a9	      0xe862f2ffff	              call sym.same_utf_encoding	       582	utf8.c	FUNCTION_21	CALL_5
0x40010ae	            0x85c0	                           test eax, eax	       581	utf8.c	FUNCTION_21
0x40010b0	            0x7466	                            je 0x4001118	       581	utf8.c	FUNCTION_21
0x40010b2	          0x4885db	                           test rbx, rbx	       566	utf8.c	FUNCTION_20	CALL_1
0x40010b5	            0x7472	                            je 0x4001129	       566	utf8.c	FUNCTION_20	CALL_1
0x40010b7	        0x4983fc03	                              cmp r12, 3	       566	utf8.c	FUNCTION_20	CALL_1
0x40010bb	            0x766c	                           jbe 0x4001129	       566	utf8.c	FUNCTION_20	CALL_1
0x40010bd	      0xba04000000	                              mov edx, 4	       566	utf8.c	FUNCTION_20	CALL_1
0x40010c2	      0xbe00000000	                              mov esi, 0	       566	utf8.c	FUNCTION_20	CALL_1
0x40010c7	          0x4889df	                            mov rdi, rbx	       566	utf8.c	FUNCTION_20	CALL_1
0x40010ca	      0xe800000000	                          call 0x40010cf	       566	utf8.c	FUNCTION_20	CALL_1
0x40010cf	            0x85c0	                           test eax, eax	       566	utf8.c	FUNCTION_20	CALL_1
0x40010d1	            0x74ac	                            je 0x400107f	       566	utf8.c	FUNCTION_20	CALL_1
0x40010d3	          0x4889df	                            mov rdi, rbx	       566	utf8.c	FUNCTION_20	CALL_1
0x40010d6	      0xba04000000	                              mov edx, 4	       566	utf8.c	FUNCTION_20	CALL_1
0x40010db	      0xbe00000000	                              mov esi, 0	       566	utf8.c	FUNCTION_20	CALL_1
0x40010e0	      0xe800000000	                          call 0x40010e5	       566	utf8.c	FUNCTION_20	CALL_1
0x40010e5	            0x85c0	                           test eax, eax	       581	utf8.c	FUNCTION_21
0x40010e7	           0xf94c0	                                 sete al	       581	utf8.c	FUNCTION_21
0x40010ea	              0x5b	                                 pop rbx	       587	utf8.c	FUNCTION_21
0x40010eb	           0xfb6c0	                           movzx eax, al	       581	utf8.c	FUNCTION_21
0x40010ee	              0x5d	                                 pop rbp	       587	utf8.c	FUNCTION_21
0x40010ef	            0x415c	                                 pop r12	       587	utf8.c	FUNCTION_21
0x40010f1	              0xc3	                                     ret	       587	utf8.c	FUNCTION_21
0x40010f2	    0x660f1f440000	                    nop word [rax + rax]	       587	utf8.c	FUNCTION_21
0x40010f8	      0xba02000000	                              mov edx, 2	       566	utf8.c	FUNCTION_20	CALL_1
0x40010fd	      0xbe00000000	                              mov esi, 0	       566	utf8.c	FUNCTION_20	CALL_1
0x4001102	          0x4889df	                            mov rdi, rbx	       566	utf8.c	FUNCTION_20	CALL_1
0x4001105	      0xe800000000	                          call 0x400110a	       566	utf8.c	FUNCTION_20	CALL_1
0x400110a	            0x85c0	                           test eax, eax	       566	utf8.c	FUNCTION_20	CALL_1
0x400110c	     0xf846dffffff	                            je 0x400107f	       566	utf8.c	FUNCTION_20	CALL_1
0x4001112	            0xeb8d	                           jmp 0x40010a1	       566	utf8.c	FUNCTION_20	CALL_1
0x4001114	         0xf1f4000	                         nop dword [rax]	       566	utf8.c	FUNCTION_20	CALL_1
0x4001118	          0x4889ee	                            mov rsi, rbp	       583	utf8.c	FUNCTION_21	CALL_6
0x400111b	      0xbf00000000	                              mov edi, 0	       583	utf8.c	FUNCTION_21	CALL_6
0x4001120	      0xe8ebf1ffff	              call sym.same_utf_encoding	       583	utf8.c	FUNCTION_21	CALL_6
0x4001125	            0x85c0	                           test eax, eax	       582	utf8.c	FUNCTION_21	CALL_5
0x4001127	            0x7589	                           jne 0x40010b2	       582	utf8.c	FUNCTION_21	CALL_5
0x4001129	              0x5b	                                 pop rbx	       587	utf8.c	FUNCTION_21
0x400112a	            0x31c0	                            xor eax, eax	       581	utf8.c	FUNCTION_21
0x400112c	              0x5d	                                 pop rbp	       587	utf8.c	FUNCTION_21
0x400112d	            0x415c	                                 pop r12	       587	utf8.c	FUNCTION_21
0x400112f	              0xc3	                                     ret	       587	utf8.c	FUNCTION_21
utf8_width	DO,0:FOR,0:IF,1:functions,0:ELSE,0:SWITCH,0:WHILE,0:CALL,2	45
0x4000440	              0x53	                                push rbx	       194	utf8.c	FUNCTION_5
0x4000441	      0xe8fafbffff	             call sym.pick_one_utf8_char	       195	utf8.c	FUNCTION_5	CALL_1
0x4000446	        0x48833f00	                      cmp qword [rdi], 0	        87	utf8.c	ELSE_2	FUNCTION_3	IF_1
0x400044a	            0x7452	                            je 0x400049e	        87	utf8.c	ELSE_2	FUNCTION_3	IF_1
0x400044c	            0x85c0	                           test eax, eax	        87	utf8.c	ELSE_2	FUNCTION_3	IF_1
0x400044e	          0x4189c1	                            mov r9d, eax	        87	utf8.c	ELSE_2	FUNCTION_3	IF_1
0x4000451	            0x744b	                            je 0x400049e	        87	utf8.c	ELSE_2	FUNCTION_3	IF_1
0x4000453	          0x8d4081	                   lea eax, [rax - 0x7f]	        89	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x4000456	          0x83f820	                           cmp eax, 0x20	        89	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x4000459	            0x766d	                           jbe 0x40004c8	        89	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x400045b	        0x4183f91f	                           cmp r9d, 0x1f	        89	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x400045f	            0x7667	                           jbe 0x40004c8	        89	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x4000461	    0x418d8100fdff	                   lea eax, [r9 - 0x300]	        32	utf8.c	FUNCTION_2	IF_1
0x4000468	      0x3deffe0d00	                        cmp eax, 0xdfeef	        32	utf8.c	FUNCTION_2	IF_1
0x400046d	            0x7619	                           jbe 0x4000488	        32	utf8.c	FUNCTION_2	IF_1
0x400046f	    0x418d9100efff	                  lea edx, [r9 - 0x1100]	        32	utf8.c	FUNCTION_2	IF_1
0x4000476	      0xb801000000	                              mov eax, 1	       102	utf8.c	ELSE_2	FUNCTION_3
0x400047b	    0x81fafdee0300	                        cmp edx, 0x3eefd	        32	utf8.c	FUNCTION_2	IF_1
0x4000481	            0x7625	                           jbe 0x40004a8	        32	utf8.c	FUNCTION_2	IF_1
0x4000483	              0x5b	                                 pop rbx	       199	utf8.c	FUNCTION_5
0x4000484	              0xc3	                                     ret	       199	utf8.c	FUNCTION_5
0x4000485	           0xf1f00	                         nop dword [rax]	       199	utf8.c	FUNCTION_5
0x4000488	      0xba37010000	                          mov edx, 0x137	       199	utf8.c	FUNCTION_5
0x400048d	      0xbe00000000	                              mov esi, 0	       199	utf8.c	FUNCTION_5
0x4000492	          0x4489cf	                            mov edi, r9d	       199	utf8.c	FUNCTION_5
0x4000495	      0xe826feffff	                call sym.bisearch.part.1	       199	utf8.c	FUNCTION_5
0x400049a	            0x85c0	                           test eax, eax	        93	utf8.c	ELSE_2	FUNCTION_3	IF_3	CALL_1
0x400049c	            0x74d1	                            je 0x400046f	        93	utf8.c	ELSE_2	FUNCTION_3	IF_3	CALL_1
0x400049e	            0x31c0	                            xor eax, eax	        88	utf8.c	ELSE_2	FUNCTION_3	IF_1
0x40004a0	              0x5b	                                 pop rbx	       199	utf8.c	FUNCTION_5
0x40004a1	              0xc3	                                     ret	       199	utf8.c	FUNCTION_5
0x40004a2	    0x660f1f440000	                    nop word [rax + rax]	       199	utf8.c	FUNCTION_5
0x40004a8	      0xba69000000	                           mov edx, 0x69	       199	utf8.c	FUNCTION_5
0x40004ad	      0xbe00000000	                              mov esi, 0	       199	utf8.c	FUNCTION_5
0x40004b2	          0x4489cf	                            mov edi, r9d	       199	utf8.c	FUNCTION_5
0x40004b5	      0xe806feffff	                call sym.bisearch.part.1	       199	utf8.c	FUNCTION_5
0x40004ba	          0x83f801	                              cmp eax, 1	       100	utf8.c	ELSE_2	FUNCTION_3	IF_4
0x40004bd	            0x19c0	                            sbb eax, eax	       100	utf8.c	ELSE_2	FUNCTION_3	IF_4
0x40004bf	          0x83c002	                              add eax, 2	       100	utf8.c	ELSE_2	FUNCTION_3	IF_4
0x40004c2	              0x5b	                                 pop rbx	       199	utf8.c	FUNCTION_5
0x40004c3	              0xc3	                                     ret	       199	utf8.c	FUNCTION_5
0x40004c4	         0xf1f4000	                         nop dword [rax]	       199	utf8.c	FUNCTION_5
0x40004c8	      0xb8ffffffff	                     mov eax, 0xffffffff	        90	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x40004cd	              0x5b	                                 pop rbx	       199	utf8.c	FUNCTION_5
0x40004ce	              0xc3	                                     ret	       199	utf8.c	FUNCTION_5
strbuf_utf8_replace	DO,0:FOR,0:IF,5:functions,0:ELSE,0:SWITCH,0:WHILE,2:CALL,10	151
0x4000a80	            0x4157	                                push r15	       356	utf8.c	FUNCTION_12
0x4000a82	            0x4156	                                push r14	       356	utf8.c	FUNCTION_12
0x4000a84	          0x4189d6	                           mov r14d, edx	       356	utf8.c	FUNCTION_12
0x4000a87	            0x4155	                                push r13	       356	utf8.c	FUNCTION_12
0x4000a89	            0x4154	                                push r12	       356	utf8.c	FUNCTION_12
0x4000a8b	              0x55	                                push rbp	       356	utf8.c	FUNCTION_12
0x4000a8c	              0x53	                                push rbx	       356	utf8.c	FUNCTION_12
0x4000a8d	        0x4883ec78	                           sub rsp, 0x78	       356	utf8.c	FUNCTION_12
0x4000a91	        0x4c8b6710	            mov r12, qword [rdi + 0x10] 	       358	utf8.c	FUNCTION_12
0x4000a95	        0x488b5f08	                mov rbx, qword [rdi + 8]	       359	utf8.c	FUNCTION_12
0x4000a99	        0x89742408	                mov dword [rsp + 8], esi	       356	utf8.c	FUNCTION_12
0x4000a9d	      0x48897c2418	             mov qword [rsp + 0x18], rdi	       356	utf8.c	FUNCTION_12
0x4000aa2	    0x64488b342528	                mov rsi, qword fs:[0x28]	       356	utf8.c	FUNCTION_12
0x4000aab	      0x4889742468	             mov qword [rsp + 0x68], rsi	       356	utf8.c	FUNCTION_12
0x4000ab0	            0x31f6	                            xor esi, esi	       356	utf8.c	FUNCTION_12
0x4000ab2	      0x4c89642428	             mov qword [rsp + 0x28], r12	       358	utf8.c	FUNCTION_12
0x4000ab7	          0x4901dc	                            add r12, rbx	       359	utf8.c	FUNCTION_12
0x4000aba	          0x4885c9	                           test rcx, rcx	       363	utf8.c	FUNCTION_12	IF_1
0x4000abd	        0x48890c24	                    mov qword [rsp], rcx	       356	utf8.c	FUNCTION_12
0x4000ac1	    0x48c744243000	               mov qword [rsp + 0x30], 0	       357	utf8.c	FUNCTION_12
0x4000aca	    0x48c744243800	               mov qword [rsp + 0x38], 0	       357	utf8.c	FUNCTION_12
0x4000ad3	    0x48c744244000	               mov qword [rsp + 0x40], 0	       357	utf8.c	FUNCTION_12
0x4000adc	     0xf84d5010000	                            je 0x4000cb7	       363	utf8.c	FUNCTION_12	IF_1
0x4000ae2	          0x4889cf	                            mov rdi, rcx	       364	utf8.c	FUNCTION_12	CALL_1
0x4000ae5	      0xe800000000	                          call 0x4000aea	       364	utf8.c	FUNCTION_12	CALL_1
0x4000aea	            0x4898	                                    cdqe	       364	utf8.c	FUNCTION_12	CALL_1
0x4000aec	      0x4889442410	             mov qword [rsp + 0x10], rax	       364	utf8.c	FUNCTION_12	CALL_1
0x4000af1	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       365	utf8.c	FUNCTION_12	CALL_2
0x4000af6	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       365	utf8.c	FUNCTION_12	CALL_2
0x4000afb	            0x31ed	                            xor ebp, ebp	       361	utf8.c	FUNCTION_12
0x4000afd	        0x488d3403	                    lea rsi, [rbx + rax]	       365	utf8.c	FUNCTION_12	CALL_2
0x4000b01	      0xe800000000	                          call 0x4000b06	       365	utf8.c	FUNCTION_12	CALL_2
0x4000b06	        0x8b442408	                mov eax, dword [rsp + 8]	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000b0a	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	       366	utf8.c	FUNCTION_12
0x4000b0f	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	       366	utf8.c	FUNCTION_12
0x4000b14	          0x4401f0	                           add eax, r14d	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000b17	        0x8944240c	              mov dword [rsp + 0xc], eax	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000b1b	       0xf1f440000	                   nop dword [rax + rax]	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000b20	          0x4d39fc	                            cmp r12, r15	       368	utf8.c	FUNCTION_12	WHILE_1
0x4000b23	     0xf86b7000000	                           jbe 0x4000be0	       368	utf8.c	FUNCTION_12	WHILE_1
0x4000b29	        0x41803f1b	                    cmp byte [r15], 0x1b	        15	utf8.c	IF_1	FUNCTION_1
0x4000b2d	            0x753a	                           jne 0x4000b69	        15	utf8.c	IF_1	FUNCTION_1
0x4000b2f	              0x90	                                     nop	        15	utf8.c	IF_1	FUNCTION_1
0x4000b30	          0x4c89ff	                            mov rdi, r15	        15	utf8.c	IF_1	FUNCTION_1
0x4000b33	      0xe848f8ffff	call sym.display_mode_esc_sequence_len.part.4	        15	utf8.c	IF_1	FUNCTION_1
0x4000b38	          0x4885c0	                           test rax, rax	       372	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_3
0x4000b3b	          0x4989c5	                            mov r13, rax	       372	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_3
0x4000b3e	            0x7424	                            je 0x4000b64	       372	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_3
0x4000b40	          0x4c89fe	                            mov rsi, r15	        53	string3.h	FUNCTION_39	CALL_3
0x4000b43	          0x4889df	                            mov rdi, rbx	        53	string3.h	FUNCTION_39	CALL_3
0x4000b46	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_39	CALL_3
0x4000b49	      0xe800000000	                          call 0x4000b4e	        53	string3.h	FUNCTION_39	CALL_3
0x4000b4e	          0x4d89ef	                            mov r15, r13	       374	utf8.c	FUNCTION_12	WHILE_1	WHILE_2
0x4000b51	      0x4c037c2428	             add r15, qword [rsp + 0x28]	       374	utf8.c	FUNCTION_12	WHILE_1	WHILE_2
0x4000b56	          0x4c01eb	                            add rbx, r13	       375	utf8.c	FUNCTION_12	WHILE_1	WHILE_2
0x4000b59	      0x4c897c2428	             mov qword [rsp + 0x28], r15	       374	utf8.c	FUNCTION_12	WHILE_1	WHILE_2
0x4000b5e	        0x41803f1b	                    cmp byte [r15], 0x1b	        15	utf8.c	IF_1	FUNCTION_1
0x4000b62	            0x74cc	                            je 0x4000b30	        15	utf8.c	IF_1	FUNCTION_1
0x4000b64	          0x4d39fc	                            cmp r12, r15	       378	utf8.c	FUNCTION_12	WHILE_1	IF_2
0x4000b67	            0x7677	                           jbe 0x4000be0	       378	utf8.c	FUNCTION_12	WHILE_1	IF_2
0x4000b69	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	       382	utf8.c	FUNCTION_12	WHILE_1	CALL_5
0x4000b6e	            0x31f6	                            xor esi, esi	       382	utf8.c	FUNCTION_12	WHILE_1	CALL_5
0x4000b70	      0xe800000000	                          call 0x4000b75	       382	utf8.c	FUNCTION_12	WHILE_1	CALL_5
0x4000b75	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       383	utf8.c	FUNCTION_12	WHILE_1	IF_3
0x4000b7a	            0x4898	                                    cdqe	       382	utf8.c	FUNCTION_12	WHILE_1	CALL_5
0x4000b7c	          0x4989c6	                            mov r14, rax	       382	utf8.c	FUNCTION_12	WHILE_1	CALL_5
0x4000b7f	          0x4885d2	                           test rdx, rdx	       383	utf8.c	FUNCTION_12	WHILE_1	IF_3
0x4000b82	     0xf84d6000000	                            je 0x4000c5e	       383	utf8.c	FUNCTION_12	WHILE_1	IF_3
0x4000b88	          0x4885c0	                           test rax, rax	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000b8b	     0xf84ff000000	                            je 0x4000c90	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000b91	        0x3b6c2408	                cmp ebp, dword [rsp + 8]	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000b95	     0xf8cf5000000	                            jl 0x4000c90	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000b9b	        0x3b6c240c	              cmp ebp, dword [rsp + 0xc]	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000b9f	     0xf8deb000000	                           jge 0x4000c90	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000ba5	        0x488b0424	                    mov rax, qword [rsp]	       386	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5
0x4000ba9	          0x4989d7	                            mov r15, rdx	       386	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5
0x4000bac	          0x4885c0	                           test rax, rax	       386	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5
0x4000baf	            0x741b	                            je 0x4000bcc	       386	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5
0x4000bb1	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_39	CALL_3
0x4000bb6	          0x4889df	                            mov rdi, rbx	        53	string3.h	FUNCTION_39	CALL_3
0x4000bb9	          0x4889c6	                            mov rsi, rax	        53	string3.h	FUNCTION_39	CALL_3
0x4000bbc	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_39	CALL_3
0x4000bbf	          0x4c01fb	                            add rbx, r15	       388	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5
0x4000bc2	      0xe800000000	                          call 0x4000bc7	        53	string3.h	FUNCTION_39	CALL_3
0x4000bc7	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	        53	string3.h	FUNCTION_39	CALL_3
0x4000bcc	          0x4401f5	                           add ebp, r14d	       391	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000bcf	          0x4d39fc	                            cmp r12, r15	       368	utf8.c	FUNCTION_12	WHILE_1
0x4000bd2	    0x48c704240000	                      mov qword [rsp], 0	       392	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000bda	     0xf8749ffffff	                            ja 0x4000b29	       368	utf8.c	FUNCTION_12	WHILE_1
0x4000be0	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       162	strbuf.h	FUNCTION_30	IF_1
0x4000be5	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       398	utf8.c	FUNCTION_12	CALL_8
0x4000bea	          0x4889d9	                            mov rcx, rbx	       398	utf8.c	FUNCTION_12	CALL_8
0x4000bed	          0x4829d1	                            sub rcx, rdx	       398	utf8.c	FUNCTION_12	CALL_8
0x4000bf0	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_30	IF_1
0x4000bf4	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_30	IF_1
0x4000bf8	          0x4839c1	                            cmp rcx, rax	       162	strbuf.h	FUNCTION_30	IF_1
0x4000bfb	     0xf87d6000000	                            ja 0x4000cd7	       162	strbuf.h	FUNCTION_30	IF_1
0x4000c01	    0x4881fa000000	                              cmp rdx, 0	       165	strbuf.h	FUNCTION_30	IF_2
0x4000c08	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       164	strbuf.h	FUNCTION_30
0x4000c0d	     0xf84b2000000	                            je 0x4000cc5	       165	strbuf.h	FUNCTION_30	IF_2
0x4000c13	          0xc60300	                       mov byte [rbx], 0	       166	strbuf.h	FUNCTION_30	IF_2
0x4000c16	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_39	CALL_3
0x4000c1b	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_39	CALL_3
0x4000c20	          0x488b0b	                    mov rcx, qword [rbx]	        53	string3.h	FUNCTION_39	CALL_3
0x4000c23	          0x488933	                    mov qword [rbx], rsi	        53	string3.h	FUNCTION_39	CALL_3
0x4000c26	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_39	CALL_3
0x4000c2b	        0x488b5308	                mov rdx, qword [rbx + 8]	        53	string3.h	FUNCTION_39	CALL_3
0x4000c2f	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        53	string3.h	FUNCTION_39	CALL_3
0x4000c33	      0x48894c2450	             mov qword [rsp + 0x50], rcx	        53	string3.h	FUNCTION_39	CALL_3
0x4000c38	      0x48894c2430	             mov qword [rsp + 0x30], rcx	        53	string3.h	FUNCTION_39	CALL_3
0x4000c3d	        0x48897308	                mov qword [rbx + 8], rsi	        53	string3.h	FUNCTION_39	CALL_3
0x4000c41	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_39	CALL_3
0x4000c46	      0x4889542458	             mov qword [rsp + 0x58], rdx	        53	string3.h	FUNCTION_39	CALL_3
0x4000c4b	      0x4889442460	             mov qword [rsp + 0x60], rax	        53	string3.h	FUNCTION_39	CALL_3
0x4000c50	      0x4889542438	             mov qword [rsp + 0x38], rdx	        53	string3.h	FUNCTION_39	CALL_3
0x4000c55	      0x4889442440	             mov qword [rsp + 0x40], rax	        53	string3.h	FUNCTION_39	CALL_3
0x4000c5a	        0x48897310	             mov qword [rbx + 0x10], rsi	        53	string3.h	FUNCTION_39	CALL_3
0x4000c5e	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       401	utf8.c	FUNCTION_12	CALL_10
0x4000c63	      0xe800000000	                          call 0x4000c68	       401	utf8.c	FUNCTION_12	CALL_10
0x4000c68	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       402	utf8.c	FUNCTION_12
0x4000c6d	    0x644833042528	                xor rax, qword fs:[0x28]	       402	utf8.c	FUNCTION_12
0x4000c76	            0x756b	                           jne 0x4000ce3	       402	utf8.c	FUNCTION_12
0x4000c78	        0x4883c478	                           add rsp, 0x78	       402	utf8.c	FUNCTION_12
0x4000c7c	              0x5b	                                 pop rbx	       402	utf8.c	FUNCTION_12
0x4000c7d	              0x5d	                                 pop rbp	       402	utf8.c	FUNCTION_12
0x4000c7e	            0x415c	                                 pop r12	       402	utf8.c	FUNCTION_12
0x4000c80	            0x415d	                                 pop r13	       402	utf8.c	FUNCTION_12
0x4000c82	            0x415e	                                 pop r14	       402	utf8.c	FUNCTION_12
0x4000c84	            0x415f	                                 pop r15	       402	utf8.c	FUNCTION_12
0x4000c86	              0xc3	                                     ret	       402	utf8.c	FUNCTION_12
0x4000c87	    0x660f1f840000	                    nop word [rax + rax]	       402	utf8.c	FUNCTION_12
0x4000c90	          0x4c29fa	                            sub rdx, r15	        53	string3.h	FUNCTION_39	CALL_3
0x4000c93	          0x4c89fe	                            mov rsi, r15	        53	string3.h	FUNCTION_39	CALL_3
0x4000c96	          0x4889df	                            mov rdi, rbx	        53	string3.h	FUNCTION_39	CALL_3
0x4000c99	          0x4d89fd	                            mov r13, r15	       394	utf8.c	FUNCTION_12	WHILE_1	CALL_7
0x4000c9c	          0x4401f5	                           add ebp, r14d	       396	utf8.c	FUNCTION_12	WHILE_1
0x4000c9f	      0xe800000000	                          call 0x4000ca4	        53	string3.h	FUNCTION_39	CALL_3
0x4000ca4	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	       395	utf8.c	FUNCTION_12	WHILE_1
0x4000ca9	          0x4c89f8	                            mov rax, r15	       395	utf8.c	FUNCTION_12	WHILE_1
0x4000cac	          0x4c29e8	                            sub rax, r13	       395	utf8.c	FUNCTION_12	WHILE_1
0x4000caf	          0x4801c3	                            add rbx, rax	       395	utf8.c	FUNCTION_12	WHILE_1
0x4000cb2	      0xe969feffff	                           jmp 0x4000b20	       395	utf8.c	FUNCTION_12	WHILE_1
0x4000cb7	    0x48c744241000	               mov qword [rsp + 0x10], 0	       395	utf8.c	FUNCTION_12	WHILE_1
0x4000cc0	      0xe92cfeffff	                           jmp 0x4000af1	       395	utf8.c	FUNCTION_12	WHILE_1
0x4000cc5	    0x803d00000000	                cmp byte [0x04000ccc], 0	       168	strbuf.h	FUNCTION_30	CALL_2
0x4000ccc	     0xf8444ffffff	                            je 0x4000c16	       168	strbuf.h	FUNCTION_30	CALL_2
0x4000cd2	      0xe800000000	                          call 0x4000cd7	       168	strbuf.h	FUNCTION_30	CALL_2
0x4000cd7	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_30	CALL_1
0x4000cdc	            0x31c0	                            xor eax, eax	       163	strbuf.h	FUNCTION_30	CALL_1
0x4000cde	      0xe800000000	                          call 0x4000ce3	       163	strbuf.h	FUNCTION_30	CALL_1
0x4000ce3	      0xe800000000	                          call 0x4000ce8	       402	utf8.c	FUNCTION_12
utf8_strnwidth	DO,0:FOR,0:IF,1:functions,0:ELSE,0:SWITCH,0:WHILE,2:CALL,3	65
0x40004d0	            0x4156	                                push r14	       207	utf8.c	FUNCTION_6
0x40004d2	            0x4155	                                push r13	       207	utf8.c	FUNCTION_6
0x40004d4	          0x4189d6	                           mov r14d, edx	       207	utf8.c	FUNCTION_6
0x40004d7	            0x4154	                                push r12	       207	utf8.c	FUNCTION_6
0x40004d9	              0x55	                                push rbp	       207	utf8.c	FUNCTION_6
0x40004da	              0x53	                                push rbx	       207	utf8.c	FUNCTION_6
0x40004db	          0x4889fb	                            mov rbx, rdi	       207	utf8.c	FUNCTION_6
0x40004de	        0x4883ec10	                           sub rsp, 0x10	       207	utf8.c	FUNCTION_6
0x40004e2	          0x83feff	             cmp esi, 0xffffffffffffffff	       211	utf8.c	FUNCTION_6	IF_1
0x40004e5	      0x48897c2408	                mov qword [rsp + 8], rdi	       207	utf8.c	FUNCTION_6
0x40004ea	     0xf848c000000	                            je 0x400057c	       211	utf8.c	FUNCTION_6	IF_1
0x40004f0	          0x4885ff	                           test rdi, rdi	       213	utf8.c	FUNCTION_6	WHILE_1
0x40004f3	          0x4189f4	                           mov r12d, esi	       213	utf8.c	FUNCTION_6	WHILE_1
0x40004f6	            0x7448	                            je 0x4000540	       213	utf8.c	FUNCTION_6	WHILE_1
0x40004f8	          0x4d63ec	                        movsxd r13, r12d	       213	utf8.c	FUNCTION_6	WHILE_1
0x40004fb	            0x31ed	                            xor ebp, ebp	       213	utf8.c	FUNCTION_6	WHILE_1
0x40004fd	          0x4901dd	                            add r13, rbx	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000500	          0x4c39eb	                            cmp rbx, r13	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000503	            0x7210	                            jb 0x4000515	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000505	            0xeb66	                           jmp 0x400056d	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000507	    0x660f1f840000	                    nop word [rax + rax]	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000510	          0x4c39eb	                            cmp rbx, r13	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000513	            0x7358	                           jae 0x400056d	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000515	          0x4585f6	                         test r14d, r14d	       215	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x4000518	            0x740e	                            je 0x4000528	       215	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x400051a	          0x803b1b	                    cmp byte [rbx], 0x1b	        15	utf8.c	IF_1	FUNCTION_1
0x400051d	          0x4889de	                            mov rsi, rbx	       216	utf8.c	FUNCTION_6	WHILE_1	WHILE_2	CALL_2
0x4000520	            0x742e	                            je 0x4000550	        15	utf8.c	IF_1	FUNCTION_1
0x4000522	    0x660f1f440000	                    nop word [rax + rax]	        15	utf8.c	IF_1	FUNCTION_1
0x4000528	      0x488d7c2408	                      lea rdi, [rsp + 8]	       218	utf8.c	FUNCTION_6	WHILE_1	CALL_3
0x400052d	            0x31f6	                            xor esi, esi	       218	utf8.c	FUNCTION_6	WHILE_1	CALL_3
0x400052f	      0xe800000000	                          call 0x4000534	       218	utf8.c	FUNCTION_6	WHILE_1	CALL_3
0x4000534	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000539	             0x1c5	                            add ebp, eax	       218	utf8.c	FUNCTION_6	WHILE_1	CALL_3
0x400053b	          0x4885db	                           test rbx, rbx	       213	utf8.c	FUNCTION_6	WHILE_1
0x400053e	            0x75d0	                           jne 0x4000510	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000540	        0x4883c410	                           add rsp, 0x10	       221	utf8.c	FUNCTION_6
0x4000544	          0x4489e0	                           mov eax, r12d	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000547	              0x5b	                                 pop rbx	       221	utf8.c	FUNCTION_6
0x4000548	              0x5d	                                 pop rbp	       221	utf8.c	FUNCTION_6
0x4000549	            0x415c	                                 pop r12	       221	utf8.c	FUNCTION_6
0x400054b	            0x415d	                                 pop r13	       221	utf8.c	FUNCTION_6
0x400054d	            0x415e	                                 pop r14	       221	utf8.c	FUNCTION_6
0x400054f	              0xc3	                                     ret	       221	utf8.c	FUNCTION_6
0x4000550	          0x4889f7	                            mov rdi, rsi	       221	utf8.c	FUNCTION_6
0x4000553	      0xe828feffff	call sym.display_mode_esc_sequence_len.part.4	       221	utf8.c	FUNCTION_6
0x4000558	            0x85c0	                           test eax, eax	       215	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x400055a	            0x74cc	                            je 0x4000528	       215	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x400055c	            0x4898	                                    cdqe	       217	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x400055e	          0x4801c6	                            add rsi, rax	       217	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x4000561	      0x4889742408	                mov qword [rsp + 8], rsi	       217	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x4000566	          0x803e1b	                    cmp byte [rsi], 0x1b	        15	utf8.c	IF_1	FUNCTION_1
0x4000569	            0x75bd	                           jne 0x4000528	        15	utf8.c	IF_1	FUNCTION_1
0x400056b	            0xebe3	                           jmp 0x4000550	        15	utf8.c	IF_1	FUNCTION_1
0x400056d	        0x4883c410	                           add rsp, 0x10	       221	utf8.c	FUNCTION_6
0x4000571	            0x89e8	                            mov eax, ebp	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000573	              0x5b	                                 pop rbx	       221	utf8.c	FUNCTION_6
0x4000574	              0x5d	                                 pop rbp	       221	utf8.c	FUNCTION_6
0x4000575	            0x415c	                                 pop r12	       221	utf8.c	FUNCTION_6
0x4000577	            0x415d	                                 pop r13	       221	utf8.c	FUNCTION_6
0x4000579	            0x415e	                                 pop r14	       221	utf8.c	FUNCTION_6
0x400057b	              0xc3	                                     ret	       221	utf8.c	FUNCTION_6
0x400057c	      0xe800000000	                          call 0x4000581	       212	utf8.c	FUNCTION_6	CALL_1
0x4000581	          0x4189c4	                           mov r12d, eax	       212	utf8.c	FUNCTION_6	CALL_1
0x4000584	      0xe96fffffff	                           jmp 0x40004f8	       212	utf8.c	FUNCTION_6	CALL_1
mbs_chrlen	DO,0:FOR,0:IF,3:functions,0:ELSE,1:SWITCH,0:WHILE,0:CALL,2	57
0x40011f0	              0x55	                                push rbp	       612	utf8.c	FUNCTION_23
0x40011f1	              0x53	                                push rbx	       612	utf8.c	FUNCTION_23
0x40011f2	          0x4889fd	                            mov rbp, rdi	       612	utf8.c	FUNCTION_23
0x40011f5	          0x4889f3	                            mov rbx, rsi	       612	utf8.c	FUNCTION_23
0x40011f8	        0x4883ec28	                           sub rsp, 0x28	       612	utf8.c	FUNCTION_23
0x40011fc	    0x64488b042528	                mov rax, qword fs:[0x28]	       612	utf8.c	FUNCTION_23
0x4001205	      0x4889442418	             mov qword [rsp + 0x18], rax	       612	utf8.c	FUNCTION_23
0x400120a	            0x31c0	                            xor eax, eax	       612	utf8.c	FUNCTION_23
0x400120c	          0x488b07	                    mov rax, qword [rdi]	       614	utf8.c	FUNCTION_23
0x400120f	          0x4885f6	                           test rsi, rsi	       615	utf8.c	FUNCTION_23
0x4001212	      0x4889442408	                mov qword [rsp + 8], rax	       614	utf8.c	FUNCTION_23
0x4001217	     0xf8493000000	                            je 0x40012b0	       615	utf8.c	FUNCTION_23
0x400121d	          0x488b0e	                    mov rcx, qword [rsi]	       615	utf8.c	FUNCTION_23
0x4001220	            0x31c0	                            xor eax, eax	       618	utf8.c	FUNCTION_23	IF_1
0x4001222	          0x4885c9	                           test rcx, rcx	       617	utf8.c	FUNCTION_23	IF_1
0x4001225	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       615	utf8.c	FUNCTION_23
0x400122a	            0x7433	                            je 0x400125f	       617	utf8.c	FUNCTION_23	IF_1
0x400122c	          0x4885d2	                           test rdx, rdx	       422	utf8.c	FUNCTION_14	IF_1
0x400122f	            0x744f	                            je 0x4001280	       422	utf8.c	FUNCTION_14	IF_1
0x4001231	          0x4889d6	                            mov rsi, rdx	       424	utf8.c	FUNCTION_14	IF_2	CALL_1
0x4001234	      0xbf00000000	                              mov edi, 0	       424	utf8.c	FUNCTION_14	IF_2	CALL_1
0x4001239	      0xe8d2f0ffff	              call sym.same_utf_encoding	       424	utf8.c	FUNCTION_14	IF_2	CALL_1
0x400123e	            0x85c0	                           test eax, eax	       424	utf8.c	FUNCTION_14	IF_2	CALL_1
0x4001240	            0x753e	                           jne 0x4001280	       424	utf8.c	FUNCTION_14	IF_2	CALL_1
0x4001242	        0x488b4d00	                    mov rcx, qword [rbp]	       424	utf8.c	FUNCTION_14	IF_2	CALL_1
0x4001246	      0xba01000000	                              mov edx, 1	       623	utf8.c	FUNCTION_23	IF_2
0x400124b	      0xb801000000	                              mov eax, 1	       623	utf8.c	FUNCTION_23	IF_2
0x4001250	          0x4801d1	                            add rcx, rdx	       634	utf8.c	FUNCTION_23
0x4001253	          0x4885db	                           test rbx, rbx	       635	utf8.c	FUNCTION_23	IF_3
0x4001256	        0x48894d00	                    mov qword [rbp], rcx	       634	utf8.c	FUNCTION_23
0x400125a	            0x7403	                            je 0x400125f	       635	utf8.c	FUNCTION_23	IF_3
0x400125c	          0x482913	                    sub qword [rbx], rdx	       636	utf8.c	FUNCTION_23	IF_3
0x400125f	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       639	utf8.c	FUNCTION_23
0x4001264	    0x644833342528	                xor rsi, qword fs:[0x28]	       639	utf8.c	FUNCTION_23
0x400126d	            0x7555	                           jne 0x40012c4	       639	utf8.c	FUNCTION_23
0x400126f	        0x4883c428	                           add rsp, 0x28	       639	utf8.c	FUNCTION_23
0x4001273	              0x5b	                                 pop rbx	       639	utf8.c	FUNCTION_23
0x4001274	              0x5d	                                 pop rbp	       639	utf8.c	FUNCTION_23
0x4001275	              0xc3	                                     ret	       639	utf8.c	FUNCTION_23
0x4001276	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       639	utf8.c	FUNCTION_23
0x4001280	      0x488d742410	                   lea rsi, [rsp + 0x10]	       621	utf8.c	FUNCTION_23	IF_2	CALL_2
0x4001285	      0x488d7c2408	                      lea rdi, [rsp + 8]	       621	utf8.c	FUNCTION_23	IF_2	CALL_2
0x400128a	      0xe8b1edffff	             call sym.pick_one_utf8_char	       621	utf8.c	FUNCTION_23	IF_2	CALL_2
0x400128f	      0x488b542408	                mov rdx, qword [rsp + 8]	       623	utf8.c	FUNCTION_23	IF_2
0x4001294	          0x4885d2	                           test rdx, rdx	       623	utf8.c	FUNCTION_23	IF_2
0x4001297	            0x74a9	                            je 0x4001242	       623	utf8.c	FUNCTION_23	IF_2
0x4001299	        0x488b4d00	                    mov rcx, qword [rbp]	       623	utf8.c	FUNCTION_23	IF_2
0x400129d	          0x4829ca	                            sub rdx, rcx	       623	utf8.c	FUNCTION_23	IF_2
0x40012a0	            0x89d0	                            mov eax, edx	       623	utf8.c	FUNCTION_23	IF_2
0x40012a2	          0x4863d2	                         movsxd rdx, edx	       623	utf8.c	FUNCTION_23	IF_2
0x40012a5	            0xeba9	                           jmp 0x4001250	       623	utf8.c	FUNCTION_23	IF_2
0x40012a7	    0x660f1f840000	                    nop word [rax + rax]	       623	utf8.c	FUNCTION_23	IF_2
0x40012b0	          0x4885d2	                           test rdx, rdx	       422	utf8.c	FUNCTION_14	IF_1
0x40012b3	    0x48c7442410ff	mov qword [rsp + 0x10], 0xffffffffffffffff	       615	utf8.c	FUNCTION_23
0x40012bc	     0xf856fffffff	                           jne 0x4001231	       422	utf8.c	FUNCTION_14	IF_1
0x40012c2	            0xebbc	                           jmp 0x4001280	       422	utf8.c	FUNCTION_14	IF_1
0x40012c4	      0xe800000000	                          call 0x40012c9	       639	utf8.c	FUNCTION_23
utf8_fprintf	DO,0:FOR,0:IF,1:functions,0:ELSE,0:SWITCH,0:WHILE,0:CALL,6	53
0x4000d70	              0x53	                                push rbx	       447	utf8.c	FUNCTION_16
0x4000d71	          0x4889fb	                            mov rbx, rdi	       447	utf8.c	FUNCTION_16
0x4000d74	    0x4881ecf00000	                           sub rsp, 0xf0	       447	utf8.c	FUNCTION_16
0x4000d7b	            0x84c0	                             test al, al	       447	utf8.c	FUNCTION_16
0x4000d7d	      0x4889542450	             mov qword [rsp + 0x50], rdx	       447	utf8.c	FUNCTION_16
0x4000d82	      0x48894c2458	             mov qword [rsp + 0x58], rcx	       447	utf8.c	FUNCTION_16
0x4000d87	      0x4c89442460	              mov qword [rsp + 0x60], r8	       447	utf8.c	FUNCTION_16
0x4000d8c	      0x4c894c2468	              mov qword [rsp + 0x68], r9	       447	utf8.c	FUNCTION_16
0x4000d91	            0x743d	                            je 0x4000dd0	       447	utf8.c	FUNCTION_16
0x4000d93	       0xf29442470	       movaps xmmword [rsp + 0x70], xmm0	       447	utf8.c	FUNCTION_16
0x4000d98	     0xf298c248000	       movaps xmmword [rsp + 0x80], xmm1	       447	utf8.c	FUNCTION_16
0x4000da0	     0xf2994249000	       movaps xmmword [rsp + 0x90], xmm2	       447	utf8.c	FUNCTION_16
0x4000da8	     0xf299c24a000	       movaps xmmword [rsp + 0xa0], xmm3	       447	utf8.c	FUNCTION_16
0x4000db0	     0xf29a424b000	       movaps xmmword [rsp + 0xb0], xmm4	       447	utf8.c	FUNCTION_16
0x4000db8	     0xf29ac24c000	       movaps xmmword [rsp + 0xc0], xmm5	       447	utf8.c	FUNCTION_16
0x4000dc0	     0xf29b424d000	       movaps xmmword [rsp + 0xd0], xmm6	       447	utf8.c	FUNCTION_16
0x4000dc8	     0xf29bc24e000	       movaps xmmword [rsp + 0xe0], xmm7	       447	utf8.c	FUNCTION_16
0x4000dd0	    0x64488b042528	                mov rax, qword fs:[0x28]	       447	utf8.c	FUNCTION_16
0x4000dd9	      0x4889442438	             mov qword [rsp + 0x38], rax	       447	utf8.c	FUNCTION_16
0x4000dde	            0x31c0	                            xor eax, eax	       447	utf8.c	FUNCTION_16
0x4000de0	    0x488d84240001	                  lea rax, [rsp + 0x100]	       452	utf8.c	FUNCTION_16	CALL_1
0x4000de8	      0x488d542420	                   lea rdx, [rsp + 0x20]	       453	utf8.c	FUNCTION_16	CALL_2
0x4000ded	          0x4889e7	                            mov rdi, rsp	       453	utf8.c	FUNCTION_16	CALL_2
0x4000df0	      0x4889442428	             mov qword [rsp + 0x28], rax	       452	utf8.c	FUNCTION_16	CALL_1
0x4000df5	      0x488d442440	                   lea rax, [rsp + 0x40]	       452	utf8.c	FUNCTION_16	CALL_1
0x4000dfa	    0x48c704240000	                      mov qword [rsp], 0	       448	utf8.c	FUNCTION_16
0x4000e02	    0x48c744240800	                  mov qword [rsp + 8], 0	       448	utf8.c	FUNCTION_16
0x4000e0b	    0x48c744241000	               mov qword [rsp + 0x10], 0	       448	utf8.c	FUNCTION_16
0x4000e14	      0x4889442430	             mov qword [rsp + 0x30], rax	       452	utf8.c	FUNCTION_16	CALL_1
0x4000e19	    0xc74424201000	           mov dword [rsp + 0x20], 0x10 	       452	utf8.c	FUNCTION_16	CALL_1
0x4000e21	    0xc74424243000	           mov dword [rsp + 0x24], 0x30 	       452	utf8.c	FUNCTION_16	CALL_1
0x4000e29	      0xe800000000	                          call 0x4000e2e	       453	utf8.c	FUNCTION_16	CALL_2
0x4000e2e	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       456	utf8.c	FUNCTION_16	CALL_4
0x4000e33	          0x4889de	                            mov rsi, rbx	       456	utf8.c	FUNCTION_16	CALL_4
0x4000e36	      0xe800000000	                          call 0x4000e3b	       456	utf8.c	FUNCTION_16	CALL_4
0x4000e3b	            0x85c0	                           test eax, eax	       457	utf8.c	FUNCTION_16	IF_1
0x4000e3d	            0x89c3	                            mov ebx, eax	       456	utf8.c	FUNCTION_16	CALL_4
0x4000e3f	            0x7813	                            js 0x4000e54	       457	utf8.c	FUNCTION_16	IF_1
0x4000e41	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       225	utf8.c	FUNCTION_7	CALL_1
0x4000e46	            0x31d2	                            xor edx, edx	       225	utf8.c	FUNCTION_7	CALL_1
0x4000e48	      0xbeffffffff	                     mov esi, 0xffffffff	       225	utf8.c	FUNCTION_7	CALL_1
0x4000e4d	      0xe800000000	                          call 0x4000e52	       225	utf8.c	FUNCTION_7	CALL_1
0x4000e52	            0x89c3	                            mov ebx, eax	       225	utf8.c	FUNCTION_7	CALL_1
0x4000e54	          0x4889e7	                            mov rdi, rsp	       459	utf8.c	FUNCTION_16	CALL_6
0x4000e57	      0xe800000000	                          call 0x4000e5c	       459	utf8.c	FUNCTION_16	CALL_6
0x4000e5c	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       461	utf8.c	FUNCTION_16
0x4000e61	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       461	utf8.c	FUNCTION_16
0x4000e6a	            0x89d8	                            mov eax, ebx	       461	utf8.c	FUNCTION_16
0x4000e6c	            0x7509	                           jne 0x4000e77	       461	utf8.c	FUNCTION_16
0x4000e6e	    0x4881c4f00000	                           add rsp, 0xf0	       461	utf8.c	FUNCTION_16
0x4000e75	              0x5b	                                 pop rbx	       461	utf8.c	FUNCTION_16
0x4000e76	              0xc3	                                     ret	       461	utf8.c	FUNCTION_16
0x4000e77	      0xe800000000	                          call 0x4000e7c	       461	utf8.c	FUNCTION_16
is_missing_required_utf_bom	DO,0:FOR,0:IF,0:functions,0:ELSE,0:SWITCH,0:WHILE,0:CALL,6	64
0x4001130	            0x4154	                                push r12	       590	utf8.c	FUNCTION_22
0x4001132	              0x55	                                push rbp	       590	utf8.c	FUNCTION_22
0x4001133	          0x4989d4	                            mov r12, rdx	       590	utf8.c	FUNCTION_22
0x4001136	              0x53	                                push rbx	       590	utf8.c	FUNCTION_22
0x4001137	          0x4889f3	                            mov rbx, rsi	       590	utf8.c	FUNCTION_22
0x400113a	      0xbe00000000	                              mov esi, 0	       592	utf8.c	FUNCTION_22	CALL_1
0x400113f	          0x4889fd	                            mov rbp, rdi	       590	utf8.c	FUNCTION_22
0x4001142	      0xe8c9f1ffff	              call sym.same_utf_encoding	       592	utf8.c	FUNCTION_22	CALL_1
0x4001147	            0x85c0	                           test eax, eax	       595	utf8.c	FUNCTION_22
0x4001149	            0x743d	                            je 0x4001188	       595	utf8.c	FUNCTION_22
0x400114b	        0x4983fc01	                              cmp r12, 1	       566	utf8.c	FUNCTION_20	CALL_1
0x400114f	            0x766f	                           jbe 0x40011c0	       566	utf8.c	FUNCTION_20	CALL_1
0x4001151	          0x4885db	                           test rbx, rbx	       566	utf8.c	FUNCTION_20	CALL_1
0x4001154	            0x746a	                            je 0x40011c0	       566	utf8.c	FUNCTION_20	CALL_1
0x4001156	      0xba02000000	                              mov edx, 2	       566	utf8.c	FUNCTION_20	CALL_1
0x400115b	      0xbe00000000	                              mov esi, 0	       566	utf8.c	FUNCTION_20	CALL_1
0x4001160	          0x4889df	                            mov rdi, rbx	       566	utf8.c	FUNCTION_20	CALL_1
0x4001163	      0xe800000000	                          call 0x4001168	       566	utf8.c	FUNCTION_20	CALL_1
0x4001168	            0x85c0	                           test eax, eax	       566	utf8.c	FUNCTION_20	CALL_1
0x400116a	            0x741c	                            je 0x4001188	       566	utf8.c	FUNCTION_20	CALL_1
0x400116c	      0xba02000000	                              mov edx, 2	       566	utf8.c	FUNCTION_20	CALL_1
0x4001171	      0xbe00000000	                              mov esi, 0	       566	utf8.c	FUNCTION_20	CALL_1
0x4001176	          0x4889df	                            mov rdi, rbx	       566	utf8.c	FUNCTION_20	CALL_1
0x4001179	      0xe800000000	                          call 0x400117e	       566	utf8.c	FUNCTION_20	CALL_1
0x400117e	            0x85c0	                           test eax, eax	       566	utf8.c	FUNCTION_20	CALL_1
0x4001180	            0x753e	                           jne 0x40011c0	       566	utf8.c	FUNCTION_20	CALL_1
0x4001182	    0x660f1f440000	                    nop word [rax + rax]	       566	utf8.c	FUNCTION_20	CALL_1
0x4001188	      0xbe00000000	                              mov esi, 0	       596	utf8.c	FUNCTION_22	CALL_4
0x400118d	          0x4889ef	                            mov rdi, rbp	       596	utf8.c	FUNCTION_22	CALL_4
0x4001190	      0xe87bf1ffff	              call sym.same_utf_encoding	       596	utf8.c	FUNCTION_22	CALL_4
0x4001195	            0x85c0	                           test eax, eax	       595	utf8.c	FUNCTION_22
0x4001197	            0x7421	                            je 0x40011ba	       595	utf8.c	FUNCTION_22
0x4001199	          0x4885db	                           test rbx, rbx	       566	utf8.c	FUNCTION_20	CALL_1
0x400119c	            0x7422	                            je 0x40011c0	       566	utf8.c	FUNCTION_20	CALL_1
0x400119e	        0x4983fc03	                              cmp r12, 3	       566	utf8.c	FUNCTION_20	CALL_1
0x40011a2	            0x761c	                           jbe 0x40011c0	       566	utf8.c	FUNCTION_20	CALL_1
0x40011a4	      0xba04000000	                              mov edx, 4	       566	utf8.c	FUNCTION_20	CALL_1
0x40011a9	      0xbe00000000	                              mov esi, 0	       566	utf8.c	FUNCTION_20	CALL_1
0x40011ae	          0x4889df	                            mov rdi, rbx	       566	utf8.c	FUNCTION_20	CALL_1
0x40011b1	      0xe800000000	                          call 0x40011b6	       566	utf8.c	FUNCTION_20	CALL_1
0x40011b6	            0x85c0	                           test eax, eax	       566	utf8.c	FUNCTION_20	CALL_1
0x40011b8	            0x7516	                           jne 0x40011d0	       566	utf8.c	FUNCTION_20	CALL_1
0x40011ba	              0x5b	                                 pop rbx	       600	utf8.c	FUNCTION_22
0x40011bb	              0x5d	                                 pop rbp	       600	utf8.c	FUNCTION_22
0x40011bc	            0x415c	                                 pop r12	       600	utf8.c	FUNCTION_22
0x40011be	              0xc3	                                     ret	       600	utf8.c	FUNCTION_22
0x40011bf	              0x90	                                     nop	       600	utf8.c	FUNCTION_22
0x40011c0	              0x5b	                                 pop rbx	       600	utf8.c	FUNCTION_22
0x40011c1	      0xb801000000	                              mov eax, 1	       595	utf8.c	FUNCTION_22
0x40011c6	              0x5d	                                 pop rbp	       600	utf8.c	FUNCTION_22
0x40011c7	            0x415c	                                 pop r12	       600	utf8.c	FUNCTION_22
0x40011c9	              0xc3	                                     ret	       600	utf8.c	FUNCTION_22
0x40011ca	    0x660f1f440000	                    nop word [rax + rax]	       600	utf8.c	FUNCTION_22
0x40011d0	          0x4889df	                            mov rdi, rbx	       566	utf8.c	FUNCTION_20	CALL_1
0x40011d3	      0xba04000000	                              mov edx, 4	       566	utf8.c	FUNCTION_20	CALL_1
0x40011d8	      0xbe00000000	                              mov esi, 0	       566	utf8.c	FUNCTION_20	CALL_1
0x40011dd	      0xe800000000	                          call 0x40011e2	       566	utf8.c	FUNCTION_20	CALL_1
0x40011e2	            0x85c0	                           test eax, eax	       595	utf8.c	FUNCTION_22
0x40011e4	           0xf95c0	                                setne al	       595	utf8.c	FUNCTION_22
0x40011e7	              0x5b	                                 pop rbx	       600	utf8.c	FUNCTION_22
0x40011e8	           0xfb6c0	                           movzx eax, al	       595	utf8.c	FUNCTION_22
0x40011eb	              0x5d	                                 pop rbp	       600	utf8.c	FUNCTION_22
0x40011ec	            0x415c	                                 pop r12	       600	utf8.c	FUNCTION_22
0x40011ee	              0xc3	                                     ret	       600	utf8.c	FUNCTION_22
same_encoding	DO,0:FOR,0:IF,3:functions,0:ELSE,0:SWITCH,0:WHILE,0:CALL,2	27
0x4000d20	              0x55	                                push rbp	       430	utf8.c	FUNCTION_15
0x4000d21	              0x53	                                push rbx	       430	utf8.c	FUNCTION_15
0x4000d22	      0xb800000000	                              mov eax, 0	       434	utf8.c	FUNCTION_15	IF_1
0x4000d27	          0x4889fb	                            mov rbx, rdi	       430	utf8.c	FUNCTION_15
0x4000d2a	          0x4889f5	                            mov rbp, rsi	       430	utf8.c	FUNCTION_15
0x4000d2d	        0x4883ec08	                              sub rsp, 8	       430	utf8.c	FUNCTION_15
0x4000d31	          0x4885ff	                           test rdi, rdi	       434	utf8.c	FUNCTION_15	IF_1
0x4000d34	        0x480f44d8	                          cmove rbx, rax	       434	utf8.c	FUNCTION_15	IF_1
0x4000d38	          0x4885f6	                           test rsi, rsi	       436	utf8.c	FUNCTION_15	IF_2
0x4000d3b	        0x480f44e8	                          cmove rbp, rax	       436	utf8.c	FUNCTION_15	IF_2
0x4000d3f	          0x4889df	                            mov rdi, rbx	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x4000d42	          0x4889ee	                            mov rsi, rbp	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x4000d45	      0xe8c6f5ffff	              call sym.same_utf_encoding	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x4000d4a	            0x85c0	                           test eax, eax	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x4000d4c	      0xba01000000	                              mov edx, 1	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x4000d51	            0x7512	                           jne 0x4000d65	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x4000d53	          0x4889ee	                            mov rsi, rbp	       439	utf8.c	FUNCTION_15	CALL_2
0x4000d56	          0x4889df	                            mov rdi, rbx	       439	utf8.c	FUNCTION_15	CALL_2
0x4000d59	      0xe800000000	                          call 0x4000d5e	       439	utf8.c	FUNCTION_15	CALL_2
0x4000d5e	            0x31d2	                            xor edx, edx	       439	utf8.c	FUNCTION_15	CALL_2
0x4000d60	            0x85c0	                           test eax, eax	       439	utf8.c	FUNCTION_15	CALL_2
0x4000d62	           0xf94c2	                                 sete dl	       439	utf8.c	FUNCTION_15	CALL_2
0x4000d65	        0x4883c408	                              add rsp, 8	       440	utf8.c	FUNCTION_15
0x4000d69	            0x89d0	                            mov eax, edx	       440	utf8.c	FUNCTION_15
0x4000d6b	              0x5b	                                 pop rbx	       440	utf8.c	FUNCTION_15
0x4000d6c	              0x5d	                                 pop rbp	       440	utf8.c	FUNCTION_15
0x4000d6d	              0xc3	                                     ret	       440	utf8.c	FUNCTION_15
