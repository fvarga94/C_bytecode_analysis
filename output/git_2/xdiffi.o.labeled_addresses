measure_split	IF,5:functions,0:WHILE,0:ELSE,1:FOR,2:CALL,3:SWITCH,0:DO,0	70
0x4000172	            0x4156	                                push r14	       504	xdiffi.c	FUNCTION_7
0x4000174	            0x4155	                                push r13	       504	xdiffi.c	FUNCTION_7
0x4000176	            0x4154	                                push r12	       504	xdiffi.c	FUNCTION_7
0x4000178	              0x55	                                push rbp	       504	xdiffi.c	FUNCTION_7
0x4000179	              0x53	                                push rbx	       504	xdiffi.c	FUNCTION_7
0x400017a	          0x4989fc	                            mov r12, rdi	       504	xdiffi.c	FUNCTION_7
0x400017d	          0x4889f5	                            mov rbp, rsi	       504	xdiffi.c	FUNCTION_7
0x4000180	          0x4889d3	                            mov rbx, rdx	       504	xdiffi.c	FUNCTION_7
0x4000183	        0x48397738	            cmp qword [rdi + 0x38], rsi 	       507	xdiffi.c	FUNCTION_7	IF_1
0x4000187	            0x7f0f	                            jg 0x4000198	       507	xdiffi.c	FUNCTION_7	IF_1
0x4000189	    0xc70201000000	                      mov dword [rdx], 1	       508	xdiffi.c	FUNCTION_7	IF_1
0x400018f	    0xc74204ffffff	        mov dword [rdx + 4], 0xffffffff 	       509	xdiffi.c	FUNCTION_7	IF_1
0x4000196	            0xeb16	                           jmp 0x40001ae	       509	xdiffi.c	FUNCTION_7	IF_1
0x4000198	    0xc70200000000	                      mov dword [rdx], 0	       511	xdiffi.c	FUNCTION_7	ELSE_1
0x400019e	        0x488b4760	            mov rax, qword [rdi + 0x60] 	       512	xdiffi.c	FUNCTION_7	ELSE_1	CALL_1
0x40001a2	        0x488b3cf0	            mov rdi, qword [rax + rsi*8]	       512	xdiffi.c	FUNCTION_7	ELSE_1	CALL_1
0x40001a6	      0xe83bffffff	                     call sym.get_indent	       512	xdiffi.c	FUNCTION_7	ELSE_1	CALL_1
0x40001ab	          0x894304	                mov dword [rbx + 4], eax	       512	xdiffi.c	FUNCTION_7	ELSE_1	CALL_1
0x40001ae	    0xc74308000000	                  mov dword [rbx + 8], 0	       515	xdiffi.c	FUNCTION_7
0x40001b5	    0xc7430cffffff	      mov dword [rbx + 0xc], 0xffffffff 	       516	xdiffi.c	FUNCTION_7
0x40001bc	          0x4989ed	                            mov r13, rbp	       517	xdiffi.c	FUNCTION_7	FOR_1
0x40001bf	        0x4983ed01	                              sub r13, 1	       517	xdiffi.c	FUNCTION_7	FOR_1
0x40001c3	            0x7843	                            js 0x4000208	       517	xdiffi.c	FUNCTION_7	FOR_1
0x40001c5	    0x4e8d34ed0000	                        lea r14, [r13*8]	       517	xdiffi.c	FUNCTION_7	FOR_1
0x40001cd	      0x498b442460	            mov rax, qword [r12 + 0x60] 	       518	xdiffi.c	FUNCTION_7	FOR_1	CALL_2
0x40001d2	        0x4a8b3c30	              mov rdi, qword [rax + r14]	       518	xdiffi.c	FUNCTION_7	FOR_1	CALL_2
0x40001d6	      0xe80bffffff	                     call sym.get_indent	       518	xdiffi.c	FUNCTION_7	FOR_1	CALL_2
0x40001db	          0x89430c	              mov dword [rbx + 0xc], eax	       518	xdiffi.c	FUNCTION_7	FOR_1	CALL_2
0x40001de	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       519	xdiffi.c	FUNCTION_7	FOR_1	IF_2
0x40001e1	            0x7525	                           jne 0x4000208	       519	xdiffi.c	FUNCTION_7	FOR_1	IF_2
0x40001e3	          0x8b4308	                mov eax, dword [rbx + 8]	       521	xdiffi.c	FUNCTION_7	FOR_1
0x40001e6	          0x83c001	                              add eax, 1	       521	xdiffi.c	FUNCTION_7	FOR_1
0x40001e9	          0x894308	                mov dword [rbx + 8], eax	       521	xdiffi.c	FUNCTION_7	FOR_1
0x40001ec	          0x83f814	                           cmp eax, 0x14	       522	xdiffi.c	FUNCTION_7	FOR_1	IF_3
0x40001ef	            0x7509	                           jne 0x40001fa	       522	xdiffi.c	FUNCTION_7	FOR_1	IF_3
0x40001f1	    0xc7430c000000	                mov dword [rbx + 0xc], 0	       523	xdiffi.c	FUNCTION_7	FOR_1	IF_3
0x40001f8	            0xeb0e	                           jmp 0x4000208	       524	xdiffi.c	FUNCTION_7	FOR_1	IF_3
0x40001fa	        0x4983ed01	                              sub r13, 1	       517	xdiffi.c	FUNCTION_7	FOR_1
0x40001fe	        0x4983ee08	                              sub r14, 8	       517	xdiffi.c	FUNCTION_7	FOR_1
0x4000202	        0x4983fdff	             cmp r13, 0xffffffffffffffff	       517	xdiffi.c	FUNCTION_7	FOR_1
0x4000206	            0x75c5	                           jne 0x40001cd	       517	xdiffi.c	FUNCTION_7	FOR_1
0x4000208	    0xc74310000000	               mov dword [rbx + 0x10], 0	       528	xdiffi.c	FUNCTION_7
0x400020f	    0xc74314ffffff	     mov dword [rbx + 0x14], 0xffffffff 	       529	xdiffi.c	FUNCTION_7
0x4000216	        0x4883c501	                              add rbp, 1	       530	xdiffi.c	FUNCTION_7	FOR_2
0x400021a	      0x493b6c2438	            cmp rbp, qword [r12 + 0x38] 	       530	xdiffi.c	FUNCTION_7	FOR_2
0x400021f	            0x7d44	                           jge 0x4000265	       530	xdiffi.c	FUNCTION_7	FOR_2
0x4000221	    0x4c8d2ced0000	                        lea r13, [rbp*8]	       530	xdiffi.c	FUNCTION_7	FOR_2
0x4000229	      0x498b442460	            mov rax, qword [r12 + 0x60] 	       531	xdiffi.c	FUNCTION_7	FOR_2	CALL_3
0x400022e	        0x4a8b3c28	              mov rdi, qword [rax + r13]	       531	xdiffi.c	FUNCTION_7	FOR_2	CALL_3
0x4000232	      0xe8affeffff	                     call sym.get_indent	       531	xdiffi.c	FUNCTION_7	FOR_2	CALL_3
0x4000237	          0x894314	             mov dword [rbx + 0x14], eax	       531	xdiffi.c	FUNCTION_7	FOR_2	CALL_3
0x400023a	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       532	xdiffi.c	FUNCTION_7	FOR_2	IF_4
0x400023d	            0x7526	                           jne 0x4000265	       532	xdiffi.c	FUNCTION_7	FOR_2	IF_4
0x400023f	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       534	xdiffi.c	FUNCTION_7	FOR_2
0x4000242	          0x83c001	                              add eax, 1	       534	xdiffi.c	FUNCTION_7	FOR_2
0x4000245	          0x894310	             mov dword [rbx + 0x10], eax	       534	xdiffi.c	FUNCTION_7	FOR_2
0x4000248	          0x83f814	                           cmp eax, 0x14	       535	xdiffi.c	FUNCTION_7	FOR_2	IF_5
0x400024b	            0x7509	                           jne 0x4000256	       535	xdiffi.c	FUNCTION_7	FOR_2	IF_5
0x400024d	    0xc74314000000	               mov dword [rbx + 0x14], 0	       536	xdiffi.c	FUNCTION_7	FOR_2	IF_5
0x4000254	            0xeb0f	                           jmp 0x4000265	       537	xdiffi.c	FUNCTION_7	FOR_2	IF_5
0x4000256	        0x4883c501	                              add rbp, 1	       530	xdiffi.c	FUNCTION_7	FOR_2
0x400025a	        0x4983c508	                              add r13, 8	       530	xdiffi.c	FUNCTION_7	FOR_2
0x400025e	      0x49396c2438	            cmp qword [r12 + 0x38], rbp 	       530	xdiffi.c	FUNCTION_7	FOR_2
0x4000263	            0x7fc4	                            jg 0x4000229	       530	xdiffi.c	FUNCTION_7	FOR_2
0x4000265	              0x5b	                                 pop rbx	       540	xdiffi.c	FUNCTION_7
0x4000266	              0x5d	                                 pop rbp	       540	xdiffi.c	FUNCTION_7
0x4000267	            0x415c	                                 pop r12	       540	xdiffi.c	FUNCTION_7
0x4000269	            0x415d	                                 pop r13	       540	xdiffi.c	FUNCTION_7
0x400026b	            0x415e	                                 pop r14	       540	xdiffi.c	FUNCTION_7
0x400026d	              0xc3	                                     ret	       540	xdiffi.c	FUNCTION_7
xdl_diff	IF,5:functions,0:WHILE,0:ELSE,0:FOR,0:CALL,11:SWITCH,0:DO,0	124
0x400154f	            0x4157	                                push r15	      1019	xdiffi.c	FUNCTION_21
0x4001551	            0x4156	                                push r14	      1019	xdiffi.c	FUNCTION_21
0x4001553	            0x4155	                                push r13	      1019	xdiffi.c	FUNCTION_21
0x4001555	            0x4154	                                push r12	      1019	xdiffi.c	FUNCTION_21
0x4001557	              0x55	                                push rbp	      1019	xdiffi.c	FUNCTION_21
0x4001558	              0x53	                                push rbx	      1019	xdiffi.c	FUNCTION_21
0x4001559	    0x4881ec480100	                          sub rsp, 0x148	      1019	xdiffi.c	FUNCTION_21
0x4001560	          0x4889d3	                            mov rbx, rdx	      1019	xdiffi.c	FUNCTION_21
0x4001563	          0x4989ce	                            mov r14, rcx	      1019	xdiffi.c	FUNCTION_21
0x4001566	      0x4c89442408	                 mov qword [rsp + 8], r8	      1019	xdiffi.c	FUNCTION_21
0x400156b	    0x64488b042528	                mov rax, qword fs:[0x28]	      1019	xdiffi.c	FUNCTION_21
0x4001574	    0x488984243801	            mov qword [rsp + 0x138], rax	      1019	xdiffi.c	FUNCTION_21
0x400157c	            0x31c0	                            xor eax, eax	      1019	xdiffi.c	FUNCTION_21
0x400157e	      0x4883792800	               cmp qword [rcx + 0x28], 0	      1022	xdiffi.c	FUNCTION_21
0x4001583	      0xb800000000	                              mov eax, 0	      1022	xdiffi.c	FUNCTION_21
0x4001588	    0x41bd00000000	                             mov r13d, 0	      1022	xdiffi.c	FUNCTION_21
0x400158e	        0x4c0f44e8	                          cmove r13, rax	      1022	xdiffi.c	FUNCTION_21
0x4001592	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      1024	xdiffi.c	FUNCTION_21	IF_1	CALL_1
0x4001597	      0xe800000000	                          call 0x400159c	      1024	xdiffi.c	FUNCTION_21	IF_1	CALL_1
0x400159c	            0x85c0	                           test eax, eax	      1024	xdiffi.c	FUNCTION_21	IF_1	CALL_1
0x400159e	     0xf886a010000	                            js 0x400170e	      1024	xdiffi.c	FUNCTION_21	IF_1	CALL_1
0x40015a4	      0x488d442420	                   lea rax, [rsp + 0x20]	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40015a9	    0x488db424a800	                   lea rsi, [rsp + 0xa8]	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40015b1	          0x488b13	                    mov rdx, qword [rbx]	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40015b4	          0x4889c7	                            mov rdi, rax	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40015b7	      0xe800000000	                          call 0x40015bc	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40015bc	            0x85c0	                           test eax, eax	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40015be	            0x782f	                            js 0x40015ef	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40015c0	      0x488d442420	                   lea rax, [rsp + 0x20]	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x40015c5	    0x488dbc24a800	                   lea rdi, [rsp + 0xa8]	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x40015cd	          0x488b13	                    mov rdx, qword [rbx]	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x40015d0	          0x4889c6	                            mov rsi, rax	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x40015d3	      0xe800000000	                          call 0x40015d8	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x40015d8	            0x85c0	                           test eax, eax	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40015da	            0x7813	                            js 0x40015ef	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40015dc	      0x488d742418	                   lea rsi, [rsp + 0x18]	      1030	xdiffi.c	FUNCTION_21	IF_2	CALL_4
0x40015e1	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1030	xdiffi.c	FUNCTION_21	IF_2	CALL_4
0x40015e6	      0xe800000000	                          call 0x40015eb	      1030	xdiffi.c	FUNCTION_21	IF_2	CALL_4
0x40015eb	            0x85c0	                           test eax, eax	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x40015ed	            0x7914	                           jns 0x4001603	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x40015ef	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1032	xdiffi.c	FUNCTION_21	IF_2	CALL_5
0x40015f4	      0xe800000000	                          call 0x40015f9	      1032	xdiffi.c	FUNCTION_21	IF_2	CALL_5
0x40015f9	      0xb8ffffffff	                     mov eax, 0xffffffff	      1033	xdiffi.c	FUNCTION_21	IF_2
0x40015fe	      0xe910010000	                           jmp 0x4001713	      1033	xdiffi.c	FUNCTION_21	IF_2
0x4001603	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      1035	xdiffi.c	FUNCTION_21	IF_3
0x4001608	          0x4885ed	                           test rbp, rbp	      1035	xdiffi.c	FUNCTION_21	IF_3
0x400160b	     0xf84ec000000	                            je 0x40016fd	      1035	xdiffi.c	FUNCTION_21	IF_3
0x4001611	          0x4c8b23	                    mov r12, qword [rbx]	      1036	xdiffi.c	FUNCTION_21	IF_3	IF_4
0x4001614	        0x41f6c480	                         test r12b, 0x80	      1036	xdiffi.c	FUNCTION_21	IF_3	IF_4
0x4001618	     0xf84a1000000	                            je 0x40016bf	      1036	xdiffi.c	FUNCTION_21	IF_3	IF_4
0x400161e	    0x4c8bbc248000	            mov r15, qword [rsp + 0x80] 	      1006	xdiffi.c	FUNCTION_20	FOR_1
0x4001626	        0x488b4508	                mov rax, qword [rbp + 8]	      1006	xdiffi.c	FUNCTION_20	FOR_1
0x400162a	        0x48c1e003	                              shl rax, 3	      1006	xdiffi.c	FUNCTION_20	FOR_1
0x400162e	      0x48837d1800	               cmp qword [rbp + 0x18], 0	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4001633	            0x7e2c	                           jle 0x4001661	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4001635	      0xbb00000000	                              mov ebx, 0	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x400163a	          0x4901c7	                            add r15, rax	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x400163d	        0x498b04df	            mov rax, qword [r15 + rbx*8]	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x4001641	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x4001645	        0x488b7808	                mov rdi, qword [rax + 8]	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x4001649	          0x4c89e2	                            mov rdx, r12	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x400164c	      0xe800000000	                          call 0x4001651	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x4001651	        0x4883c301	                              add rbx, 1	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4001655	        0x483b5d18	            cmp rbx, qword [rbp + 0x18] 	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4001659	            0x7d0b	                           jge 0x4001666	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x400165b	            0x85c0	                           test eax, eax	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x400165d	            0x75de	                           jne 0x400163d	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x400165f	            0xeb05	                           jmp 0x4001666	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4001661	      0xb801000000	                              mov eax, 1	      1002	xdiffi.c	FUNCTION_20	FOR_1
0x4001666	    0x4c8bbc240801	           mov r15, qword [rsp + 0x108] 	      1010	xdiffi.c	FUNCTION_20	FOR_1
0x400166e	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	      1010	xdiffi.c	FUNCTION_20	FOR_1
0x4001672	    0x488d14cd0000	                        lea rdx, [rcx*8]	      1010	xdiffi.c	FUNCTION_20	FOR_1
0x400167a	      0x48837d2000	               cmp qword [rbp + 0x20], 0	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x400167f	            0x7e2e	                           jle 0x40016af	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001681	            0x85c0	                           test eax, eax	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001683	            0x742a	                            je 0x40016af	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001685	      0xbb00000000	                              mov ebx, 0	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x400168a	          0x4901d7	                            add r15, rdx	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x400168d	        0x498b04df	            mov rax, qword [r15 + rbx*8]	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x4001691	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x4001695	        0x488b7808	                mov rdi, qword [rax + 8]	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x4001699	          0x4c89e2	                            mov rdx, r12	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x400169c	      0xe800000000	                          call 0x40016a1	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x40016a1	        0x4883c301	                              add rbx, 1	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x40016a5	        0x483b5d20	            cmp rbx, qword [rbp + 0x20] 	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x40016a9	            0x7d04	                           jge 0x40016af	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x40016ab	            0x85c0	                           test eax, eax	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x40016ad	            0x75de	                           jne 0x400168d	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x40016af	          0x894528	            mov dword [rbp + 0x28], eax 	      1014	xdiffi.c	FUNCTION_20	FOR_1
0x40016b2	        0x488b6d00	                    mov rbp, qword [rbp]	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x40016b6	          0x4885ed	                           test rbp, rbp	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x40016b9	     0xf855fffffff	                           jne 0x400161e	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x40016bf	          0x4c89f1	                            mov rcx, r14	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x40016c2	      0x488b542408	                mov rdx, qword [rsp + 8]	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x40016c7	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x40016cc	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x40016d1	          0x41ffd5	                                call r13	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x40016d4	            0x85c0	                           test eax, eax	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x40016d6	            0x791b	                           jns 0x40016f3	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x40016d8	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1041	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_8
0x40016dd	      0xe800000000	                          call 0x40016e2	      1041	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_8
0x40016e2	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1042	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_9
0x40016e7	      0xe800000000	                          call 0x40016ec	      1042	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_9
0x40016ec	      0xb8ffffffff	                     mov eax, 0xffffffff	      1043	xdiffi.c	FUNCTION_21	IF_3	IF_5
0x40016f1	            0xeb20	                           jmp 0x4001713	      1043	xdiffi.c	FUNCTION_21	IF_3	IF_5
0x40016f3	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1045	xdiffi.c	FUNCTION_21	IF_3	CALL_10
0x40016f8	      0xe800000000	                          call 0x40016fd	      1045	xdiffi.c	FUNCTION_21	IF_3	CALL_10
0x40016fd	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1047	xdiffi.c	FUNCTION_21	CALL_11
0x4001702	      0xe800000000	                          call 0x4001707	      1047	xdiffi.c	FUNCTION_21	CALL_11
0x4001707	      0xb800000000	                              mov eax, 0	      1049	xdiffi.c	FUNCTION_21
0x400170c	            0xeb05	                           jmp 0x4001713	      1049	xdiffi.c	FUNCTION_21
0x400170e	      0xb8ffffffff	                     mov eax, 0xffffffff	      1026	xdiffi.c	FUNCTION_21	IF_1
0x4001713	    0x488b8c243801	           mov rcx, qword [rsp + 0x138] 	      1050	xdiffi.c	FUNCTION_21
0x400171b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1050	xdiffi.c	FUNCTION_21
0x4001724	            0x7405	                            je 0x400172b	      1050	xdiffi.c	FUNCTION_21
0x4001726	      0xe800000000	                          call 0x400172b	      1050	xdiffi.c	FUNCTION_21
0x400172b	    0x4881c4480100	                          add rsp, 0x148	      1050	xdiffi.c	FUNCTION_21
0x4001732	              0x5b	                                 pop rbx	      1050	xdiffi.c	FUNCTION_21
0x4001733	              0x5d	                                 pop rbp	      1050	xdiffi.c	FUNCTION_21
0x4001734	            0x415c	                                 pop r12	      1050	xdiffi.c	FUNCTION_21
0x4001736	            0x415d	                                 pop r13	      1050	xdiffi.c	FUNCTION_21
0x4001738	            0x415e	                                 pop r14	      1050	xdiffi.c	FUNCTION_21
0x400173a	            0x415f	                                 pop r15	      1050	xdiffi.c	FUNCTION_21
0x400173c	              0xc3	                                     ret	      1050	xdiffi.c	FUNCTION_21
score_add_split	IF,8:functions,0:WHILE,0:ELSE,6:FOR,0:CALL,0:SWITCH,0:DO,0	60
0x4000040	        0x837f0cff	cmp dword [rdi + 0xc], 0xffffffffffffffff 	       612	xdiffi.c	FUNCTION_8	IF_1
0x4000044	            0x750a	                           jne 0x4000050	       612	xdiffi.c	FUNCTION_8	IF_1
0x4000046	        0x837f0800	                  cmp dword [rdi + 8], 0	       612	xdiffi.c	FUNCTION_8	IF_1
0x400004a	            0x7504	                           jne 0x4000050	       612	xdiffi.c	FUNCTION_8	IF_1
0x400004c	        0x83460401	                  add dword [rsi + 4], 1	       613	xdiffi.c	FUNCTION_8	IF_1
0x4000050	          0x833f00	                      cmp dword [rdi], 0	       615	xdiffi.c	FUNCTION_8	IF_2
0x4000053	            0x7404	                            je 0x4000059	       615	xdiffi.c	FUNCTION_8	IF_2
0x4000055	        0x83460415	               add dword [rsi + 4], 0x15	       616	xdiffi.c	FUNCTION_8	IF_2
0x4000059	      0xb800000000	                              mov eax, 0	       622	xdiffi.c	FUNCTION_8
0x400005e	        0x837f04ff	 cmp dword [rdi + 4], 0xffffffffffffffff	       622	xdiffi.c	FUNCTION_8
0x4000062	            0x7506	                           jne 0x400006a	       622	xdiffi.c	FUNCTION_8
0x4000064	          0x8b4710	            mov eax, dword [rdi + 0x10] 	       622	xdiffi.c	FUNCTION_8
0x4000067	          0x83c001	                              add eax, 1	       622	xdiffi.c	FUNCTION_8
0x400006a	            0x89c1	                            mov ecx, eax	       623	xdiffi.c	FUNCTION_8
0x400006c	           0x34f08	                add ecx, dword [rdi + 8]	       623	xdiffi.c	FUNCTION_8
0x400006f	          0x6bd1e2	       imul edx, ecx, 0xffffffffffffffe2	       627	xdiffi.c	FUNCTION_8
0x4000072	           0x35604	                add edx, dword [rsi + 4]	       627	xdiffi.c	FUNCTION_8
0x4000075	          0x8d0440	                  lea eax, [rax + rax*2]	       627	xdiffi.c	FUNCTION_8
0x4000078	          0x8d1442	                  lea edx, [rdx + rax*2]	       627	xdiffi.c	FUNCTION_8
0x400007b	          0x895604	                mov dword [rsi + 4], edx	       627	xdiffi.c	FUNCTION_8
0x400007e	          0x8b4704	                mov eax, dword [rdi + 4]	       629	xdiffi.c	FUNCTION_8	IF_3
0x4000081	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       629	xdiffi.c	FUNCTION_8	IF_3
0x4000084	            0x755a	                           jne 0x40000e0	       629	xdiffi.c	FUNCTION_8	IF_3
0x4000086	          0x8b4714	            mov eax, dword [rdi + 0x14] 	       632	xdiffi.c	FUNCTION_8	ELSE_1
0x4000089	             0x106	                    add dword [rsi], eax	       637	xdiffi.c	FUNCTION_8
0x400008b	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       639	xdiffi.c	FUNCTION_8	IF_4
0x400008e	            0x7454	                            je 0x40000e4	       639	xdiffi.c	FUNCTION_8	IF_4
0x4000090	        0x448b470c	              mov r8d, dword [rdi + 0xc]	       641	xdiffi.c	FUNCTION_8	ELSE_2	IF_5
0x4000094	        0x4183f8ff	             cmp r8d, 0xffffffffffffffff	       641	xdiffi.c	FUNCTION_8	ELSE_2	IF_5
0x4000098	            0x744a	                            je 0x40000e4	       641	xdiffi.c	FUNCTION_8	ELSE_2	IF_5
0x400009a	          0x4139c0	                            cmp r8d, eax	       643	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x400009d	            0x7d10	                           jge 0x40000af	       643	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x400009f	          0x83f901	                              cmp ecx, 1	       648	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x40000a2	            0x19c0	                            sbb eax, eax	       648	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x40000a4	          0x83e0f2	                     and eax, 0xfffffff2	       648	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x40000a7	        0x8d44100a	              lea eax, [rax + rdx + 0xa]	       647	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x40000ab	          0x894604	                mov dword [rsi + 4], eax	       647	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x40000ae	              0xc3	                                     ret	       647	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x40000af	          0x4139c0	                            cmp r8d, eax	       650	xdiffi.c	FUNCTION_8	ELSE_4	IF_7
0x40000b2	            0x7430	                            je 0x40000e4	       650	xdiffi.c	FUNCTION_8	ELSE_4	IF_7
0x40000b4	          0x8b7f14	            mov edi, dword [rdi + 0x14] 	       663	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40000b7	            0x39c7	                            cmp edi, eax	       663	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40000b9	            0x7e15	                           jle 0x40000d0	       663	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40000bb	          0x83ffff	             cmp edi, 0xffffffffffffffff	       663	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40000be	            0x7410	                            je 0x40000d0	       663	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40000c0	          0x83f901	                              cmp ecx, 1	       669	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40000c3	            0x19c0	                            sbb eax, eax	       669	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40000c5	          0x83e007	                              and eax, 7	       669	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40000c8	        0x8d441011	            lea eax, [rax + rdx + 0x11] 	       668	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40000cc	          0x894604	                mov dword [rsi + 4], eax	       668	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40000cf	              0xc3	                                     ret	       668	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40000d0	          0x83f901	                              cmp ecx, 1	       676	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x40000d3	            0x19c0	                            sbb eax, eax	       676	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x40000d5	          0x83e006	                              and eax, 6	       676	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x40000d8	        0x8d441011	            lea eax, [rax + rdx + 0x11] 	       675	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x40000dc	          0x894604	                mov dword [rsi + 4], eax	       675	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x40000df	              0xc3	                                     ret	       680	xdiffi.c	FUNCTION_8
0x40000e0	             0x106	                    add dword [rsi], eax	       637	xdiffi.c	FUNCTION_8
0x40000e2	            0xebac	                           jmp 0x4000090	       637	xdiffi.c	FUNCTION_8
0x40000e4	            0xf3c3	                                     ret	       637	xdiffi.c	FUNCTION_8
xdl_call_hunk_func	IF,2:functions,0:WHILE,0:ELSE,0:FOR,1:CALL,2:SWITCH,0:DO,0	50
0x400029a	            0x4154	                                push r12	       982	xdiffi.c	FUNCTION_19
0x400029c	              0x55	                                push rbp	       982	xdiffi.c	FUNCTION_19
0x400029d	              0x53	                                push rbx	       982	xdiffi.c	FUNCTION_19
0x400029e	        0x4883ec10	                           sub rsp, 0x10	       982	xdiffi.c	FUNCTION_19
0x40002a2	          0x4989d4	                            mov r12, rdx	       982	xdiffi.c	FUNCTION_19
0x40002a5	          0x4889cd	                            mov rbp, rcx	       982	xdiffi.c	FUNCTION_19
0x40002a8	    0x64488b042528	                mov rax, qword fs:[0x28]	       982	xdiffi.c	FUNCTION_19
0x40002b1	      0x4889442408	                mov qword [rsp + 8], rax	       982	xdiffi.c	FUNCTION_19
0x40002b6	            0x31c0	                            xor eax, eax	       982	xdiffi.c	FUNCTION_19
0x40002b8	        0x48893424	                    mov qword [rsp], rsi	       985	xdiffi.c	FUNCTION_19	FOR_1
0x40002bc	          0x4885f6	                           test rsi, rsi	       985	xdiffi.c	FUNCTION_19	FOR_1
0x40002bf	            0x744e	                            je 0x400030f	       985	xdiffi.c	FUNCTION_19	FOR_1
0x40002c1	          0x4889ee	                            mov rsi, rbp	       986	xdiffi.c	FUNCTION_19	FOR_1	CALL_1
0x40002c4	          0x4889e7	                            mov rdi, rsp	       986	xdiffi.c	FUNCTION_19	FOR_1	CALL_1
0x40002c7	      0xe800000000	                          call 0x40002cc	       986	xdiffi.c	FUNCTION_19	FOR_1	CALL_1
0x40002cc	          0x4889c3	                            mov rbx, rax	       986	xdiffi.c	FUNCTION_19	FOR_1	CALL_1
0x40002cf	        0x488b0424	                    mov rax, qword [rsp]	       987	xdiffi.c	FUNCTION_19	FOR_1	IF_1
0x40002d3	          0x4885c0	                           test rax, rax	       987	xdiffi.c	FUNCTION_19	FOR_1	IF_1
0x40002d6	            0x743e	                            je 0x4000316	       987	xdiffi.c	FUNCTION_19	FOR_1	IF_1
0x40002d8	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       990	xdiffi.c	FUNCTION_19	FOR_1	IF_2
0x40002dc	        0x488b7808	                mov rdi, qword [rax + 8]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x40002e0	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x40002e4	        0x48034b10	             add rcx, qword [rbx + 0x10]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x40002e8	          0x4829d1	                            sub rcx, rdx	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x40002eb	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x40002ef	        0x48037308	                add rsi, qword [rbx + 8]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x40002f3	          0x4829fe	                            sub rsi, rdi	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x40002f6	        0x4d8b0424	                     mov r8, qword [r12]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x40002fa	          0xff5528	                 call qword [rbp + 0x28]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x40002fd	            0x85c0	                           test eax, eax	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x40002ff	            0x781c	                            js 0x400031d	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4000301	          0x488b03	                    mov rax, qword [rbx]	       985	xdiffi.c	FUNCTION_19	FOR_1
0x4000304	        0x48890424	                    mov qword [rsp], rax	       985	xdiffi.c	FUNCTION_19	FOR_1
0x4000308	          0x4885c0	                           test rax, rax	       985	xdiffi.c	FUNCTION_19	FOR_1
0x400030b	            0x75b4	                           jne 0x40002c1	       985	xdiffi.c	FUNCTION_19	FOR_1
0x400030d	            0xeb13	                           jmp 0x4000322	       985	xdiffi.c	FUNCTION_19	FOR_1
0x400030f	      0xb800000000	                              mov eax, 0	       994	xdiffi.c	FUNCTION_19
0x4000314	            0xeb0c	                           jmp 0x4000322	       994	xdiffi.c	FUNCTION_19
0x4000316	      0xb800000000	                              mov eax, 0	       994	xdiffi.c	FUNCTION_19
0x400031b	            0xeb05	                           jmp 0x4000322	       994	xdiffi.c	FUNCTION_19
0x400031d	      0xb8ffffffff	                     mov eax, 0xffffffff	       992	xdiffi.c	FUNCTION_19	FOR_1	IF_2
0x4000322	      0x488b542408	                mov rdx, qword [rsp + 8]	       995	xdiffi.c	FUNCTION_19
0x4000327	    0x644833142528	                xor rdx, qword fs:[0x28]	       995	xdiffi.c	FUNCTION_19
0x4000330	            0x7405	                            je 0x4000337	       995	xdiffi.c	FUNCTION_19
0x4000332	      0xe800000000	                          call 0x4000337	       995	xdiffi.c	FUNCTION_19
0x4000337	        0x4883c410	                           add rsp, 0x10	       995	xdiffi.c	FUNCTION_19
0x400033b	              0x5b	                                 pop rbx	       995	xdiffi.c	FUNCTION_19
0x400033c	              0x5d	                                 pop rbp	       995	xdiffi.c	FUNCTION_19
0x400033d	            0x415c	                                 pop r12	       995	xdiffi.c	FUNCTION_19
0x400033f	              0xc3	                                     ret	       995	xdiffi.c	FUNCTION_19
xdl_do_diff	IF,6:functions,0:WHILE,0:ELSE,0:FOR,0:CALL,12:SWITCH,0:DO,0	104
0x4000dbd	            0x4157	                                push r15	       325	xdiffi.c	FUNCTION_3
0x4000dbf	            0x4156	                                push r14	       325	xdiffi.c	FUNCTION_3
0x4000dc1	            0x4155	                                push r13	       325	xdiffi.c	FUNCTION_3
0x4000dc3	            0x4154	                                push r12	       325	xdiffi.c	FUNCTION_3
0x4000dc5	              0x55	                                push rbp	       325	xdiffi.c	FUNCTION_3
0x4000dc6	              0x53	                                push rbx	       325	xdiffi.c	FUNCTION_3
0x4000dc7	        0x4883ec78	                           sub rsp, 0x78	       325	xdiffi.c	FUNCTION_3
0x4000dcb	          0x4889d5	                            mov rbp, rdx	       325	xdiffi.c	FUNCTION_3
0x4000dce	          0x4889cb	                            mov rbx, rcx	       325	xdiffi.c	FUNCTION_3
0x4000dd1	    0x64488b042528	                mov rax, qword fs:[0x28]	       325	xdiffi.c	FUNCTION_3
0x4000dda	      0x4889442468	             mov qword [rsp + 0x68], rax	       325	xdiffi.c	FUNCTION_3
0x4000ddf	            0x31c0	                            xor eax, eax	       325	xdiffi.c	FUNCTION_3
0x4000de1	          0x488b02	                    mov rax, qword [rdx]	       331	xdiffi.c	FUNCTION_3	IF_1	CALL_1
0x4000de4	      0x2500c00000	                         and eax, 0xc000	       331	xdiffi.c	FUNCTION_3	IF_1	CALL_1
0x4000de9	    0x483d00400000	                         cmp rax, 0x4000	       331	xdiffi.c	FUNCTION_3	IF_1	CALL_1
0x4000def	            0x750a	                           jne 0x4000dfb	       331	xdiffi.c	FUNCTION_3	IF_1	CALL_1
0x4000df1	      0xe800000000	                          call 0x4000df6	       332	xdiffi.c	FUNCTION_3	CALL_2
0x4000df6	      0xe949010000	                           jmp 0x4000f44	       332	xdiffi.c	FUNCTION_3	CALL_2
0x4000dfb	    0x483d00800000	                         cmp rax, 0x8000	       334	xdiffi.c	FUNCTION_3	IF_2	CALL_3
0x4000e01	            0x750a	                           jne 0x4000e0d	       334	xdiffi.c	FUNCTION_3	IF_2	CALL_3
0x4000e03	      0xe800000000	                          call 0x4000e08	       335	xdiffi.c	FUNCTION_3	CALL_4
0x4000e08	      0xe937010000	                           jmp 0x4000f44	       335	xdiffi.c	FUNCTION_3	CALL_4
0x4000e0d	      0xe800000000	                          call 0x4000e12	       337	xdiffi.c	FUNCTION_3	IF_3	CALL_5
0x4000e12	            0x85c0	                           test eax, eax	       337	xdiffi.c	FUNCTION_3	IF_3	CALL_5
0x4000e14	     0xf8825010000	                            js 0x4000f3f	       337	xdiffi.c	FUNCTION_3	IF_3	CALL_5
0x4000e1a	    0x4c8ba3000100	           mov r12, qword [rbx + 0x100] 	       346	xdiffi.c	FUNCTION_3
0x4000e21	          0x4c89e7	                            mov rdi, r12	       346	xdiffi.c	FUNCTION_3
0x4000e24	        0x48037b78	             add rdi, qword [rbx + 0x78]	       346	xdiffi.c	FUNCTION_3
0x4000e28	        0x4c8d6f03	                      lea r13, [rdi + 3]	       346	xdiffi.c	FUNCTION_3
0x4000e2c	        0x4883c704	                              add rdi, 4	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x4000e30	        0x48c1e704	                              shl rdi, 4	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x4000e34	      0xe800000000	                          call 0x4000e39	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x4000e39	          0x4989c6	                            mov r14, rax	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x4000e3c	          0x4885c0	                           test rax, rax	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x4000e3f	            0x7512	                           jne 0x4000e53	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x4000e41	          0x4889df	                            mov rdi, rbx	       349	xdiffi.c	FUNCTION_3	IF_4	CALL_7
0x4000e44	      0xe800000000	                          call 0x4000e49	       349	xdiffi.c	FUNCTION_3	IF_4	CALL_7
0x4000e49	      0xb8ffffffff	                     mov eax, 0xffffffff	       350	xdiffi.c	FUNCTION_3	IF_4
0x4000e4e	      0xe9f1000000	                           jmp 0x4000f44	       350	xdiffi.c	FUNCTION_3	IF_4
0x4000e53	    0x4a8d04e50800	                    lea rax, [r12*8 + 8]	       354	xdiffi.c	FUNCTION_3
0x4000e5b	        0x4d8d3c06	                    lea r15, [r14 + rax]	       354	xdiffi.c	FUNCTION_3
0x4000e5f	        0x4e8d24e8	                  lea r12, [rax + r13*8]	       355	xdiffi.c	FUNCTION_3
0x4000e63	          0x4d01f4	                            add r12, r14	       355	xdiffi.c	FUNCTION_3
0x4000e66	          0x4c89ef	                            mov rdi, r13	       357	xdiffi.c	FUNCTION_3	CALL_8
0x4000e69	      0xe800000000	                          call 0x4000e6e	       357	xdiffi.c	FUNCTION_3	CALL_8
0x4000e6e	    0x483d00010000	                          cmp rax, 0x100	       357	xdiffi.c	FUNCTION_3	CALL_8
0x4000e74	      0xba00010000	                          mov edx, 0x100	       357	xdiffi.c	FUNCTION_3	CALL_8
0x4000e79	        0x480f4cc2	                          cmovl rax, rdx	       357	xdiffi.c	FUNCTION_3	CALL_8
0x4000e7d	        0x48890424	                    mov qword [rsp], rax	       357	xdiffi.c	FUNCTION_3	CALL_8
0x4000e81	    0x48c744240814	               mov qword [rsp + 8], 0x14	       360	xdiffi.c	FUNCTION_3
0x4000e8a	    0x48c744241000	          mov qword [rsp + 0x10], 0x100 	       361	xdiffi.c	FUNCTION_3
0x4000e93	        0x488b5378	            mov rdx, qword [rbx + 0x78] 	       363	xdiffi.c	FUNCTION_3
0x4000e97	      0x4889542420	             mov qword [rsp + 0x20], rdx	       363	xdiffi.c	FUNCTION_3
0x4000e9c	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	       364	xdiffi.c	FUNCTION_3
0x4000ea3	      0x4889442428	             mov qword [rsp + 0x28], rax	       364	xdiffi.c	FUNCTION_3
0x4000ea8	        0x488b4368	            mov rax, qword [rbx + 0x68] 	       365	xdiffi.c	FUNCTION_3
0x4000eac	      0x4889442438	             mov qword [rsp + 0x38], rax	       365	xdiffi.c	FUNCTION_3
0x4000eb1	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       366	xdiffi.c	FUNCTION_3
0x4000eb5	      0x4889442430	             mov qword [rsp + 0x30], rax	       366	xdiffi.c	FUNCTION_3
0x4000eba	    0x4c8b8b000100	            mov r9, qword [rbx + 0x100] 	       367	xdiffi.c	FUNCTION_3
0x4000ec1	      0x4c894c2440	              mov qword [rsp + 0x40], r9	       367	xdiffi.c	FUNCTION_3
0x4000ec6	    0x488b83080100	           mov rax, qword [rbx + 0x108] 	       368	xdiffi.c	FUNCTION_3
0x4000ecd	      0x4889442448	             mov qword [rsp + 0x48], rax	       368	xdiffi.c	FUNCTION_3
0x4000ed2	    0x488b83f00000	            mov rax, qword [rbx + 0xf0] 	       369	xdiffi.c	FUNCTION_3
0x4000ed9	      0x4889442458	             mov qword [rsp + 0x58], rax	       369	xdiffi.c	FUNCTION_3
0x4000ede	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	       370	xdiffi.c	FUNCTION_3
0x4000ee5	      0x4889442450	             mov qword [rsp + 0x50], rax	       370	xdiffi.c	FUNCTION_3
0x4000eea	              0x54	                                push rsp	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000eeb	        0x488b4500	                    mov rax, qword [rbp]	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000eef	          0x83e001	                              and eax, 1	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000ef2	              0x50	                                push rax	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000ef3	            0x4154	                                push r12	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000ef5	            0x4157	                                push r15	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000ef7	    0x41b800000000	                              mov r8d, 0	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000efd	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000f02	      0xbe00000000	                              mov esi, 0	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000f07	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000f0c	      0xe800000000	                          call 0x4000f11	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000f11	        0x4883c420	                           add rsp, 0x20	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000f15	            0x85c0	                           test eax, eax	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000f17	            0x7917	                           jns 0x4000f30	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000f19	          0x4c89f7	                            mov rdi, r14	       375	xdiffi.c	FUNCTION_3	IF_6	CALL_10
0x4000f1c	      0xe800000000	                          call 0x4000f21	       375	xdiffi.c	FUNCTION_3	IF_6	CALL_10
0x4000f21	          0x4889df	                            mov rdi, rbx	       376	xdiffi.c	FUNCTION_3	IF_6	CALL_11
0x4000f24	      0xe800000000	                          call 0x4000f29	       376	xdiffi.c	FUNCTION_3	IF_6	CALL_11
0x4000f29	      0xb8ffffffff	                     mov eax, 0xffffffff	       377	xdiffi.c	FUNCTION_3	IF_6
0x4000f2e	            0xeb14	                           jmp 0x4000f44	       377	xdiffi.c	FUNCTION_3	IF_6
0x4000f30	          0x4c89f7	                            mov rdi, r14	       380	xdiffi.c	FUNCTION_3	CALL_12
0x4000f33	      0xe800000000	                          call 0x4000f38	       380	xdiffi.c	FUNCTION_3	CALL_12
0x4000f38	      0xb800000000	                              mov eax, 0	       382	xdiffi.c	FUNCTION_3
0x4000f3d	            0xeb05	                           jmp 0x4000f44	       382	xdiffi.c	FUNCTION_3
0x4000f3f	      0xb8ffffffff	                     mov eax, 0xffffffff	       339	xdiffi.c	FUNCTION_3	IF_3
0x4000f44	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       383	xdiffi.c	FUNCTION_3
0x4000f49	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       383	xdiffi.c	FUNCTION_3
0x4000f52	            0x7405	                            je 0x4000f59	       383	xdiffi.c	FUNCTION_3
0x4000f54	      0xe800000000	                          call 0x4000f59	       383	xdiffi.c	FUNCTION_3
0x4000f59	        0x4883c478	                           add rsp, 0x78	       383	xdiffi.c	FUNCTION_3
0x4000f5d	              0x5b	                                 pop rbx	       383	xdiffi.c	FUNCTION_3
0x4000f5e	              0x5d	                                 pop rbp	       383	xdiffi.c	FUNCTION_3
0x4000f5f	            0x415c	                                 pop r12	       383	xdiffi.c	FUNCTION_3
0x4000f61	            0x415d	                                 pop r13	       383	xdiffi.c	FUNCTION_3
0x4000f63	            0x415e	                                 pop r14	       383	xdiffi.c	FUNCTION_3
0x4000f65	            0x415f	                                 pop r15	       383	xdiffi.c	FUNCTION_3
0x4000f67	              0xc3	                                     ret	       383	xdiffi.c	FUNCTION_3
get_indent	IF,4:functions,0:WHILE,0:ELSE,2:FOR,1:CALL,1:SWITCH,0:DO,0	46
0x40000e6	              0x55	                                push rbp	       425	xdiffi.c	FUNCTION_6
0x40000e7	              0x53	                                push rbx	       425	xdiffi.c	FUNCTION_6
0x40000e8	        0x4883ec08	                              sub rsp, 8	       425	xdiffi.c	FUNCTION_6
0x40000ec	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	       429	xdiffi.c	FUNCTION_6	FOR_1
0x40000f0	          0x4885db	                           test rbx, rbx	       429	xdiffi.c	FUNCTION_6	FOR_1
0x40000f3	            0x7e6a	                           jle 0x400015f	       429	xdiffi.c	FUNCTION_6	FOR_1
0x40000f5	        0x488b6f08	                mov rbp, qword [rdi + 8]	       430	xdiffi.c	FUNCTION_6	FOR_1
0x40000f9	      0xe800000000	                          call 0x40000fe	       432	xdiffi.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x40000fe	          0x4c8b00	                     mov r8, qword [rax]	       432	xdiffi.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4000101	          0x4889ea	                            mov rdx, rbp	       432	xdiffi.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4000104	      0x488d7c1d00	                    lea rdi, [rbp + rbx]	       432	xdiffi.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4000109	      0xb800000000	                              mov eax, 0	       432	xdiffi.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x400010e	    0x41b908000000	                              mov r9d, 8	       437	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x4000114	           0xfb60a	                   movzx ecx, byte [rdx]	       430	xdiffi.c	FUNCTION_6	FOR_1
0x4000117	           0xfb6f1	                           movzx esi, cl	       432	xdiffi.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x400011a	    0x41f644700120	       test byte [r8 + rsi*2 + 1], 0x20 	       432	xdiffi.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4000120	            0x7449	                            je 0x400016b	       432	xdiffi.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4000122	          0x80f920	                            cmp cl, 0x20	       434	xdiffi.c	FUNCTION_6	FOR_1	ELSE_1	IF_2
0x4000125	            0x7505	                           jne 0x400012c	       434	xdiffi.c	FUNCTION_6	FOR_1	ELSE_1	IF_2
0x4000127	          0x83c001	                              add eax, 1	       435	xdiffi.c	FUNCTION_6	FOR_1	ELSE_1	IF_2
0x400012a	            0xeb1c	                           jmp 0x4000148	       435	xdiffi.c	FUNCTION_6	FOR_1	ELSE_1	IF_2
0x400012c	          0x80f909	                               cmp cl, 9	       436	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x400012f	            0x7517	                           jne 0x4000148	       436	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x4000131	            0x89c6	                            mov esi, eax	       437	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x4000133	          0xc1fe1f	                           sar esi, 0x1f	       437	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x4000136	          0xc1ee1d	                           shr esi, 0x1d	       437	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x4000139	          0x8d0c30	                    lea ecx, [rax + rsi]	       437	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x400013c	          0x83e107	                              and ecx, 7	       437	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x400013f	            0x29f1	                            sub ecx, esi	       437	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x4000141	          0x4489cb	                            mov ebx, r9d	       437	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x4000144	            0x29cb	                            sub ebx, ecx	       437	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x4000146	             0x1d8	                            add eax, ebx	       437	xdiffi.c	FUNCTION_6	FOR_1	ELSE_2	IF_3
0x4000148	      0x3dc7000000	                           cmp eax, 0xc7	       440	xdiffi.c	FUNCTION_6	FOR_1	IF_4
0x400014d	            0x7f17	                            jg 0x4000166	       440	xdiffi.c	FUNCTION_6	FOR_1	IF_4
0x400014f	        0x4883c201	                              add rdx, 1	       440	xdiffi.c	FUNCTION_6	FOR_1	IF_4
0x4000153	          0x4839fa	                            cmp rdx, rdi	       429	xdiffi.c	FUNCTION_6	FOR_1
0x4000156	            0x75bc	                           jne 0x4000114	       429	xdiffi.c	FUNCTION_6	FOR_1
0x4000158	      0xb8ffffffff	                     mov eax, 0xffffffff	       445	xdiffi.c	FUNCTION_6
0x400015d	            0xeb0c	                           jmp 0x400016b	       445	xdiffi.c	FUNCTION_6
0x400015f	      0xb8ffffffff	                     mov eax, 0xffffffff	       445	xdiffi.c	FUNCTION_6
0x4000164	            0xeb05	                           jmp 0x400016b	       445	xdiffi.c	FUNCTION_6
0x4000166	      0xb8c8000000	                           mov eax, 0xc8	       441	xdiffi.c	FUNCTION_6	FOR_1	IF_4
0x400016b	        0x4883c408	                              add rsp, 8	       446	xdiffi.c	FUNCTION_6
0x400016f	              0x5b	                                 pop rbx	       446	xdiffi.c	FUNCTION_6
0x4000170	              0x5d	                                 pop rbp	       446	xdiffi.c	FUNCTION_6
0x4000171	              0xc3	                                     ret	       446	xdiffi.c	FUNCTION_6
xdl_change_compact	IF,17:functions,0:WHILE,5:ELSE,2:FOR,1:CALL,26:SWITCH,0:DO,1	295
0x4000f68	            0x4157	                                push r15	       815	xdiffi.c	FUNCTION_16
0x4000f6a	            0x4156	                                push r14	       815	xdiffi.c	FUNCTION_16
0x4000f6c	            0x4155	                                push r13	       815	xdiffi.c	FUNCTION_16
0x4000f6e	            0x4154	                                push r12	       815	xdiffi.c	FUNCTION_16
0x4000f70	              0x55	                                push rbp	       815	xdiffi.c	FUNCTION_16
0x4000f71	              0x53	                                push rbx	       815	xdiffi.c	FUNCTION_16
0x4000f72	        0x4883ec68	                           sub rsp, 0x68	       815	xdiffi.c	FUNCTION_16
0x4000f76	          0x4989fc	                            mov r12, rdi	       815	xdiffi.c	FUNCTION_16
0x4000f79	          0x4989f5	                            mov r13, rsi	       815	xdiffi.c	FUNCTION_16
0x4000f7c	          0x4989d7	                            mov r15, rdx	       815	xdiffi.c	FUNCTION_16
0x4000f7f	    0x64488b042528	                mov rax, qword fs:[0x28]	       815	xdiffi.c	FUNCTION_16
0x4000f88	      0x4889442458	             mov qword [rsp + 0x58], rax	       815	xdiffi.c	FUNCTION_16
0x4000f8d	            0x31c0	                            xor eax, eax	       815	xdiffi.c	FUNCTION_16
0x4000f8f	    0x48c744243800	               mov qword [rsp + 0x38], 0	       725	xdiffi.c	FUNCTION_10
0x4000f98	    0x48c744243000	               mov qword [rsp + 0x30], 0	       725	xdiffi.c	FUNCTION_10
0x4000fa1	        0x488b5768	            mov rdx, qword [rdi + 0x68] 	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x4000fa5	          0x803a00	                       cmp byte [rdx], 0	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x4000fa8	            0x7415	                            je 0x4000fbf	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x4000faa	      0xb801000000	                              mov eax, 1	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x4000faf	      0x4889442438	             mov qword [rsp + 0x38], rax	       727	xdiffi.c	FUNCTION_10	WHILE_1
0x4000fb4	        0x4883c001	                              add rax, 1	       727	xdiffi.c	FUNCTION_10	WHILE_1
0x4000fb8	      0x807c02ff00	             cmp byte [rdx + rax - 1], 0	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x4000fbd	            0x75f0	                           jne 0x4000faf	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x4000fbf	        0x498b5568	            mov rdx, qword [r13 + 0x68] 	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x4000fc3	          0x803a00	                       cmp byte [rdx], 0	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x4000fc6	            0x7415	                            je 0x4000fdd	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x4000fc8	      0xb801000000	                              mov eax, 1	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x4000fcd	          0x4889c3	                            mov rbx, rax	       727	xdiffi.c	FUNCTION_10	WHILE_1
0x4000fd0	        0x4883c001	                              add rax, 1	       727	xdiffi.c	FUNCTION_10	WHILE_1
0x4000fd4	      0x807c02ff00	             cmp byte [rdx + rax - 1], 0	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x4000fd9	            0x75f2	                           jne 0x4000fcd	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x4000fdb	            0xeb05	                           jmp 0x4000fe2	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x4000fdd	      0xbb00000000	                              mov ebx, 0	       725	xdiffi.c	FUNCTION_10
0x4000fe2	      0xbd00000000	                              mov ebp, 0	       725	xdiffi.c	FUNCTION_10
0x4000fe7	          0x4c89f8	                            mov rax, r15	       891	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11
0x4000fea	      0x2500008000	                       and eax, 0x800000	       891	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11
0x4000fef	      0x4889442418	             mov qword [rsp + 0x18], rax	       891	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11
0x4000ff4	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       825	xdiffi.c	FUNCTION_16	WHILE_1	IF_1
0x4000ff9	      0x4839442438	            cmp qword [rsp + 0x38], rax 	       825	xdiffi.c	FUNCTION_16	WHILE_1	IF_1
0x4000ffe	     0xf84e2020000	                            je 0x40012e6	       825	xdiffi.c	FUNCTION_16	WHILE_1	IF_1
0x4001004	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       833	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x4001009	      0x482b442430	             sub rax, qword [rsp + 0x30]	       833	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x400100e	        0x48890424	                    mov qword [rsp], rax	       833	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x4001012	            0xeb2d	                           jmp 0x4001041	       844	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_3
0x4001014	          0x4885ed	                           test rbp, rbp	       752	xdiffi.c	FUNCTION_12	IF_1
0x4001017	     0xf8458030000	                            je 0x4001375	       752	xdiffi.c	FUNCTION_12	IF_1
0x400101d	        0x488d5dff	                      lea rbx, [rbp - 1]	       755	xdiffi.c	FUNCTION_12
0x4001021	        0x498b5568	            mov rdx, qword [r13 + 0x68] 	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001025	      0x807c1aff00	             cmp byte [rdx + rbx - 1], 0	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400102a	     0xf844f030000	                            je 0x400137f	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001030	        0x488d45fe	                      lea rax, [rbp - 2]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001034	          0x4889c5	                            mov rbp, rax	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001037	        0x4883e801	                              sub rax, 1	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400103b	        0x803c0200	                 cmp byte [rdx + rax], 0	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400103f	            0x75f3	                           jne 0x4001034	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001041	          0x4c89fa	                            mov rdx, r15	       844	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_3
0x4001044	      0x488d742430	                   lea rsi, [rsp + 0x30]	       844	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_3
0x4001049	          0x4c89e7	                            mov rdi, r12	       844	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_3
0x400104c	      0xe8eff2ffff	                 call sym.group_slide_up	       844	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_3
0x4001051	            0x85c0	                           test eax, eax	       844	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_3
0x4001053	            0x74bf	                            je 0x4001014	       844	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_3
0x4001055	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       852	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x400105a	      0x4889442408	                mov qword [rsp + 8], rax	       852	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x400105f	          0x4839eb	                            cmp rbx, rbp	       852	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x4001062	    0x49c7c6ffffff	             mov r14, 0xffffffffffffffff	       852	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x4001069	        0x4c0f4ff0	                          cmovg r14, rax	       852	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x400106d	            0xeb03	                           jmp 0x4001072	       852	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x400106f	          0x4889eb	                            mov rbx, rbp	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001072	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       769	xdiffi.c	FUNCTION_13	IF_1
0x4001077	      0x493b442438	            cmp rax, qword [r12 + 0x38] 	       769	xdiffi.c	FUNCTION_13	IF_1
0x400107c	     0xf8dc5000000	                           jge 0x4001147	       769	xdiffi.c	FUNCTION_13	IF_1
0x4001082	      0x498b542460	            mov rdx, qword [r12 + 0x60] 	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x4001087	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x400108b	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x4001090	        0x488b04c2	            mov rax, qword [rdx + rax*8]	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x4001094	        0x488b7e18	            mov rdi, qword [rsi + 0x18] 	       405	xdiffi.c	FUNCTION_5
0x4001098	        0x48397818	            cmp qword [rax + 0x18], rdi 	       405	xdiffi.c	FUNCTION_5
0x400109c	     0xf85a5000000	                           jne 0x4001147	       405	xdiffi.c	FUNCTION_5
0x40010a2	        0x488b4e10	            mov rcx, qword [rsi + 0x10] 	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40010a6	        0x488b5608	                mov rdx, qword [rsi + 8]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40010aa	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40010ae	        0x488b7808	                mov rdi, qword [rax + 8]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40010b2	          0x4d89f8	                             mov r8, r15	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40010b5	      0xe800000000	                          call 0x40010ba	       406	xdiffi.c	FUNCTION_5	CALL_1
0x40010ba	            0x85c0	                           test eax, eax	       769	xdiffi.c	FUNCTION_13	IF_1
0x40010bc	     0xf8485000000	                            je 0x4001147	       769	xdiffi.c	FUNCTION_13	IF_1
0x40010c2	      0x498b542468	            mov rdx, qword [r12 + 0x68] 	       771	xdiffi.c	FUNCTION_13	IF_1
0x40010c7	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       771	xdiffi.c	FUNCTION_13	IF_1
0x40010cc	        0x488d4801	                      lea rcx, [rax + 1]	       771	xdiffi.c	FUNCTION_13	IF_1
0x40010d0	      0x48894c2430	             mov qword [rsp + 0x30], rcx	       771	xdiffi.c	FUNCTION_13	IF_1
0x40010d5	        0xc6040200	                 mov byte [rdx + rax], 0	       771	xdiffi.c	FUNCTION_13	IF_1
0x40010d9	      0x498b542468	            mov rdx, qword [r12 + 0x68] 	       772	xdiffi.c	FUNCTION_13	IF_1
0x40010de	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       772	xdiffi.c	FUNCTION_13	IF_1
0x40010e3	        0x488d4801	                      lea rcx, [rax + 1]	       772	xdiffi.c	FUNCTION_13	IF_1
0x40010e7	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       772	xdiffi.c	FUNCTION_13	IF_1
0x40010ec	        0xc6040201	                 mov byte [rdx + rax], 1	       772	xdiffi.c	FUNCTION_13	IF_1
0x40010f0	      0x498b542468	            mov rdx, qword [r12 + 0x68] 	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x40010f5	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x40010fa	        0x803c0200	                 cmp byte [rdx + rax], 0	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x40010fe	     0xf8483020000	                            je 0x4001387	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001104	        0x4883c001	                              add rax, 1	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001108	      0x4889442438	             mov qword [rsp + 0x38], rax	       775	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x400110d	        0x4883c001	                              add rax, 1	       775	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001111	      0x807c02ff00	             cmp byte [rdx + rax - 1], 0	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001116	            0x75f0	                           jne 0x4001108	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001118	      0xe96a020000	                           jmp 0x4001387	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x400111d	        0x488d6b01	                      lea rbp, [rbx + 1]	       739	xdiffi.c	FUNCTION_11
0x4001121	        0x498b5568	            mov rdx, qword [r13 + 0x68] 	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001125	      0x807c1a0100	             cmp byte [rdx + rbx + 1], 0	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400112a	     0xf843fffffff	                            je 0x400106f	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001130	        0x488d4302	                      lea rax, [rbx + 2]	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001134	          0x4889c3	                            mov rbx, rax	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001137	        0x4883c001	                              add rax, 1	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400113b	      0x807c02ff00	             cmp byte [rdx + rax - 1], 0	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001140	            0x75f2	                           jne 0x4001134	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001142	      0xe954020000	                           jmp 0x400139b	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001147	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       867	xdiffi.c	FUNCTION_16	WHILE_1	WHILE_3
0x400114c	          0x4889c2	                            mov rdx, rax	       867	xdiffi.c	FUNCTION_16	WHILE_1	WHILE_3
0x400114f	      0x482b542430	             sub rdx, qword [rsp + 0x30]	       867	xdiffi.c	FUNCTION_16	WHILE_1	WHILE_3
0x4001154	        0x48391424	                    cmp qword [rsp], rdx	       867	xdiffi.c	FUNCTION_16	WHILE_1	WHILE_3
0x4001158	     0xf85a6feffff	                           jne 0x4001004	       867	xdiffi.c	FUNCTION_16	WHILE_1	WHILE_3
0x400115e	        0x48891424	                    mov qword [rsp], rdx	       867	xdiffi.c	FUNCTION_16	WHILE_1	WHILE_3
0x4001162	      0x4839442408	                cmp qword [rsp + 8], rax	       877	xdiffi.c	FUNCTION_16	WHILE_1	IF_7
0x4001167	     0xf8479010000	                            je 0x40012e6	       877	xdiffi.c	FUNCTION_16	WHILE_1	IF_7
0x400116d	        0x4983feff	             cmp r14, 0xffffffffffffffff	       879	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8
0x4001171	            0x754d	                           jne 0x40011c0	       879	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8
0x4001173	            0xeb55	                           jmp 0x40011ca	       879	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8
0x4001175	          0x4c89fa	                            mov rdx, r15	       886	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_9	CALL_9
0x4001178	      0x488d742430	                   lea rsi, [rsp + 0x30]	       886	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_9	CALL_9
0x400117d	          0x4c89e7	                            mov rdi, r12	       886	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_9	CALL_9
0x4001180	      0xe8bbf1ffff	                 call sym.group_slide_up	       886	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_9	CALL_9
0x4001185	            0x85c0	                           test eax, eax	       886	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_9	CALL_9
0x4001187	            0x740a	                            je 0x4001193	       886	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_9	CALL_9
0x4001189	      0xbf00000000	                              mov edi, 0	       887	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	CALL_10
0x400118e	      0xe8dbf0ffff	                        call sym.xdl_bug	       887	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	CALL_10
0x4001193	          0x4885ed	                           test rbp, rbp	       752	xdiffi.c	FUNCTION_12	IF_1
0x4001196	     0xf840d020000	                            je 0x40013a9	       752	xdiffi.c	FUNCTION_12	IF_1
0x400119c	        0x488d5dff	                      lea rbx, [rbp - 1]	       755	xdiffi.c	FUNCTION_12
0x40011a0	        0x498b5568	            mov rdx, qword [r13 + 0x68] 	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40011a4	      0x807c1aff00	             cmp byte [rdx + rbx - 1], 0	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40011a9	     0xf8404020000	                            je 0x40013b3	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40011af	        0x488d45fe	                      lea rax, [rbp - 2]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40011b3	          0x4889c5	                            mov rbp, rax	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40011b6	        0x4883e801	                              sub rax, 1	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40011ba	        0x803c0200	                 cmp byte [rdx + rax], 0	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40011be	            0x75f3	                           jne 0x40011b3	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40011c0	          0x4839dd	                            cmp rbp, rbx	       885	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4
0x40011c3	            0x74b0	                            je 0x4001175	       885	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4
0x40011c5	      0xe91c010000	                           jmp 0x40012e6	       885	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4
0x40011ca	    0x48837c241800	               cmp qword [rsp + 0x18], 0	       891	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11
0x40011d0	     0xf8410010000	                            je 0x40012e6	       891	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11
0x40011d6	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x40011db	          0x4839c1	                            cmp rcx, rax	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x40011de	     0xf8ffb000000	                            jg 0x40012df	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x40011e4	      0x48895c2408	                mov qword [rsp + 8], rbx	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x40011e9	          0x4889cb	                            mov rbx, rcx	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x40011ec	    0xc74424200000	               mov dword [rsp + 0x20], 0	       908	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x40011f4	    0xc74424240000	               mov dword [rsp + 0x24], 0	       908	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x40011fc	      0x488d542440	                   lea rdx, [rsp + 0x40]	       910	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_13
0x4001201	          0x4889de	                            mov rsi, rbx	       910	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_13
0x4001204	          0x4c89e7	                            mov rdi, r12	       910	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_13
0x4001207	      0xe866efffff	                  call sym.measure_split	       910	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_13
0x400120c	      0x488d742420	                   lea rsi, [rsp + 0x20]	       911	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_14
0x4001211	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       911	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_14
0x4001216	      0xe825eeffff	                call sym.score_add_split	       911	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_14
0x400121b	          0x4889de	                            mov rsi, rbx	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x400121e	        0x482b3424	                    sub rsi, qword [rsp]	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x4001222	      0x488d542440	                   lea rdx, [rsp + 0x40]	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x4001227	          0x4c89e7	                            mov rdi, r12	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x400122a	      0xe843efffff	                  call sym.measure_split	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x400122f	      0x488d742420	                   lea rsi, [rsp + 0x20]	       913	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_16
0x4001234	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       913	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_16
0x4001239	      0xe802eeffff	                call sym.score_add_split	       913	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_16
0x400123e	        0x4983feff	             cmp r14, 0xffffffffffffffff	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001242	            0x7427	                            je 0x400126b	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001244	        0x8b542420	            mov edx, dword [rsp + 0x20] 	       685	xdiffi.c	FUNCTION_9
0x4001248	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x400124c	            0x39d1	                            cmp ecx, edx	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x400124e	           0xf9cc0	                                 setl al	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001251	           0xfb6c0	                           movzx eax, al	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001254	           0xf9fc2	                                 setg dl	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001257	           0xfb6d2	                           movzx edx, dl	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x400125a	            0x29d0	                            sub eax, edx	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x400125c	          0x6bc03c	                     imul eax, eax, 0x3c	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x400125f	        0x2b442410	             sub eax, dword [rsp + 0x10]	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001263	         0x3442424	             add eax, dword [rsp + 0x24]	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001267	            0x85c0	                           test eax, eax	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001269	            0x7f13	                            jg 0x400127e	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x400126b	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       916	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x400126f	        0x89442414	             mov dword [rsp + 0x14], eax	       916	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001273	        0x8b442424	            mov eax, dword [rsp + 0x24] 	       917	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001277	        0x89442410	             mov dword [rsp + 0x10], eax	       917	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x400127b	          0x4989de	                            mov r14, rbx	       917	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x400127e	        0x4883c301	                              add rbx, 1	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001282	      0x48395c2438	            cmp qword [rsp + 0x38], rbx 	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001287	     0xf8d5fffffff	                           jge 0x40011ec	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x400128d	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001292	            0xeb4b	                           jmp 0x40012df	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001294	          0x4c89fa	                            mov rdx, r15	       923	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_13	CALL_18
0x4001297	      0x488d742430	                   lea rsi, [rsp + 0x30]	       923	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_13	CALL_18
0x400129c	          0x4c89e7	                            mov rdi, r12	       923	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_13	CALL_18
0x400129f	      0xe89cf0ffff	                 call sym.group_slide_up	       923	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_13	CALL_18
0x40012a4	            0x85c0	                           test eax, eax	       923	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_13	CALL_18
0x40012a6	            0x740a	                            je 0x40012b2	       923	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_13	CALL_18
0x40012a8	      0xbf00000000	                              mov edi, 0	       924	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_19
0x40012ad	      0xe8bcefffff	                        call sym.xdl_bug	       924	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_19
0x40012b2	          0x4885ed	                           test rbp, rbp	       752	xdiffi.c	FUNCTION_12	IF_1
0x40012b5	     0xf8400010000	                            je 0x40013bb	       752	xdiffi.c	FUNCTION_12	IF_1
0x40012bb	        0x488d5dff	                      lea rbx, [rbp - 1]	       755	xdiffi.c	FUNCTION_12
0x40012bf	        0x498b5568	            mov rdx, qword [r13 + 0x68] 	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40012c3	      0x807c1aff00	             cmp byte [rdx + rbx - 1], 0	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40012c8	     0xf84f7000000	                            je 0x40013c5	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40012ce	        0x488d45fe	                      lea rax, [rbp - 2]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40012d2	          0x4889c5	                            mov rbp, rax	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40012d5	        0x4883e801	                              sub rax, 1	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40012d9	        0x803c0200	                 cmp byte [rdx + rax], 0	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40012dd	            0x75f3	                           jne 0x40012d2	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40012df	      0x4c39742438	            cmp qword [rsp + 0x38], r14 	       922	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5
0x40012e4	            0x7fae	                            jg 0x4001294	       922	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5
0x40012e6	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       736	xdiffi.c	FUNCTION_11	IF_1
0x40012eb	      0x493b442438	            cmp rax, qword [r12 + 0x38] 	       736	xdiffi.c	FUNCTION_11	IF_1
0x40012f0	     0xf84d7000000	                            je 0x40013cd	       736	xdiffi.c	FUNCTION_11	IF_1
0x40012f6	        0x488d5001	                      lea rdx, [rax + 1]	       739	xdiffi.c	FUNCTION_11
0x40012fa	      0x4889542430	             mov qword [rsp + 0x30], rdx	       739	xdiffi.c	FUNCTION_11
0x40012ff	      0x4889542438	             mov qword [rsp + 0x38], rdx	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001304	      0x498b542468	            mov rdx, qword [r12 + 0x68] 	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001309	      0x807c020100	             cmp byte [rdx + rax + 1], 0	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400130e	     0xf84c1000000	                            je 0x40013d5	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001314	        0x4883c002	                              add rax, 2	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001318	      0x4889442438	             mov qword [rsp + 0x38], rax	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400131d	        0x4883c001	                              add rax, 1	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001321	      0x807c02ff00	             cmp byte [rdx + rax - 1], 0	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001326	            0x75f0	                           jne 0x4001318	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001328	      0xe9a8000000	                           jmp 0x40013d5	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400132d	        0x488d6b01	                      lea rbp, [rbx + 1]	       739	xdiffi.c	FUNCTION_11
0x4001331	        0x498b5568	            mov rdx, qword [r13 + 0x68] 	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001335	      0x807c1a0100	             cmp byte [rdx + rbx + 1], 0	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400133a	     0xf84a9000000	                            je 0x40013e9	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001340	        0x488d4302	                      lea rax, [rbx + 2]	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001344	          0x4889c3	                            mov rbx, rax	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001347	        0x4883c001	                              add rax, 1	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400134b	      0x807c02ff00	             cmp byte [rdx + rax - 1], 0	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001350	            0x75f2	                           jne 0x4001344	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001352	      0xe99dfcffff	                           jmp 0x4000ff4	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001357	        0x498b4568	            mov rax, qword [r13 + 0x68] 	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400135b	      0x807c180100	             cmp byte [rax + rbx + 1], 0	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001360	     0xf848b000000	                            je 0x40013f1	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001366	          0x4801c3	                            add rbx, rax	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001369	        0x4883c301	                              add rbx, 1	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400136d	        0x807b0100	                   cmp byte [rbx + 1], 0	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001371	            0x75f6	                           jne 0x4001369	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001373	            0xeb7c	                           jmp 0x40013f1	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001375	      0xbf00000000	                              mov edi, 0	       846	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_5
0x400137a	      0xe8efeeffff	                        call sym.xdl_bug	       846	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_5
0x400137f	          0x4889dd	                            mov rbp, rbx	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001382	      0xe9bafcffff	                           jmp 0x4001041	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001387	        0x49395d38	            cmp qword [r13 + 0x38], rbx 	       736	xdiffi.c	FUNCTION_11	IF_1
0x400138b	     0xf858cfdffff	                           jne 0x400111d	       736	xdiffi.c	FUNCTION_11	IF_1
0x4001391	      0xbf00000000	                              mov edi, 0	       862	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	CALL_8
0x4001396	      0xe8d3eeffff	                        call sym.xdl_bug	       862	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	CALL_8
0x400139b	          0x4839dd	                            cmp rbp, rbx	       865	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_6
0x400139e	    0x4c0f4c742438	           cmovl r14, qword [rsp + 0x38]	       865	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_6
0x40013a4	      0xe9c9fcffff	                           jmp 0x4001072	       865	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_6
0x40013a9	      0xbf00000000	                              mov edi, 0	       889	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	CALL_12
0x40013ae	      0xe8bbeeffff	                        call sym.xdl_bug	       889	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	CALL_12
0x40013b3	          0x4889dd	                            mov rbp, rbx	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40013b6	      0xe905feffff	                           jmp 0x40011c0	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40013bb	      0xbf00000000	                              mov edi, 0	       926	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_21
0x40013c0	      0xe8a9eeffff	                        call sym.xdl_bug	       926	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_21
0x40013c5	          0x4889dd	                            mov rbp, rbx	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40013c8	      0xe912ffffff	                           jmp 0x40012df	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40013cd	        0x49395d38	            cmp qword [r13 + 0x38], rbx 	       736	xdiffi.c	FUNCTION_11	IF_1
0x40013d1	            0x7584	                           jne 0x4001357	       736	xdiffi.c	FUNCTION_11	IF_1
0x40013d3	            0xeb26	                           jmp 0x40013fb	       736	xdiffi.c	FUNCTION_11	IF_1
0x40013d5	        0x49395d38	            cmp qword [r13 + 0x38], rbx 	       736	xdiffi.c	FUNCTION_11	IF_1
0x40013d9	     0xf854effffff	                           jne 0x400132d	       736	xdiffi.c	FUNCTION_11	IF_1
0x40013df	      0xbf00000000	                              mov edi, 0	       935	xdiffi.c	FUNCTION_16	WHILE_1	CALL_24
0x40013e4	      0xe885eeffff	                        call sym.xdl_bug	       935	xdiffi.c	FUNCTION_16	WHILE_1	CALL_24
0x40013e9	          0x4889eb	                            mov rbx, rbp	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40013ec	      0xe903fcffff	                           jmp 0x4000ff4	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40013f1	      0xbf00000000	                              mov edi, 0	       939	xdiffi.c	FUNCTION_16	CALL_26
0x40013f6	      0xe873eeffff	                        call sym.xdl_bug	       939	xdiffi.c	FUNCTION_16	CALL_26
0x40013fb	      0xb800000000	                              mov eax, 0	       942	xdiffi.c	FUNCTION_16
0x4001400	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       942	xdiffi.c	FUNCTION_16
0x4001405	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       942	xdiffi.c	FUNCTION_16
0x400140e	            0x7405	                            je 0x4001415	       942	xdiffi.c	FUNCTION_16
0x4001410	      0xe800000000	                          call 0x4001415	       942	xdiffi.c	FUNCTION_16
0x4001415	        0x4883c468	                           add rsp, 0x68	       942	xdiffi.c	FUNCTION_16
0x4001419	              0x5b	                                 pop rbx	       942	xdiffi.c	FUNCTION_16
0x400141a	              0x5d	                                 pop rbp	       942	xdiffi.c	FUNCTION_16
0x400141b	            0x415c	                                 pop r12	       942	xdiffi.c	FUNCTION_16
0x400141d	            0x415d	                                 pop r13	       942	xdiffi.c	FUNCTION_16
0x400141f	            0x415e	                                 pop r14	       942	xdiffi.c	FUNCTION_16
0x4001421	            0x415f	                                 pop r15	       942	xdiffi.c	FUNCTION_16
0x4001423	              0xc3	                                     ret	       942	xdiffi.c	FUNCTION_16
group_slide_up	IF,1:functions,0:WHILE,1:ELSE,1:FOR,0:CALL,1:SWITCH,0:DO,0	56
0x4000340	          0x488b06	                    mov rax, qword [rsi]	       790	xdiffi.c	FUNCTION_14	IF_1
0x4000343	          0x4885c0	                           test rax, rax	       790	xdiffi.c	FUNCTION_14	IF_1
0x4000346	     0xf8ea2000000	                           jle 0x40003ee	       790	xdiffi.c	FUNCTION_14	IF_1
0x400034c	        0x488b4f60	            mov rcx, qword [rdi + 0x60] 	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x4000350	        0x4c8b4e08	                 mov r9, qword [rsi + 8]	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x4000354	      0x4e8b54c9f8	         mov r10, qword [rcx + r9*8 - 8]	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x4000359	      0x4c8b4cc1f8	         mov r9, qword [rcx + rax*8 - 8]	       791	xdiffi.c	FUNCTION_14	IF_1	CALL_1
0x400035e	      0xb8ffffffff	                     mov eax, 0xffffffff	       800	xdiffi.c	FUNCTION_14	ELSE_1
0x4000363	        0x498b4a18	            mov rcx, qword [r10 + 0x18] 	       405	xdiffi.c	FUNCTION_5
0x4000367	        0x49394918	              cmp qword [r9 + 0x18], rcx	       405	xdiffi.c	FUNCTION_5
0x400036b	     0xf8595000000	                           jne 0x4000406	       405	xdiffi.c	FUNCTION_5
0x4000371	              0x55	                                push rbp	       789	xdiffi.c	FUNCTION_14
0x4000372	              0x53	                                push rbx	       789	xdiffi.c	FUNCTION_14
0x4000373	        0x4883ec08	                              sub rsp, 8	       789	xdiffi.c	FUNCTION_14
0x4000377	          0x4989d0	                             mov r8, rdx	       789	xdiffi.c	FUNCTION_14
0x400037a	          0x4889f3	                            mov rbx, rsi	       789	xdiffi.c	FUNCTION_14
0x400037d	          0x4889fd	                            mov rbp, rdi	       789	xdiffi.c	FUNCTION_14
0x4000380	        0x498b4a10	            mov rcx, qword [r10 + 0x10] 	       406	xdiffi.c	FUNCTION_5	CALL_1
0x4000384	        0x498b5208	                mov rdx, qword [r10 + 8]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x4000388	        0x498b7110	              mov rsi, qword [r9 + 0x10]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x400038c	        0x498b7908	                 mov rdi, qword [r9 + 8]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x4000390	      0xe800000000	                          call 0x4000395	       406	xdiffi.c	FUNCTION_5	CALL_1
0x4000395	            0x85c0	                           test eax, eax	       790	xdiffi.c	FUNCTION_14	IF_1
0x4000397	            0x745b	                            je 0x40003f4	       790	xdiffi.c	FUNCTION_14	IF_1
0x4000399	        0x488b5568	            mov rdx, qword [rbp + 0x68] 	       792	xdiffi.c	FUNCTION_14	IF_1
0x400039d	          0x488b03	                    mov rax, qword [rbx]	       792	xdiffi.c	FUNCTION_14	IF_1
0x40003a0	        0x488d48ff	                      lea rcx, [rax - 1]	       792	xdiffi.c	FUNCTION_14	IF_1
0x40003a4	          0x48890b	                    mov qword [rbx], rcx	       792	xdiffi.c	FUNCTION_14	IF_1
0x40003a7	      0xc64402ff01	             mov byte [rdx + rax - 1], 1	       792	xdiffi.c	FUNCTION_14	IF_1
0x40003ac	        0x488b5568	            mov rdx, qword [rbp + 0x68] 	       793	xdiffi.c	FUNCTION_14	IF_1
0x40003b0	        0x488b4308	                mov rax, qword [rbx + 8]	       793	xdiffi.c	FUNCTION_14	IF_1
0x40003b4	        0x488d48ff	                      lea rcx, [rax - 1]	       793	xdiffi.c	FUNCTION_14	IF_1
0x40003b8	        0x48894b08	                mov qword [rbx + 8], rcx	       793	xdiffi.c	FUNCTION_14	IF_1
0x40003bc	      0xc64402ff00	             mov byte [rdx + rax - 1], 0	       793	xdiffi.c	FUNCTION_14	IF_1
0x40003c1	          0x488b03	                    mov rax, qword [rbx]	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40003c4	        0x488b5568	            mov rdx, qword [rbp + 0x68] 	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40003c8	      0x807c02ff00	             cmp byte [rdx + rax - 1], 0	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40003cd	            0x742c	                            je 0x40003fb	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40003cf	        0x4883e801	                              sub rax, 1	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40003d3	          0x488903	                    mov qword [rbx], rax	       796	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40003d6	        0x488b5568	            mov rdx, qword [rbp + 0x68] 	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40003da	       0xfb65402ff	         movzx edx, byte [rdx + rax - 1]	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40003df	        0x4883e801	                              sub rax, 1	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40003e3	            0x84d2	                             test dl, dl	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40003e5	            0x75ec	                           jne 0x40003d3	       795	xdiffi.c	FUNCTION_14	IF_1	WHILE_1
0x40003e7	      0xb800000000	                              mov eax, 0	       798	xdiffi.c	FUNCTION_14	IF_1
0x40003ec	            0xeb12	                           jmp 0x4000400	       798	xdiffi.c	FUNCTION_14	IF_1
0x40003ee	      0xb8ffffffff	                     mov eax, 0xffffffff	       800	xdiffi.c	FUNCTION_14	ELSE_1
0x40003f3	              0xc3	                                     ret	       802	xdiffi.c	FUNCTION_14
0x40003f4	      0xb8ffffffff	                     mov eax, 0xffffffff	       800	xdiffi.c	FUNCTION_14	ELSE_1
0x40003f9	            0xeb05	                           jmp 0x4000400	       800	xdiffi.c	FUNCTION_14	ELSE_1
0x40003fb	      0xb800000000	                              mov eax, 0	       798	xdiffi.c	FUNCTION_14	IF_1
0x4000400	        0x4883c408	                              add rsp, 8	       802	xdiffi.c	FUNCTION_14
0x4000404	              0x5b	                                 pop rbx	       802	xdiffi.c	FUNCTION_14
0x4000405	              0x5d	                                 pop rbp	       802	xdiffi.c	FUNCTION_14
0x4000406	            0xf3c3	                                     ret	       802	xdiffi.c	FUNCTION_14
xdl_recs_cmp	IF,4:functions,0:WHILE,0:ELSE,2:FOR,4:CALL,3:SWITCH,0:DO,0	590
0x4000408	            0x4157	                                push r15	       270	xdiffi.c	FUNCTION_2
0x400040a	            0x4156	                                push r14	       270	xdiffi.c	FUNCTION_2
0x400040c	            0x4155	                                push r13	       270	xdiffi.c	FUNCTION_2
0x400040e	            0x4154	                                push r12	       270	xdiffi.c	FUNCTION_2
0x4000410	              0x55	                                push rbp	       270	xdiffi.c	FUNCTION_2
0x4000411	              0x53	                                push rbx	       270	xdiffi.c	FUNCTION_2
0x4000412	    0x4881ecb80000	                           sub rsp, 0xb8	       270	xdiffi.c	FUNCTION_2
0x4000419	      0x48897c2470	             mov qword [rsp + 0x70], rdi	       270	xdiffi.c	FUNCTION_2
0x400041e	          0x4989f6	                            mov r14, rsi	       270	xdiffi.c	FUNCTION_2
0x4000421	          0x4889d3	                            mov rbx, rdx	       270	xdiffi.c	FUNCTION_2
0x4000424	      0x48894c2448	             mov qword [rsp + 0x48], rcx	       270	xdiffi.c	FUNCTION_2
0x4000429	          0x4d89c3	                             mov r11, r8	       270	xdiffi.c	FUNCTION_2
0x400042c	          0x4d89cf	                             mov r15, r9	       270	xdiffi.c	FUNCTION_2
0x400042f	        0x488b4708	                mov rax, qword [rdi + 8]	       271	xdiffi.c	FUNCTION_2
0x4000433	        0x488b5108	                mov rdx, qword [rcx + 8]	       271	xdiffi.c	FUNCTION_2
0x4000437	          0x4839de	                            cmp rsi, rbx	       276	xdiffi.c	FUNCTION_2	FOR_1
0x400043a	            0x7d55	                           jge 0x4000491	       276	xdiffi.c	FUNCTION_2	FOR_1
0x400043c	          0x4d39c8	                              cmp r8, r9	       276	xdiffi.c	FUNCTION_2	FOR_1
0x400043f	            0x7d50	                           jge 0x4000491	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000441	        0x4a8b3cc2	             mov rdi, qword [rdx + r8*8]	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000445	        0x48393cf0	           cmp qword [rax + rsi*8], rdi 	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000449	            0x751c	                           jne 0x4000467	       276	xdiffi.c	FUNCTION_2	FOR_1
0x400044b	        0x4983c601	                              add r14, 1	       276	xdiffi.c	FUNCTION_2	FOR_1
0x400044f	        0x4983c301	                              add r11, 1	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000453	          0x4c39f3	                            cmp rbx, r14	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000456	            0x7e39	                           jle 0x4000491	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000458	          0x4d39df	                            cmp r15, r11	       276	xdiffi.c	FUNCTION_2	FOR_1
0x400045b	            0x7e34	                           jle 0x4000491	       276	xdiffi.c	FUNCTION_2	FOR_1
0x400045d	        0x4a8b3cda	            mov rdi, qword [rdx + r11*8]	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000461	        0x4a393cf0	           cmp qword [rax + r14*8], rdi 	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000465	            0x74e4	                            je 0x400044b	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000467	      0x4a8b7cfaf8	        mov rdi, qword [rdx + r15*8 - 8]	       277	xdiffi.c	FUNCTION_2	FOR_2
0x400046c	      0x48397cd8f8	       cmp qword [rax + rbx*8 - 8], rdi 	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000471	            0x751e	                           jne 0x4000491	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000473	        0x4883eb01	                              sub rbx, 1	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000477	        0x4983ef01	                              sub r15, 1	       277	xdiffi.c	FUNCTION_2	FOR_2
0x400047b	          0x4c39f3	                            cmp rbx, r14	       277	xdiffi.c	FUNCTION_2	FOR_2
0x400047e	            0x7e11	                           jle 0x4000491	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000480	          0x4d39df	                            cmp r15, r11	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000483	            0x7e0c	                           jle 0x4000491	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000485	      0x4a8b7cfaf8	        mov rdi, qword [rdx + r15*8 - 8]	       277	xdiffi.c	FUNCTION_2	FOR_2
0x400048a	      0x48397cd8f8	       cmp qword [rax + rbx*8 - 8], rdi 	       277	xdiffi.c	FUNCTION_2	FOR_2
0x400048f	            0x74e2	                            je 0x4000473	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000491	          0x4c39f3	                            cmp rbx, r14	       283	xdiffi.c	FUNCTION_2	IF_1
0x4000494	            0x7531	                           jne 0x40004c7	       283	xdiffi.c	FUNCTION_2	IF_1
0x4000496	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       284	xdiffi.c	FUNCTION_2	IF_1
0x400049b	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       284	xdiffi.c	FUNCTION_2	IF_1
0x400049f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       285	xdiffi.c	FUNCTION_2	IF_1
0x40004a3	          0x4d39df	                            cmp r15, r11	       287	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x40004a6	     0xf8ef3080000	                           jle 0x4000d9f	       287	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x40004ac	        0x4a8b04da	            mov rax, qword [rdx + r11*8]	       288	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x40004b0	        0xc6040101	                 mov byte [rcx + rax], 1	       288	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x40004b4	        0x4983c301	                              add r11, 1	       287	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x40004b8	          0x4d39fb	                            cmp r11, r15	       287	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x40004bb	            0x75ef	                           jne 0x40004ac	       287	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x40004bd	      0xb800000000	                              mov eax, 0	       320	xdiffi.c	FUNCTION_2
0x40004c2	      0xe9e4080000	                           jmp 0x4000dab	       320	xdiffi.c	FUNCTION_2
0x40004c7	          0x4d39df	                            cmp r15, r11	       289	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x40004ca	            0x7531	                           jne 0x40004fd	       289	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x40004cc	      0x488b442470	            mov rax, qword [rsp + 0x70] 	       290	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x40004d1	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       290	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x40004d5	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       291	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x40004d9	          0x4c39f3	                            cmp rbx, r14	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x40004dc	     0xf8ec4080000	                           jle 0x4000da6	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x40004e2	        0x4a8b04f2	            mov rax, qword [rdx + r14*8]	       294	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x40004e6	        0xc6040101	                 mov byte [rcx + rax], 1	       294	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x40004ea	        0x4983c601	                              add r14, 1	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x40004ee	          0x4939de	                            cmp r14, rbx	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x40004f1	            0x75ef	                           jne 0x40004e2	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x40004f3	      0xb800000000	                              mov eax, 0	       320	xdiffi.c	FUNCTION_2
0x40004f8	      0xe9ae080000	                           jmp 0x4000dab	       320	xdiffi.c	FUNCTION_2
0x40004fd	          0x4c89f7	                            mov rdi, r14	        66	xdiffi.c	FUNCTION_1
0x4000500	          0x4c29ff	                            sub rdi, r15	        66	xdiffi.c	FUNCTION_1
0x4000503	      0x48897c2430	             mov qword [rsp + 0x30], rdi	        66	xdiffi.c	FUNCTION_1
0x4000508	          0x4889df	                            mov rdi, rbx	        66	xdiffi.c	FUNCTION_1
0x400050b	          0x4c29df	                            sub rdi, r11	        66	xdiffi.c	FUNCTION_1
0x400050e	      0x48897c2438	             mov qword [rsp + 0x38], rdi	        66	xdiffi.c	FUNCTION_1
0x4000513	          0x4c89f7	                            mov rdi, r14	        67	xdiffi.c	FUNCTION_1
0x4000516	          0x4c29df	                            sub rdi, r11	        67	xdiffi.c	FUNCTION_1
0x4000519	    0x4889bc248800	             mov qword [rsp + 0x88], rdi	        67	xdiffi.c	FUNCTION_1
0x4000521	          0x4889de	                            mov rsi, rbx	        67	xdiffi.c	FUNCTION_1
0x4000524	          0x4c29fe	                            sub rsi, r15	        67	xdiffi.c	FUNCTION_1
0x4000527	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	        67	xdiffi.c	FUNCTION_1
0x400052f	          0x4889f9	                            mov rcx, rdi	        68	xdiffi.c	FUNCTION_1
0x4000532	          0x4829f1	                            sub rcx, rsi	        68	xdiffi.c	FUNCTION_1
0x4000535	          0x83e101	                              and ecx, 1	        68	xdiffi.c	FUNCTION_1
0x4000538	      0x48894c2418	             mov qword [rsp + 0x18], rcx	        68	xdiffi.c	FUNCTION_1
0x400053d	      0x48897c2478	             mov qword [rsp + 0x78], rdi	        76	xdiffi.c	FUNCTION_1
0x4000542	    0x488b8c24f000	            mov rcx, qword [rsp + 0xf0] 	        76	xdiffi.c	FUNCTION_1
0x400054a	        0x4c8934f9	            mov qword [rcx + rdi*8], r14	        76	xdiffi.c	FUNCTION_1
0x400054e	    0x4889b4248000	             mov qword [rsp + 0x80], rsi	        77	xdiffi.c	FUNCTION_1
0x4000556	    0x488b8c24f800	            mov rcx, qword [rsp + 0xf8] 	        77	xdiffi.c	FUNCTION_1
0x400055e	        0x48891cf1	            mov qword [rcx + rsi*8], rbx	        77	xdiffi.c	FUNCTION_1
0x4000562	      0x4889742420	             mov qword [rsp + 0x20], rsi	        70	xdiffi.c	FUNCTION_1
0x4000567	      0x4889742410	             mov qword [rsp + 0x10], rsi	        70	xdiffi.c	FUNCTION_1
0x400056c	      0x48897c2428	             mov qword [rsp + 0x28], rdi	        69	xdiffi.c	FUNCTION_1
0x4000571	      0x48897c2408	                mov qword [rsp + 8], rdi	        69	xdiffi.c	FUNCTION_1
0x4000576	    0x48c744246000	               mov qword [rsp + 0x60], 0	       297	xdiffi.c	FUNCTION_2	ELSE_2
0x400057f	    0x48c744246800	               mov qword [rsp + 0x68], 0	       297	xdiffi.c	FUNCTION_2	ELSE_2
0x4000588	    0x48c744244001	               mov qword [rsp + 0x40], 1	        79	xdiffi.c	FUNCTION_1	FOR_1
0x4000591	          0x4d89dd	                            mov r13, r11	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x4000594	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        89	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x4000599	      0x48397c2430	            cmp qword [rsp + 0x30], rdi 	        89	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x400059e	            0x7d1c	                           jge 0x40005bc	        89	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x40005a0	        0x4883ef01	                              sub rdi, 1	        90	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x40005a4	      0x48897c2408	                mov qword [rsp + 8], rdi	        90	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x40005a9	    0x488bb424f000	            mov rsi, qword [rsp + 0xf0] 	        90	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x40005b1	    0x48c744fef8ff	mov qword [rsi + rdi*8 - 8], 0xffffffffffffffff	        90	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x40005ba	            0xeb06	                           jmp 0x40005c2	        90	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x40005bc	    0x488344240801	                  add qword [rsp + 8], 1	        92	xdiffi.c	FUNCTION_1	FOR_1	ELSE_1
0x40005c2	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	        93	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x40005c7	      0x48397c2438	            cmp qword [rsp + 0x38], rdi 	        93	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x40005cc	            0x7e1c	                           jle 0x40005ea	        93	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x40005ce	        0x4883c701	                              add rdi, 1	        94	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x40005d2	      0x48897c2428	             mov qword [rsp + 0x28], rdi	        94	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x40005d7	    0x488bb424f000	            mov rsi, qword [rsp + 0xf0] 	        94	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x40005df	    0x48c744fe08ff	mov qword [rsi + rdi*8 + 8], 0xffffffffffffffff	        94	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x40005e8	            0xeb06	                           jmp 0x40005f0	        94	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x40005ea	    0x48836c242801	               sub qword [rsp + 0x28], 1	        96	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2
0x40005f0	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40005f5	      0x48397c2408	                cmp qword [rsp + 8], rdi	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40005fa	     0xf8ff9000000	                            jg 0x40006f9	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000600	    0x488bb424f000	            mov rsi, qword [rsp + 0xf0] 	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000608	      0x4c8d5cfef8	              lea r11, [rsi + rdi*8 - 8]	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x400060d	          0x4989fa	                            mov r10, rdi	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000610	      0xbf00000000	                              mov edi, 0	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000615	      0x4c89742450	             mov qword [rsp + 0x50], r14	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x400061a	      0x4c896c2458	             mov qword [rsp + 0x58], r13	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x400061f	          0x4189fd	                           mov r13d, edi	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000622	          0x4d89de	                            mov r14, r11	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000625	          0x498b0b	                    mov rcx, qword [r11]	        99	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x4000628	        0x4d8b4b10	              mov r9, qword [r11 + 0x10]	        99	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x400062c	        0x488d7101	                      lea rsi, [rcx + 1]	       100	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x4000630	          0x4c39c9	                             cmp rcx, r9	       100	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x4000633	        0x4c0f4dce	                          cmovge r9, rsi	       100	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x4000637	          0x4c89cd	                             mov rbp, r9	       104	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x400063a	          0x4c29d5	                            sub rbp, r10	       104	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x400063d	          0x4939d9	                             cmp r9, rbx	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000640	            0x7d3e	                           jge 0x4000680	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000642	          0x4c39fd	                            cmp rbp, r15	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000645	            0x7d39	                           jge 0x4000680	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000647	        0x488b3cea	            mov rdi, qword [rdx + rbp*8]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x400064b	        0x4a393cc8	            cmp qword [rax + r9*8], rdi 	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x400064f	            0x7534	                           jne 0x4000685	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000651	        0x498d4901	                       lea rcx, [r9 + 1]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000655	        0x488d7501	                      lea rsi, [rbp + 1]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000659	          0x4989cc	                            mov r12, rcx	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x400065c	          0x4889f5	                            mov rbp, rsi	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x400065f	          0x4839d9	                            cmp rcx, rbx	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000662	            0x7d24	                           jge 0x4000688	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000664	          0x4c39fe	                            cmp rsi, r15	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000667	            0x7d1f	                           jge 0x4000688	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000669	        0x4c8b04c8	             mov r8, qword [rax + rcx*8]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x400066d	        0x488b3cf2	            mov rdi, qword [rdx + rsi*8]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000671	        0x4883c101	                              add rcx, 1	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000675	        0x4883c601	                              add rsi, 1	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000679	          0x4939f8	                             cmp r8, rdi	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x400067c	            0x74db	                            je 0x4000659	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x400067e	            0xeb08	                           jmp 0x4000688	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000680	          0x4d89cc	                             mov r12, r9	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000683	            0xeb03	                           jmp 0x4000688	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000685	          0x4d89cc	                             mov r12, r9	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000688	          0x4c89e1	                            mov rcx, r12	       106	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_4
0x400068b	          0x4c29c9	                             sub rcx, r9	       106	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_4
0x400068e	    0x488bbc240801	           mov rdi, qword [rsp + 0x108] 	       107	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_4
0x4000696	        0x483b4f08	                cmp rcx, qword [rdi + 8]	       107	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_4
0x400069a	      0xbf01000000	                              mov edi, 1	       107	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_4
0x400069f	        0x440f4fef	                         cmovg r13d, edi	       107	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_4
0x40006a3	        0x4d896608	                mov qword [r14 + 8], r12	       108	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40006a7	      0x4c39542410	            cmp qword [rsp + 0x10], r10 	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x40006ac	        0x400f9ec6	                               setle sil	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x40006b0	      0x4c39542420	            cmp qword [rsp + 0x20], r10 	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x40006b5	           0xf9dc1	                                setge cl	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x40006b8	          0x4084ce	                            test sil, cl	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x40006bb	            0x741a	                            je 0x40006d7	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x40006bd	    0x48837c241800	               cmp qword [rsp + 0x18], 0	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x40006c3	            0x7412	                            je 0x40006d7	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x40006c5	    0x488bbc24f800	            mov rdi, qword [rsp + 0xf8] 	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x40006cd	        0x4e3924d7	           cmp qword [rdi + r10*8], r12 	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x40006d1	     0xf8ed8050000	                           jle 0x4000caf	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x40006d7	        0x4983ea02	                              sub r10, 2	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40006db	        0x4983eb10	                           sub r11, 0x10	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40006df	      0x4c3b542408	                cmp r10, qword [rsp + 8]	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40006e4	     0xf8d38ffffff	                           jge 0x4000622	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40006ea	          0x4589e9	                           mov r9d, r13d	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40006ed	      0x4c8b742450	            mov r14, qword [rsp + 0x50] 	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40006f2	      0x4c8b6c2458	            mov r13, qword [rsp + 0x58] 	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40006f7	            0xeb06	                           jmp 0x40006ff	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40006f9	    0x41b900000000	                              mov r9d, 0	        80	xdiffi.c	FUNCTION_1	FOR_1
0x40006ff	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       124	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x4000704	      0x48397c2430	            cmp qword [rsp + 0x30], rdi 	       124	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x4000709	            0x7d22	                           jge 0x400072d	       124	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x400070b	        0x4883ef01	                              sub rdi, 1	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x400070f	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x4000714	    0x488bb424f800	            mov rsi, qword [rsp + 0xf8] 	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x400071c	    0x48b9ffffffff	         movabs rcx, 0x7fffffffffffffff 	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x4000726	      0x48894cfef8	        mov qword [rsi + rdi*8 - 8], rcx	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x400072b	            0xeb06	                           jmp 0x4000733	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x400072d	    0x488344241001	               add qword [rsp + 0x10], 1	       127	xdiffi.c	FUNCTION_1	FOR_1	ELSE_4
0x4000733	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       128	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x4000738	      0x48397c2438	            cmp qword [rsp + 0x38], rdi 	       128	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x400073d	            0x7e22	                           jle 0x4000761	       128	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x400073f	        0x4883c701	                              add rdi, 1	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x4000743	      0x48897c2420	             mov qword [rsp + 0x20], rdi	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x4000748	    0x488bb424f800	            mov rsi, qword [rsp + 0xf8] 	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x4000750	    0x48b9ffffffff	         movabs rcx, 0x7fffffffffffffff 	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x400075a	      0x48894cfe08	        mov qword [rsi + rdi*8 + 8], rcx	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x400075f	            0xeb06	                           jmp 0x4000767	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x4000761	    0x48836c242001	               sub qword [rsp + 0x20], 1	       131	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5
0x4000767	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x400076c	      0x48397c2410	            cmp qword [rsp + 0x10], rdi 	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000771	     0xf8ff2000000	                            jg 0x4000869	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000777	    0x488bb424f800	            mov rsi, qword [rsp + 0xf8] 	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x400077f	      0x4c8d5cfef8	              lea r11, [rsi + rdi*8 - 8]	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000784	          0x4989fa	                            mov r10, rdi	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000787	      0x48895c2450	             mov qword [rsp + 0x50], rbx	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x400078c	          0x4489cb	                            mov ebx, r9d	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x400078f	      0x4c897c2458	             mov qword [rsp + 0x58], r15	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000794	          0x4d89df	                            mov r15, r11	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000797	          0x4d8b0b	                     mov r9, qword [r11]	       134	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x400079a	        0x498b4b10	            mov rcx, qword [r11 + 0x10] 	       134	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x400079e	        0x488d71ff	                      lea rsi, [rcx - 1]	       137	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	ELSE_6
0x40007a2	          0x4939c9	                             cmp r9, rcx	       137	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	ELSE_6
0x40007a5	        0x4c0f4dce	                          cmovge r9, rsi	       137	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	ELSE_6
0x40007a9	          0x4c89cd	                             mov rbp, r9	       139	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40007ac	          0x4c29d5	                            sub rbp, r10	       139	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40007af	          0x4d39f1	                             cmp r9, r14	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007b2	            0x7e42	                           jle 0x40007f6	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007b4	          0x4c39ed	                            cmp rbp, r13	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007b7	            0x7e3d	                           jle 0x40007f6	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007b9	      0x488b7ceaf8	        mov rdi, qword [rdx + rbp*8 - 8]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007be	      0x4a397cc8f8	        cmp qword [rax + r9*8 - 8], rdi 	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007c3	            0x7536	                           jne 0x40007fb	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007c5	        0x498d49ff	                       lea rcx, [r9 - 1]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007c9	        0x488d75ff	                      lea rsi, [rbp - 1]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007cd	          0x4989cc	                            mov r12, rcx	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007d0	          0x4889f5	                            mov rbp, rsi	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007d3	          0x4c39f1	                            cmp rcx, r14	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007d6	            0x7e26	                           jle 0x40007fe	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007d8	          0x4c39ee	                            cmp rsi, r13	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007db	            0x7e21	                           jle 0x40007fe	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007dd	      0x4c8b44c8f8	         mov r8, qword [rax + rcx*8 - 8]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007e2	      0x488b7cf2f8	        mov rdi, qword [rdx + rsi*8 - 8]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007e7	        0x4883e901	                              sub rcx, 1	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007eb	        0x4883ee01	                              sub rsi, 1	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007ef	          0x4939f8	                             cmp r8, rdi	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007f2	            0x74d9	                            je 0x40007cd	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007f4	            0xeb08	                           jmp 0x40007fe	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007f6	          0x4d89cc	                             mov r12, r9	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007f9	            0xeb03	                           jmp 0x40007fe	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007fb	          0x4d89cc	                             mov r12, r9	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007fe	          0x4d29e1	                             sub r9, r12	       141	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_9
0x4000801	    0x488bbc240801	           mov rdi, qword [rsp + 0x108] 	       142	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_9
0x4000809	        0x4c3b4f08	                 cmp r9, qword [rdi + 8]	       142	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_9
0x400080d	      0xbf01000000	                              mov edi, 1	       142	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_9
0x4000812	           0xf4fdf	                          cmovg ebx, edi	       142	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_9
0x4000815	        0x4d896708	                mov qword [r15 + 8], r12	       143	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000819	      0x4c39542408	                cmp qword [rsp + 8], r10	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x400081e	        0x400f9ec6	                               setle sil	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000822	      0x4c39542428	            cmp qword [rsp + 0x28], r10 	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000827	           0xf9dc1	                                setge cl	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x400082a	          0x4084ce	                            test sil, cl	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x400082d	            0x741a	                            je 0x4000849	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x400082f	    0x48837c241800	               cmp qword [rsp + 0x18], 0	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000835	            0x7512	                           jne 0x4000849	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000837	    0x488bbc24f000	            mov rdi, qword [rsp + 0xf0] 	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x400083f	        0x4e3924d7	           cmp qword [rdi + r10*8], r12 	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000843	     0xf8d7d040000	                           jge 0x4000cc6	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000849	        0x4983ea02	                              sub r10, 2	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x400084d	        0x4983eb10	                           sub r11, 0x10	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000851	      0x4c3b542410	            cmp r10, qword [rsp + 0x10] 	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000856	     0xf8d38ffffff	                           jge 0x4000794	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x400085c	          0x4189d9	                            mov r9d, ebx	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x400085f	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000864	      0x4c8b7c2458	            mov r15, qword [rsp + 0x58] 	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000869	    0x83bc24000100	              cmp dword [rsp + 0x100], 0	       152	xdiffi.c	FUNCTION_1	FOR_1	IF_11
0x4000871	     0xf852d040000	                           jne 0x4000ca4	       152	xdiffi.c	FUNCTION_1	FOR_1	IF_11
0x4000877	          0x4585c9	                           test r9d, r9d	       165	xdiffi.c	FUNCTION_1	FOR_1	IF_12
0x400087a	     0xf8404030000	                            je 0x4000b84	       165	xdiffi.c	FUNCTION_1	FOR_1	IF_12
0x4000880	    0x488b8c240801	           mov rcx, qword [rsp + 0x108] 	       165	xdiffi.c	FUNCTION_1	FOR_1	IF_12
0x4000888	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       165	xdiffi.c	FUNCTION_1	FOR_1	IF_12
0x400088d	        0x48397110	            cmp qword [rcx + 0x10], rsi 	       165	xdiffi.c	FUNCTION_1	FOR_1	IF_12
0x4000891	     0xf8ded020000	                           jge 0x4000b84	       165	xdiffi.c	FUNCTION_1	FOR_1	IF_12
0x4000897	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400089c	      0x48397c2408	                cmp qword [rsp + 8], rdi	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008a1	     0xf8f6d010000	                            jg 0x4000a14	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008a7	        0x48c1e602	                              shl rsi, 2	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008ab	      0x4889742450	             mov qword [rsp + 0x50], rsi	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008b0	      0x488b6c2478	            mov rbp, qword [rsp + 0x78] 	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008b5	          0x4829fd	                            sub rbp, rdi	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008b8	          0x4989fc	                            mov r12, rdi	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008bb	    0x41bb00000000	                             mov r11d, 0	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008c1	          0x4d89e0	                             mov r8, r12	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008c4	      0x4c2b442478	              sub r8, qword [rsp + 0x78]	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008c9	    0x4c39a4248800	            cmp qword [rsp + 0x88], r12 	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008d1	        0x4c0f4dc5	                          cmovge r8, rbp	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008d5	    0x488bbc24f000	            mov rdi, qword [rsp + 0xf0] 	       168	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008dd	        0x4a8b34e7	            mov rsi, qword [rdi + r12*8]	       168	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008e1	          0x4889f7	                            mov rdi, rsi	       169	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008e4	          0x4c29e7	                            sub rdi, r12	       169	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008e7	          0x4989f1	                             mov r9, rsi	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008ea	          0x4d29f1	                             sub r9, r14	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008ed	          0x4889f9	                            mov rcx, rdi	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008f0	          0x4c29e9	                            sub rcx, r13	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008f3	          0x4c01c9	                             add rcx, r9	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008f6	          0x4c29c1	                             sub rcx, r8	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008f9	          0x4c39d9	                            cmp rcx, r11	       172	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x40008fc	     0xf8ef6000000	                           jle 0x40009f8	       172	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000902	      0x48394c2450	            cmp qword [rsp + 0x50], rcx 	       172	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000907	     0xf8deb000000	                           jge 0x40009f8	       172	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x400090d	    0x4c8b94240801	           mov r10, qword [rsp + 0x108] 	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000915	        0x4d8b4208	                 mov r8, qword [r10 + 8]	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000919	        0x4f8d0c30	                      lea r9, [r8 + r14]	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x400091d	          0x4c39ce	                             cmp rsi, r9	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000920	     0xf8cd2000000	                            jl 0x40009f8	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000926	          0x4839de	                            cmp rsi, rbx	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000929	     0xf8dc9000000	                           jge 0x40009f8	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x400092f	        0x4f8d0c28	                      lea r9, [r8 + r13]	       174	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000933	          0x4c39cf	                             cmp rdi, r9	       174	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000936	     0xf8cbc000000	                            jl 0x40009f8	       174	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x400093c	          0x4c39ff	                            cmp rdi, r15	       174	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x400093f	     0xf8db3000000	                           jge 0x40009f8	       174	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000945	        0x4c8d4eff	                       lea r9, [rsi - 1]	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x4000949	    0x4e8d14cd0000	                         lea r10, [r9*8]	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x4000951	      0x4c89542458	             mov qword [rsp + 0x58], r10	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x4000956	      0x4c8b54faf8	        mov r10, qword [rdx + rdi*8 - 8]	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x400095b	        0x4e3914c8	            cmp qword [rax + r9*8], r10 	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x400095f	     0xf8593000000	                           jne 0x40009f8	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x4000965	        0x4983f801	                               cmp r8, 1	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000969	            0x7461	                            je 0x40009cc	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x400096b	      0x4c8b542458	            mov r10, qword [rsp + 0x58] 	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000970	      0x4e8d541008	                lea r10, [rax + r10 + 8]	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000975	    0x4c8994249800	             mov qword [rsp + 0x98], r10	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x400097d	        0x4c8d14fa	                  lea r10, [rdx + rdi*8]	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000981	      0x4c89542458	             mov qword [rsp + 0x58], r10	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000986	    0x41ba00000000	                             mov r10d, 0	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x400098c	    0x41b901000000	                              mov r9d, 1	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000992	    0x4889b424a000	             mov qword [rsp + 0xa0], rsi	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x400099a	    0x48898c24a800	             mov qword [rsp + 0xa8], rcx	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009a2	            0xeb09	                           jmp 0x40009ad	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009a4	        0x4983ea08	                              sub r10, 8	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009a8	          0x4d39c8	                              cmp r8, r9	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009ab	            0x742e	                            je 0x40009db	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009ad	        0x4983c101	                               add r9, 1	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40009b1	    0x488b8c249800	            mov rcx, qword [rsp + 0x98] 	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40009b9	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40009be	      0x4a8b7416f0	       mov rsi, qword [rsi + r10 - 0x10]	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40009c3	      0x4a397411f0	      cmp qword [rcx + r10 - 0x10], rsi 	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40009c8	            0x74da	                            je 0x40009a4	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40009ca	            0xeb2c	                           jmp 0x40009f8	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40009cc	      0x48897c2460	             mov qword [rsp + 0x60], rdi	       179	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009d1	      0x4889742468	             mov qword [rsp + 0x68], rsi	       178	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009d6	          0x4989cb	                            mov r11, rcx	       177	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009d9	            0xeb1d	                           jmp 0x40009f8	       177	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009db	    0x488bb424a000	            mov rsi, qword [rsp + 0xa0] 	       177	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009e3	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	       177	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009eb	      0x48897c2460	             mov qword [rsp + 0x60], rdi	       179	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009f0	      0x4889742468	             mov qword [rsp + 0x68], rsi	       178	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009f5	          0x4989cb	                            mov r11, rcx	       177	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009f8	        0x4983ec02	                              sub r12, 2	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40009fc	        0x4883c502	                              add rbp, 2	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000a00	      0x4c39642408	                cmp qword [rsp + 8], r12	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000a05	     0xf8eb6feffff	                           jle 0x40008c1	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000a0b	          0x4d85db	                           test r11, r11	       184	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000a0e	     0xf8fcc020000	                            jg 0x4000ce0	       184	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000a14	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a19	      0x48397c2410	            cmp qword [rsp + 0x10], rdi 	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a1e	     0xf8f60010000	                            jg 0x4000b84	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a24	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a29	    0x4c8d1cb50000	                        lea r11, [rsi*4]	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a31	    0x4c8ba4248000	            mov r12, qword [rsp + 0x80] 	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a39	          0x4929fc	                            sub r12, rdi	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a3c	          0x4889fd	                            mov rbp, rdi	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a3f	    0x41ba00000000	                             mov r10d, 0	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a45	          0x4989e8	                             mov r8, rbp	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a48	    0x4c2b84248000	              sub r8, qword [rsp + 0x80]	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a50	    0x4839ac249000	            cmp qword [rsp + 0x90], rbp 	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a58	        0x4d0f4dc4	                          cmovge r8, r12	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a5c	    0x488bbc24f800	            mov rdi, qword [rsp + 0xf8] 	       192	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a64	        0x488b34ef	            mov rsi, qword [rdi + rbp*8]	       192	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a68	          0x4889f7	                            mov rdi, rsi	       193	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a6b	          0x4829ef	                            sub rdi, rbp	       193	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a6e	          0x4989d9	                             mov r9, rbx	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a71	          0x4929f1	                             sub r9, rsi	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a74	          0x4c89f9	                            mov rcx, r15	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a77	          0x4829f9	                            sub rcx, rdi	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a7a	          0x4c01c9	                             add rcx, r9	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a7d	          0x4c29c1	                             sub rcx, r8	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a80	          0x4939cb	                            cmp r11, rcx	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000a83	     0xf8ddf000000	                           jge 0x4000b68	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000a89	          0x4c39d1	                            cmp rcx, r10	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000a8c	     0xf8ed6000000	                           jle 0x4000b68	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000a92	          0x4c39f6	                            cmp rsi, r14	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000a95	     0xf8ecd000000	                           jle 0x4000b68	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000a9b	    0x4c8b8c240801	            mov r9, qword [rsp + 0x108] 	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000aa3	        0x4d8b4108	                  mov r8, qword [r9 + 8]	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000aa7	          0x4989d9	                             mov r9, rbx	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000aaa	          0x4d29c1	                              sub r9, r8	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000aad	          0x4c39ce	                             cmp rsi, r9	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000ab0	     0xf8fb2000000	                            jg 0x4000b68	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000ab6	          0x4c39ef	                            cmp rdi, r13	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000ab9	     0xf8ea9000000	                           jle 0x4000b68	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000abf	          0x4d89f9	                             mov r9, r15	       198	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000ac2	      0x4c89442450	              mov qword [rsp + 0x50], r8	       198	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000ac7	          0x4d29c1	                              sub r9, r8	       198	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000aca	          0x4c39cf	                             cmp rdi, r9	       198	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000acd	     0xf8f95000000	                            jg 0x4000b68	       198	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000ad3	        0x4c8d0cf0	                   lea r9, [rax + rsi*8]	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000ad7	      0x4c894c2458	              mov qword [rsp + 0x58], r9	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000adc	        0x4c8d04fa	                   lea r8, [rdx + rdi*8]	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000ae0	    0x4c8984249800	              mov qword [rsp + 0x98], r8	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000ae8	          0x4d8b00	                      mov r8, qword [r8]	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000aeb	          0x4d3901	                      cmp qword [r9], r8	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000aee	            0x7578	                           jne 0x4000b68	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000af0	      0x4c8b442450	              mov r8, qword [rsp + 0x50]	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000af5	        0x4983e801	                               sub r8, 1	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000af9	      0x4c89442450	              mov qword [rsp + 0x50], r8	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000afe	            0x743c	                            je 0x4000b3c	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b00	    0x41b800000000	                              mov r8d, 0	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b06	    0x4889b424a000	             mov qword [rsp + 0xa0], rsi	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b0e	    0x48898c24a800	             mov qword [rsp + 0xa8], rcx	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b16	    0x4c8b8c249800	              mov r9, qword [rsp + 0x98]	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b1e	            0xeb07	                           jmp 0x4000b27	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b20	      0x4c3b442450	              cmp r8, qword [rsp + 0x50]	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b25	            0x7424	                            je 0x4000b4b	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b27	        0x4983c001	                               add r8, 1	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b2b	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b30	        0x4b8b34c1	              mov rsi, qword [r9 + r8*8]	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b34	        0x4a3934c1	            cmp qword [rcx + r8*8], rsi 	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b38	            0x74e6	                            je 0x4000b20	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b3a	            0xeb2c	                           jmp 0x4000b68	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b3c	      0x48897c2460	             mov qword [rsp + 0x60], rdi	       203	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b41	      0x4889742468	             mov qword [rsp + 0x68], rsi	       202	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b46	          0x4989ca	                            mov r10, rcx	       201	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b49	            0xeb1d	                           jmp 0x4000b68	       201	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b4b	    0x488bb424a000	            mov rsi, qword [rsp + 0xa0] 	       201	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b53	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	       201	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b5b	      0x48897c2460	             mov qword [rsp + 0x60], rdi	       203	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b60	      0x4889742468	             mov qword [rsp + 0x68], rsi	       202	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b65	          0x4989ca	                            mov r10, rcx	       201	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b68	        0x4883ed02	                              sub rbp, 2	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000b6c	        0x4983c402	                              add r12, 2	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000b70	      0x48396c2410	            cmp qword [rsp + 0x10], rbp 	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000b75	     0xf8ecafeffff	                           jle 0x4000a45	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000b7b	          0x4d85d2	                           test r10, r10	       208	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x4000b7e	     0xf8f76010000	                            jg 0x4000cfa	       208	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x4000b84	    0x488bbc240801	           mov rdi, qword [rsp + 0x108] 	       219	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x4000b8c	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       219	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x4000b91	          0x483b37	                    cmp rsi, qword [rdi]	       219	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x4000b94	     0xf8c0a010000	                            jl 0x4000ca4	       219	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x4000b9a	          0x4d89eb	                            mov r11, r13	       219	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x4000b9d	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000ba2	      0x4839442408	                cmp qword [rsp + 8], rax	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000ba7	            0x7f4b	                            jg 0x4000bf4	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000ba9	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000bb0	          0x4c89e5	                            mov rbp, r12	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000bb3	    0x488bb424f000	            mov rsi, qword [rsp + 0xf0] 	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000bbb	        0x48391cc6	           cmp qword [rsi + rax*8], rbx 	       224	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	CALL_1
0x4000bbf	          0x4889d9	                            mov rcx, rbx	       224	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	CALL_1
0x4000bc2	      0x480f4e0cc6	         cmovle rcx, qword [rsi + rax*8]	       224	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	CALL_1
0x4000bc7	          0x4889ca	                            mov rdx, rcx	       225	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000bca	          0x4829c2	                            sub rdx, rax	       225	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000bcd	          0x4c39fa	                            cmp rdx, r15	       226	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_20
0x4000bd0	            0x7e07	                           jle 0x4000bd9	       226	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_20
0x4000bd2	        0x498d0c07	                    lea rcx, [r15 + rax]	       226	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_20
0x4000bd6	          0x4c89fa	                            mov rdx, r15	       226	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_20
0x4000bd9	          0x4801ca	                            add rdx, rcx	       228	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000bdc	          0x4839ea	                            cmp rdx, rbp	       228	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000bdf	            0x7e06	                           jle 0x4000be7	       228	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000be1	          0x4989cc	                            mov r12, rcx	       230	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000be4	          0x4889d5	                            mov rbp, rdx	       229	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000be7	        0x4883e802	                              sub rax, 2	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000beb	      0x4839442408	                cmp qword [rsp + 8], rax	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000bf0	            0x7ec9	                           jle 0x4000bbb	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000bf2	            0xeb0a	                           jmp 0x4000bfe	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000bf4	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000bfb	          0x4c89e5	                            mov rbp, r12	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000bfe	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000c03	      0x4839542410	            cmp qword [rsp + 0x10], rdx 	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000c08	            0x7f4e	                            jg 0x4000c58	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000c0a	    0x48b8ffffffff	         movabs rax, 0x7fffffffffffffff 	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000c14	          0x4889c6	                            mov rsi, rax	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000c17	    0x4c8b8424f800	              mov r8, qword [rsp + 0xf8]	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000c1f	        0x4d3934d0	            cmp qword [r8 + rdx*8], r14 	       236	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	CALL_2
0x4000c23	          0x4c89f7	                            mov rdi, r14	       236	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	CALL_2
0x4000c26	      0x490f4d3cd0	          cmovge rdi, qword [r8 + rdx*8]	       236	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	CALL_2
0x4000c2b	          0x4889f9	                            mov rcx, rdi	       237	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000c2e	          0x4829d1	                            sub rcx, rdx	       237	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000c31	          0x4c39d9	                            cmp rcx, r11	       238	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_22
0x4000c34	            0x7d07	                           jge 0x4000c3d	       238	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_22
0x4000c36	        0x498d3c13	                    lea rdi, [r11 + rdx]	       238	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_22
0x4000c3a	          0x4c89d9	                            mov rcx, r11	       238	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_22
0x4000c3d	          0x4801f9	                            add rcx, rdi	       240	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000c40	          0x4839f1	                            cmp rcx, rsi	       240	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000c43	            0x7d06	                           jge 0x4000c4b	       240	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000c45	          0x4889f8	                            mov rax, rdi	       242	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000c48	          0x4889ce	                            mov rsi, rcx	       241	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000c4b	        0x4883ea02	                              sub rdx, 2	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000c4f	      0x4839542410	            cmp qword [rsp + 0x10], rdx 	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000c54	            0x7ec9	                           jle 0x4000c1f	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000c56	            0xeb0d	                           jmp 0x4000c65	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000c58	    0x48b8ffffffff	         movabs rax, 0x7fffffffffffffff 	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000c62	          0x4889c6	                            mov rsi, rax	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000c65	        0x4a8d143b	                    lea rdx, [rbx + r15]	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000c69	          0x4829f2	                            sub rdx, rsi	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000c6c	        0x4b8d0c1e	                    lea rcx, [r14 + r11]	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000c70	          0x4889ef	                            mov rdi, rbp	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000c73	          0x4829cf	                            sub rdi, rcx	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000c76	          0x4839fa	                            cmp rdx, rdi	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000c79	            0x7d13	                           jge 0x4000c8e	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000c7b	          0x4c29e5	                            sub rbp, r12	       248	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000c7e	    0x41bd00000000	                             mov r13d, 0	       250	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000c84	      0xb801000000	                              mov eax, 1	       249	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000c89	      0xe984000000	                           jmp 0x4000d12	       249	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000c8e	          0x4829c6	                            sub rsi, rax	       253	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000c91	          0x4889f5	                            mov rbp, rsi	       253	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000c94	          0x4989c4	                            mov r12, rax	       252	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000c97	    0x41bd01000000	                             mov r13d, 1	       255	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000c9d	      0xb800000000	                              mov eax, 0	       254	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000ca2	            0xeb6e	                           jmp 0x4000d12	       254	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000ca4	    0x488344244001	               add qword [rsp + 0x40], 1	        79	xdiffi.c	FUNCTION_1	FOR_1
0x4000caa	      0xe9e5f8ffff	                           jmp 0x4000594	        79	xdiffi.c	FUNCTION_1	FOR_1
0x4000caf	      0x4c8b742450	            mov r14, qword [rsp + 0x50] 	        79	xdiffi.c	FUNCTION_1	FOR_1
0x4000cb4	      0x4c8b5c2458	            mov r11, qword [rsp + 0x58] 	        79	xdiffi.c	FUNCTION_1	FOR_1
0x4000cb9	    0x41bd01000000	                             mov r13d, 1	       112	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000cbf	      0xb801000000	                              mov eax, 1	       112	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000cc4	            0xeb4c	                           jmp 0x4000d12	       112	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000cc6	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	       112	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000ccb	          0x4d89eb	                            mov r11, r13	       112	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000cce	      0x4c8b7c2458	            mov r15, qword [rsp + 0x58] 	       112	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000cd3	    0x41bd01000000	                             mov r13d, 1	       147	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000cd9	      0xb801000000	                              mov eax, 1	       147	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000cde	            0xeb32	                           jmp 0x4000d12	       147	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000ce0	          0x4d89eb	                            mov r11, r13	       147	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000ce3	      0x488b6c2460	            mov rbp, qword [rsp + 0x60] 	       184	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000ce8	      0x4c8b642468	            mov r12, qword [rsp + 0x68] 	       184	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000ced	    0x41bd00000000	                             mov r13d, 0	       186	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000cf3	      0xb801000000	                              mov eax, 1	       185	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000cf8	            0xeb18	                           jmp 0x4000d12	       185	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000cfa	          0x4d89eb	                            mov r11, r13	       185	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000cfd	      0x488b6c2460	            mov rbp, qword [rsp + 0x60] 	       208	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x4000d02	      0x4c8b642468	            mov r12, qword [rsp + 0x68] 	       208	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x4000d07	    0x41bd01000000	                             mov r13d, 1	       210	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x4000d0d	      0xb800000000	                              mov eax, 0	       209	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x4000d12	    0x48837c244000	               cmp qword [rsp + 0x40], 0	       302	xdiffi.c	FUNCTION_2	ELSE_2	IF_3	CALL_1
0x4000d18	            0x787e	                            js 0x4000d98	       302	xdiffi.c	FUNCTION_2	ELSE_2	IF_3	CALL_1
0x4000d1a	    0xffb424080100	                push qword [rsp + 0x108]	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d21	              0x50	                                push rax	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d22	    0xffb424080100	                push qword [rsp + 0x108]	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d29	    0xffb424080100	                push qword [rsp + 0x108]	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d30	          0x4989e9	                             mov r9, rbp	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d33	          0x4d89d8	                             mov r8, r11	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d36	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d3b	          0x4c89e2	                            mov rdx, r12	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d3e	          0x4c89f6	                            mov rsi, r14	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d41	    0x4c8bb4249000	            mov r14, qword [rsp + 0x90] 	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d49	          0x4c89f7	                            mov rdi, r14	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d4c	      0xe800000000	                          call 0x4000d51	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d51	        0x4883c420	                           add rsp, 0x20	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d55	            0x85c0	                           test eax, eax	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d57	            0x783f	                            js 0x4000d98	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000d59	    0xffb424080100	                push qword [rsp + 0x108]	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d60	            0x4155	                                push r13	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d62	    0xffb424080100	                push qword [rsp + 0x108]	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d69	    0xffb424080100	                push qword [rsp + 0x108]	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d70	          0x4d89f9	                             mov r9, r15	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d73	          0x4989e8	                             mov r8, rbp	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d76	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d7b	          0x4889da	                            mov rdx, rbx	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d7e	          0x4c89e6	                            mov rsi, r12	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d81	          0x4c89f7	                            mov rdi, r14	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d84	      0xe800000000	                          call 0x4000d89	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d89	        0x4883c420	                           add rsp, 0x20	       312	xdiffi.c	FUNCTION_2	ELSE_2	IF_4
0x4000d8d	            0x85c0	                           test eax, eax	       312	xdiffi.c	FUNCTION_2	ELSE_2	IF_4
0x4000d8f	            0x7807	                            js 0x4000d98	       312	xdiffi.c	FUNCTION_2	ELSE_2	IF_4
0x4000d91	      0xb800000000	                              mov eax, 0	       320	xdiffi.c	FUNCTION_2
0x4000d96	            0xeb13	                           jmp 0x4000dab	       320	xdiffi.c	FUNCTION_2
0x4000d98	      0xb8ffffffff	                     mov eax, 0xffffffff	       254	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000d9d	            0xeb0c	                           jmp 0x4000dab	       254	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000d9f	      0xb800000000	                              mov eax, 0	       320	xdiffi.c	FUNCTION_2
0x4000da4	            0xeb05	                           jmp 0x4000dab	       320	xdiffi.c	FUNCTION_2
0x4000da6	      0xb800000000	                              mov eax, 0	       320	xdiffi.c	FUNCTION_2
0x4000dab	    0x4881c4b80000	                           add rsp, 0xb8	       321	xdiffi.c	FUNCTION_2
0x4000db2	              0x5b	                                 pop rbx	       321	xdiffi.c	FUNCTION_2
0x4000db3	              0x5d	                                 pop rbp	       321	xdiffi.c	FUNCTION_2
0x4000db4	            0x415c	                                 pop r12	       321	xdiffi.c	FUNCTION_2
0x4000db6	            0x415d	                                 pop r13	       321	xdiffi.c	FUNCTION_2
0x4000db8	            0x415e	                                 pop r14	       321	xdiffi.c	FUNCTION_2
0x4000dba	            0x415f	                                 pop r15	       321	xdiffi.c	FUNCTION_2
0x4000dbc	              0xc3	                                     ret	       321	xdiffi.c	FUNCTION_2
xdl_build_script	IF,2:functions,0:WHILE,0:ELSE,0:FOR,3:CALL,2:SWITCH,0:DO,0	76
0x400143d	            0x4157	                                push r15	       945	xdiffi.c	FUNCTION_17
0x400143f	            0x4156	                                push r14	       945	xdiffi.c	FUNCTION_17
0x4001441	            0x4155	                                push r13	       945	xdiffi.c	FUNCTION_17
0x4001443	            0x4154	                                push r12	       945	xdiffi.c	FUNCTION_17
0x4001445	              0x55	                                push rbp	       945	xdiffi.c	FUNCTION_17
0x4001446	              0x53	                                push rbx	       945	xdiffi.c	FUNCTION_17
0x4001447	        0x4883ec18	                           sub rsp, 0x18	       945	xdiffi.c	FUNCTION_17
0x400144b	      0x4889742408	                mov qword [rsp + 8], rsi	       945	xdiffi.c	FUNCTION_17
0x4001450	        0x4c8b6768	            mov r12, qword [rdi + 0x68] 	       947	xdiffi.c	FUNCTION_17
0x4001454	    0x4c8baff00000	            mov r13, qword [rdi + 0xf0] 	       947	xdiffi.c	FUNCTION_17
0x400145b	        0x4c8b7f38	            mov r15, qword [rdi + 0x38] 	       953	xdiffi.c	FUNCTION_17	FOR_1
0x400145f	    0x4c8bb7c00000	            mov r14, qword [rdi + 0xc0] 	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001466	          0x4d85ff	                           test r15, r15	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001469	            0x7909	                           jns 0x4001474	       953	xdiffi.c	FUNCTION_17	FOR_1
0x400146b	          0x4d85f6	                           test r14, r14	       953	xdiffi.c	FUNCTION_17	FOR_1
0x400146e	     0xf88a3000000	                            js 0x4001517	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001474	    0x48c704240000	                      mov qword [rsp], 0	       953	xdiffi.c	FUNCTION_17	FOR_1
0x400147c	    0x43807c3cff00	             cmp byte [r12 + r15 - 1], 0	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001482	            0x7510	                           jne 0x4001494	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001484	    0x43807c35ff00	             cmp byte [r13 + r14 - 1], 0	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x400148a	            0x7521	                           jne 0x40014ad	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x400148c	          0x4c89f5	                            mov rbp, r14	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x400148f	          0x4c89fb	                            mov rbx, r15	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001492	            0xeb67	                           jmp 0x40014fb	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001494	          0x4c89fb	                            mov rbx, r15	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001497	        0x4883eb01	                              sub rbx, 1	       955	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_2
0x400149b	    0x41807c1cff00	             cmp byte [r12 + rbx - 1], 0	       955	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_2
0x40014a1	            0x75f4	                           jne 0x4001497	       955	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_2
0x40014a3	    0x43807c35ff00	             cmp byte [r13 + r14 - 1], 0	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x40014a9	            0x7505	                           jne 0x40014b0	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x40014ab	            0xeb14	                           jmp 0x40014c1	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x40014ad	          0x4c89fb	                            mov rbx, r15	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x40014b0	          0x4c89f5	                            mov rbp, r14	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x40014b3	        0x4883ed01	                              sub rbp, 1	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x40014b7	    0x41807c2dff00	             cmp byte [r13 + rbp - 1], 0	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x40014bd	            0x75f4	                           jne 0x40014b3	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x40014bf	            0xeb03	                           jmp 0x40014c4	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x40014c1	          0x4c89f5	                            mov rbp, r14	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x40014c4	          0x4929ee	                            sub r14, rbp	       958	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_1
0x40014c7	          0x4929df	                            sub r15, rbx	       958	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_1
0x40014ca	      0xbf30000000	                           mov edi, 0x30	       389	xdiffi.c	FUNCTION_4	IF_1	CALL_1
0x40014cf	      0xe800000000	                          call 0x40014d4	       389	xdiffi.c	FUNCTION_4	IF_1	CALL_1
0x40014d4	          0x4885c0	                           test rax, rax	       389	xdiffi.c	FUNCTION_4	IF_1	CALL_1
0x40014d7	            0x7459	                            je 0x4001532	       389	xdiffi.c	FUNCTION_4	IF_1	CALL_1
0x40014d9	        0x488b1424	                    mov rdx, qword [rsp]	       392	xdiffi.c	FUNCTION_4
0x40014dd	          0x488910	                    mov qword [rax], rdx	       392	xdiffi.c	FUNCTION_4
0x40014e0	        0x48895808	                mov qword [rax + 8], rbx	       393	xdiffi.c	FUNCTION_4
0x40014e4	        0x48896810	             mov qword [rax + 0x10], rbp	       394	xdiffi.c	FUNCTION_4
0x40014e8	        0x4c897818	             mov qword [rax + 0x18], r15	       395	xdiffi.c	FUNCTION_4
0x40014ec	        0x4c897020	             mov qword [rax + 0x20], r14	       396	xdiffi.c	FUNCTION_4
0x40014f0	    0xc74028000000	               mov dword [rax + 0x28], 0	       397	xdiffi.c	FUNCTION_4
0x40014f7	        0x48890424	                    mov qword [rsp], rax	       399	xdiffi.c	FUNCTION_4
0x40014fb	        0x4c8d75ff	                      lea r14, [rbp - 1]	       953	xdiffi.c	FUNCTION_17	FOR_1
0x40014ff	        0x4883eb01	                              sub rbx, 1	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001503	          0x4989df	                            mov r15, rbx	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001506	     0xf8970ffffff	                           jns 0x400147c	       953	xdiffi.c	FUNCTION_17	FOR_1
0x400150c	          0x4d85f6	                           test r14, r14	       953	xdiffi.c	FUNCTION_17	FOR_1
0x400150f	     0xf8967ffffff	                           jns 0x400147c	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001515	            0xeb08	                           jmp 0x400151f	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001517	    0x48c704240000	                      mov qword [rsp], 0	       946	xdiffi.c	FUNCTION_17
0x400151f	      0x488b442408	                mov rax, qword [rsp + 8]	       965	xdiffi.c	FUNCTION_17
0x4001524	        0x488b0c24	                    mov rcx, qword [rsp]	       965	xdiffi.c	FUNCTION_17
0x4001528	          0x488908	                    mov qword [rax], rcx	       965	xdiffi.c	FUNCTION_17
0x400152b	      0xb800000000	                              mov eax, 0	       967	xdiffi.c	FUNCTION_17
0x4001530	            0xeb0e	                           jmp 0x4001540	       967	xdiffi.c	FUNCTION_17
0x4001532	        0x488b3c24	                    mov rdi, qword [rsp]	       959	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_2
0x4001536	      0xe800000000	                          call 0x400153b	       959	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_2
0x400153b	      0xb8ffffffff	                     mov eax, 0xffffffff	       960	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2
0x4001540	        0x4883c418	                           add rsp, 0x18	       968	xdiffi.c	FUNCTION_17
0x4001544	              0x5b	                                 pop rbx	       968	xdiffi.c	FUNCTION_17
0x4001545	              0x5d	                                 pop rbp	       968	xdiffi.c	FUNCTION_17
0x4001546	            0x415c	                                 pop r12	       968	xdiffi.c	FUNCTION_17
0x4001548	            0x415d	                                 pop r13	       968	xdiffi.c	FUNCTION_17
0x400154a	            0x415e	                                 pop r14	       968	xdiffi.c	FUNCTION_17
0x400154c	            0x415f	                                 pop r15	       968	xdiffi.c	FUNCTION_17
0x400154e	              0xc3	                                     ret	       968	xdiffi.c	FUNCTION_17
xdl_bug	IF,0:functions,0:WHILE,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:DO,0	9
0x400026e	        0x4883ec08	                              sub rsp, 8	       805	xdiffi.c	FUNCTION_15
0x4000272	          0x4889f9	                            mov rcx, rdi	       805	xdiffi.c	FUNCTION_15
0x4000275	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_11
0x400027a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_11
0x400027f	    0x488b3d000000	            mov rdi, qword [0x04000286] 	        97	stdio2.h	CALL_11
0x4000286	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_11
0x400028b	      0xe800000000	                          call 0x4000290	        97	stdio2.h	CALL_11
0x4000290	      0xbf01000000	                              mov edi, 1	       807	xdiffi.c	FUNCTION_15	CALL_1
0x4000295	      0xe800000000	             call sym.xdl_call_hunk_func	       807	xdiffi.c	FUNCTION_15	CALL_1
xdl_free_script	IF,0:functions,0:WHILE,1:ELSE,0:FOR,0:CALL,1:SWITCH,0:DO,0	10
0x4001424	          0x4885ff	                           test rdi, rdi	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001427	            0x7412	                            je 0x400143b	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001429	              0x53	                                push rbx	       971	xdiffi.c	FUNCTION_18
0x400142a	          0x488b1f	                    mov rbx, qword [rdi]	       975	xdiffi.c	FUNCTION_18	WHILE_1
0x400142d	      0xe800000000	                          call 0x4001432	       976	xdiffi.c	FUNCTION_18	WHILE_1	CALL_1
0x4001432	          0x4889df	                            mov rdi, rbx	       975	xdiffi.c	FUNCTION_18	WHILE_1
0x4001435	          0x4885db	                           test rbx, rbx	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001438	            0x75f0	                           jne 0x400142a	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x400143a	              0x5b	                                 pop rbx	       978	xdiffi.c	FUNCTION_18
0x400143b	            0xf3c3	                                     ret	       978	xdiffi.c	FUNCTION_18
