xdl_do_diff	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,6:FOR,0:CALL,12:DO,0	103
0x4000e90	            0x4157	                                push r15	       325	xdiffi.c	FUNCTION_3
0x4000e92	            0x4156	                                push r14	       325	xdiffi.c	FUNCTION_3
0x4000e94	            0x4155	                                push r13	       325	xdiffi.c	FUNCTION_3
0x4000e96	            0x4154	                                push r12	       325	xdiffi.c	FUNCTION_3
0x4000e98	              0x55	                                push rbp	       325	xdiffi.c	FUNCTION_3
0x4000e99	              0x53	                                push rbx	       325	xdiffi.c	FUNCTION_3
0x4000e9a	          0x4889d5	                            mov rbp, rdx	       325	xdiffi.c	FUNCTION_3
0x4000e9d	          0x4889cb	                            mov rbx, rcx	       325	xdiffi.c	FUNCTION_3
0x4000ea0	        0x4883ec78	                           sub rsp, 0x78	       325	xdiffi.c	FUNCTION_3
0x4000ea4	    0x64488b042528	                mov rax, qword fs:[0x28]	       325	xdiffi.c	FUNCTION_3
0x4000ead	      0x4889442468	             mov qword [rsp + 0x68], rax	       325	xdiffi.c	FUNCTION_3
0x4000eb2	            0x31c0	                            xor eax, eax	       325	xdiffi.c	FUNCTION_3
0x4000eb4	          0x488b02	                    mov rax, qword [rdx]	       331	xdiffi.c	FUNCTION_3	IF_1	CALL_1
0x4000eb7	      0x2500c00000	                         and eax, 0xc000	       331	xdiffi.c	FUNCTION_3	IF_1	CALL_1
0x4000ebc	    0x483d00400000	                         cmp rax, 0x4000	       331	xdiffi.c	FUNCTION_3	IF_1	CALL_1
0x4000ec2	     0xf8448010000	                            je 0x4001010	       331	xdiffi.c	FUNCTION_3	IF_1	CALL_1
0x4000ec8	    0x483d00800000	                         cmp rax, 0x8000	       334	xdiffi.c	FUNCTION_3	IF_2	CALL_3
0x4000ece	     0xf842c010000	                            je 0x4001000	       334	xdiffi.c	FUNCTION_3	IF_2	CALL_3
0x4000ed4	      0xe800000000	                          call 0x4000ed9	       337	xdiffi.c	FUNCTION_3	IF_3	CALL_5
0x4000ed9	            0x85c0	                           test eax, eax	       337	xdiffi.c	FUNCTION_3	IF_3	CALL_5
0x4000edb	     0xf883f010000	                            js 0x4001020	       337	xdiffi.c	FUNCTION_3	IF_3	CALL_5
0x4000ee1	    0x4c8bab000100	           mov r13, qword [rbx + 0x100] 	       346	xdiffi.c	FUNCTION_3
0x4000ee8	          0x4c89ef	                            mov rdi, r13	       346	xdiffi.c	FUNCTION_3
0x4000eeb	        0x48037b78	             add rdi, qword [rbx + 0x78]	       346	xdiffi.c	FUNCTION_3
0x4000eef	        0x4c8d7703	                      lea r14, [rdi + 3]	       346	xdiffi.c	FUNCTION_3
0x4000ef3	        0x4883c704	                              add rdi, 4	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x4000ef7	        0x48c1e704	                              shl rdi, 4	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x4000efb	      0xe800000000	                          call 0x4000f00	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x4000f00	          0x4885c0	                           test rax, rax	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x4000f03	          0x4989c4	                            mov r12, rax	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x4000f06	     0xf8429010000	                            je 0x4001035	       347	xdiffi.c	FUNCTION_3	IF_4	CALL_6
0x4000f0c	    0x4a8d04ed0800	                    lea rax, [r13*8 + 8]	       354	xdiffi.c	FUNCTION_3
0x4000f14	          0x4c89f7	                            mov rdi, r14	       357	xdiffi.c	FUNCTION_3	CALL_8
0x4000f17	        0x4e8d2cf0	                  lea r13, [rax + r14*8]	       355	xdiffi.c	FUNCTION_3
0x4000f1b	        0x4d8d3c04	                    lea r15, [r12 + rax]	       354	xdiffi.c	FUNCTION_3
0x4000f1f	      0xe800000000	                          call 0x4000f24	       357	xdiffi.c	FUNCTION_3	CALL_8
0x4000f24	          0x4d01e5	                            add r13, r12	       355	xdiffi.c	FUNCTION_3
0x4000f27	      0xba00010000	                          mov edx, 0x100	       357	xdiffi.c	FUNCTION_3	CALL_8
0x4000f2c	    0x483d00010000	                          cmp rax, 0x100	       357	xdiffi.c	FUNCTION_3	CALL_8
0x4000f32	        0x480f4cc2	                          cmovl rax, rdx	       357	xdiffi.c	FUNCTION_3	CALL_8
0x4000f36	    0x4c8b8b000100	            mov r9, qword [rbx + 0x100] 	       367	xdiffi.c	FUNCTION_3
0x4000f3d	        0x488b5378	            mov rdx, qword [rbx + 0x78] 	       363	xdiffi.c	FUNCTION_3
0x4000f41	        0x48890424	                    mov qword [rsp], rax	       357	xdiffi.c	FUNCTION_3	CALL_8
0x4000f45	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	       364	xdiffi.c	FUNCTION_3
0x4000f4c	          0x4531c0	                            xor r8d, r8d	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000f4f	    0x48c744240814	               mov qword [rsp + 8], 0x14	       360	xdiffi.c	FUNCTION_3
0x4000f58	    0x48c744241000	          mov qword [rsp + 0x10], 0x100 	       361	xdiffi.c	FUNCTION_3
0x4000f61	            0x31f6	                            xor esi, esi	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000f63	      0x4889542420	             mov qword [rsp + 0x20], rdx	       363	xdiffi.c	FUNCTION_3
0x4000f68	      0x4c894c2440	              mov qword [rsp + 0x40], r9	       367	xdiffi.c	FUNCTION_3
0x4000f6d	      0x4889442428	             mov qword [rsp + 0x28], rax	       364	xdiffi.c	FUNCTION_3
0x4000f72	        0x488b4368	            mov rax, qword [rbx + 0x68] 	       365	xdiffi.c	FUNCTION_3
0x4000f76	      0x4889442438	             mov qword [rsp + 0x38], rax	       365	xdiffi.c	FUNCTION_3
0x4000f7b	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       366	xdiffi.c	FUNCTION_3
0x4000f7f	      0x4889442430	             mov qword [rsp + 0x30], rax	       366	xdiffi.c	FUNCTION_3
0x4000f84	    0x488b83080100	           mov rax, qword [rbx + 0x108] 	       368	xdiffi.c	FUNCTION_3
0x4000f8b	      0x4889442448	             mov qword [rsp + 0x48], rax	       368	xdiffi.c	FUNCTION_3
0x4000f90	    0x488b83f00000	            mov rax, qword [rbx + 0xf0] 	       369	xdiffi.c	FUNCTION_3
0x4000f97	      0x4889442458	             mov qword [rsp + 0x58], rax	       369	xdiffi.c	FUNCTION_3
0x4000f9c	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	       370	xdiffi.c	FUNCTION_3
0x4000fa3	      0x4889442450	             mov qword [rsp + 0x50], rax	       370	xdiffi.c	FUNCTION_3
0x4000fa8	        0x488b4500	                    mov rax, qword [rbp]	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000fac	              0x54	                                push rsp	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000fad	          0x83e001	                              and eax, 1	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000fb0	              0x50	                                push rax	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000fb1	            0x4155	                                push r13	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000fb3	            0x4157	                                push r15	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000fb5	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000fba	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000fbf	      0xe800000000	                          call 0x4000fc4	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000fc4	        0x4883c420	                           add rsp, 0x20	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000fc8	            0x85c0	                           test eax, eax	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000fca	          0x4c89e7	                            mov rdi, r12	       375	xdiffi.c	FUNCTION_3	IF_6	CALL_10
0x4000fcd	     0xf885d000000	                            js 0x4001030	       372	xdiffi.c	FUNCTION_3	IF_6	CALL_9
0x4000fd3	      0xe800000000	                          call 0x4000fd8	       380	xdiffi.c	FUNCTION_3	CALL_12
0x4000fd8	            0x31c0	                            xor eax, eax	       382	xdiffi.c	FUNCTION_3
0x4000fda	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       383	xdiffi.c	FUNCTION_3
0x4000fdf	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       383	xdiffi.c	FUNCTION_3
0x4000fe8	            0x755a	                           jne 0x4001044	       383	xdiffi.c	FUNCTION_3
0x4000fea	        0x4883c478	                           add rsp, 0x78	       383	xdiffi.c	FUNCTION_3
0x4000fee	              0x5b	                                 pop rbx	       383	xdiffi.c	FUNCTION_3
0x4000fef	              0x5d	                                 pop rbp	       383	xdiffi.c	FUNCTION_3
0x4000ff0	            0x415c	                                 pop r12	       383	xdiffi.c	FUNCTION_3
0x4000ff2	            0x415d	                                 pop r13	       383	xdiffi.c	FUNCTION_3
0x4000ff4	            0x415e	                                 pop r14	       383	xdiffi.c	FUNCTION_3
0x4000ff6	            0x415f	                                 pop r15	       383	xdiffi.c	FUNCTION_3
0x4000ff8	              0xc3	                                     ret	       383	xdiffi.c	FUNCTION_3
0x4000ff9	     0xf1f80000000	                         nop dword [rax]	       383	xdiffi.c	FUNCTION_3
0x4001000	      0xe800000000	                          call 0x4001005	       335	xdiffi.c	FUNCTION_3	CALL_4
0x4001005	            0xebd3	                           jmp 0x4000fda	       335	xdiffi.c	FUNCTION_3	CALL_4
0x4001007	    0x660f1f840000	                    nop word [rax + rax]	       335	xdiffi.c	FUNCTION_3	CALL_4
0x4001010	      0xe800000000	                          call 0x4001015	       332	xdiffi.c	FUNCTION_3	CALL_2
0x4001015	            0xebc3	                           jmp 0x4000fda	       332	xdiffi.c	FUNCTION_3	CALL_2
0x4001017	    0x660f1f840000	                    nop word [rax + rax]	       332	xdiffi.c	FUNCTION_3	CALL_2
0x4001020	      0xb8ffffffff	                     mov eax, 0xffffffff	       339	xdiffi.c	FUNCTION_3	IF_3
0x4001025	            0xebb3	                           jmp 0x4000fda	       339	xdiffi.c	FUNCTION_3	IF_3
0x4001027	    0x660f1f840000	                    nop word [rax + rax]	       339	xdiffi.c	FUNCTION_3	IF_3
0x4001030	      0xe800000000	                          call 0x4001035	       375	xdiffi.c	FUNCTION_3	IF_6	CALL_10
0x4001035	          0x4889df	                            mov rdi, rbx	       376	xdiffi.c	FUNCTION_3	IF_6	CALL_11
0x4001038	      0xe800000000	                          call 0x400103d	       376	xdiffi.c	FUNCTION_3	IF_6	CALL_11
0x400103d	      0xb8ffffffff	                     mov eax, 0xffffffff	       377	xdiffi.c	FUNCTION_3	IF_6
0x4001042	            0xeb96	                           jmp 0x4000fda	       377	xdiffi.c	FUNCTION_3	IF_6
0x4001044	      0xe800000000	                          call 0x4001049	       383	xdiffi.c	FUNCTION_3
xdl_build_script	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,2:FOR,3:CALL,2:DO,0	94
0x40015d0	            0x4157	                                push r15	       945	xdiffi.c	FUNCTION_17
0x40015d2	            0x4156	                                push r14	       945	xdiffi.c	FUNCTION_17
0x40015d4	          0x4531ff	                          xor r15d, r15d	       946	xdiffi.c	FUNCTION_17
0x40015d7	            0x4155	                                push r13	       945	xdiffi.c	FUNCTION_17
0x40015d9	            0x4154	                                push r12	       945	xdiffi.c	FUNCTION_17
0x40015db	              0x55	                                push rbp	       945	xdiffi.c	FUNCTION_17
0x40015dc	              0x53	                                push rbx	       945	xdiffi.c	FUNCTION_17
0x40015dd	        0x4883ec18	                           sub rsp, 0x18	       945	xdiffi.c	FUNCTION_17
0x40015e1	    0x4c8bafc00000	            mov r13, qword [rdi + 0xc0] 	       953	xdiffi.c	FUNCTION_17	FOR_1
0x40015e8	        0x488b5768	            mov rdx, qword [rdi + 0x68] 	       947	xdiffi.c	FUNCTION_17
0x40015ec	      0x4889742408	                mov qword [rsp + 8], rsi	       945	xdiffi.c	FUNCTION_17
0x40015f1	    0x4c8ba7f00000	            mov r12, qword [rdi + 0xf0] 	       947	xdiffi.c	FUNCTION_17
0x40015f8	        0x4c8b7738	            mov r14, qword [rdi + 0x38] 	       953	xdiffi.c	FUNCTION_17	FOR_1
0x40015fc	          0x4d85ed	                           test r13, r13	       953	xdiffi.c	FUNCTION_17	FOR_1
0x40015ff	            0x790f	                           jns 0x4001610	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001601	          0x4d85f6	                           test r14, r14	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001604	            0x7836	                            js 0x400163c	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001606	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001610	    0x42807c32ff00	             cmp byte [rdx + r14 - 1], 0	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001616	            0x7540	                           jne 0x4001658	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001618	    0x43807c2cff00	             cmp byte [r12 + r13 - 1], 0	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x400161e	     0xf85dc000000	                           jne 0x4001700	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001624	          0x4c89ed	                            mov rbp, r13	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x4001627	          0x4c89f3	                            mov rbx, r14	       954	xdiffi.c	FUNCTION_17	FOR_1	IF_1
0x400162a	        0x4883eb01	                              sub rbx, 1	       953	xdiffi.c	FUNCTION_17	FOR_1
0x400162e	        0x4c8d6dff	                      lea r13, [rbp - 1]	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001632	          0x4989de	                            mov r14, rbx	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001635	            0x79d9	                           jns 0x4001610	       953	xdiffi.c	FUNCTION_17	FOR_1
0x4001637	          0x4d85ed	                           test r13, r13	       953	xdiffi.c	FUNCTION_17	FOR_1
0x400163a	            0x79d4	                           jns 0x4001610	       953	xdiffi.c	FUNCTION_17	FOR_1
0x400163c	      0x488b442408	                mov rax, qword [rsp + 8]	       965	xdiffi.c	FUNCTION_17
0x4001641	          0x4c8938	                    mov qword [rax], r15	       965	xdiffi.c	FUNCTION_17
0x4001644	        0x4883c418	                           add rsp, 0x18	       968	xdiffi.c	FUNCTION_17
0x4001648	            0x31c0	                            xor eax, eax	       967	xdiffi.c	FUNCTION_17
0x400164a	              0x5b	                                 pop rbx	       968	xdiffi.c	FUNCTION_17
0x400164b	              0x5d	                                 pop rbp	       968	xdiffi.c	FUNCTION_17
0x400164c	            0x415c	                                 pop r12	       968	xdiffi.c	FUNCTION_17
0x400164e	            0x415d	                                 pop r13	       968	xdiffi.c	FUNCTION_17
0x4001650	            0x415e	                                 pop r14	       968	xdiffi.c	FUNCTION_17
0x4001652	            0x415f	                                 pop r15	       968	xdiffi.c	FUNCTION_17
0x4001654	              0xc3	                                     ret	       968	xdiffi.c	FUNCTION_17
0x4001655	           0xf1f00	                         nop dword [rax]	       968	xdiffi.c	FUNCTION_17
0x4001658	          0x4c89f3	                            mov rbx, r14	       968	xdiffi.c	FUNCTION_17
0x400165b	       0xf1f440000	                   nop dword [rax + rax]	       968	xdiffi.c	FUNCTION_17
0x4001660	        0x4883eb01	                              sub rbx, 1	       955	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_2
0x4001664	      0x807c1aff00	             cmp byte [rdx + rbx - 1], 0	       955	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_2
0x4001669	            0x75f5	                           jne 0x4001660	       955	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_2
0x400166b	          0x4929de	                            sub r14, rbx	       955	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_2
0x400166e	    0x43807c2cff00	             cmp byte [r12 + r13 - 1], 0	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x4001674	     0xf8496000000	                            je 0x4001710	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x400167a	          0x4c89ed	                            mov rbp, r13	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x400167d	           0xf1f00	                         nop dword [rax]	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x4001680	        0x4883ed01	                              sub rbp, 1	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x4001684	    0x41807c2cff00	             cmp byte [r12 + rbp - 1], 0	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x400168a	            0x75f4	                           jne 0x4001680	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x400168c	          0x4929ed	                            sub r13, rbp	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x400168f	      0xbf30000000	                           mov edi, 0x30	       389	xdiffi.c	FUNCTION_4	IF_1	CALL_1
0x4001694	        0x48891424	                    mov qword [rsp], rdx	       389	xdiffi.c	FUNCTION_4	IF_1	CALL_1
0x4001698	      0xe800000000	                          call 0x400169d	       389	xdiffi.c	FUNCTION_4	IF_1	CALL_1
0x400169d	          0x4885c0	                           test rax, rax	       389	xdiffi.c	FUNCTION_4	IF_1	CALL_1
0x40016a0	        0x488b1424	                    mov rdx, qword [rsp]	       389	xdiffi.c	FUNCTION_4	IF_1	CALL_1
0x40016a4	            0x7438	                            je 0x40016de	       389	xdiffi.c	FUNCTION_4	IF_1	CALL_1
0x40016a6	          0x4c8938	                    mov qword [rax], r15	       392	xdiffi.c	FUNCTION_4
0x40016a9	        0x48895808	                mov qword [rax + 8], rbx	       393	xdiffi.c	FUNCTION_4
0x40016ad	          0x4989c7	                            mov r15, rax	       397	xdiffi.c	FUNCTION_4
0x40016b0	        0x48896810	             mov qword [rax + 0x10], rbp	       394	xdiffi.c	FUNCTION_4
0x40016b4	        0x4c897018	             mov qword [rax + 0x18], r14	       395	xdiffi.c	FUNCTION_4
0x40016b8	        0x4c896820	             mov qword [rax + 0x20], r13	       396	xdiffi.c	FUNCTION_4
0x40016bc	    0xc74028000000	               mov dword [rax + 0x28], 0	       397	xdiffi.c	FUNCTION_4
0x40016c3	      0xe962ffffff	                           jmp 0x400162a	       397	xdiffi.c	FUNCTION_4
0x40016c8	     0xf1f84000000	                   nop dword [rax + rax]	       397	xdiffi.c	FUNCTION_4
0x40016d0	          0x498b1f	                    mov rbx, qword [r15]	       975	xdiffi.c	FUNCTION_18	WHILE_1
0x40016d3	          0x4c89ff	                            mov rdi, r15	       976	xdiffi.c	FUNCTION_18	WHILE_1	CALL_1
0x40016d6	      0xe800000000	                          call 0x40016db	       976	xdiffi.c	FUNCTION_18	WHILE_1	CALL_1
0x40016db	          0x4989df	                            mov r15, rbx	       976	xdiffi.c	FUNCTION_18	WHILE_1	CALL_1
0x40016de	          0x4d85ff	                           test r15, r15	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x40016e1	            0x75ed	                           jne 0x40016d0	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x40016e3	        0x4883c418	                           add rsp, 0x18	       968	xdiffi.c	FUNCTION_17
0x40016e7	      0xb8ffffffff	                     mov eax, 0xffffffff	       960	xdiffi.c	FUNCTION_17	FOR_1	IF_1	IF_2
0x40016ec	              0x5b	                                 pop rbx	       968	xdiffi.c	FUNCTION_17
0x40016ed	              0x5d	                                 pop rbp	       968	xdiffi.c	FUNCTION_17
0x40016ee	            0x415c	                                 pop r12	       968	xdiffi.c	FUNCTION_17
0x40016f0	            0x415d	                                 pop r13	       968	xdiffi.c	FUNCTION_17
0x40016f2	            0x415e	                                 pop r14	       968	xdiffi.c	FUNCTION_17
0x40016f4	            0x415f	                                 pop r15	       968	xdiffi.c	FUNCTION_17
0x40016f6	              0xc3	                                     ret	       968	xdiffi.c	FUNCTION_17
0x40016f7	    0x660f1f840000	                    nop word [rax + rax]	       968	xdiffi.c	FUNCTION_17
0x4001700	          0x4c89f3	                            mov rbx, r14	       968	xdiffi.c	FUNCTION_17
0x4001703	          0x4531f6	                          xor r14d, r14d	       968	xdiffi.c	FUNCTION_17
0x4001706	      0xe96fffffff	                           jmp 0x400167a	       968	xdiffi.c	FUNCTION_17
0x400170b	       0xf1f440000	                   nop dword [rax + rax]	       968	xdiffi.c	FUNCTION_17
0x4001710	          0x4c89ed	                            mov rbp, r13	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x4001713	          0x4531ed	                          xor r13d, r13d	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
0x4001716	      0xe974ffffff	                           jmp 0x400168f	       956	xdiffi.c	FUNCTION_17	FOR_1	IF_1	FOR_3
xdl_change_compact	WHILE,5:SWITCH,0:ELSE,2:functions,0:IF,17:FOR,1:CALL,26:DO,1	343
0x4001050	            0x4157	                                push r15	       815	xdiffi.c	FUNCTION_16
0x4001052	            0x4156	                                push r14	       815	xdiffi.c	FUNCTION_16
0x4001054	          0x4989fe	                            mov r14, rdi	       815	xdiffi.c	FUNCTION_16
0x4001057	            0x4155	                                push r13	       815	xdiffi.c	FUNCTION_16
0x4001059	            0x4154	                                push r12	       815	xdiffi.c	FUNCTION_16
0x400105b	          0x4989d4	                            mov r12, rdx	       815	xdiffi.c	FUNCTION_16
0x400105e	              0x55	                                push rbp	       815	xdiffi.c	FUNCTION_16
0x400105f	              0x53	                                push rbx	       815	xdiffi.c	FUNCTION_16
0x4001060	          0x4889f5	                            mov rbp, rsi	       815	xdiffi.c	FUNCTION_16
0x4001063	        0x4883ec78	                           sub rsp, 0x78	       815	xdiffi.c	FUNCTION_16
0x4001067	        0x488b4f68	            mov rcx, qword [rdi + 0x68] 	       815	xdiffi.c	FUNCTION_16
0x400106b	    0x64488b042528	                mov rax, qword fs:[0x28]	       815	xdiffi.c	FUNCTION_16
0x4001074	      0x4889442468	             mov qword [rsp + 0x68], rax	       815	xdiffi.c	FUNCTION_16
0x4001079	            0x31c0	                            xor eax, eax	       815	xdiffi.c	FUNCTION_16
0x400107b	    0x48c744244800	               mov qword [rsp + 0x48], 0	       725	xdiffi.c	FUNCTION_10
0x4001084	    0x48c744244000	               mov qword [rsp + 0x40], 0	       725	xdiffi.c	FUNCTION_10
0x400108d	          0x803900	                       cmp byte [rcx], 0	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x4001090	     0xf8429050000	                            je 0x40015bf	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x4001096	      0xba01000000	                              mov edx, 1	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x400109b	      0x4889542448	             mov qword [rsp + 0x48], rdx	       727	xdiffi.c	FUNCTION_10	WHILE_1
0x40010a0	          0x4889d0	                            mov rax, rdx	       727	xdiffi.c	FUNCTION_10	WHILE_1
0x40010a3	        0x4883c201	                              add rdx, 1	       727	xdiffi.c	FUNCTION_10	WHILE_1
0x40010a7	      0x807c11ff00	             cmp byte [rcx + rdx - 1], 0	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x40010ac	            0x75ed	                           jne 0x400109b	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x40010ae	        0x488b4d68	            mov rcx, qword [rbp + 0x68] 	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x40010b2	          0x803900	                       cmp byte [rcx], 0	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x40010b5	     0xf84fd040000	                            je 0x40015b8	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x40010bb	      0xba01000000	                              mov edx, 1	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x40010c0	          0x4889d3	                            mov rbx, rdx	       727	xdiffi.c	FUNCTION_10	WHILE_1
0x40010c3	        0x4883c201	                              add rdx, 1	       727	xdiffi.c	FUNCTION_10	WHILE_1
0x40010c7	      0x807c11ff00	             cmp byte [rcx + rdx - 1], 0	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x40010cc	            0x75f2	                           jne 0x40010c0	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x40010ce	          0x4531ed	                          xor r13d, r13d	       725	xdiffi.c	FUNCTION_10
0x40010d1	          0x4c89f6	                            mov rsi, r14	       725	xdiffi.c	FUNCTION_10
0x40010d4	        0x4d8d7e60	                   lea r15, [r14 + 0x60]	       725	xdiffi.c	FUNCTION_10
0x40010d8	            0x31c9	                            xor ecx, ecx	       725	xdiffi.c	FUNCTION_10
0x40010da	          0x4d89ee	                            mov r14, r13	       725	xdiffi.c	FUNCTION_10
0x40010dd	          0x4989f5	                            mov r13, rsi	       725	xdiffi.c	FUNCTION_10
0x40010e0	          0x4839c8	                            cmp rax, rcx	       825	xdiffi.c	FUNCTION_16	WHILE_1	IF_1
0x40010e3	     0xf8470020000	                            je 0x4001359	       825	xdiffi.c	FUNCTION_16	WHILE_1	IF_1
0x40010e9	        0x498d7568	                   lea rsi, [r13 + 0x68]	       825	xdiffi.c	FUNCTION_16	WHILE_1	IF_1
0x40010ed	      0x4889742418	             mov qword [rsp + 0x18], rsi	       825	xdiffi.c	FUNCTION_16	WHILE_1	IF_1
0x40010f2	      0x4c896c2408	                mov qword [rsp + 8], r13	       825	xdiffi.c	FUNCTION_16	WHILE_1	IF_1
0x40010f7	          0x4989ed	                            mov r13, rbp	       825	xdiffi.c	FUNCTION_16	WHILE_1	IF_1
0x40010fa	          0x4889dd	                            mov rbp, rbx	       825	xdiffi.c	FUNCTION_16	WHILE_1	IF_1
0x40010fd	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       825	xdiffi.c	FUNCTION_16	WHILE_1	IF_1
0x4001102	          0x4829c8	                            sub rax, rcx	       833	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x4001105	      0x4889442410	             mov qword [rsp + 0x10], rax	       833	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x400110a	    0x660f1f440000	                    nop word [rax + rax]	       833	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x4001110	      0x488d542440	                   lea rdx, [rsp + 0x40]	       844	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_3
0x4001115	          0x4c89e1	                            mov rcx, r12	       844	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_3
0x4001118	          0x4889de	                            mov rsi, rbx	       844	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_3
0x400111b	          0x4c89ff	                            mov rdi, r15	       844	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_3
0x400111e	      0xe8cdf0ffff	          call sym.group_slide_up.isra.6	       844	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_3
0x4001123	            0x85c0	                           test eax, eax	       844	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_3
0x4001125	            0x7548	                           jne 0x400116f	       844	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_3
0x4001127	          0x4d85f6	                           test r14, r14	       752	xdiffi.c	FUNCTION_12	IF_1
0x400112a	            0x7514	                           jne 0x4001140	       752	xdiffi.c	FUNCTION_12	IF_1
0x400112c	      0xbf00000000	                              mov edi, 0	       846	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_5
0x4001131	      0xe8daefffff	                        call sym.xdl_bug	       846	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_5
0x4001136	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       846	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	CALL_5
0x4001140	        0x498b5568	            mov rdx, qword [r13 + 0x68] 	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001144	        0x498d6eff	                      lea rbp, [r14 - 1]	       755	xdiffi.c	FUNCTION_12
0x4001148	      0x807c2aff00	             cmp byte [rdx + rbp - 1], 0	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400114d	     0xf84cc010000	                            je 0x400131f	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001153	        0x498d46fe	                      lea rax, [r14 - 2]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001157	    0x660f1f840000	                    nop word [rax + rax]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001160	          0x4989c6	                            mov r14, rax	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001163	        0x4883e801	                              sub rax, 1	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001167	        0x803c0200	                 cmp byte [rdx + rax], 0	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400116b	            0x75f3	                           jne 0x4001160	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400116d	            0xeba1	                           jmp 0x4001110	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400116f	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       852	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x4001174	          0x4889eb	                            mov rbx, rbp	       852	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x4001177	          0x4c89ed	                            mov rbp, r13	       852	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x400117a	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	       852	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x400117f	          0x4c39f3	                            cmp rbx, r14	       852	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x4001182	    0x49c7c3ffffff	             mov r11, 0xffffffffffffffff	       852	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x4001189	      0x4889442420	             mov qword [rsp + 0x20], rax	       852	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x400118e	        0x4c0f4fd8	                          cmovg r11, rax	       852	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x4001192	    0x660f1f440000	                    nop word [rax + rax]	       852	xdiffi.c	FUNCTION_16	WHILE_1	DO_1
0x4001198	        0x493b4538	            cmp rax, qword [r13 + 0x38] 	       769	xdiffi.c	FUNCTION_13	IF_1
0x400119c	     0xf8d48010000	                           jge 0x40012ea	       769	xdiffi.c	FUNCTION_13	IF_1
0x40011a2	        0x498b5560	            mov rdx, qword [r13 + 0x60] 	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x40011a6	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x40011ab	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x40011af	        0x488b3cca	            mov rdi, qword [rdx + rcx*8]	       770	xdiffi.c	FUNCTION_13	IF_1	CALL_1
0x40011b3	        0x488b5618	            mov rdx, qword [rsi + 0x18] 	       405	xdiffi.c	FUNCTION_5
0x40011b7	        0x48395718	            cmp qword [rdi + 0x18], rdx 	       405	xdiffi.c	FUNCTION_5
0x40011bb	            0x7463	                            je 0x4001220	       405	xdiffi.c	FUNCTION_5
0x40011bd	          0x4989c0	                             mov r8, rax	       867	xdiffi.c	FUNCTION_16	WHILE_1	WHILE_3
0x40011c0	          0x4929c8	                             sub r8, rcx	       867	xdiffi.c	FUNCTION_16	WHILE_1	WHILE_3
0x40011c3	      0x4c39442410	              cmp qword [rsp + 0x10], r8	       867	xdiffi.c	FUNCTION_16	WHILE_1	WHILE_3
0x40011c8	     0xf8524ffffff	                           jne 0x40010f2	       867	xdiffi.c	FUNCTION_16	WHILE_1	WHILE_3
0x40011ce	      0x4839442420	            cmp qword [rsp + 0x20], rax 	       877	xdiffi.c	FUNCTION_16	WHILE_1	IF_7
0x40011d3	     0xf8480010000	                            je 0x4001359	       877	xdiffi.c	FUNCTION_16	WHILE_1	IF_7
0x40011d9	        0x4983fbff	             cmp r11, 0xffffffffffffffff	       879	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8
0x40011dd	     0xf8432020000	                            je 0x4001415	       879	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8
0x40011e3	          0x4939de	                            cmp r14, rbx	       885	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4
0x40011e6	     0xf8568010000	                           jne 0x4001354	       885	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4
0x40011ec	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       886	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_9	CALL_9
0x40011f1	      0x488d542440	                   lea rdx, [rsp + 0x40]	       886	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_9	CALL_9
0x40011f6	          0x4c89e1	                            mov rcx, r12	       886	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_9	CALL_9
0x40011f9	          0x4c89ff	                            mov rdi, r15	       886	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_9	CALL_9
0x40011fc	      0xe8efefffff	          call sym.group_slide_up.isra.6	       886	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_9	CALL_9
0x4001201	            0x85c0	                           test eax, eax	       886	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_9	CALL_9
0x4001203	     0xf85f5010000	                           jne 0x40013fe	       886	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	IF_9	CALL_9
0x4001209	          0x4885db	                           test rbx, rbx	       752	xdiffi.c	FUNCTION_12	IF_1
0x400120c	     0xf8515010000	                           jne 0x4001327	       752	xdiffi.c	FUNCTION_12	IF_1
0x4001212	      0xbf00000000	                              mov edi, 0	       889	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	CALL_12
0x4001217	      0xe8f4eeffff	                        call sym.xdl_bug	       889	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	CALL_12
0x400121c	         0xf1f4000	                         nop dword [rax]	       889	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	CALL_12
0x4001220	        0x488b4e10	            mov rcx, qword [rsi + 0x10] 	       406	xdiffi.c	FUNCTION_5	CALL_1
0x4001224	        0x488b5608	                mov rdx, qword [rsi + 8]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x4001228	          0x4d89e0	                             mov r8, r12	       406	xdiffi.c	FUNCTION_5	CALL_1
0x400122b	        0x488b7710	            mov rsi, qword [rdi + 0x10] 	       406	xdiffi.c	FUNCTION_5	CALL_1
0x400122f	        0x488b7f08	                mov rdi, qword [rdi + 8]	       406	xdiffi.c	FUNCTION_5	CALL_1
0x4001233	      0x4c895c2408	                mov qword [rsp + 8], r11	       406	xdiffi.c	FUNCTION_5	CALL_1
0x4001238	      0xe800000000	                          call 0x400123d	       406	xdiffi.c	FUNCTION_5	CALL_1
0x400123d	            0x85c0	                           test eax, eax	       405	xdiffi.c	FUNCTION_5
0x400123f	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	       405	xdiffi.c	FUNCTION_5
0x4001244	            0x750f	                           jne 0x4001255	       405	xdiffi.c	FUNCTION_5
0x4001246	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       405	xdiffi.c	FUNCTION_5
0x400124b	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	       405	xdiffi.c	FUNCTION_5
0x4001250	      0xe968ffffff	                           jmp 0x40011bd	       405	xdiffi.c	FUNCTION_5
0x4001255	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       771	xdiffi.c	FUNCTION_13	IF_1
0x400125a	        0x498b5568	            mov rdx, qword [r13 + 0x68] 	       771	xdiffi.c	FUNCTION_13	IF_1
0x400125e	        0x488d4801	                      lea rcx, [rax + 1]	       771	xdiffi.c	FUNCTION_13	IF_1
0x4001262	      0x48894c2440	             mov qword [rsp + 0x40], rcx	       771	xdiffi.c	FUNCTION_13	IF_1
0x4001267	        0xc6040200	                 mov byte [rdx + rax], 0	       771	xdiffi.c	FUNCTION_13	IF_1
0x400126b	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       772	xdiffi.c	FUNCTION_13	IF_1
0x4001270	        0x498b5568	            mov rdx, qword [r13 + 0x68] 	       772	xdiffi.c	FUNCTION_13	IF_1
0x4001274	        0x488d4801	                      lea rcx, [rax + 1]	       772	xdiffi.c	FUNCTION_13	IF_1
0x4001278	      0x48894c2448	             mov qword [rsp + 0x48], rcx	       772	xdiffi.c	FUNCTION_13	IF_1
0x400127d	        0xc6040201	                 mov byte [rdx + rax], 1	       772	xdiffi.c	FUNCTION_13	IF_1
0x4001281	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001286	        0x498b5568	            mov rdx, qword [r13 + 0x68] 	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x400128a	        0x803c0a00	                 cmp byte [rdx + rcx], 0	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x400128e	        0x488d4101	                      lea rax, [rcx + 1]	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001292	            0x7414	                            je 0x40012a8	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001294	         0xf1f4000	                         nop dword [rax]	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x4001298	      0x4889442448	             mov qword [rsp + 0x48], rax	       775	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x400129d	        0x4883c001	                              add rax, 1	       775	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x40012a1	      0x807c02ff00	             cmp byte [rdx + rax - 1], 0	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x40012a6	            0x75f0	                           jne 0x4001298	       774	xdiffi.c	FUNCTION_13	IF_1	WHILE_1
0x40012a8	        0x48395d38	            cmp qword [rbp + 0x38], rbx 	       736	xdiffi.c	FUNCTION_11	IF_1
0x40012ac	            0x745a	                            je 0x4001308	       736	xdiffi.c	FUNCTION_11	IF_1
0x40012ae	        0x488b5568	            mov rdx, qword [rbp + 0x68] 	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40012b2	        0x4c8d7301	                      lea r14, [rbx + 1]	       739	xdiffi.c	FUNCTION_11
0x40012b6	      0x807c1a0100	             cmp byte [rdx + rbx + 1], 0	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40012bb	            0x7455	                            je 0x4001312	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40012bd	        0x488d4302	                      lea rax, [rbx + 2]	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40012c1	     0xf1f80000000	                         nop dword [rax]	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40012c8	          0x4889c3	                            mov rbx, rax	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40012cb	        0x488d4001	                      lea rax, [rax + 1]	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40012cf	      0x807c02ff00	             cmp byte [rdx + rax - 1], 0	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40012d4	            0x75f2	                           jne 0x40012c8	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40012d6	          0x4939de	                            cmp r14, rbx	       864	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_6
0x40012d9	            0x7c1d	                            jl 0x40012f8	       864	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_6
0x40012db	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       864	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_6
0x40012e0	        0x493b4538	            cmp rax, qword [r13 + 0x38] 	       769	xdiffi.c	FUNCTION_13	IF_1
0x40012e4	     0xf8cb8feffff	                            jl 0x40011a2	       769	xdiffi.c	FUNCTION_13	IF_1
0x40012ea	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	       769	xdiffi.c	FUNCTION_13	IF_1
0x40012ef	      0xe9c9feffff	                           jmp 0x40011bd	       769	xdiffi.c	FUNCTION_13	IF_1
0x40012f4	         0xf1f4000	                         nop dword [rax]	       769	xdiffi.c	FUNCTION_13	IF_1
0x40012f8	      0x4c8b5c2448	            mov r11, qword [rsp + 0x48] 	       865	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_6
0x40012fd	          0x4c89d8	                            mov rax, r11	       865	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_6
0x4001300	      0xe993feffff	                           jmp 0x4001198	       865	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_6
0x4001305	           0xf1f00	                         nop dword [rax]	       865	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	IF_6
0x4001308	      0xbf00000000	                              mov edi, 0	       862	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	CALL_8
0x400130d	      0xe8feedffff	                        call sym.xdl_bug	       862	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	CALL_8
0x4001312	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       862	xdiffi.c	FUNCTION_16	WHILE_1	DO_1	WHILE_2	CALL_8
0x4001317	          0x4c89f3	                            mov rbx, r14	       739	xdiffi.c	FUNCTION_11
0x400131a	      0xe979feffff	                           jmp 0x4001198	       739	xdiffi.c	FUNCTION_11
0x400131f	          0x4989ee	                            mov r14, rbp	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001322	      0xe9e9fdffff	                           jmp 0x4001110	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001327	        0x488b5568	            mov rdx, qword [rbp + 0x68] 	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400132b	        0x4883eb01	                              sub rbx, 1	       755	xdiffi.c	FUNCTION_12
0x400132f	      0x807c1aff00	             cmp byte [rdx + rbx - 1], 0	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001334	     0xf84bc000000	                            je 0x40013f6	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400133a	        0x498d46fe	                      lea rax, [r14 - 2]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400133e	          0x4989c6	                            mov r14, rax	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001341	        0x4883e801	                              sub rax, 1	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001345	        0x803c0200	                 cmp byte [rdx + rax], 0	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001349	            0x75f3	                           jne 0x400133e	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400134b	          0x4939de	                            cmp r14, rbx	       885	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4
0x400134e	     0xf8498feffff	                            je 0x40011ec	       885	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4
0x4001354	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       885	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4
0x4001359	        0x49394538	            cmp qword [r13 + 0x38], rax 	       736	xdiffi.c	FUNCTION_11	IF_1
0x400135d	            0x743d	                            je 0x400139c	       736	xdiffi.c	FUNCTION_11	IF_1
0x400135f	        0x498b5568	            mov rdx, qword [r13 + 0x68] 	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001363	        0x488d4801	                      lea rcx, [rax + 1]	       739	xdiffi.c	FUNCTION_11
0x4001367	      0x48894c2440	             mov qword [rsp + 0x40], rcx	       739	xdiffi.c	FUNCTION_11
0x400136c	      0x48894c2448	             mov qword [rsp + 0x48], rcx	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001371	      0x807c020100	             cmp byte [rdx + rax + 1], 0	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001376	            0x7414	                            je 0x400138c	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001378	        0x4883c002	                              add rax, 2	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400137c	      0x4889442448	             mov qword [rsp + 0x48], rax	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001381	        0x4883c001	                              add rax, 1	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001385	      0x807c02ff00	             cmp byte [rdx + rax - 1], 0	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400138a	            0x75f0	                           jne 0x400137c	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400138c	        0x48395d38	            cmp qword [rbp + 0x38], rbx 	       736	xdiffi.c	FUNCTION_11	IF_1
0x4001390	            0x7539	                           jne 0x40013cb	       736	xdiffi.c	FUNCTION_11	IF_1
0x4001392	      0xbf00000000	                              mov edi, 0	       935	xdiffi.c	FUNCTION_16	WHILE_1	CALL_24
0x4001397	      0xe874edffff	                        call sym.xdl_bug	       935	xdiffi.c	FUNCTION_16	WHILE_1	CALL_24
0x400139c	        0x48395d38	            cmp qword [rbp + 0x38], rbx 	       736	xdiffi.c	FUNCTION_11	IF_1
0x40013a0	     0xf8508020000	                           jne 0x40015ae	       736	xdiffi.c	FUNCTION_11	IF_1
0x40013a6	            0x31c0	                            xor eax, eax	       942	xdiffi.c	FUNCTION_16
0x40013a8	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	       942	xdiffi.c	FUNCTION_16
0x40013ad	    0x644833342528	                xor rsi, qword fs:[0x28]	       942	xdiffi.c	FUNCTION_16
0x40013b6	     0xf85ed010000	                           jne 0x40015a9	       942	xdiffi.c	FUNCTION_16
0x40013bc	        0x4883c478	                           add rsp, 0x78	       942	xdiffi.c	FUNCTION_16
0x40013c0	              0x5b	                                 pop rbx	       942	xdiffi.c	FUNCTION_16
0x40013c1	              0x5d	                                 pop rbp	       942	xdiffi.c	FUNCTION_16
0x40013c2	            0x415c	                                 pop r12	       942	xdiffi.c	FUNCTION_16
0x40013c4	            0x415d	                                 pop r13	       942	xdiffi.c	FUNCTION_16
0x40013c6	            0x415e	                                 pop r14	       942	xdiffi.c	FUNCTION_16
0x40013c8	            0x415f	                                 pop r15	       942	xdiffi.c	FUNCTION_16
0x40013ca	              0xc3	                                     ret	       942	xdiffi.c	FUNCTION_16
0x40013cb	        0x488b5568	            mov rdx, qword [rbp + 0x68] 	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40013cf	        0x4c8d7301	                      lea r14, [rbx + 1]	       739	xdiffi.c	FUNCTION_11
0x40013d3	      0x807c1a0100	             cmp byte [rdx + rbx + 1], 0	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40013d8	            0x742e	                            je 0x4001408	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40013da	        0x488d4302	                      lea rax, [rbx + 2]	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40013de	          0x4889c3	                            mov rbx, rax	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40013e1	        0x4883c001	                              add rax, 1	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40013e5	      0x807c02ff00	             cmp byte [rdx + rax - 1], 0	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40013ea	            0x75f2	                           jne 0x40013de	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40013ec	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40013f1	      0xe9eafcffff	                           jmp 0x40010e0	       740	xdiffi.c	FUNCTION_11	FOR_1
0x40013f6	          0x4989de	                            mov r14, rbx	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40013f9	      0xe9e5fdffff	                           jmp 0x40011e3	       756	xdiffi.c	FUNCTION_12	FOR_1
0x40013fe	      0xbf00000000	                              mov edi, 0	       887	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	CALL_10
0x4001403	      0xe808edffff	                        call sym.xdl_bug	       887	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_1	IF_8	WHILE_4	CALL_10
0x4001408	          0x4c89f3	                            mov rbx, r14	       740	xdiffi.c	FUNCTION_11	FOR_1
0x400140b	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001410	      0xe9cbfcffff	                           jmp 0x40010e0	       740	xdiffi.c	FUNCTION_11	FOR_1
0x4001415	    0x41f7c4000080	                     test r12d, 0x800000	       891	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11
0x400141c	     0xf8437ffffff	                            je 0x4001359	       891	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11
0x4001422	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001427	          0x4839c6	                            cmp rsi, rax	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x400142a	     0xf8fe3000000	                            jg 0x4001513	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001430	      0x4c89742408	                mov qword [rsp + 8], r14	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001435	      0x48896c2410	             mov qword [rsp + 0x10], rbp	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x400143a	          0x4989de	                            mov r14, rbx	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x400143d	      0x4c89642420	             mov qword [rsp + 0x20], r12	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001442	          0x4889f3	                            mov rbx, rsi	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001445	          0x4c89dd	                            mov rbp, r11	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001448	          0x4d89c4	                             mov r12, r8	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x400144b	            0xeb46	                           jmp 0x4001493	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x400144d	           0xf1f00	                         nop dword [rax]	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001450	        0x8b742428	            mov esi, dword [rsp + 0x28] 	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001454	        0x8b542430	            mov edx, dword [rsp + 0x30] 	       685	xdiffi.c	FUNCTION_9
0x4001458	        0x8b4c2434	            mov ecx, dword [rsp + 0x34] 	       688	xdiffi.c	FUNCTION_9
0x400145c	            0x39f2	                            cmp edx, esi	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x400145e	           0xf9fc0	                                 setg al	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001461	        0x400f9cc6	                                setl sil	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001465	        0x400fb6f6	                          movzx esi, sil	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001469	           0xfb6c0	                           movzx eax, al	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x400146c	            0x29f0	                            sub eax, esi	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x400146e	            0x89ce	                            mov esi, ecx	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001470	        0x2b74242c	             sub esi, dword [rsp + 0x2c]	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001474	          0x6bc03c	                     imul eax, eax, 0x3c	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001477	             0x1f0	                            add eax, esi	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001479	            0x85c0	                           test eax, eax	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x400147b	     0xf8e18010000	                           jle 0x4001599	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001481	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001486	        0x4883c301	                              add rbx, 1	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x400148a	          0x4839d8	                            cmp rax, rbx	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x400148d	     0xf8cec000000	                            jl 0x400157f	       906	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x4001493	        0x498b7d38	            mov rdi, qword [r13 + 0x38] 	       910	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_13
0x4001497	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	       910	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_13
0x400149c	          0x4889da	                            mov rdx, rbx	       910	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_13
0x400149f	          0x4c89fe	                            mov rsi, r15	       910	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_13
0x40014a2	    0xc74424300000	               mov dword [rsp + 0x30], 0	       908	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x40014aa	    0xc74424340000	               mov dword [rsp + 0x34], 0	       908	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1
0x40014b2	      0xe899eeffff	           call sym.measure_split.isra.8	       910	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_13
0x40014b7	      0x488d742430	                   lea rsi, [rsp + 0x30]	       911	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_14
0x40014bc	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       911	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_14
0x40014c1	      0xe87aebffff	                call sym.score_add_split	       911	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_14
0x40014c6	        0x498b7d38	            mov rdi, qword [r13 + 0x38] 	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x40014ca	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x40014cf	          0x4889da	                            mov rdx, rbx	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x40014d2	          0x4c29e2	                            sub rdx, r12	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x40014d5	          0x4c89fe	                            mov rsi, r15	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x40014d8	      0xe873eeffff	           call sym.measure_split.isra.8	       912	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_15
0x40014dd	      0x488d742430	                   lea rsi, [rsp + 0x30]	       913	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_16
0x40014e2	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       913	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_16
0x40014e7	      0xe854ebffff	                call sym.score_add_split	       913	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	CALL_16
0x40014ec	        0x4883fdff	             cmp rbp, 0xffffffffffffffff	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x40014f0	     0xf855affffff	                           jne 0x4001450	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x40014f6	        0x8b442434	            mov eax, dword [rsp + 0x34] 	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x40014fa	        0x8944242c	             mov dword [rsp + 0x2c], eax	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x40014fe	        0x8b442430	            mov eax, dword [rsp + 0x30] 	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001502	        0x89442428	             mov dword [rsp + 0x28], eax	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001506	      0xe996000000	                           jmp 0x40015a1	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x400150b	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       914	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	FOR_1	IF_12
0x4001510	          0x4989de	                            mov r14, rbx	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001513	          0x4939c3	                            cmp r11, rax	       922	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5
0x4001516	     0xf8d3dfeffff	                           jge 0x4001359	       922	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5
0x400151c	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       923	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_13	CALL_18
0x4001521	      0x488d542440	                   lea rdx, [rsp + 0x40]	       923	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_13	CALL_18
0x4001526	          0x4c89e1	                            mov rcx, r12	       923	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_13	CALL_18
0x4001529	          0x4c89ff	                            mov rdi, r15	       923	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_13	CALL_18
0x400152c	      0x4c895c2408	                mov qword [rsp + 8], r11	       923	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_13	CALL_18
0x4001531	      0xe8baecffff	          call sym.group_slide_up.isra.6	       923	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_13	CALL_18
0x4001536	            0x85c0	                           test eax, eax	       923	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_13	CALL_18
0x4001538	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	       923	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_13	CALL_18
0x400153d	            0x7536	                           jne 0x4001575	       923	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	IF_13	CALL_18
0x400153f	          0x4d85f6	                           test r14, r14	       752	xdiffi.c	FUNCTION_12	IF_1
0x4001542	            0x750a	                           jne 0x400154e	       752	xdiffi.c	FUNCTION_12	IF_1
0x4001544	      0xbf00000000	                              mov edi, 0	       926	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_21
0x4001549	      0xe8c2ebffff	                        call sym.xdl_bug	       926	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_21
0x400154e	        0x488b5568	            mov rdx, qword [rbp + 0x68] 	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001552	        0x498d5eff	                      lea rbx, [r14 - 1]	       755	xdiffi.c	FUNCTION_12
0x4001556	      0x807c1aff00	             cmp byte [rdx + rbx - 1], 0	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400155b	            0x74ae	                            je 0x400150b	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400155d	        0x498d46fe	                      lea rax, [r14 - 2]	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001561	          0x4989c6	                            mov r14, rax	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001564	        0x4883e801	                              sub rax, 1	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001568	        0x803c0200	                 cmp byte [rdx + rax], 0	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400156c	            0x75f3	                           jne 0x4001561	       756	xdiffi.c	FUNCTION_12	FOR_1
0x400156e	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001573	            0xeb9e	                           jmp 0x4001513	       756	xdiffi.c	FUNCTION_12	FOR_1
0x4001575	      0xbf00000000	                              mov edi, 0	       924	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_19
0x400157a	      0xe891ebffff	                        call sym.xdl_bug	       924	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_19
0x400157f	          0x4989eb	                            mov r11, rbp	       924	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_19
0x4001582	          0x4c89f3	                            mov rbx, r14	       924	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_19
0x4001585	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	       924	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_19
0x400158a	      0x4c8b742408	                mov r14, qword [rsp + 8]	       924	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_19
0x400158f	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	       924	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_19
0x4001594	      0xe97affffff	                           jmp 0x4001513	       924	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_19
0x4001599	        0x894c242c	             mov dword [rsp + 0x2c], ecx	       924	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_19
0x400159d	        0x89542428	             mov dword [rsp + 0x28], edx	       924	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_19
0x40015a1	          0x4889dd	                            mov rbp, rbx	       924	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_19
0x40015a4	      0xe9d8feffff	                           jmp 0x4001481	       924	xdiffi.c	FUNCTION_16	WHILE_1	ELSE_2	IF_11	WHILE_5	CALL_19
0x40015a9	      0xe800000000	                          call 0x40015ae	       942	xdiffi.c	FUNCTION_16
0x40015ae	      0xbf00000000	                              mov edi, 0	       939	xdiffi.c	FUNCTION_16	CALL_26
0x40015b3	      0xe858ebffff	                        call sym.xdl_bug	       939	xdiffi.c	FUNCTION_16	CALL_26
0x40015b8	            0x31db	                            xor ebx, ebx	       725	xdiffi.c	FUNCTION_10
0x40015ba	      0xe90ffbffff	                           jmp 0x40010ce	       725	xdiffi.c	FUNCTION_10
0x40015bf	            0x31c0	                            xor eax, eax	       726	xdiffi.c	FUNCTION_10	WHILE_1
0x40015c1	      0xe9e8faffff	                           jmp 0x40010ae	       726	xdiffi.c	FUNCTION_10	WHILE_1
xdl_call_hunk_func	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,2:FOR,1:CALL,2:DO,0	50
0x4000140	            0x4154	                                push r12	       982	xdiffi.c	FUNCTION_19
0x4000142	              0x55	                                push rbp	       982	xdiffi.c	FUNCTION_19
0x4000143	          0x4989d4	                            mov r12, rdx	       982	xdiffi.c	FUNCTION_19
0x4000146	              0x53	                                push rbx	       982	xdiffi.c	FUNCTION_19
0x4000147	          0x4889cd	                            mov rbp, rcx	       982	xdiffi.c	FUNCTION_19
0x400014a	        0x4883ec10	                           sub rsp, 0x10	       982	xdiffi.c	FUNCTION_19
0x400014e	    0x64488b042528	                mov rax, qword fs:[0x28]	       982	xdiffi.c	FUNCTION_19
0x4000157	      0x4889442408	                mov qword [rsp + 8], rax	       982	xdiffi.c	FUNCTION_19
0x400015c	            0x31c0	                            xor eax, eax	       982	xdiffi.c	FUNCTION_19
0x400015e	          0x4885f6	                           test rsi, rsi	       985	xdiffi.c	FUNCTION_19	FOR_1
0x4000161	        0x48893424	                    mov qword [rsp], rsi	       985	xdiffi.c	FUNCTION_19	FOR_1
0x4000165	            0x753e	                           jne 0x40001a5	       985	xdiffi.c	FUNCTION_19	FOR_1
0x4000167	            0xeb53	                           jmp 0x40001bc	       985	xdiffi.c	FUNCTION_19	FOR_1
0x4000169	     0xf1f80000000	                         nop dword [rax]	       985	xdiffi.c	FUNCTION_19	FOR_1
0x4000170	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4000174	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4000178	        0x48034b10	             add rcx, qword [rbx + 0x10]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x400017c	        0x48037308	                add rsi, qword [rbx + 8]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4000180	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       990	xdiffi.c	FUNCTION_19	FOR_1	IF_2
0x4000184	        0x488b7808	                mov rdi, qword [rax + 8]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4000188	        0x4d8b0424	                     mov r8, qword [r12]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x400018c	          0x4829d1	                            sub rcx, rdx	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x400018f	          0x4829fe	                            sub rsi, rdi	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4000192	          0xff5528	                 call qword [rbp + 0x28]	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4000195	            0x85c0	                           test eax, eax	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4000197	            0x7847	                            js 0x40001e0	       989	xdiffi.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0x4000199	          0x488b03	                    mov rax, qword [rbx]	       985	xdiffi.c	FUNCTION_19	FOR_1
0x400019c	          0x4885c0	                           test rax, rax	       985	xdiffi.c	FUNCTION_19	FOR_1
0x400019f	        0x48890424	                    mov qword [rsp], rax	       985	xdiffi.c	FUNCTION_19	FOR_1
0x40001a3	            0x7417	                            je 0x40001bc	       985	xdiffi.c	FUNCTION_19	FOR_1
0x40001a5	          0x4889ee	                            mov rsi, rbp	       986	xdiffi.c	FUNCTION_19	FOR_1	CALL_1
0x40001a8	          0x4889e7	                            mov rdi, rsp	       986	xdiffi.c	FUNCTION_19	FOR_1	CALL_1
0x40001ab	      0xe800000000	                          call 0x40001b0	       986	xdiffi.c	FUNCTION_19	FOR_1	CALL_1
0x40001b0	          0x4889c3	                            mov rbx, rax	       986	xdiffi.c	FUNCTION_19	FOR_1	CALL_1
0x40001b3	        0x488b0424	                    mov rax, qword [rsp]	       987	xdiffi.c	FUNCTION_19	FOR_1	IF_1
0x40001b7	          0x4885c0	                           test rax, rax	       987	xdiffi.c	FUNCTION_19	FOR_1	IF_1
0x40001ba	            0x75b4	                           jne 0x4000170	       987	xdiffi.c	FUNCTION_19	FOR_1	IF_1
0x40001bc	            0x31c0	                            xor eax, eax	       994	xdiffi.c	FUNCTION_19
0x40001be	      0x488b542408	                mov rdx, qword [rsp + 8]	       995	xdiffi.c	FUNCTION_19
0x40001c3	    0x644833142528	                xor rdx, qword fs:[0x28]	       995	xdiffi.c	FUNCTION_19
0x40001cc	            0x7519	                           jne 0x40001e7	       995	xdiffi.c	FUNCTION_19
0x40001ce	        0x4883c410	                           add rsp, 0x10	       995	xdiffi.c	FUNCTION_19
0x40001d2	              0x5b	                                 pop rbx	       995	xdiffi.c	FUNCTION_19
0x40001d3	              0x5d	                                 pop rbp	       995	xdiffi.c	FUNCTION_19
0x40001d4	            0x415c	                                 pop r12	       995	xdiffi.c	FUNCTION_19
0x40001d6	              0xc3	                                     ret	       995	xdiffi.c	FUNCTION_19
0x40001d7	    0x660f1f840000	                    nop word [rax + rax]	       995	xdiffi.c	FUNCTION_19
0x40001e0	      0xb8ffffffff	                     mov eax, 0xffffffff	       992	xdiffi.c	FUNCTION_19	FOR_1	IF_2
0x40001e5	            0xebd7	                           jmp 0x40001be	       992	xdiffi.c	FUNCTION_19	FOR_1	IF_2
0x40001e7	      0xe800000000	                          call 0x40001ec	       995	xdiffi.c	FUNCTION_19
score_add_split	WHILE,0:SWITCH,0:ELSE,6:functions,0:IF,8:FOR,0:CALL,0:DO,0	70
0x4000040	        0x448b470c	              mov r8d, dword [rdi + 0xc]	       612	xdiffi.c	FUNCTION_8	IF_1
0x4000044	        0x4183f8ff	             cmp r8d, 0xffffffffffffffff	       612	xdiffi.c	FUNCTION_8	IF_1
0x4000048	     0xf8492000000	                            je 0x40000e0	       612	xdiffi.c	FUNCTION_8	IF_1
0x400004e	          0x8b4604	                mov eax, dword [rsi + 4]	       612	xdiffi.c	FUNCTION_8	IF_1
0x4000051	          0x8b4f08	                mov ecx, dword [rdi + 8]	       612	xdiffi.c	FUNCTION_8	IF_1
0x4000054	            0x8b17	                    mov edx, dword [rdi]	       615	xdiffi.c	FUNCTION_8	IF_2
0x4000056	            0x85d2	                           test edx, edx	       615	xdiffi.c	FUNCTION_8	IF_2
0x4000058	            0x7406	                            je 0x4000060	       615	xdiffi.c	FUNCTION_8	IF_2
0x400005a	          0x83c015	                           add eax, 0x15	       616	xdiffi.c	FUNCTION_8	IF_2
0x400005d	          0x894604	                mov dword [rsi + 4], eax	       616	xdiffi.c	FUNCTION_8	IF_2
0x4000060	          0x8b5704	                mov edx, dword [rdi + 4]	       622	xdiffi.c	FUNCTION_8
0x4000063	          0x83faff	             cmp edx, 0xffffffffffffffff	       622	xdiffi.c	FUNCTION_8
0x4000066	            0x7438	                            je 0x40000a0	       622	xdiffi.c	FUNCTION_8
0x4000068	        0x446bc9e2	       imul r9d, ecx, 0xffffffffffffffe2	       626	xdiffi.c	FUNCTION_8
0x400006c	             0x116	                    add dword [rsi], edx	       637	xdiffi.c	FUNCTION_8
0x400006e	          0x4401c8	                            add eax, r9d	       626	xdiffi.c	FUNCTION_8
0x4000071	          0x894604	                mov dword [rsi + 4], eax	       626	xdiffi.c	FUNCTION_8
0x4000074	        0x4183f8ff	             cmp r8d, 0xffffffffffffffff	       641	xdiffi.c	FUNCTION_8	ELSE_2	IF_5
0x4000078	            0x7448	                            je 0x40000c2	       641	xdiffi.c	FUNCTION_8	ELSE_2	IF_5
0x400007a	          0x4139d0	                            cmp r8d, edx	       643	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x400007d	            0x7c49	                            jl 0x40000c8	       643	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x400007f	            0x7441	                            je 0x40000c2	       650	xdiffi.c	FUNCTION_8	ELSE_4	IF_7
0x4000081	          0x8b7f14	            mov edi, dword [rdi + 0x14] 	       663	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x4000084	          0x83ffff	             cmp edi, 0xffffffffffffffff	       663	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x4000087	            0x7477	                            je 0x4000100	       663	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x4000089	            0x39d7	                            cmp edi, edx	       663	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x400008b	            0x7e73	                           jle 0x4000100	       663	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x400008d	          0x83f901	                              cmp ecx, 1	       669	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x4000090	            0x19d2	                            sbb edx, edx	       669	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x4000092	          0x83e207	                              and edx, 7	       669	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x4000095	        0x8d440211	            lea eax, [rdx + rax + 0x11] 	       668	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x4000099	          0x894604	                mov dword [rsi + 4], eax	       668	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x400009c	              0xc3	                                     ret	       668	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x400009d	           0xf1f00	                         nop dword [rax]	       668	xdiffi.c	FUNCTION_8	ELSE_5	IF_8
0x40000a0	          0x8b5710	            mov edx, dword [rdi + 0x10] 	       622	xdiffi.c	FUNCTION_8
0x40000a3	          0x83c201	                              add edx, 1	       622	xdiffi.c	FUNCTION_8
0x40000a6	             0x1d1	                            add ecx, edx	       623	xdiffi.c	FUNCTION_8
0x40000a8	          0x8d1452	                  lea edx, [rdx + rdx*2]	       627	xdiffi.c	FUNCTION_8
0x40000ab	        0x446bc9e2	       imul r9d, ecx, 0xffffffffffffffe2	       627	xdiffi.c	FUNCTION_8
0x40000af	          0x4401c8	                            add eax, r9d	       627	xdiffi.c	FUNCTION_8
0x40000b2	          0x8d0450	                  lea eax, [rax + rdx*2]	       627	xdiffi.c	FUNCTION_8
0x40000b5	          0x8b5714	            mov edx, dword [rdi + 0x14] 	       632	xdiffi.c	FUNCTION_8	ELSE_1
0x40000b8	             0x116	                    add dword [rsi], edx	       637	xdiffi.c	FUNCTION_8
0x40000ba	          0x894604	                mov dword [rsi + 4], eax	       627	xdiffi.c	FUNCTION_8
0x40000bd	          0x83faff	             cmp edx, 0xffffffffffffffff	       639	xdiffi.c	FUNCTION_8	IF_4
0x40000c0	            0x75b2	                           jne 0x4000074	       639	xdiffi.c	FUNCTION_8	IF_4
0x40000c2	            0xf3c3	                                     ret	       639	xdiffi.c	FUNCTION_8	IF_4
0x40000c4	         0xf1f4000	                         nop dword [rax]	       639	xdiffi.c	FUNCTION_8	IF_4
0x40000c8	          0x83f901	                              cmp ecx, 1	       648	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x40000cb	            0x19d2	                            sbb edx, edx	       648	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x40000cd	          0x83e2f2	                     and edx, 0xfffffff2	       648	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x40000d0	        0x8d44020a	              lea eax, [rdx + rax + 0xa]	       647	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x40000d4	          0x894604	                mov dword [rsi + 4], eax	       647	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x40000d7	              0xc3	                                     ret	       647	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x40000d8	     0xf1f84000000	                   nop dword [rax + rax]	       647	xdiffi.c	FUNCTION_8	ELSE_3	IF_6
0x40000e0	          0x8b4f08	                mov ecx, dword [rdi + 8]	       612	xdiffi.c	FUNCTION_8	IF_1
0x40000e3	          0x8b4604	                mov eax, dword [rsi + 4]	       613	xdiffi.c	FUNCTION_8	IF_1
0x40000e6	            0x85c9	                           test ecx, ecx	       612	xdiffi.c	FUNCTION_8	IF_1
0x40000e8	     0xf8566ffffff	                           jne 0x4000054	       612	xdiffi.c	FUNCTION_8	IF_1
0x40000ee	          0x83c001	                              add eax, 1	       613	xdiffi.c	FUNCTION_8	IF_1
0x40000f1	            0x31c9	                            xor ecx, ecx	       613	xdiffi.c	FUNCTION_8	IF_1
0x40000f3	          0x894604	                mov dword [rsi + 4], eax	       613	xdiffi.c	FUNCTION_8	IF_1
0x40000f6	      0xe959ffffff	                           jmp 0x4000054	       613	xdiffi.c	FUNCTION_8	IF_1
0x40000fb	       0xf1f440000	                   nop dword [rax + rax]	       613	xdiffi.c	FUNCTION_8	IF_1
0x4000100	          0x83f901	                              cmp ecx, 1	       676	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x4000103	            0x19d2	                            sbb edx, edx	       676	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x4000105	          0x83e206	                              and edx, 6	       676	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x4000108	        0x8d440211	            lea eax, [rdx + rax + 0x11] 	       675	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x400010c	          0x894604	                mov dword [rsi + 4], eax	       675	xdiffi.c	FUNCTION_8	ELSE_5	ELSE_6
0x400010f	              0xc3	                                     ret	       680	xdiffi.c	FUNCTION_8
xdl_recs_cmp	WHILE,0:SWITCH,0:ELSE,2:functions,0:IF,4:FOR,4:CALL,3:DO,0	585
0x4000490	            0x4157	                                push r15	       270	xdiffi.c	FUNCTION_2
0x4000492	            0x4156	                                push r14	       270	xdiffi.c	FUNCTION_2
0x4000494	          0x4d89c7	                             mov r15, r8	       270	xdiffi.c	FUNCTION_2
0x4000497	            0x4155	                                push r13	       270	xdiffi.c	FUNCTION_2
0x4000499	            0x4154	                                push r12	       270	xdiffi.c	FUNCTION_2
0x400049b	          0x4989f6	                            mov r14, rsi	       270	xdiffi.c	FUNCTION_2
0x400049e	              0x55	                                push rbp	       270	xdiffi.c	FUNCTION_2
0x400049f	              0x53	                                push rbx	       270	xdiffi.c	FUNCTION_2
0x40004a0	          0x4889d3	                            mov rbx, rdx	       270	xdiffi.c	FUNCTION_2
0x40004a3	          0x4d89cb	                             mov r11, r9	       270	xdiffi.c	FUNCTION_2
0x40004a6	    0x4881ecb80000	                           sub rsp, 0xb8	       270	xdiffi.c	FUNCTION_2
0x40004ad	          0x4839de	                            cmp rsi, rbx	       276	xdiffi.c	FUNCTION_2	FOR_1
0x40004b0	        0x488b4708	                mov rax, qword [rdi + 8]	       271	xdiffi.c	FUNCTION_2
0x40004b4	      0x48897c2440	             mov qword [rsp + 0x40], rdi	       270	xdiffi.c	FUNCTION_2
0x40004b9	      0x48894c2448	             mov qword [rsp + 0x48], rcx	       270	xdiffi.c	FUNCTION_2
0x40004be	    0x4c8bac240801	           mov r13, qword [rsp + 0x108] 	       270	xdiffi.c	FUNCTION_2
0x40004c6	        0x488b5108	                mov rdx, qword [rcx + 8]	       271	xdiffi.c	FUNCTION_2
0x40004ca	     0xf8d04070000	                           jge 0x4000bd4	       276	xdiffi.c	FUNCTION_2	FOR_1
0x40004d0	          0x4d39c8	                              cmp r8, r9	       276	xdiffi.c	FUNCTION_2	FOR_1
0x40004d3	            0x7c25	                            jl 0x40004fa	       276	xdiffi.c	FUNCTION_2	FOR_1
0x40004d5	      0xe9fa060000	                           jmp 0x4000bd4	       276	xdiffi.c	FUNCTION_2	FOR_1
0x40004da	    0x660f1f440000	                    nop word [rax + rax]	       276	xdiffi.c	FUNCTION_2	FOR_1
0x40004e0	        0x4983c601	                              add r14, 1	       276	xdiffi.c	FUNCTION_2	FOR_1
0x40004e4	        0x4983c701	                              add r15, 1	       276	xdiffi.c	FUNCTION_2	FOR_1
0x40004e8	          0x4c39f3	                            cmp rbx, r14	       276	xdiffi.c	FUNCTION_2	FOR_1
0x40004eb	     0xf8ee3060000	                           jle 0x4000bd4	       276	xdiffi.c	FUNCTION_2	FOR_1
0x40004f1	          0x4d39fb	                            cmp r11, r15	       276	xdiffi.c	FUNCTION_2	FOR_1
0x40004f4	     0xf8eda060000	                           jle 0x4000bd4	       276	xdiffi.c	FUNCTION_2	FOR_1
0x40004fa	        0x4a8b34fa	            mov rsi, qword [rdx + r15*8]	       276	xdiffi.c	FUNCTION_2	FOR_1
0x40004fe	        0x4a3934f0	           cmp qword [rax + r14*8], rsi 	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000502	            0x74dc	                            je 0x40004e0	       276	xdiffi.c	FUNCTION_2	FOR_1
0x4000504	      0x488b4cd8f8	        mov rcx, qword [rax + rbx*8 - 8]	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000509	      0x4a394cdaf8	       cmp qword [rdx + r11*8 - 8], rcx 	       277	xdiffi.c	FUNCTION_2	FOR_2
0x400050e	     0xf8501070000	                           jne 0x4000c15	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000514	         0xf1f4000	                         nop dword [rax]	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000518	        0x4883eb01	                              sub rbx, 1	       277	xdiffi.c	FUNCTION_2	FOR_2
0x400051c	        0x4983eb01	                              sub r11, 1	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000520	          0x4c39f3	                            cmp rbx, r14	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000523	     0xf8eab060000	                           jle 0x4000bd4	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000529	          0x4d39fb	                            cmp r11, r15	       277	xdiffi.c	FUNCTION_2	FOR_2
0x400052c	     0xf8ea2060000	                           jle 0x4000bd4	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000532	      0x4a8b7cdaf8	        mov rdi, qword [rdx + r11*8 - 8]	       277	xdiffi.c	FUNCTION_2	FOR_2
0x4000537	      0x48397cd8f8	       cmp qword [rax + rbx*8 - 8], rdi 	       277	xdiffi.c	FUNCTION_2	FOR_2
0x400053c	            0x74da	                            je 0x4000518	       277	xdiffi.c	FUNCTION_2	FOR_2
0x400053e	          0x4c89f1	                            mov rcx, r14	        66	xdiffi.c	FUNCTION_1
0x4000541	          0x4889df	                            mov rdi, rbx	        66	xdiffi.c	FUNCTION_1
0x4000544	    0x4c8b8424f000	              mov r8, qword [rsp + 0xf0]	        76	xdiffi.c	FUNCTION_1
0x400054c	          0x4c29d9	                            sub rcx, r11	        66	xdiffi.c	FUNCTION_1
0x400054f	          0x4c29ff	                            sub rdi, r15	        66	xdiffi.c	FUNCTION_1
0x4000552	    0x48c744246800	               mov qword [rsp + 0x68], 0	       297	xdiffi.c	FUNCTION_2	ELSE_2
0x400055b	      0x48894c2430	             mov qword [rsp + 0x30], rcx	        66	xdiffi.c	FUNCTION_1
0x4000560	      0x48897c2438	             mov qword [rsp + 0x38], rdi	        66	xdiffi.c	FUNCTION_1
0x4000565	          0x4889d9	                            mov rcx, rbx	        67	xdiffi.c	FUNCTION_1
0x4000568	          0x4c89f7	                            mov rdi, r14	        67	xdiffi.c	FUNCTION_1
0x400056b	          0x4c29d9	                            sub rcx, r11	        67	xdiffi.c	FUNCTION_1
0x400056e	    0x48c744247000	               mov qword [rsp + 0x70], 0	       297	xdiffi.c	FUNCTION_2	ELSE_2
0x4000577	          0x4c29ff	                            sub rdi, r15	        67	xdiffi.c	FUNCTION_1
0x400057a	          0x4889ce	                            mov rsi, rcx	        67	xdiffi.c	FUNCTION_1
0x400057d	    0x48898c248800	             mov qword [rsp + 0x88], rcx	        67	xdiffi.c	FUNCTION_1
0x4000585	          0x4889f9	                            mov rcx, rdi	        68	xdiffi.c	FUNCTION_1
0x4000588	      0x48897c2418	             mov qword [rsp + 0x18], rdi	        67	xdiffi.c	FUNCTION_1
0x400058d	        0x4d8934f8	             mov qword [r8 + rdi*8], r14	        76	xdiffi.c	FUNCTION_1
0x4000591	          0x4829f1	                            sub rcx, rsi	        68	xdiffi.c	FUNCTION_1
0x4000594	    0x4c8b8424f800	              mov r8, qword [rsp + 0xf8]	        77	xdiffi.c	FUNCTION_1
0x400059c	    0x4889bc248000	             mov qword [rsp + 0x80], rdi	        67	xdiffi.c	FUNCTION_1
0x40005a4	          0x83e101	                              and ecx, 1	        68	xdiffi.c	FUNCTION_1
0x40005a7	      0x4889742428	             mov qword [rsp + 0x28], rsi	        67	xdiffi.c	FUNCTION_1
0x40005ac	      0x4889742408	                mov qword [rsp + 8], rsi	        67	xdiffi.c	FUNCTION_1
0x40005b1	        0x884c247f	               mov byte [rsp + 0x7f], cl	        67	xdiffi.c	FUNCTION_1
0x40005b5	        0x4883f101	                              xor rcx, 1	        67	xdiffi.c	FUNCTION_1
0x40005b9	      0x48897c2420	             mov qword [rsp + 0x20], rdi	        67	xdiffi.c	FUNCTION_1
0x40005be	          0x83e101	                              and ecx, 1	        67	xdiffi.c	FUNCTION_1
0x40005c1	        0x49891cf0	             mov qword [r8 + rsi*8], rbx	        77	xdiffi.c	FUNCTION_1
0x40005c5	    0x48c744246001	               mov qword [rsp + 0x60], 1	        79	xdiffi.c	FUNCTION_1	FOR_1
0x40005ce	        0x884c247e	               mov byte [rsp + 0x7e], cl	        79	xdiffi.c	FUNCTION_1	FOR_1
0x40005d2	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	        89	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x40005d7	      0x48394c2430	            cmp qword [rsp + 0x30], rcx 	        89	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x40005dc	     0xf8dd1050000	                           jge 0x4000bb3	        89	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x40005e2	        0x4883e901	                              sub rcx, 1	        90	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x40005e6	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	        93	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x40005eb	      0x4839742438	            cmp qword [rsp + 0x38], rsi 	        93	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x40005f0	    0x488bbc24f000	            mov rdi, qword [rsp + 0xf0] 	        90	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x40005f8	      0x48894c2418	             mov qword [rsp + 0x18], rcx	        90	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x40005fd	    0x48c744cff8ff	mov qword [rdi + rcx*8 - 8], 0xffffffffffffffff	        90	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x4000606	     0xf8ebd050000	                           jle 0x4000bc9	        93	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x400060c	    0x488b8c24f000	            mov rcx, qword [rsp + 0xf0] 	        94	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x4000614	        0x4883c601	                              add rsi, 1	        94	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x4000618	      0x4889742420	             mov qword [rsp + 0x20], rsi	        94	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x400061d	    0x48c744f108ff	mov qword [rcx + rsi*8 + 8], 0xffffffffffffffff	        94	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x4000626	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x400062b	      0x48397c2418	            cmp qword [rsp + 0x18], rdi 	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000630	     0xf8f13070000	                            jg 0x4000d49	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000636	    0x488bb424f000	            mov rsi, qword [rsp + 0xf0] 	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x400063e	      0x4c897c2458	             mov qword [rsp + 0x58], r15	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000643	          0x4989f9	                             mov r9, rdi	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000646	    0x440fb67c247f	          movzx r15d, byte [rsp + 0x7f] 	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x400064c	      0x4c89742450	             mov qword [rsp + 0x50], r14	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000651	          0x4531c0	                            xor r8d, r8d	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000654	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000659	      0x4c8d54fef8	              lea r10, [rsi + rdi*8 - 8]	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x400065e	            0x6690	                                     nop	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000660	          0x498b0a	                    mov rcx, qword [r10]	        99	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x4000663	        0x498b7a10	            mov rdi, qword [r10 + 0x10] 	        99	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x4000667	        0x488d7101	                      lea rsi, [rcx + 1]	       100	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x400066b	          0x4839f9	                            cmp rcx, rdi	       100	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x400066e	        0x480f4dfe	                         cmovge rdi, rsi	       100	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_3
0x4000672	          0x4889fd	                            mov rbp, rdi	       104	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000675	          0x4c29cd	                             sub rbp, r9	       104	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000678	          0x4839df	                            cmp rdi, rbx	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x400067b	     0xf8de4050000	                           jge 0x4000c65	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000681	          0x4c39dd	                            cmp rbp, r11	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000684	     0xf8ddb050000	                           jge 0x4000c65	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x400068a	        0x488b34f8	            mov rsi, qword [rax + rdi*8]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x400068e	        0x483934ea	           cmp qword [rdx + rbp*8], rsi 	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000692	     0xf85cd050000	                           jne 0x4000c65	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000698	        0x488d4f01	                      lea rcx, [rdi + 1]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x400069c	        0x488d7501	                      lea rsi, [rbp + 1]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40006a0	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40006a5	           0xf1f00	                         nop dword [rax]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40006a8	          0x4839d9	                            cmp rcx, rbx	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40006ab	          0x4989cc	                            mov r12, rcx	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40006ae	          0x4889f5	                            mov rbp, rsi	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40006b1	     0xf8d91050000	                           jge 0x4000c48	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40006b7	          0x4c39de	                            cmp rsi, r11	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40006ba	     0xf8d88050000	                           jge 0x4000c48	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40006c0	        0x488b3cea	            mov rdi, qword [rdx + rbp*8]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40006c4	        0x4a393ce0	           cmp qword [rax + r12*8], rdi 	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40006c8	        0x488d4901	                      lea rcx, [rcx + 1]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40006cc	        0x488d7601	                      lea rsi, [rsi + 1]	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40006d0	            0x74d6	                            je 0x40006a8	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40006d2	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40006d7	          0x4c89e1	                            mov rcx, r12	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40006da	          0x4829f9	                            sub rcx, rdi	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x40006dd	        0x49394d08	                cmp qword [r13 + 8], rcx	       107	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_4
0x40006e1	      0xbe01000000	                              mov esi, 1	       107	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_4
0x40006e6	        0x4d896208	                mov qword [r10 + 8], r12	       108	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x40006ea	        0x440f4cc6	                          cmovl r8d, esi	       107	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_4
0x40006ee	          0x4d39ce	                             cmp r14, r9	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x40006f1	        0x400f9dc6	                               setge sil	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x40006f5	      0x4c394c2408	                 cmp qword [rsp + 8], r9	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x40006fa	           0xf9ec1	                                setle cl	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x40006fd	          0x4084ce	                            test sil, cl	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000700	            0x7417	                            je 0x4000719	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000702	          0x4584ff	                         test r15b, r15b	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000705	            0x7412	                            je 0x4000719	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000707	    0x488b8c24f800	            mov rcx, qword [rsp + 0xf8] 	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x400070f	        0x4e3924c9	            cmp qword [rcx + r9*8], r12 	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000713	     0xf8e76050000	                           jle 0x4000c8f	       109	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000719	        0x4983e902	                               sub r9, 2	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x400071d	        0x4983ea10	                           sub r10, 0x10	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000721	      0x4c3b4c2418	              cmp r9, qword [rsp + 0x18]	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000726	     0xf8d34ffffff	                           jge 0x4000660	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x400072c	      0x4c8b742450	            mov r14, qword [rsp + 0x50] 	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000731	      0x4c8b7c2458	            mov r15, qword [rsp + 0x58] 	        98	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2
0x4000736	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       124	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x400073b	      0x48397c2430	            cmp qword [rsp + 0x30], rdi 	       124	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x4000740	     0xf8d3e050000	                           jge 0x4000c84	       124	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x4000746	    0x488b8c24f800	            mov rcx, qword [rsp + 0xf8] 	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x400074e	        0x4883ef01	                              sub rdi, 1	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x4000752	    0x48beffffffff	         movabs rsi, 0x7fffffffffffffff 	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x400075c	      0x48897c2408	                mov qword [rsp + 8], rdi	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x4000761	      0x488974f9f8	        mov qword [rcx + rdi*8 - 8], rsi	       125	xdiffi.c	FUNCTION_1	FOR_1	IF_6
0x4000766	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       128	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x400076b	      0x48394c2438	            cmp qword [rsp + 0x38], rcx 	       128	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x4000770	     0xf8e03050000	                           jle 0x4000c79	       128	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x4000776	    0x488bbc24f800	            mov rdi, qword [rsp + 0xf8] 	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x400077e	        0x4883c101	                              add rcx, 1	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x4000782	    0x48beffffffff	         movabs rsi, 0x7fffffffffffffff 	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x400078c	      0x48894c2428	             mov qword [rsp + 0x28], rcx	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x4000791	      0x488974cf08	        mov qword [rdi + rcx*8 + 8], rsi	       129	xdiffi.c	FUNCTION_1	FOR_1	IF_7
0x4000796	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x400079b	      0x4839742408	                cmp qword [rsp + 8], rsi	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40007a0	     0xf8f07010000	                            jg 0x40008ad	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40007a6	    0x488bbc24f800	            mov rdi, qword [rsp + 0xf8] 	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40007ae	      0x48895c2450	             mov qword [rsp + 0x50], rbx	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40007b3	          0x4989f1	                             mov r9, rsi	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40007b6	      0x4c895c2458	             mov qword [rsp + 0x58], r11	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40007bb	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40007c0	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40007c5	      0x4c8d54f7f8	              lea r10, [rdi + rsi*8 - 8]	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40007ca	    0x660f1f440000	                    nop word [rax + rax]	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40007d0	        0x498b4a10	            mov rcx, qword [r10 + 0x10] 	       134	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x40007d4	          0x498b3a	                    mov rdi, qword [r10]	       134	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_8
0x40007d7	        0x488d71ff	                      lea rsi, [rcx - 1]	       137	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	ELSE_6
0x40007db	          0x4839cf	                            cmp rdi, rcx	       137	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	ELSE_6
0x40007de	        0x480f4dfe	                         cmovge rdi, rsi	       137	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	ELSE_6
0x40007e2	          0x4889fd	                            mov rbp, rdi	       139	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40007e5	          0x4c29cd	                             sub rbp, r9	       139	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40007e8	          0x4c39f7	                            cmp rdi, r14	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007eb	     0xf8e7e040000	                           jle 0x4000c6f	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007f1	          0x4c39fd	                            cmp rbp, r15	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007f4	     0xf8e75040000	                           jle 0x4000c6f	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007fa	      0x488b74f8f8	        mov rsi, qword [rax + rdi*8 - 8]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x40007ff	      0x483974eaf8	       cmp qword [rdx + rbp*8 - 8], rsi 	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000804	     0xf8565040000	                           jne 0x4000c6f	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x400080a	        0x488d4fff	                      lea rcx, [rdi - 1]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x400080e	        0x488d75ff	                      lea rsi, [rbp - 1]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000812	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000817	    0x660f1f840000	                    nop word [rax + rax]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000820	          0x4c39f1	                            cmp rcx, r14	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000823	          0x4989cc	                            mov r12, rcx	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000826	          0x4889f5	                            mov rbp, rsi	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000829	     0xf8e29040000	                           jle 0x4000c58	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x400082f	          0x4c39fe	                            cmp rsi, r15	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000832	     0xf8e20040000	                           jle 0x4000c58	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000838	      0x488b7ceaf8	        mov rdi, qword [rdx + rbp*8 - 8]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x400083d	      0x4a397ce0f8	       cmp qword [rax + r12*8 - 8], rdi 	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000842	        0x488d49ff	                      lea rcx, [rcx - 1]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000846	        0x488d76ff	                      lea rsi, [rsi - 1]	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x400084a	            0x74d4	                            je 0x4000820	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x400084c	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000851	          0x4c29e7	                            sub rdi, r12	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000854	        0x49397d08	                cmp qword [r13 + 8], rdi	       142	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_9
0x4000858	      0xbe01000000	                              mov esi, 1	       142	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_9
0x400085d	        0x4d896208	                mov qword [r10 + 8], r12	       143	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000861	        0x440f4cc6	                          cmovl r8d, esi	       142	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_9
0x4000865	          0x4c39cb	                             cmp rbx, r9	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000868	        0x400f9dc6	                               setge sil	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x400086c	          0x4d39cb	                             cmp r11, r9	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x400086f	           0xf9ec1	                                setle cl	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000872	          0x4084ce	                            test sil, cl	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000875	            0x7419	                            je 0x4000890	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000877	      0x807c247e00	                cmp byte [rsp + 0x7e], 0	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x400087c	            0x7412	                            je 0x4000890	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x400087e	    0x488bb424f000	            mov rsi, qword [rsp + 0xf0] 	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000886	        0x4e3924ce	            cmp qword [rsi + r9*8], r12 	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x400088a	     0xf8d9f040000	                           jge 0x4000d2f	       144	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000890	        0x4983e902	                               sub r9, 2	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000894	        0x4983ea10	                           sub r10, 0x10	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x4000898	      0x4c3b4c2408	                 cmp r9, qword [rsp + 8]	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x400089d	     0xf8d2dffffff	                           jge 0x40007d0	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40008a3	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40008a8	      0x4c8b5c2458	            mov r11, qword [rsp + 0x58] 	       133	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4
0x40008ad	    0x8b8c24000100	           mov ecx, dword [rsp + 0x100] 	       152	xdiffi.c	FUNCTION_1	FOR_1	IF_11
0x40008b4	            0x85c9	                           test ecx, ecx	       152	xdiffi.c	FUNCTION_1	FOR_1	IF_11
0x40008b6	     0xf85e1020000	                           jne 0x4000b9d	       152	xdiffi.c	FUNCTION_1	FOR_1	IF_11
0x40008bc	          0x4585c0	                           test r8d, r8d	       165	xdiffi.c	FUNCTION_1	FOR_1	IF_12
0x40008bf	     0xf84c9020000	                            je 0x4000b8e	       165	xdiffi.c	FUNCTION_1	FOR_1	IF_12
0x40008c5	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       165	xdiffi.c	FUNCTION_1	FOR_1	IF_12
0x40008ca	        0x49397d10	            cmp qword [r13 + 0x10], rdi 	       165	xdiffi.c	FUNCTION_1	FOR_1	IF_12
0x40008ce	     0xf8dba020000	                           jge 0x4000b8e	       165	xdiffi.c	FUNCTION_1	FOR_1	IF_12
0x40008d4	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008d9	      0x48394c2418	            cmp qword [rsp + 0x18], rcx 	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008de	     0xf8f61010000	                            jg 0x4000a45	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008e4	    0x488d34bd0000	                        lea rsi, [rdi*4]	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008ec	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008f4	      0x4c895c2458	             mov qword [rsp + 0x58], r11	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008f9	          0x4989cc	                            mov r12, rcx	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008fc	            0x31ed	                            xor ebp, ebp	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x40008fe	      0x48895c2450	             mov qword [rsp + 0x50], rbx	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000903	      0x4889742410	             mov qword [rsp + 0x10], rsi	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000908	          0x4989fa	                            mov r10, rdi	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400090b	          0x4989fb	                            mov r11, rdi	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400090e	          0x4929ca	                            sub r10, rcx	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000911	    0x488b9c24f000	            mov rbx, qword [rsp + 0xf0] 	       168	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000919	          0x4d89e0	                             mov r8, r12	       168	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400091c	          0x4d29d8	                             sub r8, r11	       168	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400091f	          0x4d39e3	                            cmp r11, r12	       168	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000922	        0x4d0f4dc2	                          cmovge r8, r10	       168	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000926	        0x4a8b34e3	            mov rsi, qword [rbx + r12*8]	       168	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400092a	          0x4889f7	                            mov rdi, rsi	       169	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400092d	          0x4989f1	                             mov r9, rsi	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000930	          0x4c29e7	                            sub rdi, r12	       169	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000933	          0x4d29f1	                             sub r9, r14	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000936	          0x4889f9	                            mov rcx, rdi	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000939	          0x4c29f9	                            sub rcx, r15	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400093c	          0x4c01c9	                             add rcx, r9	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x400093f	          0x4c29c1	                             sub rcx, r8	       170	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000942	          0x4839e9	                            cmp rcx, rbp	       172	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000945	     0xf8ed4000000	                           jle 0x4000a1f	       172	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x400094b	      0x48394c2410	            cmp qword [rsp + 0x10], rcx 	       172	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000950	     0xf8dc9000000	                           jge 0x4000a1f	       172	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000956	        0x498b5d08	                mov rbx, qword [r13 + 8]	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x400095a	        0x4e8d0433	                     lea r8, [rbx + r14]	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x400095e	          0x4c39c6	                             cmp rsi, r8	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000961	     0xf8cb8000000	                            jl 0x4000a1f	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000967	      0x483b742450	            cmp rsi, qword [rsp + 0x50] 	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x400096c	     0xf8dad000000	                           jge 0x4000a1f	       173	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000972	        0x4e8d043b	                     lea r8, [rbx + r15]	       174	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000976	          0x4c39c7	                             cmp rdi, r8	       174	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000979	     0xf8ca0000000	                            jl 0x4000a1f	       174	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x400097f	      0x483b7c2458	            cmp rdi, qword [rsp + 0x58] 	       174	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x4000984	     0xf8d95000000	                           jge 0x4000a1f	       174	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13
0x400098a	        0x4c8d46ff	                       lea r8, [rsi - 1]	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x400098e	    0x4e8d0cc50000	                          lea r9, [r8*8]	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x4000996	        0x4e8b04c0	              mov r8, qword [rax + r8*8]	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x400099a	      0x4c3944faf8	        cmp qword [rdx + rdi*8 - 8], r8 	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x400099f	            0x757e	                           jne 0x4000a1f	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40009a1	        0x4883fb01	                              cmp rbx, 1	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009a5	            0x746b	                            je 0x4000a12	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009a7	      0x4e8d440808	                  lea r8, [rax + r9 + 8]	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009ac	    0x4889b424a000	             mov qword [rsp + 0xa0], rsi	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009b4	          0x4531c9	                            xor r9d, r9d	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009b7	    0x48898c24a800	             mov qword [rsp + 0xa8], rcx	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009bf	    0x4c8984249000	              mov qword [rsp + 0x90], r8	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009c7	        0x4c8d04fa	                   lea r8, [rdx + rdi*8]	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009cb	    0x4c8984249800	              mov qword [rsp + 0x98], r8	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009d3	    0x41b801000000	                              mov r8d, 1	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x40009d9	    0x488b8c249000	            mov rcx, qword [rsp + 0x90] 	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40009e1	    0x488bb4249800	            mov rsi, qword [rsp + 0x98] 	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40009e9	        0x4983c001	                               add r8, 1	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40009ed	      0x4a8b740ef0	        mov rsi, qword [rsi + r9 - 0x10]	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40009f2	      0x4a397409f0	       cmp qword [rcx + r9 - 0x10], rsi 	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40009f7	            0x7526	                           jne 0x4000a1f	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40009f9	        0x4983e908	                               sub r9, 8	       175	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7
0x40009fd	          0x4c39c3	                             cmp rbx, r8	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a00	            0x75d7	                           jne 0x40009d9	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a02	    0x488bb424a000	            mov rsi, qword [rsp + 0xa0] 	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a0a	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a12	      0x48897c2468	             mov qword [rsp + 0x68], rdi	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a17	      0x4889742470	             mov qword [rsp + 0x70], rsi	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a1c	          0x4889cd	                            mov rbp, rcx	       176	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6	IF_13	FOR_7	IF_14
0x4000a1f	        0x4983ec02	                              sub r12, 2	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000a23	        0x4983c202	                              add r10, 2	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000a27	      0x4c39642418	            cmp qword [rsp + 0x18], r12 	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000a2c	     0xf8edffeffff	                           jle 0x4000911	       166	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_6
0x4000a32	          0x4885ed	                           test rbp, rbp	       184	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000a35	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	       184	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000a3a	      0x4c8b5c2458	            mov r11, qword [rsp + 0x58] 	       184	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000a3f	     0xf8545030000	                           jne 0x4000d8a	       184	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000a45	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a4a	      0x4839742408	                cmp qword [rsp + 8], rsi	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a4f	     0xf8f39010000	                            jg 0x4000b8e	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a55	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a5d	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a62	          0x4989f4	                            mov r12, rsi	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a65	      0x4c89742450	             mov qword [rsp + 0x50], r14	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a6a	          0x4531d2	                          xor r10d, r10d	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a6d	        0x48c1e102	                              shl rcx, 2	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a71	          0x4889fd	                            mov rbp, rdi	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a74	          0x4989fe	                            mov r14, rdi	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a77	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a7c	          0x4829f5	                            sub rbp, rsi	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a7f	    0x488bb424f800	            mov rsi, qword [rsp + 0xf8] 	       192	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a87	          0x4d89e0	                             mov r8, r12	       192	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a8a	          0x4989d9	                             mov r9, rbx	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a8d	          0x4d29f0	                             sub r8, r14	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a90	          0x4d39e6	                            cmp r14, r12	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a93	          0x4c89d9	                            mov rcx, r11	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a96	        0x4c0f4dc5	                          cmovge r8, rbp	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a9a	        0x4a8b34e6	            mov rsi, qword [rsi + r12*8]	       192	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000a9e	          0x4889f7	                            mov rdi, rsi	       193	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000aa1	          0x4929f1	                             sub r9, rsi	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000aa4	          0x4c29e7	                            sub rdi, r12	       193	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000aa7	          0x4829f9	                            sub rcx, rdi	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000aaa	          0x4c01c9	                             add rcx, r9	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000aad	          0x4c29c1	                             sub rcx, r8	       194	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000ab0	      0x48394c2410	            cmp qword [rsp + 0x10], rcx 	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000ab5	     0xf8db2000000	                           jge 0x4000b6d	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000abb	          0x4c39d1	                            cmp rcx, r10	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000abe	     0xf8ea9000000	                           jle 0x4000b6d	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000ac4	      0x483b742450	            cmp rsi, qword [rsp + 0x50] 	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000ac9	     0xf8e9e000000	                           jle 0x4000b6d	       196	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000acf	        0x4d8b4508	                 mov r8, qword [r13 + 8]	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000ad3	          0x4989d9	                             mov r9, rbx	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000ad6	          0x4d29c1	                              sub r9, r8	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000ad9	          0x4c39ce	                             cmp rsi, r9	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000adc	     0xf8f8b000000	                            jg 0x4000b6d	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000ae2	          0x4c39ff	                            cmp rdi, r15	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000ae5	     0xf8e82000000	                           jle 0x4000b6d	       197	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000aeb	          0x4d89d9	                             mov r9, r11	       198	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000aee	      0x4c89442458	              mov qword [rsp + 0x58], r8	       198	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000af3	          0x4d29c1	                              sub r9, r8	       198	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000af6	          0x4c39cf	                             cmp rdi, r9	       198	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000af9	            0x7f72	                            jg 0x4000b6d	       198	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16
0x4000afb	        0x4c8d0cf0	                   lea r9, [rax + rsi*8]	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000aff	        0x4c8d04fa	                   lea r8, [rdx + rdi*8]	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b03	    0x4c8984249800	              mov qword [rsp + 0x98], r8	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b0b	          0x4d8b00	                      mov r8, qword [r8]	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b0e	          0x4d3901	                      cmp qword [r9], r8	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b11	    0x4c898c249000	              mov qword [rsp + 0x90], r9	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b19	            0x7552	                           jne 0x4000b6d	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b1b	      0x4c8b442458	              mov r8, qword [rsp + 0x58]	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b20	        0x4983e801	                               sub r8, 1	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b24	      0x4c89442458	              mov qword [rsp + 0x58], r8	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b29	     0xf8432020000	                            je 0x4000d61	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b2f	          0x4531c0	                            xor r8d, r8d	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b32	    0x4889b424a000	             mov qword [rsp + 0xa0], rsi	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b3a	    0x48898c24a800	             mov qword [rsp + 0xa8], rcx	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b42	    0x4c8b8c249800	              mov r9, qword [rsp + 0x98]	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b4a	            0xeb0b	                           jmp 0x4000b57	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b4c	      0x4c3b442458	              cmp r8, qword [rsp + 0x58]	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b51	     0xf84fa010000	                            je 0x4000d51	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000b57	    0x488b8c249000	            mov rcx, qword [rsp + 0x90] 	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b5f	        0x4983c001	                               add r8, 1	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b63	        0x4b8b34c1	              mov rsi, qword [r9 + r8*8]	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b67	        0x4a3934c1	            cmp qword [rcx + r8*8], rsi 	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b6b	            0x74df	                            je 0x4000b4c	       199	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9
0x4000b6d	        0x4983ec02	                              sub r12, 2	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000b71	        0x4883c502	                              add rbp, 2	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000b75	      0x4c39642408	                cmp qword [rsp + 8], r12	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000b7a	     0xf8efffeffff	                           jle 0x4000a7f	       190	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8
0x4000b80	          0x4d85d2	                           test r10, r10	       208	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x4000b83	      0x4c8b742450	            mov r14, qword [rsp + 0x50] 	       208	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x4000b88	     0xf85e5010000	                           jne 0x4000d73	       208	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x4000b8e	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	       219	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x4000b93	        0x493b7500	                    cmp rsi, qword [r13]	       219	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x4000b97	     0xf8d04020000	                           jge 0x4000da1	       219	xdiffi.c	FUNCTION_1	FOR_1	IF_19
0x4000b9d	    0x488344246001	               add qword [rsp + 0x60], 1	        79	xdiffi.c	FUNCTION_1	FOR_1
0x4000ba3	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	        89	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x4000ba8	      0x48394c2430	            cmp qword [rsp + 0x30], rcx 	        89	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x4000bad	     0xf8c2ffaffff	                            jl 0x40005e2	        89	xdiffi.c	FUNCTION_1	FOR_1	IF_1
0x4000bb3	    0x488344241801	               add qword [rsp + 0x18], 1	        92	xdiffi.c	FUNCTION_1	FOR_1	ELSE_1
0x4000bb9	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	        93	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x4000bbe	      0x4839742438	            cmp qword [rsp + 0x38], rsi 	        93	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x4000bc3	     0xf8f43faffff	                            jg 0x400060c	        93	xdiffi.c	FUNCTION_1	FOR_1	IF_2
0x4000bc9	    0x48836c242001	               sub qword [rsp + 0x20], 1	        96	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2
0x4000bcf	      0xe952faffff	                           jmp 0x4000626	        96	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2
0x4000bd4	          0x4c39f3	                            cmp rbx, r14	       283	xdiffi.c	FUNCTION_2	IF_1
0x4000bd7	            0x753c	                           jne 0x4000c15	       283	xdiffi.c	FUNCTION_2	IF_1
0x4000bd9	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       284	xdiffi.c	FUNCTION_2	IF_1
0x4000bde	          0x4d39fb	                            cmp r11, r15	       287	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000be1	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       284	xdiffi.c	FUNCTION_2	IF_1
0x4000be5	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       285	xdiffi.c	FUNCTION_2	IF_1
0x4000be9	            0x7e16	                           jle 0x4000c01	       287	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000beb	       0xf1f440000	                   nop dword [rax + rax]	       287	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000bf0	        0x4a8b04fa	            mov rax, qword [rdx + r15*8]	       288	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000bf4	        0x4983c701	                              add r15, 1	       287	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000bf8	          0x4d39df	                            cmp r15, r11	       287	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000bfb	        0xc6040101	                 mov byte [rcx + rax], 1	       288	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000bff	            0x75ef	                           jne 0x4000bf0	       287	xdiffi.c	FUNCTION_2	IF_1	FOR_3
0x4000c01	            0x31c0	                            xor eax, eax	       320	xdiffi.c	FUNCTION_2
0x4000c03	    0x4881c4b80000	                           add rsp, 0xb8	       321	xdiffi.c	FUNCTION_2
0x4000c0a	              0x5b	                                 pop rbx	       321	xdiffi.c	FUNCTION_2
0x4000c0b	              0x5d	                                 pop rbp	       321	xdiffi.c	FUNCTION_2
0x4000c0c	            0x415c	                                 pop r12	       321	xdiffi.c	FUNCTION_2
0x4000c0e	            0x415d	                                 pop r13	       321	xdiffi.c	FUNCTION_2
0x4000c10	            0x415e	                                 pop r14	       321	xdiffi.c	FUNCTION_2
0x4000c12	            0x415f	                                 pop r15	       321	xdiffi.c	FUNCTION_2
0x4000c14	              0xc3	                                     ret	       321	xdiffi.c	FUNCTION_2
0x4000c15	          0x4d39fb	                            cmp r11, r15	       289	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x4000c18	     0xf8520f9ffff	                           jne 0x400053e	       289	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x4000c1e	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       290	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x4000c23	          0x4c39f3	                            cmp rbx, r14	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000c26	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       290	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x4000c2a	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       291	xdiffi.c	FUNCTION_2	ELSE_1	IF_2
0x4000c2e	            0x7ed1	                           jle 0x4000c01	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000c30	        0x4a8b04f2	            mov rax, qword [rdx + r14*8]	       294	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000c34	        0x4983c601	                              add r14, 1	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000c38	          0x4939de	                            cmp r14, rbx	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000c3b	        0xc6040101	                 mov byte [rcx + rax], 1	       294	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000c3f	            0x75ef	                           jne 0x4000c30	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000c41	            0xebbe	                           jmp 0x4000c01	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000c43	       0xf1f440000	                   nop dword [rax + rax]	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000c48	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000c4d	          0x4829f9	                            sub rcx, rdi	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000c50	      0xe988faffff	                           jmp 0x40006dd	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000c55	           0xf1f00	                         nop dword [rax]	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000c58	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000c5d	          0x4829cf	                            sub rdi, rcx	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000c60	      0xe9effbffff	                           jmp 0x4000854	       293	xdiffi.c	FUNCTION_2	ELSE_1	IF_2	FOR_4
0x4000c65	          0x4989fc	                            mov r12, rdi	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000c68	            0x31c9	                            xor ecx, ecx	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000c6a	      0xe96efaffff	                           jmp 0x40006dd	       105	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	FOR_3
0x4000c6f	          0x4989fc	                            mov r12, rdi	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000c72	            0x31ff	                            xor edi, edi	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000c74	      0xe9dbfbffff	                           jmp 0x4000854	       140	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	FOR_5
0x4000c79	    0x48836c242801	               sub qword [rsp + 0x28], 1	       131	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5
0x4000c7f	      0xe912fbffff	                           jmp 0x4000796	       131	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5
0x4000c84	    0x488344240801	                  add qword [rsp + 8], 1	       127	xdiffi.c	FUNCTION_1	FOR_1	ELSE_4
0x4000c8a	      0xe9d7faffff	                           jmp 0x4000766	       127	xdiffi.c	FUNCTION_1	FOR_1	ELSE_4
0x4000c8f	      0x4c8b742450	            mov r14, qword [rsp + 0x50] 	       127	xdiffi.c	FUNCTION_1	FOR_1	ELSE_4
0x4000c94	      0x4c8b7c2458	            mov r15, qword [rsp + 0x58] 	       127	xdiffi.c	FUNCTION_1	FOR_1	ELSE_4
0x4000c99	    0x41ba01000000	                             mov r10d, 1	       112	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000c9f	      0xb801000000	                              mov eax, 1	       112	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000ca4	      0x4c895c2410	             mov qword [rsp + 0x10], r11	       112	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000ca9	      0x4489542408	               mov dword [rsp + 8], r10d	       112	xdiffi.c	FUNCTION_1	FOR_1	ELSE_2	FOR_2	IF_5
0x4000cae	          0x4989e9	                             mov r9, rbp	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000cb1	            0x4155	                                push r13	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000cb3	              0x50	                                push rax	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000cb4	          0x4d89f8	                             mov r8, r15	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000cb7	    0xffb424080100	                push qword [rsp + 0x108]	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000cbe	    0xffb424080100	                push qword [rsp + 0x108]	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000cc5	          0x4c89e2	                            mov rdx, r12	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000cc8	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000ccd	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000cd2	          0x4c89f6	                            mov rsi, r14	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000cd5	      0xe800000000	                          call 0x4000cda	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000cda	        0x4883c420	                           add rsp, 0x20	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000cde	            0x85c0	                           test eax, eax	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000ce0	      0x448b542408	               mov r10d, dword [rsp + 8]	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000ce5	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000cea	            0x7839	                            js 0x4000d25	       311	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_2
0x4000cec	            0x4155	                                push r13	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000cee	            0x4152	                                push r10	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000cf0	          0x4d89d9	                             mov r9, r11	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000cf3	    0xffb424080100	                push qword [rsp + 0x108]	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000cfa	    0xffb424080100	                push qword [rsp + 0x108]	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d01	          0x4989e8	                             mov r8, rbp	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d04	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d09	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d0e	          0x4889da	                            mov rdx, rbx	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d11	          0x4c89e6	                            mov rsi, r12	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d14	      0xe800000000	                          call 0x4000d19	       313	xdiffi.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x4000d19	        0x4883c420	                           add rsp, 0x20	       312	xdiffi.c	FUNCTION_2	ELSE_2	IF_4
0x4000d1d	            0x85c0	                           test eax, eax	       312	xdiffi.c	FUNCTION_2	ELSE_2	IF_4
0x4000d1f	     0xf89dcfeffff	                           jns 0x4000c01	       312	xdiffi.c	FUNCTION_2	ELSE_2	IF_4
0x4000d25	      0xb8ffffffff	                     mov eax, 0xffffffff	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000d2a	      0xe9d4feffff	                           jmp 0x4000c03	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000d2f	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000d34	      0x4c8b5c2458	            mov r11, qword [rsp + 0x58] 	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000d39	    0x41ba01000000	                             mov r10d, 1	       147	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000d3f	      0xb801000000	                              mov eax, 1	       147	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000d44	      0xe95bffffff	                           jmp 0x4000ca4	       147	xdiffi.c	FUNCTION_1	FOR_1	ELSE_5	FOR_4	IF_10
0x4000d49	          0x4531c0	                            xor r8d, r8d	        80	xdiffi.c	FUNCTION_1	FOR_1
0x4000d4c	      0xe9e5f9ffff	                           jmp 0x4000736	        80	xdiffi.c	FUNCTION_1	FOR_1
0x4000d51	    0x488bb424a000	            mov rsi, qword [rsp + 0xa0] 	        80	xdiffi.c	FUNCTION_1	FOR_1
0x4000d59	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	        80	xdiffi.c	FUNCTION_1	FOR_1
0x4000d61	      0x48897c2468	             mov qword [rsp + 0x68], rdi	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000d66	      0x4889742470	             mov qword [rsp + 0x70], rsi	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000d6b	          0x4989ca	                            mov r10, rcx	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000d6e	      0xe9fafdffff	                           jmp 0x4000b6d	       200	xdiffi.c	FUNCTION_1	FOR_1	IF_12	FOR_8	IF_16	FOR_9	IF_17
0x4000d73	      0x488b6c2468	            mov rbp, qword [rsp + 0x68] 	       208	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x4000d78	      0x4c8b642470	            mov r12, qword [rsp + 0x70] 	       208	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x4000d7d	    0x41ba01000000	                             mov r10d, 1	       210	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x4000d83	            0x31c0	                            xor eax, eax	       209	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x4000d85	      0xe91affffff	                           jmp 0x4000ca4	       209	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_18
0x4000d8a	      0x488b6c2468	            mov rbp, qword [rsp + 0x68] 	       184	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000d8f	      0x4c8b642470	            mov r12, qword [rsp + 0x70] 	       184	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000d94	          0x4531d2	                          xor r10d, r10d	       186	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000d97	      0xb801000000	                              mov eax, 1	       185	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000d9c	      0xe903ffffff	                           jmp 0x4000ca4	       185	xdiffi.c	FUNCTION_1	FOR_1	IF_12	IF_15
0x4000da1	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000da6	      0x4839442418	            cmp qword [rsp + 0x18], rax 	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000dab	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000db2	          0x4c89e6	                            mov rsi, r12	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000db5	            0x7f3f	                            jg 0x4000df6	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000db7	    0x488bbc24f000	            mov rdi, qword [rsp + 0xf0] 	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000dbf	        0x48391cc7	           cmp qword [rdi + rax*8], rbx 	       224	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	CALL_1
0x4000dc3	          0x4889d9	                            mov rcx, rbx	       224	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	CALL_1
0x4000dc6	      0x480f4e0cc7	         cmovle rcx, qword [rdi + rax*8]	       224	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	CALL_1
0x4000dcb	          0x4889ca	                            mov rdx, rcx	       225	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000dce	          0x4829c2	                            sub rdx, rax	       225	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000dd1	          0x4c39da	                            cmp rdx, r11	       226	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_20
0x4000dd4	            0x7e07	                           jle 0x4000ddd	       226	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_20
0x4000dd6	        0x498d0c03	                    lea rcx, [r11 + rax]	       226	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_20
0x4000dda	          0x4c89da	                            mov rdx, r11	       226	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_20
0x4000ddd	          0x4801ca	                            add rdx, rcx	       228	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000de0	          0x4839f2	                            cmp rdx, rsi	       228	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000de3	            0x7e06	                           jle 0x4000deb	       228	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000de5	          0x4989cc	                            mov r12, rcx	       230	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000de8	          0x4889d6	                            mov rsi, rdx	       228	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10	IF_21
0x4000deb	        0x4883e802	                              sub rax, 2	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000def	      0x4839442418	            cmp qword [rsp + 0x18], rax 	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000df4	            0x7ec9	                           jle 0x4000dbf	       223	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_10
0x4000df6	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000dfb	      0x4839542408	                cmp qword [rsp + 8], rdx	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000e00	    0x48b8ffffffff	         movabs rax, 0x7fffffffffffffff 	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000e0a	          0x4889c5	                            mov rbp, rax	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000e0d	            0x7f3f	                            jg 0x4000e4e	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000e0f	    0x4c8b8424f800	              mov r8, qword [rsp + 0xf8]	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000e17	        0x4d3934d0	            cmp qword [r8 + rdx*8], r14 	       236	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	CALL_2
0x4000e1b	          0x4c89f7	                            mov rdi, r14	       236	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	CALL_2
0x4000e1e	      0x490f4d3cd0	          cmovge rdi, qword [r8 + rdx*8]	       236	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	CALL_2
0x4000e23	          0x4889f9	                            mov rcx, rdi	       237	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000e26	          0x4829d1	                            sub rcx, rdx	       237	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000e29	          0x4c39f9	                            cmp rcx, r15	       238	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_22
0x4000e2c	            0x7d07	                           jge 0x4000e35	       238	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_22
0x4000e2e	        0x498d3c17	                    lea rdi, [r15 + rdx]	       238	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_22
0x4000e32	          0x4c89f9	                            mov rcx, r15	       238	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_22
0x4000e35	          0x4801f9	                            add rcx, rdi	       240	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000e38	          0x4839e9	                            cmp rcx, rbp	       240	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000e3b	            0x7d06	                           jge 0x4000e43	       240	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000e3d	          0x4889f8	                            mov rax, rdi	       242	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000e40	          0x4889cd	                            mov rbp, rcx	       240	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11	IF_23
0x4000e43	        0x4883ea02	                              sub rdx, 2	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000e47	      0x4839542408	                cmp qword [rsp + 8], rdx	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000e4c	            0x7ec9	                           jle 0x4000e17	       235	xdiffi.c	FUNCTION_1	FOR_1	IF_19	FOR_11
0x4000e4e	        0x498d141b	                    lea rdx, [r11 + rbx]	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000e52	        0x4b8d0c37	                    lea rcx, [r15 + r14]	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000e56	          0x4889f7	                            mov rdi, rsi	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000e59	          0x4829ea	                            sub rdx, rbp	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000e5c	          0x4829cf	                            sub rdi, rcx	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000e5f	          0x4839fa	                            cmp rdx, rdi	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000e62	            0x7d13	                           jge 0x4000e77	       246	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000e64	          0x4c29e6	                            sub rsi, r12	       248	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000e67	          0x4531d2	                          xor r10d, r10d	       250	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000e6a	      0xb801000000	                              mov eax, 1	       249	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000e6f	          0x4889f5	                            mov rbp, rsi	       248	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000e72	      0xe92dfeffff	                           jmp 0x4000ca4	       248	xdiffi.c	FUNCTION_1	FOR_1	IF_19	IF_24
0x4000e77	          0x4829c5	                            sub rbp, rax	       253	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000e7a	          0x4989c4	                            mov r12, rax	       252	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000e7d	    0x41ba01000000	                             mov r10d, 1	       255	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000e83	            0x31c0	                            xor eax, eax	       254	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
0x4000e85	      0xe91afeffff	                           jmp 0x4000ca4	       254	xdiffi.c	FUNCTION_1	FOR_1	IF_19	ELSE_7
xdl_bug	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,0:FOR,0:CALL,2:DO,0	9
0x4000110	        0x4883ec08	                              sub rsp, 8	       805	xdiffi.c	FUNCTION_15
0x4000114	          0x4889f9	                            mov rcx, rdi	       805	xdiffi.c	FUNCTION_15
0x4000117	    0x488b3d000000	            mov rdi, qword [0x0400011e] 	        97	stdio2.h	FUNCTION_26	CALL_1
0x400011e	      0xba00000000	                              mov edx, 0	        97	stdio2.h	FUNCTION_26	CALL_1
0x4000123	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_26	CALL_1
0x4000128	            0x31c0	                            xor eax, eax	        97	stdio2.h	FUNCTION_26	CALL_1
0x400012a	      0xe800000000	                          call 0x400012f	        97	stdio2.h	FUNCTION_26	CALL_1
0x400012f	      0xbf01000000	                              mov edi, 1	       807	xdiffi.c	FUNCTION_15	CALL_2
0x4000134	      0xe800000000	                          call 0x4000139	       807	xdiffi.c	FUNCTION_15	CALL_2
xdl_diff	WHILE,0:SWITCH,0:ELSE,0:functions,0:IF,5:FOR,0:CALL,11:DO,0	152
0x4001750	            0x4157	                                push r15	      1019	xdiffi.c	FUNCTION_21
0x4001752	            0x4156	                                push r14	      1019	xdiffi.c	FUNCTION_21
0x4001754	            0x4155	                                push r13	      1019	xdiffi.c	FUNCTION_21
0x4001756	            0x4154	                                push r12	      1019	xdiffi.c	FUNCTION_21
0x4001758	          0x4989cd	                            mov r13, rcx	      1019	xdiffi.c	FUNCTION_21
0x400175b	              0x55	                                push rbp	      1019	xdiffi.c	FUNCTION_21
0x400175c	              0x53	                                push rbx	      1019	xdiffi.c	FUNCTION_21
0x400175d	    0x41bc00000000	                             mov r12d, 0	      1022	xdiffi.c	FUNCTION_21
0x4001763	          0x4889d5	                            mov rbp, rdx	      1019	xdiffi.c	FUNCTION_21
0x4001766	    0x4881ec480100	                          sub rsp, 0x148	      1019	xdiffi.c	FUNCTION_21
0x400176d	    0x64488b042528	                mov rax, qword fs:[0x28]	      1019	xdiffi.c	FUNCTION_21
0x4001776	    0x488984243801	            mov qword [rsp + 0x138], rax	      1019	xdiffi.c	FUNCTION_21
0x400177e	            0x31c0	                            xor eax, eax	      1019	xdiffi.c	FUNCTION_21
0x4001780	      0x4883792800	               cmp qword [rcx + 0x28], 0	      1022	xdiffi.c	FUNCTION_21
0x4001785	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      1024	xdiffi.c	FUNCTION_21	IF_1	CALL_1
0x400178a	      0xb800000000	                              mov eax, 0	      1022	xdiffi.c	FUNCTION_21
0x400178f	      0x4c89442408	                 mov qword [rsp + 8], r8	      1019	xdiffi.c	FUNCTION_21
0x4001794	        0x4c0f45e0	                         cmovne r12, rax	      1022	xdiffi.c	FUNCTION_21
0x4001798	      0xe800000000	                          call 0x400179d	      1024	xdiffi.c	FUNCTION_21	IF_1	CALL_1
0x400179d	            0x85c0	                           test eax, eax	      1024	xdiffi.c	FUNCTION_21	IF_1	CALL_1
0x400179f	     0xf88f8010000	                            js 0x400199d	      1024	xdiffi.c	FUNCTION_21	IF_1	CALL_1
0x40017a5	      0x488d442420	                   lea rax, [rsp + 0x20]	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40017aa	    0x488d9c24a800	                   lea rbx, [rsp + 0xa8]	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40017b2	        0x488b5500	                    mov rdx, qword [rbp]	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40017b6	          0x4889de	                            mov rsi, rbx	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40017b9	          0x4889c7	                            mov rdi, rax	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40017bc	      0xe800000000	                          call 0x40017c1	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40017c1	            0x85c0	                           test eax, eax	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40017c3	     0xf88c0010000	                            js 0x4001989	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40017c9	        0x488b5500	                    mov rdx, qword [rbp]	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x40017cd	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x40017d2	          0x4889df	                            mov rdi, rbx	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x40017d5	      0xe800000000	                          call 0x40017da	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x40017da	            0x85c0	                           test eax, eax	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40017dc	     0xf88a7010000	                            js 0x4001989	      1028	xdiffi.c	FUNCTION_21	IF_2	CALL_2
0x40017e2	      0x488d742418	                   lea rsi, [rsp + 0x18]	      1030	xdiffi.c	FUNCTION_21	IF_2	CALL_4
0x40017e7	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1030	xdiffi.c	FUNCTION_21	IF_2	CALL_4
0x40017ec	      0xe800000000	                          call 0x40017f1	      1030	xdiffi.c	FUNCTION_21	IF_2	CALL_4
0x40017f1	            0x85c0	                           test eax, eax	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x40017f3	     0xf8890010000	                            js 0x4001989	      1029	xdiffi.c	FUNCTION_21	IF_2	CALL_3
0x40017f9	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      1035	xdiffi.c	FUNCTION_21	IF_3
0x40017fe	          0x4885db	                           test rbx, rbx	      1035	xdiffi.c	FUNCTION_21	IF_3
0x4001801	            0x744d	                            je 0x4001850	      1035	xdiffi.c	FUNCTION_21	IF_3
0x4001803	        0x488b6d00	                    mov rbp, qword [rbp]	      1036	xdiffi.c	FUNCTION_21	IF_3	IF_4
0x4001807	          0x4889de	                            mov rsi, rbx	      1036	xdiffi.c	FUNCTION_21	IF_3	IF_4
0x400180a	        0x40f6c580	                          test bpl, 0x80	      1036	xdiffi.c	FUNCTION_21	IF_3	IF_4
0x400180e	     0xf858d000000	                           jne 0x40018a1	      1036	xdiffi.c	FUNCTION_21	IF_3	IF_4
0x4001814	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x4001819	          0x4c89e9	                            mov rcx, r13	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x400181c	      0x488b542408	                mov rdx, qword [rsp + 8]	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x4001821	          0x41ffd4	                                call r12	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x4001824	            0x85c0	                           test eax, eax	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x4001826	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1041	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_8
0x400182b	     0xf8843010000	                            js 0x4001974	      1039	xdiffi.c	FUNCTION_21	IF_3	IF_5	CALL_7
0x4001831	          0x4885ff	                           test rdi, rdi	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001834	            0x741a	                            je 0x4001850	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001836	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001840	          0x488b1f	                    mov rbx, qword [rdi]	       975	xdiffi.c	FUNCTION_18	WHILE_1
0x4001843	      0xe800000000	                          call 0x4001848	       976	xdiffi.c	FUNCTION_18	WHILE_1	CALL_1
0x4001848	          0x4885db	                           test rbx, rbx	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x400184b	          0x4889df	                            mov rdi, rbx	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x400184e	            0x75f0	                           jne 0x4001840	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001850	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1047	xdiffi.c	FUNCTION_21	CALL_11
0x4001855	      0xe800000000	                          call 0x400185a	      1047	xdiffi.c	FUNCTION_21	CALL_11
0x400185a	            0x31c0	                            xor eax, eax	      1049	xdiffi.c	FUNCTION_21
0x400185c	    0x488b8c243801	           mov rcx, qword [rsp + 0x138] 	      1050	xdiffi.c	FUNCTION_21
0x4001864	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1050	xdiffi.c	FUNCTION_21
0x400186d	     0xf8534010000	                           jne 0x40019a7	      1050	xdiffi.c	FUNCTION_21
0x4001873	    0x4881c4480100	                          add rsp, 0x148	      1050	xdiffi.c	FUNCTION_21
0x400187a	              0x5b	                                 pop rbx	      1050	xdiffi.c	FUNCTION_21
0x400187b	              0x5d	                                 pop rbp	      1050	xdiffi.c	FUNCTION_21
0x400187c	            0x415c	                                 pop r12	      1050	xdiffi.c	FUNCTION_21
0x400187e	            0x415d	                                 pop r13	      1050	xdiffi.c	FUNCTION_21
0x4001880	            0x415e	                                 pop r14	      1050	xdiffi.c	FUNCTION_21
0x4001882	            0x415f	                                 pop r15	      1050	xdiffi.c	FUNCTION_21
0x4001884	              0xc3	                                     ret	      1050	xdiffi.c	FUNCTION_21
0x4001885	           0xf1f00	                         nop dword [rax]	      1050	xdiffi.c	FUNCTION_21
0x4001888	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x400188d	            0x7e03	                           jle 0x4001892	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x400188f	              0x90	                                     nop	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001890	            0x31c0	                            xor eax, eax	      1002	xdiffi.c	FUNCTION_20	FOR_1
0x4001892	          0x894328	             mov dword [rbx + 0x28], eax	      1014	xdiffi.c	FUNCTION_20	FOR_1
0x4001895	          0x488b1b	                    mov rbx, qword [rbx]	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x4001898	          0x4885db	                           test rbx, rbx	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x400189b	     0xf84a4000000	                            je 0x4001945	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x40018a1	        0x488b4308	                mov rax, qword [rbx + 8]	      1006	xdiffi.c	FUNCTION_20	FOR_1
0x40018a5	    0x488b94248000	            mov rdx, qword [rsp + 0x80] 	      1006	xdiffi.c	FUNCTION_20	FOR_1
0x40018ad	        0x48c1e003	                              shl rax, 3	      1006	xdiffi.c	FUNCTION_20	FOR_1
0x40018b1	      0x48837b1800	               cmp qword [rbx + 0x18], 0	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x40018b6	     0xf8e93000000	                           jle 0x400194f	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x40018bc	          0x4531ff	                          xor r15d, r15d	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x40018bf	        0x4c8d3402	                    lea r14, [rdx + rax]	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x40018c3	            0xeb07	                           jmp 0x40018cc	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x40018c5	           0xf1f00	                         nop dword [rax]	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x40018c8	            0x85c0	                           test eax, eax	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x40018ca	            0x74bc	                            je 0x4001888	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x40018cc	        0x4b8b04fe	            mov rax, qword [r14 + r15*8]	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x40018d0	          0x4889ea	                            mov rdx, rbp	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x40018d3	        0x4983c701	                              add r15, 1	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x40018d7	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x40018db	        0x488b7808	                mov rdi, qword [rax + 8]	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x40018df	      0xe800000000	                          call 0x40018e4	      1008	xdiffi.c	FUNCTION_20	FOR_1	CALL_1
0x40018e4	        0x4c3b7b18	            cmp r15, qword [rbx + 0x18] 	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x40018e8	            0x7cde	                            jl 0x40018c8	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x40018ea	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1010	xdiffi.c	FUNCTION_20	FOR_1
0x40018ee	    0x488b8c240801	           mov rcx, qword [rsp + 0x108] 	      1010	xdiffi.c	FUNCTION_20	FOR_1
0x40018f6	        0x48c1e203	                              shl rdx, 3	      1010	xdiffi.c	FUNCTION_20	FOR_1
0x40018fa	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x40018ff	            0x7e91	                           jle 0x4001892	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001901	            0x85c0	                           test eax, eax	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001903	            0x748b	                            je 0x4001890	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001905	          0x4531ff	                          xor r15d, r15d	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4001908	        0x4c8d3411	                    lea r14, [rcx + rdx]	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x400190c	            0xeb0a	                           jmp 0x4001918	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x400190e	            0x6690	                                     nop	      1007	xdiffi.c	FUNCTION_20	FOR_1	FOR_2
0x4001910	            0x85c0	                           test eax, eax	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001912	     0xf8478ffffff	                            je 0x4001890	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001918	        0x4b8b04fe	            mov rax, qword [r14 + r15*8]	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x400191c	          0x4889ea	                            mov rdx, rbp	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x400191f	        0x4983c701	                              add r15, 1	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001923	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x4001927	        0x488b7808	                mov rdi, qword [rax + 8]	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x400192b	      0xe800000000	                          call 0x4001930	      1012	xdiffi.c	FUNCTION_20	FOR_1	CALL_2
0x4001930	        0x4c3b7b20	            cmp r15, qword [rbx + 0x20] 	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001934	            0x7cda	                            jl 0x4001910	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001936	          0x894328	             mov dword [rbx + 0x28], eax	      1014	xdiffi.c	FUNCTION_20	FOR_1
0x4001939	          0x488b1b	                    mov rbx, qword [rbx]	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x400193c	          0x4885db	                           test rbx, rbx	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x400193f	     0xf855cffffff	                           jne 0x40018a1	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x4001945	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x400194a	      0xe9c5feffff	                           jmp 0x4001814	      1001	xdiffi.c	FUNCTION_20	FOR_1
0x400194f	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001954	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1010	xdiffi.c	FUNCTION_20	FOR_1
0x4001958	    0x488b8c240801	           mov rcx, qword [rsp + 0x108] 	      1010	xdiffi.c	FUNCTION_20	FOR_1
0x4001960	    0x488d14c50000	                        lea rdx, [rax*8]	      1010	xdiffi.c	FUNCTION_20	FOR_1
0x4001968	      0xb801000000	                              mov eax, 1	      1002	xdiffi.c	FUNCTION_20	FOR_1
0x400196d	            0x7f96	                            jg 0x4001905	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x400196f	      0xe91effffff	                           jmp 0x4001892	      1011	xdiffi.c	FUNCTION_20	FOR_1	FOR_3
0x4001974	          0x4885ff	                           test rdi, rdi	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001977	            0x7410	                            je 0x4001989	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001979	          0x488b1f	                    mov rbx, qword [rdi]	       975	xdiffi.c	FUNCTION_18	WHILE_1
0x400197c	      0xe800000000	                          call 0x4001981	       976	xdiffi.c	FUNCTION_18	WHILE_1	CALL_1
0x4001981	          0x4885db	                           test rbx, rbx	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001984	          0x4889df	                            mov rdi, rbx	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001987	            0x75f0	                           jne 0x4001979	       974	xdiffi.c	FUNCTION_18	WHILE_1
0x4001989	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1032	xdiffi.c	FUNCTION_21	IF_2	CALL_5
0x400198e	      0xe800000000	                          call 0x4001993	      1032	xdiffi.c	FUNCTION_21	IF_2	CALL_5
0x4001993	      0xb8ffffffff	                     mov eax, 0xffffffff	      1033	xdiffi.c	FUNCTION_21	IF_2
0x4001998	      0xe9bffeffff	                           jmp 0x400185c	      1033	xdiffi.c	FUNCTION_21	IF_2
0x400199d	      0xb8ffffffff	                     mov eax, 0xffffffff	      1026	xdiffi.c	FUNCTION_21	IF_1
0x40019a2	      0xe9b5feffff	                           jmp 0x400185c	      1026	xdiffi.c	FUNCTION_21	IF_1
0x40019a7	      0xe800000000	                        call str.BUG:__s	      1050	xdiffi.c	FUNCTION_21
