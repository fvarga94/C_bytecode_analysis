ws_check_emit_1	WHILE,0:FOR,2:DO,0:CALL,22:functions,0:SWITCH,0:IF,19:ELSE,3	277
0x4000040	            0x4157	                                push r15	       146	ws.c	FUNCTION_4
0x4000042	            0x4156	                                push r14	       146	ws.c	FUNCTION_4
0x4000044	          0x4863c6	                         movsxd rax, esi	       146	ws.c	FUNCTION_4
0x4000047	            0x4155	                                push r13	       146	ws.c	FUNCTION_4
0x4000049	            0x4154	                                push r12	       146	ws.c	FUNCTION_4
0x400004b	              0x55	                                push rbp	       146	ws.c	FUNCTION_4
0x400004c	              0x53	                                push rbx	       146	ws.c	FUNCTION_4
0x400004d	          0x4889cb	                            mov rbx, rcx	       146	ws.c	FUNCTION_4
0x4000050	        0x4883ec48	                           sub rsp, 0x48	       146	ws.c	FUNCTION_4
0x4000054	            0x85c0	                           test eax, eax	       155	ws.c	FUNCTION_4	IF_1
0x4000056	      0x48897c2408	                mov qword [rsp + 8], rdi	       146	ws.c	FUNCTION_4
0x400005b	        0x8944242c	             mov dword [rsp + 0x2c], eax	       146	ws.c	FUNCTION_4
0x400005f	        0x89542424	             mov dword [rsp + 0x24], edx	       146	ws.c	FUNCTION_4
0x4000063	      0x4c89442438	              mov qword [rsp + 0x38], r8	       146	ws.c	FUNCTION_4
0x4000068	      0x4c894c2418	              mov qword [rsp + 0x18], r9	       146	ws.c	FUNCTION_4
0x400006d	     0xf8e85030000	                           jle 0x40003f8	       155	ws.c	FUNCTION_4	IF_1
0x4000073	       0xfb64407ff	         movzx eax, byte [rdi + rax - 1]	       155	ws.c	FUNCTION_4	IF_1
0x4000078	            0x3c0a	                             cmp al, 0xa	       155	ws.c	FUNCTION_4	IF_1
0x400007a	     0xf84d0030000	                            je 0x4000450	       155	ws.c	FUNCTION_4	IF_1
0x4000080	        0x8b4c2424	            mov ecx, dword [rsp + 0x24] 	       159	ws.c	FUNCTION_4	IF_2
0x4000084	          0xf6c502	                              test ch, 2	       159	ws.c	FUNCTION_4	IF_2
0x4000087	     0xf8573010000	                           jne 0x4000200	       159	ws.c	FUNCTION_4	IF_2
0x400008d	          0x83e140	                           and ecx, 0x40	       166	ws.c	FUNCTION_4	IF_3
0x4000090	     0xf8511040000	                           jne 0x40004a7	       166	ws.c	FUNCTION_4	IF_3
0x4000096	      0x448b74242c	           mov r14d, dword [rsp + 0x2c] 	       166	ws.c	FUNCTION_4	IF_3
0x400009b	            0x31ed	                            xor ebp, ebp	       147	ws.c	FUNCTION_4
0x400009d	    0xc74424300000	               mov dword [rsp + 0x30], 0	       150	ws.c	FUNCTION_4
0x40000a5	    0xc74424340000	               mov dword [rsp + 0x34], 0	       151	ws.c	FUNCTION_4
0x40000ad	        0x8b442424	            mov eax, dword [rsp + 0x24] 	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40000b1	    0x41bf01000000	                             mov r15d, 1	       151	ws.c	FUNCTION_4
0x40000b7	            0x31d2	                            xor edx, edx	       151	ws.c	FUNCTION_4
0x40000b9	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	       151	ws.c	FUNCTION_4
0x40000be	          0x4189c4	                           mov r12d, eax	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40000c1	      0x2500080000	                          and eax, 0x800	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x40000c6	        0x41c1ec07	                             shr r12d, 7	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40000ca	        0x89442420	             mov dword [rsp + 0x20], eax	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x40000ce	        0x4183e401	                             and r12d, 1	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40000d2	      0x4488642414	             mov byte [rsp + 0x14], r12b	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x40000d7	          0x4589fc	                          mov r12d, r15d	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x40000da	          0x4189d7	                           mov r15d, edx	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x40000dd	      0xe98d000000	                           jmp 0x400016f	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x40000e2	    0x660f1f440000	                    nop word [rax + rax]	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x40000e8	          0x4539c7	                           cmp r15d, r8d	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40000eb	     0xf8d9f000000	                           jge 0x4000190	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x40000f1	        0x4080cd80	                            or bpl, 0x80	       187	ws.c	FUNCTION_4	FOR_2	IF_8
0x40000f5	          0x4885db	                           test rbx, rbx	       188	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9
0x40000f8	      0x4489442428	             mov dword [rsp + 0x28], r8d	       188	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9
0x40000fd	            0x7459	                            je 0x4000158	       188	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9
0x40000ff	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	       189	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_2
0x4000107	          0x4889de	                            mov rsi, rbx	       189	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_2
0x400010a	      0xe800000000	                          call 0x400010f	       189	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_2
0x400010f	      0x448b442428	            mov r8d, dword [rsp + 0x28] 	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x4000114	          0x4963ff	                        movsxd rdi, r15d	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x4000117	      0x48037c2408	                add rdi, qword [rsp + 8]	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x400011c	          0x4889d9	                            mov rcx, rbx	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x400011f	      0xba01000000	                              mov edx, 1	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x4000124	          0x4529f8	                           sub r8d, r15d	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x4000127	          0x4963f0	                         movsxd rsi, r8d	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x400012a	      0xe800000000	                          call 0x400012f	       190	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_3
0x400012f	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       191	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_4
0x4000134	          0x4889de	                            mov rsi, rbx	       191	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_4
0x4000137	      0xe800000000	                          call 0x400013c	       191	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_4
0x400013c	          0x4889d9	                            mov rcx, rbx	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x400013f	      0xba01000000	                              mov edx, 1	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x4000144	      0xbe01000000	                              mov esi, 1	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x4000149	          0x4c89ef	                            mov rdi, r13	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x400014c	      0xe800000000	                          call 0x4000151	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x4000151	     0xf1f80000000	                         nop dword [rax]	       192	ws.c	FUNCTION_4	FOR_2	IF_8	IF_9	CALL_5
0x4000158	          0x4589e7	                          mov r15d, r12d	       205	ws.c	FUNCTION_4	FOR_2
0x400015b	          0x4589e0	                           mov r8d, r12d	       205	ws.c	FUNCTION_4	FOR_2
0x400015e	        0x4983c501	                              add r13, 1	       205	ws.c	FUNCTION_4	FOR_2
0x4000162	        0x4183c401	                             add r12d, 1	       205	ws.c	FUNCTION_4	FOR_2
0x4000166	          0x4539f0	                           cmp r8d, r14d	       181	ws.c	FUNCTION_4	FOR_2
0x4000169	     0xf8d49010000	                           jge 0x40002b8	       181	ws.c	FUNCTION_4	FOR_2
0x400016f	      0x410fb64500	                   movzx eax, byte [r13]	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x4000174	      0x458d4424ff	                      lea r8d, [r12 - 1]	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x4000179	            0x3c20	                            cmp al, 0x20	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x400017b	            0x74de	                            je 0x400015b	       182	ws.c	FUNCTION_4	FOR_2	IF_6
0x400017d	            0x3c09	                               cmp al, 9	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x400017f	     0xf8533010000	                           jne 0x40002b8	       184	ws.c	FUNCTION_4	FOR_2	IF_7
0x4000185	      0x807c241400	                cmp byte [rsp + 0x14], 0	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x400018a	     0xf8558ffffff	                           jne 0x40000e8	       186	ws.c	FUNCTION_4	FOR_2	IF_8
0x4000190	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x4000194	            0x85c9	                           test ecx, ecx	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x4000196	     0xf84ec000000	                            je 0x4000288	       194	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x400019c	    0x81cd00080000	                           or ebp, 0x800	       195	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10
0x40001a2	          0x4885db	                           test rbx, rbx	       196	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11
0x40001a5	            0x74b1	                            je 0x4000158	       196	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11
0x40001a7	          0x4963ff	                        movsxd rdi, r15d	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x40001aa	      0x48037c2408	                add rdi, qword [rsp + 8]	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x40001af	          0x4529f8	                           sub r8d, r15d	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x40001b2	          0x4963f0	                         movsxd rsi, r8d	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x40001b5	          0x4889d9	                            mov rcx, rbx	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x40001b8	      0xba01000000	                              mov edx, 1	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x40001bd	      0xe800000000	                          call 0x40001c2	       197	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_6
0x40001c2	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	       198	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_7
0x40001ca	          0x4889de	                            mov rsi, rbx	       198	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_7
0x40001cd	      0xe800000000	                          call 0x40001d2	       198	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_7
0x40001d2	          0x4c89ef	                            mov rdi, r13	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x40001d5	          0x4889d9	                            mov rcx, rbx	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x40001d8	      0xba01000000	                              mov edx, 1	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x40001dd	      0xbe01000000	                              mov esi, 1	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x40001e2	      0xe800000000	                          call 0x40001e7	       199	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_8
0x40001e7	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x40001ec	          0x4889de	                            mov rsi, rbx	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x40001ef	      0xe800000000	                          call 0x40001f4	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x40001f4	      0xe95fffffff	                           jmp 0x4000158	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x40001f9	     0xf1f80000000	                         nop dword [rax]	       200	ws.c	FUNCTION_4	FOR_2	ELSE_2	IF_10	IF_11	CALL_9
0x4000200	            0x3c0d	                             cmp al, 0xd	       160	ws.c	FUNCTION_4	IF_2
0x4000202	    0xc74424300000	               mov dword [rsp + 0x30], 0	       150	ws.c	FUNCTION_4
0x400020a	    0xc74424340000	               mov dword [rsp + 0x34], 0	       151	ws.c	FUNCTION_4
0x4000212	     0xf8468020000	                            je 0x4000480	       160	ws.c	FUNCTION_4	IF_2
0x4000218	      0xf644242440	           test byte [rsp + 0x24], 0x40 	       166	ws.c	FUNCTION_4	IF_3
0x400021d	     0xf841d020000	                            je 0x4000440	       166	ws.c	FUNCTION_4	IF_3
0x4000223	      0x448b74242c	           mov r14d, dword [rsp + 0x2c] 	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000228	        0x4183ee01	                             sub r14d, 1	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x400022c	     0xf880e020000	                            js 0x4000440	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000232	          0x4963c6	                        movsxd rax, r14d	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000235	      0x4803442408	                add rax, qword [rsp + 8]	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x400023a	           0xfb610	                   movzx edx, byte [rax]	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x400023d	    0xf68200000000	                      test byte [rdx], 1	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000244	            0x751e	                           jne 0x4000264	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000246	      0xe9f5010000	                           jmp 0x4000440	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x400024b	       0xf1f440000	                   nop dword [rax + rax]	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000250	         0xfb648ff	               movzx ecx, byte [rax - 1]	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000254	        0x4883e801	                              sub rax, 1	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000258	    0xf68100000000	                      test byte [rcx], 1	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x400025f	            0x740c	                            je 0x400026d	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000261	          0x4189d6	                           mov r14d, edx	       168	ws.c	FUNCTION_4	IF_3	FOR_1	IF_4	CALL_1
0x4000264	        0x418d56ff	                      lea edx, [r14 - 1]	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000268	          0x83faff	             cmp edx, 0xffffffffffffffff	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x400026b	            0x75e3	                           jne 0x4000250	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x400026d	      0xbd40000000	                           mov ebp, 0x40	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000272	          0x4585f6	                         test r14d, r14d	       181	ws.c	FUNCTION_4	FOR_2
0x4000275	     0xf8f32feffff	                            jg 0x40000ad	       181	ws.c	FUNCTION_4	FOR_2
0x400027b	          0x4531c0	                            xor r8d, r8d	       181	ws.c	FUNCTION_4	FOR_2
0x400027e	            0x31d2	                            xor edx, edx	       148	ws.c	FUNCTION_4
0x4000280	            0xeb39	                           jmp 0x40002bb	       148	ws.c	FUNCTION_4
0x4000282	    0x660f1f440000	                    nop word [rax + rax]	       148	ws.c	FUNCTION_4
0x4000288	          0x4885db	                           test rbx, rbx	       202	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12
0x400028b	     0xf84c7feffff	                            je 0x4000158	       202	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12
0x4000291	          0x4529f8	                           sub r8d, r15d	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x4000294	          0x4963ff	                        movsxd rdi, r15d	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x4000297	      0x48037c2408	                add rdi, qword [rsp + 8]	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x400029c	        0x418d7001	                       lea esi, [r8 + 1]	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40002a0	          0x4889d9	                            mov rcx, rbx	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40002a3	      0xba01000000	                              mov edx, 1	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40002a8	          0x4863f6	                         movsxd rsi, esi	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40002ab	      0xe800000000	                          call 0x40002b0	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40002b0	      0xe9a3feffff	                           jmp 0x4000158	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40002b5	           0xf1f00	                         nop dword [rax]	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40002b8	          0x4489fa	                           mov edx, r15d	       203	ws.c	FUNCTION_4	FOR_2	ELSE_3	IF_12	CALL_10
0x40002bb	        0x8b442424	            mov eax, dword [rsp + 0x24] 	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x40002bf	          0xf6c401	                              test ah, 1	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x40002c2	            0x746c	                            je 0x4000330	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x40002c4	          0x4589c4	                           mov r12d, r8d	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x40002c7	          0x83e03f	                           and eax, 0x3f	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x40002ca	      0x4489442414	             mov dword [rsp + 0x14], r8d	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x40002cf	          0x4129d4	                           sub r12d, edx	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x40002d2	          0x4139c4	                           cmp r12d, eax	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x40002d5	            0x7259	                            jb 0x4000330	       209	ws.c	FUNCTION_4	IF_13	CALL_11
0x40002d7	    0x81cd00010000	                           or ebp, 0x100	       210	ws.c	FUNCTION_4	IF_13
0x40002dd	          0x4885db	                           test rbx, rbx	       211	ws.c	FUNCTION_4	IF_13	IF_14
0x40002e0	        0x89542420	             mov dword [rsp + 0x20], edx	       211	ws.c	FUNCTION_4	IF_13	IF_14
0x40002e4	     0xf84f8000000	                            je 0x40003e2	       211	ws.c	FUNCTION_4	IF_13	IF_14
0x40002ea	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	       212	ws.c	FUNCTION_4	IF_13	IF_14	CALL_12
0x40002f2	          0x4889de	                            mov rsi, rbx	       212	ws.c	FUNCTION_4	IF_13	IF_14	CALL_12
0x40002f5	      0xe800000000	                          call 0x40002fa	       212	ws.c	FUNCTION_4	IF_13	IF_14	CALL_12
0x40002fa	      0x4863542420	         movsxd rdx, dword [rsp + 0x20] 	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x40002ff	      0x488b442408	                mov rax, qword [rsp + 8]	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x4000304	          0x4963f4	                        movsxd rsi, r12d	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x4000307	          0x4889d9	                            mov rcx, rbx	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x400030a	        0x488d3c10	                    lea rdi, [rax + rdx]	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x400030e	      0xba01000000	                              mov edx, 1	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x4000313	      0xe800000000	                          call 0x4000318	       213	ws.c	FUNCTION_4	IF_13	IF_14	CALL_13
0x4000318	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x400031d	          0x4889de	                            mov rsi, rbx	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x4000320	      0xe800000000	                          call 0x4000325	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x4000325	      0x448b442414	            mov r8d, dword [rsp + 0x14] 	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x400032a	          0x4489c2	                            mov edx, r8d	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x400032d	            0xeb0a	                           jmp 0x4000339	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x400032f	              0x90	                                     nop	       214	ws.c	FUNCTION_4	IF_13	IF_14	CALL_14
0x4000330	          0x4885db	                           test rbx, rbx	       219	ws.c	FUNCTION_4	IF_15
0x4000333	     0xf84a9000000	                            je 0x40003e2	       219	ws.c	FUNCTION_4	IF_15
0x4000339	          0x4589f4	                          mov r12d, r14d	       226	ws.c	FUNCTION_4	IF_15	IF_16
0x400033c	        0x89542414	             mov dword [rsp + 0x14], edx	       226	ws.c	FUNCTION_4	IF_15	IF_16
0x4000340	          0x4129d4	                           sub r12d, edx	       226	ws.c	FUNCTION_4	IF_15	IF_16
0x4000343	          0x4585e4	                         test r12d, r12d	       226	ws.c	FUNCTION_4	IF_15	IF_16
0x4000346	            0x7e38	                           jle 0x4000380	       226	ws.c	FUNCTION_4	IF_15	IF_16
0x4000348	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       227	ws.c	FUNCTION_4	IF_15	IF_16	CALL_15
0x400034d	          0x4889de	                            mov rsi, rbx	       227	ws.c	FUNCTION_4	IF_15	IF_16	CALL_15
0x4000350	      0xe800000000	                          call 0x4000355	       227	ws.c	FUNCTION_4	IF_15	IF_16	CALL_15
0x4000355	      0x4863542414	         movsxd rdx, dword [rsp + 0x14] 	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x400035a	      0x488b442408	                mov rax, qword [rsp + 8]	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x400035f	          0x4963f4	                        movsxd rsi, r12d	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x4000362	          0x4889d9	                            mov rcx, rbx	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x4000365	        0x488d3c10	                    lea rdi, [rax + rdx]	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x4000369	      0xba01000000	                              mov edx, 1	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x400036e	      0xe800000000	                          call 0x4000373	       228	ws.c	FUNCTION_4	IF_15	IF_16	CALL_16
0x4000373	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       230	ws.c	FUNCTION_4	IF_15	IF_16	CALL_17
0x4000378	          0x4889de	                            mov rsi, rbx	       230	ws.c	FUNCTION_4	IF_15	IF_16	CALL_17
0x400037b	      0xe800000000	                          call 0x4000380	       230	ws.c	FUNCTION_4	IF_15	IF_16	CALL_17
0x4000380	      0x448b7c242c	           mov r15d, dword [rsp + 0x2c] 	       234	ws.c	FUNCTION_4	IF_15	IF_17
0x4000385	          0x4539fe	                          cmp r14d, r15d	       234	ws.c	FUNCTION_4	IF_15	IF_17
0x4000388	            0x743b	                            je 0x40003c5	       234	ws.c	FUNCTION_4	IF_15	IF_17
0x400038a	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	       235	ws.c	FUNCTION_4	IF_15	IF_17	CALL_18
0x4000392	          0x4889de	                            mov rsi, rbx	       235	ws.c	FUNCTION_4	IF_15	IF_17	CALL_18
0x4000395	      0xe800000000	                          call 0x400039a	       235	ws.c	FUNCTION_4	IF_15	IF_17	CALL_18
0x400039a	          0x4963fe	                        movsxd rdi, r14d	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x400039d	      0x48037c2408	                add rdi, qword [rsp + 8]	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x40003a2	          0x4489f8	                           mov eax, r15d	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x40003a5	          0x4429f0	                           sub eax, r14d	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x40003a8	          0x4889d9	                            mov rcx, rbx	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x40003ab	      0xba01000000	                              mov edx, 1	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x40003b0	          0x4863f0	                         movsxd rsi, eax	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x40003b3	      0xe800000000	                          call 0x40003b8	       236	ws.c	FUNCTION_4	IF_15	IF_17	CALL_19
0x40003b8	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       238	ws.c	FUNCTION_4	IF_15	IF_17	CALL_20
0x40003bd	          0x4889de	                            mov rsi, rbx	       238	ws.c	FUNCTION_4	IF_15	IF_17	CALL_20
0x40003c0	      0xe800000000	                          call 0x40003c5	       238	ws.c	FUNCTION_4	IF_15	IF_17	CALL_20
0x40003c5	        0x8b542434	            mov edx, dword [rsp + 0x34] 	       240	ws.c	FUNCTION_4	IF_15	IF_18
0x40003c9	            0x85d2	                           test edx, edx	       240	ws.c	FUNCTION_4	IF_15	IF_18
0x40003cb	            0x755b	                           jne 0x4000428	       240	ws.c	FUNCTION_4	IF_15	IF_18
0x40003cd	        0x8b442430	            mov eax, dword [rsp + 0x30] 	       242	ws.c	FUNCTION_4	IF_15	IF_19
0x40003d1	            0x85c0	                           test eax, eax	       242	ws.c	FUNCTION_4	IF_15	IF_19
0x40003d3	            0x740d	                            je 0x40003e2	       242	ws.c	FUNCTION_4	IF_15	IF_19
0x40003d5	          0x4889de	                            mov rsi, rbx	       243	ws.c	FUNCTION_4	IF_15	CALL_22
0x40003d8	      0xbf0a000000	                            mov edi, 0xa	       243	ws.c	FUNCTION_4	IF_15	CALL_22
0x40003dd	      0xe800000000	                          call 0x40003e2	       243	ws.c	FUNCTION_4	IF_15	CALL_22
0x40003e2	        0x4883c448	                           add rsp, 0x48	       246	ws.c	FUNCTION_4
0x40003e6	            0x89e8	                            mov eax, ebp	       246	ws.c	FUNCTION_4
0x40003e8	              0x5b	                                 pop rbx	       246	ws.c	FUNCTION_4
0x40003e9	              0x5d	                                 pop rbp	       246	ws.c	FUNCTION_4
0x40003ea	            0x415c	                                 pop r12	       246	ws.c	FUNCTION_4
0x40003ec	            0x415d	                                 pop r13	       246	ws.c	FUNCTION_4
0x40003ee	            0x415e	                                 pop r14	       246	ws.c	FUNCTION_4
0x40003f0	            0x415f	                                 pop r15	       246	ws.c	FUNCTION_4
0x40003f2	              0xc3	                                     ret	       246	ws.c	FUNCTION_4
0x40003f3	       0xf1f440000	                   nop dword [rax + rax]	       246	ws.c	FUNCTION_4
0x40003f8	      0xf644242440	           test byte [rsp + 0x24], 0x40 	       166	ws.c	FUNCTION_4	IF_3
0x40003fd	    0xc74424300000	               mov dword [rsp + 0x30], 0	       150	ws.c	FUNCTION_4
0x4000405	    0xc74424340000	               mov dword [rsp + 0x34], 0	       151	ws.c	FUNCTION_4
0x400040d	     0xf8510feffff	                           jne 0x4000223	       166	ws.c	FUNCTION_4	IF_3
0x4000413	      0x448b74242c	           mov r14d, dword [rsp + 0x2c] 	       166	ws.c	FUNCTION_4	IF_3
0x4000418	          0x4531c0	                            xor r8d, r8d	       181	ws.c	FUNCTION_4	FOR_2
0x400041b	            0x31d2	                            xor edx, edx	       148	ws.c	FUNCTION_4
0x400041d	            0x31ed	                            xor ebp, ebp	       147	ws.c	FUNCTION_4
0x400041f	      0xe997feffff	                           jmp 0x40002bb	       147	ws.c	FUNCTION_4
0x4000424	         0xf1f4000	                         nop dword [rax]	       147	ws.c	FUNCTION_4
0x4000428	          0x4889de	                            mov rsi, rbx	       241	ws.c	FUNCTION_4	IF_15	CALL_21
0x400042b	      0xbf0d000000	                            mov edi, 0xd	       241	ws.c	FUNCTION_4	IF_15	CALL_21
0x4000430	      0xe800000000	                          call 0x4000435	       241	ws.c	FUNCTION_4	IF_15	CALL_21
0x4000435	            0xeb96	                           jmp 0x40003cd	       241	ws.c	FUNCTION_4	IF_15	CALL_21
0x4000437	    0x660f1f840000	                    nop word [rax + rax]	       241	ws.c	FUNCTION_4	IF_15	CALL_21
0x4000440	      0x448b74242c	           mov r14d, dword [rsp + 0x2c] 	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000445	            0x31ed	                            xor ebp, ebp	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000447	      0xe926feffff	                           jmp 0x4000272	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x400044c	         0xf1f4000	                         nop dword [rax]	       167	ws.c	FUNCTION_4	IF_3	FOR_1
0x4000450	      0x836c242c01	               sub dword [rsp + 0x2c], 1	       157	ws.c	FUNCTION_4	IF_1
0x4000455	          0x80e602	                               and dh, 2	       159	ws.c	FUNCTION_4	IF_2
0x4000458	      0x486344242c	         movsxd rax, dword [rsp + 0x2c] 	       157	ws.c	FUNCTION_4	IF_1
0x400045d	            0x7433	                            je 0x4000492	       159	ws.c	FUNCTION_4	IF_2
0x400045f	            0x85c0	                           test eax, eax	       159	ws.c	FUNCTION_4	IF_2
0x4000461	            0x7e2f	                           jle 0x4000492	       159	ws.c	FUNCTION_4	IF_2
0x4000463	       0xfb64407ff	         movzx eax, byte [rdi + rax - 1]	       159	ws.c	FUNCTION_4	IF_2
0x4000468	    0xc74424300100	               mov dword [rsp + 0x30], 1	       156	ws.c	FUNCTION_4	IF_1
0x4000470	    0xc74424340000	               mov dword [rsp + 0x34], 0	       151	ws.c	FUNCTION_4
0x4000478	            0x3c0d	                             cmp al, 0xd	       160	ws.c	FUNCTION_4	IF_2
0x400047a	     0xf8598fdffff	                           jne 0x4000218	       160	ws.c	FUNCTION_4	IF_2
0x4000480	      0x836c242c01	               sub dword [rsp + 0x2c], 1	       162	ws.c	FUNCTION_4	IF_2
0x4000485	    0xc74424340100	               mov dword [rsp + 0x34], 1	       161	ws.c	FUNCTION_4	IF_2
0x400048d	      0xe986fdffff	                           jmp 0x4000218	       161	ws.c	FUNCTION_4	IF_2
0x4000492	    0xc74424300100	               mov dword [rsp + 0x30], 1	       156	ws.c	FUNCTION_4	IF_1
0x400049a	    0xc74424340000	               mov dword [rsp + 0x34], 0	       151	ws.c	FUNCTION_4
0x40004a2	      0xe971fdffff	                           jmp 0x4000218	       151	ws.c	FUNCTION_4
0x40004a7	    0xc74424300000	               mov dword [rsp + 0x30], 0	       150	ws.c	FUNCTION_4
0x40004af	    0xc74424340000	               mov dword [rsp + 0x34], 0	       151	ws.c	FUNCTION_4
0x40004b7	      0xe967fdffff	                           jmp 0x4000223	       151	ws.c	FUNCTION_4
whitespace_rule	WHILE,0:FOR,1:DO,0:CALL,9:functions,0:SWITCH,0:IF,6:ELSE,4	51
0x4000650	    0x488b35000000	            mov rsi, qword [0x04000657] 	        78	ws.c	FUNCTION_2	IF_1
0x4000657	              0x53	                                push rbx	        75	ws.c	FUNCTION_2
0x4000658	          0x4889fb	                            mov rbx, rdi	        75	ws.c	FUNCTION_2
0x400065b	          0x4885f6	                           test rsi, rsi	        78	ws.c	FUNCTION_2	IF_1
0x400065e	     0xf848c000000	                            je 0x40006f0	        78	ws.c	FUNCTION_2	IF_1
0x4000664	          0x4889df	                            mov rdi, rbx	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x4000667	      0xe800000000	                          call 0x400066c	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x400066c	            0x85c0	                           test eax, eax	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x400066e	            0x7538	                           jne 0x40006a8	        81	ws.c	FUNCTION_2	IF_2	CALL_2
0x4000670	    0x488b05000000	            mov rax, qword [0x04000677] 	        84	ws.c	FUNCTION_2	IF_2
0x4000677	        0x488b4008	                mov rax, qword [rax + 8]	        84	ws.c	FUNCTION_2	IF_2
0x400067b	        0x488b7808	                mov rdi, qword [rax + 8]	        84	ws.c	FUNCTION_2	IF_2
0x400067f	    0x4881ff000000	                              cmp rdi, 0	        85	ws.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x4000686	            0x7428	                            je 0x40006b0	        85	ws.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x4000688	    0x8b0500000000	            mov eax, dword [0x0400068e] 	        96	ws.c	FUNCTION_2	IF_2	ELSE_1	IF_5	CALL_7
0x400068e	          0x83e03f	                           and eax, 0x3f	        96	ws.c	FUNCTION_2	IF_2	ELSE_1	IF_5	CALL_7
0x4000691	    0x4881ff000000	                              cmp rdi, 0	        94	ws.c	FUNCTION_2	IF_2	ELSE_1	IF_5	CALL_6
0x4000698	            0x7414	                            je 0x40006ae	        94	ws.c	FUNCTION_2	IF_2	ELSE_1	IF_5	CALL_6
0x400069a	          0x4885ff	                           test rdi, rdi	        97	ws.c	FUNCTION_2	IF_2	ELSE_2	IF_6	CALL_8
0x400069d	            0x7409	                            je 0x40006a8	        97	ws.c	FUNCTION_2	IF_2	ELSE_2	IF_6	CALL_8
0x400069f	              0x5b	                                 pop rbx	       107	ws.c	FUNCTION_2
0x40006a0	      0xe91bfeffff	           jmp sym.parse_whitespace_rule	       102	ws.c	FUNCTION_2	IF_2	ELSE_3	CALL_9
0x40006a5	           0xf1f00	                         nop dword [rax]	       102	ws.c	FUNCTION_2	IF_2	ELSE_3	CALL_9
0x40006a8	    0x8b0500000000	            mov eax, dword [0x040006ae] 	        99	ws.c	FUNCTION_2	IF_2	ELSE_2	IF_6
0x40006ae	              0x5b	                                 pop rbx	       107	ws.c	FUNCTION_2
0x40006af	              0xc3	                                     ret	       107	ws.c	FUNCTION_2
0x40006b0	    0x8b0500000000	            mov eax, dword [0x040006b6] 	        87	ws.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x40006b6	      0xbe00000000	                              mov esi, 0	        87	ws.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x40006bb	            0x31d2	                            xor edx, edx	        87	ws.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x40006bd	          0x83e03f	                           and eax, 0x3f	        87	ws.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x40006c0	          0x4863ca	                         movsxd rcx, edx	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x40006c3	        0x48c1e104	                              shl rcx, 4	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x40006c7	     0xfb689000000	                   movzx ecx, byte [rcx]	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x40006ce	          0xf6c101	                              test cl, 1	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x40006d1	            0x7507	                           jne 0x40006da	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x40006d3	          0x83e102	                              and ecx, 2	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x40006d6	            0x7502	                           jne 0x40006da	        90	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x40006d8	             0xb06	                     or eax, dword [rsi]	        92	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	IF_4
0x40006da	          0x83c201	                              add edx, 1	        89	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	CALL_5
0x40006dd	        0x4883c610	                           add rsi, 0x10	        89	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	CALL_5
0x40006e1	          0x83fa07	                              cmp edx, 7	        89	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	CALL_5
0x40006e4	            0x75da	                           jne 0x40006c0	        89	ws.c	FUNCTION_2	IF_2	IF_3	FOR_1	CALL_5
0x40006e6	              0x5b	                                 pop rbx	       107	ws.c	FUNCTION_2
0x40006e7	              0xc3	                                     ret	       107	ws.c	FUNCTION_2
0x40006e8	     0xf1f84000000	                   nop dword [rax + rax]	       107	ws.c	FUNCTION_2
0x40006f0	      0xbf00000000	                              mov edi, 0	        79	ws.c	FUNCTION_2	CALL_1
0x40006f5	            0x31c0	                            xor eax, eax	        79	ws.c	FUNCTION_2	CALL_1
0x40006f7	      0xe800000000	                          call 0x40006fc	        79	ws.c	FUNCTION_2	CALL_1
0x40006fc	          0x4889c6	                            mov rsi, rax	        79	ws.c	FUNCTION_2	CALL_1
0x40006ff	    0x488905000000	            mov qword [0x04000706], rax 	        79	ws.c	FUNCTION_2	CALL_1
0x4000706	      0xe959ffffff	                           jmp 0x4000664	        79	ws.c	FUNCTION_2	CALL_1
ws_check_emit	WHILE,0:FOR,0:DO,0:CALL,1:functions,0:SWITCH,0:IF,0:ELSE,0	1
0x40008d0	      0xe96bf7ffff	                 jmp sym.ws_check_emit_1	       252	ws.c	FUNCTION_5	CALL_1
parse_whitespace_rule	WHILE,1:FOR,1:DO,0:CALL,8:functions,0:SWITCH,0:IF,7:ELSE,2	107
0x40004c0	            0x4157	                                push r15	        26	ws.c	FUNCTION_1
0x40004c2	            0x4156	                                push r14	        26	ws.c	FUNCTION_1
0x40004c4	            0x4155	                                push r13	        26	ws.c	FUNCTION_1
0x40004c6	            0x4154	                                push r12	        26	ws.c	FUNCTION_1
0x40004c8	              0x55	                                push rbp	        26	ws.c	FUNCTION_1
0x40004c9	              0x53	                                push rbx	        26	ws.c	FUNCTION_1
0x40004ca	        0x4883ec18	                           sub rsp, 0x18	        26	ws.c	FUNCTION_1
0x40004ce	          0x4885ff	                           test rdi, rdi	        29	ws.c	FUNCTION_1	WHILE_1
0x40004d1	     0xf8459010000	                            je 0x4000630	        29	ws.c	FUNCTION_1	WHILE_1
0x40004d7	          0x4989fc	                            mov r12, rdi	        29	ws.c	FUNCTION_1	WHILE_1
0x40004da	    0xc744240cc804	           mov dword [rsp + 0xc], 0x4c8 	        29	ws.c	FUNCTION_1	WHILE_1
0x40004e2	    0x660f1f440000	                    nop word [rax + rax]	        29	ws.c	FUNCTION_1	WHILE_1
0x40004e8	          0x4c89e7	                            mov rdi, r12	        35	ws.c	FUNCTION_1	WHILE_1	CALL_1
0x40004eb	      0xbe00000000	                              mov esi, 0	        35	ws.c	FUNCTION_1	WHILE_1	CALL_1
0x40004f0	          0x4531ff	                          xor r15d, r15d	        33	ws.c	FUNCTION_1	WHILE_1
0x40004f3	      0xe800000000	                          call 0x40004f8	        35	ws.c	FUNCTION_1	WHILE_1	CALL_1
0x40004f8	        0x498d1c04	                    lea rbx, [r12 + rax]	        35	ws.c	FUNCTION_1	WHILE_1	CALL_1
0x40004fc	      0xbe2c000000	                           mov esi, 0x2c	        36	ws.c	FUNCTION_1	WHILE_1	CALL_2
0x4000501	          0x4889df	                            mov rdi, rbx	        36	ws.c	FUNCTION_1	WHILE_1	CALL_2
0x4000504	      0xe800000000	                          call 0x4000509	        36	ws.c	FUNCTION_1	WHILE_1	CALL_2
0x4000509	          0x4989c5	                            mov r13, rax	        37	ws.c	FUNCTION_1	WHILE_1
0x400050c	          0x4989c4	                            mov r12, rax	        36	ws.c	FUNCTION_1	WHILE_1	CALL_2
0x400050f	          0x4929dd	                            sub r13, rbx	        37	ws.c	FUNCTION_1	WHILE_1
0x4000512	          0x803b2d	                    cmp byte [rbx], 0x2d	        39	ws.c	FUNCTION_1	WHILE_1	IF_1
0x4000515	     0xf84ad000000	                            je 0x40005c8	        39	ws.c	FUNCTION_1	WHILE_1	IF_1
0x400051b	          0x4d85ed	                           test r13, r13	        44	ws.c	FUNCTION_1	WHILE_1	IF_2
0x400051e	            0x746c	                            je 0x400058c	        44	ws.c	FUNCTION_1	WHILE_1	IF_2
0x4000520	      0xbf00000000	                              mov edi, 0	        44	ws.c	FUNCTION_1	WHILE_1	IF_2
0x4000525	          0x4c89ea	                            mov rdx, r13	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x4000528	          0x4889de	                            mov rsi, rbx	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x400052b	            0x31ed	                            xor ebp, ebp	        44	ws.c	FUNCTION_1	WHILE_1	IF_2
0x400052d	    0x41be00000000	                             mov r14d, 0	        44	ws.c	FUNCTION_1	WHILE_1	IF_2
0x4000533	      0xe800000000	                          call 0x4000538	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x4000538	            0x85c0	                           test eax, eax	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x400053a	            0x741e	                            je 0x400055a	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x400053c	          0x83c501	                              add ebp, 1	        46	ws.c	FUNCTION_1	WHILE_1	FOR_1	CALL_3
0x400053f	          0x83fd07	                              cmp ebp, 7	        46	ws.c	FUNCTION_1	WHILE_1	FOR_1	CALL_3
0x4000542	            0x742e	                            je 0x4000572	        46	ws.c	FUNCTION_1	WHILE_1	FOR_1	CALL_3
0x4000544	          0x498b3e	                    mov rdi, qword [r14]	        46	ws.c	FUNCTION_1	WHILE_1	FOR_1	CALL_3
0x4000547	          0x4c89ea	                            mov rdx, r13	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x400054a	          0x4889de	                            mov rsi, rbx	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x400054d	        0x4983c610	                           add r14, 0x10	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x4000551	      0xe800000000	                          call 0x4000556	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x4000556	            0x85c0	                           test eax, eax	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x4000558	            0x75e2	                           jne 0x400053c	        47	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_3	CALL_4
0x400055a	          0x4863ed	                         movsxd rbp, ebp	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x400055d	        0x48c1e504	                              shl rbp, 4	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x4000561	          0x4585ff	                         test r15d, r15d	        50	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x4000564	            0x7452	                            je 0x40005b8	        50	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x4000566	    0x8b8500000000	                    mov eax, dword [rbp]	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x400056c	            0xf7d0	                                 not eax	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x400056e	        0x2144240c	              and dword [rsp + 0xc], eax	        51	ws.c	FUNCTION_1	WHILE_1	FOR_1	IF_4
0x4000572	      0xbf00000000	                              mov edi, 0	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x4000577	      0xb909000000	                              mov ecx, 9	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x400057c	          0x4889de	                            mov rsi, rbx	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x400057f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x4000581	            0x745d	                            je 0x40005e0	        56	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_5
0x4000583	          0x4d85e4	                           test r12, r12	        29	ws.c	FUNCTION_1	WHILE_1
0x4000586	     0xf855cffffff	                           jne 0x40004e8	        29	ws.c	FUNCTION_1	WHILE_1
0x400058c	        0x8b44240c	              mov eax, dword [rsp + 0xc]	        69	ws.c	FUNCTION_1	IF_7
0x4000590	      0x2500090000	                          and eax, 0x900	        69	ws.c	FUNCTION_1	IF_7
0x4000595	      0x3d00090000	                          cmp eax, 0x900	        69	ws.c	FUNCTION_1	IF_7
0x400059a	     0xf849d000000	                            je 0x400063d	        69	ws.c	FUNCTION_1	IF_7
0x40005a0	        0x8b44240c	              mov eax, dword [rsp + 0xc]	        72	ws.c	FUNCTION_1
0x40005a4	        0x4883c418	                           add rsp, 0x18	        72	ws.c	FUNCTION_1
0x40005a8	              0x5b	                                 pop rbx	        72	ws.c	FUNCTION_1
0x40005a9	              0x5d	                                 pop rbp	        72	ws.c	FUNCTION_1
0x40005aa	            0x415c	                                 pop r12	        72	ws.c	FUNCTION_1
0x40005ac	            0x415d	                                 pop r13	        72	ws.c	FUNCTION_1
0x40005ae	            0x415e	                                 pop r14	        72	ws.c	FUNCTION_1
0x40005b0	            0x415f	                                 pop r15	        72	ws.c	FUNCTION_1
0x40005b2	              0xc3	                                     ret	        72	ws.c	FUNCTION_1
0x40005b3	       0xf1f440000	                   nop dword [rax + rax]	        72	ws.c	FUNCTION_1
0x40005b8	    0x8b8d00000000	                    mov ecx, dword [rbp]	        53	ws.c	FUNCTION_1	WHILE_1	FOR_1	ELSE_1
0x40005be	         0x94c240c	               or dword [rsp + 0xc], ecx	        53	ws.c	FUNCTION_1	WHILE_1	FOR_1	ELSE_1
0x40005c2	            0xebae	                           jmp 0x4000572	        53	ws.c	FUNCTION_1	WHILE_1	FOR_1	ELSE_1
0x40005c4	         0xf1f4000	                         nop dword [rax]	        53	ws.c	FUNCTION_1	WHILE_1	FOR_1	ELSE_1
0x40005c8	        0x4883c301	                              add rbx, 1	        41	ws.c	FUNCTION_1	WHILE_1	IF_1
0x40005cc	        0x4983ed01	                              sub r13, 1	        42	ws.c	FUNCTION_1	WHILE_1	IF_1
0x40005d0	    0x41bf01000000	                             mov r15d, 1	        40	ws.c	FUNCTION_1	WHILE_1	IF_1
0x40005d6	      0xe940ffffff	                           jmp 0x400051b	        40	ws.c	FUNCTION_1	WHILE_1	IF_1
0x40005db	       0xf1f440000	                   nop dword [rax + rax]	        40	ws.c	FUNCTION_1	WHILE_1	IF_1
0x40005e0	        0x4883c309	                              add rbx, 9	        57	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	CALL_6
0x40005e4	      0xba0a000000	                            mov edx, 0xa	       280	stdlib.h	FUNCTION_9	CALL_2
0x40005e9	            0x31f6	                            xor esi, esi	       280	stdlib.h	FUNCTION_9	CALL_2
0x40005eb	          0x4889df	                            mov rdi, rbx	       280	stdlib.h	FUNCTION_9	CALL_2
0x40005ee	      0xe800000000	                          call 0x40005f3	       280	stdlib.h	FUNCTION_9	CALL_2
0x40005f3	          0x8d50ff	                      lea edx, [rax - 1]	        58	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x40005f6	          0x83fa3e	                           cmp edx, 0x3e	        58	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x40005f9	            0x771d	                            ja 0x4000618	        58	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x40005fb	      0x448b6c240c	            mov r13d, dword [rsp + 0xc] 	        59	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x4000600	        0x4183e5c0	                    and r13d, 0xffffffc0	        59	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x4000604	          0x4109c5	                            or r13d, eax	        60	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x4000607	      0x44896c240c	             mov dword [rsp + 0xc], r13d	        60	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x400060c	      0xe972ffffff	                           jmp 0x4000583	        60	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x4000611	     0xf1f80000000	                         nop dword [rax]	        60	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	IF_6
0x4000618	        0x418d75f7	                      lea esi, [r13 - 9]	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x400061c	          0x4889da	                            mov rdx, rbx	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x400061f	      0xbf00000000	                              mov edi, 0	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x4000624	            0x31c0	                            xor eax, eax	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x4000626	      0xe800000000	                          call 0x400062b	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x400062b	      0xe953ffffff	                           jmp 0x4000583	        63	ws.c	FUNCTION_1	WHILE_1	ELSE_1	IF_5	ELSE_2	CALL_7
0x4000630	    0xc744240cc804	           mov dword [rsp + 0xc], 0x4c8 	        27	ws.c	FUNCTION_1
0x4000638	      0xe963ffffff	                           jmp 0x40005a0	        71	ws.c	FUNCTION_1
0x400063d	      0xbf00000000	                              mov edi, 0	        70	ws.c	FUNCTION_1	CALL_8
0x4000642	            0x31c0	                            xor eax, eax	        70	ws.c	FUNCTION_1	CALL_8
0x4000644	      0xe800000000	                          call 0x4000649	        70	ws.c	FUNCTION_1	CALL_8
ws_blank_line	WHILE,1:FOR,0:DO,0:CALL,1:functions,0:SWITCH,0:IF,1:ELSE,0	20
0x4000900	            0x85f6	                           test esi, esi	       267	ws.c	FUNCTION_7	WHILE_1
0x4000902	            0x7e31	                           jle 0x4000935	       267	ws.c	FUNCTION_7	WHILE_1
0x4000904	           0xfb607	                   movzx eax, byte [rdi]	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000907	    0xf68000000000	                      test byte [rax], 1	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x400090e	            0x7430	                            je 0x4000940	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000910	          0x8d46ff	                      lea eax, [rsi - 1]	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000913	      0x488d540701	                lea rdx, [rdi + rax + 1]	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000918	            0xeb12	                           jmp 0x400092c	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x400091a	    0x660f1f440000	                    nop word [rax + rax]	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000920	           0xfb607	                   movzx eax, byte [rdi]	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x4000923	    0xf68000000000	                      test byte [rax], 1	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x400092a	            0x7414	                            je 0x4000940	       268	ws.c	FUNCTION_7	WHILE_1	IF_1	CALL_1
0x400092c	        0x4883c701	                              add rdi, 1	       270	ws.c	FUNCTION_7	WHILE_1
0x4000930	          0x4839d7	                            cmp rdi, rdx	       267	ws.c	FUNCTION_7	WHILE_1
0x4000933	            0x75eb	                           jne 0x4000920	       267	ws.c	FUNCTION_7	WHILE_1
0x4000935	      0xb801000000	                              mov eax, 1	       272	ws.c	FUNCTION_7
0x400093a	              0xc3	                                     ret	       272	ws.c	FUNCTION_7
0x400093b	       0xf1f440000	                   nop dword [rax + rax]	       272	ws.c	FUNCTION_7
0x4000940	            0x31c0	                            xor eax, eax	       269	ws.c	FUNCTION_7	WHILE_1	IF_1
0x4000942	              0xc3	                                     ret	       273	ws.c	FUNCTION_7
ws_fix_copy	WHILE,2:FOR,3:DO,1:CALL,13:functions,0:SWITCH,0:IF,18:ELSE,6	379
0x4000950	            0x4157	                                push r15	       277	ws.c	FUNCTION_8
0x4000952	            0x4156	                                push r14	       277	ws.c	FUNCTION_8
0x4000954	          0x4989f7	                            mov r15, rsi	       277	ws.c	FUNCTION_8
0x4000957	            0x4155	                                push r13	       277	ws.c	FUNCTION_8
0x4000959	            0x4154	                                push r12	       277	ws.c	FUNCTION_8
0x400095b	          0x4989fe	                            mov r14, rdi	       277	ws.c	FUNCTION_8
0x400095e	              0x55	                                push rbp	       277	ws.c	FUNCTION_8
0x400095f	              0x53	                                push rbx	       277	ws.c	FUNCTION_8
0x4000960	          0x4189d2	                           mov r10d, edx	       277	ws.c	FUNCTION_8
0x4000963	        0x4883ec28	                           sub rsp, 0x28	       277	ws.c	FUNCTION_8
0x4000967	          0xf6c140	                           test cl, 0x40	       294	ws.c	FUNCTION_8	IF_1
0x400096a	      0x4c89442408	                 mov qword [rsp + 8], r8	       277	ws.c	FUNCTION_8
0x400096f	            0x7467	                            je 0x40009d8	       294	ws.c	FUNCTION_8	IF_1
0x4000971	            0x85d2	                           test edx, edx	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x4000973	     0xf8ec7040000	                           jle 0x4000e40	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x4000979	          0x4863c2	                         movsxd rax, edx	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x400097c	    0xc74424040000	                  mov dword [rsp + 4], 0	       284	ws.c	FUNCTION_8
0x4000984	       0xfb64406ff	         movzx eax, byte [rsi + rax - 1]	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x4000989	            0x3c0a	                             cmp al, 0xa	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x400098b	     0xf84ea040000	                            je 0x4000e7b	       295	ws.c	FUNCTION_8	IF_1	IF_2
0x4000991	    0xc74424100000	               mov dword [rsp + 0x10], 0	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x4000999	    0xf68000000000	                      test byte [rax], 1	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x40009a0	     0xf8432040000	                            je 0x4000dd8	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x40009a6	          0x4963c2	                        movsxd rax, r10d	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x40009a9	      0x498d4407fe	                lea rax, [r15 + rax - 2]	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x40009ae	            0xeb14	                           jmp 0x40009c4	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x40009b0	           0xfb610	                   movzx edx, byte [rax]	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x40009b3	        0x4883e801	                              sub rax, 1	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x40009b7	    0xf68200000000	                      test byte [rdx], 1	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x40009be	     0xf84d8040000	                            je 0x4000e9c	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x40009c4	        0x4183ea01	                             sub r10d, 1	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x40009c8	            0x75e6	                           jne 0x40009b0	       304	ws.c	FUNCTION_8	IF_1	IF_4	WHILE_1	CALL_2
0x40009ca	    0x41b901000000	                              mov r9d, 1	       306	ws.c	FUNCTION_8	IF_1	IF_4
0x40009d0	      0xe97e040000	                           jmp 0x4000e53	       306	ws.c	FUNCTION_8	IF_1	IF_4
0x40009d5	           0xf1f00	                         nop dword [rax]	       306	ws.c	FUNCTION_8	IF_1	IF_4
0x40009d8	          0x4531c9	                            xor r9d, r9d	       286	ws.c	FUNCTION_8
0x40009db	            0x85d2	                           test edx, edx	       313	ws.c	FUNCTION_8	FOR_1
0x40009dd	    0xc74424100000	               mov dword [rsp + 0x10], 0	       285	ws.c	FUNCTION_8
0x40009e5	    0xc74424040000	                  mov dword [rsp + 4], 0	       284	ws.c	FUNCTION_8
0x40009ed	     0xf8e60040000	                           jle 0x4000e53	       313	ws.c	FUNCTION_8	FOR_1
0x40009f3	    0x41bcffffffff	                    mov r12d, 0xffffffff	       284	ws.c	FUNCTION_8
0x40009f9	            0x89cf	                            mov edi, ecx	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x40009fb	            0x89cb	                            mov ebx, ecx	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x40009fd	          0x4189cd	                           mov r13d, ecx	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000a00	            0x31c0	                            xor eax, eax	       284	ws.c	FUNCTION_8
0x4000a02	            0x31f6	                            xor esi, esi	       284	ws.c	FUNCTION_8
0x4000a04	          0x4489e5	                           mov ebp, r12d	       284	ws.c	FUNCTION_8
0x4000a07	    0x81e700010000	                          and edi, 0x100	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000a0d	          0x83e33f	                           and ebx, 0x3f	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000a10	    0x41b801000000	                              mov r8d, 1	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000a16	    0x4181e5800000	                          and r13d, 0x80	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000a1d	            0xeb20	                           jmp 0x4000a3f	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000a1f	              0x90	                                     nop	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000a20	          0x80fa20	                            cmp dl, 0x20	       320	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0x4000a23	            0x7543	                           jne 0x4000a68	       320	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7
0x4000a25	            0x85ff	                           test edi, edi	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000a27	          0x4189c4	                           mov r12d, eax	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000a2a	            0x740a	                            je 0x4000a36	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000a2c	            0x89c2	                            mov edx, eax	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000a2e	            0x29ea	                            sub edx, ebp	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000a30	            0x39d3	                            cmp ebx, edx	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000a32	        0x410f46f0	                         cmovbe esi, r8d	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000a36	        0x4883c001	                              add rax, 1	       322	ws.c	FUNCTION_8	FOR_1	ELSE_1	IF_7	IF_8
0x4000a3a	          0x4139c2	                           cmp r10d, eax	       313	ws.c	FUNCTION_8	FOR_1
0x4000a3d	            0x7e29	                           jle 0x4000a68	       313	ws.c	FUNCTION_8	FOR_1
0x4000a3f	      0x410fb61407	             movzx edx, byte [r15 + rax]	       314	ws.c	FUNCTION_8	FOR_1
0x4000a44	          0x80fa09	                               cmp dl, 9	       315	ws.c	FUNCTION_8	FOR_1	IF_5
0x4000a47	            0x75d7	                           jne 0x4000a20	       315	ws.c	FUNCTION_8	FOR_1	IF_5
0x4000a49	          0x4585ed	                         test r13d, r13d	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000a4c	            0x89c5	                            mov ebp, eax	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000a4e	            0x74e6	                            je 0x4000a36	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000a50	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000a54	        0x410f45f0	                         cmovne esi, r8d	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000a58	        0x4883c001	                              add rax, 1	       317	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000a5c	          0x4139c2	                           cmp r10d, eax	       313	ws.c	FUNCTION_8	FOR_1
0x4000a5f	            0x7fde	                            jg 0x4000a3f	       313	ws.c	FUNCTION_8	FOR_1
0x4000a61	     0xf1f80000000	                         nop dword [rax]	       313	ws.c	FUNCTION_8	FOR_1
0x4000a68	            0x85f6	                           test esi, esi	       329	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000a6a	     0xf8460020000	                            je 0x4000cd0	       329	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000a70	          0xf6c501	                              test ch, 1	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000a73	     0xf8447010000	                            je 0x4000bc0	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000a79	          0x4439e5	                           cmp ebp, r12d	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000a7c	      0x418d7c2401	                      lea edi, [r12 + 1]	       337	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000a81	           0xf9cc0	                                 setl al	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000a84	            0x84c0	                             test al, al	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000a86	        0x897c2414	             mov dword [rsp + 0x14], edi	       337	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000a8a	     0xf8430010000	                            je 0x4000bc0	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000a90	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       336	ws.c	FUNCTION_8	ELSE_2	IF_9	IF_10	IF_11
0x4000a94	          0x83e13f	                           and ecx, 0x3f	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000a97	          0x4c89fd	                            mov rbp, r15	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000a9a	            0x89cb	                            mov ebx, ecx	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000a9c	      0x4489542418	            mov dword [rsp + 0x18], r10d	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000aa1	          0x83e801	                              sub eax, 1	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000aa4	      0x4d8d640701	                lea r12, [r15 + rax + 1]	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000aa9	            0x31c0	                            xor eax, eax	       319	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000aab	            0xeb47	                           jmp 0x4000af4	       319	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000aad	           0xf1f00	                         nop dword [rax]	       319	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000ab0	          0x498b06	                    mov rax, qword [r14]	       319	ws.c	FUNCTION_8	FOR_1	IF_5	IF_6
0x4000ab3	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_13
0x4000ab6	     0xf856c010000	                           jne 0x4000c28	       141	strbuf.h	FUNCTION_13
0x4000abc	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000ac1	          0x4c89f7	                            mov rdi, r14	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000ac4	      0xe800000000	                          call 0x4000ac9	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000ac9	        0x498b5608	                mov rdx, qword [r14 + 8]	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000acd	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       229	strbuf.h	FUNCTION_15
0x4000ad1	        0x488d7201	                      lea rsi, [rdx + 1]	       229	strbuf.h	FUNCTION_15
0x4000ad5	        0x49897608	                mov qword [r14 + 8], rsi	       229	strbuf.h	FUNCTION_15
0x4000ad9	        0x44882c10	              mov byte [rax + rdx], r13b	       229	strbuf.h	FUNCTION_15
0x4000add	        0x498b4608	                mov rax, qword [r14 + 8]	       230	strbuf.h	FUNCTION_15
0x4000ae1	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       230	strbuf.h	FUNCTION_15
0x4000ae5	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_15
0x4000ae9	            0x31c0	                            xor eax, eax	       349	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12
0x4000aeb	        0x4883c501	                              add rbp, 1	       349	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12
0x4000aef	          0x4939ec	                            cmp r12, rbp	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000af2	            0x745c	                            je 0x4000b50	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000af4	      0x440fb66d00	                  movzx r13d, byte [rbp]	       347	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000af9	        0x4180fd20	                          cmp r13b, 0x20	       348	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12
0x4000afd	            0x75b1	                           jne 0x4000ab0	       348	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	IF_12
0x4000aff	          0x83c001	                              add eax, 1	       352	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4
0x4000b02	            0x39c3	                            cmp ebx, eax	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000b04	            0x75e5	                           jne 0x4000aeb	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000b06	          0x498b06	                    mov rax, qword [r14]	       353	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13	CALL_5
0x4000b09	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_13
0x4000b0c	     0xf84ce020000	                            je 0x4000de0	       141	strbuf.h	FUNCTION_13
0x4000b12	        0x498b5608	                mov rdx, qword [r14 + 8]	       141	strbuf.h	FUNCTION_13
0x4000b16	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000b1a	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000b1d	     0xf84bd020000	                            je 0x4000de0	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000b23	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       229	strbuf.h	FUNCTION_15
0x4000b27	        0x488d7201	                      lea rsi, [rdx + 1]	       229	strbuf.h	FUNCTION_15
0x4000b2b	        0x4883c501	                              add rbp, 1	       229	strbuf.h	FUNCTION_15
0x4000b2f	        0x49897608	                mov qword [r14 + 8], rsi	       229	strbuf.h	FUNCTION_15
0x4000b33	        0xc6041009	                 mov byte [rax + rdx], 9	       229	strbuf.h	FUNCTION_15
0x4000b37	        0x498b4608	                mov rax, qword [r14 + 8]	       230	strbuf.h	FUNCTION_15
0x4000b3b	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       230	strbuf.h	FUNCTION_15
0x4000b3f	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_15
0x4000b43	            0x31c0	                            xor eax, eax	       355	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2	ELSE_4	IF_13
0x4000b45	          0x4939ec	                            cmp r12, rbp	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000b48	            0x75aa	                           jne 0x4000af4	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000b4a	    0x660f1f440000	                    nop word [rax + rax]	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000b50	            0x85c0	                           test eax, eax	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000b52	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000b57	          0x8d58ff	                      lea ebx, [rax - 1]	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000b5a	            0x7474	                            je 0x4000bd0	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000b5c	          0x4489d5	                           mov ebp, r10d	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000b5f	            0xeb40	                           jmp 0x4000ba1	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000b61	     0xf1f80000000	                         nop dword [rax]	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000b68	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000b6d	          0x4c89f7	                            mov rdi, r14	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000b70	      0xe800000000	                          call 0x4000b75	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000b75	        0x498b5608	                mov rdx, qword [r14 + 8]	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000b79	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       229	strbuf.h	FUNCTION_15
0x4000b7d	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_15
0x4000b81	          0x83eb01	                              sub ebx, 1	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000b84	          0x83fbff	             cmp ebx, 0xffffffffffffffff	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000b87	        0x49894e08	                mov qword [r14 + 8], rcx	       229	strbuf.h	FUNCTION_15
0x4000b8b	        0xc6041020	              mov byte [rax + rdx], 0x20	       229	strbuf.h	FUNCTION_15
0x4000b8f	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       230	strbuf.h	FUNCTION_15
0x4000b93	        0x498b4608	                mov rax, qword [r14 + 8]	       230	strbuf.h	FUNCTION_15
0x4000b97	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_15
0x4000b9b	     0xf849f000000	                            je 0x4000c40	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000ba1	          0x498b06	                    mov rax, qword [r14]	       359	ws.c	FUNCTION_8	ELSE_2	IF_9	WHILE_2
0x4000ba4	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_13
0x4000ba7	            0x74bf	                            je 0x4000b68	       141	strbuf.h	FUNCTION_13
0x4000ba9	        0x498b5608	                mov rdx, qword [r14 + 8]	       141	strbuf.h	FUNCTION_13
0x4000bad	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000bb1	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000bb4	            0x75c3	                           jne 0x4000b79	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000bb6	            0xebb0	                           jmp 0x4000b68	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000bb8	     0xf1f84000000	                   nop dword [rax + rax]	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000bc0	          0x83c501	                              add ebp, 1	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000bc3	        0x896c2414	             mov dword [rsp + 0x14], ebp	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000bc7	     0xf85c3feffff	                           jne 0x4000a90	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000bcd	           0xf1f00	                         nop dword [rax]	       346	ws.c	FUNCTION_8	ELSE_2	IF_9	ELSE_3	FOR_2
0x4000bd0	      0x4c63642414	         movsxd r12, dword [rsp + 0x14] 	       361	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000bd5	      0xc644241401	                mov byte [rsp + 0x14], 1	       361	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000bda	          0x4529e2	                          sub r10d, r12d	       361	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000bdd	          0x4d01e7	                            add r15, r12	       362	ws.c	FUNCTION_8	ELSE_2	IF_9
0x4000be0	          0x4963d2	                        movsxd rdx, r10d	       381	ws.c	FUNCTION_8	CALL_11
0x4000be3	          0x4c89fe	                            mov rsi, r15	       381	ws.c	FUNCTION_8	CALL_11
0x4000be6	          0x4c89f7	                            mov rdi, r14	       381	ws.c	FUNCTION_8	CALL_11
0x4000be9	      0xe800000000	                          call 0x4000bee	       381	ws.c	FUNCTION_8	CALL_11
0x4000bee	        0x8b542410	            mov edx, dword [rsp + 0x10] 	       382	ws.c	FUNCTION_8	IF_16
0x4000bf2	            0x85d2	                           test edx, edx	       382	ws.c	FUNCTION_8	IF_16
0x4000bf4	     0xf8596000000	                           jne 0x4000c90	       382	ws.c	FUNCTION_8	IF_16
0x4000bfa	        0x8b442404	                mov eax, dword [rsp + 4]	       384	ws.c	FUNCTION_8	IF_17
0x4000bfe	            0x85c0	                           test eax, eax	       384	ws.c	FUNCTION_8	IF_17
0x4000c00	            0x7546	                           jne 0x4000c48	       384	ws.c	FUNCTION_8	IF_17
0x4000c02	      0x488b442408	                mov rax, qword [rsp + 8]	       386	ws.c	FUNCTION_8	IF_18
0x4000c07	          0x4885c0	                           test rax, rax	       386	ws.c	FUNCTION_8	IF_18
0x4000c0a	            0x740a	                            je 0x4000c16	       386	ws.c	FUNCTION_8	IF_18
0x4000c0c	      0x807c241400	                cmp byte [rsp + 0x14], 0	       386	ws.c	FUNCTION_8	IF_18
0x4000c11	            0x7403	                            je 0x4000c16	       386	ws.c	FUNCTION_8	IF_18
0x4000c13	          0x830001	                      add dword [rax], 1	       387	ws.c	FUNCTION_8	IF_18
0x4000c16	        0x4883c428	                           add rsp, 0x28	       388	ws.c	FUNCTION_8
0x4000c1a	              0x5b	                                 pop rbx	       388	ws.c	FUNCTION_8
0x4000c1b	              0x5d	                                 pop rbp	       388	ws.c	FUNCTION_8
0x4000c1c	            0x415c	                                 pop r12	       388	ws.c	FUNCTION_8
0x4000c1e	            0x415d	                                 pop r13	       388	ws.c	FUNCTION_8
0x4000c20	            0x415e	                                 pop r14	       388	ws.c	FUNCTION_8
0x4000c22	            0x415f	                                 pop r15	       388	ws.c	FUNCTION_8
0x4000c24	              0xc3	                                     ret	       388	ws.c	FUNCTION_8
0x4000c25	           0xf1f00	                         nop dword [rax]	       388	ws.c	FUNCTION_8
0x4000c28	        0x498b5608	                mov rdx, qword [r14 + 8]	       141	strbuf.h	FUNCTION_13
0x4000c2c	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000c30	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000c33	     0xf8594feffff	                           jne 0x4000acd	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000c39	      0xe97efeffff	                           jmp 0x4000abc	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000c3e	            0x6690	                                     nop	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000c40	          0x4189ea	                           mov r10d, ebp	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000c43	            0xeb8b	                           jmp 0x4000bd0	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000c45	           0xf1f00	                         nop dword [rax]	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000c48	          0x498b06	                    mov rax, qword [r14]	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000c4b	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_13
0x4000c4e	     0xf84cc010000	                            je 0x4000e20	       141	strbuf.h	FUNCTION_13
0x4000c54	        0x498b5608	                mov rdx, qword [r14 + 8]	       141	strbuf.h	FUNCTION_13
0x4000c58	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000c5c	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000c5f	     0xf84bb010000	                            je 0x4000e20	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000c65	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       229	strbuf.h	FUNCTION_15
0x4000c69	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_15
0x4000c6d	        0x49894e08	                mov qword [r14 + 8], rcx	       229	strbuf.h	FUNCTION_15
0x4000c71	        0xc604100a	               mov byte [rax + rdx], 0xa	       229	strbuf.h	FUNCTION_15
0x4000c75	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       230	strbuf.h	FUNCTION_15
0x4000c79	        0x498b4608	                mov rax, qword [r14 + 8]	       230	strbuf.h	FUNCTION_15
0x4000c7d	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_15
0x4000c81	      0xe97cffffff	                           jmp 0x4000c02	       230	strbuf.h	FUNCTION_15
0x4000c86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       230	strbuf.h	FUNCTION_15
0x4000c90	          0x498b06	                    mov rax, qword [r14]	       230	strbuf.h	FUNCTION_15
0x4000c93	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_13
0x4000c96	     0xf8464010000	                            je 0x4000e00	       141	strbuf.h	FUNCTION_13
0x4000c9c	        0x498b5608	                mov rdx, qword [r14 + 8]	       141	strbuf.h	FUNCTION_13
0x4000ca0	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000ca4	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000ca7	     0xf8453010000	                            je 0x4000e00	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000cad	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       229	strbuf.h	FUNCTION_15
0x4000cb1	        0x488d4a01	                      lea rcx, [rdx + 1]	       229	strbuf.h	FUNCTION_15
0x4000cb5	        0x49894e08	                mov qword [r14 + 8], rcx	       229	strbuf.h	FUNCTION_15
0x4000cb9	        0xc604100d	               mov byte [rax + rdx], 0xd	       229	strbuf.h	FUNCTION_15
0x4000cbd	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       230	strbuf.h	FUNCTION_15
0x4000cc1	        0x498b4608	                mov rax, qword [r14 + 8]	       230	strbuf.h	FUNCTION_15
0x4000cc5	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_15
0x4000cc9	      0xe92cffffff	                           jmp 0x4000bfa	       230	strbuf.h	FUNCTION_15
0x4000cce	            0x6690	                                     nop	       230	strbuf.h	FUNCTION_15
0x4000cd0	            0x89c8	                            mov eax, ecx	       230	strbuf.h	FUNCTION_15
0x4000cd2	          0xc1e80b	                            shr eax, 0xb	       230	strbuf.h	FUNCTION_15
0x4000cd5	          0x83fdff	             cmp ebp, 0xffffffffffffffff	       230	strbuf.h	FUNCTION_15
0x4000cd8	           0xf95c2	                                setne dl	       230	strbuf.h	FUNCTION_15
0x4000cdb	            0x20c2	                              and dl, al	       364	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000cdd	        0x88542414	               mov byte [rsp + 0x14], dl	       364	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000ce1	     0xf846c010000	                            je 0x4000e53	       364	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000ce7	          0x4531ed	                          xor r13d, r13d	       367	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000cea	            0x89cb	                            mov ebx, ecx	       367	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000cec	          0x83c501	                              add ebp, 1	       367	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000cef	      0x430fb6042f	             movzx eax, byte [r15 + r13]	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4000cf4	          0x83e33f	                           and ebx, 0x3f	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4000cf7	        0x4d636608	            movsxd r12, dword [r14 + 8] 	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4000cfb	      0x448954241c	            mov dword [rsp + 0x1c], r10d	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4000d00	            0x3c09	                               cmp al, 9	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4000d02	     0xf84c2000000	                            je 0x4000dca	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4000d08	          0x498b16	                    mov rdx, qword [r14]	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4000d0b	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_13
0x4000d0e	            0x7553	                           jne 0x4000d63	       141	strbuf.h	FUNCTION_13
0x4000d10	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000d15	          0x4c89f7	                            mov rdi, r14	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000d18	        0x88442418	               mov byte [rsp + 0x18], al	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000d1c	      0xe800000000	                          call 0x4000d21	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000d21	       0xfb6442418	           movzx eax, byte [rsp + 0x18] 	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000d26	        0x498b7608	                mov rsi, qword [r14 + 8]	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000d2a	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       229	strbuf.h	FUNCTION_15
0x4000d2e	        0x488d7e01	                      lea rdi, [rsi + 1]	       229	strbuf.h	FUNCTION_15
0x4000d32	        0x49897e08	                mov qword [r14 + 8], rdi	       229	strbuf.h	FUNCTION_15
0x4000d36	          0x880432	                mov byte [rdx + rsi], al	       229	strbuf.h	FUNCTION_15
0x4000d39	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       230	strbuf.h	FUNCTION_15
0x4000d3d	        0x498b4608	                mov rax, qword [r14 + 8]	       230	strbuf.h	FUNCTION_15
0x4000d41	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_15
0x4000d45	        0x4983c501	                              add r13, 1	       230	strbuf.h	FUNCTION_15
0x4000d49	          0x4439ed	                           cmp ebp, r13d	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0x4000d4c	     0xf8e16010000	                           jle 0x4000e68	       368	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3
0x4000d52	      0x430fb6042f	             movzx eax, byte [r15 + r13]	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4000d57	            0x3c09	                               cmp al, 9	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4000d59	            0x746f	                            je 0x4000dca	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4000d5b	          0x498b16	                    mov rdx, qword [r14]	       369	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15
0x4000d5e	          0x4885d2	                           test rdx, rdx	       141	strbuf.h	FUNCTION_13
0x4000d61	            0x74ad	                            je 0x4000d10	       141	strbuf.h	FUNCTION_13
0x4000d63	        0x498b7608	                mov rsi, qword [r14 + 8]	       141	strbuf.h	FUNCTION_13
0x4000d67	        0x4883ea01	                              sub rdx, 1	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000d6b	          0x4839d6	                            cmp rsi, rdx	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000d6e	            0x75ba	                           jne 0x4000d2a	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000d70	            0xeb9e	                           jmp 0x4000d10	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000d72	    0x660f1f440000	                    nop word [rax + rax]	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000d78	        0x498b5608	                mov rdx, qword [r14 + 8]	       141	strbuf.h	FUNCTION_13
0x4000d7c	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000d80	          0x4839c2	                            cmp rdx, rax	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000d83	            0x7514	                           jne 0x4000d99	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000d85	           0xf1f00	                         nop dword [rax]	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x4000d88	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000d8d	          0x4c89f7	                            mov rdi, r14	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000d90	      0xe800000000	                          call 0x4000d95	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000d95	        0x498b5608	                mov rdx, qword [r14 + 8]	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000d99	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       229	strbuf.h	FUNCTION_15
0x4000d9d	        0x488d7201	                      lea rsi, [rdx + 1]	       229	strbuf.h	FUNCTION_15
0x4000da1	        0x49897608	                mov qword [r14 + 8], rsi	       229	strbuf.h	FUNCTION_15
0x4000da5	        0xc6041020	              mov byte [rax + rdx], 0x20	       229	strbuf.h	FUNCTION_15
0x4000da9	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       230	strbuf.h	FUNCTION_15
0x4000dad	        0x498b4608	                mov rax, qword [r14 + 8]	       230	strbuf.h	FUNCTION_15
0x4000db1	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_15
0x4000db5	        0x498b4608	                mov rax, qword [r14 + 8]	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000db9	            0x31d2	                            xor edx, edx	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000dbb	          0x4c29e0	                            sub rax, r12	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000dbe	          0x48f7f3	                                 div rbx	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000dc1	          0x4885d2	                           test rdx, rdx	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000dc4	     0xf847bffffff	                            je 0x4000d45	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000dca	          0x498b06	                    mov rax, qword [r14]	       372	ws.c	FUNCTION_8	ELSE_5	IF_14	FOR_3	IF_15	DO_1
0x4000dcd	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_13
0x4000dd0	            0x74b6	                            je 0x4000d88	       141	strbuf.h	FUNCTION_13
0x4000dd2	            0xeba4	                           jmp 0x4000d78	       141	strbuf.h	FUNCTION_13
0x4000dd4	         0xf1f4000	                         nop dword [rax]	       141	strbuf.h	FUNCTION_13
0x4000dd8	          0x4531c9	                            xor r9d, r9d	       286	ws.c	FUNCTION_8
0x4000ddb	      0xe913fcffff	                           jmp 0x40009f3	       286	ws.c	FUNCTION_8
0x4000de0	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000de5	          0x4c89f7	                            mov rdi, r14	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000de8	      0xe800000000	                          call 0x4000ded	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000ded	        0x498b5608	                mov rdx, qword [r14 + 8]	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000df1	      0xe92dfdffff	                           jmp 0x4000b23	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000df6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000e00	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000e05	          0x4c89f7	                            mov rdi, r14	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000e08	      0xe800000000	                          call 0x4000e0d	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000e0d	        0x498b5608	                mov rdx, qword [r14 + 8]	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000e11	      0xe997feffff	                           jmp 0x4000cad	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000e16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000e20	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000e25	          0x4c89f7	                            mov rdi, r14	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000e28	      0xe800000000	                          call 0x4000e2d	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000e2d	        0x498b5608	                mov rdx, qword [r14 + 8]	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000e31	      0xe92ffeffff	                           jmp 0x4000c65	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000e36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       228	strbuf.h	FUNCTION_15	CALL_2
0x4000e40	    0xc74424040000	                  mov dword [rsp + 4], 0	       284	ws.c	FUNCTION_8
0x4000e48	          0x4531c9	                            xor r9d, r9d	       286	ws.c	FUNCTION_8
0x4000e4b	    0xc74424100000	               mov dword [rsp + 0x10], 0	       286	ws.c	FUNCTION_8
0x4000e53	          0x4489c8	                            mov eax, r9d	       286	ws.c	FUNCTION_8
0x4000e56	          0x83e001	                              and eax, 1	       286	ws.c	FUNCTION_8
0x4000e59	        0x88442414	               mov byte [rsp + 0x14], al	       286	ws.c	FUNCTION_8
0x4000e5d	      0xe97efdffff	                           jmp 0x4000be0	       286	ws.c	FUNCTION_8
0x4000e62	    0x660f1f440000	                    nop word [rax + rax]	       286	ws.c	FUNCTION_8
0x4000e68	      0x448b54241c	           mov r10d, dword [rsp + 0x1c] 	       286	ws.c	FUNCTION_8
0x4000e6d	          0x4129ea	                           sub r10d, ebp	       376	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000e70	          0x4863ed	                         movsxd rbp, ebp	       377	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000e73	          0x4901ef	                            add r15, rbp	       377	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000e76	      0xe965fdffff	                           jmp 0x4000be0	       377	ws.c	FUNCTION_8	ELSE_5	IF_14
0x4000e7b	          0x83ea01	                              sub edx, 1	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000e7e	            0x7427	                            je 0x4000ea7	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000e80	          0x4863c2	                         movsxd rax, edx	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000e83	       0xfb64406ff	         movzx eax, byte [rsi + rax - 1]	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000e88	            0x3c0d	                             cmp al, 0xd	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000e8a	            0x7428	                            je 0x4000eb4	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000e8c	          0x4189d2	                           mov r10d, edx	       298	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000e8f	    0xc74424040100	                  mov dword [rsp + 4], 1	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x4000e97	      0xe9f5faffff	                           jmp 0x4000991	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x4000e9c	    0x41b901000000	                              mov r9d, 1	       306	ws.c	FUNCTION_8	IF_1	IF_4
0x4000ea2	      0xe94cfbffff	                           jmp 0x40009f3	       306	ws.c	FUNCTION_8	IF_1	IF_4
0x4000ea7	          0x4531d2	                          xor r10d, r10d	       306	ws.c	FUNCTION_8	IF_1	IF_4
0x4000eaa	    0xc74424040100	                  mov dword [rsp + 4], 1	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x4000eb2	            0xeb94	                           jmp 0x4000e48	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x4000eb4	            0x89c8	                            mov eax, ecx	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000eb6	        0x4183ea02	                             sub r10d, 2	       300	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000eba	          0xc1e809	                              shr eax, 9	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000ebd	          0x83e001	                              and eax, 1	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000ec0	          0x4585d2	                         test r10d, r10d	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x4000ec3	        0x89442410	             mov dword [rsp + 0x10], eax	       299	ws.c	FUNCTION_8	IF_1	IF_2	IF_3
0x4000ec7	            0x7e15	                           jle 0x4000ede	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x4000ec9	          0x4963c2	                        movsxd rax, r10d	       303	ws.c	FUNCTION_8	IF_1	IF_4	CALL_1
0x4000ecc	    0xc74424040100	                  mov dword [rsp + 4], 1	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x4000ed4	       0xfb64406ff	         movzx eax, byte [rsi + rax - 1]	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x4000ed9	      0xe9bbfaffff	                           jmp 0x4000999	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x4000ede	          0x4531c9	                            xor r9d, r9d	       286	ws.c	FUNCTION_8
0x4000ee1	    0xc74424040100	                  mov dword [rsp + 4], 1	       296	ws.c	FUNCTION_8	IF_1	IF_2
0x4000ee9	      0xe965ffffff	                           jmp 0x4000e53	       296	ws.c	FUNCTION_8	IF_1	IF_2
whitespace_error_string	WHILE,0:FOR,0:DO,0:CALL,11:functions,0:SWITCH,0:IF,10:ELSE,1	96
0x4000710	              0x55	                                push rbp	       111	ws.c	FUNCTION_3
0x4000711	              0x53	                                push rbx	       111	ws.c	FUNCTION_3
0x4000712	            0x89fb	                            mov ebx, edi	       111	ws.c	FUNCTION_3
0x4000714	        0x4883ec28	                           sub rsp, 0x28	       111	ws.c	FUNCTION_3
0x4000718	    0x64488b042528	                mov rax, qword fs:[0x28]	       111	ws.c	FUNCTION_3
0x4000721	      0x4889442418	             mov qword [rsp + 0x18], rax	       111	ws.c	FUNCTION_3
0x4000726	            0x31c0	                            xor eax, eax	       111	ws.c	FUNCTION_3
0x4000728	            0x89f8	                            mov eax, edi	       113	ws.c	FUNCTION_3	IF_1
0x400072a	    0x48c704240000	                      mov qword [rsp], 0	       112	ws.c	FUNCTION_3
0x4000732	    0x48c744240800	                  mov qword [rsp + 8], 0	       112	ws.c	FUNCTION_3
0x400073b	      0x2540040000	                          and eax, 0x440	       113	ws.c	FUNCTION_3	IF_1
0x4000740	    0x48c744241000	               mov qword [rsp + 0x10], 0	       112	ws.c	FUNCTION_3
0x4000749	          0x4889e5	                            mov rbp, rsp	       279	strbuf.h	FUNCTION_16	CALL_2
0x400074c	      0x3d40040000	                          cmp eax, 0x440	       113	ws.c	FUNCTION_3	IF_1
0x4000751	     0xf8459010000	                            je 0x40008b0	       113	ws.c	FUNCTION_3	IF_1
0x4000757	        0x40f6c740	                          test dil, 0x40	       116	ws.c	FUNCTION_3	ELSE_1	IF_2
0x400075b	     0xf859f000000	                           jne 0x4000800	       116	ws.c	FUNCTION_3	ELSE_1	IF_2
0x4000761	          0xf6c704	                              test bh, 4	       118	ws.c	FUNCTION_3	ELSE_1	IF_3
0x4000764	     0xf85cb000000	                           jne 0x4000835	       118	ws.c	FUNCTION_3	ELSE_1	IF_3
0x400076a	          0xf6c380	                           test bl, 0x80	       124	ws.c	FUNCTION_3	IF_5
0x400076d	            0x741e	                            je 0x400078d	       124	ws.c	FUNCTION_3	IF_5
0x400076f	    0x48837c240800	                  cmp qword [rsp + 8], 0	       125	ws.c	FUNCTION_3	IF_5	IF_6
0x4000775	     0xf85f5000000	                           jne 0x4000870	       125	ws.c	FUNCTION_3	IF_5	IF_6
0x400077b	      0xba1a000000	                           mov edx, 0x1a	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000780	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000785	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000788	      0xe800000000	                          call 0x400078d	       279	strbuf.h	FUNCTION_16	CALL_2
0x400078d	          0xf6c701	                              test bh, 1	       129	ws.c	FUNCTION_3	IF_7
0x4000790	            0x741e	                            je 0x40007b0	       129	ws.c	FUNCTION_3	IF_7
0x4000792	    0x48837c240800	                  cmp qword [rsp + 8], 0	       130	ws.c	FUNCTION_3	IF_7	IF_8
0x4000798	     0xf85f2000000	                           jne 0x4000890	       130	ws.c	FUNCTION_3	IF_7	IF_8
0x400079e	      0xba12000000	                           mov edx, 0x12	       279	strbuf.h	FUNCTION_16	CALL_2
0x40007a3	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_16	CALL_2
0x40007a8	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_16	CALL_2
0x40007ab	      0xe800000000	                          call 0x40007b0	       279	strbuf.h	FUNCTION_16	CALL_2
0x40007b0	          0x80e708	                               and bh, 8	       134	ws.c	FUNCTION_3	IF_9
0x40007b3	            0x741e	                            je 0x40007d3	       134	ws.c	FUNCTION_3	IF_9
0x40007b5	    0x48837c240800	                  cmp qword [rsp + 8], 0	       135	ws.c	FUNCTION_3	IF_9	IF_10
0x40007bb	     0xf858f000000	                           jne 0x4000850	       135	ws.c	FUNCTION_3	IF_9	IF_10
0x40007c1	      0xba0d000000	                            mov edx, 0xd	       279	strbuf.h	FUNCTION_16	CALL_2
0x40007c6	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_16	CALL_2
0x40007cb	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_16	CALL_2
0x40007ce	      0xe800000000	                          call 0x40007d3	       279	strbuf.h	FUNCTION_16	CALL_2
0x40007d3	            0x31f6	                            xor esi, esi	       139	ws.c	FUNCTION_3	CALL_11
0x40007d5	          0x4889ef	                            mov rdi, rbp	       139	ws.c	FUNCTION_3	CALL_11
0x40007d8	      0xe800000000	                          call 0x40007dd	       139	ws.c	FUNCTION_3	CALL_11
0x40007dd	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       140	ws.c	FUNCTION_3
0x40007e2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       140	ws.c	FUNCTION_3
0x40007eb	     0xf85d6000000	                           jne 0x40008c7	       140	ws.c	FUNCTION_3
0x40007f1	        0x4883c428	                           add rsp, 0x28	       140	ws.c	FUNCTION_3
0x40007f5	              0x5b	                                 pop rbx	       140	ws.c	FUNCTION_3
0x40007f6	              0x5d	                                 pop rbp	       140	ws.c	FUNCTION_3
0x40007f7	              0xc3	                                     ret	       140	ws.c	FUNCTION_3
0x40007f8	     0xf1f84000000	                   nop dword [rax + rax]	       140	ws.c	FUNCTION_3
0x4000800	      0xba13000000	                           mov edx, 0x13	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000805	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_16	CALL_2
0x400080a	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_16	CALL_2
0x400080d	      0xe800000000	                          call 0x4000812	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000812	          0xf6c704	                              test bh, 4	       118	ws.c	FUNCTION_3	ELSE_1	IF_3
0x4000815	     0xf844fffffff	                            je 0x400076a	       118	ws.c	FUNCTION_3	ELSE_1	IF_3
0x400081b	    0x48837c240800	                  cmp qword [rsp + 8], 0	       119	ws.c	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4000821	            0x7412	                            je 0x4000835	       119	ws.c	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4000823	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000828	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_16	CALL_2
0x400082d	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000830	      0xe800000000	                          call 0x4000835	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000835	      0xba15000000	                           mov edx, 0x15	       279	strbuf.h	FUNCTION_16	CALL_2
0x400083a	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_16	CALL_2
0x400083f	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000842	      0xe800000000	                          call 0x4000847	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000847	      0xe91effffff	                           jmp 0x400076a	       279	strbuf.h	FUNCTION_16	CALL_2
0x400084c	         0xf1f4000	                         nop dword [rax]	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000850	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000855	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_16	CALL_2
0x400085a	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_16	CALL_2
0x400085d	      0xe800000000	                          call 0x4000862	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000862	      0xe95affffff	                           jmp 0x40007c1	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000867	    0x660f1f840000	                    nop word [rax + rax]	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000870	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000875	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_16	CALL_2
0x400087a	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_16	CALL_2
0x400087d	      0xe800000000	                          call 0x4000882	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000882	      0xe9f4feffff	                           jmp 0x400077b	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000887	    0x660f1f840000	                    nop word [rax + rax]	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000890	      0xba02000000	                              mov edx, 2	       279	strbuf.h	FUNCTION_16	CALL_2
0x4000895	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_16	CALL_2
0x400089a	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_16	CALL_2
0x400089d	      0xe800000000	                          call 0x40008a2	       279	strbuf.h	FUNCTION_16	CALL_2
0x40008a2	      0xe9f7feffff	                           jmp 0x400079e	       279	strbuf.h	FUNCTION_16	CALL_2
0x40008a7	    0x660f1f840000	                    nop word [rax + rax]	       279	strbuf.h	FUNCTION_16	CALL_2
0x40008b0	      0xba13000000	                           mov edx, 0x13	       279	strbuf.h	FUNCTION_16	CALL_2
0x40008b5	      0xbe00000000	                              mov esi, 0	       279	strbuf.h	FUNCTION_16	CALL_2
0x40008ba	          0x4889e7	                            mov rdi, rsp	       279	strbuf.h	FUNCTION_16	CALL_2
0x40008bd	      0xe800000000	                          call 0x40008c2	       279	strbuf.h	FUNCTION_16	CALL_2
0x40008c2	      0xe9a3feffff	                           jmp 0x400076a	       279	strbuf.h	FUNCTION_16	CALL_2
0x40008c7	      0xe800000000	                          call 0x40008cc	       140	ws.c	FUNCTION_3
ws_check	WHILE,0:FOR,0:DO,0:CALL,1:functions,0:SWITCH,0:IF,0:ELSE,0	8
0x40008e0	        0x4883ec10	                           sub rsp, 0x10	       256	ws.c	FUNCTION_6
0x40008e4	          0x4531c9	                            xor r9d, r9d	       257	ws.c	FUNCTION_6	CALL_1
0x40008e7	          0x4531c0	                            xor r8d, r8d	       257	ws.c	FUNCTION_6	CALL_1
0x40008ea	            0x6a00	                                  push 0	       257	ws.c	FUNCTION_6	CALL_1
0x40008ec	            0x31c9	                            xor ecx, ecx	       257	ws.c	FUNCTION_6	CALL_1
0x40008ee	      0xe84df7ffff	                call sym.ws_check_emit_1	       257	ws.c	FUNCTION_6	CALL_1
0x40008f3	        0x4883c418	                           add rsp, 0x18	       258	ws.c	FUNCTION_6
0x40008f7	              0xc3	                                     ret	       258	ws.c	FUNCTION_6
