ewah_to_bitmap	functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:CALL,4:IF,0:WHILE,1	66
0x40001e0	            0x4155	                                push r13	        91	bitmap.c	FUNCTION_6
0x40001e2	            0x4154	                                push r12	        91	bitmap.c	FUNCTION_6
0x40001e4	          0x4531ed	                          xor r13d, r13d	        95	bitmap.c	FUNCTION_6
0x40001e7	              0x55	                                push rbp	        91	bitmap.c	FUNCTION_6
0x40001e8	              0x53	                                push rbx	        91	bitmap.c	FUNCTION_6
0x40001e9	          0x4889fd	                            mov rbp, rdi	        91	bitmap.c	FUNCTION_6
0x40001ec	    0x49bcffffffff	         movabs r12, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_28	IF_1	CALL_1
0x40001f6	        0x4883ec68	                           sub rsp, 0x68	        91	bitmap.c	FUNCTION_6
0x40001fa	    0x64488b042528	                mov rax, qword fs:[0x28]	        91	bitmap.c	FUNCTION_6
0x4000203	      0x4889442458	             mov qword [rsp + 0x58], rax	        91	bitmap.c	FUNCTION_6
0x4000208	            0x31c0	                            xor eax, eax	        91	bitmap.c	FUNCTION_6
0x400020a	      0xe800000000	                          call 0x400020f	        92	bitmap.c	FUNCTION_6	CALL_1
0x400020f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        97	bitmap.c	FUNCTION_6	CALL_2
0x4000214	          0x4889ee	                            mov rsi, rbp	        97	bitmap.c	FUNCTION_6	CALL_2
0x4000217	          0x4889c3	                            mov rbx, rax	        92	bitmap.c	FUNCTION_6	CALL_1
0x400021a	            0x31ed	                            xor ebp, ebp	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x400021c	      0xe800000000	                          call 0x4000221	        97	bitmap.c	FUNCTION_6	CALL_2
0x4000221	            0xeb15	                           jmp 0x4000238	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4000223	       0xf1f440000	                   nop dword [rax + rax]	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4000228	          0x488b03	                    mov rax, qword [rbx]	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x400022b	      0x488b542408	                mov rdx, qword [rsp + 8]	       101	bitmap.c	FUNCTION_6	WHILE_1
0x4000230	        0x48891428	              mov qword [rax + rbp], rdx	       101	bitmap.c	FUNCTION_6	WHILE_1
0x4000234	        0x4883c508	                              add rbp, 8	       101	bitmap.c	FUNCTION_6	WHILE_1
0x4000238	      0x488d742410	                   lea rsi, [rsp + 0x10]	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x400023d	      0x488d7c2408	                      lea rdi, [rsp + 8]	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4000242	      0xe800000000	                          call 0x4000247	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4000247	            0x85c0	                           test eax, eax	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4000249	            0x7455	                            je 0x40002a0	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x400024b	        0x488b4308	                mov rax, qword [rbx + 8]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400024f	        0x4983c501	                              add r13, 1	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000253	          0x4939c5	                            cmp r13, rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000256	            0x76d0	                           jbe 0x4000228	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000258	      0x488d744030	          lea rsi, [rax + rax*2 + 0x30] 	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400025d	          0x4889f2	                            mov rdx, rsi	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000260	          0x48d1ea	                              shr rdx, 1	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000263	          0x4939d5	                            cmp r13, rdx	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000266	            0x7628	                           jbe 0x4000290	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000268	        0x4c896b08	                mov qword [rbx + 8], r13	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400026c	          0x4c89ea	                            mov rdx, r13	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400026f	          0x4c39e2	                            cmp rdx, r12	       795	git-compat-util.h	FUNCTION_28	IF_1	CALL_1
0x4000272	            0x774e	                            ja 0x40002c2	       795	git-compat-util.h	FUNCTION_28	IF_1	CALL_1
0x4000274	          0x488b3b	                    mov rdi, qword [rbx]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000277	    0x488d34d50000	                        lea rsi, [rdx*8]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x400027f	      0xe800000000	                          call 0x4000284	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000284	          0x488903	                    mov qword [rbx], rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000287	            0xeba2	                           jmp 0x400022b	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000289	     0xf1f80000000	                         nop dword [rax]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000290	        0x48895308	                mov qword [rbx + 8], rdx	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000294	            0xebd9	                           jmp 0x400026f	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4000296	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x40002a0	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       106	bitmap.c	FUNCTION_6
0x40002a5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       106	bitmap.c	FUNCTION_6
0x40002ae	        0x4c896b08	                mov qword [rbx + 8], r13	       104	bitmap.c	FUNCTION_6
0x40002b2	          0x4889d8	                            mov rax, rbx	       106	bitmap.c	FUNCTION_6
0x40002b5	            0x751c	                           jne 0x40002d3	       106	bitmap.c	FUNCTION_6
0x40002b7	        0x4883c468	                           add rsp, 0x68	       106	bitmap.c	FUNCTION_6
0x40002bb	              0x5b	                                 pop rbx	       106	bitmap.c	FUNCTION_6
0x40002bc	              0x5d	                                 pop rbp	       106	bitmap.c	FUNCTION_6
0x40002bd	            0x415c	                                 pop r12	       106	bitmap.c	FUNCTION_6
0x40002bf	            0x415d	                                 pop r13	       106	bitmap.c	FUNCTION_6
0x40002c1	              0xc3	                                     ret	       106	bitmap.c	FUNCTION_6
0x40002c2	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_28	IF_1	CALL_2
0x40002c7	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_28	IF_1	CALL_2
0x40002cc	            0x31c0	                            xor eax, eax	       796	git-compat-util.h	FUNCTION_28	IF_1	CALL_2
0x40002ce	      0xe800000000	                          call 0x40002d3	       796	git-compat-util.h	FUNCTION_28	IF_1	CALL_2
0x40002d3	      0xe800000000	                          call 0x40002d8	       106	bitmap.c	FUNCTION_6
bitmap_set	functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:CALL,4:IF,1:WHILE,0	36
0x4000070	            0x4155	                                push r13	        34	bitmap.c	FUNCTION_2
0x4000072	            0x4154	                                push r12	        34	bitmap.c	FUNCTION_2
0x4000074	          0x4989f5	                            mov r13, rsi	        34	bitmap.c	FUNCTION_2
0x4000077	              0x55	                                push rbp	        34	bitmap.c	FUNCTION_2
0x4000078	              0x53	                                push rbx	        34	bitmap.c	FUNCTION_2
0x4000079	          0x4889f5	                            mov rbp, rsi	        35	bitmap.c	FUNCTION_2	CALL_1
0x400007c	        0x48c1ed06	                              shr rbp, 6	        35	bitmap.c	FUNCTION_2	CALL_1
0x4000080	          0x4889fb	                            mov rbx, rdi	        34	bitmap.c	FUNCTION_2
0x4000083	        0x4883ec08	                              sub rsp, 8	        34	bitmap.c	FUNCTION_2
0x4000087	        0x4c8b6708	                mov r12, qword [rdi + 8]	        37	bitmap.c	FUNCTION_2	IF_1
0x400008b	          0x4c39e5	                            cmp rbp, r12	        37	bitmap.c	FUNCTION_2	IF_1
0x400008e	            0x7231	                            jb 0x40000c1	        37	bitmap.c	FUNCTION_2	IF_1
0x4000090	      0x488d442d00	                    lea rax, [rbp + rbp]	        39	bitmap.c	FUNCTION_2	IF_1
0x4000095	          0x4889ee	                            mov rsi, rbp	        40	bitmap.c	FUNCTION_2	IF_1	CALL_2
0x4000098	        0x48c1e604	                              shl rsi, 4	        40	bitmap.c	FUNCTION_2	IF_1	CALL_2
0x400009c	        0x48894708	                mov qword [rdi + 8], rax	        39	bitmap.c	FUNCTION_2	IF_1
0x40000a0	          0x488b3f	                    mov rdi, qword [rdi]	        40	bitmap.c	FUNCTION_2	IF_1	CALL_2
0x40000a3	      0xe800000000	                          call 0x40000a8	        40	bitmap.c	FUNCTION_2	IF_1	CALL_2
0x40000a8	        0x488b5308	                mov rdx, qword [rbx + 8]	        90	string3.h	FUNCTION_44	CALL_6
0x40000ac	        0x4a8d3ce0	                  lea rdi, [rax + r12*8]	        90	string3.h	FUNCTION_44	CALL_6
0x40000b0	          0x488903	                    mov qword [rbx], rax	        40	bitmap.c	FUNCTION_2	IF_1	CALL_2
0x40000b3	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_44	CALL_6
0x40000b5	          0x4c29e2	                            sub rdx, r12	        90	string3.h	FUNCTION_44	CALL_6
0x40000b8	        0x48c1e203	                              shl rdx, 3	        90	string3.h	FUNCTION_44	CALL_6
0x40000bc	      0xe800000000	                          call 0x40000c1	        90	string3.h	FUNCTION_44	CALL_6
0x40000c1	          0x488b13	                    mov rdx, qword [rbx]	        45	bitmap.c	FUNCTION_2	CALL_4
0x40000c4	          0x4489e9	                           mov ecx, r13d	        45	bitmap.c	FUNCTION_2	CALL_4
0x40000c7	      0xb801000000	                              mov eax, 1	        45	bitmap.c	FUNCTION_2	CALL_4
0x40000cc	          0x48d3e0	                             shl rax, cl	        45	bitmap.c	FUNCTION_2	CALL_4
0x40000cf	        0x480904ea	             or qword [rdx + rbp*8], rax	        45	bitmap.c	FUNCTION_2	CALL_4
0x40000d3	        0x4883c408	                              add rsp, 8	        46	bitmap.c	FUNCTION_2
0x40000d7	              0x5b	                                 pop rbx	        46	bitmap.c	FUNCTION_2
0x40000d8	              0x5d	                                 pop rbp	        46	bitmap.c	FUNCTION_2
0x40000d9	            0x415c	                                 pop r12	        46	bitmap.c	FUNCTION_2
0x40000db	            0x415d	                                 pop r13	        46	bitmap.c	FUNCTION_2
0x40000dd	              0xc3	                                     ret	        46	bitmap.c	FUNCTION_2
bitmap_get	functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:CALL,2:IF,0:WHILE,0	11
0x4000110	          0x4889f2	                            mov rdx, rsi	        58	bitmap.c	FUNCTION_4	CALL_1
0x4000113	            0x31c0	                            xor eax, eax	        59	bitmap.c	FUNCTION_4
0x4000115	        0x48c1ea06	                              shr rdx, 6	        58	bitmap.c	FUNCTION_4	CALL_1
0x4000119	        0x483b5708	                cmp rdx, qword [rdi + 8]	        59	bitmap.c	FUNCTION_4
0x400011d	            0x730f	                           jae 0x400012e	        59	bitmap.c	FUNCTION_4
0x400011f	          0x488b07	                    mov rax, qword [rdi]	        60	bitmap.c	FUNCTION_4	CALL_2
0x4000122	            0x89f1	                            mov ecx, esi	        59	bitmap.c	FUNCTION_4
0x4000124	        0x488b04d0	            mov rax, qword [rax + rdx*8]	        59	bitmap.c	FUNCTION_4
0x4000128	          0x48d3e8	                             shr rax, cl	        59	bitmap.c	FUNCTION_4
0x400012b	          0x83e001	                              and eax, 1	        59	bitmap.c	FUNCTION_4
0x400012e	            0xf3c3	                                     ret	        61	bitmap.c	FUNCTION_4
bitmap_each_bit	functions,0:SWITCH,0:FOR,3:ELSE,1:DO,0:CALL,3:IF,2:WHILE,0	61
0x40003e0	            0x4157	                                push r15	       141	bitmap.c	FUNCTION_9
0x40003e2	            0x4156	                                push r14	       141	bitmap.c	FUNCTION_9
0x40003e4	            0x4155	                                push r13	       141	bitmap.c	FUNCTION_9
0x40003e6	            0x4154	                                push r12	       141	bitmap.c	FUNCTION_9
0x40003e8	              0x55	                                push rbp	       141	bitmap.c	FUNCTION_9
0x40003e9	              0x53	                                push rbx	       141	bitmap.c	FUNCTION_9
0x40003ea	        0x4883ec18	                           sub rsp, 0x18	       141	bitmap.c	FUNCTION_9
0x40003ee	      0x48837f0800	                  cmp qword [rdi + 8], 0	       144	bitmap.c	FUNCTION_9	FOR_1
0x40003f3	      0x48897c2408	                mov qword [rsp + 8], rdi	       141	bitmap.c	FUNCTION_9
0x40003f8	    0x48c704240000	                      mov qword [rsp], 0	       144	bitmap.c	FUNCTION_9	FOR_1
0x4000400	            0x746e	                            je 0x4000470	       144	bitmap.c	FUNCTION_9	FOR_1
0x4000402	          0x4989f4	                            mov r12, rsi	       144	bitmap.c	FUNCTION_9	FOR_1
0x4000405	          0x4889d5	                            mov rbp, rdx	       144	bitmap.c	FUNCTION_9	FOR_1
0x4000408	    0x41bd40000000	                          mov r13d, 0x40	       144	bitmap.c	FUNCTION_9	FOR_1
0x400040e	            0x6690	                                     nop	       144	bitmap.c	FUNCTION_9	FOR_1
0x4000410	      0x488b742408	                mov rsi, qword [rsp + 8]	       145	bitmap.c	FUNCTION_9	FOR_1
0x4000415	        0x488b0424	                    mov rax, qword [rsp]	       145	bitmap.c	FUNCTION_9	FOR_1
0x4000419	            0x31c9	                            xor ecx, ecx	       145	bitmap.c	FUNCTION_9	FOR_1
0x400041b	          0x488b16	                    mov rdx, qword [rsi]	       145	bitmap.c	FUNCTION_9	FOR_1
0x400041e	          0x4989c7	                            mov r15, rax	       145	bitmap.c	FUNCTION_9	FOR_1
0x4000421	        0x49c1e706	                              shl r15, 6	       145	bitmap.c	FUNCTION_9	FOR_1
0x4000425	        0x488b1cc2	            mov rbx, qword [rdx + rax*8]	       145	bitmap.c	FUNCTION_9	FOR_1
0x4000429	        0x4883fbff	             cmp rbx, 0xffffffffffffffff	       148	bitmap.c	FUNCTION_9	FOR_1	IF_1
0x400042d	            0x7451	                            je 0x4000480	       148	bitmap.c	FUNCTION_9	FOR_1	IF_1
0x400042f	              0x90	                                     nop	       148	bitmap.c	FUNCTION_9	FOR_1	IF_1
0x4000430	          0x4889da	                            mov rdx, rbx	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x4000433	          0x48d3ea	                             shr rdx, cl	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x4000436	          0x4885d2	                           test rdx, rdx	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x4000439	            0x741d	                            je 0x4000458	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x400043b	      0xf3480fbcd2	                          tzcnt rdx, rdx	       156	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_2
0x4000440	          0x4889ee	                            mov rsi, rbp	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_3
0x4000443	          0x8d3c11	                    lea edi, [rcx + rdx]	       156	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_2
0x4000446	          0x4989fe	                            mov r14, rdi	       156	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_2
0x4000449	          0x4c01ff	                            add rdi, r15	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_3
0x400044c	          0x41ffd4	                                call r12	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_3
0x400044f	        0x418d4e01	                      lea ecx, [r14 + 1]	       152	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x4000453	          0x83f93f	                           cmp ecx, 0x3f	       152	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x4000456	            0x76d8	                           jbe 0x4000430	       152	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x4000458	      0x488b742408	                mov rsi, qword [rsp + 8]	       144	bitmap.c	FUNCTION_9	FOR_1
0x400045d	      0x4883042401	                      add qword [rsp], 1	       144	bitmap.c	FUNCTION_9	FOR_1
0x4000462	        0x4983c540	                           add r13, 0x40	       144	bitmap.c	FUNCTION_9	FOR_1
0x4000466	        0x488b0424	                    mov rax, qword [rsp]	       144	bitmap.c	FUNCTION_9	FOR_1
0x400046a	        0x48394608	                cmp qword [rsi + 8], rax	       144	bitmap.c	FUNCTION_9	FOR_1
0x400046e	            0x77a0	                            ja 0x4000410	       144	bitmap.c	FUNCTION_9	FOR_1
0x4000470	        0x4883c418	                           add rsp, 0x18	       162	bitmap.c	FUNCTION_9
0x4000474	              0x5b	                                 pop rbx	       162	bitmap.c	FUNCTION_9
0x4000475	              0x5d	                                 pop rbp	       162	bitmap.c	FUNCTION_9
0x4000476	            0x415c	                                 pop r12	       162	bitmap.c	FUNCTION_9
0x4000478	            0x415d	                                 pop r13	       162	bitmap.c	FUNCTION_9
0x400047a	            0x415e	                                 pop r14	       162	bitmap.c	FUNCTION_9
0x400047c	            0x415f	                                 pop r15	       162	bitmap.c	FUNCTION_9
0x400047e	              0xc3	                                     ret	       162	bitmap.c	FUNCTION_9
0x400047f	              0x90	                                     nop	       162	bitmap.c	FUNCTION_9
0x4000480	        0x498d5f01	                      lea rbx, [r15 + 1]	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x4000484	          0x4c89ff	                            mov rdi, r15	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x4000487	          0x4889ee	                            mov rsi, rbp	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x400048a	          0x41ffd4	                                call r12	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x400048d	          0x4939dd	                            cmp r13, rbx	       149	bitmap.c	FUNCTION_9	FOR_1	IF_1	FOR_2
0x4000490	          0x4989df	                            mov r15, rbx	       149	bitmap.c	FUNCTION_9	FOR_1	IF_1	FOR_2
0x4000493	            0x75eb	                           jne 0x4000480	       149	bitmap.c	FUNCTION_9	FOR_1	IF_1	FOR_2
0x4000495	            0xebc1	                           jmp 0x4000458	       149	bitmap.c	FUNCTION_9	FOR_1	IF_1	FOR_2
bitmap_or_ewah	functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:CALL,4:IF,1:WHILE,1	51
0x4000320	            0x4154	                                push r12	       120	bitmap.c	FUNCTION_8
0x4000322	              0x55	                                push rbp	       120	bitmap.c	FUNCTION_8
0x4000323	          0x4989f4	                            mov r12, rsi	       120	bitmap.c	FUNCTION_8
0x4000326	              0x53	                                push rbx	       120	bitmap.c	FUNCTION_8
0x4000327	          0x4889fd	                            mov rbp, rdi	       120	bitmap.c	FUNCTION_8
0x400032a	        0x4883ec60	                           sub rsp, 0x60	       120	bitmap.c	FUNCTION_8
0x400032e	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	       122	bitmap.c	FUNCTION_8
0x4000332	        0x488b5f08	                mov rbx, qword [rdi + 8]	       121	bitmap.c	FUNCTION_8
0x4000336	    0x64488b042528	                mov rax, qword fs:[0x28]	       120	bitmap.c	FUNCTION_8
0x400033f	      0x4889442458	             mov qword [rsp + 0x58], rax	       120	bitmap.c	FUNCTION_8
0x4000344	            0x31c0	                            xor eax, eax	       120	bitmap.c	FUNCTION_8
0x4000346	        0x48c1ee06	                              shr rsi, 6	       122	bitmap.c	FUNCTION_8
0x400034a	        0x4883c601	                              add rsi, 1	       122	bitmap.c	FUNCTION_8
0x400034e	          0x4839f3	                            cmp rbx, rsi	       127	bitmap.c	FUNCTION_8	IF_1
0x4000351	            0x732a	                           jae 0x400037d	       127	bitmap.c	FUNCTION_8	IF_1
0x4000353	        0x48897708	                mov qword [rdi + 8], rsi	       128	bitmap.c	FUNCTION_8	IF_1
0x4000357	          0x488b3f	                    mov rdi, qword [rdi]	       129	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x400035a	        0x48c1e603	                              shl rsi, 3	       129	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x400035e	      0xe800000000	                          call 0x4000363	       129	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x4000363	        0x488b5508	                mov rdx, qword [rbp + 8]	        90	string3.h	FUNCTION_44	CALL_6
0x4000367	        0x488d3cd8	                  lea rdi, [rax + rbx*8]	        90	string3.h	FUNCTION_44	CALL_6
0x400036b	        0x48894500	                    mov qword [rbp], rax	       129	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x400036f	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_44	CALL_6
0x4000371	          0x4829da	                            sub rdx, rbx	        90	string3.h	FUNCTION_44	CALL_6
0x4000374	        0x48c1e203	                              shl rdx, 3	        90	string3.h	FUNCTION_44	CALL_6
0x4000378	      0xe800000000	                          call 0x400037d	        90	string3.h	FUNCTION_44	CALL_6
0x400037d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       134	bitmap.c	FUNCTION_8	CALL_3
0x4000382	          0x4c89e6	                            mov rsi, r12	       134	bitmap.c	FUNCTION_8	CALL_3
0x4000385	            0x31db	                            xor ebx, ebx	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_4
0x4000387	      0xe800000000	                          call 0x400038c	       134	bitmap.c	FUNCTION_8	CALL_3
0x400038c	            0xeb15	                           jmp 0x40003a3	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_4
0x400038e	            0x6690	                                     nop	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_4
0x4000390	          0x4889d8	                            mov rax, rbx	       137	bitmap.c	FUNCTION_8	WHILE_1
0x4000393	        0x48034500	                    add rax, qword [rbp]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x4000397	      0x488b542408	                mov rdx, qword [rsp + 8]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x400039c	        0x4883c308	                              add rbx, 8	       137	bitmap.c	FUNCTION_8	WHILE_1
0x40003a0	          0x480910	                     or qword [rax], rdx	       137	bitmap.c	FUNCTION_8	WHILE_1
0x40003a3	      0x488d742410	                   lea rsi, [rsp + 0x10]	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_4
0x40003a8	      0x488d7c2408	                      lea rdi, [rsp + 8]	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_4
0x40003ad	      0xe800000000	                          call 0x40003b2	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_4
0x40003b2	            0x85c0	                           test eax, eax	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_4
0x40003b4	            0x75da	                           jne 0x4000390	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_4
0x40003b6	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       138	bitmap.c	FUNCTION_8
0x40003bb	    0x644833042528	                xor rax, qword fs:[0x28]	       138	bitmap.c	FUNCTION_8
0x40003c4	            0x7509	                           jne 0x40003cf	       138	bitmap.c	FUNCTION_8
0x40003c6	        0x4883c460	                           add rsp, 0x60	       138	bitmap.c	FUNCTION_8
0x40003ca	              0x5b	                                 pop rbx	       138	bitmap.c	FUNCTION_8
0x40003cb	              0x5d	                                 pop rbp	       138	bitmap.c	FUNCTION_8
0x40003cc	            0x415c	                                 pop r12	       138	bitmap.c	FUNCTION_8
0x40003ce	              0xc3	                                     ret	       138	bitmap.c	FUNCTION_8
0x40003cf	      0xe800000000	                          call 0x40003d4	       138	bitmap.c	FUNCTION_8
bitmap_equals	functions,0:SWITCH,0:FOR,2:ELSE,1:DO,0:CALL,0:IF,3:WHILE,0	41
0x4000530	        0x488b4608	                mov rax, qword [rsi + 8]	       179	bitmap.c	FUNCTION_11	IF_1
0x4000534	        0x488b5708	                mov rdx, qword [rdi + 8]	       179	bitmap.c	FUNCTION_11	IF_1
0x4000538	          0x4839c2	                            cmp rdx, rax	       179	bitmap.c	FUNCTION_11	IF_1
0x400053b	            0x720c	                            jb 0x4000549	       179	bitmap.c	FUNCTION_11	IF_1
0x400053d	          0x4889c2	                            mov rdx, rax	       179	bitmap.c	FUNCTION_11	IF_1
0x4000540	          0x4889f0	                            mov rax, rsi	       179	bitmap.c	FUNCTION_11	IF_1
0x4000543	          0x4889fe	                            mov rsi, rdi	       179	bitmap.c	FUNCTION_11	IF_1
0x4000546	          0x4889c7	                            mov rdi, rax	       179	bitmap.c	FUNCTION_11	IF_1
0x4000549	          0x4885d2	                           test rdx, rdx	       187	bitmap.c	FUNCTION_11	FOR_1
0x400054c	            0x7425	                            je 0x4000573	       187	bitmap.c	FUNCTION_11	FOR_1
0x400054e	          0x488b0f	                    mov rcx, qword [rdi]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x4000551	          0x488b3e	                    mov rdi, qword [rsi]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x4000554	          0x488b07	                    mov rax, qword [rdi]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x4000557	          0x483901	                    cmp qword [rcx], rax	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x400055a	            0x7554	                           jne 0x40005b0	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x400055c	            0x31c0	                            xor eax, eax	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x400055e	            0xeb0a	                           jmp 0x400056a	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x4000560	        0x4c8b04c7	             mov r8, qword [rdi + rax*8]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x4000564	        0x4c3904c1	            cmp qword [rcx + rax*8], r8 	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x4000568	            0x7546	                           jne 0x40005b0	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x400056a	        0x4883c001	                              add rax, 1	       187	bitmap.c	FUNCTION_11	FOR_1
0x400056e	          0x4839d0	                            cmp rax, rdx	       187	bitmap.c	FUNCTION_11	FOR_1
0x4000571	            0x75ed	                           jne 0x4000560	       187	bitmap.c	FUNCTION_11	FOR_1
0x4000573	        0x488b4608	                mov rax, qword [rsi + 8]	       192	bitmap.c	FUNCTION_11	FOR_2
0x4000577	          0x4839c2	                            cmp rdx, rax	       192	bitmap.c	FUNCTION_11	FOR_2
0x400057a	            0x7324	                           jae 0x40005a0	       192	bitmap.c	FUNCTION_11	FOR_2
0x400057c	          0x488b0e	                    mov rcx, qword [rsi]	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x400057f	      0x48833cd100	              cmp qword [rcx + rdx*8], 0	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x4000584	            0x7411	                            je 0x4000597	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x4000586	            0xeb28	                           jmp 0x40005b0	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x4000588	     0xf1f84000000	                   nop dword [rax + rax]	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x4000590	      0x48833cd100	              cmp qword [rcx + rdx*8], 0	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x4000595	            0x7519	                           jne 0x40005b0	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x4000597	        0x4883c201	                              add rdx, 1	       192	bitmap.c	FUNCTION_11	FOR_2
0x400059b	          0x4839c2	                            cmp rdx, rax	       192	bitmap.c	FUNCTION_11	FOR_2
0x400059e	            0x72f0	                            jb 0x4000590	       192	bitmap.c	FUNCTION_11	FOR_2
0x40005a0	      0xb801000000	                              mov eax, 1	       197	bitmap.c	FUNCTION_11
0x40005a5	              0xc3	                                     ret	       197	bitmap.c	FUNCTION_11
0x40005a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       197	bitmap.c	FUNCTION_11
0x40005b0	            0x31c0	                            xor eax, eax	       189	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x40005b2	              0xc3	                                     ret	       198	bitmap.c	FUNCTION_11
bitmap_reset	functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:CALL,1:IF,0:WHILE,0	5
0x40005c0	        0x488b4708	                mov rax, qword [rdi + 8]	        90	string3.h	FUNCTION_44	CALL_6
0x40005c4	          0x488b3f	                    mov rdi, qword [rdi]	        90	string3.h	FUNCTION_44	CALL_6
0x40005c7	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_44	CALL_6
0x40005c9	    0x488d14c50000	                        lea rdx, [rax*8]	        90	string3.h	FUNCTION_44	CALL_6
0x40005d1	      0xe900000000	                           jmp 0x40005d6	        90	string3.h	FUNCTION_44	CALL_6
bitmap_new	functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:CALL,2:IF,0:WHILE,0	12
0x4000040	              0x53	                                push rbx	        26	bitmap.c	FUNCTION_1
0x4000041	      0xbf10000000	                           mov edi, 0x10	        27	bitmap.c	FUNCTION_1	CALL_1
0x4000046	      0xe800000000	                          call 0x400004b	        27	bitmap.c	FUNCTION_1	CALL_1
0x400004b	      0xbe08000000	                              mov esi, 8	        28	bitmap.c	FUNCTION_1	CALL_2
0x4000050	          0x4889c3	                            mov rbx, rax	        27	bitmap.c	FUNCTION_1	CALL_1
0x4000053	      0xbf20000000	                           mov edi, 0x20	        28	bitmap.c	FUNCTION_1	CALL_2
0x4000058	      0xe800000000	                          call 0x400005d	        28	bitmap.c	FUNCTION_1	CALL_2
0x400005d	    0x48c743082000	               mov qword [rbx + 8], 0x20	        29	bitmap.c	FUNCTION_1
0x4000065	          0x488903	                    mov qword [rbx], rax	        28	bitmap.c	FUNCTION_1	CALL_2
0x4000068	          0x4889d8	                            mov rax, rbx	        31	bitmap.c	FUNCTION_1
0x400006b	              0x5b	                                 pop rbx	        31	bitmap.c	FUNCTION_1
0x400006c	              0xc3	                                     ret	        31	bitmap.c	FUNCTION_1
bitmap_free	functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:CALL,2:IF,1:WHILE,0	11
0x40005e0	          0x4885ff	                           test rdi, rdi	       207	bitmap.c	FUNCTION_13	IF_1
0x40005e3	            0x741b	                            je 0x4000600	       207	bitmap.c	FUNCTION_13	IF_1
0x40005e5	              0x53	                                push rbx	       206	bitmap.c	FUNCTION_13
0x40005e6	          0x4889fb	                            mov rbx, rdi	       206	bitmap.c	FUNCTION_13
0x40005e9	          0x488b3f	                    mov rdi, qword [rdi]	       210	bitmap.c	FUNCTION_13	CALL_1
0x40005ec	      0xe800000000	                          call 0x40005f1	       210	bitmap.c	FUNCTION_13	CALL_1
0x40005f1	          0x4889df	                            mov rdi, rbx	       211	bitmap.c	FUNCTION_13	CALL_2
0x40005f4	              0x5b	                                 pop rbx	       212	bitmap.c	FUNCTION_13
0x40005f5	      0xe900000000	                           jmp 0x40005fa	       211	bitmap.c	FUNCTION_13	CALL_2
0x40005fa	    0x660f1f440000	                    nop word [rax + rax]	       211	bitmap.c	FUNCTION_13	CALL_2
0x4000600	            0xf3c3	                                     ret	       211	bitmap.c	FUNCTION_13	CALL_2
bitmap_and_not	functions,0:SWITCH,0:FOR,1:ELSE,0:DO,0:CALL,0:IF,0:WHILE,0	16
0x40002e0	        0x4c8b4708	                 mov r8, qword [rdi + 8]	       110	bitmap.c	FUNCTION_7
0x40002e4	        0x4c394608	                 cmp qword [rsi + 8], r8	       110	bitmap.c	FUNCTION_7
0x40002e8	      0x4c0f464608	              cmovbe r8, qword [rsi + 8]	       110	bitmap.c	FUNCTION_7
0x40002ed	          0x4d85c0	                             test r8, r8	       115	bitmap.c	FUNCTION_7	FOR_1
0x40002f0	            0x7422	                            je 0x4000314	       115	bitmap.c	FUNCTION_7	FOR_1
0x40002f2	          0x488b0f	                    mov rcx, qword [rdi]	       115	bitmap.c	FUNCTION_7	FOR_1
0x40002f5	          0x488b36	                    mov rsi, qword [rsi]	       115	bitmap.c	FUNCTION_7	FOR_1
0x40002f8	            0x31c0	                            xor eax, eax	       115	bitmap.c	FUNCTION_7	FOR_1
0x40002fa	    0x660f1f440000	                    nop word [rax + rax]	       115	bitmap.c	FUNCTION_7	FOR_1
0x4000300	        0x488b14c6	            mov rdx, qword [rsi + rax*8]	       116	bitmap.c	FUNCTION_7	FOR_1
0x4000304	          0x48f7d2	                                 not rdx	       116	bitmap.c	FUNCTION_7	FOR_1
0x4000307	        0x482114c1	            and qword [rcx + rax*8], rdx	       116	bitmap.c	FUNCTION_7	FOR_1
0x400030b	        0x4883c001	                              add rax, 1	       115	bitmap.c	FUNCTION_7	FOR_1
0x400030f	          0x4939c0	                             cmp r8, rax	       115	bitmap.c	FUNCTION_7	FOR_1
0x4000312	            0x75ec	                           jne 0x4000300	       115	bitmap.c	FUNCTION_7	FOR_1
0x4000314	            0xf3c3	                                     ret	       115	bitmap.c	FUNCTION_7	FOR_1
bitmap_clear	functions,0:SWITCH,0:FOR,0:ELSE,0:DO,0:CALL,2:IF,1:WHILE,0	11
0x40000e0	          0x4889f2	                            mov rdx, rsi	        50	bitmap.c	FUNCTION_3	CALL_1
0x40000e3	        0x48c1ea06	                              shr rdx, 6	        50	bitmap.c	FUNCTION_3	CALL_1
0x40000e7	        0x483b5708	                cmp rdx, qword [rdi + 8]	        52	bitmap.c	FUNCTION_3	IF_1
0x40000eb	            0x7314	                           jae 0x4000101	        52	bitmap.c	FUNCTION_3	IF_1
0x40000ed	          0x488b3f	                    mov rdi, qword [rdi]	        53	bitmap.c	FUNCTION_3	CALL_2
0x40000f0	      0xb801000000	                              mov eax, 1	        53	bitmap.c	FUNCTION_3	CALL_2
0x40000f5	            0x89f1	                            mov ecx, esi	        53	bitmap.c	FUNCTION_3	CALL_2
0x40000f7	          0x48d3e0	                             shl rax, cl	        53	bitmap.c	FUNCTION_3	CALL_2
0x40000fa	          0x48f7d0	                                 not rax	        53	bitmap.c	FUNCTION_3	CALL_2
0x40000fd	        0x482104d7	            and qword [rdi + rdx*8], rax	        53	bitmap.c	FUNCTION_3	CALL_2
0x4000101	            0xf3c3	                                     ret	        53	bitmap.c	FUNCTION_3	CALL_2
bitmap_popcount	functions,0:SWITCH,0:FOR,1:ELSE,0:DO,0:CALL,1:IF,0:WHILE,0	38
0x40004a0	        0x488b4708	                mov rax, qword [rdi + 8]	       168	bitmap.c	FUNCTION_10	FOR_1
0x40004a4	          0x4885c0	                           test rax, rax	       168	bitmap.c	FUNCTION_10	FOR_1
0x40004a7	            0x747f	                            je 0x4000528	       168	bitmap.c	FUNCTION_10	FOR_1
0x40004a9	              0x53	                                push rbx	       165	bitmap.c	FUNCTION_10
0x40004aa	          0x488b3f	                    mov rdi, qword [rdi]	       165	bitmap.c	FUNCTION_10
0x40004ad	    0x49ba55555555	          movabs r10, 0x5555555555555555	        34	ewok.h	FUNCTION_53
0x40004b7	    0x49b933333333	           movabs r9, 0x3333333333333333	        35	ewok.h	FUNCTION_53
0x40004c1	    0x49b80f0f0f0f	            movabs r8, 0xf0f0f0f0f0f0f0f	        36	ewok.h	FUNCTION_53
0x40004cb	    0x49bb01010101	           movabs r11, 0x101010101010101	       169	bitmap.c	FUNCTION_10	CALL_1
0x40004d5	        0x488d1cc7	                  lea rbx, [rdi + rax*8]	       169	bitmap.c	FUNCTION_10	CALL_1
0x40004d9	            0x31c0	                            xor eax, eax	       168	bitmap.c	FUNCTION_10	FOR_1
0x40004db	       0xf1f440000	                   nop dword [rax + rax]	       168	bitmap.c	FUNCTION_10	FOR_1
0x40004e0	          0x488b37	                    mov rsi, qword [rdi]	       169	bitmap.c	FUNCTION_10	CALL_1
0x40004e3	        0x4883c708	                              add rdi, 8	       169	bitmap.c	FUNCTION_10	CALL_1
0x40004e7	          0x4889f1	                            mov rcx, rsi	        34	ewok.h	FUNCTION_53
0x40004ea	          0x4c21d6	                            and rsi, r10	        34	ewok.h	FUNCTION_53
0x40004ed	          0x48d1e9	                              shr rcx, 1	        34	ewok.h	FUNCTION_53
0x40004f0	          0x4c21d1	                            and rcx, r10	        34	ewok.h	FUNCTION_53
0x40004f3	          0x4801f1	                            add rcx, rsi	        34	ewok.h	FUNCTION_53
0x40004f6	          0x4889ca	                            mov rdx, rcx	        35	ewok.h	FUNCTION_53
0x40004f9	        0x48c1e902	                              shr rcx, 2	        35	ewok.h	FUNCTION_53
0x40004fd	          0x4c21c9	                             and rcx, r9	        35	ewok.h	FUNCTION_53
0x4000500	          0x4c21ca	                             and rdx, r9	        35	ewok.h	FUNCTION_53
0x4000503	          0x4801ca	                            add rdx, rcx	        35	ewok.h	FUNCTION_53
0x4000506	          0x4889d1	                            mov rcx, rdx	        36	ewok.h	FUNCTION_53
0x4000509	        0x48c1ea04	                              shr rdx, 4	        36	ewok.h	FUNCTION_53
0x400050d	          0x4c21c1	                             and rcx, r8	        36	ewok.h	FUNCTION_53
0x4000510	          0x4c21c2	                             and rdx, r8	        36	ewok.h	FUNCTION_53
0x4000513	          0x4801ca	                            add rdx, rcx	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000516	        0x490fafd3	                           imul rdx, r11	       169	bitmap.c	FUNCTION_10	CALL_1
0x400051a	        0x48c1ea38	                           shr rdx, 0x38	       169	bitmap.c	FUNCTION_10	CALL_1
0x400051e	          0x4801d0	                            add rax, rdx	       169	bitmap.c	FUNCTION_10	CALL_1
0x4000521	          0x4839fb	                            cmp rbx, rdi	       168	bitmap.c	FUNCTION_10	FOR_1
0x4000524	            0x75ba	                           jne 0x40004e0	       168	bitmap.c	FUNCTION_10	FOR_1
0x4000526	              0x5b	                                 pop rbx	       172	bitmap.c	FUNCTION_10
0x4000527	              0xc3	                                     ret	       172	bitmap.c	FUNCTION_10
0x4000528	            0x31c0	                            xor eax, eax	       166	bitmap.c	FUNCTION_10
0x400052a	              0xc3	                                     ret	       166	bitmap.c	FUNCTION_10
bitmap_to_ewah	functions,0:SWITCH,0:FOR,1:ELSE,0:DO,0:CALL,4:IF,3:WHILE,0	52
0x4000130	            0x4156	                                push r14	        64	bitmap.c	FUNCTION_5
0x4000132	            0x4155	                                push r13	        64	bitmap.c	FUNCTION_5
0x4000134	            0x4154	                                push r12	        64	bitmap.c	FUNCTION_5
0x4000136	              0x55	                                push rbp	        64	bitmap.c	FUNCTION_5
0x4000137	          0x4989fc	                            mov r12, rdi	        64	bitmap.c	FUNCTION_5
0x400013a	              0x53	                                push rbx	        64	bitmap.c	FUNCTION_5
0x400013b	      0xe800000000	                          call 0x4000140	        65	bitmap.c	FUNCTION_5	CALL_1
0x4000140	            0x31f6	                            xor esi, esi	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000142	    0x49837c240800	                  cmp qword [r12 + 8], 0	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000148	          0x4989c6	                            mov r14, rax	        65	bitmap.c	FUNCTION_5	CALL_1
0x400014b	            0x7450	                            je 0x400019d	        69	bitmap.c	FUNCTION_5	FOR_1
0x400014d	            0x31ed	                            xor ebp, ebp	        69	bitmap.c	FUNCTION_5	FOR_1
0x400014f	            0x31db	                            xor ebx, ebx	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000151	        0x498b0424	                    mov rax, qword [r12]	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000155	            0xeb18	                           jmp 0x400016f	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000157	    0x660f1f840000	                    nop word [rax + rax]	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000160	        0x4883c501	                              add rbp, 1	        71	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x4000164	        0x4883c301	                              add rbx, 1	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000168	      0x49395c2408	                cmp qword [r12 + 8], rbx	        69	bitmap.c	FUNCTION_5	FOR_1
0x400016d	            0x762e	                           jbe 0x400019d	        69	bitmap.c	FUNCTION_5	FOR_1
0x400016f	      0x48833cd800	              cmp qword [rax + rbx*8], 0	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x4000174	    0x4c8d2cdd0000	                        lea r13, [rbx*8]	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x400017c	            0x74e2	                            je 0x4000160	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x400017e	          0x4885f6	                           test rsi, rsi	        75	bitmap.c	FUNCTION_5	FOR_1	IF_2
0x4000181	            0x7535	                           jne 0x40001b8	        75	bitmap.c	FUNCTION_5	FOR_1	IF_2
0x4000183	          0x4885ed	                           test rbp, rbp	        78	bitmap.c	FUNCTION_5	FOR_1	IF_3
0x4000186	            0x753d	                           jne 0x40001c5	        78	bitmap.c	FUNCTION_5	FOR_1	IF_3
0x4000188	            0x31ed	                            xor ebp, ebp	        83	bitmap.c	FUNCTION_5	FOR_1
0x400018a	        0x4883c301	                              add rbx, 1	        69	bitmap.c	FUNCTION_5	FOR_1
0x400018e	      0x49395c2408	                cmp qword [r12 + 8], rbx	        69	bitmap.c	FUNCTION_5	FOR_1
0x4000193	        0x498b0424	                    mov rax, qword [r12]	        83	bitmap.c	FUNCTION_5	FOR_1
0x4000197	        0x4a8b3428	              mov rsi, qword [rax + r13]	        83	bitmap.c	FUNCTION_5	FOR_1
0x400019b	            0x77d2	                            ja 0x400016f	        69	bitmap.c	FUNCTION_5	FOR_1
0x400019d	          0x4c89f7	                            mov rdi, r14	        86	bitmap.c	FUNCTION_5	CALL_4
0x40001a0	      0xe800000000	                          call 0x40001a5	        86	bitmap.c	FUNCTION_5	CALL_4
0x40001a5	              0x5b	                                 pop rbx	        88	bitmap.c	FUNCTION_5
0x40001a6	          0x4c89f0	                            mov rax, r14	        88	bitmap.c	FUNCTION_5
0x40001a9	              0x5d	                                 pop rbp	        88	bitmap.c	FUNCTION_5
0x40001aa	            0x415c	                                 pop r12	        88	bitmap.c	FUNCTION_5
0x40001ac	            0x415d	                                 pop r13	        88	bitmap.c	FUNCTION_5
0x40001ae	            0x415e	                                 pop r14	        88	bitmap.c	FUNCTION_5
0x40001b0	              0xc3	                                     ret	        88	bitmap.c	FUNCTION_5
0x40001b1	     0xf1f80000000	                         nop dword [rax]	        88	bitmap.c	FUNCTION_5
0x40001b8	          0x4c89f7	                            mov rdi, r14	        76	bitmap.c	FUNCTION_5	FOR_1	CALL_2
0x40001bb	      0xe800000000	                          call 0x40001c0	        76	bitmap.c	FUNCTION_5	FOR_1	CALL_2
0x40001c0	          0x4885ed	                           test rbp, rbp	        78	bitmap.c	FUNCTION_5	FOR_1	IF_3
0x40001c3	            0x74c3	                            je 0x4000188	        78	bitmap.c	FUNCTION_5	FOR_1	IF_3
0x40001c5	          0x4889ea	                            mov rdx, rbp	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
0x40001c8	            0x31f6	                            xor esi, esi	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
0x40001ca	          0x4c89f7	                            mov rdi, r14	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
0x40001cd	      0xe800000000	                          call 0x40001d2	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
0x40001d2	            0xebb4	                           jmp 0x4000188	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
