is_excluded	ELSE,0:SWITCH,0:IF,1:functions,0:CALL,1:FOR,0:WHILE,0:DO,0	12
0x400318d	        0x4883ec08	                              sub rsp, 8	      1320	dir.c	FUNCTION_42
0x4003191	      0xe800000000	                          call 0x4003196	      1321	dir.c	FUNCTION_42
0x4003196	          0x4885c0	                           test rax, rax	      1323	dir.c	FUNCTION_42	IF_1
0x4003199	            0x740e	                            je 0x40031a9	      1323	dir.c	FUNCTION_42	IF_1
0x400319b	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1324	dir.c	FUNCTION_42	IF_1
0x400319e	          0xc1e804	                              shr eax, 4	      1324	dir.c	FUNCTION_42	IF_1
0x40031a1	          0x83f001	                              xor eax, 1	      1324	dir.c	FUNCTION_42	IF_1
0x40031a4	          0x83e001	                              and eax, 1	      1324	dir.c	FUNCTION_42	IF_1
0x40031a7	            0xeb05	                           jmp 0x40031ae	      1324	dir.c	FUNCTION_42	IF_1
0x40031a9	      0xb800000000	                              mov eax, 0	      1325	dir.c	FUNCTION_42
0x40031ae	        0x4883c408	                              add rsp, 8	      1326	dir.c	FUNCTION_42
0x40031b2	              0xc3	                                     ret	      1326	dir.c	FUNCTION_42
read_stat	ELSE,0:SWITCH,0:IF,1:functions,0:CALL,1:FOR,0:WHILE,0:DO,0	21
0x4000382	        0x488b5628	            mov rdx, qword [rsi + 0x28] 	      2820	dir.c	FUNCTION_91	IF_1
0x4000386	        0x488b4630	            mov rax, qword [rsi + 0x30] 	      2820	dir.c	FUNCTION_91	IF_1
0x400038a	        0x488d4a24	                   lea rcx, [rdx + 0x24]	      2820	dir.c	FUNCTION_91	IF_1
0x400038e	          0x4839c8	                            cmp rax, rcx	      2820	dir.c	FUNCTION_91	IF_1
0x4000391	            0x7309	                           jae 0x400039c	      2820	dir.c	FUNCTION_91	IF_1
0x4000393	        0x4883c001	                              add rax, 1	      2821	dir.c	FUNCTION_91	IF_1
0x4000397	        0x48894628	             mov qword [rsi + 0x28], rax	      2821	dir.c	FUNCTION_91	IF_1
0x400039b	              0xc3	                                     ret	      2821	dir.c	FUNCTION_91	IF_1
0x400039c	              0x55	                                push rbp	      2817	dir.c	FUNCTION_91
0x400039d	              0x53	                                push rbx	      2817	dir.c	FUNCTION_91
0x400039e	          0x4889f3	                            mov rbx, rsi	      2817	dir.c	FUNCTION_91
0x40003a1	        0x488b4608	                mov rax, qword [rsi + 8]	      2819	dir.c	FUNCTION_91
0x40003a5	        0x488b2cf8	            mov rbp, qword [rax + rdi*8]	      2819	dir.c	FUNCTION_91
0x40003a9	        0x488d7d10	                   lea rdi, [rbp + 0x10]	      2824	dir.c	FUNCTION_91	CALL_1
0x40003ad	          0x4889d6	                            mov rsi, rdx	      2824	dir.c	FUNCTION_91	CALL_1
0x40003b0	      0xe868ffffff	            call sym.stat_data_from_disk	      2824	dir.c	FUNCTION_91	CALL_1
0x40003b5	      0x4883432824	           add qword [rbx + 0x28], 0x24 	      2825	dir.c	FUNCTION_91
0x40003ba	        0x804d4402	                 or byte [rbp + 0x44], 2	      2826	dir.c	FUNCTION_91
0x40003be	              0x5b	                                 pop rbx	      2827	dir.c	FUNCTION_91
0x40003bf	              0x5d	                                 pop rbp	      2827	dir.c	FUNCTION_91
0x40003c0	              0xc3	                                     ret	      2827	dir.c	FUNCTION_91
add_excludes_from_file	ELSE,0:SWITCH,0:IF,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0	6
0x4002758	        0x4883ec08	                              sub rsp, 8	       956	dir.c	FUNCTION_34
0x400275c	    0x838708010000	              add dword [rdi + 0x108], 1	       957	dir.c	FUNCTION_34
0x4002763	      0xba00000000	                              mov edx, 0	       958	dir.c	FUNCTION_34	CALL_1
0x4002768	      0xe886ffffff	       call sym.add_excludes_from_file_1	       958	dir.c	FUNCTION_34	CALL_1
0x400276d	        0x4883c408	                              add rsp, 8	       959	dir.c	FUNCTION_34
0x4002771	              0xc3	                                     ret	       959	dir.c	FUNCTION_34
do_invalidate_gitignore	ELSE,0:SWITCH,0:IF,0:functions,0:CALL,1:FOR,1:WHILE,0:DO,0	20
0x4000040	        0x806744fd	            and byte [rdi + 0x44], 0xfd 	       758	dir.c	FUNCTION_25
0x4000044	    0xc74740000000	               mov dword [rdi + 0x40], 0	       759	dir.c	FUNCTION_25
0x400004b	        0x837f3800	               cmp dword [rdi + 0x38], 0	       760	dir.c	FUNCTION_25	FOR_1
0x400004f	            0x742c	                            je 0x400007d	       760	dir.c	FUNCTION_25	FOR_1
0x4000051	              0x55	                                push rbp	       756	dir.c	FUNCTION_25
0x4000052	              0x53	                                push rbx	       756	dir.c	FUNCTION_25
0x4000053	        0x4883ec08	                              sub rsp, 8	       756	dir.c	FUNCTION_25
0x4000057	          0x4889fd	                            mov rbp, rdi	       756	dir.c	FUNCTION_25
0x400005a	      0xbb00000000	                              mov ebx, 0	       760	dir.c	FUNCTION_25	FOR_1
0x400005f	          0x4863d3	                         movsxd rdx, ebx	       761	dir.c	FUNCTION_25	CALL_1
0x4000062	        0x488b4500	                    mov rax, qword [rbp]	       761	dir.c	FUNCTION_25	CALL_1
0x4000066	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	       761	dir.c	FUNCTION_25	CALL_1
0x400006a	      0xe8d1ffffff	        call sym.do_invalidate_gitignore	       761	dir.c	FUNCTION_25	CALL_1
0x400006f	          0x83c301	                              add ebx, 1	       760	dir.c	FUNCTION_25	FOR_1
0x4000072	          0x395d38	            cmp dword [rbp + 0x38], ebx 	       760	dir.c	FUNCTION_25	FOR_1
0x4000075	            0x77e8	                            ja 0x400005f	       760	dir.c	FUNCTION_25	FOR_1
0x4000077	        0x4883c408	                              add rsp, 8	       762	dir.c	FUNCTION_25
0x400007b	              0x5b	                                 pop rbx	       762	dir.c	FUNCTION_25
0x400007c	              0x5d	                                 pop rbp	       762	dir.c	FUNCTION_25
0x400007d	            0xf3c3	                                     ret	       762	dir.c	FUNCTION_25
read_directory	ELSE,1:SWITCH,0:IF,9:functions,0:CALL,10:FOR,1:WHILE,0:DO,0	396
0x4003f60	            0x4157	                                push r15	      2263	dir.c	FUNCTION_72
0x4003f62	            0x4156	                                push r14	      2263	dir.c	FUNCTION_72
0x4003f64	            0x4155	                                push r13	      2263	dir.c	FUNCTION_72
0x4003f66	            0x4154	                                push r12	      2263	dir.c	FUNCTION_72
0x4003f68	              0x55	                                push rbp	      2263	dir.c	FUNCTION_72
0x4003f69	              0x53	                                push rbx	      2263	dir.c	FUNCTION_72
0x4003f6a	        0x4883ec48	                           sub rsp, 0x48	      2263	dir.c	FUNCTION_72
0x4003f6e	          0x4889fb	                            mov rbx, rdi	      2263	dir.c	FUNCTION_72
0x4003f71	        0x48893424	                    mov qword [rsp], rsi	      2263	dir.c	FUNCTION_72
0x4003f75	          0x4889d5	                            mov rbp, rdx	      2263	dir.c	FUNCTION_72
0x4003f78	          0x4189cf	                           mov r15d, ecx	      2263	dir.c	FUNCTION_72
0x4003f7b	        0x894c2418	             mov dword [rsp + 0x18], ecx	      2263	dir.c	FUNCTION_72
0x4003f7f	          0x4d89c6	                             mov r14, r8	      2263	dir.c	FUNCTION_72
0x4003f82	    0x64488b042528	                mov rax, qword fs:[0x28]	      2263	dir.c	FUNCTION_72
0x4003f8b	      0x4889442438	             mov qword [rsp + 0x38], rax	      2263	dir.c	FUNCTION_72
0x4003f90	            0x31c0	                            xor eax, eax	      2263	dir.c	FUNCTION_72
0x4003f92	      0xe800000000	                          call 0x4003f97	      2265	dir.c	FUNCTION_72	CALL_1
0x4003f97	      0x4889442408	                mov qword [rsp + 8], rax	      2265	dir.c	FUNCTION_72	CALL_1
0x4003f9c	          0x4489fe	                           mov esi, r15d	      2267	dir.c	FUNCTION_72	IF_1	CALL_2
0x4003f9f	          0x4889ef	                            mov rdi, rbp	      2267	dir.c	FUNCTION_72	IF_1	CALL_2
0x4003fa2	      0xe800000000	                          call 0x4003fa7	      2267	dir.c	FUNCTION_72	IF_1	CALL_2
0x4003fa7	            0x85c0	                           test eax, eax	      2267	dir.c	FUNCTION_72	IF_1	CALL_2
0x4003fa9	            0x7407	                            je 0x4003fb2	      2267	dir.c	FUNCTION_72	IF_1	CALL_2
0x4003fab	            0x8b03	                    mov eax, dword [rbx]	      2268	dir.c	FUNCTION_72	IF_1
0x4003fad	      0xe928060000	                           jmp 0x40045da	      2268	dir.c	FUNCTION_72	IF_1
0x4003fb2	    0x4883bb880000	               cmp qword [rbx + 0x88], 0	      2178	dir.c	FUNCTION_71	IF_1
0x4003fba	     0xf8468020000	                            je 0x4004228	      2178	dir.c	FUNCTION_71	IF_1
0x4003fc0	    0x833d00000000	               cmp dword [0x04003fc7], 0	      2180	dir.c	FUNCTION_71	IF_2
0x4003fc7	            0x7915	                           jns 0x4003fde	      2180	dir.c	FUNCTION_71	IF_2
0x4003fc9	      0xbe00000000	                              mov esi, 0	      2181	dir.c	FUNCTION_71	CALL_1
0x4003fce	      0xbf00000000	                              mov edi, 0	      2181	dir.c	FUNCTION_71	CALL_1
0x4003fd3	      0xe800000000	                          call 0x4003fd8	      2181	dir.c	FUNCTION_71	CALL_1
0x4003fd8	    0x890500000000	            mov dword [0x04003fde], eax 	      2181	dir.c	FUNCTION_71	CALL_1
0x4003fde	    0x833d00000000	               cmp dword [0x04003fe5], 0	      2182	dir.c	FUNCTION_71	IF_3
0x4003fe5	     0xf853d020000	                           jne 0x4004228	      2182	dir.c	FUNCTION_71	IF_3
0x4003feb	    0x83bb08010000	              cmp dword [rbx + 0x108], 0	      2201	dir.c	FUNCTION_71	IF_5
0x4003ff2	     0xf8530020000	                           jne 0x4004228	      2201	dir.c	FUNCTION_71	IF_5
0x4003ff8	      0x837c241800	               cmp dword [rsp + 0x18], 0	      2201	dir.c	FUNCTION_71	IF_5
0x4003ffd	     0xf8525020000	                           jne 0x4004228	      2201	dir.c	FUNCTION_71	IF_5
0x4004003	          0x4d85f6	                           test r14, r14	      2201	dir.c	FUNCTION_71	IF_5
0x4004006	            0x740a	                            je 0x4004012	      2201	dir.c	FUNCTION_71	IF_5
0x4004008	        0x41833e00	                      cmp dword [r14], 0	      2201	dir.c	FUNCTION_71	IF_5
0x400400c	     0xf8516020000	                           jne 0x4004228	      2201	dir.c	FUNCTION_71	IF_5
0x4004012	    0x4c8ba3880000	            mov r12, qword [rbx + 0x88] 	      2205	dir.c	FUNCTION_71	IF_6
0x4004019	    0x418b84249800	            mov eax, dword [r12 + 0x98] 	      2205	dir.c	FUNCTION_71	IF_6
0x4004021	          0x394310	            cmp dword [rbx + 0x10], eax 	      2205	dir.c	FUNCTION_71	IF_6
0x4004024	     0xf85fe010000	                           jne 0x4004228	      2205	dir.c	FUNCTION_71	IF_6
0x400402a	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      2211	dir.c	FUNCTION_71	IF_6
0x400402d	          0x83e033	                           and eax, 0x33	      2211	dir.c	FUNCTION_71	IF_6
0x4004030	          0x83f802	                              cmp eax, 2	      2211	dir.c	FUNCTION_71	IF_6
0x4004033	     0xf85ef010000	                           jne 0x4004228	      2211	dir.c	FUNCTION_71	IF_6
0x4004039	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      2221	dir.c	FUNCTION_71	IF_7
0x400403d	      0x498b742478	            mov rsi, qword [r12 + 0x78] 	      2221	dir.c	FUNCTION_71	IF_7
0x4004042	          0x4839f7	                            cmp rdi, rsi	      2221	dir.c	FUNCTION_71	IF_7
0x4004045	            0x740d	                            je 0x4004054	      2221	dir.c	FUNCTION_71	IF_7
0x4004047	      0xe800000000	                          call 0x400404c	      2222	dir.c	FUNCTION_71	IF_7	CALL_2
0x400404c	            0x85c0	                           test eax, eax	      2221	dir.c	FUNCTION_71	IF_7
0x400404e	     0xf85d4010000	                           jne 0x4004228	      2221	dir.c	FUNCTION_71	IF_7
0x4004054	        0x837b3000	               cmp dword [rbx + 0x30], 0	      2229	dir.c	FUNCTION_71	IF_8
0x4004058	     0xf85ca010000	                           jne 0x4004228	      2229	dir.c	FUNCTION_71	IF_8
0x400405e	      0xe882c9ffff	               call sym.get_ident_string	      2123	dir.c	FUNCTION_66	CALL_2
0x4004063	    0x498bbc249000	            mov rdi, qword [r12 + 0x90] 	      2123	dir.c	FUNCTION_66	CALL_2
0x400406b	          0x4889c6	                            mov rsi, rax	      2123	dir.c	FUNCTION_66	CALL_2
0x400406e	      0xe800000000	                          call 0x4004073	      2123	dir.c	FUNCTION_66	CALL_2
0x4004073	            0x85c0	                           test eax, eax	      2232	dir.c	FUNCTION_71	IF_9	CALL_3
0x4004075	            0x7426	                            je 0x400409d	      2232	dir.c	FUNCTION_71	IF_9	CALL_3
0x4004077	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_105
0x400407c	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_105
0x4004081	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_105
0x4004086	      0xe800000000	                          call 0x400408b	        54	gettext.h	FUNCTION_105
0x400408b	          0x4889c7	                            mov rdi, rax	      2233	dir.c	FUNCTION_71	IF_9	CALL_5
0x400408e	      0xb800000000	                              mov eax, 0	      2233	dir.c	FUNCTION_71	IF_9	CALL_5
0x4004093	      0xe800000000	                          call 0x4004098	      2233	dir.c	FUNCTION_71	IF_9	CALL_5
0x4004098	      0xe98b010000	                           jmp 0x4004228	      2233	dir.c	FUNCTION_71	IF_9	CALL_5
0x400409d	    0x4c8ba3880000	            mov r12, qword [rbx + 0x88] 	      2237	dir.c	FUNCTION_71	IF_10
0x40040a4	    0x4983bc24a000	               cmp qword [r12 + 0xa0], 0	      2237	dir.c	FUNCTION_71	IF_10
0x40040ad	            0x754a	                           jne 0x40040f9	      2237	dir.c	FUNCTION_71	IF_10
0x40040af	      0xbf60000000	                           mov edi, 0x60	      2239	dir.c	FUNCTION_71	IF_10	CALL_6
0x40040b4	      0xe800000000	                          call 0x40040b9	      2239	dir.c	FUNCTION_71	IF_10	CALL_6
0x40040b9	    0x49898424a000	             mov qword [r12 + 0xa0], rax	      2239	dir.c	FUNCTION_71	IF_10	CALL_6
0x40040c1	    0x488b83880000	            mov rax, qword [rbx + 0x88] 	      2240	dir.c	FUNCTION_71	IF_10	CALL_7
0x40040c8	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	        90	string3.h	FUNCTION_110	CALL_6
0x40040cf	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_110	CALL_6
0x40040d6	    0x48c740580000	               mov qword [rax + 0x58], 0	        90	string3.h	FUNCTION_110	CALL_6
0x40040de	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_110	CALL_6
0x40040e2	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_110	CALL_6
0x40040e6	          0x4829f8	                            sub rax, rdi	        90	string3.h	FUNCTION_110	CALL_6
0x40040e9	          0x8d4860	                   lea ecx, [rax + 0x60]	        90	string3.h	FUNCTION_110	CALL_6
0x40040ec	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_110	CALL_6
0x40040ef	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_110	CALL_6
0x40040f1	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_110	CALL_6
0x40040f6	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_110	CALL_6
0x40040f9	    0x4c8bab880000	            mov r13, qword [rbx + 0x88] 	      2244	dir.c	FUNCTION_71
0x4004100	    0x4d8ba5a00000	            mov r12, qword [r13 + 0xa0] 	      2244	dir.c	FUNCTION_71
0x4004107	        0x498d7524	                   lea rsi, [r13 + 0x24]	       975	cache.h	FUNCTION_126	CALL_1
0x400410b	    0x488dbbb40000	                   lea rdi, [rbx + 0xb4]	       975	cache.h	FUNCTION_126	CALL_1
0x4004112	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_126	CALL_1
0x4004117	      0xe800000000	                          call 0x400411c	       975	cache.h	FUNCTION_126	CALL_1
0x400411c	            0x85c0	                           test eax, eax	      2245	dir.c	FUNCTION_71	IF_11	CALL_8
0x400411e	            0x746c	                            je 0x400418c	      2245	dir.c	FUNCTION_71	IF_11	CALL_8
0x4004120	    0x418385ac0000	               add dword [r13 + 0xac], 1	       767	dir.c	FUNCTION_26
0x4004128	          0x4c89e7	                            mov rdi, r12	       768	dir.c	FUNCTION_26	CALL_1
0x400412b	      0xe810bfffff	        call sym.do_invalidate_gitignore	       768	dir.c	FUNCTION_26	CALL_1
0x4004130	    0x488b83880000	            mov rax, qword [rbx + 0x88] 	      2248	dir.c	FUNCTION_71	IF_11
0x4004137	    0x488b93900000	            mov rdx, qword [rbx + 0x90] 	      2248	dir.c	FUNCTION_71	IF_11
0x400413e	          0x488910	                    mov qword [rax], rdx	      2248	dir.c	FUNCTION_71	IF_11
0x4004141	    0x488b93980000	            mov rdx, qword [rbx + 0x98] 	      2248	dir.c	FUNCTION_71	IF_11
0x4004148	        0x48895008	                mov qword [rax + 8], rdx	      2248	dir.c	FUNCTION_71	IF_11
0x400414c	    0x488b93a00000	            mov rdx, qword [rbx + 0xa0] 	      2248	dir.c	FUNCTION_71	IF_11
0x4004153	        0x48895010	             mov qword [rax + 0x10], rdx	      2248	dir.c	FUNCTION_71	IF_11
0x4004157	    0x488b93a80000	            mov rdx, qword [rbx + 0xa8] 	      2248	dir.c	FUNCTION_71	IF_11
0x400415e	        0x48895018	             mov qword [rax + 0x18], rdx	      2248	dir.c	FUNCTION_71	IF_11
0x4004162	    0x488b93b00000	            mov rdx, qword [rbx + 0xb0] 	      2248	dir.c	FUNCTION_71	IF_11
0x4004169	        0x48895020	             mov qword [rax + 0x20], rdx	      2248	dir.c	FUNCTION_71	IF_11
0x400416d	    0x488b93b80000	            mov rdx, qword [rbx + 0xb8] 	      2248	dir.c	FUNCTION_71	IF_11
0x4004174	        0x48895028	             mov qword [rax + 0x28], rdx	      2248	dir.c	FUNCTION_71	IF_11
0x4004178	    0x488b93c00000	            mov rdx, qword [rbx + 0xc0] 	      2248	dir.c	FUNCTION_71	IF_11
0x400417f	        0x48895030	             mov qword [rax + 0x30], rdx	      2248	dir.c	FUNCTION_71	IF_11
0x4004183	    0x8b93c8000000	            mov edx, dword [rbx + 0xc8] 	      2248	dir.c	FUNCTION_71	IF_11
0x4004189	          0x895038	             mov dword [rax + 0x38], edx	      2248	dir.c	FUNCTION_71	IF_11
0x400418c	    0x4c8bab880000	            mov r13, qword [rbx + 0x88] 	      2251	dir.c	FUNCTION_71	IF_12
0x4004193	        0x498d7560	                   lea rsi, [r13 + 0x60]	       975	cache.h	FUNCTION_126	CALL_1
0x4004197	    0x488dbbf00000	                   lea rdi, [rbx + 0xf0]	       975	cache.h	FUNCTION_126	CALL_1
0x400419e	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_126	CALL_1
0x40041a3	      0xe800000000	                          call 0x40041a8	       975	cache.h	FUNCTION_126	CALL_1
0x40041a8	            0x85c0	                           test eax, eax	      2250	dir.c	FUNCTION_71	IF_12	CALL_10
0x40041aa	            0x746d	                            je 0x4004219	      2250	dir.c	FUNCTION_71	IF_12	CALL_10
0x40041ac	    0x418385ac0000	               add dword [r13 + 0xac], 1	       767	dir.c	FUNCTION_26
0x40041b4	          0x4c89e7	                            mov rdi, r12	       768	dir.c	FUNCTION_26	CALL_1
0x40041b7	      0xe884beffff	        call sym.do_invalidate_gitignore	       768	dir.c	FUNCTION_26	CALL_1
0x40041bc	    0x488b83880000	            mov rax, qword [rbx + 0x88] 	      2253	dir.c	FUNCTION_71	IF_12
0x40041c3	    0x488b93cc0000	            mov rdx, qword [rbx + 0xcc] 	      2253	dir.c	FUNCTION_71	IF_12
0x40041ca	        0x4889503c	             mov qword [rax + 0x3c], rdx	      2253	dir.c	FUNCTION_71	IF_12
0x40041ce	    0x488b93d40000	            mov rdx, qword [rbx + 0xd4] 	      2253	dir.c	FUNCTION_71	IF_12
0x40041d5	        0x48895044	             mov qword [rax + 0x44], rdx	      2253	dir.c	FUNCTION_71	IF_12
0x40041d9	    0x488b93dc0000	            mov rdx, qword [rbx + 0xdc] 	      2253	dir.c	FUNCTION_71	IF_12
0x40041e0	        0x4889504c	             mov qword [rax + 0x4c], rdx	      2253	dir.c	FUNCTION_71	IF_12
0x40041e4	    0x488b93e40000	            mov rdx, qword [rbx + 0xe4] 	      2253	dir.c	FUNCTION_71	IF_12
0x40041eb	        0x48895054	             mov qword [rax + 0x54], rdx	      2253	dir.c	FUNCTION_71	IF_12
0x40041ef	    0x488b93ec0000	            mov rdx, qword [rbx + 0xec] 	      2253	dir.c	FUNCTION_71	IF_12
0x40041f6	        0x4889505c	             mov qword [rax + 0x5c], rdx	      2253	dir.c	FUNCTION_71	IF_12
0x40041fa	    0x488b93f40000	            mov rdx, qword [rbx + 0xf4] 	      2253	dir.c	FUNCTION_71	IF_12
0x4004201	        0x48895064	             mov qword [rax + 0x64], rdx	      2253	dir.c	FUNCTION_71	IF_12
0x4004205	    0x488b93fc0000	            mov rdx, qword [rbx + 0xfc] 	      2253	dir.c	FUNCTION_71	IF_12
0x400420c	        0x4889506c	             mov qword [rax + 0x6c], rdx	      2253	dir.c	FUNCTION_71	IF_12
0x4004210	    0x8b9304010000	           mov edx, dword [rbx + 0x104] 	      2253	dir.c	FUNCTION_71	IF_12
0x4004216	          0x895074	             mov dword [rax + 0x74], edx	      2253	dir.c	FUNCTION_71	IF_12
0x4004219	    0x41804c244404	                 or byte [r12 + 0x44], 4	      2257	dir.c	FUNCTION_71
0x400421f	          0x4d85e4	                           test r12, r12	      2271	dir.c	FUNCTION_72	IF_2
0x4004222	     0xf85f0030000	                           jne 0x4004618	      2271	dir.c	FUNCTION_72	IF_2
0x4004228	    0x48c783880000	               mov qword [rbx + 0x88], 0	      2276	dir.c	FUNCTION_72	IF_2
0x4004233	      0x837c241800	               cmp dword [rsp + 0x18], 0	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x4004238	     0xf8462010000	                            je 0x40043a0	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x400423e	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2064	dir.c	FUNCTION_64
0x4004247	    0x48c744242800	               mov qword [rsp + 0x28], 0	      2064	dir.c	FUNCTION_64
0x4004250	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2064	dir.c	FUNCTION_64
0x4004259	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      2067	dir.c	FUNCTION_64
0x400425c	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2067	dir.c	FUNCTION_64
0x4004260	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2067	dir.c	FUNCTION_64
0x4004269	      0x448b6c2418	           mov r13d, dword [rsp + 0x18] 	      2069	dir.c	FUNCTION_64	WHILE_1
0x400426e	          0x4489e8	                           mov eax, r13d	      2069	dir.c	FUNCTION_64	WHILE_1
0x4004271	            0x4898	                                    cdqe	      2069	dir.c	FUNCTION_64	WHILE_1
0x4004273	      0x807c05ff2f	         cmp byte [rbp + rax - 1], 0x2f 	      2069	dir.c	FUNCTION_64	WHILE_1
0x4004278	     0xf85a7030000	                           jne 0x4004625	      2069	dir.c	FUNCTION_64	WHILE_1
0x400427e	        0x4183ed01	                             sub r13d, 1	      2069	dir.c	FUNCTION_64	WHILE_1
0x4004282	     0xf8428010000	                            je 0x40043b0	      2069	dir.c	FUNCTION_64	WHILE_1
0x4004288	          0x4963c5	                        movsxd rax, r13d	      2069	dir.c	FUNCTION_64	WHILE_1
0x400428b	      0x807c05ff2f	         cmp byte [rbp + rax - 1], 0x2f 	      2069	dir.c	FUNCTION_64	WHILE_1
0x4004290	            0x74ec	                            je 0x400427e	      2069	dir.c	FUNCTION_64	WHILE_1
0x4004292	      0xe993030000	                           jmp 0x400462a	      2069	dir.c	FUNCTION_64	WHILE_1
0x4004297	          0x4585e4	                         test r12d, r12d	      2076	dir.c	FUNCTION_64	WHILE_2
0x400429a	        0x400f95c7	                               setne dil	      2076	dir.c	FUNCTION_64	WHILE_2
0x400429e	        0x400fb6ff	                          movzx edi, dil	      2076	dir.c	FUNCTION_64	WHILE_2
0x40042a2	          0x4d63e4	                        movsxd r12, r12d	      2076	dir.c	FUNCTION_64	WHILE_2
0x40042a5	          0x4c01e7	                            add rdi, r12	      2076	dir.c	FUNCTION_64	WHILE_2
0x40042a8	          0x4801ef	                            add rdi, rbp	      2076	dir.c	FUNCTION_64	WHILE_2
0x40042ab	          0x4c89fa	                            mov rdx, r15	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x40042ae	          0x4829fa	                            sub rdx, rdi	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x40042b1	      0xbe2f000000	                           mov esi, 0x2f	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x40042b6	      0xe800000000	                          call 0x40042bb	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x40042bb	          0x4189c4	                           mov r12d, eax	      2081	dir.c	FUNCTION_64	WHILE_2	ELSE_1
0x40042be	          0x4129ec	                           sub r12d, ebp	      2081	dir.c	FUNCTION_64	WHILE_2	ELSE_1
0x40042c1	          0x4885c0	                           test rax, rax	      2081	dir.c	FUNCTION_64	WHILE_2	ELSE_1
0x40042c4	        0x450f44e5	                        cmove r12d, r13d	      2081	dir.c	FUNCTION_64	WHILE_2	ELSE_1
0x40042c8	    0x48c744242800	               mov qword [rsp + 0x28], 0	       164	strbuf.h	FUNCTION_148
0x40042d1	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       165	strbuf.h	FUNCTION_148	IF_2
0x40042d6	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_148	IF_2
0x40042dc	            0x7405	                            je 0x40042e3	       165	strbuf.h	FUNCTION_148	IF_2
0x40042de	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_148	IF_2
0x40042e1	            0xeb22	                           jmp 0x4004305	       166	strbuf.h	FUNCTION_148	IF_2
0x40042e3	    0x803d00000000	                cmp byte [0x040042ea], 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x40042ea	            0x7419	                            je 0x4004305	       168	strbuf.h	FUNCTION_148	CALL_2
0x40042ec	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x40042f1	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_148	CALL_2
0x40042f6	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x40042fb	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x4004300	      0xe800000000	                          call 0x4004305	       168	strbuf.h	FUNCTION_148	CALL_2
0x4004305	          0x4963d4	                        movsxd rdx, r12d	      2083	dir.c	FUNCTION_64	WHILE_2	CALL_3
0x4004308	          0x4889ee	                            mov rsi, rbp	      2083	dir.c	FUNCTION_64	WHILE_2	CALL_3
0x400430b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2083	dir.c	FUNCTION_64	WHILE_2	CALL_3
0x4004310	      0xe800000000	                          call 0x4004315	      2083	dir.c	FUNCTION_64	WHILE_2	CALL_3
0x4004315	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2084	dir.c	FUNCTION_64	WHILE_2	IF_3	CALL_4
0x400431a	      0xe800000000	                          call 0x400431f	      2084	dir.c	FUNCTION_64	WHILE_2	IF_3	CALL_4
0x400431f	            0x85c0	                           test eax, eax	      2084	dir.c	FUNCTION_64	WHILE_2	IF_3	CALL_4
0x4004321	            0x744f	                            je 0x4004372	      2084	dir.c	FUNCTION_64	WHILE_2	IF_3	CALL_4
0x4004323	          0x4c89f2	                            mov rdx, r14	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x4004326	        0x8b742428	            mov esi, dword [rsp + 0x28] 	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x400432a	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x400432f	      0xe81ecdffff	                  call sym.simplify_away	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x4004334	            0x85c0	                           test eax, eax	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x4004336	            0x7542	                           jne 0x400437a	      2086	dir.c	FUNCTION_64	WHILE_2	IF_4	CALL_5
0x4004338	            0x6a00	                                  push 0	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x400433a	            0x6a04	                                  push 4	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x400433c	          0x4d89f1	                             mov r9, r14	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x400433f	          0x4589e0	                           mov r8d, r12d	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4004342	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4004347	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x400434c	      0xbe00000000	                              mov esi, 0	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4004351	          0x4889df	                            mov rdi, rbx	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4004354	      0xe8ddf8ffff	                 call sym.treat_one_path	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4004359	        0x4883c410	                           add rsp, 0x10	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x400435d	            0x85c0	                           test eax, eax	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x400435f	            0x7421	                            je 0x4004382	      2088	dir.c	FUNCTION_64	WHILE_2	IF_5	CALL_6
0x4004361	          0x4539ec	                          cmp r12d, r13d	      2091	dir.c	FUNCTION_64	WHILE_2	IF_6
0x4004364	     0xf8c2dffffff	                            jl 0x4004297	      2091	dir.c	FUNCTION_64	WHILE_2	IF_6
0x400436a	    0x41bc01000000	                             mov r12d, 1	      2092	dir.c	FUNCTION_64	WHILE_2	IF_6
0x4004370	            0xeb16	                           jmp 0x4004388	      2092	dir.c	FUNCTION_64	WHILE_2	IF_6
0x4004372	    0x41bc00000000	                             mov r12d, 0	      2065	dir.c	FUNCTION_64
0x4004378	            0xeb0e	                           jmp 0x4004388	      2065	dir.c	FUNCTION_64
0x400437a	    0x41bc00000000	                             mov r12d, 0	      2065	dir.c	FUNCTION_64
0x4004380	            0xeb06	                           jmp 0x4004388	      2065	dir.c	FUNCTION_64
0x4004382	    0x41bc00000000	                             mov r12d, 0	      2065	dir.c	FUNCTION_64
0x4004388	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2096	dir.c	FUNCTION_64	CALL_7
0x400438d	      0xe800000000	                          call 0x4004392	      2096	dir.c	FUNCTION_64	CALL_7
0x4004392	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      2097	dir.c	FUNCTION_64
0x4004396	          0x894310	             mov dword [rbx + 0x10], eax	      2097	dir.c	FUNCTION_64
0x4004399	          0x4585e4	                         test r12d, r12d	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x400439c	            0x7439	                            je 0x40043d7	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x400439e	            0xeb10	                           jmp 0x40043b0	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x40043a0	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x40043a9	            0xeb05	                           jmp 0x40043b0	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x40043ab	      0x4c89642410	             mov qword [rsp + 0x10], r12	      2258	dir.c	FUNCTION_71
0x40043b0	            0x4156	                                push r14	      2278	dir.c	FUNCTION_72	CALL_5
0x40043b2	            0x6a00	                                  push 0	      2278	dir.c	FUNCTION_72	CALL_5
0x40043b4	    0x41b900000000	                              mov r9d, 0	      2278	dir.c	FUNCTION_72	CALL_5
0x40043ba	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      2278	dir.c	FUNCTION_72	CALL_5
0x40043bf	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      2278	dir.c	FUNCTION_72	CALL_5
0x40043c3	          0x4889ea	                            mov rdx, rbp	      2278	dir.c	FUNCTION_72	CALL_5
0x40043c6	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2278	dir.c	FUNCTION_72	CALL_5
0x40043cb	          0x4889df	                            mov rdi, rbx	      2278	dir.c	FUNCTION_72	CALL_5
0x40043ce	      0xe88ceeffff	       call sym.read_directory_recursive	      2278	dir.c	FUNCTION_72	CALL_5
0x40043d3	        0x4883c410	                           add rsp, 0x10	      2278	dir.c	FUNCTION_72	CALL_5
0x40043d7	          0x486333	                 movsxd rsi, dword [rbx]	      2279	dir.c	FUNCTION_72
0x40043da	        0x4883fe01	                              cmp rsi, 1	      1048	git-compat-util.h	FUNCTION_181	IF_1
0x40043de	            0x7613	                           jbe 0x40043f3	      1048	git-compat-util.h	FUNCTION_181	IF_1
0x40043e0	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1049	git-compat-util.h	FUNCTION_181	IF_1
0x40043e4	      0xb900000000	                              mov ecx, 0	      1049	git-compat-util.h	FUNCTION_181	IF_1
0x40043e9	      0xba08000000	                              mov edx, 8	      1049	git-compat-util.h	FUNCTION_181	IF_1
0x40043ee	      0xe800000000	                          call 0x40043f3	      1049	git-compat-util.h	FUNCTION_181	IF_1
0x40043f3	        0x48637308	            movsxd rsi, dword [rbx + 8] 	      2280	dir.c	FUNCTION_72
0x40043f7	        0x4883fe01	                              cmp rsi, 1	      1048	git-compat-util.h	FUNCTION_181	IF_1
0x40043fb	            0x7613	                           jbe 0x4004410	      1048	git-compat-util.h	FUNCTION_181	IF_1
0x40043fd	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1049	git-compat-util.h	FUNCTION_181	IF_1
0x4004401	      0xb900000000	                              mov ecx, 0	      1049	git-compat-util.h	FUNCTION_181	IF_1
0x4004406	      0xba08000000	                              mov edx, 8	      1049	git-compat-util.h	FUNCTION_181	IF_1
0x400440b	      0xe800000000	                          call 0x4004410	      1049	git-compat-util.h	FUNCTION_181	IF_1
0x4004410	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      2287	dir.c	FUNCTION_72	IF_4
0x4004413	      0x25a0000000	                           and eax, 0xa0	      2287	dir.c	FUNCTION_72	IF_4
0x4004418	          0x83f820	                           cmp eax, 0x20	      2287	dir.c	FUNCTION_72	IF_4
0x400441b	            0x7575	                           jne 0x4004492	      2287	dir.c	FUNCTION_72	IF_4
0x400441d	          0x833b00	                      cmp dword [rbx], 0	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x4004420	            0x7e67	                           jle 0x4004489	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x4004422	    0x41bc00000000	                             mov r12d, 0	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x4004428	    0x41bd00000000	                             mov r13d, 0	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x400442e	          0x4585ed	                         test r13d, r13d	      2293	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4004431	            0x7435	                            je 0x4004468	      2293	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4004433	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x4004437	          0x4d63f4	                        movsxd r14, r12d	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x400443a	        0x4e8b3cf0	            mov r15, qword [rax + r14*8]	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x400443e	          0x4963d5	                        movsxd rdx, r13d	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x4004441	      0x488b7cd0f8	        mov rdi, qword [rax + rdx*8 - 8]	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x4004446	          0x4c89fe	                            mov rsi, r15	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x4004449	      0xe800000000	                          call 0x400444e	      2294	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5	CALL_6
0x400444e	            0x85c0	                           test eax, eax	      2293	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4004450	            0x7416	                            je 0x4004468	      2293	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4004452	          0x4c89ff	                            mov rdi, r15	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4004455	      0xe800000000	                          call 0x400445a	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x400445a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x400445e	    0x4ac704f00000	              mov qword [rax + r14*8], 0	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4004466	            0xeb16	                           jmp 0x400447e	      2295	dir.c	FUNCTION_72	IF_4	FOR_1	IF_5
0x4004468	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x400446c	          0x4963d4	                        movsxd rdx, r12d	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x400446f	        0x488b0cd0	            mov rcx, qword [rax + rdx*8]	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x4004473	          0x4963d5	                        movsxd rdx, r13d	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x4004476	        0x48890cd0	            mov qword [rax + rdx*8], rcx	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x400447a	        0x458d6d01	                     lea r13d, [r13 + 1]	      2297	dir.c	FUNCTION_72	IF_4	FOR_1	ELSE_1
0x400447e	        0x4183c401	                             add r12d, 1	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x4004482	          0x443923	                   cmp dword [rbx], r12d	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x4004485	            0x7fa7	                            jg 0x400442e	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x4004487	            0xeb06	                           jmp 0x400448f	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x4004489	    0x41bd00000000	                             mov r13d, 0	      2292	dir.c	FUNCTION_72	IF_4	FOR_1
0x400448f	          0x44892b	                   mov dword [rbx], r13d	      2301	dir.c	FUNCTION_72	IF_4
0x4004492	    0x48b8ffffffff	                 movabs rax, 0x1ffffffff	      2304	dir.c	FUNCTION_72	CALL_7
0x400449c	    0x482305000000	             and rax, qword [0x040044a3]	      2304	dir.c	FUNCTION_72	CALL_7
0x40044a3	    0x48ba00000000	                 movabs rdx, 0x100000000	      2304	dir.c	FUNCTION_72	CALL_7
0x40044ad	          0x4839d0	                            cmp rax, rdx	      2304	dir.c	FUNCTION_72	CALL_7
0x40044b0	            0x742e	                            je 0x40044e0	      2304	dir.c	FUNCTION_72	CALL_7
0x40044b2	      0xe800000000	                          call 0x40044b7	      2304	dir.c	FUNCTION_72	CALL_7
0x40044b7	      0x482b442408	                sub rax, qword [rsp + 8]	      2304	dir.c	FUNCTION_72	CALL_7
0x40044bc	          0x4889c2	                            mov rdx, rax	      2304	dir.c	FUNCTION_72	CALL_7
0x40044bf	          0x4989e9	                             mov r9, rbp	      2304	dir.c	FUNCTION_72	CALL_7
0x40044c2	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	      2304	dir.c	FUNCTION_72	CALL_7
0x40044c7	      0xb900000000	                              mov ecx, 0	      2304	dir.c	FUNCTION_72	CALL_7
0x40044cc	      0xbe00090000	                          mov esi, 0x900	      2304	dir.c	FUNCTION_72	CALL_7
0x40044d1	      0xbf00000000	                              mov edi, 0	      2304	dir.c	FUNCTION_72	CALL_7
0x40044d6	      0xb800000000	                              mov eax, 0	      2304	dir.c	FUNCTION_72	CALL_7
0x40044db	      0xe800000000	                          call 0x40044e0	      2304	dir.c	FUNCTION_72	CALL_7
0x40044e0	    0x4883bb880000	               cmp qword [rbx + 0x88], 0	      2305	dir.c	FUNCTION_72	IF_6
0x40044e8	     0xf84ea000000	                            je 0x40045d8	      2305	dir.c	FUNCTION_72	IF_6
0x40044ee	    0x833d00000000	               cmp dword [0x040044f5], 0	      2309	dir.c	FUNCTION_72	IF_6	IF_7
0x40044f5	            0x7915	                           jns 0x400450c	      2309	dir.c	FUNCTION_72	IF_6	IF_7
0x40044f7	      0xbe00000000	                              mov esi, 0	      2311	dir.c	FUNCTION_72	IF_6	CALL_9
0x40044fc	      0xbf00000000	                              mov edi, 0	      2311	dir.c	FUNCTION_72	IF_6	CALL_9
0x4004501	      0xe800000000	                          call 0x4004506	      2311	dir.c	FUNCTION_72	IF_6	CALL_9
0x4004506	    0x890500000000	            mov dword [0x0400450c], eax 	      2310	dir.c	FUNCTION_72	IF_6	IF_7
0x400450c	    0x48b8ffffffff	                 movabs rax, 0x1ffffffff	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4004516	    0x482305000000	             and rax, qword [0x0400451d]	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x400451d	    0x48ba00000000	                 movabs rdx, 0x100000000	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4004527	          0x4839d0	                            cmp rax, rdx	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x400452a	            0x7445	                            je 0x4004571	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x400452c	    0x488b83880000	            mov rax, qword [rbx + 0x88] 	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4004533	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4004539	              0x52	                                push rdx	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x400453a	    0x8b90b0000000	            mov edx, dword [rax + 0xb0] 	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4004540	              0x52	                                push rdx	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4004541	    0x448b88ac0000	            mov r9d, dword [rax + 0xac] 	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4004548	    0x448b80a80000	            mov r8d, dword [rax + 0xa8] 	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x400454f	      0xb900000000	                              mov ecx, 0	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4004554	      0xba00000000	                              mov edx, 0	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4004559	      0xbe10090000	                          mov esi, 0x910	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x400455e	      0xbf00000000	                              mov edi, 0	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4004563	      0xb800000000	                              mov eax, 0	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4004568	      0xe800000000	                          call 0x400456d	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x400456d	        0x4883c410	                           add rsp, 0x10	      2312	dir.c	FUNCTION_72	IF_6	CALL_10
0x4004571	    0x833d00000000	               cmp dword [0x04004578], 0	      2321	dir.c	FUNCTION_72	IF_6	IF_8
0x4004578	            0x743a	                            je 0x40045b4	      2321	dir.c	FUNCTION_72	IF_6	IF_8
0x400457a	    0x488bbb880000	            mov rdi, qword [rbx + 0x88] 	      2322	dir.c	FUNCTION_72	IF_6	IF_8
0x4004581	        0x488b0424	                    mov rax, qword [rsp]	      2321	dir.c	FUNCTION_72	IF_6	IF_8
0x4004585	    0x483bb8b80000	            cmp rdi, qword [rax + 0xb8] 	      2321	dir.c	FUNCTION_72	IF_6	IF_8
0x400458c	            0x753a	                           jne 0x40045c8	      2321	dir.c	FUNCTION_72	IF_6	IF_8
0x400458e	    0x83bfb4000000	               cmp dword [rdi + 0xb4], 0	      2322	dir.c	FUNCTION_72	IF_6	IF_8
0x4004595	            0x7512	                           jne 0x40045a9	      2322	dir.c	FUNCTION_72	IF_6	IF_8
0x4004597	    0x83bfac000000	               cmp dword [rdi + 0xac], 0	      2323	dir.c	FUNCTION_72	IF_6	IF_8
0x400459e	            0x7509	                           jne 0x40045a9	      2323	dir.c	FUNCTION_72	IF_6	IF_8
0x40045a0	    0x83bfb0000000	               cmp dword [rdi + 0xb0], 0	      2324	dir.c	FUNCTION_72	IF_6	IF_8
0x40045a7	            0x742f	                            je 0x40045d8	      2324	dir.c	FUNCTION_72	IF_6	IF_8
0x40045a9	        0x488b0424	                    mov rax, qword [rsp]	      2326	dir.c	FUNCTION_72	IF_6	IF_8
0x40045ad	    0x814814800000	             or dword [rax + 0x14], 0x80	      2326	dir.c	FUNCTION_72	IF_6	IF_8
0x40045b4	    0x488bbb880000	            mov rdi, qword [rbx + 0x88] 	      2327	dir.c	FUNCTION_72	IF_6	IF_9
0x40045bb	        0x488b0424	                    mov rax, qword [rsp]	      2327	dir.c	FUNCTION_72	IF_6	IF_9
0x40045bf	    0x483bb8b80000	            cmp rdi, qword [rax + 0xb8] 	      2327	dir.c	FUNCTION_72	IF_6	IF_9
0x40045c6	            0x7410	                            je 0x40045d8	      2327	dir.c	FUNCTION_72	IF_6	IF_9
0x40045c8	      0xe800000000	                          call 0x40045cd	      2328	dir.c	FUNCTION_72	IF_6	IF_9
0x40045cd	    0x48c783880000	               mov qword [rbx + 0x88], 0	      2328	dir.c	FUNCTION_72	IF_6	IF_9
0x40045d8	            0x8b03	                    mov eax, dword [rbx]	      2331	dir.c	FUNCTION_72
0x40045da	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      2332	dir.c	FUNCTION_72
0x40045df	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2332	dir.c	FUNCTION_72
0x40045e8	            0x7460	                            je 0x400464a	      2332	dir.c	FUNCTION_72
0x40045ea	            0xeb59	                           jmp 0x4004645	      2332	dir.c	FUNCTION_72
0x40045ec	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2064	dir.c	FUNCTION_64
0x40045f5	    0x48c744242800	               mov qword [rsp + 0x28], 0	      2064	dir.c	FUNCTION_64
0x40045fe	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2064	dir.c	FUNCTION_64
0x4004607	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      2067	dir.c	FUNCTION_64
0x400460a	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2067	dir.c	FUNCTION_64
0x400460e	      0x4c89642410	             mov qword [rsp + 0x10], r12	      2258	dir.c	FUNCTION_71
0x4004613	      0xe951fcffff	                           jmp 0x4004269	      2258	dir.c	FUNCTION_71
0x4004618	      0x837c241800	               cmp dword [rsp + 0x18], 0	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x400461d	     0xf8488fdffff	                            je 0x40043ab	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x4004623	            0xebc7	                           jmp 0x40045ec	      2277	dir.c	FUNCTION_72	IF_3	CALL_4
0x4004625	      0x448b6c2418	           mov r13d, dword [rsp + 0x18] 	      2069	dir.c	FUNCTION_64	WHILE_1
0x400462a	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      2074	dir.c	FUNCTION_64
0x400462e	          0x83e0fd	                     and eax, 0xfffffffd	      2074	dir.c	FUNCTION_64
0x4004631	          0x894310	             mov dword [rbx + 0x10], eax	      2074	dir.c	FUNCTION_64
0x4004634	    0x41bc00000000	                             mov r12d, 0	      2073	dir.c	FUNCTION_64
0x400463a	          0x4d63fd	                        movsxd r15, r13d	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x400463d	          0x4901ef	                            add r15, rbp	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x4004640	      0xe952fcffff	                           jmp 0x4004297	      2077	dir.c	FUNCTION_64	WHILE_2	CALL_1
0x4004645	      0xe800000000	                          call 0x400464a	      2332	dir.c	FUNCTION_72
0x400464a	        0x4883c448	                           add rsp, 0x48	      2332	dir.c	FUNCTION_72
0x400464e	              0x5b	                                 pop rbx	      2332	dir.c	FUNCTION_72
0x400464f	              0x5d	                                 pop rbp	      2332	dir.c	FUNCTION_72
0x4004650	            0x415c	                                 pop r12	      2332	dir.c	FUNCTION_72
0x4004652	            0x415d	                                 pop r13	      2332	dir.c	FUNCTION_72
0x4004654	            0x415e	                                 pop r14	      2332	dir.c	FUNCTION_72
0x4004656	            0x415f	                                 pop r15	      2332	dir.c	FUNCTION_72
0x4004658	              0xc3	                                     ret	      2332	dir.c	FUNCTION_72
read_untracked_extension	ELSE,0:SWITCH,0:IF,10:functions,0:CALL,24:FOR,0:WHILE,0:DO,0	194
0x4004e41	            0x4156	                                push r14	      2850	dir.c	FUNCTION_94
0x4004e43	            0x4155	                                push r13	      2850	dir.c	FUNCTION_94
0x4004e45	            0x4154	                                push r12	      2850	dir.c	FUNCTION_94
0x4004e47	              0x55	                                push rbp	      2850	dir.c	FUNCTION_94
0x4004e48	              0x53	                                push rbx	      2850	dir.c	FUNCTION_94
0x4004e49	        0x4883ec50	                           sub rsp, 0x50	      2850	dir.c	FUNCTION_94
0x4004e4d	    0x64488b042528	                mov rax, qword fs:[0x28]	      2850	dir.c	FUNCTION_94
0x4004e56	      0x4889442448	             mov qword [rsp + 0x48], rax	      2850	dir.c	FUNCTION_94
0x4004e5b	            0x31c0	                            xor eax, eax	      2850	dir.c	FUNCTION_94
0x4004e5d	      0x48897c2408	                mov qword [rsp + 8], rdi	      2853	dir.c	FUNCTION_94
0x4004e62	          0x4801f7	                            add rdi, rsi	      2853	dir.c	FUNCTION_94
0x4004e65	        0x4883fe01	                              cmp rsi, 1	      2858	dir.c	FUNCTION_94	IF_1
0x4004e69	     0xf86d8020000	                           jbe 0x4005147	      2858	dir.c	FUNCTION_94	IF_1
0x4004e6f	        0x807fff00	                   cmp byte [rdi - 1], 0	      2858	dir.c	FUNCTION_94	IF_1
0x4004e73	     0xf85d5020000	                           jne 0x400514e	      2858	dir.c	FUNCTION_94	IF_1
0x4004e79	        0x488d5fff	                      lea rbx, [rdi - 1]	      2860	dir.c	FUNCTION_94
0x4004e7d	      0x488d7c2408	                      lea rdi, [rsp + 8]	      2862	dir.c	FUNCTION_94	CALL_1
0x4004e82	      0xe800000000	                          call 0x4004e87	      2862	dir.c	FUNCTION_94	CALL_1
0x4004e87	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      2863	dir.c	FUNCTION_94	IF_2
0x4004e8c	          0x4c63e0	                         movsxd r12, eax	      2863	dir.c	FUNCTION_94	IF_2
0x4004e8f	      0x4b8d542500	                    lea rdx, [r13 + r12]	      2863	dir.c	FUNCTION_94	IF_2
0x4004e94	          0x4839d3	                            cmp rbx, rdx	      2863	dir.c	FUNCTION_94	IF_2
0x4004e97	     0xf82b8020000	                            jb 0x4005155	      2863	dir.c	FUNCTION_94	IF_2
0x4004e9d	      0x4889542408	                mov qword [rsp + 8], rdx	      2866	dir.c	FUNCTION_94
0x4004ea2	        0x4883c275	                           add rdx, 0x75	      2868	dir.c	FUNCTION_94	IF_3
0x4004ea6	          0x4839d3	                            cmp rbx, rdx	      2868	dir.c	FUNCTION_94	IF_3
0x4004ea9	     0xf82ad020000	                            jb 0x400515c	      2868	dir.c	FUNCTION_94	IF_3
0x4004eaf	      0xbec0000000	                           mov esi, 0xc0	      2871	dir.c	FUNCTION_94	CALL_2
0x4004eb4	      0xbf01000000	                              mov edi, 1	      2871	dir.c	FUNCTION_94	CALL_2
0x4004eb9	      0xe800000000	                          call 0x4004ebe	      2871	dir.c	FUNCTION_94	CALL_2
0x4004ebe	          0x4889c5	                            mov rbp, rax	      2871	dir.c	FUNCTION_94	CALL_2
0x4004ec1	    0x4c8db0800000	                   lea r14, [rax + 0x80]	      2872	dir.c	FUNCTION_94	CALL_3
0x4004ec8	          0x4c89e6	                            mov rsi, r12	      2872	dir.c	FUNCTION_94	CALL_3
0x4004ecb	          0x4c89f7	                            mov rdi, r14	      2872	dir.c	FUNCTION_94	CALL_3
0x4004ece	      0xe800000000	                          call 0x4004ed3	      2872	dir.c	FUNCTION_94	CALL_3
0x4004ed3	          0x4c89e2	                            mov rdx, r12	      2873	dir.c	FUNCTION_94	CALL_4
0x4004ed6	          0x4c89ee	                            mov rsi, r13	      2873	dir.c	FUNCTION_94	CALL_4
0x4004ed9	          0x4c89f7	                            mov rdi, r14	      2873	dir.c	FUNCTION_94	CALL_4
0x4004edc	      0xe800000000	                          call 0x4004ee1	      2873	dir.c	FUNCTION_94	CALL_4
0x4004ee1	      0x4c8b642408	                mov r12, qword [rsp + 8]	      2874	dir.c	FUNCTION_94	CALL_5
0x4004ee6	          0x4c89e6	                            mov rsi, r12	      2844	dir.c	FUNCTION_93	CALL_1
0x4004ee9	          0x4889ef	                            mov rdi, rbp	      2844	dir.c	FUNCTION_93	CALL_1
0x4004eec	      0xe82cb4ffff	            call sym.stat_data_from_disk	      2844	dir.c	FUNCTION_93	CALL_1
0x4004ef1	      0x498b4c244c	            mov rcx, qword [r12 + 0x4c] 	        53	string3.h	FUNCTION_107	CALL_3
0x4004ef6	        0x48894d24	            mov qword [rbp + 0x24], rcx 	        53	string3.h	FUNCTION_107	CALL_3
0x4004efa	      0x498b4c2454	            mov rcx, qword [r12 + 0x54] 	        53	string3.h	FUNCTION_107	CALL_3
0x4004eff	        0x48894d2c	            mov qword [rbp + 0x2c], rcx 	        53	string3.h	FUNCTION_107	CALL_3
0x4004f03	      0x418b54245c	            mov edx, dword [r12 + 0x5c] 	        53	string3.h	FUNCTION_107	CALL_3
0x4004f08	          0x895534	            mov dword [rbp + 0x34], edx 	        53	string3.h	FUNCTION_107	CALL_3
0x4004f0b	    0xc74538010000	               mov dword [rbp + 0x38], 1	      2846	dir.c	FUNCTION_93
0x4004f12	      0x4c8b642408	                mov r12, qword [rsp + 8]	      2877	dir.c	FUNCTION_94	CALL_6
0x4004f17	      0x498d742424	                   lea rsi, [r12 + 0x24]	      2844	dir.c	FUNCTION_93	CALL_1
0x4004f1c	        0x488d7d3c	                   lea rdi, [rbp + 0x3c]	      2844	dir.c	FUNCTION_93	CALL_1
0x4004f20	      0xe8f8b3ffff	            call sym.stat_data_from_disk	      2844	dir.c	FUNCTION_93	CALL_1
0x4004f25	      0x498b4c2460	            mov rcx, qword [r12 + 0x60] 	        53	string3.h	FUNCTION_107	CALL_3
0x4004f2a	        0x48894d60	            mov qword [rbp + 0x60], rcx 	        53	string3.h	FUNCTION_107	CALL_3
0x4004f2e	      0x498b4c2468	            mov rcx, qword [r12 + 0x68] 	        53	string3.h	FUNCTION_107	CALL_3
0x4004f33	        0x48894d68	            mov qword [rbp + 0x68], rcx 	        53	string3.h	FUNCTION_107	CALL_3
0x4004f37	      0x418b542470	            mov edx, dword [r12 + 0x70] 	        53	string3.h	FUNCTION_107	CALL_3
0x4004f3c	          0x895570	            mov dword [rbp + 0x70], edx 	        53	string3.h	FUNCTION_107	CALL_3
0x4004f3f	    0xc74574010000	               mov dword [rbp + 0x74], 1	      2846	dir.c	FUNCTION_93
0x4004f46	      0x4c8b642408	                mov r12, qword [rsp + 8]	      2880	dir.c	FUNCTION_94
0x4004f4b	      0x418b442448	            mov eax, dword [r12 + 0x48] 	        44	bswap.h	FUNCTION_191	CALL_3
0x4004f50	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_191	CALL_3
0x4004f52	    0x898598000000	            mov dword [rbp + 0x98], eax 	      2880	dir.c	FUNCTION_94
0x4004f58	        0x4983c474	                           add r12, 0x74	      2881	dir.c	FUNCTION_94
0x4004f5c	          0x4c89e7	                            mov rdi, r12	      2882	dir.c	FUNCTION_94	CALL_7
0x4004f5f	      0xe800000000	                          call 0x4004f64	      2882	dir.c	FUNCTION_94	CALL_7
0x4004f64	        0x48894578	            mov qword [rbp + 0x78], rax 	      2882	dir.c	FUNCTION_94	CALL_7
0x4004f68	      0xb800000000	                              mov eax, 0	      2884	dir.c	FUNCTION_94	CALL_8
0x4004f6d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2884	dir.c	FUNCTION_94	CALL_8
0x4004f74	          0x4c89e7	                            mov rdi, r12	      2884	dir.c	FUNCTION_94	CALL_8
0x4004f77	            0xf2ae	              repne scasb al, byte [rdi]	      2884	dir.c	FUNCTION_94	CALL_8
0x4004f79	          0x4889c8	                            mov rax, rcx	      2884	dir.c	FUNCTION_94	CALL_8
0x4004f7c	          0x48f7d0	                                 not rax	      2884	dir.c	FUNCTION_94	CALL_8
0x4004f7f	      0x488b542408	                mov rdx, qword [rsp + 8]	      2884	dir.c	FUNCTION_94	CALL_8
0x4004f84	      0x488d440274	            lea rax, [rdx + rax + 0x74] 	      2884	dir.c	FUNCTION_94	CALL_8
0x4004f89	      0x4889442408	                mov qword [rsp + 8], rax	      2884	dir.c	FUNCTION_94	CALL_8
0x4004f8e	          0x4839c3	                            cmp rbx, rax	      2885	dir.c	FUNCTION_94	IF_4
0x4004f91	     0xf8697010000	                           jbe 0x400512e	      2885	dir.c	FUNCTION_94	IF_4
0x4004f97	      0x488d7c2408	                      lea rdi, [rsp + 8]	      2888	dir.c	FUNCTION_94	CALL_9
0x4004f9c	      0xe800000000	                          call 0x4004fa1	      2888	dir.c	FUNCTION_94	CALL_9
0x4004fa1	          0x4989c4	                            mov r12, rax	      2888	dir.c	FUNCTION_94	CALL_9
0x4004fa4	      0x483b5c2408	                cmp rbx, qword [rsp + 8]	      2889	dir.c	FUNCTION_94	IF_5
0x4004fa9	     0xf827f010000	                            jb 0x400512e	      2889	dir.c	FUNCTION_94	IF_5
0x4004faf	            0x85c0	                           test eax, eax	      2889	dir.c	FUNCTION_94	IF_5
0x4004fb1	     0xf8477010000	                            je 0x400512e	      2889	dir.c	FUNCTION_94	IF_5
0x4004fb7	      0xe800000000	                          call 0x4004fbc	      2892	dir.c	FUNCTION_94	CALL_10
0x4004fbc	      0x4889442428	             mov qword [rsp + 0x28], rax	      2892	dir.c	FUNCTION_94	CALL_10
0x4004fc1	      0xe800000000	                          call 0x4004fc6	      2893	dir.c	FUNCTION_94	CALL_11
0x4004fc6	      0x4889442420	             mov qword [rsp + 0x20], rax	      2893	dir.c	FUNCTION_94	CALL_11
0x4004fcb	      0xe800000000	                          call 0x4004fd0	      2894	dir.c	FUNCTION_94	CALL_12
0x4004fd0	      0x4889442430	             mov qword [rsp + 0x30], rax	      2894	dir.c	FUNCTION_94	CALL_12
0x4004fd5	      0x488b442408	                mov rax, qword [rsp + 8]	      2895	dir.c	FUNCTION_94
0x4004fda	      0x4889442438	             mov qword [rsp + 0x38], rax	      2895	dir.c	FUNCTION_94
0x4004fdf	      0x48895c2440	             mov qword [rsp + 0x40], rbx	      2896	dir.c	FUNCTION_94
0x4004fe4	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2897	dir.c	FUNCTION_94
0x4004fec	          0x4963d4	                        movsxd rdx, r12d	      2898	dir.c	FUNCTION_94
0x4004fef	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_171	IF_1
0x4004ff9	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_171	IF_1
0x4004ffc	            0x7614	                           jbe 0x4005012	       795	git-compat-util.h	FUNCTION_171	IF_1
0x4004ffe	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_171	IF_1	CALL_1
0x4005003	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_171	IF_1	CALL_1
0x4005008	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_171	IF_1	CALL_1
0x400500d	      0xe800000000	                          call 0x4005012	       796	git-compat-util.h	FUNCTION_171	IF_1	CALL_1
0x4005012	    0x488d3cd50000	                        lea rdi, [rdx*8]	      2898	dir.c	FUNCTION_94
0x400501a	      0xe800000000	                          call 0x400501f	      2898	dir.c	FUNCTION_94
0x400501f	      0x4889442418	             mov qword [rsp + 0x18], rax	      2898	dir.c	FUNCTION_94
0x4005024	    0x488dbda00000	                   lea rdi, [rbp + 0xa0]	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x400502b	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x4005030	      0xe899bdffff	                   call sym.read_one_dir	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x4005035	            0x85c0	                           test eax, eax	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x4005037	     0xf85c9000000	                           jne 0x4005106	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x400503d	      0x443b642410	           cmp r12d, dword [rsp + 0x10] 	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x4005042	     0xf85be000000	                           jne 0x4005106	      2900	dir.c	FUNCTION_94	IF_6	CALL_13
0x4005048	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      2903	dir.c	FUNCTION_94
0x400504d	      0x4889742408	                mov qword [rsp + 8], rsi	      2903	dir.c	FUNCTION_94
0x4005052	          0x4889da	                            mov rdx, rbx	      2904	dir.c	FUNCTION_94	CALL_14
0x4005055	          0x4829f2	                            sub rdx, rsi	      2904	dir.c	FUNCTION_94	CALL_14
0x4005058	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2904	dir.c	FUNCTION_94	CALL_14
0x400505d	      0xe800000000	                          call 0x4005062	      2904	dir.c	FUNCTION_94	CALL_14
0x4005062	            0x85c0	                           test eax, eax	      2905	dir.c	FUNCTION_94	IF_7
0x4005064	     0xf889c000000	                            js 0x4005106	      2905	dir.c	FUNCTION_94	IF_7
0x400506a	            0x4898	                                    cdqe	      2908	dir.c	FUNCTION_94
0x400506c	      0x4803442408	                add rax, qword [rsp + 8]	      2908	dir.c	FUNCTION_94
0x4005071	          0x4889c6	                            mov rsi, rax	      2908	dir.c	FUNCTION_94
0x4005074	      0x4889442408	                mov qword [rsp + 8], rax	      2908	dir.c	FUNCTION_94
0x4005079	          0x4889da	                            mov rdx, rbx	      2909	dir.c	FUNCTION_94	CALL_15
0x400507c	          0x4829c2	                            sub rdx, rax	      2909	dir.c	FUNCTION_94	CALL_15
0x400507f	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2909	dir.c	FUNCTION_94	CALL_15
0x4005084	      0xe800000000	                          call 0x4005089	      2909	dir.c	FUNCTION_94	CALL_15
0x4005089	            0x85c0	                           test eax, eax	      2910	dir.c	FUNCTION_94	IF_8
0x400508b	            0x7879	                            js 0x4005106	      2910	dir.c	FUNCTION_94	IF_8
0x400508d	            0x4898	                                    cdqe	      2913	dir.c	FUNCTION_94
0x400508f	      0x4803442408	                add rax, qword [rsp + 8]	      2913	dir.c	FUNCTION_94
0x4005094	          0x4889c6	                            mov rsi, rax	      2913	dir.c	FUNCTION_94
0x4005097	      0x4889442408	                mov qword [rsp + 8], rax	      2913	dir.c	FUNCTION_94
0x400509c	          0x4889da	                            mov rdx, rbx	      2914	dir.c	FUNCTION_94	CALL_16
0x400509f	          0x4829c2	                            sub rdx, rax	      2914	dir.c	FUNCTION_94	CALL_16
0x40050a2	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2914	dir.c	FUNCTION_94	CALL_16
0x40050a7	      0xe800000000	                          call 0x40050ac	      2914	dir.c	FUNCTION_94	CALL_16
0x40050ac	          0x4189c4	                           mov r12d, eax	      2914	dir.c	FUNCTION_94	CALL_16
0x40050af	            0x85c0	                           test eax, eax	      2915	dir.c	FUNCTION_94	IF_9
0x40050b1	            0x7853	                            js 0x4005106	      2915	dir.c	FUNCTION_94	IF_9
0x40050b3	      0x488d542410	                   lea rdx, [rsp + 0x10]	      2918	dir.c	FUNCTION_94	CALL_17
0x40050b8	      0xbe00000000	                              mov esi, 0	      2918	dir.c	FUNCTION_94	CALL_17
0x40050bd	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2918	dir.c	FUNCTION_94	CALL_17
0x40050c2	      0xe800000000	                          call 0x40050c7	      2918	dir.c	FUNCTION_94	CALL_17
0x40050c7	          0x4963c4	                        movsxd rax, r12d	      2919	dir.c	FUNCTION_94
0x40050ca	      0x4803442408	                add rax, qword [rsp + 8]	      2919	dir.c	FUNCTION_94
0x40050cf	      0x4889442438	             mov qword [rsp + 0x38], rax	      2919	dir.c	FUNCTION_94
0x40050d4	      0x488d542410	                   lea rdx, [rsp + 0x10]	      2920	dir.c	FUNCTION_94	CALL_18
0x40050d9	      0xbe00000000	                              mov esi, 0	      2920	dir.c	FUNCTION_94	CALL_18
0x40050de	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2920	dir.c	FUNCTION_94	CALL_18
0x40050e3	      0xe800000000	                          call 0x40050e8	      2920	dir.c	FUNCTION_94	CALL_18
0x40050e8	      0x488d542410	                   lea rdx, [rsp + 0x10]	      2921	dir.c	FUNCTION_94	CALL_19
0x40050ed	      0xbe00000000	                              mov esi, 0	      2921	dir.c	FUNCTION_94	CALL_19
0x40050f2	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2921	dir.c	FUNCTION_94	CALL_19
0x40050f7	      0xe800000000	                          call 0x40050fc	      2921	dir.c	FUNCTION_94	CALL_19
0x40050fc	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2922	dir.c	FUNCTION_94
0x4005101	      0x4889442408	                mov qword [rsp + 8], rax	      2922	dir.c	FUNCTION_94
0x4005106	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2925	dir.c	FUNCTION_94	CALL_20
0x400510b	      0xe800000000	                          call 0x4005110	      2925	dir.c	FUNCTION_94	CALL_20
0x4005110	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2926	dir.c	FUNCTION_94	CALL_21
0x4005115	      0xe800000000	                          call 0x400511a	      2926	dir.c	FUNCTION_94	CALL_21
0x400511a	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2927	dir.c	FUNCTION_94	CALL_22
0x400511f	      0xe800000000	                          call 0x4005124	      2927	dir.c	FUNCTION_94	CALL_22
0x4005124	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2928	dir.c	FUNCTION_94	CALL_23
0x4005129	      0xe800000000	                          call 0x400512e	      2928	dir.c	FUNCTION_94	CALL_23
0x400512e	          0x4889e8	                            mov rax, rbp	      2871	dir.c	FUNCTION_94	CALL_2
0x4005131	      0x483b5c2408	                cmp rbx, qword [rsp + 8]	      2930	dir.c	FUNCTION_94	IF_10
0x4005136	            0x7429	                            je 0x4005161	      2930	dir.c	FUNCTION_94	IF_10
0x4005138	          0x4889ef	                            mov rdi, rbp	      2931	dir.c	FUNCTION_94	IF_10	CALL_24
0x400513b	      0xe800000000	                          call 0x4005140	      2931	dir.c	FUNCTION_94	IF_10	CALL_24
0x4005140	      0xb800000000	                              mov eax, 0	      2932	dir.c	FUNCTION_94	IF_10
0x4005145	            0xeb1a	                           jmp 0x4005161	      2932	dir.c	FUNCTION_94	IF_10
0x4005147	      0xb800000000	                              mov eax, 0	      2859	dir.c	FUNCTION_94	IF_1
0x400514c	            0xeb13	                           jmp 0x4005161	      2859	dir.c	FUNCTION_94	IF_1
0x400514e	      0xb800000000	                              mov eax, 0	      2859	dir.c	FUNCTION_94	IF_1
0x4005153	            0xeb0c	                           jmp 0x4005161	      2859	dir.c	FUNCTION_94	IF_1
0x4005155	      0xb800000000	                              mov eax, 0	      2864	dir.c	FUNCTION_94	IF_2
0x400515a	            0xeb05	                           jmp 0x4005161	      2864	dir.c	FUNCTION_94	IF_2
0x400515c	      0xb800000000	                              mov eax, 0	      2869	dir.c	FUNCTION_94	IF_3
0x4005161	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      2935	dir.c	FUNCTION_94
0x4005166	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2935	dir.c	FUNCTION_94
0x400516f	            0x7405	                            je 0x4005176	      2935	dir.c	FUNCTION_94
0x4005171	      0xe800000000	                          call 0x4005176	      2935	dir.c	FUNCTION_94
0x4005176	        0x4883c450	                           add rsp, 0x50	      2935	dir.c	FUNCTION_94
0x400517a	              0x5b	                                 pop rbx	      2935	dir.c	FUNCTION_94
0x400517b	              0x5d	                                 pop rbp	      2935	dir.c	FUNCTION_94
0x400517c	            0x415c	                                 pop r12	      2935	dir.c	FUNCTION_94
0x400517e	            0x415d	                                 pop r13	      2935	dir.c	FUNCTION_94
0x4005180	            0x415e	                                 pop r14	      2935	dir.c	FUNCTION_94
0x4005182	              0xc3	                                     ret	      2935	dir.c	FUNCTION_94
fill_directory	ELSE,0:SWITCH,0:IF,0:functions,0:CALL,2:FOR,0:WHILE,0:DO,0	28
0x4004659	            0x4155	                                push r13	       193	dir.c	FUNCTION_8
0x400465b	            0x4154	                                push r12	       193	dir.c	FUNCTION_8
0x400465d	              0x55	                                push rbp	       193	dir.c	FUNCTION_8
0x400465e	              0x53	                                push rbx	       193	dir.c	FUNCTION_8
0x400465f	        0x4883ec08	                              sub rsp, 8	       193	dir.c	FUNCTION_8
0x4004663	          0x4989fc	                            mov r12, rdi	       193	dir.c	FUNCTION_8
0x4004666	          0x4989f5	                            mov r13, rsi	       193	dir.c	FUNCTION_8
0x4004669	          0x4889d5	                            mov rbp, rdx	       193	dir.c	FUNCTION_8
0x400466c	          0x4889d7	                            mov rdi, rdx	       201	dir.c	FUNCTION_8	CALL_1
0x400466f	      0xe818baffff	              call sym.common_prefix_len	       201	dir.c	FUNCTION_8	CALL_1
0x4004674	          0x4889c3	                            mov rbx, rax	       201	dir.c	FUNCTION_8	CALL_1
0x4004677	      0xba00000000	                              mov edx, 0	       202	dir.c	FUNCTION_8
0x400467c	          0x4885c0	                           test rax, rax	       202	dir.c	FUNCTION_8
0x400467f	            0x7407	                            je 0x4004688	       202	dir.c	FUNCTION_8
0x4004681	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       202	dir.c	FUNCTION_8
0x4004685	          0x488b10	                    mov rdx, qword [rax]	       202	dir.c	FUNCTION_8
0x4004688	          0x4989e8	                             mov r8, rbp	       205	dir.c	FUNCTION_8	CALL_2
0x400468b	            0x89d9	                            mov ecx, ebx	       205	dir.c	FUNCTION_8	CALL_2
0x400468d	          0x4c89ee	                            mov rsi, r13	       205	dir.c	FUNCTION_8	CALL_2
0x4004690	          0x4c89e7	                            mov rdi, r12	       205	dir.c	FUNCTION_8	CALL_2
0x4004693	      0xe800000000	                          call 0x4004698	       205	dir.c	FUNCTION_8	CALL_2
0x4004698	            0x89d8	                            mov eax, ebx	       208	dir.c	FUNCTION_8
0x400469a	        0x4883c408	                              add rsp, 8	       208	dir.c	FUNCTION_8
0x400469e	              0x5b	                                 pop rbx	       208	dir.c	FUNCTION_8
0x400469f	              0x5d	                                 pop rbp	       208	dir.c	FUNCTION_8
0x40046a0	            0x415c	                                 pop r12	       208	dir.c	FUNCTION_8
0x40046a2	            0x415d	                                 pop r13	       208	dir.c	FUNCTION_8
0x40046a4	              0xc3	                                     ret	       208	dir.c	FUNCTION_8
lookup_untracked	ELSE,0:SWITCH,0:IF,5:functions,0:CALL,2:FOR,0:WHILE,1:DO,0	132
0x40007e8	            0x4157	                                push r15	       720	dir.c	FUNCTION_24
0x40007ea	            0x4156	                                push r14	       720	dir.c	FUNCTION_24
0x40007ec	            0x4155	                                push r13	       720	dir.c	FUNCTION_24
0x40007ee	            0x4154	                                push r12	       720	dir.c	FUNCTION_24
0x40007f0	              0x55	                                push rbp	       720	dir.c	FUNCTION_24
0x40007f1	              0x53	                                push rbx	       720	dir.c	FUNCTION_24
0x40007f2	        0x4883ec38	                           sub rsp, 0x38	       720	dir.c	FUNCTION_24
0x40007f6	      0x48897c2428	             mov qword [rsp + 0x28], rdi	       720	dir.c	FUNCTION_24
0x40007fb	      0x4889742418	             mov qword [rsp + 0x18], rsi	       720	dir.c	FUNCTION_24
0x4000800	      0x4889542410	             mov qword [rsp + 0x10], rdx	       720	dir.c	FUNCTION_24
0x4000805	        0x894c2424	             mov dword [rsp + 0x24], ecx	       720	dir.c	FUNCTION_24
0x4000809	          0x4885f6	                           test rsi, rsi	       723	dir.c	FUNCTION_24	IF_1
0x400080c	     0xf8490010000	                            je 0x40009a2	       723	dir.c	FUNCTION_24	IF_1
0x4000812	            0x89c8	                            mov eax, ecx	       723	dir.c	FUNCTION_24	IF_1
0x4000814	            0x89ce	                            mov esi, ecx	       725	dir.c	FUNCTION_24	IF_2
0x4000816	            0x85c9	                           test ecx, ecx	       725	dir.c	FUNCTION_24	IF_2
0x4000818	            0x7413	                            je 0x400082d	       725	dir.c	FUNCTION_24	IF_2
0x400081a	            0x4898	                                    cdqe	       725	dir.c	FUNCTION_24	IF_2
0x400081c	      0x807c02ff2f	         cmp byte [rdx + rax - 1], 0x2f 	       726	dir.c	FUNCTION_24	IF_2
0x4000821	           0xf94c0	                                 sete al	       726	dir.c	FUNCTION_24	IF_2
0x4000824	           0xfb6c0	                           movzx eax, al	       726	dir.c	FUNCTION_24	IF_2
0x4000827	            0x29c6	                            sub esi, eax	       726	dir.c	FUNCTION_24	IF_2
0x4000829	        0x89742424	             mov dword [rsp + 0x24], esi	       726	dir.c	FUNCTION_24	IF_2
0x400082d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       728	dir.c	FUNCTION_24
0x4000832	        0x448b7038	           mov r14d, dword [rax + 0x38] 	       728	dir.c	FUNCTION_24
0x4000836	    0x41bc00000000	                             mov r12d, 0	       727	dir.c	FUNCTION_24
0x400083c	      0x4863442424	         movsxd rax, dword [rsp + 0x24] 	       732	dir.c	FUNCTION_24	WHILE_1	CALL_1
0x4000841	      0x4889442408	                mov qword [rsp + 8], rax	       732	dir.c	FUNCTION_24	WHILE_1	CALL_1
0x4000846	            0xeb59	                           jmp 0x40008a1	       729	dir.c	FUNCTION_24	WHILE_1
0x4000848	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       731	dir.c	FUNCTION_24	WHILE_1
0x400084d	          0x4c8b38	                    mov r15, qword [rax]	       731	dir.c	FUNCTION_24	WHILE_1
0x4000850	        0x438d2c34	                    lea ebp, [r12 + r14]	       730	dir.c	FUNCTION_24	WHILE_1
0x4000854	            0xd1fd	                              sar ebp, 1	       730	dir.c	FUNCTION_24	WHILE_1
0x4000856	          0x4863c5	                         movsxd rax, ebp	       731	dir.c	FUNCTION_24	WHILE_1
0x4000859	        0x4d8b2cc7	            mov r13, qword [r15 + rax*8]	       731	dir.c	FUNCTION_24	WHILE_1
0x400085d	        0x498d5d59	                   lea rbx, [r13 + 0x59]	       732	dir.c	FUNCTION_24	WHILE_1	CALL_1
0x4000861	      0x488b542408	                mov rdx, qword [rsp + 8]	       732	dir.c	FUNCTION_24	WHILE_1	CALL_1
0x4000866	          0x4889de	                            mov rsi, rbx	       732	dir.c	FUNCTION_24	WHILE_1	CALL_1
0x4000869	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       732	dir.c	FUNCTION_24	WHILE_1	CALL_1
0x400086e	      0xe800000000	                          call 0x4000873	       732	dir.c	FUNCTION_24	WHILE_1	CALL_1
0x4000873	            0x85c0	                           test eax, eax	       733	dir.c	FUNCTION_24	WHILE_1	IF_3	CALL_2
0x4000875	     0xf852e010000	                           jne 0x40009a9	       733	dir.c	FUNCTION_24	WHILE_1	IF_3	CALL_2
0x400087b	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       733	dir.c	FUNCTION_24	WHILE_1	IF_3	CALL_2
0x4000882	          0x4889df	                            mov rdi, rbx	       733	dir.c	FUNCTION_24	WHILE_1	IF_3	CALL_2
0x4000885	            0xf2ae	              repne scasb al, byte [rdi]	       733	dir.c	FUNCTION_24	WHILE_1	IF_3	CALL_2
0x4000887	          0x48f7d1	                                 not rcx	       733	dir.c	FUNCTION_24	WHILE_1	IF_3	CALL_2
0x400088a	        0x4883e901	                              sub rcx, 1	       733	dir.c	FUNCTION_24	WHILE_1	IF_3	CALL_2
0x400088e	      0x48394c2408	                cmp qword [rsp + 8], rcx	       733	dir.c	FUNCTION_24	WHILE_1	IF_3	CALL_2
0x4000893	            0x7213	                            jb 0x40008a8	       733	dir.c	FUNCTION_24	WHILE_1	IF_3	CALL_2
0x4000895	          0x4c89e8	                            mov rax, r13	       731	dir.c	FUNCTION_24	WHILE_1
0x4000898	      0xe919010000	                           jmp 0x40009b6	       731	dir.c	FUNCTION_24	WHILE_1
0x400089d	        0x448d6501	                     lea r12d, [rbp + 1]	       741	dir.c	FUNCTION_24	WHILE_1
0x40008a1	          0x4539f4	                          cmp r12d, r14d	       729	dir.c	FUNCTION_24	WHILE_1
0x40008a4	            0x7ca2	                            jl 0x4000848	       729	dir.c	FUNCTION_24	WHILE_1
0x40008a6	            0xeb08	                           jmp 0x40008b0	       729	dir.c	FUNCTION_24	WHILE_1
0x40008a8	          0x4189ee	                           mov r14d, ebp	       730	dir.c	FUNCTION_24	WHILE_1
0x40008ab	          0x4439e5	                           cmp ebp, r12d	       729	dir.c	FUNCTION_24	WHILE_1
0x40008ae	            0x7fa0	                            jg 0x4000850	       729	dir.c	FUNCTION_24	WHILE_1
0x40008b0	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       744	dir.c	FUNCTION_24
0x40008b5	    0x8380a8000000	               add dword [rax + 0xa8], 1	       744	dir.c	FUNCTION_24
0x40008bc	      0x48635c2424	         movsxd rbx, dword [rsp + 0x24] 	       745	dir.c	FUNCTION_24
0x40008c1	        0x4883fb9f	             cmp rbx, 0xffffffffffffff9f	       785	git-compat-util.h	FUNCTION_170	IF_1
0x40008c5	            0x7617	                           jbe 0x40008de	       785	git-compat-util.h	FUNCTION_170	IF_1
0x40008c7	          0x4889da	                            mov rdx, rbx	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x40008ca	      0xbe60000000	                           mov esi, 0x60	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x40008cf	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x40008d4	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x40008d9	      0xe800000000	                          call 0x40008de	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x40008de	        0x4883fb9f	             cmp rbx, 0xffffffffffffff9f	       785	git-compat-util.h	FUNCTION_170	IF_1
0x40008e2	            0x751b	                           jne 0x40008ff	       785	git-compat-util.h	FUNCTION_170	IF_1
0x40008e4	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x40008e9	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x40008f0	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x40008f5	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x40008fa	      0xe800000000	                          call 0x40008ff	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x40008ff	        0x488d7361	                   lea rsi, [rbx + 0x61]	       745	dir.c	FUNCTION_24
0x4000903	      0xbf01000000	                              mov edi, 1	       745	dir.c	FUNCTION_24
0x4000908	      0xe800000000	                          call 0x400090d	       745	dir.c	FUNCTION_24
0x400090d	          0x4989c5	                            mov r13, rax	       745	dir.c	FUNCTION_24
0x4000910	        0x488d7859	                   lea rdi, [rax + 0x59]	        53	string3.h	FUNCTION_107	CALL_3
0x4000914	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_107	CALL_3
0x4000917	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_107	CALL_3
0x400091c	      0xe800000000	                          call 0x4000921	        53	string3.h	FUNCTION_107	CALL_3
0x4000921	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       747	dir.c	FUNCTION_24
0x4000926	          0x8b5638	            mov edx, dword [rsi + 0x38] 	       747	dir.c	FUNCTION_24
0x4000929	        0x89542408	                mov dword [rsp + 8], edx	       747	dir.c	FUNCTION_24
0x400092d	          0x83c201	                              add edx, 1	       747	dir.c	FUNCTION_24
0x4000930	          0x4889f3	                            mov rbx, rsi	       747	dir.c	FUNCTION_24
0x4000933	          0x8b463c	            mov eax, dword [rsi + 0x3c] 	       747	dir.c	FUNCTION_24
0x4000936	            0x39c2	                            cmp edx, eax	       747	dir.c	FUNCTION_24
0x4000938	            0x7623	                           jbe 0x400095d	       747	dir.c	FUNCTION_24
0x400093a	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	       747	dir.c	FUNCTION_24
0x400093e	            0xd1e8	                              shr eax, 1	       747	dir.c	FUNCTION_24
0x4000940	            0x39c2	                            cmp edx, eax	       747	dir.c	FUNCTION_24
0x4000942	           0xf47c2	                          cmova eax, edx	       747	dir.c	FUNCTION_24
0x4000945	          0x89463c	             mov dword [rsi + 0x3c], eax	       747	dir.c	FUNCTION_24
0x4000948	            0x89c0	                            mov eax, eax	       747	dir.c	FUNCTION_24
0x400094a	    0x488d34c50000	                        lea rsi, [rax*8]	       747	dir.c	FUNCTION_24
0x4000952	          0x488b3b	                    mov rdi, qword [rbx]	       747	dir.c	FUNCTION_24
0x4000955	      0xe800000000	                          call 0x400095a	       747	dir.c	FUNCTION_24
0x400095a	          0x488903	                    mov qword [rbx], rax	       747	dir.c	FUNCTION_24
0x400095d	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       748	dir.c	FUNCTION_24
0x4000962	          0x8b5638	            mov edx, dword [rsi + 0x38] 	       748	dir.c	FUNCTION_24
0x4000965	          0x4429e2	                           sub edx, r12d	       748	dir.c	FUNCTION_24
0x4000968	          0x4d63e4	                        movsxd r12, r12d	       748	dir.c	FUNCTION_24
0x400096b	    0x4a8d04e50000	                        lea rax, [r12*8]	       748	dir.c	FUNCTION_24
0x4000973	          0x4885d2	                           test rdx, rdx	       861	git-compat-util.h	FUNCTION_174	IF_1
0x4000976	            0x7415	                            je 0x400098d	       861	git-compat-util.h	FUNCTION_174	IF_1
0x4000978	          0x488b0e	                    mov rcx, qword [rsi]	       748	dir.c	FUNCTION_24
0x400097b	        0x48c1e203	                              shl rdx, 3	        59	string3.h	FUNCTION_108	CALL_3
0x400097f	        0x488d3401	                    lea rsi, [rcx + rax]	        59	string3.h	FUNCTION_108	CALL_3
0x4000983	      0x488d7c0108	                lea rdi, [rcx + rax + 8]	        59	string3.h	FUNCTION_108	CALL_3
0x4000988	      0xe800000000	                          call 0x400098d	        59	string3.h	FUNCTION_108	CALL_3
0x400098d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       750	dir.c	FUNCTION_24
0x4000992	        0x83403801	               add dword [rax + 0x38], 1	       750	dir.c	FUNCTION_24
0x4000996	          0x488b00	                    mov rax, qword [rax]	       751	dir.c	FUNCTION_24
0x4000999	        0x4e892ce0	            mov qword [rax + r12*8], r13	       751	dir.c	FUNCTION_24
0x400099d	          0x4c89e8	                            mov rax, r13	       752	dir.c	FUNCTION_24
0x40009a0	            0xeb14	                           jmp 0x40009b6	       752	dir.c	FUNCTION_24
0x40009a2	      0xb800000000	                              mov eax, 0	       724	dir.c	FUNCTION_24	IF_1
0x40009a7	            0xeb0d	                           jmp 0x40009b6	       724	dir.c	FUNCTION_24	IF_1
0x40009a9	            0x85c0	                           test eax, eax	       737	dir.c	FUNCTION_24	WHILE_1	IF_5
0x40009ab	     0xf89ecfeffff	                           jns 0x400089d	       737	dir.c	FUNCTION_24	WHILE_1	IF_5
0x40009b1	      0xe9f2feffff	                           jmp 0x40008a8	       737	dir.c	FUNCTION_24	WHILE_1	IF_5
0x40009b6	        0x4883c438	                           add rsp, 0x38	       753	dir.c	FUNCTION_24
0x40009ba	              0x5b	                                 pop rbx	       753	dir.c	FUNCTION_24
0x40009bb	              0x5d	                                 pop rbp	       753	dir.c	FUNCTION_24
0x40009bc	            0x415c	                                 pop r12	       753	dir.c	FUNCTION_24
0x40009be	            0x415d	                                 pop r13	       753	dir.c	FUNCTION_24
0x40009c0	            0x415e	                                 pop r14	       753	dir.c	FUNCTION_24
0x40009c2	            0x415f	                                 pop r15	       753	dir.c	FUNCTION_24
0x40009c4	              0xc3	                                     ret	       753	dir.c	FUNCTION_24
directory_exists_in_index	ELSE,0:SWITCH,0:IF,6:functions,0:CALL,3:FOR,0:WHILE,1:DO,0	82
0x4000a83	            0x4157	                                push r15	      1394	dir.c	FUNCTION_47
0x4000a85	            0x4156	                                push r14	      1394	dir.c	FUNCTION_47
0x4000a87	            0x4155	                                push r13	      1394	dir.c	FUNCTION_47
0x4000a89	            0x4154	                                push r12	      1394	dir.c	FUNCTION_47
0x4000a8b	              0x55	                                push rbp	      1394	dir.c	FUNCTION_47
0x4000a8c	              0x53	                                push rbx	      1394	dir.c	FUNCTION_47
0x4000a8d	        0x4883ec08	                              sub rsp, 8	      1394	dir.c	FUNCTION_47
0x4000a91	          0x4989fc	                            mov r12, rdi	      1394	dir.c	FUNCTION_47
0x4000a94	          0x4989f5	                            mov r13, rsi	      1394	dir.c	FUNCTION_47
0x4000a97	            0x89d3	                            mov ebx, edx	      1394	dir.c	FUNCTION_47
0x4000a99	    0x833d00000000	               cmp dword [0x04000aa0], 0	      1397	dir.c	FUNCTION_47	IF_1
0x4000aa0	            0x744a	                            je 0x4000aec	      1397	dir.c	FUNCTION_47	IF_1
0x4000aa2	      0xe800000000	                          call 0x4000aa7	      1375	dir.c	FUNCTION_46	IF_1	CALL_1
0x4000aa7	            0x89c2	                            mov edx, eax	      1375	dir.c	FUNCTION_46	IF_1	CALL_1
0x4000aa9	      0xb801000000	                              mov eax, 1	      1376	dir.c	FUNCTION_46	IF_1
0x4000aae	            0x85d2	                           test edx, edx	      1375	dir.c	FUNCTION_46	IF_1	CALL_1
0x4000ab0	     0xf85bd000000	                           jne 0x4000b73	      1375	dir.c	FUNCTION_46	IF_1	CALL_1
0x4000ab6	    0x8b0d00000000	            mov ecx, dword [0x04000abc] 	      1378	dir.c	FUNCTION_46	CALL_2
0x4000abc	            0x89da	                            mov edx, ebx	      1378	dir.c	FUNCTION_46	CALL_2
0x4000abe	          0x4c89ee	                            mov rsi, r13	      1378	dir.c	FUNCTION_46	CALL_2
0x4000ac1	          0x4c89e7	                            mov rdi, r12	      1378	dir.c	FUNCTION_46	CALL_2
0x4000ac4	      0xe800000000	                          call 0x4000ac9	      1378	dir.c	FUNCTION_46	CALL_2
0x4000ac9	          0x4885c0	                           test rax, rax	      1379	dir.c	FUNCTION_46	IF_2
0x4000acc	     0xf8480000000	                            je 0x4000b52	      1379	dir.c	FUNCTION_46	IF_2
0x4000ad2	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1379	dir.c	FUNCTION_46	IF_2
0x4000ad5	      0x2500f00000	                         and eax, 0xf000	      1379	dir.c	FUNCTION_46	IF_2
0x4000ada	      0x3d00e00000	                         cmp eax, 0xe000	      1380	dir.c	FUNCTION_46	IF_2
0x4000adf	           0xf94c0	                                 sete al	      1380	dir.c	FUNCTION_46	IF_2
0x4000ae2	           0xfb6c0	                           movzx eax, al	      1380	dir.c	FUNCTION_46	IF_2
0x4000ae5	             0x1c0	                            add eax, eax	      1380	dir.c	FUNCTION_46	IF_2
0x4000ae7	      0xe987000000	                           jmp 0x4000b73	      1380	dir.c	FUNCTION_46	IF_2
0x4000aec	      0xe800000000	                          call 0x4000af1	      1400	dir.c	FUNCTION_47	CALL_2
0x4000af1	              0x99	                                     cdq	      1402	dir.c	FUNCTION_47	IF_2
0x4000af2	            0x31d0	                            xor eax, edx	      1402	dir.c	FUNCTION_47	IF_2
0x4000af4	      0x458b74240c	            mov r14d, dword [r12 + 0xc] 	      1403	dir.c	FUNCTION_47	WHILE_1
0x4000af9	          0x4863db	                         movsxd rbx, ebx	      1407	dir.c	FUNCTION_47	WHILE_1	IF_3	CALL_3
0x4000afc	            0xeb48	                           jmp 0x4000b46	      1407	dir.c	FUNCTION_47	WHILE_1	IF_3	CALL_3
0x4000afe	          0x8d6801	                      lea ebp, [rax + 1]	      1404	dir.c	FUNCTION_47	WHILE_1
0x4000b01	            0x4898	                                    cdqe	      1404	dir.c	FUNCTION_47	WHILE_1
0x4000b03	        0x498b1424	                    mov rdx, qword [r12]	      1404	dir.c	FUNCTION_47	WHILE_1
0x4000b07	        0x4c8b3cc2	            mov r15, qword [rdx + rax*8]	      1404	dir.c	FUNCTION_47	WHILE_1
0x4000b0b	        0x498d7f58	                   lea rdi, [r15 + 0x58]	      1407	dir.c	FUNCTION_47	WHILE_1	IF_3	CALL_3
0x4000b0f	          0x4889da	                            mov rdx, rbx	      1407	dir.c	FUNCTION_47	WHILE_1	IF_3	CALL_3
0x4000b12	          0x4c89ee	                            mov rsi, r13	      1407	dir.c	FUNCTION_47	WHILE_1	IF_3	CALL_3
0x4000b15	      0xe800000000	                          call 0x4000b1a	      1407	dir.c	FUNCTION_47	WHILE_1	IF_3	CALL_3
0x4000b1a	            0x85c0	                           test eax, eax	      1407	dir.c	FUNCTION_47	WHILE_1	IF_3	CALL_3
0x4000b1c	            0x753b	                           jne 0x4000b59	      1407	dir.c	FUNCTION_47	WHILE_1	IF_3	CALL_3
0x4000b1e	    0x410fb6441f58	     movzx eax, byte [r15 + rbx + 0x58] 	      1409	dir.c	FUNCTION_47	WHILE_1
0x4000b24	            0x3c2f	                            cmp al, 0x2f	      1410	dir.c	FUNCTION_47	WHILE_1	IF_4
0x4000b26	            0x7738	                            ja 0x4000b60	      1410	dir.c	FUNCTION_47	WHILE_1	IF_4
0x4000b28	            0x3c2f	                            cmp al, 0x2f	      1412	dir.c	FUNCTION_47	WHILE_1	IF_5
0x4000b2a	            0x743b	                            je 0x4000b67	      1412	dir.c	FUNCTION_47	WHILE_1	IF_5
0x4000b2c	            0x84c0	                             test al, al	      1414	dir.c	FUNCTION_47	WHILE_1	IF_6
0x4000b2e	            0x7514	                           jne 0x4000b44	      1414	dir.c	FUNCTION_47	WHILE_1	IF_6
0x4000b30	        0x418b4734	            mov eax, dword [r15 + 0x34] 	      1414	dir.c	FUNCTION_47	WHILE_1	IF_6
0x4000b34	      0x2500f00000	                         and eax, 0xf000	      1414	dir.c	FUNCTION_47	WHILE_1	IF_6
0x4000b39	      0x3d00e00000	                         cmp eax, 0xe000	      1414	dir.c	FUNCTION_47	WHILE_1	IF_6
0x4000b3e	            0x742e	                            je 0x4000b6e	      1414	dir.c	FUNCTION_47	WHILE_1	IF_6
0x4000b40	            0x89e8	                            mov eax, ebp	      1414	dir.c	FUNCTION_47	WHILE_1	IF_6
0x4000b42	            0xeb02	                           jmp 0x4000b46	      1414	dir.c	FUNCTION_47	WHILE_1	IF_6
0x4000b44	            0x89e8	                            mov eax, ebp	      1414	dir.c	FUNCTION_47	WHILE_1	IF_6
0x4000b46	          0x4439f0	                           cmp eax, r14d	      1403	dir.c	FUNCTION_47	WHILE_1
0x4000b49	            0x72b3	                            jb 0x4000afe	      1403	dir.c	FUNCTION_47	WHILE_1
0x4000b4b	      0xb800000000	                              mov eax, 0	      1417	dir.c	FUNCTION_47
0x4000b50	            0xeb21	                           jmp 0x4000b73	      1417	dir.c	FUNCTION_47
0x4000b52	      0xb800000000	                              mov eax, 0	      1382	dir.c	FUNCTION_46
0x4000b57	            0xeb1a	                           jmp 0x4000b73	      1382	dir.c	FUNCTION_46
0x4000b59	      0xb800000000	                              mov eax, 0	      1417	dir.c	FUNCTION_47
0x4000b5e	            0xeb13	                           jmp 0x4000b73	      1417	dir.c	FUNCTION_47
0x4000b60	      0xb800000000	                              mov eax, 0	      1417	dir.c	FUNCTION_47
0x4000b65	            0xeb0c	                           jmp 0x4000b73	      1417	dir.c	FUNCTION_47
0x4000b67	      0xb801000000	                              mov eax, 1	      1413	dir.c	FUNCTION_47	WHILE_1	IF_5
0x4000b6c	            0xeb05	                           jmp 0x4000b73	      1413	dir.c	FUNCTION_47	WHILE_1	IF_5
0x4000b6e	      0xb802000000	                              mov eax, 2	      1415	dir.c	FUNCTION_47	WHILE_1	IF_6
0x4000b73	        0x4883c408	                              add rsp, 8	      1418	dir.c	FUNCTION_47
0x4000b77	              0x5b	                                 pop rbx	      1418	dir.c	FUNCTION_47
0x4000b78	              0x5d	                                 pop rbp	      1418	dir.c	FUNCTION_47
0x4000b79	            0x415c	                                 pop r12	      1418	dir.c	FUNCTION_47
0x4000b7b	            0x415d	                                 pop r13	      1418	dir.c	FUNCTION_47
0x4000b7d	            0x415e	                                 pop r14	      1418	dir.c	FUNCTION_47
0x4000b7f	            0x415f	                                 pop r15	      1418	dir.c	FUNCTION_47
0x4000b81	              0xc3	                                     ret	      1418	dir.c	FUNCTION_47
add_exclude_list	ELSE,0:SWITCH,0:IF,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0	48
0x4002649	              0x55	                                push rbp	       924	dir.c	FUNCTION_32
0x400264a	              0x53	                                push rbx	       924	dir.c	FUNCTION_32
0x400264b	        0x4883ec08	                              sub rsp, 8	       924	dir.c	FUNCTION_32
0x400264f	          0x4889d5	                            mov rbp, rdx	       924	dir.c	FUNCTION_32
0x4002652	          0x4863f6	                         movsxd rsi, esi	       924	dir.c	FUNCTION_32
0x4002655	        0x48c1e604	                              shl rsi, 4	       924	dir.c	FUNCTION_32
0x4002659	        0x488d1c37	                    lea rbx, [rdi + rsi]	       924	dir.c	FUNCTION_32
0x400265d	          0x8b4330	            mov eax, dword [rbx + 0x30] 	       929	dir.c	FUNCTION_32
0x4002660	          0x8d5001	                      lea edx, [rax + 1]	       929	dir.c	FUNCTION_32
0x4002663	          0x8b4334	            mov eax, dword [rbx + 0x34] 	       929	dir.c	FUNCTION_32
0x4002666	            0x39c2	                            cmp edx, eax	       929	dir.c	FUNCTION_32
0x4002668	            0x7e4f	                           jle 0x40026b9	       929	dir.c	FUNCTION_32
0x400266a	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	       929	dir.c	FUNCTION_32
0x400266e	            0x89c6	                            mov esi, eax	       929	dir.c	FUNCTION_32
0x4002670	          0xc1ee1f	                           shr esi, 0x1f	       929	dir.c	FUNCTION_32
0x4002673	             0x1c6	                            add esi, eax	       929	dir.c	FUNCTION_32
0x4002675	            0xd1fe	                              sar esi, 1	       929	dir.c	FUNCTION_32
0x4002677	            0x39f2	                            cmp edx, esi	       929	dir.c	FUNCTION_32
0x4002679	           0xf4ff2	                          cmovg esi, edx	       929	dir.c	FUNCTION_32
0x400267c	          0x897334	             mov dword [rbx + 0x34], esi	       929	dir.c	FUNCTION_32
0x400267f	          0x4863d6	                         movsxd rdx, esi	       929	dir.c	FUNCTION_32
0x4002682	    0x48b8ffffffff	          movabs rax, 0x7ffffffffffffff 	       795	git-compat-util.h	FUNCTION_171	IF_1
0x400268c	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_171	IF_1
0x400268f	            0x7614	                           jbe 0x40026a5	       795	git-compat-util.h	FUNCTION_171	IF_1
0x4002691	      0xbe20000000	                           mov esi, 0x20	       796	git-compat-util.h	FUNCTION_171	IF_1	CALL_1
0x4002696	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_171	IF_1	CALL_1
0x400269b	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_171	IF_1	CALL_1
0x40026a0	      0xe800000000	                          call 0x40026a5	       796	git-compat-util.h	FUNCTION_171	IF_1	CALL_1
0x40026a5	        0x48c1e205	                              shl rdx, 5	       929	dir.c	FUNCTION_32
0x40026a9	          0x4889d6	                            mov rsi, rdx	       929	dir.c	FUNCTION_32
0x40026ac	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	       929	dir.c	FUNCTION_32
0x40026b0	      0xe800000000	                          call 0x40026b5	       929	dir.c	FUNCTION_32
0x40026b5	        0x48894338	             mov qword [rbx + 0x38], rax	       929	dir.c	FUNCTION_32
0x40026b9	        0x488b4b38	            mov rcx, qword [rbx + 0x38] 	       930	dir.c	FUNCTION_32
0x40026bd	          0x8b5330	            mov edx, dword [rbx + 0x30] 	       930	dir.c	FUNCTION_32
0x40026c0	          0x8d4201	                      lea eax, [rdx + 1]	       930	dir.c	FUNCTION_32
0x40026c3	          0x894330	             mov dword [rbx + 0x30], eax	       930	dir.c	FUNCTION_32
0x40026c6	          0x4863c2	                         movsxd rax, edx	       930	dir.c	FUNCTION_32
0x40026c9	        0x48c1e005	                              shl rax, 5	       930	dir.c	FUNCTION_32
0x40026cd	        0x488d0401	                    lea rax, [rcx + rax]	       930	dir.c	FUNCTION_32
0x40026d1	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_110	CALL_6
0x40026d8	    0x48c740080000	                  mov qword [rax + 8], 0	        90	string3.h	FUNCTION_110	CALL_6
0x40026e0	    0x48c740180000	               mov qword [rax + 0x18], 0	        90	string3.h	FUNCTION_110	CALL_6
0x40026e8	        0x48896810	             mov qword [rax + 0x10], rbp	       932	dir.c	FUNCTION_32
0x40026ec	        0x4883c408	                              add rsp, 8	       934	dir.c	FUNCTION_32
0x40026f0	              0x5b	                                 pop rbx	       934	dir.c	FUNCTION_32
0x40026f1	              0x5d	                                 pop rbp	       934	dir.c	FUNCTION_32
0x40026f2	              0xc3	                                     ret	       934	dir.c	FUNCTION_32
count_slashes	ELSE,0:SWITCH,0:IF,1:functions,0:CALL,0:FOR,0:WHILE,1:DO,0	11
0x4001601	      0xb800000000	                              mov eax, 0	        60	dir.c	FUNCTION_1
0x4001606	            0xeb0f	                           jmp 0x4001617	        61	dir.c	FUNCTION_1	WHILE_1
0x4001608	        0x4883c701	                              add rdi, 1	        62	dir.c	FUNCTION_1	WHILE_1	IF_1
0x400160c	          0x80fa2f	                            cmp dl, 0x2f	        63	dir.c	FUNCTION_1	WHILE_1	IF_1
0x400160f	           0xf94c2	                                 sete dl	        63	dir.c	FUNCTION_1	WHILE_1	IF_1
0x4001612	           0xfb6d2	                           movzx edx, dl	        63	dir.c	FUNCTION_1	WHILE_1	IF_1
0x4001615	             0x1d0	                            add eax, edx	        63	dir.c	FUNCTION_1	WHILE_1	IF_1
0x4001617	           0xfb617	                   movzx edx, byte [rdi]	        61	dir.c	FUNCTION_1	WHILE_1
0x400161a	            0x84d2	                             test dl, dl	        61	dir.c	FUNCTION_1	WHILE_1
0x400161c	            0x75ea	                           jne 0x4001608	        61	dir.c	FUNCTION_1	WHILE_1
0x400161e	            0xf3c3	                                     ret	        65	dir.c	FUNCTION_1
simple_length	ELSE,0:SWITCH,0:IF,1:functions,0:CALL,0:FOR,1:WHILE,0:DO,0	10
0x4001e9e	      0xb900000000	                              mov ecx, 0	       574	dir.c	FUNCTION_17
0x4001ea3	         0xfb6140f	             movzx edx, byte [rdi + rcx]	       578	dir.c	FUNCTION_17	FOR_1
0x4001ea7	            0x89c8	                            mov eax, ecx	       579	dir.c	FUNCTION_17	FOR_1
0x4001ea9	            0x84d2	                             test dl, dl	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x4001eab	            0x7410	                            je 0x4001ebd	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x4001ead	        0x4883c101	                              add rcx, 1	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x4001eb1	           0xfb6d2	                           movzx edx, dl	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x4001eb4	    0xf68200000000	                      test byte [rdx], 8	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x4001ebb	            0x74e6	                            je 0x4001ea3	       580	dir.c	FUNCTION_17	FOR_1	IF_1
0x4001ebd	            0xf3c3	                                     ret	       583	dir.c	FUNCTION_17
match_pathname	ELSE,0:SWITCH,0:IF,6:functions,0:CALL,3:FOR,0:WHILE,0:DO,0	87
0x4002803	            0x4156	                                push r14	       989	dir.c	FUNCTION_36
0x4002805	            0x4155	                                push r13	       989	dir.c	FUNCTION_36
0x4002807	            0x4154	                                push r12	       989	dir.c	FUNCTION_36
0x4002809	              0x55	                                push rbp	       989	dir.c	FUNCTION_36
0x400280a	              0x53	                                push rbx	       989	dir.c	FUNCTION_36
0x400280b	          0x4989fe	                            mov r14, rdi	       989	dir.c	FUNCTION_36
0x400280e	            0x89f3	                            mov ebx, esi	       989	dir.c	FUNCTION_36
0x4002810	          0x4889d6	                            mov rsi, rdx	       989	dir.c	FUNCTION_36
0x4002813	            0x89cd	                            mov ebp, ecx	       989	dir.c	FUNCTION_36
0x4002815	          0x4d89c4	                             mov r12, r8	       989	dir.c	FUNCTION_36
0x4002818	          0x4589cd	                           mov r13d, r9d	       989	dir.c	FUNCTION_36
0x400281b	        0x4180382f	                     cmp byte [r8], 0x2f	       997	dir.c	FUNCTION_36	IF_1
0x400281f	            0x750d	                           jne 0x400282e	       997	dir.c	FUNCTION_36	IF_1
0x4002821	        0x4983c401	                              add r12, 1	       998	dir.c	FUNCTION_36	IF_1
0x4002825	      0x836c243001	               sub dword [rsp + 0x30], 1	       999	dir.c	FUNCTION_36	IF_1
0x400282a	        0x4183ed01	                             sub r13d, 1	      1000	dir.c	FUNCTION_36	IF_1
0x400282e	          0x8d5501	                      lea edx, [rbp + 1]	      1007	dir.c	FUNCTION_36	IF_2
0x4002831	      0xb800000000	                              mov eax, 0	      1010	dir.c	FUNCTION_36	IF_2
0x4002836	            0x39da	                            cmp edx, ebx	      1007	dir.c	FUNCTION_36	IF_2
0x4002838	     0xf8fd2000000	                            jg 0x4002910	      1007	dir.c	FUNCTION_36	IF_2
0x400283e	            0x85ed	                           test ebp, ebp	      1007	dir.c	FUNCTION_36	IF_2
0x4002840	     0xf84ac000000	                            je 0x40028f2	      1007	dir.c	FUNCTION_36	IF_2
0x4002846	          0x4863d5	                         movsxd rdx, ebp	      1008	dir.c	FUNCTION_36	IF_2
0x4002849	      0x41803c162f	              cmp byte [r14 + rdx], 0x2f	      1008	dir.c	FUNCTION_36	IF_2
0x400284e	     0xf85bc000000	                           jne 0x4002910	      1008	dir.c	FUNCTION_36	IF_2
0x4002854	      0xe987000000	                           jmp 0x40028e0	      1008	dir.c	FUNCTION_36	IF_2
0x4002859	            0x89d8	                            mov eax, ebx	      1012	dir.c	FUNCTION_36
0x400285b	            0x29e8	                            sub eax, ebp	      1012	dir.c	FUNCTION_36
0x400285d	            0x89c5	                            mov ebp, eax	      1012	dir.c	FUNCTION_36
0x400285f	          0x83ed01	                              sub ebp, 1	      1012	dir.c	FUNCTION_36
0x4002862	          0x4863db	                         movsxd rbx, ebx	      1013	dir.c	FUNCTION_36
0x4002865	          0x4863c5	                         movsxd rax, ebp	      1013	dir.c	FUNCTION_36
0x4002868	          0x4829c3	                            sub rbx, rax	      1013	dir.c	FUNCTION_36
0x400286b	          0x4901de	                            add r14, rbx	      1013	dir.c	FUNCTION_36
0x400286e	          0x4585ed	                         test r13d, r13d	      1015	dir.c	FUNCTION_36	IF_3
0x4002871	            0x7445	                            je 0x40028b8	      1015	dir.c	FUNCTION_36	IF_3
0x4002873	      0xb800000000	                              mov eax, 0	      1021	dir.c	FUNCTION_36	IF_3	IF_4
0x4002878	          0x4139ed	                           cmp r13d, ebp	      1020	dir.c	FUNCTION_36	IF_3	IF_4
0x400287b	     0xf8f8f000000	                            jg 0x4002910	      1020	dir.c	FUNCTION_36	IF_3	IF_4
0x4002881	          0x4963dd	                        movsxd rbx, r13d	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x4002884	          0x4889da	                            mov rdx, rbx	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x4002887	          0x4c89f6	                            mov rsi, r14	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x400288a	          0x4c89e7	                            mov rdi, r12	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x400288d	      0xe800000000	                          call 0x4002892	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x4002892	            0x89c2	                            mov edx, eax	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x4002894	      0xb800000000	                              mov eax, 0	      1024	dir.c	FUNCTION_36	IF_3	IF_5
0x4002899	            0x85d2	                           test edx, edx	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x400289b	            0x7573	                           jne 0x4002910	      1023	dir.c	FUNCTION_36	IF_3	IF_5	CALL_2
0x400289d	      0x44296c2430	            sub dword [rsp + 0x30], r13d	      1026	dir.c	FUNCTION_36	IF_3
0x40028a2	          0x4429ed	                           sub ebp, r13d	      1028	dir.c	FUNCTION_36	IF_3
0x40028a5	      0xb801000000	                              mov eax, 1	      1036	dir.c	FUNCTION_36	IF_3	IF_6
0x40028aa	            0x89e9	                            mov ecx, ebp	      1035	dir.c	FUNCTION_36	IF_3	IF_6
0x40028ac	         0xb4c2430	              or ecx, dword [rsp + 0x30]	      1035	dir.c	FUNCTION_36	IF_3	IF_6
0x40028b0	            0x745e	                            je 0x4002910	      1035	dir.c	FUNCTION_36	IF_3	IF_6
0x40028b2	          0x4901dc	                            add r12, rbx	      1025	dir.c	FUNCTION_36	IF_3
0x40028b5	          0x4901de	                            add r14, rbx	      1027	dir.c	FUNCTION_36	IF_3
0x40028b8	    0x41b802000000	                              mov r8d, 2	      1039	dir.c	FUNCTION_36	CALL_3
0x40028be	            0x89e9	                            mov ecx, ebp	      1039	dir.c	FUNCTION_36	CALL_3
0x40028c0	          0x4c89f2	                            mov rdx, r14	      1039	dir.c	FUNCTION_36	CALL_3
0x40028c3	        0x8b742430	            mov esi, dword [rsp + 0x30] 	      1039	dir.c	FUNCTION_36	CALL_3
0x40028c7	          0x4c89e7	                            mov rdi, r12	      1039	dir.c	FUNCTION_36	CALL_3
0x40028ca	      0xe824dcffff	              call sym.fnmatch_icase_mem	      1039	dir.c	FUNCTION_36	CALL_3
0x40028cf	            0x85c0	                           test eax, eax	      1039	dir.c	FUNCTION_36	CALL_3
0x40028d1	           0xf94c0	                                 sete al	      1039	dir.c	FUNCTION_36	CALL_3
0x40028d4	           0xfb6c0	                           movzx eax, al	      1039	dir.c	FUNCTION_36	CALL_3
0x40028d7	            0xeb37	                           jmp 0x4002910	      1039	dir.c	FUNCTION_36	CALL_3
0x40028d9	      0xb800000000	                              mov eax, 0	      1010	dir.c	FUNCTION_36	IF_2
0x40028de	            0xeb30	                           jmp 0x4002910	      1010	dir.c	FUNCTION_36	IF_2
0x40028e0	          0x4c89f7	                            mov rdi, r14	      1009	dir.c	FUNCTION_36	IF_2	CALL_1
0x40028e3	      0xe800000000	                          call 0x40028e8	      1009	dir.c	FUNCTION_36	IF_2	CALL_1
0x40028e8	            0x85c0	                           test eax, eax	      1008	dir.c	FUNCTION_36	IF_2
0x40028ea	     0xf8469ffffff	                            je 0x4002859	      1008	dir.c	FUNCTION_36	IF_2
0x40028f0	            0xebe7	                           jmp 0x40028d9	      1008	dir.c	FUNCTION_36	IF_2
0x40028f2	      0xba00000000	                              mov edx, 0	      1009	dir.c	FUNCTION_36	IF_2	CALL_1
0x40028f7	          0x4c89f7	                            mov rdi, r14	      1009	dir.c	FUNCTION_36	IF_2	CALL_1
0x40028fa	      0xe800000000	                          call 0x40028ff	      1009	dir.c	FUNCTION_36	IF_2	CALL_1
0x40028ff	            0x89c2	                            mov edx, eax	      1009	dir.c	FUNCTION_36	IF_2	CALL_1
0x4002901	      0xb800000000	                              mov eax, 0	      1010	dir.c	FUNCTION_36	IF_2
0x4002906	            0x89dd	                            mov ebp, ebx	      1012	dir.c	FUNCTION_36
0x4002908	            0x85d2	                           test edx, edx	      1008	dir.c	FUNCTION_36	IF_2
0x400290a	     0xf8452ffffff	                            je 0x4002862	      1008	dir.c	FUNCTION_36	IF_2
0x4002910	              0x5b	                                 pop rbx	      1042	dir.c	FUNCTION_36
0x4002911	              0x5d	                                 pop rbp	      1042	dir.c	FUNCTION_36
0x4002912	            0x415c	                                 pop r12	      1042	dir.c	FUNCTION_36
0x4002914	            0x415d	                                 pop r13	      1042	dir.c	FUNCTION_36
0x4002916	            0x415e	                                 pop r14	      1042	dir.c	FUNCTION_36
0x4002918	              0xc3	                                     ret	      1042	dir.c	FUNCTION_36
relocate_gitdir	ELSE,0:SWITCH,0:IF,1:functions,0:CALL,4:FOR,0:WHILE,0:DO,0	28
0x4005637	            0x4154	                                push r12	      3106	dir.c	FUNCTION_102
0x4005639	              0x55	                                push rbp	      3106	dir.c	FUNCTION_102
0x400563a	              0x53	                                push rbx	      3106	dir.c	FUNCTION_102
0x400563b	          0x4989fc	                            mov r12, rdi	      3106	dir.c	FUNCTION_102
0x400563e	          0x4889f5	                            mov rbp, rsi	      3106	dir.c	FUNCTION_102
0x4005641	          0x4889d3	                            mov rbx, rdx	      3106	dir.c	FUNCTION_102
0x4005644	          0x4889d6	                            mov rsi, rdx	      3107	dir.c	FUNCTION_102	IF_1	CALL_1
0x4005647	          0x4889ef	                            mov rdi, rbp	      3107	dir.c	FUNCTION_102	IF_1	CALL_1
0x400564a	      0xe800000000	                          call 0x400564f	      3107	dir.c	FUNCTION_102	IF_1	CALL_1
0x400564f	            0x85c0	                           test eax, eax	      3107	dir.c	FUNCTION_102	IF_1	CALL_1
0x4005651	            0x7927	                           jns 0x400567a	      3107	dir.c	FUNCTION_102	IF_1	CALL_1
0x4005653	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_105
0x4005658	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_105
0x400565d	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_105
0x4005662	      0xe800000000	                          call 0x4005667	        54	gettext.h	FUNCTION_105
0x4005667	          0x4889da	                            mov rdx, rbx	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
0x400566a	          0x4889ee	                            mov rsi, rbp	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
0x400566d	          0x4889c7	                            mov rdi, rax	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
0x4005670	      0xb800000000	                              mov eax, 0	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
0x4005675	      0xe800000000	                          call 0x400567a	      3108	dir.c	FUNCTION_102	IF_1	CALL_3
0x400567a	      0xba00000000	                              mov edx, 0	      3111	dir.c	FUNCTION_102	CALL_4
0x400567f	          0x4889de	                            mov rsi, rbx	      3111	dir.c	FUNCTION_102	CALL_4
0x4005682	          0x4c89e7	                            mov rdi, r12	      3111	dir.c	FUNCTION_102	CALL_4
0x4005685	      0xe800000000	                          call 0x400568a	      3111	dir.c	FUNCTION_102	CALL_4
0x400568a	              0x5b	                                 pop rbx	      3112	dir.c	FUNCTION_102
0x400568b	              0x5d	                                 pop rbp	      3112	dir.c	FUNCTION_102
0x400568c	            0x415c	                                 pop r12	      3112	dir.c	FUNCTION_102
0x400568e	              0xc3	                                     ret	      3112	dir.c	FUNCTION_102
read_sha1	ELSE,0:SWITCH,0:IF,1:functions,0:CALL,1:FOR,0:WHILE,0:DO,0	19
0x400019e	        0x488b5628	            mov rdx, qword [rsi + 0x28] 	      2833	dir.c	FUNCTION_92	IF_1
0x40001a2	        0x488b4630	            mov rax, qword [rsi + 0x30] 	      2833	dir.c	FUNCTION_92	IF_1
0x40001a6	        0x488d4a14	                   lea rcx, [rdx + 0x14]	      2833	dir.c	FUNCTION_92	IF_1
0x40001aa	          0x4839c8	                            cmp rax, rcx	      2833	dir.c	FUNCTION_92	IF_1
0x40001ad	            0x7309	                           jae 0x40001b8	      2833	dir.c	FUNCTION_92	IF_1
0x40001af	        0x4883c001	                              add rax, 1	      2834	dir.c	FUNCTION_92	IF_1
0x40001b3	        0x48894628	             mov qword [rsi + 0x28], rax	      2834	dir.c	FUNCTION_92	IF_1
0x40001b7	              0xc3	                                     ret	      2835	dir.c	FUNCTION_92	IF_1
0x40001b8	        0x488b4608	                mov rax, qword [rsi + 8]	      2832	dir.c	FUNCTION_92
0x40001bc	        0x488b0cf8	            mov rcx, qword [rax + rdi*8]	        53	string3.h	FUNCTION_107	CALL_3
0x40001c0	        0x488d4145	                   lea rax, [rcx + 0x45]	        53	string3.h	FUNCTION_107	CALL_3
0x40001c4	          0x488b3a	                    mov rdi, qword [rdx]	        53	string3.h	FUNCTION_107	CALL_3
0x40001c7	        0x48897945	             mov qword [rcx + 0x45], rdi	        53	string3.h	FUNCTION_107	CALL_3
0x40001cb	        0x488b4a08	                mov rcx, qword [rdx + 8]	        53	string3.h	FUNCTION_107	CALL_3
0x40001cf	        0x48894808	                mov qword [rax + 8], rcx	        53	string3.h	FUNCTION_107	CALL_3
0x40001d3	          0x8b5210	            mov edx, dword [rdx + 0x10] 	        53	string3.h	FUNCTION_107	CALL_3
0x40001d6	          0x895010	             mov dword [rax + 0x10], edx	        53	string3.h	FUNCTION_107	CALL_3
0x40001d9	      0x4883462814	            add qword [rsi + 0x28], 0x14	      2838	dir.c	FUNCTION_92
0x40001de	              0xc3	                                     ret	      2838	dir.c	FUNCTION_92
stat_data_to_disk	ELSE,0:SWITCH,0:IF,0:functions,0:CALL,0:FOR,0:WHILE,0:DO,0	28
0x40002d6	            0x8b06	                    mov eax, dword [rsi]	        44	bswap.h	FUNCTION_191	CALL_3
0x40002d8	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_191	CALL_3
0x40002da	            0x8907	                    mov dword [rdi], eax	      2590	dir.c	FUNCTION_83
0x40002dc	          0x8b4604	                mov eax, dword [rsi + 4]	        44	bswap.h	FUNCTION_191	CALL_3
0x40002df	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_191	CALL_3
0x40002e1	          0x894704	                mov dword [rdi + 4], eax	      2591	dir.c	FUNCTION_83
0x40002e4	          0x8b4608	                mov eax, dword [rsi + 8]	        44	bswap.h	FUNCTION_191	CALL_3
0x40002e7	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_191	CALL_3
0x40002e9	          0x894708	                mov dword [rdi + 8], eax	      2592	dir.c	FUNCTION_83
0x40002ec	          0x8b460c	              mov eax, dword [rsi + 0xc]	        44	bswap.h	FUNCTION_191	CALL_3
0x40002ef	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_191	CALL_3
0x40002f1	          0x89470c	              mov dword [rdi + 0xc], eax	      2593	dir.c	FUNCTION_83
0x40002f4	          0x8b4610	            mov eax, dword [rsi + 0x10] 	        44	bswap.h	FUNCTION_191	CALL_3
0x40002f7	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_191	CALL_3
0x40002f9	          0x894710	             mov dword [rdi + 0x10], eax	      2594	dir.c	FUNCTION_83
0x40002fc	          0x8b4614	            mov eax, dword [rsi + 0x14] 	        44	bswap.h	FUNCTION_191	CALL_3
0x40002ff	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_191	CALL_3
0x4000301	          0x894714	             mov dword [rdi + 0x14], eax	      2595	dir.c	FUNCTION_83
0x4000304	          0x8b4618	            mov eax, dword [rsi + 0x18] 	        44	bswap.h	FUNCTION_191	CALL_3
0x4000307	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_191	CALL_3
0x4000309	          0x894718	             mov dword [rdi + 0x18], eax	      2596	dir.c	FUNCTION_83
0x400030c	          0x8b461c	            mov eax, dword [rsi + 0x1c] 	        44	bswap.h	FUNCTION_191	CALL_3
0x400030f	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_191	CALL_3
0x4000311	          0x89471c	             mov dword [rdi + 0x1c], eax	      2597	dir.c	FUNCTION_83
0x4000314	          0x8b4620	            mov eax, dword [rsi + 0x20] 	        44	bswap.h	FUNCTION_191	CALL_3
0x4000317	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_191	CALL_3
0x4000319	          0x894720	             mov dword [rdi + 0x20], eax	      2598	dir.c	FUNCTION_83
0x400031c	              0xc3	                                     ret	      2598	dir.c	FUNCTION_83
match_pathspec	ELSE,0:SWITCH,0:IF,1:functions,0:CALL,2:FOR,0:WHILE,0:DO,0	44
0x4001cf1	            0x4157	                                push r15	       501	dir.c	FUNCTION_14
0x4001cf3	            0x4156	                                push r14	       501	dir.c	FUNCTION_14
0x4001cf5	            0x4155	                                push r13	       501	dir.c	FUNCTION_14
0x4001cf7	            0x4154	                                push r12	       501	dir.c	FUNCTION_14
0x4001cf9	              0x55	                                push rbp	       501	dir.c	FUNCTION_14
0x4001cfa	              0x53	                                push rbx	       501	dir.c	FUNCTION_14
0x4001cfb	        0x4883ec18	                           sub rsp, 0x18	       501	dir.c	FUNCTION_14
0x4001cff	          0x4989fc	                            mov r12, rdi	       501	dir.c	FUNCTION_14
0x4001d02	          0x4189d5	                           mov r13d, edx	       501	dir.c	FUNCTION_14
0x4001d05	          0x4189ce	                           mov r14d, ecx	       501	dir.c	FUNCTION_14
0x4001d08	          0x4d89c7	                             mov r15, r8	       501	dir.c	FUNCTION_14
0x4001d0b	        0x4183f901	                              cmp r9d, 1	       503	dir.c	FUNCTION_14
0x4001d0f	            0x19db	                            sbb ebx, ebx	       503	dir.c	FUNCTION_14
0x4001d11	            0xf7d3	                                 not ebx	       503	dir.c	FUNCTION_14
0x4001d13	          0x83e302	                              and ebx, 2	       503	dir.c	FUNCTION_14
0x4001d16	          0x4189d9	                            mov r9d, ebx	       504	dir.c	FUNCTION_14	CALL_1
0x4001d19	      0x4889742408	                mov qword [rsp + 8], rsi	       504	dir.c	FUNCTION_14	CALL_1
0x4001d1e	      0xe88efaffff	              call sym.do_match_pathspec	       504	dir.c	FUNCTION_14	CALL_1
0x4001d23	            0x89c5	                            mov ebp, eax	       504	dir.c	FUNCTION_14	CALL_1
0x4001d25	    0x41f644240820	               test byte [r12 + 8], 0x20	       506	dir.c	FUNCTION_14	IF_1
0x4001d2b	            0x742c	                            je 0x4001d59	       506	dir.c	FUNCTION_14	IF_1
0x4001d2d	            0x85c0	                           test eax, eax	       506	dir.c	FUNCTION_14	IF_1
0x4001d2f	            0x7428	                            je 0x4001d59	       506	dir.c	FUNCTION_14	IF_1
0x4001d31	          0x83cb01	                               or ebx, 1	       508	dir.c	FUNCTION_14	CALL_2
0x4001d34	          0x4189d9	                            mov r9d, ebx	       508	dir.c	FUNCTION_14	CALL_2
0x4001d37	          0x4d89f8	                             mov r8, r15	       508	dir.c	FUNCTION_14	CALL_2
0x4001d3a	          0x4489f1	                           mov ecx, r14d	       508	dir.c	FUNCTION_14	CALL_2
0x4001d3d	          0x4489ea	                           mov edx, r13d	       508	dir.c	FUNCTION_14	CALL_2
0x4001d40	      0x488b742408	                mov rsi, qword [rsp + 8]	       508	dir.c	FUNCTION_14	CALL_2
0x4001d45	          0x4c89e7	                            mov rdi, r12	       508	dir.c	FUNCTION_14	CALL_2
0x4001d48	      0xe864faffff	              call sym.do_match_pathspec	       508	dir.c	FUNCTION_14	CALL_2
0x4001d4d	            0x85c0	                           test eax, eax	       511	dir.c	FUNCTION_14
0x4001d4f	      0xb800000000	                              mov eax, 0	       511	dir.c	FUNCTION_14
0x4001d54	           0xf44c5	                          cmove eax, ebp	       511	dir.c	FUNCTION_14
0x4001d57	            0xeb02	                           jmp 0x4001d5b	       511	dir.c	FUNCTION_14
0x4001d59	            0x89e8	                            mov eax, ebp	       507	dir.c	FUNCTION_14	IF_1
0x4001d5b	        0x4883c418	                           add rsp, 0x18	       512	dir.c	FUNCTION_14
0x4001d5f	              0x5b	                                 pop rbx	       512	dir.c	FUNCTION_14
0x4001d60	              0x5d	                                 pop rbp	       512	dir.c	FUNCTION_14
0x4001d61	            0x415c	                                 pop r12	       512	dir.c	FUNCTION_14
0x4001d63	            0x415d	                                 pop r13	       512	dir.c	FUNCTION_14
0x4001d65	            0x415e	                                 pop r14	       512	dir.c	FUNCTION_14
0x4001d67	            0x415f	                                 pop r15	       512	dir.c	FUNCTION_14
0x4001d69	              0xc3	                                     ret	       512	dir.c	FUNCTION_14
free_untracked_cache	ELSE,0:SWITCH,0:IF,1:functions,0:CALL,2:FOR,0:WHILE,0:DO,0	10
0x4004daa	              0x53	                                push rbx	      2722	dir.c	FUNCTION_87
0x4004dab	          0x4889fb	                            mov rbx, rdi	      2722	dir.c	FUNCTION_87
0x4004dae	          0x4885ff	                           test rdi, rdi	      2723	dir.c	FUNCTION_87	IF_1
0x4004db1	            0x740c	                            je 0x4004dbf	      2723	dir.c	FUNCTION_87	IF_1
0x4004db3	    0x488bbfa00000	            mov rdi, qword [rdi + 0xa0] 	      2724	dir.c	FUNCTION_87	CALL_1
0x4004dba	      0xe8a3b4ffff	                 call sym.free_untracked	      2724	dir.c	FUNCTION_87	CALL_1
0x4004dbf	          0x4889df	                            mov rdi, rbx	      2725	dir.c	FUNCTION_87	CALL_2
0x4004dc2	      0xe800000000	                          call 0x4004dc7	      2725	dir.c	FUNCTION_87	CALL_2
0x4004dc7	              0x5b	                                 pop rbx	      2726	dir.c	FUNCTION_87
0x4004dc8	              0xc3	                                     ret	      2726	dir.c	FUNCTION_87
get_ident_string	ELSE,0:SWITCH,0:IF,2:functions,0:CALL,5:FOR,0:WHILE,0:DO,0	32
0x40009e5	    0x4881ec980100	                          sub rsp, 0x198	      2102	dir.c	FUNCTION_65
0x40009ec	    0x64488b042528	                mov rax, qword fs:[0x28]	      2102	dir.c	FUNCTION_65
0x40009f5	    0x488984248801	            mov qword [rsp + 0x188], rax	      2102	dir.c	FUNCTION_65
0x40009fd	            0x31c0	                            xor eax, eax	      2102	dir.c	FUNCTION_65
0x40009ff	    0x488b05000000	            mov rax, qword [0x04000a06] 	      2107	dir.c	FUNCTION_65	IF_1
0x4000a06	    0x48833d000000	               cmp qword [0x04000a0e], 0	      2106	dir.c	FUNCTION_65	IF_1
0x4000a0e	            0x7553	                           jne 0x4000a63	      2106	dir.c	FUNCTION_65	IF_1
0x4000a10	          0x4889e7	                            mov rdi, rsp	      2108	dir.c	FUNCTION_65	IF_2	CALL_1
0x4000a13	      0xe800000000	                          call 0x4000a18	      2108	dir.c	FUNCTION_65	IF_2	CALL_1
0x4000a18	            0x85c0	                           test eax, eax	      2108	dir.c	FUNCTION_65	IF_2	CALL_1
0x4000a1a	            0x7921	                           jns 0x4000a3d	      2108	dir.c	FUNCTION_65	IF_2	CALL_1
0x4000a1c	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_105
0x4000a21	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_105
0x4000a26	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_105
0x4000a2b	      0xe800000000	                          call 0x4000a30	        54	gettext.h	FUNCTION_105
0x4000a30	          0x4889c7	                            mov rdi, rax	      2109	dir.c	FUNCTION_65	CALL_3
0x4000a33	      0xb800000000	                              mov eax, 0	      2109	dir.c	FUNCTION_65	CALL_3
0x4000a38	      0xe800000000	                          call 0x4000a3d	      2109	dir.c	FUNCTION_65	CALL_3
0x4000a3d	      0xe800000000	                          call 0x4000a42	      2110	dir.c	FUNCTION_65	CALL_5
0x4000a42	          0x4889e1	                            mov rcx, rsp	      2110	dir.c	FUNCTION_65	CALL_5
0x4000a45	          0x4889c2	                            mov rdx, rax	      2110	dir.c	FUNCTION_65	CALL_5
0x4000a48	      0xbe00000000	                              mov esi, 0	      2110	dir.c	FUNCTION_65	CALL_5
0x4000a4d	      0xbf00000000	                              mov edi, 0	      2110	dir.c	FUNCTION_65	CALL_5
0x4000a52	      0xb800000000	                              mov eax, 0	      2110	dir.c	FUNCTION_65	CALL_5
0x4000a57	      0xe800000000	                          call 0x4000a5c	      2110	dir.c	FUNCTION_65	CALL_5
0x4000a5c	    0x488b05000000	            mov rax, qword [0x04000a63] 	      2112	dir.c	FUNCTION_65
0x4000a63	    0x488b8c248801	           mov rcx, qword [rsp + 0x188] 	      2113	dir.c	FUNCTION_65
0x4000a6b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2113	dir.c	FUNCTION_65
0x4000a74	            0x7405	                            je 0x4000a7b	      2113	dir.c	FUNCTION_65
0x4000a76	      0xe800000000	                          call 0x4000a7b	      2113	dir.c	FUNCTION_65
0x4000a7b	    0x4881c4980100	                          add rsp, 0x198	      2113	dir.c	FUNCTION_65
0x4000a82	              0xc3	                                     ret	      2113	dir.c	FUNCTION_65
within_depth	ELSE,0:SWITCH,0:IF,2:functions,0:CALL,0:FOR,0:WHILE,1:DO,0	18
0x400177e	          0x4863c6	                         movsxd rax, esi	       213	dir.c	FUNCTION_9
0x4001781	          0x4801f8	                            add rax, rdi	       213	dir.c	FUNCTION_9
0x4001784	          0x4839c7	                            cmp rdi, rax	       215	dir.c	FUNCTION_9	WHILE_1
0x4001787	            0x731c	                           jae 0x40017a5	       215	dir.c	FUNCTION_9	WHILE_1
0x4001789	        0x4883c701	                              add rdi, 1	       216	dir.c	FUNCTION_9	WHILE_1	IF_1
0x400178d	        0x807fff2f	                cmp byte [rdi - 1], 0x2f	       216	dir.c	FUNCTION_9	WHILE_1	IF_1
0x4001791	            0x7507	                           jne 0x400179a	       216	dir.c	FUNCTION_9	WHILE_1	IF_1
0x4001793	          0x83c201	                              add edx, 1	       218	dir.c	FUNCTION_9	WHILE_1
0x4001796	            0x39ca	                            cmp edx, ecx	       219	dir.c	FUNCTION_9	WHILE_1	IF_2
0x4001798	            0x7f11	                            jg 0x40017ab	       219	dir.c	FUNCTION_9	WHILE_1	IF_2
0x400179a	          0x4839f8	                            cmp rax, rdi	       215	dir.c	FUNCTION_9	WHILE_1
0x400179d	            0x75ea	                           jne 0x4001789	       215	dir.c	FUNCTION_9	WHILE_1
0x400179f	      0xb801000000	                              mov eax, 1	       222	dir.c	FUNCTION_9
0x40017a4	              0xc3	                                     ret	       222	dir.c	FUNCTION_9
0x40017a5	      0xb801000000	                              mov eax, 1	       222	dir.c	FUNCTION_9
0x40017aa	              0xc3	                                     ret	       222	dir.c	FUNCTION_9
0x40017ab	      0xb800000000	                              mov eax, 0	       220	dir.c	FUNCTION_9	WHILE_1	IF_2
0x40017b0	              0xc3	                                     ret	       223	dir.c	FUNCTION_9
parse_exclude_pattern	ELSE,0:SWITCH,0:IF,6:functions,0:CALL,3:FOR,1:WHILE,0:DO,0	67
0x4001ed6	            0x4157	                                push r15	       594	dir.c	FUNCTION_19
0x4001ed8	            0x4156	                                push r14	       594	dir.c	FUNCTION_19
0x4001eda	            0x4155	                                push r13	       594	dir.c	FUNCTION_19
0x4001edc	            0x4154	                                push r12	       594	dir.c	FUNCTION_19
0x4001ede	              0x55	                                push rbp	       594	dir.c	FUNCTION_19
0x4001edf	              0x53	                                push rbx	       594	dir.c	FUNCTION_19
0x4001ee0	          0x4989fd	                            mov r13, rdi	       594	dir.c	FUNCTION_19
0x4001ee3	          0x4989f6	                            mov r14, rsi	       594	dir.c	FUNCTION_19
0x4001ee6	          0x4989d4	                            mov r12, rdx	       594	dir.c	FUNCTION_19
0x4001ee9	          0x4989cf	                            mov r15, rcx	       594	dir.c	FUNCTION_19
0x4001eec	          0x488b2f	                    mov rbp, qword [rdi]	       595	dir.c	FUNCTION_19
0x4001eef	    0xc70200000000	                      mov dword [rdx], 0	       598	dir.c	FUNCTION_19
0x4001ef5	        0x807d0021	                    cmp byte [rbp], 0x21	       599	dir.c	FUNCTION_19	IF_1
0x4001ef9	            0x750a	                           jne 0x4001f05	       599	dir.c	FUNCTION_19	IF_1
0x4001efb	    0xc70210000000	                   mov dword [rdx], 0x10	       600	dir.c	FUNCTION_19	IF_1
0x4001f01	        0x4883c501	                              add rbp, 1	       601	dir.c	FUNCTION_19	IF_1
0x4001f05	      0xb800000000	                              mov eax, 0	       603	dir.c	FUNCTION_19	CALL_1
0x4001f0a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       603	dir.c	FUNCTION_19	CALL_1
0x4001f11	          0x4889ef	                            mov rdi, rbp	       603	dir.c	FUNCTION_19	CALL_1
0x4001f14	            0xf2ae	              repne scasb al, byte [rdi]	       603	dir.c	FUNCTION_19	CALL_1
0x4001f16	          0x48f7d1	                                 not rcx	       603	dir.c	FUNCTION_19	CALL_1
0x4001f19	        0x4883e901	                              sub rcx, 1	       604	dir.c	FUNCTION_19	IF_2
0x4001f1d	          0x4889cb	                            mov rbx, rcx	       604	dir.c	FUNCTION_19	IF_2
0x4001f20	            0x743f	                            je 0x4001f61	       604	dir.c	FUNCTION_19	IF_2
0x4001f22	        0x488d41ff	                      lea rax, [rcx - 1]	       604	dir.c	FUNCTION_19	IF_2
0x4001f26	      0x807c0dff2f	         cmp byte [rbp + rcx - 1], 0x2f 	       604	dir.c	FUNCTION_19	IF_2
0x4001f2b	            0x750d	                           jne 0x4001f3a	       604	dir.c	FUNCTION_19	IF_2
0x4001f2d	      0x41830c2408	                       or dword [r12], 8	       606	dir.c	FUNCTION_19	IF_2
0x4001f32	          0x4885c0	                           test rax, rax	       608	dir.c	FUNCTION_19	FOR_1
0x4001f35	            0x7427	                            je 0x4001f5e	       608	dir.c	FUNCTION_19	FOR_1
0x4001f37	          0x4889c3	                            mov rbx, rax	       605	dir.c	FUNCTION_19	IF_2
0x4001f3a	        0x807d002f	                    cmp byte [rbp], 0x2f	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x4001f3e	            0x7426	                            je 0x4001f66	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x4001f40	      0xb800000000	                              mov eax, 0	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x4001f45	            0xeb07	                           jmp 0x4001f4e	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x4001f47	      0x807c05002f	              cmp byte [rbp + rax], 0x2f	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x4001f4c	            0x7409	                            je 0x4001f57	       609	dir.c	FUNCTION_19	FOR_1	IF_3
0x4001f4e	        0x4883c001	                              add rax, 1	       608	dir.c	FUNCTION_19	FOR_1
0x4001f52	          0x4839d8	                            cmp rax, rbx	       608	dir.c	FUNCTION_19	FOR_1
0x4001f55	            0x72f0	                            jb 0x4001f47	       608	dir.c	FUNCTION_19	FOR_1
0x4001f57	          0x4839d8	                            cmp rax, rbx	       612	dir.c	FUNCTION_19	IF_4
0x4001f5a	            0x750a	                           jne 0x4001f66	       612	dir.c	FUNCTION_19	IF_4
0x4001f5c	            0xeb03	                           jmp 0x4001f61	       612	dir.c	FUNCTION_19	IF_4
0x4001f5e	          0x4889c3	                            mov rbx, rax	       605	dir.c	FUNCTION_19	IF_2
0x4001f61	      0x41830c2401	                       or dword [r12], 1	       613	dir.c	FUNCTION_19	IF_4
0x4001f66	          0x4889ef	                            mov rdi, rbp	       614	dir.c	FUNCTION_19	CALL_2
0x4001f69	      0xe800000000	                          call 0x4001f6e	       614	dir.c	FUNCTION_19	CALL_2
0x4001f6e	          0x4863d0	                         movsxd rdx, eax	       620	dir.c	FUNCTION_19	IF_5
0x4001f71	          0x4839da	                            cmp rdx, rbx	       614	dir.c	FUNCTION_19	CALL_2
0x4001f74	           0xf47c3	                          cmova eax, ebx	       614	dir.c	FUNCTION_19	CALL_2
0x4001f77	          0x418907	                    mov dword [r15], eax	       614	dir.c	FUNCTION_19	CALL_2
0x4001f7a	        0x807d002a	                    cmp byte [rbp], 0x2a	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x4001f7e	            0x7512	                           jne 0x4001f92	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x4001f80	        0x488d7d01	                      lea rdi, [rbp + 1]	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x4001f84	      0xe800000000	                          call 0x4001f89	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x4001f89	            0x85c0	                           test eax, eax	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x4001f8b	            0x7405	                            je 0x4001f92	       622	dir.c	FUNCTION_19	IF_6	CALL_3
0x4001f8d	      0x41830c2404	                       or dword [r12], 4	       623	dir.c	FUNCTION_19	IF_6
0x4001f92	        0x49896d00	                    mov qword [r13], rbp	       624	dir.c	FUNCTION_19
0x4001f96	          0x41891e	                    mov dword [r14], ebx	       625	dir.c	FUNCTION_19
0x4001f99	              0x5b	                                 pop rbx	       626	dir.c	FUNCTION_19
0x4001f9a	              0x5d	                                 pop rbp	       626	dir.c	FUNCTION_19
0x4001f9b	            0x415c	                                 pop r12	       626	dir.c	FUNCTION_19
0x4001f9d	            0x415d	                                 pop r13	       626	dir.c	FUNCTION_19
0x4001f9f	            0x415e	                                 pop r14	       626	dir.c	FUNCTION_19
0x4001fa1	            0x415f	                                 pop r15	       626	dir.c	FUNCTION_19
0x4001fa3	              0xc3	                                     ret	       626	dir.c	FUNCTION_19
no_wildcard	ELSE,0:SWITCH,0:IF,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0	9
0x4001ebf	              0x53	                                push rbx	       586	dir.c	FUNCTION_18
0x4001ec0	          0x4889fb	                            mov rbx, rdi	       586	dir.c	FUNCTION_18
0x4001ec3	      0xe800000000	                          call 0x4001ec8	       587	dir.c	FUNCTION_18	CALL_1
0x4001ec8	            0x4898	                                    cdqe	       587	dir.c	FUNCTION_18	CALL_1
0x4001eca	        0x803c0300	                 cmp byte [rbx + rax], 0	       587	dir.c	FUNCTION_18	CALL_1
0x4001ece	           0xf94c0	                                 sete al	       587	dir.c	FUNCTION_18	CALL_1
0x4001ed1	           0xfb6c0	                           movzx eax, al	       587	dir.c	FUNCTION_18	CALL_1
0x4001ed4	              0x5b	                                 pop rbx	       588	dir.c	FUNCTION_18
0x4001ed5	              0xc3	                                     ret	       588	dir.c	FUNCTION_18
read_one_dir	ELSE,0:SWITCH,0:IF,6:functions,0:CALL,11:FOR,2:WHILE,0:DO,0	163
0x4000dce	            0x4156	                                push r14	      2754	dir.c	FUNCTION_89
0x4000dd0	            0x4155	                                push r13	      2754	dir.c	FUNCTION_89
0x4000dd2	            0x4154	                                push r12	      2754	dir.c	FUNCTION_89
0x4000dd4	              0x55	                                push rbp	      2754	dir.c	FUNCTION_89
0x4000dd5	              0x53	                                push rbx	      2754	dir.c	FUNCTION_89
0x4000dd6	        0x4883c480	             add rsp, 0xffffffffffffff80	      2754	dir.c	FUNCTION_89
0x4000dda	          0x4989fd	                            mov r13, rdi	      2754	dir.c	FUNCTION_89
0x4000ddd	          0x4989f4	                            mov r12, rsi	      2754	dir.c	FUNCTION_89
0x4000de0	    0x64488b042528	                mov rax, qword fs:[0x28]	      2754	dir.c	FUNCTION_89
0x4000de9	      0x4889442478	             mov qword [rsp + 0x78], rax	      2754	dir.c	FUNCTION_89
0x4000dee	            0x31c0	                            xor eax, eax	      2754	dir.c	FUNCTION_89
0x4000df0	        0x488b7628	            mov rsi, qword [rsi + 0x28] 	      2756	dir.c	FUNCTION_89
0x4000df4	      0x498b5c2430	            mov rbx, qword [r12 + 0x30] 	      2756	dir.c	FUNCTION_89
0x4000df9	      0x488d542410	                   lea rdx, [rsp + 0x10]	        90	string3.h	FUNCTION_110	CALL_6
0x4000dfe	      0xb90c000000	                            mov ecx, 0xc	        90	string3.h	FUNCTION_110	CALL_6
0x4000e03	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_110	CALL_6
0x4000e06	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_110	CALL_6
0x4000e09	      0x4889742408	                mov qword [rsp + 8], rsi	      2762	dir.c	FUNCTION_89
0x4000e0e	      0x488d7c2408	                      lea rdi, [rsp + 8]	      2763	dir.c	FUNCTION_89	CALL_2
0x4000e13	      0xe800000000	                          call 0x4000e18	      2763	dir.c	FUNCTION_89	CALL_2
0x4000e18	      0x483b5c2408	                cmp rbx, qword [rsp + 8]	      2764	dir.c	FUNCTION_89	IF_1
0x4000e1d	     0xf82e5010000	                            jb 0x4001008	      2764	dir.c	FUNCTION_89	IF_1
0x4000e23	      0x804c245404	                 or byte [rsp + 0x54], 4	      2766	dir.c	FUNCTION_89
0x4000e28	        0x89442444	             mov dword [rsp + 0x44], eax	      2767	dir.c	FUNCTION_89
0x4000e2c	        0x89442450	             mov dword [rsp + 0x50], eax	      2768	dir.c	FUNCTION_89
0x4000e30	            0x85c0	                           test eax, eax	      2769	dir.c	FUNCTION_89	IF_2
0x4000e32	            0x7414	                            je 0x4000e48	      2769	dir.c	FUNCTION_89	IF_2
0x4000e34	            0x89c0	                            mov eax, eax	      2770	dir.c	FUNCTION_89	IF_2
0x4000e36	    0x488d3cc50000	                        lea rdi, [rax*8]	      2770	dir.c	FUNCTION_89	IF_2
0x4000e3e	      0xe800000000	                          call 0x4000e43	      2770	dir.c	FUNCTION_89	IF_2
0x4000e43	      0x4889442418	             mov qword [rsp + 0x18], rax	      2770	dir.c	FUNCTION_89	IF_2
0x4000e48	      0x488d7c2408	                      lea rdi, [rsp + 8]	      2774	dir.c	FUNCTION_89	CALL_3
0x4000e4d	      0xe800000000	                          call 0x4000e52	      2774	dir.c	FUNCTION_89	CALL_3
0x4000e52	        0x89442448	             mov dword [rsp + 0x48], eax	      2774	dir.c	FUNCTION_89	CALL_3
0x4000e56	        0x8944244c	             mov dword [rsp + 0x4c], eax	      2774	dir.c	FUNCTION_89	CALL_3
0x4000e5a	      0x483b5c2408	                cmp rbx, qword [rsp + 8]	      2775	dir.c	FUNCTION_89	IF_3
0x4000e5f	     0xf82aa010000	                            jb 0x400100f	      2775	dir.c	FUNCTION_89	IF_3
0x4000e65	            0x89c0	                            mov eax, eax	      2777	dir.c	FUNCTION_89
0x4000e67	    0x488d3cc50000	                        lea rdi, [rax*8]	      2777	dir.c	FUNCTION_89
0x4000e6f	      0xe800000000	                          call 0x4000e74	      2777	dir.c	FUNCTION_89
0x4000e74	      0x4889442410	             mov qword [rsp + 0x10], rax	      2777	dir.c	FUNCTION_89
0x4000e79	      0x4c8b742408	                mov r14, qword [rsp + 8]	      2778	dir.c	FUNCTION_89
0x4000e7e	      0xb800000000	                              mov eax, 0	      2780	dir.c	FUNCTION_89	CALL_4
0x4000e83	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2780	dir.c	FUNCTION_89	CALL_4
0x4000e8a	          0x4c89f7	                            mov rdi, r14	      2780	dir.c	FUNCTION_89	CALL_4
0x4000e8d	            0xf2ae	              repne scasb al, byte [rdi]	      2780	dir.c	FUNCTION_89	CALL_4
0x4000e8f	          0x48f7d1	                                 not rcx	      2780	dir.c	FUNCTION_89	CALL_4
0x4000e92	        0x488d69ff	                      lea rbp, [rcx - 1]	      2780	dir.c	FUNCTION_89	CALL_4
0x4000e96	          0x4863d5	                         movsxd rdx, ebp	      2781	dir.c	FUNCTION_89
0x4000e99	      0x498d441601	                lea rax, [r14 + rdx + 1]	      2781	dir.c	FUNCTION_89
0x4000e9e	      0x4889442408	                mov qword [rsp + 8], rax	      2781	dir.c	FUNCTION_89
0x4000ea3	      0x493b442430	            cmp rax, qword [r12 + 0x30] 	      2782	dir.c	FUNCTION_89	IF_4
0x4000ea8	     0xf8768010000	                            ja 0x4001016	      2782	dir.c	FUNCTION_89	IF_4
0x4000eae	        0x4883fa9f	             cmp rdx, 0xffffffffffffff9f	       785	git-compat-util.h	FUNCTION_170	IF_1
0x4000eb2	            0x7614	                           jbe 0x4000ec8	       785	git-compat-util.h	FUNCTION_170	IF_1
0x4000eb4	      0xbe60000000	                           mov esi, 0x60	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4000eb9	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4000ebe	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4000ec3	      0xe800000000	                          call 0x4000ec8	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4000ec8	        0x488d7a60	                   lea rdi, [rdx + 0x60]	      2784	dir.c	FUNCTION_89	CALL_6
0x4000ecc	      0xe800000000	                          call 0x4000ed1	      2784	dir.c	FUNCTION_89	CALL_6
0x4000ed1	          0x4889c3	                            mov rbx, rax	      2784	dir.c	FUNCTION_89	CALL_6
0x4000ed4	        0x49894500	                    mov qword [r13], rax	      2784	dir.c	FUNCTION_89	CALL_6
0x4000ed8	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_107	CALL_3
0x4000edd	          0x488903	                    mov qword [rbx], rax	        53	string3.h	FUNCTION_107	CALL_3
0x4000ee0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_107	CALL_3
0x4000ee5	        0x48894308	                mov qword [rbx + 8], rax	        53	string3.h	FUNCTION_107	CALL_3
0x4000ee9	      0x488b442420	            mov rax, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_107	CALL_3
0x4000eee	        0x48894310	             mov qword [rbx + 0x10], rax	        53	string3.h	FUNCTION_107	CALL_3
0x4000ef2	      0x488b442428	            mov rax, qword [rsp + 0x28] 	        53	string3.h	FUNCTION_107	CALL_3
0x4000ef7	        0x48894318	             mov qword [rbx + 0x18], rax	        53	string3.h	FUNCTION_107	CALL_3
0x4000efb	      0x488b442430	            mov rax, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_107	CALL_3
0x4000f00	        0x48894320	             mov qword [rbx + 0x20], rax	        53	string3.h	FUNCTION_107	CALL_3
0x4000f04	      0x488b442438	            mov rax, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_107	CALL_3
0x4000f09	        0x48894328	             mov qword [rbx + 0x28], rax	        53	string3.h	FUNCTION_107	CALL_3
0x4000f0d	      0x488b442440	            mov rax, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_107	CALL_3
0x4000f12	        0x48894330	             mov qword [rbx + 0x30], rax	        53	string3.h	FUNCTION_107	CALL_3
0x4000f16	      0x488b442448	            mov rax, qword [rsp + 0x48] 	        53	string3.h	FUNCTION_107	CALL_3
0x4000f1b	        0x48894338	             mov qword [rbx + 0x38], rax	        53	string3.h	FUNCTION_107	CALL_3
0x4000f1f	      0x488b442450	            mov rax, qword [rsp + 0x50] 	        53	string3.h	FUNCTION_107	CALL_3
0x4000f24	        0x48894340	             mov qword [rbx + 0x40], rax	        53	string3.h	FUNCTION_107	CALL_3
0x4000f28	      0x488b442458	            mov rax, qword [rsp + 0x58] 	        53	string3.h	FUNCTION_107	CALL_3
0x4000f2d	        0x48894348	             mov qword [rbx + 0x48], rax	        53	string3.h	FUNCTION_107	CALL_3
0x4000f31	      0x488b442460	            mov rax, qword [rsp + 0x60] 	        53	string3.h	FUNCTION_107	CALL_3
0x4000f36	        0x48894350	             mov qword [rbx + 0x50], rax	        53	string3.h	FUNCTION_107	CALL_3
0x4000f3a	      0x488b442468	            mov rax, qword [rsp + 0x68] 	        53	string3.h	FUNCTION_107	CALL_3
0x4000f3f	        0x48894358	             mov qword [rbx + 0x58], rax	        53	string3.h	FUNCTION_107	CALL_3
0x4000f43	        0x488d7b59	                   lea rdi, [rbx + 0x59]	        53	string3.h	FUNCTION_107	CALL_3
0x4000f47	          0x8d5501	                      lea edx, [rbp + 1]	        53	string3.h	FUNCTION_107	CALL_3
0x4000f4a	          0x4863d2	                         movsxd rdx, edx	        53	string3.h	FUNCTION_107	CALL_3
0x4000f4d	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_107	CALL_3
0x4000f50	      0xe800000000	                          call 0x4000f55	        53	string3.h	FUNCTION_107	CALL_3
0x4000f55	      0x488b542408	                mov rdx, qword [rsp + 8]	      2787	dir.c	FUNCTION_89
0x4000f5a	        0x837b4000	               cmp dword [rbx + 0x40], 0	      2789	dir.c	FUNCTION_89	FOR_1
0x4000f5e	            0x745d	                            je 0x4000fbd	      2789	dir.c	FUNCTION_89	FOR_1
0x4000f60	      0xbd00000000	                              mov ebp, 0	      2789	dir.c	FUNCTION_89	FOR_1
0x4000f65	    0x49c7c5ffffff	             mov r13, 0xffffffffffffffff	      2790	dir.c	FUNCTION_89	FOR_1	CALL_9
0x4000f6c	      0xb800000000	                              mov eax, 0	      2790	dir.c	FUNCTION_89	FOR_1	CALL_9
0x4000f71	          0x4c89e9	                            mov rcx, r13	      2790	dir.c	FUNCTION_89	FOR_1	CALL_9
0x4000f74	          0x4889d7	                            mov rdi, rdx	      2790	dir.c	FUNCTION_89	FOR_1	CALL_9
0x4000f77	            0xf2ae	              repne scasb al, byte [rdi]	      2790	dir.c	FUNCTION_89	FOR_1	CALL_9
0x4000f79	          0x4889c8	                            mov rax, rcx	      2790	dir.c	FUNCTION_89	FOR_1	CALL_9
0x4000f7c	          0x48f7d0	                                 not rax	      2790	dir.c	FUNCTION_89	FOR_1	CALL_9
0x4000f7f	        0x4883e801	                              sub rax, 1	      2790	dir.c	FUNCTION_89	FOR_1	CALL_9
0x4000f83	            0x4898	                                    cdqe	      2791	dir.c	FUNCTION_89	FOR_1
0x4000f85	      0x488d440201	                lea rax, [rdx + rax + 1]	      2791	dir.c	FUNCTION_89	FOR_1
0x4000f8a	      0x4889442408	                mov qword [rsp + 8], rax	      2791	dir.c	FUNCTION_89	FOR_1
0x4000f8f	      0x493b442430	            cmp rax, qword [r12 + 0x30] 	      2792	dir.c	FUNCTION_89	FOR_1	IF_5
0x4000f94	     0xf8783000000	                            ja 0x400101d	      2792	dir.c	FUNCTION_89	FOR_1	IF_5
0x4000f9a	          0x4863cd	                         movsxd rcx, ebp	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x4000f9d	        0x488b4308	                mov rax, qword [rbx + 8]	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x4000fa1	        0x4c8d34c8	                  lea r14, [rax + rcx*8]	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x4000fa5	          0x4889d7	                            mov rdi, rdx	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x4000fa8	      0xe800000000	                          call 0x4000fad	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x4000fad	          0x498906	                    mov qword [r14], rax	      2794	dir.c	FUNCTION_89	FOR_1	CALL_10
0x4000fb0	      0x488b542408	                mov rdx, qword [rsp + 8]	      2795	dir.c	FUNCTION_89	FOR_1
0x4000fb5	          0x83c501	                              add ebp, 1	      2789	dir.c	FUNCTION_89	FOR_1
0x4000fb8	          0x396b40	            cmp dword [rbx + 0x40], ebp 	      2789	dir.c	FUNCTION_89	FOR_1
0x4000fbb	            0x77af	                            ja 0x4000f6c	      2789	dir.c	FUNCTION_89	FOR_1
0x4000fbd	      0x498b4c2408	                mov rcx, qword [r12 + 8]	      2798	dir.c	FUNCTION_89
0x4000fc2	        0x418b0424	                    mov eax, dword [r12]	      2798	dir.c	FUNCTION_89
0x4000fc6	          0x8d7001	                      lea esi, [rax + 1]	      2798	dir.c	FUNCTION_89
0x4000fc9	        0x41893424	                    mov dword [r12], esi	      2798	dir.c	FUNCTION_89
0x4000fcd	            0x4898	                                    cdqe	      2798	dir.c	FUNCTION_89
0x4000fcf	        0x48891cc1	            mov qword [rcx + rax*8], rbx	      2798	dir.c	FUNCTION_89
0x4000fd3	      0x4989542428	             mov qword [r12 + 0x28], rdx	      2799	dir.c	FUNCTION_89
0x4000fd8	        0x837b3800	               cmp dword [rbx + 0x38], 0	      2801	dir.c	FUNCTION_89	FOR_2
0x4000fdc	            0x7446	                            je 0x4001024	      2801	dir.c	FUNCTION_89	FOR_2
0x4000fde	      0xbd00000000	                              mov ebp, 0	      2801	dir.c	FUNCTION_89	FOR_2
0x4000fe3	          0x4863c5	                         movsxd rax, ebp	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x4000fe6	          0x488b13	                    mov rdx, qword [rbx]	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x4000fe9	        0x488d3cc2	                  lea rdi, [rdx + rax*8]	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x4000fed	          0x4c89e6	                            mov rsi, r12	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x4000ff0	      0xe8d9fdffff	                   call sym.read_one_dir	      2802	dir.c	FUNCTION_89	FOR_2	CALL_11
0x4000ff5	            0x85c0	                           test eax, eax	      2803	dir.c	FUNCTION_89	FOR_2	IF_6
0x4000ff7	            0x7832	                            js 0x400102b	      2803	dir.c	FUNCTION_89	FOR_2	IF_6
0x4000ff9	          0x83c501	                              add ebp, 1	      2801	dir.c	FUNCTION_89	FOR_2
0x4000ffc	          0x396b38	            cmp dword [rbx + 0x38], ebp 	      2801	dir.c	FUNCTION_89	FOR_2
0x4000fff	            0x77e2	                            ja 0x4000fe3	      2801	dir.c	FUNCTION_89	FOR_2
0x4001001	      0xb800000000	                              mov eax, 0	      2806	dir.c	FUNCTION_89
0x4001006	            0xeb28	                           jmp 0x4001030	      2806	dir.c	FUNCTION_89
0x4001008	      0xb8ffffffff	                     mov eax, 0xffffffff	      2765	dir.c	FUNCTION_89	IF_1
0x400100d	            0xeb21	                           jmp 0x4001030	      2765	dir.c	FUNCTION_89	IF_1
0x400100f	      0xb8ffffffff	                     mov eax, 0xffffffff	      2776	dir.c	FUNCTION_89	IF_3
0x4001014	            0xeb1a	                           jmp 0x4001030	      2776	dir.c	FUNCTION_89	IF_3
0x4001016	      0xb8ffffffff	                     mov eax, 0xffffffff	      2783	dir.c	FUNCTION_89	IF_4
0x400101b	            0xeb13	                           jmp 0x4001030	      2783	dir.c	FUNCTION_89	IF_4
0x400101d	      0xb8ffffffff	                     mov eax, 0xffffffff	      2793	dir.c	FUNCTION_89	FOR_1	IF_5
0x4001022	            0xeb0c	                           jmp 0x4001030	      2793	dir.c	FUNCTION_89	FOR_1	IF_5
0x4001024	      0xb800000000	                              mov eax, 0	      2806	dir.c	FUNCTION_89
0x4001029	            0xeb05	                           jmp 0x4001030	      2806	dir.c	FUNCTION_89
0x400102b	      0xb8ffffffff	                     mov eax, 0xffffffff	      2804	dir.c	FUNCTION_89	FOR_2	IF_6
0x4001030	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      2807	dir.c	FUNCTION_89
0x4001035	    0x644833342528	                xor rsi, qword fs:[0x28]	      2807	dir.c	FUNCTION_89
0x400103e	            0x7405	                            je 0x4001045	      2807	dir.c	FUNCTION_89
0x4001040	      0xe800000000	                          call 0x4001045	      2807	dir.c	FUNCTION_89
0x4001045	        0x4883ec80	             sub rsp, 0xffffffffffffff80	      2807	dir.c	FUNCTION_89
0x4001049	              0x5b	                                 pop rbx	      2807	dir.c	FUNCTION_89
0x400104a	              0x5d	                                 pop rbp	      2807	dir.c	FUNCTION_89
0x400104b	            0x415c	                                 pop r12	      2807	dir.c	FUNCTION_89
0x400104d	            0x415d	                                 pop r13	      2807	dir.c	FUNCTION_89
0x400104f	            0x415e	                                 pop r14	      2807	dir.c	FUNCTION_89
0x4001051	              0xc3	                                     ret	      2807	dir.c	FUNCTION_89
treat_one_path	ELSE,0:SWITCH,1:IF,5:functions,0:CALL,6:FOR,0:WHILE,0:DO,0	200
0x4003c36	            0x4157	                                push r15	      1663	dir.c	FUNCTION_53
0x4003c38	            0x4156	                                push r14	      1663	dir.c	FUNCTION_53
0x4003c3a	            0x4155	                                push r13	      1663	dir.c	FUNCTION_53
0x4003c3c	            0x4154	                                push r12	      1663	dir.c	FUNCTION_53
0x4003c3e	              0x55	                                push rbp	      1663	dir.c	FUNCTION_53
0x4003c3f	              0x53	                                push rbx	      1663	dir.c	FUNCTION_53
0x4003c40	        0x4883ec48	                           sub rsp, 0x48	      1663	dir.c	FUNCTION_53
0x4003c44	          0x4989fc	                            mov r12, rdi	      1663	dir.c	FUNCTION_53
0x4003c47	      0x4889742408	                mov qword [rsp + 8], rsi	      1663	dir.c	FUNCTION_53
0x4003c4c	          0x4889d5	                            mov rbp, rdx	      1663	dir.c	FUNCTION_53
0x4003c4f	          0x4889cb	                            mov rbx, rcx	      1663	dir.c	FUNCTION_53
0x4003c52	      0x448944241c	             mov dword [rsp + 0x1c], r8d	      1663	dir.c	FUNCTION_53
0x4003c57	      0x4c894c2410	              mov qword [rsp + 0x10], r9	      1663	dir.c	FUNCTION_53
0x4003c5c	    0x4c8bbc248800	            mov r15, qword [rsp + 0x88] 	      1663	dir.c	FUNCTION_53
0x4003c64	    0x64488b042528	                mov rax, qword fs:[0x28]	      1663	dir.c	FUNCTION_53
0x4003c6d	      0x4889442438	             mov qword [rsp + 0x38], rax	      1663	dir.c	FUNCTION_53
0x4003c72	            0x31c0	                            xor eax, eax	      1663	dir.c	FUNCTION_53
0x4003c74	        0x488b7110	            mov rsi, qword [rcx + 0x10] 	      1665	dir.c	FUNCTION_53	CALL_1
0x4003c78	    0x8b0d00000000	            mov ecx, dword [0x04003c7e] 	      1665	dir.c	FUNCTION_53	CALL_1
0x4003c7e	          0x8b5308	                mov edx, dword [rbx + 8]	      1665	dir.c	FUNCTION_53	CALL_1
0x4003c81	          0x4889ef	                            mov rdi, rbp	      1665	dir.c	FUNCTION_53	CALL_1
0x4003c84	      0xe800000000	                          call 0x4003c89	      1665	dir.c	FUNCTION_53	CALL_1
0x4003c89	          0x4989c5	                            mov r13, rax	      1665	dir.c	FUNCTION_53	CALL_1
0x4003c8c	          0x4885c0	                           test rax, rax	      1665	dir.c	FUNCTION_53	CALL_1
0x4003c8f	        0x410f95c6	                              setne r14b	      1665	dir.c	FUNCTION_53	CALL_1
0x4003c93	    0x83bc24800000	               cmp dword [rsp + 0x80], 0	      1668	dir.c	FUNCTION_53	IF_1
0x4003c9b	            0x7519	                           jne 0x4003cb6	      1668	dir.c	FUNCTION_53	IF_1
0x4003c9d	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1669	dir.c	FUNCTION_53	CALL_2
0x4003ca1	          0x8b4b08	                mov ecx, dword [rbx + 8]	      1669	dir.c	FUNCTION_53	CALL_2
0x4003ca4	          0x4889ee	                            mov rsi, rbp	      1669	dir.c	FUNCTION_53	CALL_2
0x4003ca7	          0x4c89ff	                            mov rdi, r15	      1669	dir.c	FUNCTION_53	CALL_2
0x4003caa	      0xe8d3c9ffff	                      call sym.get_dtype	      1669	dir.c	FUNCTION_53	CALL_2
0x4003caf	    0x898424800000	             mov dword [rsp + 0x80], eax	      1669	dir.c	FUNCTION_53	CALL_2
0x4003cb6	    0x8b9424800000	            mov edx, dword [rsp + 0x80] 	      1672	dir.c	FUNCTION_53	IF_2
0x4003cbd	          0x83fa04	                              cmp edx, 4	      1672	dir.c	FUNCTION_53	IF_2
0x4003cc0	            0x740e	                            je 0x4003cd0	      1672	dir.c	FUNCTION_53	IF_2
0x4003cc2	      0xb800000000	                              mov eax, 0	      1673	dir.c	FUNCTION_53	IF_2
0x4003cc7	          0x4584f6	                         test r14b, r14b	      1672	dir.c	FUNCTION_53	IF_2
0x4003cca	     0xf8536020000	                           jne 0x4003f06	      1672	dir.c	FUNCTION_53	IF_2
0x4003cd0	    0x41f644241040	           test byte [r12 + 0x10], 0x40 	      1693	dir.c	FUNCTION_53	IF_3
0x4003cd6	            0x7428	                            je 0x4003d00	      1693	dir.c	FUNCTION_53	IF_3
0x4003cd8	          0x83fa04	                              cmp edx, 4	      1694	dir.c	FUNCTION_53	IF_3
0x4003cdb	            0x7523	                           jne 0x4003d00	      1694	dir.c	FUNCTION_53	IF_3
0x4003cdd	          0x4d85ed	                           test r13, r13	      1694	dir.c	FUNCTION_53	IF_3
0x4003ce0	            0x751e	                           jne 0x4003d00	      1694	dir.c	FUNCTION_53	IF_3
0x4003ce2	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      1696	dir.c	FUNCTION_53	IF_3	CALL_3
0x4003ce6	          0x8b5308	                mov edx, dword [rbx + 8]	      1696	dir.c	FUNCTION_53	IF_3	CALL_3
0x4003ce9	          0x4889ef	                            mov rdi, rbp	      1696	dir.c	FUNCTION_53	IF_3	CALL_3
0x4003cec	      0xe892cdffff	      call sym.directory_exists_in_index	      1696	dir.c	FUNCTION_53	IF_3	CALL_3
0x4003cf1	            0x89c2	                            mov edx, eax	      1696	dir.c	FUNCTION_53	IF_3	CALL_3
0x4003cf3	      0xb800000000	                              mov eax, 0	      1697	dir.c	FUNCTION_53	IF_3
0x4003cf8	            0x85d2	                           test edx, edx	      1695	dir.c	FUNCTION_53	IF_3
0x4003cfa	     0xf8406020000	                            je 0x4003f06	      1695	dir.c	FUNCTION_53	IF_3
0x4003d00	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1699	dir.c	FUNCTION_53	CALL_4
0x4003d04	    0x488d8c248000	                   lea rcx, [rsp + 0x80]	      1699	dir.c	FUNCTION_53	CALL_4
0x4003d0c	          0x4889ee	                            mov rsi, rbp	      1699	dir.c	FUNCTION_53	CALL_4
0x4003d0f	          0x4c89e7	                            mov rdi, r12	      1699	dir.c	FUNCTION_53	CALL_4
0x4003d12	      0xe800000000	                          call 0x4003d17	      1699	dir.c	FUNCTION_53	CALL_4
0x4003d17	          0x4189c5	                           mov r13d, eax	      1699	dir.c	FUNCTION_53	CALL_4
0x4003d1a	            0x85c0	                           test eax, eax	      1705	dir.c	FUNCTION_53	IF_4
0x4003d1c	            0x7411	                            je 0x4003d2f	      1705	dir.c	FUNCTION_53	IF_4
0x4003d1e	      0xb802000000	                              mov eax, 2	      1706	dir.c	FUNCTION_53	IF_4
0x4003d23	    0x41f644241021	           test byte [r12 + 0x10], 0x21 	      1705	dir.c	FUNCTION_53	IF_4
0x4003d29	     0xf84d7010000	                            je 0x4003f06	      1705	dir.c	FUNCTION_53	IF_4
0x4003d2f	    0x8b8424800000	            mov eax, dword [rsp + 0x80] 	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4003d36	          0x83f808	                              cmp eax, 8	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4003d39	     0xf84b5010000	                            je 0x4003ef4	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4003d3f	          0x83f80a	                            cmp eax, 0xa	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4003d42	     0xf84ac010000	                            je 0x4003ef4	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4003d48	          0x83f804	                              cmp eax, 4	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4003d4b	     0xf85b0010000	                           jne 0x4003f01	      1708	dir.c	FUNCTION_53	SWITCH_1
0x4003d51	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_147
0x4003d54	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_147
0x4003d57	            0x740a	                            je 0x4003d63	       141	strbuf.h	FUNCTION_147
0x4003d59	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_149	IF_1	CALL_1
0x4003d5d	        0x48394308	                cmp qword [rbx + 8], rax	       227	strbuf.h	FUNCTION_149	IF_1	CALL_1
0x4003d61	            0x750d	                           jne 0x4003d70	       227	strbuf.h	FUNCTION_149	IF_1	CALL_1
0x4003d63	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_149	CALL_2
0x4003d68	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_149	CALL_2
0x4003d6b	      0xe800000000	                          call 0x4003d70	       228	strbuf.h	FUNCTION_149	CALL_2
0x4003d70	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_149
0x4003d74	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_149
0x4003d78	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_149
0x4003d7c	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_149
0x4003d80	        0xc604022f	              mov byte [rdx + rax], 0x2f	       229	strbuf.h	FUNCTION_149
0x4003d84	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_149
0x4003d88	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_149
0x4003d8c	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_149
0x4003d90	        0x4c8b7308	                mov r14, qword [rbx + 8]	      1713	dir.c	FUNCTION_53	SWITCH_1	CALL_6
0x4003d94	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      1714	dir.c	FUNCTION_53	SWITCH_1
0x4003d98	        0x418d56ff	                      lea edx, [r14 - 1]	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x4003d9c	          0x4889de	                            mov rsi, rbx	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x4003d9f	          0x4889ef	                            mov rdi, rbp	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x4003da2	      0xe8dcccffff	      call sym.directory_exists_in_index	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x4003da7	            0x89c2	                            mov edx, eax	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x4003da9	          0x83f801	                              cmp eax, 1	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x4003dac	     0xf8418010000	                            je 0x4003eca	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x4003db2	          0x83f801	                              cmp eax, 1	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x4003db5	            0x7213	                            jb 0x4003dca	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x4003db7	      0xb800000000	                              mov eax, 0	      1465	dir.c	FUNCTION_48	SWITCH_1
0x4003dbc	          0x83fa02	                              cmp edx, 2	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x4003dbf	     0xf8441010000	                            je 0x4003f06	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x4003dc5	      0xe9a1000000	                           jmp 0x4003e6b	      1460	dir.c	FUNCTION_48	SWITCH_1	CALL_1
0x4003dca	      0x418b542410	            mov edx, dword [r12 + 0x10] 	      1468	dir.c	FUNCTION_48	SWITCH_1	IF_1
0x4003dcf	          0xf6c202	                              test dl, 2	      1468	dir.c	FUNCTION_48	SWITCH_1	IF_1
0x4003dd2	     0xf8593000000	                           jne 0x4003e6b	      1468	dir.c	FUNCTION_48	SWITCH_1	IF_1
0x4003dd8	          0x4585ed	                         test r13d, r13d	      1470	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003ddb	            0x7452	                            je 0x4003e2f	      1470	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003ddd	            0x89d0	                            mov eax, edx	      1471	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003ddf	      0x2520010000	                          and eax, 0x120	      1471	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003de4	      0x3d20010000	                          cmp eax, 0x120	      1471	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003de9	            0x7544	                           jne 0x4003e2f	      1471	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003deb	      0xb802000000	                              mov eax, 2	      1486	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_3
0x4003df0	          0xf6c204	                              test dl, 4	      1485	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_3
0x4003df3	     0xf840d010000	                            je 0x4003f06	      1485	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_3
0x4003df9	        0xff742410	                 push qword [rsp + 0x10]	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003dfd	            0x6a01	                                  push 1	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003dff	    0x41b901000000	                              mov r9d, 1	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003e05	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003e0a	          0x4489f1	                           mov ecx, r14d	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003e0d	          0x4889da	                            mov rdx, rbx	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003e10	          0x4889ee	                            mov rsi, rbp	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003e13	          0x4c89e7	                            mov rdi, r12	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003e16	      0xe844f4ffff	       call sym.read_directory_recursive	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003e1b	        0x4883c410	                           add rsp, 0x10	      1488	dir.c	FUNCTION_48	SWITCH_1	IF_2	IF_4	CALL_2
0x4003e1f	          0x83f802	                              cmp eax, 2	      1492	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003e22	      0xba00000000	                              mov edx, 0	      1492	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003e27	           0xf45c2	                         cmovne eax, edx	      1492	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003e2a	      0xe9d7000000	                           jmp 0x4003f06	      1492	dir.c	FUNCTION_48	SWITCH_1	IF_2
0x4003e2f	      0xb801000000	                              mov eax, 1	      1499	dir.c	FUNCTION_48	SWITCH_1
0x4003e34	          0xf6c208	                              test dl, 8	      1494	dir.c	FUNCTION_48	SWITCH_1	IF_5
0x4003e37	     0xf85c9000000	                           jne 0x4003f06	      1494	dir.c	FUNCTION_48	SWITCH_1	IF_5
0x4003e3d	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x4003e42	      0xbe00000000	                              mov esi, 0	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x4003e47	          0x4889df	                            mov rdi, rbx	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x4003e4a	      0xe800000000	                          call 0x4003e4f	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x4003e4f	            0x89c2	                            mov edx, eax	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x4003e51	      0xb801000000	                              mov eax, 1	      1499	dir.c	FUNCTION_48	SWITCH_1
0x4003e56	            0x85d2	                           test edx, edx	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x4003e58	     0xf85a8000000	                           jne 0x4003f06	      1496	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6	CALL_3
0x4003e5e	        0x4183fd01	                             cmp r13d, 1	      1497	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6
0x4003e62	            0x19c0	                            sbb eax, eax	      1497	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6
0x4003e64	            0xf7d0	                                 not eax	      1497	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6
0x4003e66	          0x83c003	                              add eax, 3	      1497	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6
0x4003e69	            0xeb64	                           jmp 0x4003ecf	      1497	dir.c	FUNCTION_48	SWITCH_1	IF_5	IF_6
0x4003e6b	    0x41f644241004	               test byte [r12 + 0x10], 4	      1504	dir.c	FUNCTION_48	IF_7
0x4003e71	            0x7510	                           jne 0x4003e83	      1504	dir.c	FUNCTION_48	IF_7
0x4003e73	        0x4183fd01	                             cmp r13d, 1	      1505	dir.c	FUNCTION_48	IF_7
0x4003e77	            0x19c0	                            sbb eax, eax	      1505	dir.c	FUNCTION_48	IF_7
0x4003e79	            0xf7d0	                                 not eax	      1505	dir.c	FUNCTION_48	IF_7
0x4003e7b	          0x83c003	                              add eax, 3	      1505	dir.c	FUNCTION_48	IF_7
0x4003e7e	      0xe983000000	                           jmp 0x4003f06	      1505	dir.c	FUNCTION_48	IF_7
0x4003e83	          0x4489f1	                           mov ecx, r14d	      1507	dir.c	FUNCTION_48	CALL_4
0x4003e86	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      1507	dir.c	FUNCTION_48	CALL_4
0x4003e8a	            0x29c1	                            sub ecx, eax	      1507	dir.c	FUNCTION_48	CALL_4
0x4003e8c	          0x4863d0	                         movsxd rdx, eax	      1507	dir.c	FUNCTION_48	CALL_4
0x4003e8f	          0x4801da	                            add rdx, rbx	      1507	dir.c	FUNCTION_48	CALL_4
0x4003e92	    0x498bbc248800	            mov rdi, qword [r12 + 0x88] 	      1507	dir.c	FUNCTION_48	CALL_4
0x4003e9a	      0x488b742408	                mov rsi, qword [rsp + 8]	      1507	dir.c	FUNCTION_48	CALL_4
0x4003e9f	      0xe844c9ffff	               call sym.lookup_untracked	      1507	dir.c	FUNCTION_48	CALL_4
0x4003ea4	          0x4989c0	                             mov r8, rax	      1507	dir.c	FUNCTION_48	CALL_4
0x4003ea7	        0xff742410	                 push qword [rsp + 0x10]	      1514	dir.c	FUNCTION_48	CALL_5
0x4003eab	            0x4155	                                push r13	      1514	dir.c	FUNCTION_48	CALL_5
0x4003ead	    0x41b901000000	                              mov r9d, 1	      1514	dir.c	FUNCTION_48	CALL_5
0x4003eb3	          0x4489f1	                           mov ecx, r14d	      1514	dir.c	FUNCTION_48	CALL_5
0x4003eb6	          0x4889da	                            mov rdx, rbx	      1514	dir.c	FUNCTION_48	CALL_5
0x4003eb9	          0x4889ee	                            mov rsi, rbp	      1514	dir.c	FUNCTION_48	CALL_5
0x4003ebc	          0x4c89e7	                            mov rdi, r12	      1514	dir.c	FUNCTION_48	CALL_5
0x4003ebf	      0xe89bf3ffff	       call sym.read_directory_recursive	      1514	dir.c	FUNCTION_48	CALL_5
0x4003ec4	        0x4883c410	                           add rsp, 0x10	      1514	dir.c	FUNCTION_48	CALL_5
0x4003ec8	            0xeb05	                           jmp 0x4003ecf	      1514	dir.c	FUNCTION_48	CALL_5
0x4003eca	      0xb801000000	                              mov eax, 1	      1462	dir.c	FUNCTION_48	SWITCH_1
0x4003ecf	          0x4585ed	                         test r13d, r13d	      1724	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4003ed2	            0x7532	                           jne 0x4003f06	      1724	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4003ed4	          0x83f802	                              cmp eax, 2	      1724	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4003ed7	            0x752d	                           jne 0x4003f06	      1724	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4003ed9	      0x418b542410	            mov edx, dword [r12 + 0x10] 	      1726	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4003ede	    0x81e220010000	                          and edx, 0x120	      1726	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4003ee4	    0x81fa20010000	                          cmp edx, 0x120	      1728	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4003eea	      0xba01000000	                              mov edx, 1	      1728	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4003eef	           0xf44c2	                          cmove eax, edx	      1728	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4003ef2	            0xeb12	                           jmp 0x4003f06	      1728	dir.c	FUNCTION_53	SWITCH_1	IF_5
0x4003ef4	        0x4183fd01	                             cmp r13d, 1	      1732	dir.c	FUNCTION_53	SWITCH_1
0x4003ef8	            0x19c0	                            sbb eax, eax	      1732	dir.c	FUNCTION_53	SWITCH_1
0x4003efa	            0xf7d0	                                 not eax	      1732	dir.c	FUNCTION_53	SWITCH_1
0x4003efc	          0x83c003	                              add eax, 3	      1732	dir.c	FUNCTION_53	SWITCH_1
0x4003eff	            0xeb05	                           jmp 0x4003f06	      1732	dir.c	FUNCTION_53	SWITCH_1
0x4003f01	      0xb800000000	                              mov eax, 0	      1710	dir.c	FUNCTION_53	SWITCH_1
0x4003f06	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      1734	dir.c	FUNCTION_53
0x4003f0b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1734	dir.c	FUNCTION_53
0x4003f14	            0x7405	                            je 0x4003f1b	      1734	dir.c	FUNCTION_53
0x4003f16	      0xe800000000	                          call 0x4003f1b	      1734	dir.c	FUNCTION_53
0x4003f1b	        0x4883c448	                           add rsp, 0x48	      1734	dir.c	FUNCTION_53
0x4003f1f	              0x5b	                                 pop rbx	      1734	dir.c	FUNCTION_53
0x4003f20	              0x5d	                                 pop rbp	      1734	dir.c	FUNCTION_53
0x4003f21	            0x415c	                                 pop r12	      1734	dir.c	FUNCTION_53
0x4003f23	            0x415d	                                 pop r13	      1734	dir.c	FUNCTION_53
0x4003f25	            0x415e	                                 pop r14	      1734	dir.c	FUNCTION_53
0x4003f27	            0x415f	                                 pop r15	      1734	dir.c	FUNCTION_53
0x4003f29	              0xc3	                                     ret	      1734	dir.c	FUNCTION_53
dir_inside_of	ELSE,0:SWITCH,0:IF,3:functions,0:CALL,2:FOR,0:WHILE,1:DO,0	85
0x40046f7	        0x4883ec08	                              sub rsp, 8	      2355	dir.c	FUNCTION_75
0x40046fb	          0x4885f6	                           test rsi, rsi	      2358	dir.c	FUNCTION_75	CALL_1
0x40046fe	            0x7422	                            je 0x4004722	      2358	dir.c	FUNCTION_75	CALL_1
0x4004700	          0x4885ff	                           test rdi, rdi	      2358	dir.c	FUNCTION_75	CALL_1
0x4004703	            0x741d	                            je 0x4004722	      2358	dir.c	FUNCTION_75	CALL_1
0x4004705	           0xfb60e	                   movzx ecx, byte [rsi]	      2358	dir.c	FUNCTION_75	CALL_1
0x4004708	            0x84c9	                             test cl, cl	      2358	dir.c	FUNCTION_75	CALL_1
0x400470a	            0x7416	                            je 0x4004722	      2358	dir.c	FUNCTION_75	CALL_1
0x400470c	           0xfb607	                   movzx eax, byte [rdi]	      2358	dir.c	FUNCTION_75	CALL_1
0x400470f	            0x84c0	                             test al, al	      2358	dir.c	FUNCTION_75	CALL_1
0x4004711	            0x740f	                            je 0x4004722	      2358	dir.c	FUNCTION_75	CALL_1
0x4004713	    0x448b15000000	           mov r10d, dword [0x0400471a] 	      2344	dir.c	FUNCTION_74	IF_2
0x400471a	    0x41b800000000	                              mov r8d, 0	      2344	dir.c	FUNCTION_74	IF_2
0x4004720	            0xeb3b	                           jmp 0x400475d	      2344	dir.c	FUNCTION_74	IF_2
0x4004722	      0xb900000000	                              mov ecx, 0	      2358	dir.c	FUNCTION_75	CALL_1
0x4004727	      0xba36090000	                          mov edx, 0x936	      2358	dir.c	FUNCTION_75	CALL_1
0x400472c	      0xbe00000000	                              mov esi, 0	      2358	dir.c	FUNCTION_75	CALL_1
0x4004731	      0xbf00000000	                              mov edi, 0	      2358	dir.c	FUNCTION_75	CALL_1
0x4004736	      0xe800000000	                          call 0x400473b	      2358	dir.c	FUNCTION_75	CALL_1
0x400473b	        0x4883c601	                              add rsi, 1	      2361	dir.c	FUNCTION_75	WHILE_1
0x400473f	        0x4883c701	                              add rdi, 1	      2362	dir.c	FUNCTION_75	WHILE_1
0x4004743	        0x4183c001	                              add r8d, 1	      2363	dir.c	FUNCTION_75	WHILE_1
0x4004747	           0xfb60e	                   movzx ecx, byte [rsi]	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x400474a	            0x84c9	                             test cl, cl	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x400474c	     0xf84a2000000	                            je 0x40047f4	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4004752	           0xfb607	                   movzx eax, byte [rdi]	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4004755	            0x84c0	                             test al, al	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x4004757	     0xf848b000000	                            je 0x40047e8	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x400475d	            0x38c1	                              cmp cl, al	      2342	dir.c	FUNCTION_74	IF_1
0x400475f	            0x74da	                            je 0x400473b	      2342	dir.c	FUNCTION_74	IF_1
0x4004761	          0x4585d2	                         test r10d, r10d	      2344	dir.c	FUNCTION_74	IF_2
0x4004764	            0x7444	                            je 0x40047aa	      2344	dir.c	FUNCTION_74	IF_2
0x4004766	           0xfb6d1	                           movzx edx, cl	      2345	dir.c	FUNCTION_74	IF_2
0x4004769	          0x4c63ca	                          movsxd r9, edx	       993	git-compat-util.h	FUNCTION_177	IF_1
0x400476c	    0x450fb6890000	                    movzx r9d, byte [r9]	       993	git-compat-util.h	FUNCTION_177	IF_1
0x4004774	        0x4183e104	                              and r9d, 4	       993	git-compat-util.h	FUNCTION_177	IF_1
0x4004778	          0x4189d3	                           mov r11d, edx	       994	git-compat-util.h	FUNCTION_177	IF_1
0x400477b	        0x4183e3df	                    and r11d, 0xffffffdf	       994	git-compat-util.h	FUNCTION_177	IF_1
0x400477f	          0x4584c9	                           test r9b, r9b	       994	git-compat-util.h	FUNCTION_177	IF_1
0x4004782	        0x410f45d3	                        cmovne edx, r11d	       994	git-compat-util.h	FUNCTION_177	IF_1
0x4004786	           0xfb6c0	                           movzx eax, al	      2345	dir.c	FUNCTION_74	IF_2
0x4004789	          0x4c63c8	                          movsxd r9, eax	       993	git-compat-util.h	FUNCTION_177	IF_1
0x400478c	    0x450fb6890000	                    movzx r9d, byte [r9]	       993	git-compat-util.h	FUNCTION_177	IF_1
0x4004794	        0x4183e104	                              and r9d, 4	       993	git-compat-util.h	FUNCTION_177	IF_1
0x4004798	          0x4189c3	                           mov r11d, eax	       994	git-compat-util.h	FUNCTION_177	IF_1
0x400479b	        0x4183e3df	                    and r11d, 0xffffffdf	       994	git-compat-util.h	FUNCTION_177	IF_1
0x400479f	          0x4584c9	                           test r9b, r9b	       994	git-compat-util.h	FUNCTION_177	IF_1
0x40047a2	        0x410f45c3	                        cmovne eax, r11d	       994	git-compat-util.h	FUNCTION_177	IF_1
0x40047a6	            0x29c2	                            sub edx, eax	      2345	dir.c	FUNCTION_74	IF_2
0x40047a8	            0xeb08	                           jmp 0x40047b2	      2345	dir.c	FUNCTION_74	IF_2
0x40047aa	           0xfbed1	                           movsx edx, cl	      2346	dir.c	FUNCTION_74
0x40047ad	           0xfbec0	                           movsx eax, al	      2346	dir.c	FUNCTION_74
0x40047b0	            0x29c2	                            sub edx, eax	      2346	dir.c	FUNCTION_74
0x40047b2	            0x85d2	                           test edx, edx	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x40047b4	            0x7485	                            je 0x400473b	      2360	dir.c	FUNCTION_75	WHILE_1	CALL_2
0x40047b6	      0xb8ffffffff	                     mov eax, 0xffffffff	      2368	dir.c	FUNCTION_75	IF_1
0x40047bb	            0x84c9	                             test cl, cl	      2367	dir.c	FUNCTION_75	IF_1
0x40047bd	            0x7441	                            je 0x4004800	      2367	dir.c	FUNCTION_75	IF_1
0x40047bf	            0xeb48	                           jmp 0x4004809	      2367	dir.c	FUNCTION_75	IF_1
0x40047c1	        0x807eff2f	                cmp byte [rsi - 1], 0x2f	      2374	dir.c	FUNCTION_75	IF_3
0x40047c5	            0x750f	                           jne 0x40047d6	      2374	dir.c	FUNCTION_75	IF_3
0x40047c7	        0x807fff2f	                cmp byte [rdi - 1], 0x2f	      2375	dir.c	FUNCTION_75	IF_3
0x40047cb	      0xb8ffffffff	                     mov eax, 0xffffffff	      2375	dir.c	FUNCTION_75	IF_3
0x40047d0	        0x410f44c0	                          cmove eax, r8d	      2375	dir.c	FUNCTION_75	IF_3
0x40047d4	            0xeb33	                           jmp 0x4004809	      2375	dir.c	FUNCTION_75	IF_3
0x40047d6	        0x4183c001	                              add r8d, 1	      2378	dir.c	FUNCTION_75
0x40047da	          0x80fa2f	                            cmp dl, 0x2f	      2378	dir.c	FUNCTION_75
0x40047dd	      0xb8ffffffff	                     mov eax, 0xffffffff	      2378	dir.c	FUNCTION_75
0x40047e2	        0x410f44c0	                          cmove eax, r8d	      2378	dir.c	FUNCTION_75
0x40047e6	            0xeb21	                           jmp 0x4004809	      2378	dir.c	FUNCTION_75
0x40047e8	      0xb8ffffffff	                     mov eax, 0xffffffff	      2368	dir.c	FUNCTION_75	IF_1
0x40047ed	            0xeb1a	                           jmp 0x4004809	      2368	dir.c	FUNCTION_75	IF_1
0x40047ef	          0x4489c0	                            mov eax, r8d	      2370	dir.c	FUNCTION_75	IF_2
0x40047f2	            0xeb15	                           jmp 0x4004809	      2370	dir.c	FUNCTION_75	IF_2
0x40047f4	           0xfb617	                   movzx edx, byte [rdi]	      2370	dir.c	FUNCTION_75	IF_2
0x40047f7	          0x4489c0	                            mov eax, r8d	      2363	dir.c	FUNCTION_75	WHILE_1
0x40047fa	            0x84d2	                             test dl, dl	      2370	dir.c	FUNCTION_75	IF_2
0x40047fc	            0x740b	                            je 0x4004809	      2370	dir.c	FUNCTION_75	IF_2
0x40047fe	            0xebc1	                           jmp 0x40047c1	      2370	dir.c	FUNCTION_75	IF_2
0x4004800	           0xfb617	                   movzx edx, byte [rdi]	      2370	dir.c	FUNCTION_75	IF_2
0x4004803	            0x84d2	                             test dl, dl	      2370	dir.c	FUNCTION_75	IF_2
0x4004805	            0x75ba	                           jne 0x40047c1	      2370	dir.c	FUNCTION_75	IF_2
0x4004807	            0xebe6	                           jmp 0x40047ef	      2370	dir.c	FUNCTION_75	IF_2
0x4004809	        0x4883c408	                              add rsp, 8	      2379	dir.c	FUNCTION_75
0x400480d	              0xc3	                                     ret	      2379	dir.c	FUNCTION_75
do_read_blob	ELSE,0:SWITCH,0:IF,4:functions,0:CALL,8:FOR,0:WHILE,0:DO,0	75
0x40003c1	            0x4155	                                push r13	       239	dir.c	FUNCTION_10
0x40003c3	            0x4154	                                push r12	       239	dir.c	FUNCTION_10
0x40003c5	              0x55	                                push rbp	       239	dir.c	FUNCTION_10
0x40003c6	              0x53	                                push rbx	       239	dir.c	FUNCTION_10
0x40003c7	        0x4883ec28	                           sub rsp, 0x28	       239	dir.c	FUNCTION_10
0x40003cb	          0x4989fd	                            mov r13, rdi	       239	dir.c	FUNCTION_10
0x40003ce	          0x4889f3	                            mov rbx, rsi	       239	dir.c	FUNCTION_10
0x40003d1	          0x4989d4	                            mov r12, rdx	       239	dir.c	FUNCTION_10
0x40003d4	          0x4889cd	                            mov rbp, rcx	       239	dir.c	FUNCTION_10
0x40003d7	    0x64488b042528	                mov rax, qword fs:[0x28]	       239	dir.c	FUNCTION_10
0x40003e0	      0x4889442418	             mov qword [rsp + 0x18], rax	       239	dir.c	FUNCTION_10
0x40003e5	            0x31c0	                            xor eax, eax	       239	dir.c	FUNCTION_10
0x40003e7	    0x48c702000000	                      mov qword [rdx], 0	       244	dir.c	FUNCTION_10
0x40003ee	    0x48c701000000	                      mov qword [rcx], 0	       245	dir.c	FUNCTION_10
0x40003f5	      0xb901000000	                              mov ecx, 1	      1200	cache.h	FUNCTION_140	CALL_1
0x40003fa	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1200	cache.h	FUNCTION_140	CALL_1
0x40003ff	      0x488d74240c	                    lea rsi, [rsp + 0xc]	      1200	cache.h	FUNCTION_140	CALL_1
0x4000404	      0xe800000000	                          call 0x4000409	      1200	cache.h	FUNCTION_140	CALL_1
0x4000409	          0x4885c0	                           test rax, rax	       248	dir.c	FUNCTION_10	IF_1
0x400040c	            0x7407	                            je 0x4000415	       248	dir.c	FUNCTION_10	IF_1
0x400040e	      0x837c240c03	                cmp dword [rsp + 0xc], 3	       248	dir.c	FUNCTION_10	IF_1
0x4000413	            0x7412	                            je 0x4000427	       248	dir.c	FUNCTION_10	IF_1
0x4000415	          0x4889c7	                            mov rdi, rax	       249	dir.c	FUNCTION_10	IF_1	CALL_2
0x4000418	      0xe800000000	                          call 0x400041d	       249	dir.c	FUNCTION_10	IF_1	CALL_2
0x400041d	      0xb8ffffffff	                     mov eax, 0xffffffff	       250	dir.c	FUNCTION_10	IF_1
0x4000422	      0xe9ac000000	                           jmp 0x40004d3	       250	dir.c	FUNCTION_10	IF_1
0x4000427	          0x4885db	                           test rbx, rbx	       253	dir.c	FUNCTION_10	IF_2
0x400042a	            0x743d	                            je 0x4000469	       253	dir.c	FUNCTION_10	IF_2
0x400042c	    0x48c703000000	                      mov qword [rbx], 0	        90	string3.h	FUNCTION_110	CALL_6
0x4000433	    0x48c743080000	                  mov qword [rbx + 8], 0	        90	string3.h	FUNCTION_110	CALL_6
0x400043b	    0x48c743100000	               mov qword [rbx + 0x10], 0	        90	string3.h	FUNCTION_110	CALL_6
0x4000443	    0x48c743180000	               mov qword [rbx + 0x18], 0	        90	string3.h	FUNCTION_110	CALL_6
0x400044b	    0xc74320000000	               mov dword [rbx + 0x20], 0	        90	string3.h	FUNCTION_110	CALL_6
0x4000452	        0x498b4d00	                    mov rcx, qword [r13]	        53	string3.h	FUNCTION_107	CALL_3
0x4000456	        0x48894b24	             mov qword [rbx + 0x24], rcx	        53	string3.h	FUNCTION_107	CALL_3
0x400045a	        0x498b4d08	                mov rcx, qword [r13 + 8]	        53	string3.h	FUNCTION_107	CALL_3
0x400045e	        0x48894b2c	             mov qword [rbx + 0x2c], rcx	        53	string3.h	FUNCTION_107	CALL_3
0x4000462	        0x418b4d10	            mov ecx, dword [r13 + 0x10] 	        53	string3.h	FUNCTION_107	CALL_3
0x4000466	          0x894b34	             mov dword [rbx + 0x34], ecx	        53	string3.h	FUNCTION_107	CALL_3
0x4000469	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       258	dir.c	FUNCTION_10	IF_3
0x400046e	          0x4885f6	                           test rsi, rsi	       258	dir.c	FUNCTION_10	IF_3
0x4000471	            0x750f	                           jne 0x4000482	       258	dir.c	FUNCTION_10	IF_3
0x4000473	          0x4889c7	                            mov rdi, rax	       259	dir.c	FUNCTION_10	IF_3	CALL_5
0x4000476	      0xe800000000	                          call 0x400047b	       259	dir.c	FUNCTION_10	IF_3	CALL_5
0x400047b	      0xb800000000	                              mov eax, 0	       260	dir.c	FUNCTION_10	IF_3
0x4000480	            0xeb51	                           jmp 0x40004d3	       260	dir.c	FUNCTION_10	IF_3
0x4000482	      0x807c30ff0a	          cmp byte [rax + rsi - 1], 0xa 	       263	dir.c	FUNCTION_10	IF_4
0x4000487	            0x7438	                            je 0x40004c1	       263	dir.c	FUNCTION_10	IF_4
0x4000489	        0x4883feff	             cmp rsi, 0xffffffffffffffff	       785	git-compat-util.h	FUNCTION_170	IF_1
0x400048d	            0x7514	                           jne 0x40004a3	       785	git-compat-util.h	FUNCTION_170	IF_1
0x400048f	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4000494	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4000499	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x400049e	      0xe800000000	                          call 0x40004a3	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x40004a3	        0x4883c601	                              add rsi, 1	       264	dir.c	FUNCTION_10	IF_4	CALL_7
0x40004a7	          0x4889c7	                            mov rdi, rax	       264	dir.c	FUNCTION_10	IF_4	CALL_7
0x40004aa	      0xe800000000	                          call 0x40004af	       264	dir.c	FUNCTION_10	IF_4	CALL_7
0x40004af	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       265	dir.c	FUNCTION_10	IF_4
0x40004b4	        0x488d4a01	                      lea rcx, [rdx + 1]	       265	dir.c	FUNCTION_10	IF_4
0x40004b8	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       265	dir.c	FUNCTION_10	IF_4
0x40004bd	        0xc604100a	               mov byte [rax + rdx], 0xa	       265	dir.c	FUNCTION_10	IF_4
0x40004c1	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       268	dir.c	FUNCTION_10	CALL_8
0x40004c6	        0x49891424	                    mov qword [r12], rdx	       268	dir.c	FUNCTION_10	CALL_8
0x40004ca	        0x48894500	                    mov qword [rbp], rax	       269	dir.c	FUNCTION_10
0x40004ce	      0xb801000000	                              mov eax, 1	       271	dir.c	FUNCTION_10
0x40004d3	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       272	dir.c	FUNCTION_10
0x40004d8	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       272	dir.c	FUNCTION_10
0x40004e1	            0x7405	                            je 0x40004e8	       272	dir.c	FUNCTION_10
0x40004e3	      0xe800000000	                          call 0x40004e8	       272	dir.c	FUNCTION_10
0x40004e8	        0x4883c428	                           add rsp, 0x28	       272	dir.c	FUNCTION_10
0x40004ec	              0x5b	                                 pop rbx	       272	dir.c	FUNCTION_10
0x40004ed	              0x5d	                                 pop rbp	       272	dir.c	FUNCTION_10
0x40004ee	            0x415c	                                 pop r12	       272	dir.c	FUNCTION_10
0x40004f0	            0x415d	                                 pop r13	       272	dir.c	FUNCTION_10
0x40004f2	              0xc3	                                     ret	       272	dir.c	FUNCTION_10
check_dir_entry_contains	ELSE,0:SWITCH,0:IF,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0	17
0x4003f2a	            0x8b17	                    mov edx, dword [rdi]	      2054	dir.c	FUNCTION_63
0x4003f2c	      0xb800000000	                              mov eax, 0	      2055	dir.c	FUNCTION_63
0x4003f31	            0x3b16	                    cmp edx, dword [rsi]	      2055	dir.c	FUNCTION_63
0x4003f33	            0x7329	                           jae 0x4003f5e	      2055	dir.c	FUNCTION_63
0x4003f35	          0x8d4aff	                      lea ecx, [rdx - 1]	      2055	dir.c	FUNCTION_63
0x4003f38	      0x807c0f042f	         cmp byte [rdi + rcx + 4], 0x2f 	      2054	dir.c	FUNCTION_63
0x4003f3d	            0x751f	                           jne 0x4003f5e	      2054	dir.c	FUNCTION_63
0x4003f3f	        0x4883ec08	                              sub rsp, 8	      2053	dir.c	FUNCTION_63
0x4003f43	            0x89d2	                            mov edx, edx	      2056	dir.c	FUNCTION_63	CALL_1
0x4003f45	        0x4883c604	                              add rsi, 4	      2056	dir.c	FUNCTION_63	CALL_1
0x4003f49	        0x4883c704	                              add rdi, 4	      2056	dir.c	FUNCTION_63	CALL_1
0x4003f4d	      0xe800000000	                          call 0x4003f52	      2056	dir.c	FUNCTION_63	CALL_1
0x4003f52	            0x85c0	                           test eax, eax	      2055	dir.c	FUNCTION_63
0x4003f54	           0xf94c0	                                 sete al	      2055	dir.c	FUNCTION_63
0x4003f57	           0xfb6c0	                           movzx eax, al	      2055	dir.c	FUNCTION_63
0x4003f5a	        0x4883c408	                              add rsp, 8	      2057	dir.c	FUNCTION_63
0x4003f5e	            0xf3c3	                                     ret	      2057	dir.c	FUNCTION_63
is_inside_dir	ELSE,0:SWITCH,0:IF,1:functions,0:CALL,3:FOR,0:WHILE,0:DO,0	22
0x400480e	      0xb800000000	                              mov eax, 0	      2387	dir.c	FUNCTION_76	IF_1
0x4004813	          0x4885ff	                           test rdi, rdi	      2386	dir.c	FUNCTION_76	IF_1
0x4004816	            0x7433	                            je 0x400484b	      2386	dir.c	FUNCTION_76	IF_1
0x4004818	              0x55	                                push rbp	      2382	dir.c	FUNCTION_76
0x4004819	              0x53	                                push rbx	      2382	dir.c	FUNCTION_76
0x400481a	        0x4883ec08	                              sub rsp, 8	      2382	dir.c	FUNCTION_76
0x400481e	          0x4889fb	                            mov rbx, rdi	      2382	dir.c	FUNCTION_76
0x4004821	      0xe800000000	                          call 0x4004826	      2389	dir.c	FUNCTION_76	CALL_1
0x4004826	          0x4889c5	                            mov rbp, rax	      2389	dir.c	FUNCTION_76	CALL_1
0x4004829	          0x4889de	                            mov rsi, rbx	      2390	dir.c	FUNCTION_76	CALL_2
0x400482c	          0x4889c7	                            mov rdi, rax	      2390	dir.c	FUNCTION_76	CALL_2
0x400482f	      0xe800000000	                          call 0x4004834	      2390	dir.c	FUNCTION_76	CALL_2
0x4004834	            0xf7d0	                                 not eax	      2390	dir.c	FUNCTION_76	CALL_2
0x4004836	          0xc1e81f	                           shr eax, 0x1f	      2390	dir.c	FUNCTION_76	CALL_2
0x4004839	            0x89c3	                            mov ebx, eax	      2390	dir.c	FUNCTION_76	CALL_2
0x400483b	          0x4889ef	                            mov rdi, rbp	      2391	dir.c	FUNCTION_76	CALL_3
0x400483e	      0xe800000000	                          call 0x4004843	      2391	dir.c	FUNCTION_76	CALL_3
0x4004843	            0x89d8	                            mov eax, ebx	      2392	dir.c	FUNCTION_76
0x4004845	        0x4883c408	                              add rsp, 8	      2393	dir.c	FUNCTION_76
0x4004849	              0x5b	                                 pop rbx	      2393	dir.c	FUNCTION_76
0x400484a	              0x5d	                                 pop rbp	      2393	dir.c	FUNCTION_76
0x400484b	            0xf3c3	                                     ret	      2393	dir.c	FUNCTION_76
remove_untracked_cache	ELSE,0:SWITCH,0:IF,1:functions,0:CALL,1:FOR,0:WHILE,0:DO,0	10
0x4004e18	              0x53	                                push rbx	      2163	dir.c	FUNCTION_70
0x4004e19	          0x4889fb	                            mov rbx, rdi	      2163	dir.c	FUNCTION_70
0x4004e1c	    0x488bbfb80000	            mov rdi, qword [rdi + 0xb8] 	      2164	dir.c	FUNCTION_70	IF_1
0x4004e23	          0x4885ff	                           test rdi, rdi	      2164	dir.c	FUNCTION_70	IF_1
0x4004e26	            0x7417	                            je 0x4004e3f	      2164	dir.c	FUNCTION_70	IF_1
0x4004e28	      0xe800000000	                          call 0x4004e2d	      2165	dir.c	FUNCTION_70	IF_1	CALL_1
0x4004e2d	    0x48c783b80000	               mov qword [rbx + 0xb8], 0	      2166	dir.c	FUNCTION_70	IF_1
0x4004e38	    0x814b14800000	             or dword [rbx + 0x14], 0x80	      2167	dir.c	FUNCTION_70	IF_1
0x4004e3f	              0x5b	                                 pop rbx	      2169	dir.c	FUNCTION_70
0x4004e40	              0xc3	                                     ret	      2169	dir.c	FUNCTION_70
prep_exclude	ELSE,2:SWITCH,0:IF,11:functions,0:CALL,24:FOR,0:WHILE,2:DO,0	356
0x4002a5e	            0x4157	                                push r15	      1141	dir.c	FUNCTION_40
0x4002a60	            0x4156	                                push r14	      1141	dir.c	FUNCTION_40
0x4002a62	            0x4155	                                push r13	      1141	dir.c	FUNCTION_40
0x4002a64	            0x4154	                                push r12	      1141	dir.c	FUNCTION_40
0x4002a66	              0x55	                                push rbp	      1141	dir.c	FUNCTION_40
0x4002a67	              0x53	                                push rbx	      1141	dir.c	FUNCTION_40
0x4002a68	    0x4881ecd80000	                           sub rsp, 0xd8	      1141	dir.c	FUNCTION_40
0x4002a6f	          0x4989ff	                            mov r15, rdi	      1141	dir.c	FUNCTION_40
0x4002a72	      0x4889742428	             mov qword [rsp + 0x28], rsi	      1141	dir.c	FUNCTION_40
0x4002a77	      0x4889542408	                mov qword [rsp + 8], rdx	      1141	dir.c	FUNCTION_40
0x4002a7c	        0x894c2434	             mov dword [rsp + 0x34], ecx	      1141	dir.c	FUNCTION_40
0x4002a80	    0x64488b042528	                mov rax, qword fs:[0x28]	      1141	dir.c	FUNCTION_40
0x4002a89	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      1141	dir.c	FUNCTION_40
0x4002a91	            0x31c0	                            xor eax, eax	      1141	dir.c	FUNCTION_40
0x4002a93	        0x488b6f60	            mov rbp, qword [rdi + 0x60] 	      1155	dir.c	FUNCTION_40	WHILE_1
0x4002a97	          0x4885ed	                           test rbp, rbp	      1155	dir.c	FUNCTION_40	WHILE_1
0x4002a9a	            0x7467	                            je 0x4002b03	      1155	dir.c	FUNCTION_40	WHILE_1
0x4002a9c	          0x4989d5	                            mov r13, rdx	      1155	dir.c	FUNCTION_40	WHILE_1
0x4002a9f	          0x4189cc	                           mov r12d, ecx	      1155	dir.c	FUNCTION_40	WHILE_1
0x4002aa2	          0x8b5508	                mov edx, dword [rbp + 8]	      1156	dir.c	FUNCTION_40	WHILE_1	IF_1
0x4002aa5	          0x4439e2	                           cmp edx, r12d	      1156	dir.c	FUNCTION_40	WHILE_1	IF_1
0x4002aa8	            0x7f16	                            jg 0x4002ac0	      1156	dir.c	FUNCTION_40	WHILE_1	IF_1
0x4002aaa	          0x4863d2	                         movsxd rdx, edx	      1157	dir.c	FUNCTION_40	WHILE_1	IF_1	CALL_1
0x4002aad	    0x498bbf800000	            mov rdi, qword [r15 + 0x80] 	      1157	dir.c	FUNCTION_40	WHILE_1	IF_1	CALL_1
0x4002ab4	          0x4c89ee	                            mov rsi, r13	      1157	dir.c	FUNCTION_40	WHILE_1	IF_1	CALL_1
0x4002ab7	      0xe800000000	                          call 0x4002abc	      1157	dir.c	FUNCTION_40	WHILE_1	IF_1	CALL_1
0x4002abc	            0x85c0	                           test eax, eax	      1156	dir.c	FUNCTION_40	WHILE_1	IF_1
0x4002abe	            0x7443	                            je 0x4002b03	      1156	dir.c	FUNCTION_40	WHILE_1	IF_1
0x4002ac0	        0x48635d0c	          movsxd rbx, dword [rbp + 0xc] 	      1159	dir.c	FUNCTION_40	WHILE_1
0x4002ac4	        0x48c1e305	                              shl rbx, 5	      1159	dir.c	FUNCTION_40	WHILE_1
0x4002ac8	        0x49035f48	             add rbx, qword [r15 + 0x48]	      1159	dir.c	FUNCTION_40	WHILE_1
0x4002acc	        0x488b4500	                    mov rax, qword [rbp]	      1160	dir.c	FUNCTION_40	WHILE_1
0x4002ad0	        0x49894760	             mov qword [r15 + 0x60], rax	      1160	dir.c	FUNCTION_40	WHILE_1
0x4002ad4	    0x49c747680000	               mov qword [r15 + 0x68], 0	      1161	dir.c	FUNCTION_40	WHILE_1
0x4002adc	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1162	dir.c	FUNCTION_40	WHILE_1	CALL_2
0x4002ae0	      0xe800000000	                          call 0x4002ae5	      1162	dir.c	FUNCTION_40	WHILE_1	CALL_2
0x4002ae5	          0x4889df	                            mov rdi, rbx	      1163	dir.c	FUNCTION_40	WHILE_1	CALL_3
0x4002ae8	      0xe800000000	                          call 0x4002aed	      1163	dir.c	FUNCTION_40	WHILE_1	CALL_3
0x4002aed	          0x4889ef	                            mov rdi, rbp	      1164	dir.c	FUNCTION_40	WHILE_1	CALL_4
0x4002af0	      0xe800000000	                          call 0x4002af5	      1164	dir.c	FUNCTION_40	WHILE_1	CALL_4
0x4002af5	      0x41836f4001	               sub dword [r15 + 0x40], 1	      1165	dir.c	FUNCTION_40	WHILE_1
0x4002afa	        0x498b6f60	            mov rbp, qword [r15 + 0x60] 	      1155	dir.c	FUNCTION_40	WHILE_1
0x4002afe	          0x4885ed	                           test rbp, rbp	      1155	dir.c	FUNCTION_40	WHILE_1
0x4002b01	            0x759f	                           jne 0x4002aa2	      1155	dir.c	FUNCTION_40	WHILE_1
0x4002b03	        0x498b4768	            mov rax, qword [r15 + 0x68] 	      1169	dir.c	FUNCTION_40	IF_2
0x4002b07	      0x4889442458	             mov qword [rsp + 0x58], rax	      1169	dir.c	FUNCTION_40	IF_2
0x4002b0c	          0x4885c0	                           test rax, rax	      1169	dir.c	FUNCTION_40	IF_2
0x4002b0f	     0xf8537050000	                           jne 0x400304c	      1169	dir.c	FUNCTION_40	IF_2
0x4002b15	    0x4983bf800000	               cmp qword [r15 + 0x80], 0	      1177	dir.c	FUNCTION_40	IF_3
0x4002b1d	            0x750e	                           jne 0x4002b2d	      1177	dir.c	FUNCTION_40	IF_3
0x4002b1f	        0x498d7f70	                   lea rdi, [r15 + 0x70]	      1178	dir.c	FUNCTION_40	CALL_5
0x4002b23	      0xbe00100000	                         mov esi, 0x1000	      1178	dir.c	FUNCTION_40	CALL_5
0x4002b28	      0xe800000000	                          call 0x4002b2d	      1178	dir.c	FUNCTION_40	CALL_5
0x4002b2d	          0x4885ed	                           test rbp, rbp	      1181	dir.c	FUNCTION_40
0x4002b30	     0xf84ff030000	                            je 0x4002f35	      1181	dir.c	FUNCTION_40
0x4002b36	          0x8b5d08	                mov ebx, dword [rbp + 8]	      1181	dir.c	FUNCTION_40
0x4002b39	            0x85db	                           test ebx, ebx	      1182	dir.c	FUNCTION_40	CALL_6
0x4002b3b	      0xb800000000	                              mov eax, 0	      1182	dir.c	FUNCTION_40	CALL_6
0x4002b40	           0xf49c3	                         cmovns eax, ebx	      1182	dir.c	FUNCTION_40	CALL_6
0x4002b43	            0x4898	                                    cdqe	      1182	dir.c	FUNCTION_40	CALL_6
0x4002b45	        0x498d4f70	                   lea rcx, [r15 + 0x70]	      1182	dir.c	FUNCTION_40	CALL_6
0x4002b49	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      1182	dir.c	FUNCTION_40	CALL_6
0x4002b4e	        0x498b5770	            mov rdx, qword [r15 + 0x70] 	       162	strbuf.h	FUNCTION_148	IF_1
0x4002b52	          0x4885d2	                           test rdx, rdx	       162	strbuf.h	FUNCTION_148	IF_1
0x4002b55	            0x7413	                            je 0x4002b6a	       162	strbuf.h	FUNCTION_148	IF_1
0x4002b57	            0xeb0d	                           jmp 0x4002b66	       162	strbuf.h	FUNCTION_148	IF_1
0x4002b59	          0x4889c2	                            mov rdx, rax	       162	strbuf.h	FUNCTION_148	IF_1
0x4002b5c	      0xb800000000	                              mov eax, 0	      1182	dir.c	FUNCTION_40	CALL_6
0x4002b61	      0xbbffffffff	                     mov ebx, 0xffffffff	      1181	dir.c	FUNCTION_40
0x4002b66	        0x4883ea01	                              sub rdx, 1	       162	strbuf.h	FUNCTION_148	IF_1
0x4002b6a	          0x4839c2	                            cmp rdx, rax	       162	strbuf.h	FUNCTION_148	IF_1
0x4002b6d	            0x730f	                           jae 0x4002b7e	       162	strbuf.h	FUNCTION_148	IF_1
0x4002b6f	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_148	CALL_1
0x4002b74	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_148	CALL_1
0x4002b79	      0xe800000000	                          call 0x4002b7e	       163	strbuf.h	FUNCTION_148	CALL_1
0x4002b7e	        0x49894778	             mov qword [r15 + 0x78], rax	       164	strbuf.h	FUNCTION_148
0x4002b82	    0x498b97800000	            mov rdx, qword [r15 + 0x80] 	       165	strbuf.h	FUNCTION_148	IF_2
0x4002b89	    0x4881fa000000	                              cmp rdx, 0	       165	strbuf.h	FUNCTION_148	IF_2
0x4002b90	            0x7406	                            je 0x4002b98	       165	strbuf.h	FUNCTION_148	IF_2
0x4002b92	        0xc6040200	                 mov byte [rdx + rax], 0	       166	strbuf.h	FUNCTION_148	IF_2
0x4002b96	            0xeb22	                           jmp 0x4002bba	       166	strbuf.h	FUNCTION_148	IF_2
0x4002b98	    0x803d00000000	                cmp byte [0x04002b9f], 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x4002b9f	            0x7419	                            je 0x4002bba	       168	strbuf.h	FUNCTION_148	CALL_2
0x4002ba1	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x4002ba6	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_148	CALL_2
0x4002bab	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x4002bb0	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x4002bb5	      0xe800000000	                          call 0x4002bba	       168	strbuf.h	FUNCTION_148	CALL_2
0x4002bba	    0x498b87880000	            mov rax, qword [r15 + 0x88] 	      1183	dir.c	FUNCTION_40	IF_4
0x4002bc1	          0x4885c0	                           test rax, rax	      1183	dir.c	FUNCTION_40	IF_4
0x4002bc4	            0x741a	                            je 0x4002be0	      1183	dir.c	FUNCTION_40	IF_4
0x4002bc6	          0x4885ed	                           test rbp, rbp	      1184	dir.c	FUNCTION_40	IF_4
0x4002bc9	            0x7409	                            je 0x4002bd4	      1184	dir.c	FUNCTION_40	IF_4
0x4002bcb	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1184	dir.c	FUNCTION_40	IF_4
0x4002bcf	          0x4889c1	                            mov rcx, rax	      1184	dir.c	FUNCTION_40	IF_4
0x4002bd2	            0xeb11	                           jmp 0x4002be5	      1184	dir.c	FUNCTION_40	IF_4
0x4002bd4	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      1184	dir.c	FUNCTION_40	IF_4
0x4002bdb	          0x4889c1	                            mov rcx, rax	      1184	dir.c	FUNCTION_40	IF_4
0x4002bde	            0xeb05	                           jmp 0x4002be5	      1184	dir.c	FUNCTION_40	IF_4
0x4002be0	      0xb900000000	                              mov ecx, 0	      1186	dir.c	FUNCTION_40	ELSE_1
0x4002be5	        0x395c2434	            cmp dword [rsp + 0x34], ebx 	      1188	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4002be9	     0xf8edf020000	                           jle 0x4002ece	      1188	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4002bef	        0x498d4760	                   lea rax, [r15 + 0x60]	      1188	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4002bf3	      0x4889442450	             mov qword [rsp + 0x50], rax	      1188	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4002bf8	          0x4989cc	                            mov r12, rcx	       279	strbuf.h	FUNCTION_150	CALL_2
0x4002bfb	      0xbe18000000	                           mov esi, 0x18	      1192	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_7
0x4002c00	      0xbf01000000	                              mov edi, 1	      1192	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_7
0x4002c05	      0xe800000000	                          call 0x4002c0a	      1192	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_7
0x4002c0a	          0x4989c5	                            mov r13, rax	      1192	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_7
0x4002c0d	            0x85db	                           test ebx, ebx	      1193	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_5
0x4002c0f	            0x784f	                            js 0x4002c60	      1193	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_5
0x4002c11	          0x4c63f3	                         movsxd r14, ebx	      1197	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_8
0x4002c14	      0x488b442408	                mov rax, qword [rsp + 8]	      1197	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_8
0x4002c19	      0x4a8d7c3001	                lea rdi, [rax + r14 + 1]	      1197	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_8
0x4002c1e	      0xbe2f000000	                           mov esi, 0x2f	      1197	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_8
0x4002c23	      0xe800000000	                          call 0x4002c28	      1197	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_8
0x4002c28	          0x4885c0	                           test rax, rax	      1198	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	IF_6
0x4002c2b	            0x750a	                           jne 0x4002c37	      1198	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	IF_6
0x4002c2d	      0xbf00000000	                              mov edi, 0	      1199	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_9
0x4002c32	      0xe800000000	                          call 0x4002c37	      1199	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2	CALL_9
0x4002c37	        0x488d6801	                      lea rbp, [rax + 1]	      1200	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x4002c3b	          0x4889e9	                            mov rcx, rbp	      1201	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x4002c3e	      0x488b442408	                mov rax, qword [rsp + 8]	      1201	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x4002c43	          0x4829c1	                            sub rcx, rax	      1201	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x4002c46	            0x29d9	                            sub ecx, ebx	      1201	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x4002c48	        0x4a8d1430	                    lea rdx, [rax + r14]	      1201	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x4002c4c	    0x498bbf880000	            mov rdi, qword [r15 + 0x88] 	      1201	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x4002c53	          0x4c89e6	                            mov rsi, r12	      1201	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x4002c56	      0xe88ddbffff	               call sym.lookup_untracked	      1201	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x4002c5b	          0x4989c4	                            mov r12, rax	      1201	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x4002c5e	            0xeb0a	                           jmp 0x4002c6a	      1201	dir.c	FUNCTION_40	ELSE_1	WHILE_2	ELSE_2
0x4002c60	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      1194	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_5
0x4002c65	      0xbb00000000	                              mov ebx, 0	      1195	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_5
0x4002c6a	        0x498b4760	            mov rax, qword [r15 + 0x60] 	      1206	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4002c6e	        0x49894500	                    mov qword [r13], rax	      1206	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4002c72	      0x482b6c2408	                sub rbp, qword [rsp + 8]	      1207	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4002c77	        0x41896d08	                mov dword [r13 + 8], ebp	      1207	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4002c7b	        0x418b4740	            mov eax, dword [r15 + 0x40] 	      1208	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4002c7f	        0x4189450c	              mov dword [r13 + 0xc], eax	      1208	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4002c83	        0x4d896510	             mov qword [r13 + 0x10], r12	      1209	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4002c87	      0xba00000000	                              mov edx, 0	      1210	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_11
0x4002c8c	      0xbe01000000	                              mov esi, 1	      1210	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_11
0x4002c91	          0x4c89ff	                            mov rdi, r15	      1210	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_11
0x4002c94	      0xe800000000	                          call 0x4002c99	      1210	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_11
0x4002c99	      0x4889442410	             mov qword [rsp + 0x10], rax	      1210	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_11
0x4002c9e	          0x4c63f3	                         movsxd r14, ebx	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x4002ca1	        0x418b5508	                mov edx, dword [r13 + 8]	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x4002ca5	            0x29da	                            sub edx, ebx	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x4002ca7	          0x4863d2	                         movsxd rdx, edx	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x4002caa	      0x488b442408	                mov rax, qword [rsp + 8]	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x4002caf	        0x4a8d3430	                    lea rsi, [rax + r14]	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x4002cb3	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x4002cb8	      0xe800000000	                          call 0x4002cbd	      1211	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_12
0x4002cbd	        0x418b4508	                mov eax, dword [r13 + 8]	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x4002cc1	          0x4863d0	                         movsxd rdx, eax	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x4002cc4	        0x493b5778	            cmp rdx, qword [r15 + 0x78] 	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x4002cc8	            0x7419	                            je 0x4002ce3	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x4002cca	      0xb900000000	                              mov ecx, 0	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x4002ccf	      0xbabc040000	                          mov edx, 0x4bc	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x4002cd4	      0xbe00000000	                              mov esi, 0	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x4002cd9	      0xbf00000000	                              mov edi, 0	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x4002cde	      0xe800000000	                          call 0x4002ce3	      1212	dir.c	FUNCTION_40	ELSE_1	WHILE_2	CALL_13
0x4002ce3	            0x85c0	                           test eax, eax	      1215	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x4002ce5	     0xf84f4000000	                            je 0x4002ddf	      1215	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x4002ceb	    0xc74424600400	               mov dword [rsp + 0x60], 4	      1216	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x4002cf3	    0x498b87800000	            mov rax, qword [r15 + 0x80] 	      1217	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x4002cfa	      0xc64410ff00	             mov byte [rax + rdx - 1], 0	      1217	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x4002cff	    0x498baf800000	            mov rbp, qword [r15 + 0x80] 	      1221	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x4002d06	      0x4a8d443500	                    lea rax, [rbp + r14]	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x4002d0b	        0x418b4d08	                mov ecx, dword [r13 + 8]	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x4002d0f	          0x83e901	                              sub ecx, 1	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x4002d12	        0x498d7730	                   lea rsi, [r15 + 0x30]	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x4002d16	      0x4889742418	             mov qword [rsp + 0x18], rsi	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x4002d1b	      0x4c89642438	             mov qword [rsp + 0x38], r12	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x4002d20	      0x4c896c2440	             mov qword [rsp + 0x40], r13	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x4002d25	          0x4989c5	                            mov r13, rax	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x4002d28	          0x4189ce	                           mov r14d, ecx	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x4002d2b	      0x4c897c2448	             mov qword [rsp + 0x48], r15	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x4002d30	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x4002d35	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x4002d3a	          0x4989c4	                            mov r12, rax	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x4002d3d	            0x8b00	                    mov eax, dword [rax]	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002d3f	        0x89442430	             mov dword [rsp + 0x30], eax	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002d43	            0x89c3	                            mov ebx, eax	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002d45	          0x83eb01	                              sub ebx, 1	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002d48	            0x782f	                            js 0x4002d79	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002d4a	          0x4c63c3	                          movsxd r8, ebx	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002d4d	        0x49c1e005	                               shl r8, 5	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002d51	          0x4d89f9	                             mov r9, r15	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002d54	      0x4d03442408	                 add r8, qword [r12 + 8]	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002d59	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002d5e	          0x4c89ea	                            mov rdx, r13	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002d61	          0x4489f6	                           mov esi, r14d	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002d64	          0x4889ef	                            mov rdi, rbp	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002d67	      0xe8adfbffff	call sym.last_exclude_matching_from_list	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4002d6c	          0x4885c0	                           test rax, rax	      1127	dir.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4002d6f	            0x7530	                           jne 0x4002da1	      1127	dir.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4002d71	          0x83eb01	                              sub ebx, 1	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002d74	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002d77	            0x75d1	                           jne 0x4002d4a	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002d79	    0x488344241810	            add qword [rsp + 0x18], 0x10	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002d7f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4002d84	      0x4839442450	            cmp qword [rsp + 0x50], rax 	      1121	dir.c	FUNCTION_39	FOR_1
0x4002d89	            0x75aa	                           jne 0x4002d35	      1121	dir.c	FUNCTION_39	FOR_1
0x4002d8b	      0x4c8b642438	            mov r12, qword [rsp + 0x38] 	      1121	dir.c	FUNCTION_39	FOR_1
0x4002d90	      0x4c8b6c2440	            mov r13, qword [rsp + 0x40] 	      1121	dir.c	FUNCTION_39	FOR_1
0x4002d95	      0x4c8b7c2448	            mov r15, qword [rsp + 0x48] 	      1121	dir.c	FUNCTION_39	FOR_1
0x4002d9a	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      1131	dir.c	FUNCTION_39
0x4002d9f	            0xeb0f	                           jmp 0x4002db0	      1131	dir.c	FUNCTION_39
0x4002da1	      0x4c8b642438	            mov r12, qword [rsp + 0x38] 	      1131	dir.c	FUNCTION_39
0x4002da6	      0x4c8b6c2440	            mov r13, qword [rsp + 0x40] 	      1131	dir.c	FUNCTION_39
0x4002dab	      0x4c8b7c2448	            mov r15, qword [rsp + 0x48] 	      1131	dir.c	FUNCTION_39
0x4002db0	        0x49894768	             mov qword [r15 + 0x68], rax	      1218	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	CALL_14
0x4002db4	        0x49634508	            movsxd rax, dword [r13 + 8] 	      1222	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x4002db8	    0x498b97800000	            mov rdx, qword [r15 + 0x80] 	      1222	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x4002dbf	      0xc64402ff2f	         mov byte [rdx + rax - 1], 0x2f 	      1222	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7
0x4002dc4	        0x498b4768	            mov rax, qword [r15 + 0x68] 	      1223	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x4002dc8	          0x4885c0	                           test rax, rax	      1223	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x4002dcb	            0x7412	                            je 0x4002ddf	      1223	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x4002dcd	        0xf6402410	           test byte [rax + 0x24], 0x10 	      1223	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x4002dd1	     0xf847e010000	                            je 0x4002f55	      1223	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x4002dd7	    0x49c747680000	               mov qword [r15 + 0x68], 0	      1225	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_8
0x4002ddf	    0x48c78424a400	               mov qword [rsp + 0xa4], 0	        90	string3.h	FUNCTION_110	CALL_6
0x4002deb	    0x48c78424ac00	               mov qword [rsp + 0xac], 0	        90	string3.h	FUNCTION_110	CALL_6
0x4002df7	    0xc78424b40000	               mov dword [rsp + 0xb4], 0	        90	string3.h	FUNCTION_110	CALL_6
0x4002e02	    0xc78424b80000	               mov dword [rsp + 0xb8], 0	      1234	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4002e0d	      0x49837f2800	               cmp qword [r15 + 0x28], 0	      1235	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4002e12	            0x744c	                            je 0x4002e60	      1235	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4002e14	          0x4d85e4	                           test r12, r12	      1235	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4002e17	     0xf84b9010000	                            je 0x4002fd6	      1235	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4002e1d	    0x41f644244402	               test byte [r12 + 0x44], 2	      1241	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4002e23	     0xf8435010000	                            je 0x4002f5e	      1241	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4002e29	      0x498d7c2445	                   lea rdi, [r12 + 0x45]	       975	cache.h	FUNCTION_126	CALL_1
0x4002e2e	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_126	CALL_1
0x4002e33	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_126	CALL_1
0x4002e38	      0xe800000000	                          call 0x4002e3d	       975	cache.h	FUNCTION_126	CALL_1
0x4002e3d	            0x85c0	                           test eax, eax	      1241	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4002e3f	     0xf8519010000	                           jne 0x4002f5e	      1241	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4002e45	            0xeb1e	                           jmp 0x4002e65	      1241	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4002e47	        0x418b5508	                mov edx, dword [r13 + 8]	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x4002e4b	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x4002e50	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x4002e55	          0x4889c6	                            mov rsi, rax	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x4002e58	          0x4889c7	                            mov rdi, rax	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x4002e5b	      0xe80bf4ffff	                   call sym.add_excludes	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x4002e60	          0x4d85e4	                           test r12, r12	      1278	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11
0x4002e63	            0x7457	                            je 0x4002ebc	      1278	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11
0x4002e65	      0x498d742445	                   lea rsi, [r12 + 0x45]	       975	cache.h	FUNCTION_126	CALL_1
0x4002e6a	    0x488dbc24a400	                   lea rdi, [rsp + 0xa4]	       975	cache.h	FUNCTION_126	CALL_1
0x4002e72	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_126	CALL_1
0x4002e77	      0xe800000000	                          call 0x4002e7c	       975	cache.h	FUNCTION_126	CALL_1
0x4002e7c	            0x85c0	                           test eax, eax	      1278	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11
0x4002e7e	            0x743c	                            je 0x4002ebc	      1278	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11
0x4002e80	    0x498b87880000	            mov rax, qword [r15 + 0x88] 	      1280	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_11	CALL_22
0x4002e87	    0x8380ac000000	               add dword [rax + 0xac], 1	       767	dir.c	FUNCTION_26
0x4002e8e	          0x4c89e7	                            mov rdi, r12	       768	dir.c	FUNCTION_26	CALL_1
0x4002e91	      0xe8aad1ffff	        call sym.do_invalidate_gitignore	       768	dir.c	FUNCTION_26	CALL_1
0x4002e96	    0x488b8424a400	            mov rax, qword [rsp + 0xa4] 	        53	string3.h	FUNCTION_107	CALL_3
0x4002e9e	      0x4989442445	             mov qword [r12 + 0x45], rax	        53	string3.h	FUNCTION_107	CALL_3
0x4002ea3	    0x488b8424ac00	            mov rax, qword [rsp + 0xac] 	        53	string3.h	FUNCTION_107	CALL_3
0x4002eab	      0x498944244d	             mov qword [r12 + 0x4d], rax	        53	string3.h	FUNCTION_107	CALL_3
0x4002eb0	    0x8b8424b40000	            mov eax, dword [rsp + 0xb4] 	        53	string3.h	FUNCTION_107	CALL_3
0x4002eb7	      0x4189442455	             mov dword [r12 + 0x55], eax	        53	string3.h	FUNCTION_107	CALL_3
0x4002ebc	        0x4d896f60	             mov qword [r15 + 0x60], r13	      1283	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4002ec0	        0x418b5d08	                mov ebx, dword [r13 + 8]	      1284	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4002ec4	        0x395c2434	            cmp dword [rsp + 0x34], ebx 	      1188	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4002ec8	     0xf8f2dfdffff	                            jg 0x4002bfb	      1188	dir.c	FUNCTION_40	ELSE_1	WHILE_2
0x4002ece	      0x4863542434	         movsxd rdx, dword [rsp + 0x34] 	      1286	dir.c	FUNCTION_40	CALL_24
0x4002ed3	        0x498b4770	            mov rax, qword [r15 + 0x70] 	       162	strbuf.h	FUNCTION_148	IF_1
0x4002ed7	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_148	IF_1
0x4002edb	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_148	IF_1
0x4002edf	          0x4839c2	                            cmp rdx, rax	       162	strbuf.h	FUNCTION_148	IF_1
0x4002ee2	            0x760f	                           jbe 0x4002ef3	       162	strbuf.h	FUNCTION_148	IF_1
0x4002ee4	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_148	CALL_1
0x4002ee9	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_148	CALL_1
0x4002eee	      0xe800000000	                          call 0x4002ef3	       163	strbuf.h	FUNCTION_148	CALL_1
0x4002ef3	        0x49895778	             mov qword [r15 + 0x78], rdx	       164	strbuf.h	FUNCTION_148
0x4002ef7	    0x498b87800000	            mov rax, qword [r15 + 0x80] 	       165	strbuf.h	FUNCTION_148	IF_2
0x4002efe	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_148	IF_2
0x4002f04	            0x7409	                            je 0x4002f0f	       165	strbuf.h	FUNCTION_148	IF_2
0x4002f06	        0xc6041000	                 mov byte [rax + rdx], 0	       166	strbuf.h	FUNCTION_148	IF_2
0x4002f0a	      0xe93d010000	                           jmp 0x400304c	       166	strbuf.h	FUNCTION_148	IF_2
0x4002f0f	    0x803d00000000	                cmp byte [0x04002f16], 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x4002f16	     0xf8430010000	                            je 0x400304c	       168	strbuf.h	FUNCTION_148	CALL_2
0x4002f1c	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x4002f21	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_148	CALL_2
0x4002f26	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x4002f2b	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x4002f30	      0xe800000000	                          call 0x4002f35	       168	strbuf.h	FUNCTION_148	CALL_2
0x4002f35	        0x498d4770	                   lea rax, [r15 + 0x70]	      1182	dir.c	FUNCTION_40	CALL_6
0x4002f39	      0x4889442420	             mov qword [rsp + 0x20], rax	      1182	dir.c	FUNCTION_40	CALL_6
0x4002f3e	        0x498b4770	            mov rax, qword [r15 + 0x70] 	       162	strbuf.h	FUNCTION_148	IF_1
0x4002f42	      0xbbffffffff	                     mov ebx, 0xffffffff	      1181	dir.c	FUNCTION_40
0x4002f47	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_148	IF_1
0x4002f4a	     0xf842efcffff	                            je 0x4002b7e	       162	strbuf.h	FUNCTION_148	IF_1
0x4002f50	      0xe904fcffff	                           jmp 0x4002b59	       162	strbuf.h	FUNCTION_148	IF_1
0x4002f55	        0x4d896f60	             mov qword [r15 + 0x60], r13	      1227	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_9
0x4002f59	      0xe9ee000000	                           jmp 0x400304c	      1227	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_7	IF_9
0x4002f5e	    0x48c744246000	               mov qword [rsp + 0x60], 0	      1257	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4002f67	    0x48c744246800	               mov qword [rsp + 0x68], 0	      1257	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4002f70	    0x48c744247000	               mov qword [rsp + 0x70], 0	      1257	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4002f79	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1258	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_17
0x4002f7e	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      1258	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_17
0x4002f83	      0xe800000000	                          call 0x4002f88	      1258	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_17
0x4002f88	        0x498b7728	            mov rsi, qword [r15 + 0x28] 	      1259	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_18
0x4002f8c	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_150	CALL_2
0x4002f91	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_150	CALL_2
0x4002f98	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_150	CALL_2
0x4002f9b	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_150	CALL_2
0x4002f9d	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_150	CALL_2
0x4002fa0	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_150	CALL_2
0x4002fa3	        0x488d50ff	                      lea rdx, [rax - 1]	       279	strbuf.h	FUNCTION_150	CALL_2
0x4002fa7	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       279	strbuf.h	FUNCTION_150	CALL_2
0x4002fac	      0xe800000000	                          call 0x4002fb1	       279	strbuf.h	FUNCTION_150	CALL_2
0x4002fb1	      0xbe00000000	                              mov esi, 0	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x4002fb6	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x4002fbb	      0xe800000000	                          call 0x4002fc0	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x4002fc0	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x4002fc5	        0x48894110	             mov qword [rcx + 0x10], rax	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x4002fc9	    0x4c8d8c248000	                    lea r9, [rsp + 0x80]	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x4002fd1	      0xe971feffff	                           jmp 0x4002e47	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x4002fd6	    0x48c744246000	               mov qword [rsp + 0x60], 0	      1257	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4002fdf	    0x48c744246800	               mov qword [rsp + 0x68], 0	      1257	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4002fe8	    0x48c744247000	               mov qword [rsp + 0x70], 0	      1257	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10
0x4002ff1	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1258	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_17
0x4002ff6	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      1258	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_17
0x4002ffb	      0xe800000000	                          call 0x4003000	      1258	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_17
0x4003000	        0x498b7728	            mov rsi, qword [r15 + 0x28] 	      1259	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_18
0x4003004	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_150	CALL_2
0x4003009	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_150	CALL_2
0x4003010	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_150	CALL_2
0x4003013	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_150	CALL_2
0x4003015	          0x4889c8	                            mov rax, rcx	       279	strbuf.h	FUNCTION_150	CALL_2
0x4003018	          0x48f7d0	                                 not rax	       279	strbuf.h	FUNCTION_150	CALL_2
0x400301b	        0x488d50ff	                      lea rdx, [rax - 1]	       279	strbuf.h	FUNCTION_150	CALL_2
0x400301f	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	       279	strbuf.h	FUNCTION_150	CALL_2
0x4003024	      0xe800000000	                          call 0x4003029	       279	strbuf.h	FUNCTION_150	CALL_2
0x4003029	      0xbe00000000	                              mov esi, 0	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x400302e	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x4003033	      0xe800000000	                          call 0x4003038	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x4003038	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x400303d	        0x48894110	             mov qword [rcx + 0x10], rax	      1260	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_19
0x4003041	    0x41b900000000	                              mov r9d, 0	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x4003047	      0xe9fbfdffff	                           jmp 0x4002e47	      1261	dir.c	FUNCTION_40	ELSE_1	WHILE_2	IF_10	CALL_20
0x400304c	    0x488b8424c800	            mov rax, qword [rsp + 0xc8] 	      1287	dir.c	FUNCTION_40
0x4003054	    0x644833042528	                xor rax, qword fs:[0x28]	      1287	dir.c	FUNCTION_40
0x400305d	            0x7405	                            je 0x4003064	      1287	dir.c	FUNCTION_40
0x400305f	      0xe800000000	                          call 0x4003064	      1287	dir.c	FUNCTION_40
0x4003064	    0x4881c4d80000	                           add rsp, 0xd8	      1287	dir.c	FUNCTION_40
0x400306b	              0x5b	                                 pop rbx	      1287	dir.c	FUNCTION_40
0x400306c	              0x5d	                                 pop rbp	      1287	dir.c	FUNCTION_40
0x400306d	            0x415c	                                 pop r12	      1287	dir.c	FUNCTION_40
0x400306f	            0x415d	                                 pop r13	      1287	dir.c	FUNCTION_40
0x4003071	            0x415e	                                 pop r14	      1287	dir.c	FUNCTION_40
0x4003073	            0x415f	                                 pop r15	      1287	dir.c	FUNCTION_40
0x4003075	              0xc3	                                     ret	      1287	dir.c	FUNCTION_40
write_one_dir	ELSE,0:SWITCH,0:IF,6:functions,0:CALL,16:FOR,3:WHILE,0:DO,0	136
0x4000beb	            0x4156	                                push r14	      2603	dir.c	FUNCTION_84
0x4000bed	            0x4155	                                push r13	      2603	dir.c	FUNCTION_84
0x4000bef	            0x4154	                                push r12	      2603	dir.c	FUNCTION_84
0x4000bf1	              0x55	                                push rbp	      2603	dir.c	FUNCTION_84
0x4000bf2	              0x53	                                push rbx	      2603	dir.c	FUNCTION_84
0x4000bf3	        0x4883ec50	                           sub rsp, 0x50	      2603	dir.c	FUNCTION_84
0x4000bf7	          0x4889fb	                            mov rbx, rdi	      2603	dir.c	FUNCTION_84
0x4000bfa	          0x4989f6	                            mov r14, rsi	      2603	dir.c	FUNCTION_84
0x4000bfd	    0x64488b042528	                mov rax, qword fs:[0x28]	      2603	dir.c	FUNCTION_84
0x4000c06	      0x4889442448	             mov qword [rsp + 0x48], rax	      2603	dir.c	FUNCTION_84
0x4000c0b	            0x31c0	                            xor eax, eax	      2603	dir.c	FUNCTION_84
0x4000c0d	        0x4c8d6620	                   lea r12, [rsi + 0x20]	      2605	dir.c	FUNCTION_84
0x4000c11	            0x8b2e	                    mov ebp, dword [rsi]	      2608	dir.c	FUNCTION_84
0x4000c13	          0x8d4501	                      lea eax, [rbp + 1]	      2608	dir.c	FUNCTION_84
0x4000c16	            0x8906	                    mov dword [rsi], eax	      2608	dir.c	FUNCTION_84
0x4000c18	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	      2614	dir.c	FUNCTION_84	IF_1
0x4000c1c	            0xa802	                              test al, 2	      2614	dir.c	FUNCTION_84	IF_1
0x4000c1e	     0xf857b010000	                           jne 0x4000d9f	      2614	dir.c	FUNCTION_84	IF_1
0x4000c24	    0xc74740000000	               mov dword [rdi + 0x40], 0	      2615	dir.c	FUNCTION_84	IF_1
0x4000c2b	        0x806744fe	             and byte [rdi + 0x44], 0xfe	      2616	dir.c	FUNCTION_84	IF_1
0x4000c2f	            0xeb0c	                           jmp 0x4000c3d	      2616	dir.c	FUNCTION_84	IF_1
0x4000c31	          0x4863f5	                         movsxd rsi, ebp	      2620	dir.c	FUNCTION_84	CALL_1
0x4000c34	        0x498b7e08	                mov rdi, qword [r14 + 8]	      2620	dir.c	FUNCTION_84	CALL_1
0x4000c38	      0xe800000000	                          call 0x4000c3d	      2620	dir.c	FUNCTION_84	CALL_1
0x4000c3d	        0xf6434402	               test byte [rbx + 0x44], 2	      2621	dir.c	FUNCTION_84	IF_3
0x4000c41	            0x7429	                            je 0x4000c6c	      2621	dir.c	FUNCTION_84	IF_3
0x4000c43	          0x4863f5	                         movsxd rsi, ebp	      2622	dir.c	FUNCTION_84	IF_3	CALL_2
0x4000c46	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	      2622	dir.c	FUNCTION_84	IF_3	CALL_2
0x4000c4a	      0xe800000000	                          call 0x4000c4f	      2622	dir.c	FUNCTION_84	IF_3	CALL_2
0x4000c4f	        0x488d7310	                   lea rsi, [rbx + 0x10]	      2623	dir.c	FUNCTION_84	IF_3	CALL_3
0x4000c53	          0x4889e7	                            mov rdi, rsp	      2623	dir.c	FUNCTION_84	IF_3	CALL_3
0x4000c56	      0xe87bf6ffff	              call sym.stat_data_to_disk	      2623	dir.c	FUNCTION_84	IF_3	CALL_3
0x4000c5b	        0x498d7e38	                   lea rdi, [r14 + 0x38]	      2624	dir.c	FUNCTION_84	IF_3	CALL_4
0x4000c5f	      0xba24000000	                           mov edx, 0x24	      2624	dir.c	FUNCTION_84	IF_3	CALL_4
0x4000c64	          0x4889e6	                            mov rsi, rsp	      2624	dir.c	FUNCTION_84	IF_3	CALL_4
0x4000c67	      0xe800000000	                          call 0x4000c6c	      2624	dir.c	FUNCTION_84	IF_3	CALL_4
0x4000c6c	        0x4c8d6b45	                   lea r13, [rbx + 0x45]	      2626	dir.c	FUNCTION_84	IF_4	CALL_5
0x4000c70	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_126	CALL_1
0x4000c75	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_126	CALL_1
0x4000c7a	          0x4c89ef	                            mov rdi, r13	       975	cache.h	FUNCTION_126	CALL_1
0x4000c7d	      0xe800000000	                          call 0x4000c82	       975	cache.h	FUNCTION_126	CALL_1
0x4000c82	            0x85c0	                           test eax, eax	      2626	dir.c	FUNCTION_84	IF_4	CALL_5
0x4000c84	            0x741d	                            je 0x4000ca3	      2626	dir.c	FUNCTION_84	IF_4	CALL_5
0x4000c86	          0x4863f5	                         movsxd rsi, ebp	      2627	dir.c	FUNCTION_84	IF_4	CALL_6
0x4000c89	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	      2627	dir.c	FUNCTION_84	IF_4	CALL_6
0x4000c8d	      0xe800000000	                          call 0x4000c92	      2627	dir.c	FUNCTION_84	IF_4	CALL_6
0x4000c92	        0x498d7e50	                   lea rdi, [r14 + 0x50]	      2628	dir.c	FUNCTION_84	IF_4	CALL_7
0x4000c96	      0xba14000000	                           mov edx, 0x14	      2628	dir.c	FUNCTION_84	IF_4	CALL_7
0x4000c9b	          0x4c89ee	                            mov rsi, r13	      2628	dir.c	FUNCTION_84	IF_4	CALL_7
0x4000c9e	      0xe800000000	                          call 0x4000ca3	      2628	dir.c	FUNCTION_84	IF_4	CALL_7
0x4000ca3	          0x8b7b40	            mov edi, dword [rbx + 0x40] 	      2631	dir.c	FUNCTION_84	CALL_8
0x4000ca6	      0x488d742430	                   lea rsi, [rsp + 0x30]	      2631	dir.c	FUNCTION_84	CALL_8
0x4000cab	      0xe800000000	                          call 0x4000cb0	      2631	dir.c	FUNCTION_84	CALL_8
0x4000cb0	            0x89c2	                            mov edx, eax	      2632	dir.c	FUNCTION_84	CALL_9
0x4000cb2	      0x488d742430	                   lea rsi, [rsp + 0x30]	      2632	dir.c	FUNCTION_84	CALL_9
0x4000cb7	          0x4c89e7	                            mov rdi, r12	      2632	dir.c	FUNCTION_84	CALL_9
0x4000cba	      0xe800000000	                          call 0x4000cbf	      2632	dir.c	FUNCTION_84	CALL_9
0x4000cbf	          0x8b4b38	            mov ecx, dword [rbx + 0x38] 	      2635	dir.c	FUNCTION_84	FOR_1
0x4000cc2	            0x85c9	                           test ecx, ecx	      2635	dir.c	FUNCTION_84	FOR_1
0x4000cc4	            0x7429	                            je 0x4000cef	      2635	dir.c	FUNCTION_84	FOR_1
0x4000cc6	          0x488b33	                    mov rsi, qword [rbx]	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x4000cc9	      0xba00000000	                              mov edx, 0	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x4000cce	      0xbf00000000	                              mov edi, 0	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x4000cd3	          0x4863c2	                         movsxd rax, edx	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x4000cd6	        0x488b04c6	            mov rax, qword [rsi + rax*8]	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x4000cda	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x4000cde	          0x83e004	                              and eax, 4	      2636	dir.c	FUNCTION_84	FOR_1	IF_5
0x4000ce1	            0x3c01	                               cmp al, 1	      2637	dir.c	FUNCTION_84	FOR_1	IF_5
0x4000ce3	          0x83dfff	             sbb edi, 0xffffffffffffffff	      2637	dir.c	FUNCTION_84	FOR_1	IF_5
0x4000ce6	          0x83c201	                              add edx, 1	      2635	dir.c	FUNCTION_84	FOR_1
0x4000ce9	            0x39d1	                            cmp ecx, edx	      2635	dir.c	FUNCTION_84	FOR_1
0x4000ceb	            0x75e6	                           jne 0x4000cd3	      2635	dir.c	FUNCTION_84	FOR_1
0x4000ced	            0xeb05	                           jmp 0x4000cf4	      2635	dir.c	FUNCTION_84	FOR_1
0x4000cef	      0xbf00000000	                              mov edi, 0	      2635	dir.c	FUNCTION_84	FOR_1
0x4000cf4	            0x89ff	                            mov edi, edi	      2638	dir.c	FUNCTION_84	CALL_10
0x4000cf6	      0x488d742430	                   lea rsi, [rsp + 0x30]	      2638	dir.c	FUNCTION_84	CALL_10
0x4000cfb	      0xe800000000	                          call 0x4000d00	      2638	dir.c	FUNCTION_84	CALL_10
0x4000d00	            0x89c2	                            mov edx, eax	      2639	dir.c	FUNCTION_84	CALL_11
0x4000d02	      0x488d742430	                   lea rsi, [rsp + 0x30]	      2639	dir.c	FUNCTION_84	CALL_11
0x4000d07	          0x4c89e7	                            mov rdi, r12	      2639	dir.c	FUNCTION_84	CALL_11
0x4000d0a	      0xe800000000	                          call 0x4000d0f	      2639	dir.c	FUNCTION_84	CALL_11
0x4000d0f	        0x488d7359	                   lea rsi, [rbx + 0x59]	      2641	dir.c	FUNCTION_84	CALL_13
0x4000d13	      0xb800000000	                              mov eax, 0	      2641	dir.c	FUNCTION_84	CALL_13
0x4000d18	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2641	dir.c	FUNCTION_84	CALL_13
0x4000d1f	          0x4889f7	                            mov rdi, rsi	      2641	dir.c	FUNCTION_84	CALL_13
0x4000d22	            0xf2ae	              repne scasb al, byte [rdi]	      2641	dir.c	FUNCTION_84	CALL_13
0x4000d24	          0x48f7d1	                                 not rcx	      2641	dir.c	FUNCTION_84	CALL_13
0x4000d27	          0x4889ca	                            mov rdx, rcx	      2641	dir.c	FUNCTION_84	CALL_13
0x4000d2a	          0x4c89e7	                            mov rdi, r12	      2641	dir.c	FUNCTION_84	CALL_13
0x4000d2d	      0xe800000000	                          call 0x4000d32	      2641	dir.c	FUNCTION_84	CALL_13
0x4000d32	        0x837b4000	               cmp dword [rbx + 0x40], 0	      2643	dir.c	FUNCTION_84	FOR_2
0x4000d36	            0x743a	                            je 0x4000d72	      2643	dir.c	FUNCTION_84	FOR_2
0x4000d38	      0xbd00000000	                              mov ebp, 0	      2643	dir.c	FUNCTION_84	FOR_2
0x4000d3d	    0x49c7c5ffffff	             mov r13, 0xffffffffffffffff	      2645	dir.c	FUNCTION_84	CALL_15
0x4000d44	          0x4863d5	                         movsxd rdx, ebp	      2645	dir.c	FUNCTION_84	CALL_15
0x4000d47	        0x488b4308	                mov rax, qword [rbx + 8]	      2645	dir.c	FUNCTION_84	CALL_15
0x4000d4b	        0x488b34d0	            mov rsi, qword [rax + rdx*8]	      2645	dir.c	FUNCTION_84	CALL_15
0x4000d4f	      0xb800000000	                              mov eax, 0	      2645	dir.c	FUNCTION_84	CALL_15
0x4000d54	          0x4c89e9	                            mov rcx, r13	      2645	dir.c	FUNCTION_84	CALL_15
0x4000d57	          0x4889f7	                            mov rdi, rsi	      2645	dir.c	FUNCTION_84	CALL_15
0x4000d5a	            0xf2ae	              repne scasb al, byte [rdi]	      2645	dir.c	FUNCTION_84	CALL_15
0x4000d5c	          0x48f7d1	                                 not rcx	      2645	dir.c	FUNCTION_84	CALL_15
0x4000d5f	          0x4889ca	                            mov rdx, rcx	      2645	dir.c	FUNCTION_84	CALL_15
0x4000d62	          0x4c89e7	                            mov rdi, r12	      2644	dir.c	FUNCTION_84	FOR_2	CALL_14
0x4000d65	      0xe800000000	                          call 0x4000d6a	      2644	dir.c	FUNCTION_84	FOR_2	CALL_14
0x4000d6a	          0x83c501	                              add ebp, 1	      2643	dir.c	FUNCTION_84	FOR_2
0x4000d6d	          0x396b40	            cmp dword [rbx + 0x40], ebp 	      2643	dir.c	FUNCTION_84	FOR_2
0x4000d70	            0x77d2	                            ja 0x4000d44	      2643	dir.c	FUNCTION_84	FOR_2
0x4000d72	        0x837b3800	               cmp dword [rbx + 0x38], 0	      2647	dir.c	FUNCTION_84	FOR_3
0x4000d76	            0x7434	                            je 0x4000dac	      2647	dir.c	FUNCTION_84	FOR_3
0x4000d78	      0xbd00000000	                              mov ebp, 0	      2647	dir.c	FUNCTION_84	FOR_3
0x4000d7d	          0x4863c5	                         movsxd rax, ebp	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x4000d80	          0x488b13	                    mov rdx, qword [rbx]	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x4000d83	        0x488b3cc2	            mov rdi, qword [rdx + rax*8]	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x4000d87	        0xf6474404	               test byte [rdi + 0x44], 4	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x4000d8b	            0x7408	                            je 0x4000d95	      2648	dir.c	FUNCTION_84	FOR_3	IF_6
0x4000d8d	          0x4c89f6	                            mov rsi, r14	      2649	dir.c	FUNCTION_84	FOR_3	IF_6
0x4000d90	      0xe856feffff	                  call sym.write_one_dir	      2649	dir.c	FUNCTION_84	FOR_3	IF_6
0x4000d95	          0x83c501	                              add ebp, 1	      2647	dir.c	FUNCTION_84	FOR_3
0x4000d98	          0x396b38	            cmp dword [rbx + 0x38], ebp 	      2647	dir.c	FUNCTION_84	FOR_3
0x4000d9b	            0x77e0	                            ja 0x4000d7d	      2647	dir.c	FUNCTION_84	FOR_3
0x4000d9d	            0xeb0d	                           jmp 0x4000dac	      2647	dir.c	FUNCTION_84	FOR_3
0x4000d9f	            0xa801	                              test al, 1	      2619	dir.c	FUNCTION_84	IF_2
0x4000da1	     0xf849cfeffff	                            je 0x4000c43	      2619	dir.c	FUNCTION_84	IF_2
0x4000da7	      0xe985feffff	                           jmp 0x4000c31	      2619	dir.c	FUNCTION_84	IF_2
0x4000dac	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2650	dir.c	FUNCTION_84
0x4000db1	    0x644833042528	                xor rax, qword fs:[0x28]	      2650	dir.c	FUNCTION_84
0x4000dba	            0x7405	                            je 0x4000dc1	      2650	dir.c	FUNCTION_84
0x4000dbc	      0xe800000000	                          call 0x4000dc1	      2650	dir.c	FUNCTION_84
0x4000dc1	        0x4883c450	                           add rsp, 0x50	      2650	dir.c	FUNCTION_84
0x4000dc5	              0x5b	                                 pop rbx	      2650	dir.c	FUNCTION_84
0x4000dc6	              0x5d	                                 pop rbp	      2650	dir.c	FUNCTION_84
0x4000dc7	            0x415c	                                 pop r12	      2650	dir.c	FUNCTION_84
0x4000dc9	            0x415d	                                 pop r13	      2650	dir.c	FUNCTION_84
0x4000dcb	            0x415e	                                 pop r14	      2650	dir.c	FUNCTION_84
0x4000dcd	              0xc3	                                     ret	      2650	dir.c	FUNCTION_84
fspathcmp	ELSE,0:SWITCH,0:IF,0:functions,0:CALL,2:FOR,0:WHILE,0:DO,0	8
0x4001620	        0x4883ec08	                              sub rsp, 8	        68	dir.c	FUNCTION_2
0x4001624	    0x833d00000000	               cmp dword [0x0400162b], 0	        69	dir.c	FUNCTION_2	CALL_2
0x400162b	            0x7407	                            je 0x4001634	        69	dir.c	FUNCTION_2	CALL_2
0x400162d	      0xe800000000	                          call 0x4001632	        69	dir.c	FUNCTION_2	CALL_2
0x4001632	            0xeb05	                           jmp 0x4001639	        69	dir.c	FUNCTION_2	CALL_2
0x4001634	      0xe800000000	                          call 0x4001639	        69	dir.c	FUNCTION_2	CALL_2
0x4001639	        0x4883c408	                              add rsp, 8	        70	dir.c	FUNCTION_2
0x400163d	              0xc3	                                     ret	        70	dir.c	FUNCTION_2
connect_work_tree_and_git_dir	ELSE,0:SWITCH,0:IF,3:functions,0:CALL,20:FOR,0:WHILE,0:DO,0	220
0x4005211	            0x4157	                                push r15	      3065	dir.c	FUNCTION_101
0x4005213	            0x4156	                                push r14	      3065	dir.c	FUNCTION_101
0x4005215	            0x4155	                                push r13	      3065	dir.c	FUNCTION_101
0x4005217	            0x4154	                                push r12	      3065	dir.c	FUNCTION_101
0x4005219	              0x55	                                push rbp	      3065	dir.c	FUNCTION_101
0x400521a	              0x53	                                push rbx	      3065	dir.c	FUNCTION_101
0x400521b	    0x4881ec280100	                          sub rsp, 0x128	      3065	dir.c	FUNCTION_101
0x4005222	          0x4889fb	                            mov rbx, rdi	      3065	dir.c	FUNCTION_101
0x4005225	          0x4889f5	                            mov rbp, rsi	      3065	dir.c	FUNCTION_101
0x4005228	          0x4189d4	                           mov r12d, edx	      3065	dir.c	FUNCTION_101
0x400522b	    0x64488b042528	                mov rax, qword fs:[0x28]	      3065	dir.c	FUNCTION_101
0x4005234	    0x488984241801	            mov qword [rsp + 0x118], rax	      3065	dir.c	FUNCTION_101
0x400523c	            0x31c0	                            xor eax, eax	      3065	dir.c	FUNCTION_101
0x400523e	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3066	dir.c	FUNCTION_101
0x4005247	    0x48c744241800	               mov qword [rsp + 0x18], 0	      3066	dir.c	FUNCTION_101
0x4005250	    0x48c744242000	               mov qword [rsp + 0x20], 0	      3066	dir.c	FUNCTION_101
0x4005259	    0x48c744243000	               mov qword [rsp + 0x30], 0	      3067	dir.c	FUNCTION_101
0x4005262	    0x48c744243800	               mov qword [rsp + 0x38], 0	      3067	dir.c	FUNCTION_101
0x400526b	    0x48c744244000	               mov qword [rsp + 0x40], 0	      3067	dir.c	FUNCTION_101
0x4005274	    0x48c744245000	               mov qword [rsp + 0x50], 0	      3068	dir.c	FUNCTION_101
0x400527d	    0x48c744245800	               mov qword [rsp + 0x58], 0	      3068	dir.c	FUNCTION_101
0x4005286	    0x48c744246000	               mov qword [rsp + 0x60], 0	      3068	dir.c	FUNCTION_101
0x400528f	          0x4889fa	                            mov rdx, rdi	      3072	dir.c	FUNCTION_101	CALL_1
0x4005292	      0xbe00000000	                              mov esi, 0	      3072	dir.c	FUNCTION_101	CALL_1
0x4005297	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3072	dir.c	FUNCTION_101	CALL_1
0x400529c	      0xe800000000	                          call 0x40052a1	      3072	dir.c	FUNCTION_101	CALL_1
0x40052a1	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      3073	dir.c	FUNCTION_101	IF_1	CALL_2
0x40052a6	      0xe800000000	                          call 0x40052ab	      3073	dir.c	FUNCTION_101	IF_1	CALL_2
0x40052ab	            0x85c0	                           test eax, eax	      3073	dir.c	FUNCTION_101	IF_1	CALL_2
0x40052ad	            0x7429	                            je 0x40052d8	      3073	dir.c	FUNCTION_101	IF_1	CALL_2
0x40052af	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      3074	dir.c	FUNCTION_101	CALL_4
0x40052b4	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_105
0x40052b9	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_105
0x40052be	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_105
0x40052c3	      0xe800000000	                          call 0x40052c8	        54	gettext.h	FUNCTION_105
0x40052c8	          0x4889de	                            mov rsi, rbx	      3074	dir.c	FUNCTION_101	CALL_4
0x40052cb	          0x4889c7	                            mov rdi, rax	      3074	dir.c	FUNCTION_101	CALL_4
0x40052ce	      0xb800000000	                              mov eax, 0	      3074	dir.c	FUNCTION_101	CALL_4
0x40052d3	      0xe800000000	                          call 0x40052d8	      3074	dir.c	FUNCTION_101	CALL_4
0x40052d8	          0x4889ea	                            mov rdx, rbp	      3077	dir.c	FUNCTION_101	CALL_5
0x40052db	      0xbe00000000	                              mov esi, 0	      3077	dir.c	FUNCTION_101	CALL_5
0x40052e0	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      3077	dir.c	FUNCTION_101	CALL_5
0x40052e5	      0xb800000000	                              mov eax, 0	      3077	dir.c	FUNCTION_101	CALL_5
0x40052ea	      0xe800000000	                          call 0x40052ef	      3077	dir.c	FUNCTION_101	CALL_5
0x40052ef	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      3078	dir.c	FUNCTION_101	IF_2	CALL_6
0x40052f4	      0xe800000000	                          call 0x40052f9	      3078	dir.c	FUNCTION_101	IF_2	CALL_6
0x40052f9	            0x85c0	                           test eax, eax	      3078	dir.c	FUNCTION_101	IF_2	CALL_6
0x40052fb	            0x7429	                            je 0x4005326	      3078	dir.c	FUNCTION_101	IF_2	CALL_6
0x40052fd	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	      3079	dir.c	FUNCTION_101	CALL_8
0x4005302	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_105
0x4005307	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_105
0x400530c	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_105
0x4005311	      0xe800000000	                          call 0x4005316	        54	gettext.h	FUNCTION_105
0x4005316	          0x4889de	                            mov rsi, rbx	      3079	dir.c	FUNCTION_101	CALL_8
0x4005319	          0x4889c7	                            mov rdi, rax	      3079	dir.c	FUNCTION_101	CALL_8
0x400531c	      0xb800000000	                              mov eax, 0	      3079	dir.c	FUNCTION_101	CALL_8
0x4005321	      0xe800000000	                          call 0x4005326	      3079	dir.c	FUNCTION_101	CALL_8
0x4005326	      0xbe01000000	                              mov esi, 1	      3081	dir.c	FUNCTION_101	CALL_9
0x400532b	          0x4889ef	                            mov rdi, rbp	      3081	dir.c	FUNCTION_101	CALL_9
0x400532e	      0xe800000000	                          call 0x4005333	      3081	dir.c	FUNCTION_101	CALL_9
0x4005333	          0x4989c7	                            mov r15, rax	      3081	dir.c	FUNCTION_101	CALL_9
0x4005336	        0x48890424	                    mov qword [rsp], rax	      3081	dir.c	FUNCTION_101	CALL_9
0x400533a	      0xbe01000000	                              mov esi, 1	      3082	dir.c	FUNCTION_101	CALL_10
0x400533f	          0x4889df	                            mov rdi, rbx	      3082	dir.c	FUNCTION_101	CALL_10
0x4005342	      0xe800000000	                          call 0x4005347	      3082	dir.c	FUNCTION_101	CALL_10
0x4005347	          0x4989c6	                            mov r14, rax	      3082	dir.c	FUNCTION_101	CALL_10
0x400534a	      0x4889442408	                mov qword [rsp + 8], rax	      3082	dir.c	FUNCTION_101	CALL_10
0x400534f	      0x488d542450	                   lea rdx, [rsp + 0x50]	      3085	dir.c	FUNCTION_101	CALL_11
0x4005354	          0x4889c6	                            mov rsi, rax	      3085	dir.c	FUNCTION_101	CALL_11
0x4005357	          0x4c89ff	                            mov rdi, r15	      3085	dir.c	FUNCTION_101	CALL_11
0x400535a	      0xe800000000	                          call 0x400535f	      3085	dir.c	FUNCTION_101	CALL_11
0x400535f	          0x4889c2	                            mov rdx, rax	      3085	dir.c	FUNCTION_101	CALL_11
0x4005362	      0xbe00000000	                              mov esi, 0	      3085	dir.c	FUNCTION_101	CALL_11
0x4005367	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      3085	dir.c	FUNCTION_101	CALL_11
0x400536c	      0xb800000000	                              mov eax, 0	      3085	dir.c	FUNCTION_101	CALL_11
0x4005371	      0xe800000000	                          call 0x4005376	      3085	dir.c	FUNCTION_101	CALL_11
0x4005376	      0x488d542450	                   lea rdx, [rsp + 0x50]	      3088	dir.c	FUNCTION_101	CALL_13
0x400537b	          0x4c89fe	                            mov rsi, r15	      3088	dir.c	FUNCTION_101	CALL_13
0x400537e	          0x4c89f7	                            mov rdi, r14	      3088	dir.c	FUNCTION_101	CALL_13
0x4005381	      0xe800000000	                          call 0x4005386	      3088	dir.c	FUNCTION_101	CALL_13
0x4005386	          0x4889c2	                            mov rdx, rax	      3088	dir.c	FUNCTION_101	CALL_13
0x4005389	      0xbe00000000	                              mov esi, 0	      3088	dir.c	FUNCTION_101	CALL_13
0x400538e	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      3088	dir.c	FUNCTION_101	CALL_13
0x4005393	      0xe800000000	                          call 0x4005398	      3088	dir.c	FUNCTION_101	CALL_13
0x4005398	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3091	dir.c	FUNCTION_101	CALL_15
0x400539d	      0xe800000000	                          call 0x40053a2	      3091	dir.c	FUNCTION_101	CALL_15
0x40053a2	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      3092	dir.c	FUNCTION_101	CALL_16
0x40053a7	      0xe800000000	                          call 0x40053ac	      3092	dir.c	FUNCTION_101	CALL_16
0x40053ac	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      3093	dir.c	FUNCTION_101	CALL_17
0x40053b1	      0xe800000000	                          call 0x40053b6	      3093	dir.c	FUNCTION_101	CALL_17
0x40053b6	          0x4585e4	                         test r12d, r12d	      3095	dir.c	FUNCTION_101	IF_3
0x40053b9	     0xf843b020000	                            je 0x40055fa	      3095	dir.c	FUNCTION_101	IF_3
0x40053bf	    0x48c744247000	               mov qword [rsp + 0x70], 0	      3019	dir.c	FUNCTION_100
0x40053c8	    0x48c744247800	               mov qword [rsp + 0x78], 0	      3019	dir.c	FUNCTION_100
0x40053d1	    0x48c784248000	               mov qword [rsp + 0x80], 0	      3019	dir.c	FUNCTION_100
0x40053dd	    0x48c784249000	               mov qword [rsp + 0x90], 0	      3020	dir.c	FUNCTION_100
0x40053e9	    0x48c784249800	               mov qword [rsp + 0x98], 0	      3020	dir.c	FUNCTION_100
0x40053f5	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	      3020	dir.c	FUNCTION_100
0x4005401	      0x488b542408	                mov rdx, qword [rsp + 8]	      3025	dir.c	FUNCTION_100	IF_1	CALL_1
0x4005406	        0x488b3424	                    mov rsi, qword [rsp]	      3025	dir.c	FUNCTION_100	IF_1	CALL_1
0x400540a	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      3025	dir.c	FUNCTION_100	IF_1	CALL_1
0x4005412	      0xe800000000	                          call 0x4005417	      3025	dir.c	FUNCTION_100	IF_1	CALL_1
0x4005417	            0x85c0	                           test eax, eax	      3025	dir.c	FUNCTION_100	IF_1	CALL_1
0x4005419	     0xf85db010000	                           jne 0x40055fa	      3025	dir.c	FUNCTION_100	IF_1	CALL_1
0x400541f	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      3028	dir.c	FUNCTION_100	IF_2	CALL_2
0x4005427	      0xe800000000	                          call 0x400542c	      3028	dir.c	FUNCTION_100	IF_2	CALL_2
0x400542c	            0x85c0	                           test eax, eax	      3028	dir.c	FUNCTION_100	IF_2	CALL_2
0x400542e	            0x781b	                            js 0x400544b	      3028	dir.c	FUNCTION_100	IF_2	CALL_2
0x4005430	    0x488b84240001	           mov rax, qword [rsp + 0x100] 	      3031	dir.c	FUNCTION_100	FOR_1
0x4005438	        0x448b600c	            mov r12d, dword [rax + 0xc] 	      3031	dir.c	FUNCTION_100	FOR_1
0x400543c	      0xbb00000000	                              mov ebx, 0	      3031	dir.c	FUNCTION_100	FOR_1
0x4005441	          0x4585e4	                         test r12d, r12d	      3031	dir.c	FUNCTION_100	FOR_1
0x4005444	            0x751c	                           jne 0x4005462	      3031	dir.c	FUNCTION_100	FOR_1
0x4005446	      0xe98b010000	                           jmp 0x40055d6	      3031	dir.c	FUNCTION_100	FOR_1
0x400544b	    0x488bb424b000	            mov rsi, qword [rsp + 0xb0] 	      3029	dir.c	FUNCTION_100	CALL_3
0x4005453	      0xbf00000000	                              mov edi, 0	      3029	dir.c	FUNCTION_100	CALL_3
0x4005458	      0xb800000000	                              mov eax, 0	      3029	dir.c	FUNCTION_100	CALL_3
0x400545d	      0xe800000000	                          call 0x4005462	      3029	dir.c	FUNCTION_100	CALL_3
0x4005462	          0x4c8b28	                    mov r13, qword [rax]	      3032	dir.c	FUNCTION_100	FOR_1
0x4005465	          0x4863c3	                         movsxd rax, ebx	      3032	dir.c	FUNCTION_100	FOR_1
0x4005468	      0x4d8b7cc500	            mov r15, qword [r13 + rax*8]	      3032	dir.c	FUNCTION_100	FOR_1
0x400546d	        0x418b4734	            mov eax, dword [r15 + 0x34] 	      3034	dir.c	FUNCTION_100	FOR_1	IF_3
0x4005471	      0x2500f00000	                         and eax, 0xf000	      3034	dir.c	FUNCTION_100	FOR_1	IF_3
0x4005476	        0x4d8d7758	                   lea r14, [r15 + 0x58]	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x400547a	      0x3d00e00000	                         cmp eax, 0xe000	      3034	dir.c	FUNCTION_100	FOR_1	IF_3
0x400547f	            0x7407	                            je 0x4005488	      3034	dir.c	FUNCTION_100	FOR_1	IF_3
0x4005481	      0xe938010000	                           jmp 0x40055be	      3034	dir.c	FUNCTION_100	FOR_1	IF_3
0x4005486	            0x89eb	                            mov ebx, ebp	      3043	dir.c	FUNCTION_100	FOR_1	WHILE_1
0x4005488	          0x8d6b01	                      lea ebp, [rbx + 1]	      3037	dir.c	FUNCTION_100	FOR_1	WHILE_1
0x400548b	          0x4439e5	                           cmp ebp, r12d	      3037	dir.c	FUNCTION_100	FOR_1	WHILE_1
0x400548e	            0x7318	                           jae 0x40054a8	      3037	dir.c	FUNCTION_100	FOR_1	WHILE_1
0x4005490	          0x4863c3	                         movsxd rax, ebx	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x4005493	      0x498b74c508	       mov rsi, qword [r13 + rax*8 + 8] 	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x4005498	        0x4883c658	                           add rsi, 0x58	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x400549c	          0x4c89f7	                            mov rdi, r14	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x400549f	      0xe800000000	                          call 0x40054a4	      3038	dir.c	FUNCTION_100	FOR_1	WHILE_1	CALL_4
0x40054a4	            0x85c0	                           test eax, eax	      3037	dir.c	FUNCTION_100	FOR_1	WHILE_1
0x40054a6	            0x74de	                            je 0x4005486	      3037	dir.c	FUNCTION_100	FOR_1	WHILE_1
0x40054a8	        0x4983c758	                           add r15, 0x58	      3045	dir.c	FUNCTION_100	FOR_1	CALL_5
0x40054ac	          0x4c89fa	                            mov rdx, r15	      3045	dir.c	FUNCTION_100	FOR_1	CALL_5
0x40054af	      0xbe00000000	                              mov esi, 0	      3045	dir.c	FUNCTION_100	FOR_1	CALL_5
0x40054b4	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      3045	dir.c	FUNCTION_100	FOR_1	CALL_5
0x40054bc	      0xe800000000	                          call 0x40054c1	      3045	dir.c	FUNCTION_100	FOR_1	CALL_5
0x40054c1	          0x4889c5	                            mov rbp, rax	      3045	dir.c	FUNCTION_100	FOR_1	CALL_5
0x40054c4	          0x4885c0	                           test rax, rax	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x40054c7	     0xf84f1000000	                            je 0x40055be	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x40054cd	          0x4c89fe	                            mov rsi, r15	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x40054d0	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x40054d8	      0xe800000000	                          call 0x40054dd	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x40054dd	            0x85c0	                           test eax, eax	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x40054df	     0xf84d9000000	                            je 0x40055be	      3046	dir.c	FUNCTION_100	FOR_1	IF_4	CALL_6
0x40054e5	    0x48c744247800	               mov qword [rsp + 0x78], 0	       164	strbuf.h	FUNCTION_148
0x40054ee	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	       165	strbuf.h	FUNCTION_148	IF_2
0x40054f6	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_148	IF_2
0x40054fc	            0x7405	                            je 0x4005503	       165	strbuf.h	FUNCTION_148	IF_2
0x40054fe	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_148	IF_2
0x4005501	            0xeb22	                           jmp 0x4005525	       166	strbuf.h	FUNCTION_148	IF_2
0x4005503	    0x803d00000000	                cmp byte [0x0400550a], 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x400550a	            0x7419	                            je 0x4005525	       168	strbuf.h	FUNCTION_148	CALL_2
0x400550c	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x4005511	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_148	CALL_2
0x4005516	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x400551b	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x4005520	      0xe800000000	                          call 0x4005525	       168	strbuf.h	FUNCTION_148	CALL_2
0x4005525	    0x48c784249800	               mov qword [rsp + 0x98], 0	       164	strbuf.h	FUNCTION_148
0x4005531	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	       165	strbuf.h	FUNCTION_148	IF_2
0x4005539	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_148	IF_2
0x400553f	            0x7405	                            je 0x4005546	       165	strbuf.h	FUNCTION_148	IF_2
0x4005541	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_148	IF_2
0x4005544	            0xeb22	                           jmp 0x4005568	       166	strbuf.h	FUNCTION_148	IF_2
0x4005546	    0x803d00000000	                cmp byte [0x0400554d], 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x400554d	            0x7419	                            je 0x4005568	       168	strbuf.h	FUNCTION_148	CALL_2
0x400554f	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x4005554	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_148	CALL_2
0x4005559	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x400555e	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x4005563	      0xe800000000	                          call 0x4005568	       168	strbuf.h	FUNCTION_148	CALL_2
0x4005568	        0x488b4d00	                    mov rcx, qword [rbp]	      3052	dir.c	FUNCTION_100	FOR_1	CALL_7
0x400556c	      0x488b542408	                mov rdx, qword [rsp + 8]	      3052	dir.c	FUNCTION_100	FOR_1	CALL_7
0x4005571	      0xbe00000000	                              mov esi, 0	      3052	dir.c	FUNCTION_100	FOR_1	CALL_7
0x4005576	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      3052	dir.c	FUNCTION_100	FOR_1	CALL_7
0x400557b	      0xb800000000	                              mov eax, 0	      3052	dir.c	FUNCTION_100	FOR_1	CALL_7
0x4005580	      0xe800000000	                          call 0x4005585	      3052	dir.c	FUNCTION_100	FOR_1	CALL_7
0x4005585	        0x488b4d08	                mov rcx, qword [rbp + 8]	      3053	dir.c	FUNCTION_100	FOR_1	CALL_8
0x4005589	        0x488b1424	                    mov rdx, qword [rsp]	      3053	dir.c	FUNCTION_100	FOR_1	CALL_8
0x400558d	      0xbe00000000	                              mov esi, 0	      3053	dir.c	FUNCTION_100	FOR_1	CALL_8
0x4005592	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      3053	dir.c	FUNCTION_100	FOR_1	CALL_8
0x400559a	      0xb800000000	                              mov eax, 0	      3053	dir.c	FUNCTION_100	FOR_1	CALL_8
0x400559f	      0xe800000000	                          call 0x40055a4	      3053	dir.c	FUNCTION_100	FOR_1	CALL_8
0x40055a4	      0xba01000000	                              mov edx, 1	      3055	dir.c	FUNCTION_100	FOR_1	CALL_9
0x40055a9	    0x488bb424a000	            mov rsi, qword [rsp + 0xa0] 	      3055	dir.c	FUNCTION_100	FOR_1	CALL_9
0x40055b1	    0x488bbc248000	            mov rdi, qword [rsp + 0x80] 	      3055	dir.c	FUNCTION_100	FOR_1	CALL_9
0x40055b9	      0xe800000000	                          call 0x40055be	      3055	dir.c	FUNCTION_100	FOR_1	CALL_9
0x40055be	          0x83c301	                              add ebx, 1	      3031	dir.c	FUNCTION_100	FOR_1
0x40055c1	    0x488b84240001	           mov rax, qword [rsp + 0x100] 	      3031	dir.c	FUNCTION_100	FOR_1
0x40055c9	        0x448b600c	            mov r12d, dword [rax + 0xc] 	      3031	dir.c	FUNCTION_100	FOR_1
0x40055cd	          0x4139dc	                           cmp r12d, ebx	      3031	dir.c	FUNCTION_100	FOR_1
0x40055d0	     0xf878cfeffff	                            ja 0x4005462	      3031	dir.c	FUNCTION_100	FOR_1
0x40055d6	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      3057	dir.c	FUNCTION_100	CALL_10
0x40055db	      0xe800000000	                          call 0x40055e0	      3057	dir.c	FUNCTION_100	CALL_10
0x40055e0	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      3058	dir.c	FUNCTION_100	CALL_11
0x40055e8	      0xe800000000	                          call 0x40055ed	      3058	dir.c	FUNCTION_100	CALL_11
0x40055ed	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      3059	dir.c	FUNCTION_100	CALL_12
0x40055f5	      0xe800000000	                          call 0x40055fa	      3059	dir.c	FUNCTION_100	CALL_12
0x40055fa	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3098	dir.c	FUNCTION_101	CALL_19
0x40055ff	      0xe800000000	                          call 0x4005604	      3098	dir.c	FUNCTION_101	CALL_19
0x4005604	        0x488b3c24	                    mov rdi, qword [rsp]	      3099	dir.c	FUNCTION_101	CALL_20
0x4005608	      0xe800000000	                          call 0x400560d	      3099	dir.c	FUNCTION_101	CALL_20
0x400560d	    0x488b84241801	           mov rax, qword [rsp + 0x118] 	      3100	dir.c	FUNCTION_101
0x4005615	    0x644833042528	                xor rax, qword fs:[0x28]	      3100	dir.c	FUNCTION_101
0x400561e	            0x7405	                            je 0x4005625	      3100	dir.c	FUNCTION_101
0x4005620	      0xe800000000	                          call 0x4005625	      3100	dir.c	FUNCTION_101
0x4005625	    0x4881c4280100	                          add rsp, 0x128	      3100	dir.c	FUNCTION_101
0x400562c	              0x5b	                                 pop rbx	      3100	dir.c	FUNCTION_101
0x400562d	              0x5d	                                 pop rbp	      3100	dir.c	FUNCTION_101
0x400562e	            0x415c	                                 pop r12	      3100	dir.c	FUNCTION_101
0x4005630	            0x415d	                                 pop r13	      3100	dir.c	FUNCTION_101
0x4005632	            0x415e	                                 pop r14	      3100	dir.c	FUNCTION_101
0x4005634	            0x415f	                                 pop r15	      3100	dir.c	FUNCTION_101
0x4005636	              0xc3	                                     ret	      3100	dir.c	FUNCTION_101
setup_standard_excludes	ELSE,0:SWITCH,0:IF,4:functions,0:CALL,6:FOR,0:WHILE,0:DO,0	53
0x40048cd	              0x55	                                push rbp	      2497	dir.c	FUNCTION_80
0x40048ce	              0x53	                                push rbx	      2497	dir.c	FUNCTION_80
0x40048cf	        0x4883ec08	                              sub rsp, 8	      2497	dir.c	FUNCTION_80
0x40048d3	          0x4889fb	                            mov rbx, rdi	      2497	dir.c	FUNCTION_80
0x40048d6	    0x48c747280000	               mov qword [rdi + 0x28], 0	      2498	dir.c	FUNCTION_80
0x40048de	    0x488b3d000000	            mov rdi, qword [0x040048e5] 	      2501	dir.c	FUNCTION_80	IF_1
0x40048e5	          0x4885ff	                           test rdi, rdi	      2501	dir.c	FUNCTION_80	IF_1
0x40048e8	            0x7519	                           jne 0x4004903	      2501	dir.c	FUNCTION_80	IF_1
0x40048ea	      0xbf00000000	                              mov edi, 0	      2502	dir.c	FUNCTION_80	CALL_1
0x40048ef	      0xe800000000	                          call 0x40048f4	      2502	dir.c	FUNCTION_80	CALL_1
0x40048f4	    0x488905000000	            mov qword [0x040048fb], rax 	      2502	dir.c	FUNCTION_80	CALL_1
0x40048fb	          0x4885c0	                           test rax, rax	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x40048fe	            0x743d	                            je 0x400493d	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x4004900	          0x4889c7	                            mov rdi, rax	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x4004903	      0xba00000000	                              mov edx, 0	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x4004908	      0xbe04000000	                              mov esi, 4	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x400490d	      0xe800000000	                          call 0x4004912	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x4004912	            0x85c0	                           test eax, eax	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x4004914	            0x7527	                           jne 0x400493d	      2503	dir.c	FUNCTION_80	IF_2	CALL_2
0x4004916	    0x488d83cc0000	                   lea rax, [rbx + 0xcc]	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x400491d	    0x4883bb880000	               cmp qword [rbx + 0x88], 0	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x4004925	      0xba00000000	                              mov edx, 0	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x400492a	        0x480f45d0	                         cmovne rdx, rax	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x400492e	    0x488b35000000	            mov rsi, qword [0x04004935] 	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x4004935	          0x4889df	                            mov rdi, rbx	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x4004938	      0xe8b6ddffff	       call sym.add_excludes_from_file_1	      2504	dir.c	FUNCTION_80	IF_2	CALL_3
0x400493d	    0x488b05000000	            mov rax, qword [0x04004944] 	      2508	dir.c	FUNCTION_80	IF_3
0x4004944	          0x833800	                      cmp dword [rax], 0	      2508	dir.c	FUNCTION_80	IF_3
0x4004947	            0x7460	                            je 0x40049a9	      2508	dir.c	FUNCTION_80	IF_3
0x4004949	    0x48833d000000	               cmp qword [0x04004951], 0	      2494	dir.c	CALL_4
0x4004951	            0x7516	                           jne 0x4004969	      2494	dir.c	CALL_4
0x4004953	      0xbf00000000	                              mov edi, 0	      2494	dir.c	CALL_4
0x4004958	      0xb800000000	                              mov eax, 0	      2494	dir.c	CALL_4
0x400495d	      0xe800000000	                          call 0x4004962	      2494	dir.c	CALL_4
0x4004962	    0x488905000000	            mov qword [0x04004969], rax 	      2494	dir.c	CALL_4
0x4004969	    0x488b2d000000	            mov rbp, qword [0x04004970] 	      2494	dir.c	CALL_4
0x4004970	      0xba00000000	                              mov edx, 0	      2510	dir.c	FUNCTION_80	IF_3	IF_4	CALL_5
0x4004975	      0xbe04000000	                              mov esi, 4	      2510	dir.c	FUNCTION_80	IF_3	IF_4	CALL_5
0x400497a	          0x4889ef	                            mov rdi, rbp	      2510	dir.c	FUNCTION_80	IF_3	IF_4	CALL_5
0x400497d	      0xe800000000	                          call 0x4004982	      2510	dir.c	FUNCTION_80	IF_3	IF_4	CALL_5
0x4004982	            0x85c0	                           test eax, eax	      2510	dir.c	FUNCTION_80	IF_3	IF_4	CALL_5
0x4004984	            0x7523	                           jne 0x40049a9	      2510	dir.c	FUNCTION_80	IF_3	IF_4	CALL_5
0x4004986	    0x488d83900000	                   lea rax, [rbx + 0x90]	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x400498d	    0x4883bb880000	               cmp qword [rbx + 0x88], 0	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x4004995	      0xba00000000	                              mov edx, 0	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x400499a	        0x480f45d0	                         cmovne rdx, rax	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x400499e	          0x4889ee	                            mov rsi, rbp	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x40049a1	          0x4889df	                            mov rdi, rbx	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x40049a4	      0xe84addffff	       call sym.add_excludes_from_file_1	      2511	dir.c	FUNCTION_80	IF_3	IF_4	CALL_6
0x40049a9	        0x4883c408	                              add rsp, 8	      2514	dir.c	FUNCTION_80
0x40049ad	              0x5b	                                 pop rbx	      2514	dir.c	FUNCTION_80
0x40049ae	              0x5d	                                 pop rbp	      2514	dir.c	FUNCTION_80
0x40049af	              0xc3	                                     ret	      2514	dir.c	FUNCTION_80
dir_add_ignored	ELSE,0:SWITCH,0:IF,1:functions,0:CALL,2:FOR,0:WHILE,0:DO,0	53
0x40031b3	            0x4154	                                push r12	      1351	dir.c	FUNCTION_45
0x40031b5	              0x55	                                push rbp	      1351	dir.c	FUNCTION_45
0x40031b6	              0x53	                                push rbx	      1351	dir.c	FUNCTION_45
0x40031b7	          0x4889fb	                            mov rbx, rdi	      1351	dir.c	FUNCTION_45
0x40031ba	          0x4889f7	                            mov rdi, rsi	      1351	dir.c	FUNCTION_45
0x40031bd	          0x4889d5	                            mov rbp, rdx	      1351	dir.c	FUNCTION_45
0x40031c0	          0x4189cc	                           mov r12d, ecx	      1351	dir.c	FUNCTION_45
0x40031c3	            0x89ca	                            mov edx, ecx	      1352	dir.c	FUNCTION_45	IF_1	CALL_1
0x40031c5	          0x4889ee	                            mov rsi, rbp	      1352	dir.c	FUNCTION_45	IF_1	CALL_1
0x40031c8	      0xe800000000	                          call 0x40031cd	      1352	dir.c	FUNCTION_45	IF_1	CALL_1
0x40031cd	            0x85c0	                           test eax, eax	      1352	dir.c	FUNCTION_45	IF_1	CALL_1
0x40031cf	     0xf8480000000	                            je 0x4003255	      1352	dir.c	FUNCTION_45	IF_1	CALL_1
0x40031d5	          0x8b4308	                mov eax, dword [rbx + 8]	      1355	dir.c	FUNCTION_45
0x40031d8	          0x8d5001	                      lea edx, [rax + 1]	      1355	dir.c	FUNCTION_45
0x40031db	          0x8b430c	              mov eax, dword [rbx + 0xc]	      1355	dir.c	FUNCTION_45
0x40031de	            0x39c2	                            cmp edx, eax	      1355	dir.c	FUNCTION_45
0x40031e0	            0x7e50	                           jle 0x4003232	      1355	dir.c	FUNCTION_45
0x40031e2	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	      1355	dir.c	FUNCTION_45
0x40031e6	            0x89c6	                            mov esi, eax	      1355	dir.c	FUNCTION_45
0x40031e8	          0xc1ee1f	                           shr esi, 0x1f	      1355	dir.c	FUNCTION_45
0x40031eb	             0x1c6	                            add esi, eax	      1355	dir.c	FUNCTION_45
0x40031ed	            0xd1fe	                              sar esi, 1	      1355	dir.c	FUNCTION_45
0x40031ef	            0x39f2	                            cmp edx, esi	      1355	dir.c	FUNCTION_45
0x40031f1	           0xf4ff2	                          cmovg esi, edx	      1355	dir.c	FUNCTION_45
0x40031f4	          0x89730c	              mov dword [rbx + 0xc], esi	      1355	dir.c	FUNCTION_45
0x40031f7	          0x4863d6	                         movsxd rdx, esi	      1355	dir.c	FUNCTION_45
0x40031fa	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_171	IF_1
0x4003204	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_171	IF_1
0x4003207	            0x7614	                           jbe 0x400321d	       795	git-compat-util.h	FUNCTION_171	IF_1
0x4003209	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_171	IF_1	CALL_1
0x400320e	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_171	IF_1	CALL_1
0x4003213	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_171	IF_1	CALL_1
0x4003218	      0xe800000000	                          call 0x400321d	       796	git-compat-util.h	FUNCTION_171	IF_1	CALL_1
0x400321d	    0x488d34d50000	                        lea rsi, [rdx*8]	      1355	dir.c	FUNCTION_45
0x4003225	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1355	dir.c	FUNCTION_45
0x4003229	      0xe800000000	                          call 0x400322e	      1355	dir.c	FUNCTION_45
0x400322e	        0x48894320	             mov qword [rbx + 0x20], rax	      1355	dir.c	FUNCTION_45
0x4003232	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1356	dir.c	FUNCTION_45	CALL_2
0x4003236	          0x8b4308	                mov eax, dword [rbx + 8]	      1356	dir.c	FUNCTION_45	CALL_2
0x4003239	          0x8d4801	                      lea ecx, [rax + 1]	      1356	dir.c	FUNCTION_45	CALL_2
0x400323c	          0x894b08	                mov dword [rbx + 8], ecx	      1356	dir.c	FUNCTION_45	CALL_2
0x400323f	            0x4898	                                    cdqe	      1356	dir.c	FUNCTION_45	CALL_2
0x4003241	        0x488d1cc2	                  lea rbx, [rdx + rax*8]	      1356	dir.c	FUNCTION_45	CALL_2
0x4003245	          0x4489e6	                           mov esi, r12d	      1356	dir.c	FUNCTION_45	CALL_2
0x4003248	          0x4889ef	                            mov rdi, rbp	      1356	dir.c	FUNCTION_45	CALL_2
0x400324b	      0xe88fcfffff	                  call sym.dir_entry_new	      1356	dir.c	FUNCTION_45	CALL_2
0x4003250	          0x488903	                    mov qword [rbx], rax	      1356	dir.c	FUNCTION_45	CALL_2
0x4003253	            0xeb05	                           jmp 0x400325a	      1356	dir.c	FUNCTION_45	CALL_2
0x4003255	      0xb800000000	                              mov eax, 0	      1353	dir.c	FUNCTION_45	IF_1
0x400325a	              0x5b	                                 pop rbx	      1357	dir.c	FUNCTION_45
0x400325b	              0x5d	                                 pop rbp	      1357	dir.c	FUNCTION_45
0x400325c	            0x415c	                                 pop r12	      1357	dir.c	FUNCTION_45
0x400325e	              0xc3	                                     ret	      1357	dir.c	FUNCTION_45
git_fnmatch	ELSE,1:SWITCH,0:IF,4:functions,0:CALL,6:FOR,0:WHILE,0:DO,0	84
0x400165c	            0x4155	                                push r13	        80	dir.c	FUNCTION_4
0x400165e	            0x4154	                                push r12	        80	dir.c	FUNCTION_4
0x4001660	              0x55	                                push rbp	        80	dir.c	FUNCTION_4
0x4001661	              0x53	                                push rbx	        80	dir.c	FUNCTION_4
0x4001662	        0x4883ec08	                              sub rsp, 8	        80	dir.c	FUNCTION_4
0x4001666	          0x4889fb	                            mov rbx, rdi	        80	dir.c	FUNCTION_4
0x4001669	          0x4989f5	                            mov r13, rsi	        80	dir.c	FUNCTION_4
0x400166c	          0x4889d5	                            mov rbp, rdx	        80	dir.c	FUNCTION_4
0x400166f	            0x85c9	                           test ecx, ecx	        81	dir.c	FUNCTION_4	IF_1
0x4001671	            0x7e3e	                           jle 0x40016b1	        81	dir.c	FUNCTION_4	IF_1
0x4001673	          0x4c63e1	                         movsxd r12, ecx	        82	dir.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x4001676	        0xf6471010	           test byte [rdi + 0x10], 0x10 	        92	pathspec.h	FUNCTION_187	IF_1
0x400167a	            0x7412	                            je 0x400168e	        92	pathspec.h	FUNCTION_187	IF_1
0x400167c	          0x4c89e2	                            mov rdx, r12	        93	pathspec.h	FUNCTION_187	CALL_1
0x400167f	          0x4889ee	                            mov rsi, rbp	        93	pathspec.h	FUNCTION_187	CALL_1
0x4001682	          0x4c89ef	                            mov rdi, r13	        93	pathspec.h	FUNCTION_187	CALL_1
0x4001685	      0xe800000000	                          call 0x400168a	        93	pathspec.h	FUNCTION_187	CALL_1
0x400168a	            0x89c2	                            mov edx, eax	        93	pathspec.h	FUNCTION_187	CALL_1
0x400168c	            0xeb10	                           jmp 0x400169e	        93	pathspec.h	FUNCTION_187	CALL_1
0x400168e	          0x4c89e2	                            mov rdx, r12	        95	pathspec.h	FUNCTION_187	CALL_2
0x4001691	          0x4889ee	                            mov rsi, rbp	        95	pathspec.h	FUNCTION_187	CALL_2
0x4001694	          0x4c89ef	                            mov rdi, r13	        95	pathspec.h	FUNCTION_187	CALL_2
0x4001697	      0xe800000000	                          call 0x400169c	        95	pathspec.h	FUNCTION_187	CALL_2
0x400169c	            0x89c2	                            mov edx, eax	        95	pathspec.h	FUNCTION_187	CALL_2
0x400169e	      0xb801000000	                              mov eax, 1	        83	dir.c	FUNCTION_4	IF_1	IF_2
0x40016a3	            0x85d2	                           test edx, edx	        82	dir.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40016a5	     0xf85a4000000	                           jne 0x400174f	        82	dir.c	FUNCTION_4	IF_1	IF_2	CALL_1
0x40016ab	          0x4d01e5	                            add r13, r12	        84	dir.c	FUNCTION_4	IF_1
0x40016ae	          0x4c01e5	                            add rbp, r12	        85	dir.c	FUNCTION_4	IF_1
0x40016b1	        0xf6432001	               test byte [rbx + 0x20], 1	        87	dir.c	FUNCTION_4	IF_3
0x40016b5	            0x7467	                            je 0x400171e	        87	dir.c	FUNCTION_4	IF_3
0x40016b7	        0x498d5501	                      lea rdx, [r13 + 1]	        88	dir.c	FUNCTION_4	IF_3	CALL_2
0x40016bb	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	        88	dir.c	FUNCTION_4	IF_3	CALL_2
0x40016c2	      0xb800000000	                              mov eax, 0	        88	dir.c	FUNCTION_4	IF_3	CALL_2
0x40016c7	          0x4889f1	                            mov rcx, rsi	        88	dir.c	FUNCTION_4	IF_3	CALL_2
0x40016ca	          0x4889d7	                            mov rdi, rdx	        88	dir.c	FUNCTION_4	IF_3	CALL_2
0x40016cd	            0xf2ae	              repne scasb al, byte [rdi]	        88	dir.c	FUNCTION_4	IF_3	CALL_2
0x40016cf	          0x48f7d1	                                 not rcx	        88	dir.c	FUNCTION_4	IF_3	CALL_2
0x40016d2	        0x4c8d0431	                     lea r8, [rcx + rsi]	        88	dir.c	FUNCTION_4	IF_3	CALL_2
0x40016d6	          0x4889f1	                            mov rcx, rsi	        89	dir.c	FUNCTION_4	IF_3	CALL_3
0x40016d9	          0x4889ef	                            mov rdi, rbp	        89	dir.c	FUNCTION_4	IF_3	CALL_3
0x40016dc	            0xf2ae	              repne scasb al, byte [rdi]	        89	dir.c	FUNCTION_4	IF_3	CALL_3
0x40016de	          0x48f7d1	                                 not rcx	        89	dir.c	FUNCTION_4	IF_3	CALL_3
0x40016e1	          0x4801f1	                            add rcx, rsi	        89	dir.c	FUNCTION_4	IF_3	CALL_3
0x40016e4	      0xb801000000	                              mov eax, 1	        90	dir.c	FUNCTION_4	IF_3
0x40016e9	          0x4139c8	                            cmp r8d, ecx	        90	dir.c	FUNCTION_4	IF_3
0x40016ec	            0x7f61	                            jg 0x400174f	        90	dir.c	FUNCTION_4	IF_3
0x40016ee	          0x4863f1	                         movsxd rsi, ecx	        91	dir.c	FUNCTION_4	IF_3	CALL_4
0x40016f1	          0x4d63c0	                          movsxd r8, r8d	        91	dir.c	FUNCTION_4	IF_3	CALL_4
0x40016f4	          0x4c29c6	                             sub rsi, r8	        91	dir.c	FUNCTION_4	IF_3	CALL_4
0x40016f7	      0x488d743500	                    lea rsi, [rbp + rsi]	        91	dir.c	FUNCTION_4	IF_3	CALL_4
0x40016fc	        0xf6431010	           test byte [rbx + 0x10], 0x10 	       101	pathspec.h	FUNCTION_188	IF_1
0x4001700	            0x740a	                            je 0x400170c	       101	pathspec.h	FUNCTION_188	IF_1
0x4001702	          0x4889d7	                            mov rdi, rdx	       102	pathspec.h	FUNCTION_188	CALL_1
0x4001705	      0xe800000000	                          call 0x400170a	       102	pathspec.h	FUNCTION_188	CALL_1
0x400170a	            0xeb08	                           jmp 0x4001714	       102	pathspec.h	FUNCTION_188	CALL_1
0x400170c	          0x4889d7	                            mov rdi, rdx	       104	pathspec.h	FUNCTION_188	CALL_2
0x400170f	      0xe800000000	                          call 0x4001714	       104	pathspec.h	FUNCTION_188	CALL_2
0x4001714	            0x85c0	                           test eax, eax	        83	dir.c	FUNCTION_4	IF_1	IF_2
0x4001716	           0xf95c0	                                setne al	        83	dir.c	FUNCTION_4	IF_1	IF_2
0x4001719	           0xfb6c0	                           movzx eax, al	        83	dir.c	FUNCTION_4	IF_1	IF_2
0x400171c	            0xeb31	                           jmp 0x400174f	        83	dir.c	FUNCTION_4	IF_1	IF_2
0x400171e	          0x8b5310	            mov edx, dword [rbx + 0x10] 	        94	dir.c	FUNCTION_4	IF_4
0x4001721	          0xf6c208	                              test dl, 8	        94	dir.c	FUNCTION_4	IF_4
0x4001724	            0x7418	                            je 0x400173e	        94	dir.c	FUNCTION_4	IF_4
0x4001726	          0x83e210	                           and edx, 0x10	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x4001729	          0x83fa01	                              cmp edx, 1	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x400172c	            0x19d2	                            sbb edx, edx	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x400172e	          0x83c203	                              add edx, 3	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x4001731	          0x4889ee	                            mov rsi, rbp	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x4001734	          0x4c89ef	                            mov rdi, r13	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x4001737	      0xe800000000	                          call 0x400173c	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x400173c	            0xeb11	                           jmp 0x400174f	        95	dir.c	FUNCTION_4	IF_4	CALL_5
0x400173e	          0xc1ea04	                              shr edx, 4	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x4001741	          0x83e201	                              and edx, 1	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x4001744	          0x4889ee	                            mov rsi, rbp	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x4001747	          0x4c89ef	                            mov rdi, r13	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x400174a	      0xe800000000	                          call 0x400174f	       100	dir.c	FUNCTION_4	ELSE_1	CALL_6
0x400174f	        0x4883c408	                              add rsp, 8	       102	dir.c	FUNCTION_4
0x4001753	              0x5b	                                 pop rbx	       102	dir.c	FUNCTION_4
0x4001754	              0x5d	                                 pop rbp	       102	dir.c	FUNCTION_4
0x4001755	            0x415c	                                 pop r12	       102	dir.c	FUNCTION_4
0x4001757	            0x415d	                                 pop r13	       102	dir.c	FUNCTION_4
0x4001759	              0xc3	                                     ret	       102	dir.c	FUNCTION_4
dir_entry_new	ELSE,0:SWITCH,0:IF,0:functions,0:CALL,0:FOR,0:WHILE,0:DO,0	38
0x40001df	            0x4155	                                push r13	      1329	dir.c	FUNCTION_43
0x40001e1	            0x4154	                                push r12	      1329	dir.c	FUNCTION_43
0x40001e3	              0x55	                                push rbp	      1329	dir.c	FUNCTION_43
0x40001e4	              0x53	                                push rbx	      1329	dir.c	FUNCTION_43
0x40001e5	        0x4883ec08	                              sub rsp, 8	      1329	dir.c	FUNCTION_43
0x40001e9	          0x4863de	                         movsxd rbx, esi	      1332	dir.c	FUNCTION_43
0x40001ec	        0x4883fbfb	             cmp rbx, 0xfffffffffffffffb	       785	git-compat-util.h	FUNCTION_170	IF_1
0x40001f0	            0x7617	                           jbe 0x4000209	       785	git-compat-util.h	FUNCTION_170	IF_1
0x40001f2	          0x4889da	                            mov rdx, rbx	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x40001f5	      0xbe04000000	                              mov esi, 4	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x40001fa	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x40001ff	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4000204	      0xe800000000	                          call 0x4000209	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4000209	          0x4989fd	                            mov r13, rdi	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x400020c	          0x4189f4	                           mov r12d, esi	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x400020f	        0x4883fbfb	             cmp rbx, 0xfffffffffffffffb	       785	git-compat-util.h	FUNCTION_170	IF_1
0x4000213	            0x751b	                           jne 0x4000230	       785	git-compat-util.h	FUNCTION_170	IF_1
0x4000215	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x400021a	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4000221	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4000226	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x400022b	      0xe800000000	                          call 0x4000230	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4000230	        0x488d7305	                      lea rsi, [rbx + 5]	      1332	dir.c	FUNCTION_43
0x4000234	      0xbf01000000	                              mov edi, 1	      1332	dir.c	FUNCTION_43
0x4000239	      0xe800000000	                          call 0x400023e	      1332	dir.c	FUNCTION_43
0x400023e	          0x4889c5	                            mov rbp, rax	      1332	dir.c	FUNCTION_43
0x4000241	        0x488d7804	                      lea rdi, [rax + 4]	        53	string3.h	FUNCTION_107	CALL_3
0x4000245	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_107	CALL_3
0x4000248	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_107	CALL_3
0x400024b	      0xe800000000	                          call 0x4000250	        53	string3.h	FUNCTION_107	CALL_3
0x4000250	        0x44896500	                   mov dword [rbp], r12d	      1333	dir.c	FUNCTION_43
0x4000254	          0x4889e8	                            mov rax, rbp	      1335	dir.c	FUNCTION_43
0x4000257	        0x4883c408	                              add rsp, 8	      1335	dir.c	FUNCTION_43
0x400025b	              0x5b	                                 pop rbx	      1335	dir.c	FUNCTION_43
0x400025c	              0x5d	                                 pop rbp	      1335	dir.c	FUNCTION_43
0x400025d	            0x415c	                                 pop r12	      1335	dir.c	FUNCTION_43
0x400025f	            0x415d	                                 pop r13	      1335	dir.c	FUNCTION_43
0x4000261	              0xc3	                                     ret	      1335	dir.c	FUNCTION_43
add_excludes_from_blob_to_list	ELSE,0:SWITCH,0:IF,1:functions,0:CALL,2:FOR,0:WHILE,0:DO,0	32
0x40025d6	            0x4154	                                push r12	       909	dir.c	FUNCTION_31
0x40025d8	              0x55	                                push rbp	       909	dir.c	FUNCTION_31
0x40025d9	              0x53	                                push rbx	       909	dir.c	FUNCTION_31
0x40025da	        0x4883ec20	                           sub rsp, 0x20	       909	dir.c	FUNCTION_31
0x40025de	          0x4889f3	                            mov rbx, rsi	       909	dir.c	FUNCTION_31
0x40025e1	            0x89d5	                            mov ebp, edx	       909	dir.c	FUNCTION_31
0x40025e3	          0x4989cc	                            mov r12, rcx	       909	dir.c	FUNCTION_31
0x40025e6	    0x64488b042528	                mov rax, qword fs:[0x28]	       909	dir.c	FUNCTION_31
0x40025ef	      0x4889442418	             mov qword [rsp + 0x18], rax	       909	dir.c	FUNCTION_31
0x40025f4	            0x31c0	                            xor eax, eax	       909	dir.c	FUNCTION_31
0x40025f6	      0x488d4c2408	                      lea rcx, [rsp + 8]	       914	dir.c	FUNCTION_31	CALL_1
0x40025fb	      0x488d542410	                   lea rdx, [rsp + 0x10]	       914	dir.c	FUNCTION_31	CALL_1
0x4002600	      0xbe00000000	                              mov esi, 0	       914	dir.c	FUNCTION_31	CALL_1
0x4002605	      0xe8b7ddffff	                   call sym.do_read_blob	       914	dir.c	FUNCTION_31	CALL_1
0x400260a	          0x83f801	                              cmp eax, 1	       915	dir.c	FUNCTION_31	IF_1
0x400260d	            0x751c	                           jne 0x400262b	       915	dir.c	FUNCTION_31	IF_1
0x400260f	          0x4d89e0	                             mov r8, r12	       918	dir.c	FUNCTION_31	CALL_2
0x4002612	            0x89e9	                            mov ecx, ebp	       918	dir.c	FUNCTION_31	CALL_2
0x4002614	          0x4889da	                            mov rdx, rbx	       918	dir.c	FUNCTION_31	CALL_2
0x4002617	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       918	dir.c	FUNCTION_31	CALL_2
0x400261c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       918	dir.c	FUNCTION_31	CALL_2
0x4002621	      0xe80ffbffff	       call sym.add_excludes_from_buffer	       918	dir.c	FUNCTION_31	CALL_2
0x4002626	      0xb800000000	                              mov eax, 0	       919	dir.c	FUNCTION_31
0x400262b	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       920	dir.c	FUNCTION_31
0x4002630	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       920	dir.c	FUNCTION_31
0x4002639	            0x7405	                            je 0x4002640	       920	dir.c	FUNCTION_31
0x400263b	      0xe800000000	                          call 0x4002640	       920	dir.c	FUNCTION_31
0x4002640	        0x4883c420	                           add rsp, 0x20	       920	dir.c	FUNCTION_31
0x4002644	              0x5b	                                 pop rbx	       920	dir.c	FUNCTION_31
0x4002645	              0x5d	                                 pop rbp	       920	dir.c	FUNCTION_31
0x4002646	            0x415c	                                 pop r12	       920	dir.c	FUNCTION_31
0x4002648	              0xc3	                                     ret	       920	dir.c	FUNCTION_31
fnmatch_icase_mem	ELSE,0:SWITCH,0:IF,3:functions,0:CALL,5:FOR,0:WHILE,0:DO,0	56
0x40004f3	            0x4155	                                push r13	       107	dir.c	FUNCTION_5
0x40004f5	            0x4154	                                push r12	       107	dir.c	FUNCTION_5
0x40004f7	              0x55	                                push rbp	       107	dir.c	FUNCTION_5
0x40004f8	              0x53	                                push rbx	       107	dir.c	FUNCTION_5
0x40004f9	        0x4883ec48	                           sub rsp, 0x48	       107	dir.c	FUNCTION_5
0x40004fd	          0x4989fc	                            mov r12, rdi	       107	dir.c	FUNCTION_5
0x4000500	          0x4989d5	                            mov r13, rdx	       107	dir.c	FUNCTION_5
0x4000503	            0x89cd	                            mov ebp, ecx	       107	dir.c	FUNCTION_5
0x4000505	          0x4489c3	                            mov ebx, r8d	       107	dir.c	FUNCTION_5
0x4000508	    0x64488b042528	                mov rax, qword fs:[0x28]	       107	dir.c	FUNCTION_5
0x4000511	      0x4889442438	             mov qword [rsp + 0x38], rax	       107	dir.c	FUNCTION_5
0x4000516	            0x31c0	                            xor eax, eax	       107	dir.c	FUNCTION_5
0x4000518	    0x48c704240000	                      mov qword [rsp], 0	       109	dir.c	FUNCTION_5
0x4000520	    0x48c744240800	                  mov qword [rsp + 8], 0	       109	dir.c	FUNCTION_5
0x4000529	    0x48c744241000	               mov qword [rsp + 0x10], 0	       109	dir.c	FUNCTION_5
0x4000532	    0x48c744242000	               mov qword [rsp + 0x20], 0	       110	dir.c	FUNCTION_5
0x400053b	    0x48c744242800	               mov qword [rsp + 0x28], 0	       110	dir.c	FUNCTION_5
0x4000544	    0x48c744243000	               mov qword [rsp + 0x30], 0	       110	dir.c	FUNCTION_5
0x400054d	          0x4863d6	                         movsxd rdx, esi	       114	dir.c	FUNCTION_5	IF_1
0x4000550	        0x803c1700	                 cmp byte [rdi + rdx], 0	       114	dir.c	FUNCTION_5	IF_1
0x4000554	            0x7410	                            je 0x4000566	       114	dir.c	FUNCTION_5	IF_1
0x4000556	          0x4889fe	                            mov rsi, rdi	       115	dir.c	FUNCTION_5	IF_1	CALL_1
0x4000559	          0x4889e7	                            mov rdi, rsp	       115	dir.c	FUNCTION_5	IF_1	CALL_1
0x400055c	      0xe800000000	                          call 0x4000561	       115	dir.c	FUNCTION_5	IF_1	CALL_1
0x4000561	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	       116	dir.c	FUNCTION_5	IF_1
0x4000566	          0x4863d5	                         movsxd rdx, ebp	       118	dir.c	FUNCTION_5	IF_2
0x4000569	    0x41807c150000	                 cmp byte [r13 + rdx], 0	       118	dir.c	FUNCTION_5	IF_2
0x400056f	            0x7412	                            je 0x4000583	       118	dir.c	FUNCTION_5	IF_2
0x4000571	          0x4c89ee	                            mov rsi, r13	       119	dir.c	FUNCTION_5	IF_2	CALL_2
0x4000574	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       119	dir.c	FUNCTION_5	IF_2	CALL_2
0x4000579	      0xe800000000	                          call 0x400057e	       119	dir.c	FUNCTION_5	IF_2	CALL_2
0x400057e	      0x4c8b6c2430	            mov r13, qword [rsp + 0x30] 	       120	dir.c	FUNCTION_5	IF_2
0x4000583	            0x89d8	                            mov eax, ebx	       124	dir.c	FUNCTION_5	IF_3
0x4000585	          0x83c801	                               or eax, 1	       124	dir.c	FUNCTION_5	IF_3
0x4000588	    0x833d00000000	               cmp dword [0x0400058f], 0	       124	dir.c	FUNCTION_5	IF_3
0x400058f	           0xf45d8	                         cmovne ebx, eax	       124	dir.c	FUNCTION_5	IF_3
0x4000592	            0x89da	                            mov edx, ebx	       125	dir.c	FUNCTION_5	CALL_3
0x4000594	          0x4c89ee	                            mov rsi, r13	       125	dir.c	FUNCTION_5	CALL_3
0x4000597	          0x4c89e7	                            mov rdi, r12	       125	dir.c	FUNCTION_5	CALL_3
0x400059a	      0xe800000000	                          call 0x400059f	       125	dir.c	FUNCTION_5	CALL_3
0x400059f	            0x89c3	                            mov ebx, eax	       125	dir.c	FUNCTION_5	CALL_3
0x40005a1	          0x4889e7	                            mov rdi, rsp	       127	dir.c	FUNCTION_5	CALL_4
0x40005a4	      0xe800000000	                          call 0x40005a9	       127	dir.c	FUNCTION_5	CALL_4
0x40005a9	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       128	dir.c	FUNCTION_5	CALL_5
0x40005ae	      0xe800000000	                          call 0x40005b3	       128	dir.c	FUNCTION_5	CALL_5
0x40005b3	            0x89d8	                            mov eax, ebx	       131	dir.c	FUNCTION_5
0x40005b5	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       131	dir.c	FUNCTION_5
0x40005ba	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       131	dir.c	FUNCTION_5
0x40005c3	            0x7405	                            je 0x40005ca	       131	dir.c	FUNCTION_5
0x40005c5	      0xe800000000	                          call 0x40005ca	       131	dir.c	FUNCTION_5
0x40005ca	        0x4883c448	                           add rsp, 0x48	       131	dir.c	FUNCTION_5
0x40005ce	              0x5b	                                 pop rbx	       131	dir.c	FUNCTION_5
0x40005cf	              0x5d	                                 pop rbp	       131	dir.c	FUNCTION_5
0x40005d0	            0x415c	                                 pop r12	       131	dir.c	FUNCTION_5
0x40005d2	            0x415d	                                 pop r13	       131	dir.c	FUNCTION_5
0x40005d4	              0xc3	                                     ret	       131	dir.c	FUNCTION_5
untracked_cache_add_to_index	ELSE,0:SWITCH,0:IF,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0	5
0x40051fe	        0x4883ec08	                              sub rsp, 8	      3010	dir.c	FUNCTION_99
0x4005202	      0xba01000000	                              mov edx, 1	      3011	dir.c	FUNCTION_99	CALL_1
0x4005207	      0xe800000000	                          call 0x400520c	      3011	dir.c	FUNCTION_99	CALL_1
0x400520c	        0x4883c408	                              add rsp, 8	      3012	dir.c	FUNCTION_99
0x4005210	              0xc3	                                     ret	      3012	dir.c	FUNCTION_99
submodule_path_match	ELSE,0:SWITCH,0:IF,0:functions,0:CALL,2:FOR,0:WHILE,0:DO,0	16
0x4001d6a	        0x4883ec08	                              sub rsp, 8	       520	dir.c	FUNCTION_15
0x4001d6e	          0x4989fa	                            mov r10, rdi	       520	dir.c	FUNCTION_15
0x4001d71	          0x4989d0	                             mov r8, rdx	       520	dir.c	FUNCTION_15
0x4001d74	      0xb800000000	                              mov eax, 0	       522	dir.c	FUNCTION_15	CALL_2
0x4001d79	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       522	dir.c	FUNCTION_15	CALL_2
0x4001d80	          0x4889f7	                            mov rdi, rsi	       522	dir.c	FUNCTION_15	CALL_2
0x4001d83	            0xf2ae	              repne scasb al, byte [rdi]	       522	dir.c	FUNCTION_15	CALL_2
0x4001d85	          0x4889c8	                            mov rax, rcx	       522	dir.c	FUNCTION_15	CALL_2
0x4001d88	          0x48f7d0	                                 not rax	       522	dir.c	FUNCTION_15	CALL_2
0x4001d8b	        0x488d50ff	                      lea rdx, [rax - 1]	       522	dir.c	FUNCTION_15	CALL_2
0x4001d8f	    0x41b906000000	                              mov r9d, 6	       521	dir.c	FUNCTION_15	CALL_1
0x4001d95	      0xb900000000	                              mov ecx, 0	       521	dir.c	FUNCTION_15	CALL_1
0x4001d9a	          0x4c89d7	                            mov rdi, r10	       521	dir.c	FUNCTION_15	CALL_1
0x4001d9d	      0xe80ffaffff	              call sym.do_match_pathspec	       521	dir.c	FUNCTION_15	CALL_1
0x4001da2	        0x4883c408	                              add rsp, 8	       527	dir.c	FUNCTION_15
0x4001da6	              0xc3	                                     ret	       527	dir.c	FUNCTION_15
set_check_only	ELSE,0:SWITCH,0:IF,0:functions,0:CALL,0:FOR,0:WHILE,0:DO,0	4
0x400007f	        0x488b4608	                mov rax, qword [rsi + 8]	      2812	dir.c	FUNCTION_90
0x4000083	        0x488b04f8	            mov rax, qword [rax + rdi*8]	      2812	dir.c	FUNCTION_90
0x4000087	        0x80484401	                 or byte [rax + 0x44], 1	      2813	dir.c	FUNCTION_90
0x400008b	              0xc3	                                     ret	      2813	dir.c	FUNCTION_90
cmp_dir_entry	ELSE,0:SWITCH,0:IF,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0	10
0x40009c5	        0x4883ec08	                              sub rsp, 8	      2044	dir.c	FUNCTION_62
0x40009c9	          0x488b3f	                    mov rdi, qword [rdi]	      2045	dir.c	FUNCTION_62
0x40009cc	          0x488b16	                    mov rdx, qword [rsi]	      2046	dir.c	FUNCTION_62
0x40009cf	            0x8b0a	                    mov ecx, dword [rdx]	      2048	dir.c	FUNCTION_62	CALL_1
0x40009d1	        0x4883c204	                              add rdx, 4	      2048	dir.c	FUNCTION_62	CALL_1
0x40009d5	            0x8b37	                    mov esi, dword [rdi]	      2048	dir.c	FUNCTION_62	CALL_1
0x40009d7	        0x4883c704	                              add rdi, 4	      2048	dir.c	FUNCTION_62	CALL_1
0x40009db	      0xe800000000	                          call 0x40009e0	      2048	dir.c	FUNCTION_62	CALL_1
0x40009e0	        0x4883c408	                              add rsp, 8	      2049	dir.c	FUNCTION_62
0x40009e4	              0xc3	                                     ret	      2049	dir.c	FUNCTION_62
add_excludes_from_file_1	ELSE,0:SWITCH,0:IF,2:functions,0:CALL,3:FOR,0:WHILE,0:DO,0	28
0x40026f3	              0x55	                                push rbp	       941	dir.c	FUNCTION_33
0x40026f4	              0x53	                                push rbx	       941	dir.c	FUNCTION_33
0x40026f5	        0x4883ec08	                              sub rsp, 8	       941	dir.c	FUNCTION_33
0x40026f9	          0x4889f3	                            mov rbx, rsi	       941	dir.c	FUNCTION_33
0x40026fc	          0x4889d5	                            mov rbp, rdx	       941	dir.c	FUNCTION_33
0x40026ff	    0x4883bf880000	               cmp qword [rdi + 0x88], 0	       948	dir.c	FUNCTION_33	IF_1
0x4002707	            0x7507	                           jne 0x4002710	       948	dir.c	FUNCTION_33	IF_1
0x4002709	    0x838708010000	              add dword [rdi + 0x108], 1	       949	dir.c	FUNCTION_33	IF_1
0x4002710	          0x4889da	                            mov rdx, rbx	       950	dir.c	FUNCTION_33	CALL_1
0x4002713	      0xbe02000000	                              mov esi, 2	       950	dir.c	FUNCTION_33	CALL_1
0x4002718	      0xe800000000	                          call 0x400271d	       950	dir.c	FUNCTION_33	CALL_1
0x400271d	          0x4989e9	                             mov r9, rbp	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x4002720	    0x41b800000000	                              mov r8d, 0	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x4002726	          0x4889c1	                            mov rcx, rax	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x4002729	      0xba00000000	                              mov edx, 0	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x400272e	      0xbe00000000	                              mov esi, 0	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x4002733	          0x4889df	                            mov rdi, rbx	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x4002736	      0xe830fbffff	                   call sym.add_excludes	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x400273b	            0x85c0	                           test eax, eax	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x400273d	            0x7912	                           jns 0x4002751	       951	dir.c	FUNCTION_33	IF_2	CALL_2
0x400273f	          0x4889de	                            mov rsi, rbx	       952	dir.c	FUNCTION_33	CALL_3
0x4002742	      0xbf00000000	                              mov edi, 0	       952	dir.c	FUNCTION_33	CALL_3
0x4002747	      0xb800000000	                              mov eax, 0	       952	dir.c	FUNCTION_33	CALL_3
0x400274c	      0xe800000000	                          call 0x4002751	       952	dir.c	FUNCTION_33	CALL_3
0x4002751	        0x4883c408	                              add rsp, 8	       953	dir.c	FUNCTION_33
0x4002755	              0x5b	                                 pop rbx	       953	dir.c	FUNCTION_33
0x4002756	              0x5d	                                 pop rbp	       953	dir.c	FUNCTION_33
0x4002757	              0xc3	                                     ret	       953	dir.c	FUNCTION_33
add_exclude	ELSE,1:SWITCH,0:IF,1:functions,0:CALL,2:FOR,0:WHILE,0:DO,0	107
0x4001fa4	            0x4157	                                push r15	       630	dir.c	FUNCTION_20
0x4001fa6	            0x4156	                                push r14	       630	dir.c	FUNCTION_20
0x4001fa8	            0x4155	                                push r13	       630	dir.c	FUNCTION_20
0x4001faa	            0x4154	                                push r12	       630	dir.c	FUNCTION_20
0x4001fac	              0x55	                                push rbp	       630	dir.c	FUNCTION_20
0x4001fad	              0x53	                                push rbx	       630	dir.c	FUNCTION_20
0x4001fae	        0x4883ec38	                           sub rsp, 0x38	       630	dir.c	FUNCTION_20
0x4001fb2	      0x48897c2408	                mov qword [rsp + 8], rdi	       630	dir.c	FUNCTION_20
0x4001fb7	          0x4989f7	                            mov r15, rsi	       630	dir.c	FUNCTION_20
0x4001fba	          0x4189d6	                           mov r14d, edx	       630	dir.c	FUNCTION_20
0x4001fbd	          0x4889cd	                            mov rbp, rcx	       630	dir.c	FUNCTION_20
0x4001fc0	      0x4489442404	                mov dword [rsp + 4], r8d	       630	dir.c	FUNCTION_20
0x4001fc5	    0x64488b042528	                mov rax, qword fs:[0x28]	       630	dir.c	FUNCTION_20
0x4001fce	      0x4889442428	             mov qword [rsp + 0x28], rax	       630	dir.c	FUNCTION_20
0x4001fd3	            0x31c0	                            xor eax, eax	       630	dir.c	FUNCTION_20
0x4001fd5	      0x488d4c2424	                   lea rcx, [rsp + 0x24]	       636	dir.c	FUNCTION_20	CALL_1
0x4001fda	      0x488d542420	                   lea rdx, [rsp + 0x20]	       636	dir.c	FUNCTION_20	CALL_1
0x4001fdf	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	       636	dir.c	FUNCTION_20	CALL_1
0x4001fe4	      0x488d7c2408	                      lea rdi, [rsp + 8]	       636	dir.c	FUNCTION_20	CALL_1
0x4001fe9	      0xe800000000	                          call 0x4001fee	       636	dir.c	FUNCTION_20	CALL_1
0x4001fee	      0xf644242008	               test byte [rsp + 0x20], 8	       637	dir.c	FUNCTION_20	IF_1
0x4001ff3	            0x746f	                            je 0x4002064	       637	dir.c	FUNCTION_20	IF_1
0x4001ff5	      0x4c6364241c	         movsxd r12, dword [rsp + 0x1c] 	       638	dir.c	FUNCTION_20	IF_1
0x4001ffa	        0x4983fccf	             cmp r12, 0xffffffffffffffcf	       785	git-compat-util.h	FUNCTION_170	IF_1
0x4001ffe	            0x7617	                           jbe 0x4002017	       785	git-compat-util.h	FUNCTION_170	IF_1
0x4002000	          0x4c89e2	                            mov rdx, r12	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4002003	      0xbe30000000	                           mov esi, 0x30	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4002008	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x400200d	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4002012	      0xe800000000	                          call 0x4002017	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4002017	        0x4983fccf	             cmp r12, 0xffffffffffffffcf	       785	git-compat-util.h	FUNCTION_170	IF_1
0x400201b	            0x751b	                           jne 0x4002038	       785	git-compat-util.h	FUNCTION_170	IF_1
0x400201d	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4002022	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4002029	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x400202e	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4002033	      0xe800000000	                          call 0x4002038	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4002038	      0x498d742431	                   lea rsi, [r12 + 0x31]	       638	dir.c	FUNCTION_20	IF_1
0x400203d	      0xbf01000000	                              mov edi, 1	       638	dir.c	FUNCTION_20	IF_1
0x4002042	      0xe800000000	                          call 0x4002047	       638	dir.c	FUNCTION_20	IF_1
0x4002047	          0x4889c3	                            mov rbx, rax	       638	dir.c	FUNCTION_20	IF_1
0x400204a	        0x4c8d6830	                   lea r13, [rax + 0x30]	       638	dir.c	FUNCTION_20	IF_1
0x400204e	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_107	CALL_3
0x4002051	      0x488b742408	                mov rsi, qword [rsp + 8]	        53	string3.h	FUNCTION_107	CALL_3
0x4002056	          0x4c89ef	                            mov rdi, r13	        53	string3.h	FUNCTION_107	CALL_3
0x4002059	      0xe800000000	                          call 0x400205e	        53	string3.h	FUNCTION_107	CALL_3
0x400205e	        0x4c896b08	                mov qword [rbx + 8], r13	       638	dir.c	FUNCTION_20	IF_1
0x4002062	            0xeb16	                           jmp 0x400207a	       638	dir.c	FUNCTION_20	IF_1
0x4002064	      0xbf30000000	                           mov edi, 0x30	       640	dir.c	FUNCTION_20	ELSE_1	CALL_2
0x4002069	      0xe800000000	                          call 0x400206e	       640	dir.c	FUNCTION_20	ELSE_1	CALL_2
0x400206e	          0x4889c3	                            mov rbx, rax	       640	dir.c	FUNCTION_20	ELSE_1	CALL_2
0x4002071	      0x488b442408	                mov rax, qword [rsp + 8]	       641	dir.c	FUNCTION_20	ELSE_1
0x4002076	        0x48894308	                mov qword [rbx + 8], rax	       641	dir.c	FUNCTION_20	ELSE_1
0x400207a	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       643	dir.c	FUNCTION_20
0x400207e	          0x894310	             mov dword [rbx + 0x10], eax	       643	dir.c	FUNCTION_20
0x4002081	        0x8b442424	            mov eax, dword [rsp + 0x24] 	       644	dir.c	FUNCTION_20
0x4002085	          0x894314	             mov dword [rbx + 0x14], eax	       644	dir.c	FUNCTION_20
0x4002088	        0x4c897b18	             mov qword [rbx + 0x18], r15	       645	dir.c	FUNCTION_20
0x400208c	        0x44897320	            mov dword [rbx + 0x20], r14d	       646	dir.c	FUNCTION_20
0x4002090	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       647	dir.c	FUNCTION_20
0x4002094	          0x894324	             mov dword [rbx + 0x24], eax	       647	dir.c	FUNCTION_20
0x4002097	        0x8b442404	                mov eax, dword [rsp + 4]	       648	dir.c	FUNCTION_20
0x400209b	          0x894328	             mov dword [rbx + 0x28], eax	       648	dir.c	FUNCTION_20
0x400209e	          0x8b4500	                    mov eax, dword [rbp]	       649	dir.c	FUNCTION_20
0x40020a1	          0x8d5001	                      lea edx, [rax + 1]	       649	dir.c	FUNCTION_20
0x40020a4	          0x8b4504	                mov eax, dword [rbp + 4]	       649	dir.c	FUNCTION_20
0x40020a7	            0x39c2	                            cmp edx, eax	       649	dir.c	FUNCTION_20
0x40020a9	            0x7e50	                           jle 0x40020fb	       649	dir.c	FUNCTION_20
0x40020ab	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	       649	dir.c	FUNCTION_20
0x40020af	            0x89c6	                            mov esi, eax	       649	dir.c	FUNCTION_20
0x40020b1	          0xc1ee1f	                           shr esi, 0x1f	       649	dir.c	FUNCTION_20
0x40020b4	             0x1c6	                            add esi, eax	       649	dir.c	FUNCTION_20
0x40020b6	            0xd1fe	                              sar esi, 1	       649	dir.c	FUNCTION_20
0x40020b8	            0x39f2	                            cmp edx, esi	       649	dir.c	FUNCTION_20
0x40020ba	           0xf4ff2	                          cmovg esi, edx	       649	dir.c	FUNCTION_20
0x40020bd	          0x897504	                mov dword [rbp + 4], esi	       649	dir.c	FUNCTION_20
0x40020c0	          0x4863d6	                         movsxd rdx, esi	       649	dir.c	FUNCTION_20
0x40020c3	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_171	IF_1
0x40020cd	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_171	IF_1
0x40020d0	            0x7614	                           jbe 0x40020e6	       795	git-compat-util.h	FUNCTION_171	IF_1
0x40020d2	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_171	IF_1	CALL_1
0x40020d7	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_171	IF_1	CALL_1
0x40020dc	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_171	IF_1	CALL_1
0x40020e1	      0xe800000000	                          call 0x40020e6	       796	git-compat-util.h	FUNCTION_171	IF_1	CALL_1
0x40020e6	    0x488d34d50000	                        lea rsi, [rdx*8]	       649	dir.c	FUNCTION_20
0x40020ee	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       649	dir.c	FUNCTION_20
0x40020f2	      0xe800000000	                          call 0x40020f7	       649	dir.c	FUNCTION_20
0x40020f7	        0x48894518	            mov qword [rbp + 0x18], rax 	       649	dir.c	FUNCTION_20
0x40020fb	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	       650	dir.c	FUNCTION_20
0x40020ff	          0x8b4500	                    mov eax, dword [rbp]	       650	dir.c	FUNCTION_20
0x4002102	          0x8d4801	                      lea ecx, [rax + 1]	       650	dir.c	FUNCTION_20
0x4002105	          0x894d00	                    mov dword [rbp], ecx	       650	dir.c	FUNCTION_20
0x4002108	            0x4898	                                    cdqe	       650	dir.c	FUNCTION_20
0x400210a	        0x48891cc2	            mov qword [rdx + rax*8], rbx	       650	dir.c	FUNCTION_20
0x400210e	          0x48892b	                    mov qword [rbx], rbp	       651	dir.c	FUNCTION_20
0x4002111	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       652	dir.c	FUNCTION_20
0x4002116	    0x644833042528	                xor rax, qword fs:[0x28]	       652	dir.c	FUNCTION_20
0x400211f	            0x7405	                            je 0x4002126	       652	dir.c	FUNCTION_20
0x4002121	      0xe800000000	                          call 0x4002126	       652	dir.c	FUNCTION_20
0x4002126	        0x4883c438	                           add rsp, 0x38	       652	dir.c	FUNCTION_20
0x400212a	              0x5b	                                 pop rbx	       652	dir.c	FUNCTION_20
0x400212b	              0x5d	                                 pop rbp	       652	dir.c	FUNCTION_20
0x400212c	            0x415c	                                 pop r12	       652	dir.c	FUNCTION_20
0x400212e	            0x415d	                                 pop r13	       652	dir.c	FUNCTION_20
0x4002130	            0x415e	                                 pop r14	       652	dir.c	FUNCTION_20
0x4002132	            0x415f	                                 pop r15	       652	dir.c	FUNCTION_20
0x4002134	              0xc3	                                     ret	       652	dir.c	FUNCTION_20
clear_exclude_list	ELSE,0:SWITCH,0:IF,0:functions,0:CALL,4:FOR,1:WHILE,0:DO,0	26
0x400255e	              0x55	                                push rbp	       676	dir.c	FUNCTION_22
0x400255f	              0x53	                                push rbx	       676	dir.c	FUNCTION_22
0x4002560	        0x4883ec08	                              sub rsp, 8	       676	dir.c	FUNCTION_22
0x4002564	          0x4889fd	                            mov rbp, rdi	       676	dir.c	FUNCTION_22
0x4002567	          0x833f00	                      cmp dword [rdi], 0	       679	dir.c	FUNCTION_22	FOR_1
0x400256a	            0x7e1d	                           jle 0x4002589	       679	dir.c	FUNCTION_22	FOR_1
0x400256c	      0xbb00000000	                              mov ebx, 0	       679	dir.c	FUNCTION_22	FOR_1
0x4002571	          0x4863d3	                         movsxd rdx, ebx	       680	dir.c	FUNCTION_22	CALL_1
0x4002574	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       680	dir.c	FUNCTION_22	CALL_1
0x4002578	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	       680	dir.c	FUNCTION_22	CALL_1
0x400257c	      0xe800000000	                          call 0x4002581	       680	dir.c	FUNCTION_22	CALL_1
0x4002581	          0x83c301	                              add ebx, 1	       679	dir.c	FUNCTION_22	FOR_1
0x4002584	          0x395d00	                    cmp dword [rbp], ebx	       679	dir.c	FUNCTION_22	FOR_1
0x4002587	            0x7fe8	                            jg 0x4002571	       679	dir.c	FUNCTION_22	FOR_1
0x4002589	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       681	dir.c	FUNCTION_22	CALL_2
0x400258d	      0xe800000000	                          call 0x4002592	       681	dir.c	FUNCTION_22	CALL_2
0x4002592	        0x488b7d08	                mov rdi, qword [rbp + 8]	       682	dir.c	FUNCTION_22	CALL_3
0x4002596	      0xe800000000	                          call 0x400259b	       682	dir.c	FUNCTION_22	CALL_3
0x400259b	    0x48c745000000	                      mov qword [rbp], 0	        90	string3.h	FUNCTION_110	CALL_6
0x40025a3	    0x48c745080000	                  mov qword [rbp + 8], 0	        90	string3.h	FUNCTION_110	CALL_6
0x40025ab	    0x48c745100000	               mov qword [rbp + 0x10], 0	        90	string3.h	FUNCTION_110	CALL_6
0x40025b3	    0x48c745180000	               mov qword [rbp + 0x18], 0	        90	string3.h	FUNCTION_110	CALL_6
0x40025bb	        0x4883c408	                              add rsp, 8	       685	dir.c	FUNCTION_22
0x40025bf	              0x5b	                                 pop rbx	       685	dir.c	FUNCTION_22
0x40025c0	              0x5d	                                 pop rbp	       685	dir.c	FUNCTION_22
0x40025c1	              0xc3	                                     ret	       685	dir.c	FUNCTION_22
write_untracked_extension	ELSE,0:SWITCH,0:IF,1:functions,0:CALL,33:FOR,0:WHILE,0:DO,0	172
0x4004ad7	            0x4156	                                push r14	      2653	dir.c	FUNCTION_85
0x4004ad9	            0x4155	                                push r13	      2653	dir.c	FUNCTION_85
0x4004adb	            0x4154	                                push r12	      2653	dir.c	FUNCTION_85
0x4004add	              0x55	                                push rbp	      2653	dir.c	FUNCTION_85
0x4004ade	              0x53	                                push rbx	      2653	dir.c	FUNCTION_85
0x4004adf	    0x4881ec900000	                           sub rsp, 0x90	      2653	dir.c	FUNCTION_85
0x4004ae6	          0x4889fb	                            mov rbx, rdi	      2653	dir.c	FUNCTION_85
0x4004ae9	    0x64488b042528	                mov rax, qword fs:[0x28]	      2653	dir.c	FUNCTION_85
0x4004af2	    0x488984248800	             mov qword [rsp + 0x88], rax	      2653	dir.c	FUNCTION_85
0x4004afa	            0x31c0	                            xor eax, eax	      2653	dir.c	FUNCTION_85
0x4004afc	        0x488b7e78	            mov rdi, qword [rsi + 0x78] 	      2658	dir.c	FUNCTION_85	CALL_1
0x4004b00	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2658	dir.c	FUNCTION_85	CALL_1
0x4004b07	            0xf2ae	              repne scasb al, byte [rdi]	      2658	dir.c	FUNCTION_85	CALL_1
0x4004b09	          0x48f7d1	                                 not rcx	      2658	dir.c	FUNCTION_85	CALL_1
0x4004b0c	        0x4c8d61ff	                      lea r12, [rcx - 1]	      2658	dir.c	FUNCTION_85	CALL_1
0x4004b10	        0x4983fc8b	             cmp r12, 0xffffffffffffff8b	       785	git-compat-util.h	FUNCTION_170	IF_1
0x4004b14	            0x7612	                           jbe 0x4004b28	       785	git-compat-util.h	FUNCTION_170	IF_1
0x4004b16	          0x4c89e2	                            mov rdx, r12	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4004b19	      0xbe74000000	                           mov esi, 0x74	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4004b1e	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4004b23	      0xe800000000	                          call 0x4004b28	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4004b28	          0x4889f5	                            mov rbp, rsi	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4004b2b	        0x4983fc8b	             cmp r12, 0xffffffffffffff8b	       785	git-compat-util.h	FUNCTION_170	IF_1
0x4004b2f	            0x751b	                           jne 0x4004b4c	       785	git-compat-util.h	FUNCTION_170	IF_1
0x4004b31	      0xba01000000	                              mov edx, 1	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4004b36	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4004b3d	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4004b42	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4004b47	      0xe800000000	                          call 0x4004b4c	       786	git-compat-util.h	FUNCTION_170	IF_1	CALL_1
0x4004b4c	      0x4d8d742475	                   lea r14, [r12 + 0x75]	       788	git-compat-util.h	FUNCTION_170
0x4004b51	          0x4c89f6	                            mov rsi, r14	      2660	dir.c	FUNCTION_85
0x4004b54	      0xbf01000000	                              mov edi, 1	      2660	dir.c	FUNCTION_85
0x4004b59	      0xe800000000	                          call 0x4004b5e	      2660	dir.c	FUNCTION_85
0x4004b5e	          0x4989c5	                            mov r13, rax	      2660	dir.c	FUNCTION_85
0x4004b61	        0x488d7874	                   lea rdi, [rax + 0x74]	        53	string3.h	FUNCTION_107	CALL_3
0x4004b65	        0x488b7578	            mov rsi, qword [rbp + 0x78] 	        53	string3.h	FUNCTION_107	CALL_3
0x4004b69	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_107	CALL_3
0x4004b6c	      0xe800000000	                          call 0x4004b71	        53	string3.h	FUNCTION_107	CALL_3
0x4004b71	          0x4889ee	                            mov rsi, rbp	      2661	dir.c	FUNCTION_85	CALL_2
0x4004b74	          0x4c89ef	                            mov rdi, r13	      2661	dir.c	FUNCTION_85	CALL_2
0x4004b77	      0xe85ab7ffff	              call sym.stat_data_to_disk	      2661	dir.c	FUNCTION_85	CALL_2
0x4004b7c	        0x488d753c	                   lea rsi, [rbp + 0x3c]	      2662	dir.c	FUNCTION_85	CALL_3
0x4004b80	        0x498d7d24	                   lea rdi, [r13 + 0x24]	      2662	dir.c	FUNCTION_85	CALL_3
0x4004b84	      0xe84db7ffff	              call sym.stat_data_to_disk	      2662	dir.c	FUNCTION_85	CALL_3
0x4004b89	        0x488b4d24	            mov rcx, qword [rbp + 0x24] 	        53	string3.h	FUNCTION_107	CALL_3
0x4004b8d	        0x49894d4c	             mov qword [r13 + 0x4c], rcx	        53	string3.h	FUNCTION_107	CALL_3
0x4004b91	        0x488b4d2c	            mov rcx, qword [rbp + 0x2c] 	        53	string3.h	FUNCTION_107	CALL_3
0x4004b95	        0x49894d54	             mov qword [r13 + 0x54], rcx	        53	string3.h	FUNCTION_107	CALL_3
0x4004b99	          0x8b5534	            mov edx, dword [rbp + 0x34] 	        53	string3.h	FUNCTION_107	CALL_3
0x4004b9c	        0x4189555c	             mov dword [r13 + 0x5c], edx	        53	string3.h	FUNCTION_107	CALL_3
0x4004ba0	        0x488b4d60	            mov rcx, qword [rbp + 0x60] 	        53	string3.h	FUNCTION_107	CALL_3
0x4004ba4	        0x49894d60	             mov qword [r13 + 0x60], rcx	        53	string3.h	FUNCTION_107	CALL_3
0x4004ba8	        0x488b4d68	            mov rcx, qword [rbp + 0x68] 	        53	string3.h	FUNCTION_107	CALL_3
0x4004bac	        0x49894d68	             mov qword [r13 + 0x68], rcx	        53	string3.h	FUNCTION_107	CALL_3
0x4004bb0	          0x8b5570	            mov edx, dword [rbp + 0x70] 	        53	string3.h	FUNCTION_107	CALL_3
0x4004bb3	        0x41895570	             mov dword [r13 + 0x70], edx	        53	string3.h	FUNCTION_107	CALL_3
0x4004bb7	    0x8b8598000000	            mov eax, dword [rbp + 0x98] 	        44	bswap.h	FUNCTION_191	CALL_3
0x4004bbd	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_191	CALL_3
0x4004bbf	        0x41894548	             mov dword [r13 + 0x48], eax	      2665	dir.c	FUNCTION_85
0x4004bc3	    0x488bbd880000	            mov rdi, qword [rbp + 0x88] 	      2667	dir.c	FUNCTION_85	CALL_6
0x4004bca	      0x488d742470	                   lea rsi, [rsp + 0x70]	      2667	dir.c	FUNCTION_85	CALL_6
0x4004bcf	      0xe800000000	                          call 0x4004bd4	      2667	dir.c	FUNCTION_85	CALL_6
0x4004bd4	          0x4863d0	                         movsxd rdx, eax	      2668	dir.c	FUNCTION_85	CALL_7
0x4004bd7	      0x488d742470	                   lea rsi, [rsp + 0x70]	      2668	dir.c	FUNCTION_85	CALL_7
0x4004bdc	          0x4889df	                            mov rdi, rbx	      2668	dir.c	FUNCTION_85	CALL_7
0x4004bdf	      0xe800000000	                          call 0x4004be4	      2668	dir.c	FUNCTION_85	CALL_7
0x4004be4	    0x488db5800000	                   lea rsi, [rbp + 0x80]	      2669	dir.c	FUNCTION_85	CALL_8
0x4004beb	          0x4889df	                            mov rdi, rbx	      2669	dir.c	FUNCTION_85	CALL_8
0x4004bee	      0xe800000000	                          call 0x4004bf3	      2669	dir.c	FUNCTION_85	CALL_8
0x4004bf3	          0x4c89f2	                            mov rdx, r14	      2671	dir.c	FUNCTION_85	CALL_9
0x4004bf6	          0x4c89ee	                            mov rsi, r13	      2671	dir.c	FUNCTION_85	CALL_9
0x4004bf9	          0x4889df	                            mov rdi, rbx	      2671	dir.c	FUNCTION_85	CALL_9
0x4004bfc	      0xe800000000	                          call 0x4004c01	      2671	dir.c	FUNCTION_85	CALL_9
0x4004c01	          0x4c89ef	                            mov rdi, r13	      2672	dir.c	FUNCTION_85
0x4004c04	      0xe800000000	                          call 0x4004c09	      2672	dir.c	FUNCTION_85
0x4004c09	    0x4883bda00000	               cmp qword [rbp + 0xa0], 0	      2674	dir.c	FUNCTION_85	IF_1
0x4004c11	            0x7524	                           jne 0x4004c37	      2674	dir.c	FUNCTION_85	IF_1
0x4004c13	      0x488d742470	                   lea rsi, [rsp + 0x70]	      2675	dir.c	FUNCTION_85	IF_1	CALL_10
0x4004c18	      0xbf00000000	                              mov edi, 0	      2675	dir.c	FUNCTION_85	IF_1	CALL_10
0x4004c1d	      0xe800000000	                          call 0x4004c22	      2675	dir.c	FUNCTION_85	IF_1	CALL_10
0x4004c22	          0x4863d0	                         movsxd rdx, eax	      2676	dir.c	FUNCTION_85	IF_1	CALL_11
0x4004c25	      0x488d742470	                   lea rsi, [rsp + 0x70]	      2676	dir.c	FUNCTION_85	IF_1	CALL_11
0x4004c2a	          0x4889df	                            mov rdi, rbx	      2676	dir.c	FUNCTION_85	IF_1	CALL_11
0x4004c2d	      0xe800000000	                          call 0x4004c32	      2676	dir.c	FUNCTION_85	IF_1	CALL_11
0x4004c32	      0xe94b010000	                           jmp 0x4004d82	      2676	dir.c	FUNCTION_85	IF_1	CALL_11
0x4004c37	    0xc70424000000	                      mov dword [rsp], 0	      2680	dir.c	FUNCTION_85
0x4004c3e	      0xe800000000	                          call 0x4004c43	      2681	dir.c	FUNCTION_85	CALL_12
0x4004c43	      0x4889442408	                mov qword [rsp + 8], rax	      2681	dir.c	FUNCTION_85	CALL_12
0x4004c48	      0xe800000000	                          call 0x4004c4d	      2682	dir.c	FUNCTION_85	CALL_13
0x4004c4d	      0x4889442410	             mov qword [rsp + 0x10], rax	      2682	dir.c	FUNCTION_85	CALL_13
0x4004c52	      0xe800000000	                          call 0x4004c57	      2683	dir.c	FUNCTION_85	CALL_14
0x4004c57	      0x4889442418	             mov qword [rsp + 0x18], rax	      2683	dir.c	FUNCTION_85	CALL_14
0x4004c5c	      0x4c8d742420	                   lea r14, [rsp + 0x20]	      2684	dir.c	FUNCTION_85	CALL_15
0x4004c61	      0xbe00040000	                          mov esi, 0x400	      2684	dir.c	FUNCTION_85	CALL_15
0x4004c66	          0x4c89f7	                            mov rdi, r14	      2684	dir.c	FUNCTION_85	CALL_15
0x4004c69	      0xe800000000	                          call 0x4004c6e	      2684	dir.c	FUNCTION_85	CALL_15
0x4004c6e	      0x4c8d6c2438	                   lea r13, [rsp + 0x38]	      2685	dir.c	FUNCTION_85	CALL_16
0x4004c73	      0xbe00040000	                          mov esi, 0x400	      2685	dir.c	FUNCTION_85	CALL_16
0x4004c78	          0x4c89ef	                            mov rdi, r13	      2685	dir.c	FUNCTION_85	CALL_16
0x4004c7b	      0xe800000000	                          call 0x4004c80	      2685	dir.c	FUNCTION_85	CALL_16
0x4004c80	      0x4c8d642450	                   lea r12, [rsp + 0x50]	      2686	dir.c	FUNCTION_85	CALL_17
0x4004c85	      0xbe00040000	                          mov esi, 0x400	      2686	dir.c	FUNCTION_85	CALL_17
0x4004c8a	          0x4c89e7	                            mov rdi, r12	      2686	dir.c	FUNCTION_85	CALL_17
0x4004c8d	      0xe800000000	                          call 0x4004c92	      2686	dir.c	FUNCTION_85	CALL_17
0x4004c92	    0x488bbda00000	            mov rdi, qword [rbp + 0xa0] 	      2687	dir.c	FUNCTION_85	CALL_18
0x4004c99	          0x4889e6	                            mov rsi, rsp	      2687	dir.c	FUNCTION_85	CALL_18
0x4004c9c	      0xe84abfffff	                  call sym.write_one_dir	      2687	dir.c	FUNCTION_85	CALL_18
0x4004ca1	        0x48633c24	                 movsxd rdi, dword [rsp]	      2689	dir.c	FUNCTION_85	CALL_19
0x4004ca5	      0x488d742470	                   lea rsi, [rsp + 0x70]	      2689	dir.c	FUNCTION_85	CALL_19
0x4004caa	      0xe800000000	                          call 0x4004caf	      2689	dir.c	FUNCTION_85	CALL_19
0x4004caf	          0x4863d0	                         movsxd rdx, eax	      2690	dir.c	FUNCTION_85	CALL_20
0x4004cb2	      0x488d742470	                   lea rsi, [rsp + 0x70]	      2690	dir.c	FUNCTION_85	CALL_20
0x4004cb7	          0x4889df	                            mov rdi, rbx	      2690	dir.c	FUNCTION_85	CALL_20
0x4004cba	      0xe800000000	                          call 0x4004cbf	      2690	dir.c	FUNCTION_85	CALL_20
0x4004cbf	          0x4c89f6	                            mov rsi, r14	      2691	dir.c	FUNCTION_85	CALL_21
0x4004cc2	          0x4889df	                            mov rdi, rbx	      2691	dir.c	FUNCTION_85	CALL_21
0x4004cc5	      0xe800000000	                          call 0x4004cca	      2691	dir.c	FUNCTION_85	CALL_21
0x4004cca	          0x4889de	                            mov rsi, rbx	      2692	dir.c	FUNCTION_85	CALL_22
0x4004ccd	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2692	dir.c	FUNCTION_85	CALL_22
0x4004cd2	      0xe800000000	                          call 0x4004cd7	      2692	dir.c	FUNCTION_85	CALL_22
0x4004cd7	          0x4889de	                            mov rsi, rbx	      2693	dir.c	FUNCTION_85	CALL_23
0x4004cda	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2693	dir.c	FUNCTION_85	CALL_23
0x4004cdf	      0xe800000000	                          call 0x4004ce4	      2693	dir.c	FUNCTION_85	CALL_23
0x4004ce4	          0x4889de	                            mov rsi, rbx	      2694	dir.c	FUNCTION_85	CALL_24
0x4004ce7	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2694	dir.c	FUNCTION_85	CALL_24
0x4004cec	      0xe800000000	                          call 0x4004cf1	      2694	dir.c	FUNCTION_85	CALL_24
0x4004cf1	          0x4c89ee	                            mov rsi, r13	      2695	dir.c	FUNCTION_85	CALL_25
0x4004cf4	          0x4889df	                            mov rdi, rbx	      2695	dir.c	FUNCTION_85	CALL_25
0x4004cf7	      0xe800000000	                          call 0x4004cfc	      2695	dir.c	FUNCTION_85	CALL_25
0x4004cfc	          0x4c89e6	                            mov rsi, r12	      2696	dir.c	FUNCTION_85	CALL_26
0x4004cff	          0x4889df	                            mov rdi, rbx	      2696	dir.c	FUNCTION_85	CALL_26
0x4004d02	      0xe800000000	                          call 0x4004d07	      2696	dir.c	FUNCTION_85	CALL_26
0x4004d07	          0x488b03	                    mov rax, qword [rbx]	       141	strbuf.h	FUNCTION_147
0x4004d0a	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_147
0x4004d0d	            0x740a	                            je 0x4004d19	       141	strbuf.h	FUNCTION_147
0x4004d0f	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_149	IF_1	CALL_1
0x4004d13	        0x483b4308	                cmp rax, qword [rbx + 8]	       227	strbuf.h	FUNCTION_149	IF_1	CALL_1
0x4004d17	            0x750d	                           jne 0x4004d26	       227	strbuf.h	FUNCTION_149	IF_1	CALL_1
0x4004d19	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_149	CALL_2
0x4004d1e	          0x4889df	                            mov rdi, rbx	       228	strbuf.h	FUNCTION_149	CALL_2
0x4004d21	      0xe800000000	                          call 0x4004d26	       228	strbuf.h	FUNCTION_149	CALL_2
0x4004d26	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       229	strbuf.h	FUNCTION_149
0x4004d2a	        0x488b4308	                mov rax, qword [rbx + 8]	       229	strbuf.h	FUNCTION_149
0x4004d2e	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_149
0x4004d32	        0x48894b08	                mov qword [rbx + 8], rcx	       229	strbuf.h	FUNCTION_149
0x4004d36	        0xc6040200	                 mov byte [rdx + rax], 0	       229	strbuf.h	FUNCTION_149
0x4004d3a	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       230	strbuf.h	FUNCTION_149
0x4004d3e	        0x488b4308	                mov rax, qword [rbx + 8]	       230	strbuf.h	FUNCTION_149
0x4004d42	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_149
0x4004d46	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2699	dir.c	FUNCTION_85	CALL_28
0x4004d4b	      0xe800000000	                          call 0x4004d50	      2699	dir.c	FUNCTION_85	CALL_28
0x4004d50	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2700	dir.c	FUNCTION_85	CALL_29
0x4004d55	      0xe800000000	                          call 0x4004d5a	      2700	dir.c	FUNCTION_85	CALL_29
0x4004d5a	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2701	dir.c	FUNCTION_85	CALL_30
0x4004d5f	      0xe800000000	                          call 0x4004d64	      2701	dir.c	FUNCTION_85	CALL_30
0x4004d64	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2702	dir.c	FUNCTION_85	CALL_31
0x4004d69	      0xe800000000	                          call 0x4004d6e	      2702	dir.c	FUNCTION_85	CALL_31
0x4004d6e	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	      2703	dir.c	FUNCTION_85	CALL_32
0x4004d73	      0xe800000000	                          call 0x4004d78	      2703	dir.c	FUNCTION_85	CALL_32
0x4004d78	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      2704	dir.c	FUNCTION_85	CALL_33
0x4004d7d	      0xe800000000	                          call 0x4004d82	      2704	dir.c	FUNCTION_85	CALL_33
0x4004d82	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      2705	dir.c	FUNCTION_85
0x4004d8a	    0x644833042528	                xor rax, qword fs:[0x28]	      2705	dir.c	FUNCTION_85
0x4004d93	            0x7405	                            je 0x4004d9a	      2705	dir.c	FUNCTION_85
0x4004d95	      0xe800000000	                          call 0x4004d9a	      2705	dir.c	FUNCTION_85
0x4004d9a	    0x4881c4900000	                           add rsp, 0x90	      2705	dir.c	FUNCTION_85
0x4004da1	              0x5b	                                 pop rbx	      2705	dir.c	FUNCTION_85
0x4004da2	              0x5d	                                 pop rbp	      2705	dir.c	FUNCTION_85
0x4004da3	            0x415c	                                 pop r12	      2705	dir.c	FUNCTION_85
0x4004da5	            0x415d	                                 pop r13	      2705	dir.c	FUNCTION_85
0x4004da7	            0x415e	                                 pop r14	      2705	dir.c	FUNCTION_85
0x4004da9	              0xc3	                                     ret	      2705	dir.c	FUNCTION_85
add_excludes_from_buffer	ELSE,0:SWITCH,0:IF,3:functions,0:CALL,3:FOR,1:WHILE,0:DO,0	95
0x4002135	            0x4157	                                push r15	       873	dir.c	FUNCTION_29
0x4002137	            0x4156	                                push r14	       873	dir.c	FUNCTION_29
0x4002139	            0x4155	                                push r13	       873	dir.c	FUNCTION_29
0x400213b	            0x4154	                                push r12	       873	dir.c	FUNCTION_29
0x400213d	              0x55	                                push rbp	       873	dir.c	FUNCTION_29
0x400213e	              0x53	                                push rbx	       873	dir.c	FUNCTION_29
0x400213f	        0x4883ec18	                           sub rsp, 0x18	       873	dir.c	FUNCTION_29
0x4002143	      0x48897c2408	                mov qword [rsp + 8], rdi	       873	dir.c	FUNCTION_29
0x4002148	          0x4989f4	                            mov r12, rsi	       873	dir.c	FUNCTION_29
0x400214b	        0x48891424	                    mov qword [rsp], rdx	       873	dir.c	FUNCTION_29
0x400214f	          0x4189cf	                           mov r15d, ecx	       873	dir.c	FUNCTION_29
0x4002152	          0x4d89c6	                             mov r14, r8	       873	dir.c	FUNCTION_29
0x4002155	        0x49897808	                 mov qword [r8 + 8], rdi	       877	dir.c	FUNCTION_29
0x4002159	      0x488d7c2408	                      lea rdi, [rsp + 8]	       879	dir.c	FUNCTION_29	IF_1	CALL_1
0x400215e	      0xe800000000	                          call 0x4002163	       879	dir.c	FUNCTION_29	IF_1	CALL_1
0x4002163	            0x85c0	                           test eax, eax	       879	dir.c	FUNCTION_29	IF_1	CALL_1
0x4002165	            0x740c	                            je 0x4002173	       879	dir.c	FUNCTION_29	IF_1	CALL_1
0x4002167	      0x488b442408	                mov rax, qword [rsp + 8]	       880	dir.c	FUNCTION_29	IF_1
0x400216c	        0x492b4608	                sub rax, qword [r14 + 8]	       880	dir.c	FUNCTION_29	IF_1
0x4002170	          0x4929c4	                            sub r12, rax	       880	dir.c	FUNCTION_29	IF_1
0x4002173	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       882	dir.c	FUNCTION_29
0x4002178	          0x4d85e4	                           test r12, r12	       884	dir.c	FUNCTION_29	FOR_1
0x400217b	     0xf84d6000000	                            je 0x4002257	       884	dir.c	FUNCTION_29	FOR_1
0x4002181	      0xbb00000000	                              mov ebx, 0	       884	dir.c	FUNCTION_29	FOR_1
0x4002186	    0x41bd01000000	                             mov r13d, 1	       884	dir.c	FUNCTION_29	FOR_1
0x400218c	      0xbd00000000	                              mov ebp, 0	       884	dir.c	FUNCTION_29	FOR_1
0x4002191	      0x488b542408	                mov rdx, qword [rsp + 8]	       885	dir.c	FUNCTION_29	FOR_1	IF_2
0x4002196	        0x488d041a	                    lea rax, [rdx + rbx]	       885	dir.c	FUNCTION_29	FOR_1	IF_2
0x400219a	          0x80380a	                     cmp byte [rax], 0xa	       885	dir.c	FUNCTION_29	FOR_1	IF_2
0x400219d	     0xf85a5000000	                           jne 0x4002248	       885	dir.c	FUNCTION_29	FOR_1	IF_2
0x40021a3	          0x4839f8	                            cmp rax, rdi	       886	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40021a6	     0xf848e000000	                            je 0x400223a	       886	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40021ac	          0x803f23	                    cmp byte [rdi], 0x23	       886	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40021af	     0xf8485000000	                            je 0x400223a	       886	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40021b5	      0xb800000000	                              mov eax, 0	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40021ba	            0x85ed	                           test ebp, ebp	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40021bc	            0x740b	                            je 0x40021c9	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40021be	      0x807c1aff0d	          cmp byte [rdx + rbx - 1], 0xd 	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40021c3	           0xf94c0	                                 sete al	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40021c6	           0xfb6c0	                           movzx eax, al	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40021c9	            0x89ee	                            mov esi, ebp	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40021cb	            0x29c6	                            sub esi, eax	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40021cd	            0x89f0	                            mov eax, esi	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40021cf	            0x4898	                                    cdqe	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40021d1	        0xc6040200	                 mov byte [rdx + rax], 0	       887	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3
0x40021d5	           0xfb607	                   movzx eax, byte [rdi]	       691	dir.c	FUNCTION_23	FOR_1
0x40021d8	            0x84c0	                             test al, al	       691	dir.c	FUNCTION_23	FOR_1
0x40021da	            0x744c	                            je 0x4002228	       691	dir.c	FUNCTION_23	FOR_1
0x40021dc	          0x4889fa	                            mov rdx, rdi	       691	dir.c	FUNCTION_23	FOR_1
0x40021df	      0xb900000000	                              mov ecx, 0	       691	dir.c	FUNCTION_23	FOR_1
0x40021e4	            0x3c20	                            cmp al, 0x20	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x40021e6	            0x7406	                            je 0x40021ee	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x40021e8	            0x3c5c	                            cmp al, 0x5c	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x40021ea	            0x740f	                            je 0x40021fb	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x40021ec	            0xeb1e	                           jmp 0x400220c	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x40021ee	          0x4889d0	                            mov rax, rdx	       694	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x40021f1	          0x4885c9	                           test rcx, rcx	       694	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x40021f4	            0x751e	                           jne 0x4002214	       694	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x40021f6	          0x4889d1	                            mov rcx, rdx	       694	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x40021f9	            0xeb19	                           jmp 0x4002214	       694	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_1
0x40021fb	        0x488d4201	                      lea rax, [rdx + 1]	       698	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x40021ff	        0x807a0100	                   cmp byte [rdx + 1], 0	       699	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_2
0x4002203	            0x7423	                            je 0x4002228	       699	dir.c	FUNCTION_23	FOR_1	SWITCH_1	IF_2
0x4002205	      0xb900000000	                              mov ecx, 0	       703	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x400220a	            0xeb08	                           jmp 0x4002214	       703	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x400220c	          0x4889d0	                            mov rax, rdx	       692	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x400220f	      0xb900000000	                              mov ecx, 0	       703	dir.c	FUNCTION_23	FOR_1	SWITCH_1
0x4002214	        0x488d5001	                      lea rdx, [rax + 1]	       691	dir.c	FUNCTION_23	FOR_1
0x4002218	         0xfb64001	               movzx eax, byte [rax + 1]	       691	dir.c	FUNCTION_23	FOR_1
0x400221c	            0x84c0	                             test al, al	       691	dir.c	FUNCTION_23	FOR_1
0x400221e	            0x75c4	                           jne 0x40021e4	       691	dir.c	FUNCTION_23	FOR_1
0x4002220	          0x4885c9	                           test rcx, rcx	       706	dir.c	FUNCTION_23	IF_3
0x4002223	            0x7403	                            je 0x4002228	       706	dir.c	FUNCTION_23	IF_3
0x4002225	          0xc60100	                       mov byte [rcx], 0	       707	dir.c	FUNCTION_23	IF_3
0x4002228	          0x4589e8	                           mov r8d, r13d	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x400222b	          0x4c89f1	                            mov rcx, r14	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x400222e	          0x4489fa	                           mov edx, r15d	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x4002231	        0x488b3424	                    mov rsi, qword [rsp]	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x4002235	      0xe800000000	                          call 0x400223a	       889	dir.c	FUNCTION_29	FOR_1	IF_2	IF_3	CALL_3
0x400223a	        0x4183c501	                             add r13d, 1	       891	dir.c	FUNCTION_29	FOR_1	IF_2
0x400223e	      0x488b442408	                mov rax, qword [rsp + 8]	       892	dir.c	FUNCTION_29	FOR_1	IF_2
0x4002243	      0x488d7c1801	                lea rdi, [rax + rbx + 1]	       892	dir.c	FUNCTION_29	FOR_1	IF_2
0x4002248	          0x83c501	                              add ebp, 1	       884	dir.c	FUNCTION_29	FOR_1
0x400224b	          0x4863dd	                         movsxd rbx, ebp	       884	dir.c	FUNCTION_29	FOR_1
0x400224e	          0x4939dc	                            cmp r12, rbx	       884	dir.c	FUNCTION_29	FOR_1
0x4002251	     0xf873affffff	                            ja 0x4002191	       884	dir.c	FUNCTION_29	FOR_1
0x4002257	      0xb800000000	                              mov eax, 0	       896	dir.c	FUNCTION_29
0x400225c	        0x4883c418	                           add rsp, 0x18	       896	dir.c	FUNCTION_29
0x4002260	              0x5b	                                 pop rbx	       896	dir.c	FUNCTION_29
0x4002261	              0x5d	                                 pop rbp	       896	dir.c	FUNCTION_29
0x4002262	            0x415c	                                 pop r12	       896	dir.c	FUNCTION_29
0x4002264	            0x415d	                                 pop r13	       896	dir.c	FUNCTION_29
0x4002266	            0x415e	                                 pop r14	       896	dir.c	FUNCTION_29
0x4002268	            0x415f	                                 pop r15	       896	dir.c	FUNCTION_29
0x400226a	              0xc3	                                     ret	       896	dir.c	FUNCTION_29
invalidate_one_component	ELSE,0:SWITCH,0:IF,2:functions,0:CALL,5:FOR,0:WHILE,0:DO,0	50
0x4001559	            0x4157	                                push r15	      2972	dir.c	FUNCTION_96
0x400155b	            0x4156	                                push r14	      2972	dir.c	FUNCTION_96
0x400155d	            0x4155	                                push r13	      2972	dir.c	FUNCTION_96
0x400155f	            0x4154	                                push r12	      2972	dir.c	FUNCTION_96
0x4001561	              0x55	                                push rbp	      2972	dir.c	FUNCTION_96
0x4001562	              0x53	                                push rbx	      2972	dir.c	FUNCTION_96
0x4001563	        0x4883ec08	                              sub rsp, 8	      2972	dir.c	FUNCTION_96
0x4001567	          0x4989fc	                            mov r12, rdi	      2972	dir.c	FUNCTION_96
0x400156a	          0x4989f5	                            mov r13, rsi	      2972	dir.c	FUNCTION_96
0x400156d	          0x4989d7	                            mov r15, rdx	      2972	dir.c	FUNCTION_96
0x4001570	          0x4189ce	                           mov r14d, ecx	      2972	dir.c	FUNCTION_96
0x4001573	      0xbe2f000000	                           mov esi, 0x2f	      2973	dir.c	FUNCTION_96	CALL_1
0x4001578	          0x4889d7	                            mov rdi, rdx	      2973	dir.c	FUNCTION_96	CALL_1
0x400157b	      0xe800000000	                          call 0x4001580	      2973	dir.c	FUNCTION_96	CALL_1
0x4001580	          0x4885c0	                           test rax, rax	      2975	dir.c	FUNCTION_96	IF_1
0x4001583	            0x744c	                            je 0x40015d1	      2975	dir.c	FUNCTION_96	IF_1
0x4001585	          0x4889c3	                            mov rbx, rax	      2975	dir.c	FUNCTION_96	IF_1
0x4001588	          0x4889c5	                            mov rbp, rax	      2976	dir.c	FUNCTION_96	IF_1
0x400158b	          0x4c29fd	                            sub rbp, r15	      2976	dir.c	FUNCTION_96	IF_1
0x400158e	            0x89e9	                            mov ecx, ebp	      2977	dir.c	FUNCTION_96	IF_1
0x4001590	          0x4c89fa	                            mov rdx, r15	      2977	dir.c	FUNCTION_96	IF_1
0x4001593	          0x4c89ee	                            mov rsi, r13	      2977	dir.c	FUNCTION_96	IF_1
0x4001596	          0x4c89e7	                            mov rdi, r12	      2977	dir.c	FUNCTION_96	IF_1
0x4001599	      0xe84af2ffff	               call sym.lookup_untracked	      2977	dir.c	FUNCTION_96	IF_1
0x400159e	          0x83c501	                              add ebp, 1	      2979	dir.c	FUNCTION_96	IF_1
0x40015a1	          0x4489f1	                           mov ecx, r14d	      2979	dir.c	FUNCTION_96	IF_1
0x40015a4	            0x29e9	                            sub ecx, ebp	      2979	dir.c	FUNCTION_96	IF_1
0x40015a6	        0x488d5301	                      lea rdx, [rbx + 1]	      2979	dir.c	FUNCTION_96	IF_1
0x40015aa	          0x4889c6	                            mov rsi, rax	      2979	dir.c	FUNCTION_96	IF_1
0x40015ad	          0x4c89e7	                            mov rdi, r12	      2979	dir.c	FUNCTION_96	IF_1
0x40015b0	      0xe8a4ffffff	       call sym.invalidate_one_component	      2979	dir.c	FUNCTION_96	IF_1
0x40015b5	            0x85c0	                           test eax, eax	      2982	dir.c	FUNCTION_96	IF_1	IF_2
0x40015b7	            0x7439	                            je 0x40015f2	      2982	dir.c	FUNCTION_96	IF_1	IF_2
0x40015b9	    0x41838424b000	               add dword [r12 + 0xb0], 1	      2940	dir.c	FUNCTION_95
0x40015c2	      0x41806544fd	             and byte [r13 + 0x44], 0xfd	      2941	dir.c	FUNCTION_95
0x40015c7	    0x41c745400000	               mov dword [r13 + 0x40], 0	      2942	dir.c	FUNCTION_95
0x40015cf	            0xeb21	                           jmp 0x40015f2	      2942	dir.c	FUNCTION_95
0x40015d1	    0x41838424b000	               add dword [r12 + 0xb0], 1	      2940	dir.c	FUNCTION_95
0x40015da	      0x41806544fd	             and byte [r13 + 0x44], 0xfd	      2941	dir.c	FUNCTION_95
0x40015df	    0x41c745400000	               mov dword [r13 + 0x40], 0	      2942	dir.c	FUNCTION_95
0x40015e7	    0x418b84249800	            mov eax, dword [r12 + 0x98] 	      2988	dir.c	FUNCTION_96
0x40015ef	          0x83e002	                              and eax, 2	      2988	dir.c	FUNCTION_96
0x40015f2	        0x4883c408	                              add rsp, 8	      2989	dir.c	FUNCTION_96
0x40015f6	              0x5b	                                 pop rbx	      2989	dir.c	FUNCTION_96
0x40015f7	              0x5d	                                 pop rbp	      2989	dir.c	FUNCTION_96
0x40015f8	            0x415c	                                 pop r12	      2989	dir.c	FUNCTION_96
0x40015fa	            0x415d	                                 pop r13	      2989	dir.c	FUNCTION_96
0x40015fc	            0x415e	                                 pop r14	      2989	dir.c	FUNCTION_96
0x40015fe	            0x415f	                                 pop r15	      2989	dir.c	FUNCTION_96
0x4001600	              0xc3	                                     ret	      2989	dir.c	FUNCTION_96
last_exclude_matching_from_list	ELSE,0:SWITCH,0:IF,7:functions,0:CALL,4:FOR,1:WHILE,0:DO,0	100
0x4002919	            0x4157	                                push r15	      1056	dir.c	FUNCTION_37
0x400291b	            0x4156	                                push r14	      1056	dir.c	FUNCTION_37
0x400291d	            0x4155	                                push r13	      1056	dir.c	FUNCTION_37
0x400291f	            0x4154	                                push r12	      1056	dir.c	FUNCTION_37
0x4002921	              0x55	                                push rbp	      1056	dir.c	FUNCTION_37
0x4002922	              0x53	                                push rbx	      1056	dir.c	FUNCTION_37
0x4002923	        0x4883ec28	                           sub rsp, 0x28	      1056	dir.c	FUNCTION_37
0x4002927	          0x418b28	                     mov ebp, dword [r8]	      1060	dir.c	FUNCTION_37	IF_1
0x400292a	            0x85ed	                           test ebp, ebp	      1060	dir.c	FUNCTION_37	IF_1
0x400292c	     0xf84f8000000	                            je 0x4002a2a	      1060	dir.c	FUNCTION_37	IF_1
0x4002932	          0x83ed01	                              sub ebp, 1	      1063	dir.c	FUNCTION_37	FOR_1
0x4002935	     0xf88f6000000	                            js 0x4002a31	      1063	dir.c	FUNCTION_37	FOR_1
0x400293b	      0x4c894c2418	              mov qword [rsp + 0x18], r9	      1063	dir.c	FUNCTION_37	FOR_1
0x4002940	          0x4d89c7	                             mov r15, r8	      1063	dir.c	FUNCTION_37	FOR_1
0x4002943	          0x4989ce	                            mov r14, rcx	      1063	dir.c	FUNCTION_37	FOR_1
0x4002946	          0x4889d0	                            mov rax, rdx	      1063	dir.c	FUNCTION_37	FOR_1
0x4002949	      0x4889542410	             mov qword [rsp + 0x10], rdx	      1063	dir.c	FUNCTION_37	FOR_1
0x400294e	        0x89742408	                mov dword [rsp + 8], esi	      1063	dir.c	FUNCTION_37	FOR_1
0x4002952	        0x48893c24	                    mov qword [rsp], rdi	      1063	dir.c	FUNCTION_37	FOR_1
0x4002956	          0x4829f8	                            sub rax, rdi	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x4002959	            0x29c6	                            sub esi, eax	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x400295b	        0x8974240c	              mov dword [rsp + 0xc], esi	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x400295f	          0x4863c5	                         movsxd rax, ebp	      1064	dir.c	FUNCTION_37	FOR_1
0x4002962	        0x498b5718	            mov rdx, qword [r15 + 0x18] 	      1064	dir.c	FUNCTION_37	FOR_1
0x4002966	        0x488b1cc2	            mov rbx, qword [rdx + rax*8]	      1064	dir.c	FUNCTION_37	FOR_1
0x400296a	        0x4c8b6308	                mov r12, qword [rbx + 8]	      1065	dir.c	FUNCTION_37	FOR_1
0x400296e	        0x448b6b14	           mov r13d, dword [rbx + 0x14] 	      1066	dir.c	FUNCTION_37	FOR_1
0x4002972	        0xf6432408	               test byte [rbx + 0x24], 8	      1068	dir.c	FUNCTION_37	FOR_1	IF_2
0x4002976	            0x7426	                            je 0x400299e	      1068	dir.c	FUNCTION_37	FOR_1	IF_2
0x4002978	        0x41833e00	                      cmp dword [r14], 0	      1069	dir.c	FUNCTION_37	FOR_1	IF_2	IF_3
0x400297c	            0x751a	                           jne 0x4002998	      1069	dir.c	FUNCTION_37	FOR_1	IF_2	IF_3
0x400297e	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1070	dir.c	FUNCTION_37	FOR_1	IF_2	CALL_1
0x4002982	        0x488b1424	                    mov rdx, qword [rsp]	      1070	dir.c	FUNCTION_37	FOR_1	IF_2	CALL_1
0x4002986	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1070	dir.c	FUNCTION_37	FOR_1	IF_2	CALL_1
0x400298b	      0xbf00000000	                              mov edi, 0	      1070	dir.c	FUNCTION_37	FOR_1	IF_2	CALL_1
0x4002990	      0xe8eddcffff	                      call sym.get_dtype	      1070	dir.c	FUNCTION_37	FOR_1	IF_2	CALL_1
0x4002995	          0x418906	                    mov dword [r14], eax	      1070	dir.c	FUNCTION_37	FOR_1	IF_2	CALL_1
0x4002998	        0x41833e04	                      cmp dword [r14], 4	      1071	dir.c	FUNCTION_37	FOR_1	IF_2	IF_4
0x400299c	            0x7579	                           jne 0x4002a17	      1071	dir.c	FUNCTION_37	FOR_1	IF_2	IF_4
0x400299e	        0x448b4b24	            mov r9d, dword [rbx + 0x24] 	      1075	dir.c	FUNCTION_37	FOR_1	IF_5
0x40029a2	        0x41f6c101	                             test r9b, 1	      1075	dir.c	FUNCTION_37	FOR_1	IF_5
0x40029a6	            0x741e	                            je 0x40029c6	      1075	dir.c	FUNCTION_37	FOR_1	IF_5
0x40029a8	        0x448b4310	            mov r8d, dword [rbx + 0x10] 	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x40029ac	          0x4489e9	                           mov ecx, r13d	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x40029af	          0x4c89e2	                            mov rdx, r12	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x40029b2	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x40029b6	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x40029bb	      0xe800000000	                          call 0x40029c0	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x40029c0	            0x85c0	                           test eax, eax	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x40029c2	            0x7453	                            je 0x4002a17	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x40029c4	            0xeb72	                           jmp 0x4002a38	      1076	dir.c	FUNCTION_37	FOR_1	IF_5	IF_6	CALL_2
0x40029c6	          0x8b4b20	            mov ecx, dword [rbx + 0x20] 	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x40029c9	            0x85c9	                           test ecx, ecx	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x40029cb	            0x747d	                            je 0x4002a4a	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x40029cd	          0x4863c1	                         movsxd rax, ecx	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x40029d0	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x40029d4	      0x807c02ff2f	         cmp byte [rdx + rax - 1], 0x2f 	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x40029d9	            0x7467	                            je 0x4002a42	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x40029db	      0xb900000000	                              mov ecx, 0	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x40029e0	      0xba3e040000	                          mov edx, 0x43e	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x40029e5	      0xbe00000000	                              mov esi, 0	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x40029ea	      0xbf00000000	                              mov edi, 0	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x40029ef	      0xe800000000	                          call 0x40029f4	      1086	dir.c	FUNCTION_37	FOR_1	CALL_3
0x40029f4	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x40029f8	            0x4151	                                 push r9	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x40029fa	              0x50	                                push rax	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x40029fb	          0x4589e9	                           mov r9d, r13d	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x40029fe	          0x4d89e0	                             mov r8, r12	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002a01	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002a05	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002a0a	      0xe800000000	                          call 0x4002a0f	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002a0f	        0x4883c410	                           add rsp, 0x10	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002a13	            0x85c0	                           test eax, eax	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002a15	            0x7526	                           jne 0x4002a3d	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002a17	          0x83ed01	                              sub ebp, 1	      1063	dir.c	FUNCTION_37	FOR_1
0x4002a1a	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      1063	dir.c	FUNCTION_37	FOR_1
0x4002a1d	     0xf853cffffff	                           jne 0x400295f	      1063	dir.c	FUNCTION_37	FOR_1
0x4002a23	      0xb800000000	                              mov eax, 0	      1057	dir.c	FUNCTION_37
0x4002a28	            0xeb25	                           jmp 0x4002a4f	      1057	dir.c	FUNCTION_37
0x4002a2a	      0xb800000000	                              mov eax, 0	      1061	dir.c	FUNCTION_37	IF_1
0x4002a2f	            0xeb1e	                           jmp 0x4002a4f	      1061	dir.c	FUNCTION_37	IF_1
0x4002a31	      0xb800000000	                              mov eax, 0	      1057	dir.c	FUNCTION_37
0x4002a36	            0xeb17	                           jmp 0x4002a4f	      1057	dir.c	FUNCTION_37
0x4002a38	          0x4889d8	                            mov rax, rbx	      1064	dir.c	FUNCTION_37	FOR_1
0x4002a3b	            0xeb12	                           jmp 0x4002a4f	      1064	dir.c	FUNCTION_37	FOR_1
0x4002a3d	          0x4889d8	                            mov rax, rbx	      1064	dir.c	FUNCTION_37	FOR_1
0x4002a40	            0xeb0d	                           jmp 0x4002a4f	      1064	dir.c	FUNCTION_37	FOR_1
0x4002a42	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002a45	          0x83e901	                              sub ecx, 1	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002a48	            0xebaa	                           jmp 0x40029f4	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002a4a	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002a4d	            0xeba5	                           jmp 0x40029f4	      1087	dir.c	FUNCTION_37	FOR_1	IF_7	CALL_4
0x4002a4f	        0x4883c428	                           add rsp, 0x28	      1095	dir.c	FUNCTION_37
0x4002a53	              0x5b	                                 pop rbx	      1095	dir.c	FUNCTION_37
0x4002a54	              0x5d	                                 pop rbp	      1095	dir.c	FUNCTION_37
0x4002a55	            0x415c	                                 pop r12	      1095	dir.c	FUNCTION_37
0x4002a57	            0x415d	                                 pop r13	      1095	dir.c	FUNCTION_37
0x4002a59	            0x415e	                                 pop r14	      1095	dir.c	FUNCTION_37
0x4002a5b	            0x415f	                                 pop r15	      1095	dir.c	FUNCTION_37
0x4002a5d	              0xc3	                                     ret	      1095	dir.c	FUNCTION_37
is_excluded_from_list	ELSE,0:SWITCH,0:IF,1:functions,0:CALL,1:FOR,0:WHILE,0:DO,0	12
0x4003076	        0x4883ec08	                              sub rsp, 8	      1104	dir.c	FUNCTION_38
0x400307a	      0xe89af8ffff	call sym.last_exclude_matching_from_list	      1106	dir.c	FUNCTION_38	CALL_1
0x400307f	          0x4885c0	                           test rax, rax	      1108	dir.c	FUNCTION_38	IF_1
0x4003082	            0x740e	                            je 0x4003092	      1108	dir.c	FUNCTION_38	IF_1
0x4003084	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1109	dir.c	FUNCTION_38	IF_1
0x4003087	          0xc1e804	                              shr eax, 4	      1109	dir.c	FUNCTION_38	IF_1
0x400308a	          0x83f001	                              xor eax, 1	      1109	dir.c	FUNCTION_38	IF_1
0x400308d	          0x83e001	                              and eax, 1	      1109	dir.c	FUNCTION_38	IF_1
0x4003090	            0xeb05	                           jmp 0x4003097	      1109	dir.c	FUNCTION_38	IF_1
0x4003092	      0xb8ffffffff	                     mov eax, 0xffffffff	      1110	dir.c	FUNCTION_38
0x4003097	        0x4883c408	                              add rsp, 8	      1111	dir.c	FUNCTION_38
0x400309b	              0xc3	                                     ret	      1111	dir.c	FUNCTION_38
common_prefix	ELSE,0:SWITCH,0:IF,0:functions,0:CALL,2:FOR,0:WHILE,0:DO,0	12
0x400175a	              0x53	                                push rbx	       184	dir.c	FUNCTION_7
0x400175b	          0x4889fb	                            mov rbx, rdi	       184	dir.c	FUNCTION_7
0x400175e	      0xe829e9ffff	              call sym.common_prefix_len	       185	dir.c	FUNCTION_7	CALL_1
0x4001763	          0x4889c6	                            mov rsi, rax	       185	dir.c	FUNCTION_7	CALL_1
0x4001766	      0xb800000000	                              mov eax, 0	       187	dir.c	FUNCTION_7	CALL_2
0x400176b	          0x4885f6	                           test rsi, rsi	       187	dir.c	FUNCTION_7	CALL_2
0x400176e	            0x740c	                            je 0x400177c	       187	dir.c	FUNCTION_7	CALL_2
0x4001770	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       187	dir.c	FUNCTION_7	CALL_2
0x4001774	          0x488b38	                    mov rdi, qword [rax]	       187	dir.c	FUNCTION_7	CALL_2
0x4001777	      0xe800000000	                          call 0x400177c	       187	dir.c	FUNCTION_7	CALL_2
0x400177c	              0x5b	                                 pop rbx	       188	dir.c	FUNCTION_7
0x400177d	              0xc3	                                     ret	       188	dir.c	FUNCTION_7
last_exclude_matching	ELSE,0:SWITCH,0:IF,1:functions,0:CALL,4:FOR,0:WHILE,0:DO,0	74
0x400309c	            0x4157	                                push r15	      1299	dir.c	FUNCTION_41
0x400309e	            0x4156	                                push r14	      1299	dir.c	FUNCTION_41
0x40030a0	            0x4155	                                push r13	      1299	dir.c	FUNCTION_41
0x40030a2	            0x4154	                                push r12	      1299	dir.c	FUNCTION_41
0x40030a4	              0x55	                                push rbp	      1299	dir.c	FUNCTION_41
0x40030a5	              0x53	                                push rbx	      1299	dir.c	FUNCTION_41
0x40030a6	        0x4883ec38	                           sub rsp, 0x38	      1299	dir.c	FUNCTION_41
0x40030aa	          0x4889fd	                            mov rbp, rdi	      1299	dir.c	FUNCTION_41
0x40030ad	          0x4989f5	                            mov r13, rsi	      1299	dir.c	FUNCTION_41
0x40030b0	          0x4889d3	                            mov rbx, rdx	      1299	dir.c	FUNCTION_41
0x40030b3	      0x48894c2408	                mov qword [rsp + 8], rcx	      1299	dir.c	FUNCTION_41
0x40030b8	      0xb800000000	                              mov eax, 0	      1300	dir.c	FUNCTION_41	CALL_1
0x40030bd	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1300	dir.c	FUNCTION_41	CALL_1
0x40030c4	          0x4889d7	                            mov rdi, rdx	      1300	dir.c	FUNCTION_41	CALL_1
0x40030c7	            0xf2ae	              repne scasb al, byte [rdi]	      1300	dir.c	FUNCTION_41	CALL_1
0x40030c9	          0x48f7d1	                                 not rcx	      1300	dir.c	FUNCTION_41	CALL_1
0x40030cc	        0x4c8d79ff	                      lea r15, [rcx - 1]	      1300	dir.c	FUNCTION_41	CALL_1
0x40030d0	      0xbe2f000000	                           mov esi, 0x2f	      1301	dir.c	FUNCTION_41	CALL_2
0x40030d5	          0x4889d7	                            mov rdi, rdx	      1301	dir.c	FUNCTION_41	CALL_2
0x40030d8	      0xe800000000	                          call 0x40030dd	      1301	dir.c	FUNCTION_41	CALL_2
0x40030dd	        0x4c8d6001	                      lea r12, [rax + 1]	      1302	dir.c	FUNCTION_41
0x40030e1	          0x4885c0	                           test rax, rax	      1302	dir.c	FUNCTION_41
0x40030e4	        0x4c0f44e3	                          cmove r12, rbx	      1302	dir.c	FUNCTION_41
0x40030e8	          0x4c89e1	                            mov rcx, r12	      1304	dir.c	FUNCTION_41	CALL_3
0x40030eb	          0x4829d9	                            sub rcx, rbx	      1304	dir.c	FUNCTION_41	CALL_3
0x40030ee	          0x4889da	                            mov rdx, rbx	      1304	dir.c	FUNCTION_41	CALL_3
0x40030f1	          0x4c89ee	                            mov rsi, r13	      1304	dir.c	FUNCTION_41	CALL_3
0x40030f4	          0x4889ef	                            mov rdi, rbp	      1304	dir.c	FUNCTION_41	CALL_3
0x40030f7	      0xe862f9ffff	                   call sym.prep_exclude	      1304	dir.c	FUNCTION_41	CALL_3
0x40030fc	        0x4c8b7568	            mov r14, qword [rbp + 0x68] 	      1306	dir.c	FUNCTION_41	IF_1
0x4003100	          0x4d85f6	                           test r14, r14	      1306	dir.c	FUNCTION_41	IF_1
0x4003103	            0x7576	                           jne 0x400317b	      1306	dir.c	FUNCTION_41	IF_1
0x4003105	        0x488d4530	                   lea rax, [rbp + 0x30]	      1306	dir.c	FUNCTION_41	IF_1
0x4003109	      0x4889442410	             mov qword [rsp + 0x10], rax	      1306	dir.c	FUNCTION_41	IF_1
0x400310e	        0x488d4560	                   lea rax, [rbp + 0x60]	      1306	dir.c	FUNCTION_41	IF_1
0x4003112	      0x4889442420	             mov qword [rsp + 0x20], rax	      1306	dir.c	FUNCTION_41	IF_1
0x4003117	      0x4c89742428	             mov qword [rsp + 0x28], r14	      1306	dir.c	FUNCTION_41	IF_1
0x400311c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1306	dir.c	FUNCTION_41	IF_1
0x4003121	          0x4989c6	                            mov r14, rax	      1306	dir.c	FUNCTION_41	IF_1
0x4003124	            0x8b00	                    mov eax, dword [rax]	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4003126	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x400312a	            0x89c5	                            mov ebp, eax	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x400312c	          0x83ed01	                              sub ebp, 1	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x400312f	            0x782e	                            js 0x400315f	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4003131	          0x4c63c5	                          movsxd r8, ebp	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4003134	        0x49c1e005	                               shl r8, 5	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4003138	          0x4d89e9	                             mov r9, r13	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x400313b	        0x4d034608	                 add r8, qword [r14 + 8]	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x400313f	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4003144	          0x4c89e2	                            mov rdx, r12	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4003147	          0x4489fe	                           mov esi, r15d	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x400314a	          0x4889df	                            mov rdi, rbx	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x400314d	      0xe8c7f7ffff	call sym.last_exclude_matching_from_list	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x4003152	          0x4885c0	                           test rax, rax	      1127	dir.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4003155	            0x7521	                           jne 0x4003178	      1127	dir.c	FUNCTION_39	FOR_1	FOR_2	IF_1
0x4003157	          0x83ed01	                              sub ebp, 1	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x400315a	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x400315d	            0x75d2	                           jne 0x4003131	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x400315f	    0x488344241010	            add qword [rsp + 0x10], 0x10	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x4003165	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1123	dir.c	FUNCTION_39	FOR_1	FOR_2
0x400316a	      0x483b442420	            cmp rax, qword [rsp + 0x20] 	      1121	dir.c	FUNCTION_39	FOR_1
0x400316f	            0x75ab	                           jne 0x400311c	      1121	dir.c	FUNCTION_39	FOR_1
0x4003171	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      1121	dir.c	FUNCTION_39	FOR_1
0x4003176	            0xeb03	                           jmp 0x400317b	      1121	dir.c	FUNCTION_39	FOR_1
0x4003178	          0x4989c6	                            mov r14, rax	      1124	dir.c	FUNCTION_39	FOR_1	FOR_2	CALL_1
0x400317b	          0x4c89f0	                            mov rax, r14	      1311	dir.c	FUNCTION_41
0x400317e	        0x4883c438	                           add rsp, 0x38	      1311	dir.c	FUNCTION_41
0x4003182	              0x5b	                                 pop rbx	      1311	dir.c	FUNCTION_41
0x4003183	              0x5d	                                 pop rbp	      1311	dir.c	FUNCTION_41
0x4003184	            0x415c	                                 pop r12	      1311	dir.c	FUNCTION_41
0x4003186	            0x415d	                                 pop r13	      1311	dir.c	FUNCTION_41
0x4003188	            0x415e	                                 pop r14	      1311	dir.c	FUNCTION_41
0x400318a	            0x415f	                                 pop r15	      1311	dir.c	FUNCTION_41
0x400318c	              0xc3	                                     ret	      1311	dir.c	FUNCTION_41
new_untracked_cache	ELSE,0:SWITCH,0:IF,0:functions,0:CALL,3:FOR,0:WHILE,0:DO,0	60
0x400110b	            0x4154	                                push r12	      2139	dir.c	FUNCTION_68
0x400110d	              0x55	                                push rbp	      2139	dir.c	FUNCTION_68
0x400110e	              0x53	                                push rbx	      2139	dir.c	FUNCTION_68
0x400110f	          0x4889fd	                            mov rbp, rdi	      2139	dir.c	FUNCTION_68
0x4001112	      0xbec0000000	                           mov esi, 0xc0	      2140	dir.c	FUNCTION_68	CALL_1
0x4001117	      0xbf01000000	                              mov edi, 1	      2140	dir.c	FUNCTION_68	CALL_1
0x400111c	      0xe800000000	                          call 0x4001121	      2140	dir.c	FUNCTION_68	CALL_1
0x4001121	          0x4889c3	                            mov rbx, rax	      2140	dir.c	FUNCTION_68	CALL_1
0x4001124	    0x4c8da0800000	                   lea r12, [rax + 0x80]	      2141	dir.c	FUNCTION_68	CALL_2
0x400112b	      0xbe64000000	                           mov esi, 0x64	      2141	dir.c	FUNCTION_68	CALL_2
0x4001130	          0x4c89e7	                            mov rdi, r12	      2141	dir.c	FUNCTION_68	CALL_2
0x4001133	      0xe800000000	                          call 0x4001138	      2141	dir.c	FUNCTION_68	CALL_2
0x4001138	    0x48c743780000	               mov qword [rbx + 0x78], 0	      2142	dir.c	FUNCTION_68
0x4001140	    0xc78398000000	               mov dword [rbx + 0x98], 6	      2144	dir.c	FUNCTION_68
0x400114a	    0x48c783880000	               mov qword [rbx + 0x88], 0	       164	strbuf.h	FUNCTION_148
0x4001155	    0x488b83900000	            mov rax, qword [rbx + 0x90] 	       165	strbuf.h	FUNCTION_148	IF_2
0x400115c	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_148	IF_2
0x4001162	            0x7405	                            je 0x4001169	       165	strbuf.h	FUNCTION_148	IF_2
0x4001164	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_148	IF_2
0x4001167	            0xeb22	                           jmp 0x400118b	       166	strbuf.h	FUNCTION_148	IF_2
0x4001169	    0x803d00000000	                cmp byte [0x04001170], 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x4001170	            0x7419	                            je 0x400118b	       168	strbuf.h	FUNCTION_148	CALL_2
0x4001172	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x4001177	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_148	CALL_2
0x400117c	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x4001181	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_148	CALL_2
0x4001186	      0xe800000000	                          call 0x400118b	       168	strbuf.h	FUNCTION_148	CALL_2
0x400118b	      0xe855f8ffff	               call sym.get_ident_string	      2129	dir.c	FUNCTION_67	CALL_2
0x4001190	          0x4889c6	                            mov rsi, rax	      2129	dir.c	FUNCTION_67	CALL_2
0x4001193	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_150	CALL_2
0x4001198	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_150	CALL_2
0x400119f	          0x4889f7	                            mov rdi, rsi	       279	strbuf.h	FUNCTION_150	CALL_2
0x40011a2	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_150	CALL_2
0x40011a4	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_150	CALL_2
0x40011a7	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_150	CALL_2
0x40011ab	          0x4c89e7	                            mov rdi, r12	       279	strbuf.h	FUNCTION_150	CALL_2
0x40011ae	      0xe800000000	                          call 0x40011b3	       279	strbuf.h	FUNCTION_150	CALL_2
0x40011b3	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	       141	strbuf.h	FUNCTION_147
0x40011ba	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_147
0x40011bd	            0x740d	                            je 0x40011cc	       141	strbuf.h	FUNCTION_147
0x40011bf	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_149	IF_1	CALL_1
0x40011c3	    0x483983880000	            cmp qword [rbx + 0x88], rax 	       227	strbuf.h	FUNCTION_149	IF_1	CALL_1
0x40011ca	            0x750d	                           jne 0x40011d9	       227	strbuf.h	FUNCTION_149	IF_1	CALL_1
0x40011cc	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_149	CALL_2
0x40011d1	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_149	CALL_2
0x40011d4	      0xe800000000	                          call 0x40011d9	       228	strbuf.h	FUNCTION_149	CALL_2
0x40011d9	    0x488b93900000	            mov rdx, qword [rbx + 0x90] 	       229	strbuf.h	FUNCTION_149
0x40011e0	    0x488b83880000	            mov rax, qword [rbx + 0x88] 	       229	strbuf.h	FUNCTION_149
0x40011e7	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_149
0x40011eb	    0x48898b880000	             mov qword [rbx + 0x88], rcx	       229	strbuf.h	FUNCTION_149
0x40011f2	        0xc6040200	                 mov byte [rdx + rax], 0	       229	strbuf.h	FUNCTION_149
0x40011f6	    0x488b93900000	            mov rdx, qword [rbx + 0x90] 	       230	strbuf.h	FUNCTION_149
0x40011fd	    0x488b83880000	            mov rax, qword [rbx + 0x88] 	       230	strbuf.h	FUNCTION_149
0x4001204	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_149
0x4001208	    0x48899db80000	            mov qword [rbp + 0xb8], rbx 	      2146	dir.c	FUNCTION_68
0x400120f	    0x814d14800000	             or dword [rbp + 0x14], 0x80	      2147	dir.c	FUNCTION_68
0x4001216	              0x5b	                                 pop rbx	      2148	dir.c	FUNCTION_68
0x4001217	              0x5d	                                 pop rbp	      2148	dir.c	FUNCTION_68
0x4001218	            0x415c	                                 pop r12	      2148	dir.c	FUNCTION_68
0x400121a	              0xc3	                                     ret	      2148	dir.c	FUNCTION_68
stat_data_from_disk	ELSE,0:SWITCH,0:IF,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0	36
0x400031d	          0x488b06	                    mov rax, qword [rsi]	        53	string3.h	FUNCTION_107	CALL_3
0x4000320	          0x488907	                    mov qword [rdi], rax	        53	string3.h	FUNCTION_107	CALL_3
0x4000323	        0x488b4608	                mov rax, qword [rsi + 8]	        53	string3.h	FUNCTION_107	CALL_3
0x4000327	        0x48894708	                mov qword [rdi + 8], rax	        53	string3.h	FUNCTION_107	CALL_3
0x400032b	        0x488b4610	            mov rax, qword [rsi + 0x10] 	        53	string3.h	FUNCTION_107	CALL_3
0x400032f	        0x48894710	             mov qword [rdi + 0x10], rax	        53	string3.h	FUNCTION_107	CALL_3
0x4000333	        0x488b4618	            mov rax, qword [rsi + 0x18] 	        53	string3.h	FUNCTION_107	CALL_3
0x4000337	        0x48894718	             mov qword [rdi + 0x18], rax	        53	string3.h	FUNCTION_107	CALL_3
0x400033b	          0x8b4620	            mov eax, dword [rsi + 0x20] 	        53	string3.h	FUNCTION_107	CALL_3
0x400033e	            0x8b17	                    mov edx, dword [rdi]	        44	bswap.h	FUNCTION_191	CALL_3
0x4000340	             0xfca	                               bswap edx	        44	bswap.h	FUNCTION_191	CALL_3
0x4000342	            0x8917	                    mov dword [rdi], edx	      2741	dir.c	FUNCTION_88
0x4000344	          0x8b5704	                mov edx, dword [rdi + 4]	        44	bswap.h	FUNCTION_191	CALL_3
0x4000347	             0xfca	                               bswap edx	        44	bswap.h	FUNCTION_191	CALL_3
0x4000349	          0x895704	                mov dword [rdi + 4], edx	      2742	dir.c	FUNCTION_88
0x400034c	          0x8b5708	                mov edx, dword [rdi + 8]	        44	bswap.h	FUNCTION_191	CALL_3
0x400034f	             0xfca	                               bswap edx	        44	bswap.h	FUNCTION_191	CALL_3
0x4000351	          0x895708	                mov dword [rdi + 8], edx	      2743	dir.c	FUNCTION_88
0x4000354	          0x8b570c	              mov edx, dword [rdi + 0xc]	        44	bswap.h	FUNCTION_191	CALL_3
0x4000357	             0xfca	                               bswap edx	        44	bswap.h	FUNCTION_191	CALL_3
0x4000359	          0x89570c	              mov dword [rdi + 0xc], edx	      2744	dir.c	FUNCTION_88
0x400035c	          0x8b5710	            mov edx, dword [rdi + 0x10] 	        44	bswap.h	FUNCTION_191	CALL_3
0x400035f	             0xfca	                               bswap edx	        44	bswap.h	FUNCTION_191	CALL_3
0x4000361	          0x895710	             mov dword [rdi + 0x10], edx	      2745	dir.c	FUNCTION_88
0x4000364	          0x8b5714	            mov edx, dword [rdi + 0x14] 	        44	bswap.h	FUNCTION_191	CALL_3
0x4000367	             0xfca	                               bswap edx	        44	bswap.h	FUNCTION_191	CALL_3
0x4000369	          0x895714	             mov dword [rdi + 0x14], edx	      2746	dir.c	FUNCTION_88
0x400036c	          0x8b5718	            mov edx, dword [rdi + 0x18] 	        44	bswap.h	FUNCTION_191	CALL_3
0x400036f	             0xfca	                               bswap edx	        44	bswap.h	FUNCTION_191	CALL_3
0x4000371	          0x895718	             mov dword [rdi + 0x18], edx	      2747	dir.c	FUNCTION_88
0x4000374	          0x8b571c	            mov edx, dword [rdi + 0x1c] 	        44	bswap.h	FUNCTION_191	CALL_3
0x4000377	             0xfca	                               bswap edx	        44	bswap.h	FUNCTION_191	CALL_3
0x4000379	          0x89571c	             mov dword [rdi + 0x1c], edx	      2748	dir.c	FUNCTION_88
0x400037c	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_191	CALL_3
0x400037e	          0x894720	             mov dword [rdi + 0x20], eax	      2749	dir.c	FUNCTION_88
0x4000381	              0xc3	                                     ret	      2749	dir.c	FUNCTION_88
match_basename	ELSE,2:SWITCH,0:IF,5:functions,0:CALL,3:FOR,0:WHILE,0:DO,0	46
0x4002772	        0x4883ec08	                              sub rsp, 8	       964	dir.c	FUNCTION_35
0x4002776	          0x4189f2	                           mov r10d, esi	       964	dir.c	FUNCTION_35
0x4002779	          0x4989d3	                            mov r11, rdx	       964	dir.c	FUNCTION_35
0x400277c	          0x4439c1	                            cmp ecx, r8d	       965	dir.c	FUNCTION_35	IF_1
0x400277f	            0x7521	                           jne 0x40027a2	       965	dir.c	FUNCTION_35	IF_1
0x4002781	      0xb800000000	                              mov eax, 0	       982	dir.c	FUNCTION_35
0x4002786	            0x39f1	                            cmp ecx, esi	       966	dir.c	FUNCTION_35	IF_1	IF_2
0x4002788	            0x7574	                           jne 0x40027fe	       966	dir.c	FUNCTION_35	IF_1	IF_2
0x400278a	          0x4863d1	                         movsxd rdx, ecx	       967	dir.c	FUNCTION_35	IF_1	IF_2	CALL_1
0x400278d	          0x4889fe	                            mov rsi, rdi	       967	dir.c	FUNCTION_35	IF_1	IF_2	CALL_1
0x4002790	          0x4c89df	                            mov rdi, r11	       967	dir.c	FUNCTION_35	IF_1	IF_2	CALL_1
0x4002793	      0xe800000000	                          call 0x4002798	       967	dir.c	FUNCTION_35	IF_1	IF_2	CALL_1
0x4002798	            0x85c0	                           test eax, eax	       968	dir.c	FUNCTION_35	IF_1	IF_2
0x400279a	           0xf94c0	                                 sete al	       968	dir.c	FUNCTION_35	IF_1	IF_2
0x400279d	           0xfb6c0	                           movzx eax, al	       968	dir.c	FUNCTION_35	IF_1	IF_2
0x40027a0	            0xeb5c	                           jmp 0x40027fe	       968	dir.c	FUNCTION_35	IF_1	IF_2
0x40027a2	          0x4489c6	                            mov esi, r8d	       968	dir.c	FUNCTION_35	IF_1	IF_2
0x40027a5	        0x41f6c104	                             test r9b, 4	       969	dir.c	FUNCTION_35	ELSE_1	IF_3
0x40027a9	            0x7437	                            je 0x40027e2	       969	dir.c	FUNCTION_35	ELSE_1	IF_3
0x40027ab	        0x418d50ff	                       lea edx, [r8 - 1]	       971	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4
0x40027af	      0xb800000000	                              mov eax, 0	       982	dir.c	FUNCTION_35
0x40027b4	          0x4139d2	                           cmp r10d, edx	       971	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4
0x40027b7	            0x7c45	                            jl 0x40027fe	       971	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4
0x40027b9	          0x4863d2	                         movsxd rdx, edx	       972	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4	CALL_2
0x40027bc	          0x4d63d2	                        movsxd r10, r10d	       972	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4	CALL_2
0x40027bf	        0x4983c201	                              add r10, 1	       972	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4	CALL_2
0x40027c3	          0x4963f0	                         movsxd rsi, r8d	       972	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4	CALL_2
0x40027c6	          0x4929f2	                            sub r10, rsi	       972	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4	CALL_2
0x40027c9	          0x4c89d6	                            mov rsi, r10	       972	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4	CALL_2
0x40027cc	          0x4801fe	                            add rsi, rdi	       972	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4	CALL_2
0x40027cf	        0x498d7b01	                      lea rdi, [r11 + 1]	       972	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4	CALL_2
0x40027d3	      0xe800000000	                          call 0x40027d8	       972	dir.c	FUNCTION_35	ELSE_1	IF_3	IF_4	CALL_2
0x40027d8	            0x85c0	                           test eax, eax	       968	dir.c	FUNCTION_35	IF_1	IF_2
0x40027da	           0xf94c0	                                 sete al	       968	dir.c	FUNCTION_35	IF_1	IF_2
0x40027dd	           0xfb6c0	                           movzx eax, al	       968	dir.c	FUNCTION_35	IF_1	IF_2
0x40027e0	            0xeb1c	                           jmp 0x40027fe	       968	dir.c	FUNCTION_35	IF_1	IF_2
0x40027e2	    0x41b800000000	                              mov r8d, 0	       977	dir.c	FUNCTION_35	ELSE_2	IF_5	CALL_3
0x40027e8	          0x4489d1	                           mov ecx, r10d	       977	dir.c	FUNCTION_35	ELSE_2	IF_5	CALL_3
0x40027eb	          0x4889fa	                            mov rdx, rdi	       977	dir.c	FUNCTION_35	ELSE_2	IF_5	CALL_3
0x40027ee	          0x4c89df	                            mov rdi, r11	       977	dir.c	FUNCTION_35	ELSE_2	IF_5	CALL_3
0x40027f1	      0xe8fddcffff	              call sym.fnmatch_icase_mem	       977	dir.c	FUNCTION_35	ELSE_2	IF_5	CALL_3
0x40027f6	            0x85c0	                           test eax, eax	       968	dir.c	FUNCTION_35	IF_1	IF_2
0x40027f8	           0xf94c0	                                 sete al	       968	dir.c	FUNCTION_35	IF_1	IF_2
0x40027fb	           0xfb6c0	                           movzx eax, al	       968	dir.c	FUNCTION_35	IF_1	IF_2
0x40027fe	        0x4883c408	                              add rsp, 8	       983	dir.c	FUNCTION_35
0x4002802	              0xc3	                                     ret	       983	dir.c	FUNCTION_35
untracked_cache_invalidate_path	ELSE,0:SWITCH,0:IF,2:functions,0:CALL,3:FOR,0:WHILE,0:DO,0	30
0x4005183	    0x488b87b80000	            mov rax, qword [rdi + 0xb8] 	      2994	dir.c	FUNCTION_97	IF_1
0x400518a	          0x4885c0	                           test rax, rax	      2994	dir.c	FUNCTION_97	IF_1
0x400518d	            0x745a	                            je 0x40051e9	      2994	dir.c	FUNCTION_97	IF_1
0x400518f	    0x4883b8a00000	               cmp qword [rax + 0xa0], 0	      2994	dir.c	FUNCTION_97	IF_1
0x4005197	            0x7450	                            je 0x40051e9	      2994	dir.c	FUNCTION_97	IF_1
0x4005199	              0x55	                                push rbp	      2993	dir.c	FUNCTION_97
0x400519a	              0x53	                                push rbx	      2993	dir.c	FUNCTION_97
0x400519b	        0x4883ec08	                              sub rsp, 8	      2993	dir.c	FUNCTION_97
0x400519f	          0x4889f3	                            mov rbx, rsi	      2993	dir.c	FUNCTION_97
0x40051a2	          0x4889fd	                            mov rbp, rdi	      2993	dir.c	FUNCTION_97
0x40051a5	            0x85d2	                           test edx, edx	      2996	dir.c	FUNCTION_97	IF_2	CALL_1
0x40051a7	            0x750c	                           jne 0x40051b5	      2996	dir.c	FUNCTION_97	IF_2	CALL_1
0x40051a9	          0x4889f7	                            mov rdi, rsi	      2996	dir.c	FUNCTION_97	IF_2	CALL_1
0x40051ac	      0xe800000000	                          call 0x40051b1	      2996	dir.c	FUNCTION_97	IF_2	CALL_1
0x40051b1	            0x85c0	                           test eax, eax	      2996	dir.c	FUNCTION_97	IF_2	CALL_1
0x40051b3	            0x742e	                            je 0x40051e3	      2996	dir.c	FUNCTION_97	IF_2	CALL_1
0x40051b5	      0xb800000000	                              mov eax, 0	      2999	dir.c	FUNCTION_97	CALL_3
0x40051ba	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2999	dir.c	FUNCTION_97	CALL_3
0x40051c1	          0x4889df	                            mov rdi, rbx	      2999	dir.c	FUNCTION_97	CALL_3
0x40051c4	            0xf2ae	              repne scasb al, byte [rdi]	      2999	dir.c	FUNCTION_97	CALL_3
0x40051c6	          0x48f7d1	                                 not rcx	      2999	dir.c	FUNCTION_97	CALL_3
0x40051c9	        0x4883e901	                              sub rcx, 1	      2999	dir.c	FUNCTION_97	CALL_3
0x40051cd	    0x488bbdb80000	            mov rdi, qword [rbp + 0xb8] 	      2998	dir.c	FUNCTION_97	CALL_2
0x40051d4	    0x488bb7a00000	            mov rsi, qword [rdi + 0xa0] 	      2998	dir.c	FUNCTION_97	CALL_2
0x40051db	          0x4889da	                            mov rdx, rbx	      2998	dir.c	FUNCTION_97	CALL_2
0x40051de	      0xe876c3ffff	       call sym.invalidate_one_component	      2998	dir.c	FUNCTION_97	CALL_2
0x40051e3	        0x4883c408	                              add rsp, 8	      3000	dir.c	FUNCTION_97
0x40051e7	              0x5b	                                 pop rbx	      3000	dir.c	FUNCTION_97
0x40051e8	              0x5d	                                 pop rbp	      3000	dir.c	FUNCTION_97
0x40051e9	            0xf3c3	                                     ret	      3000	dir.c	FUNCTION_97
free_untracked	ELSE,0:SWITCH,0:IF,1:functions,0:CALL,5:FOR,2:WHILE,0:DO,0	36
0x4000262	          0x4885ff	                           test rdi, rdi	      2710	dir.c	FUNCTION_86	IF_1
0x4000265	            0x746d	                            je 0x40002d4	      2710	dir.c	FUNCTION_86	IF_1
0x4000267	              0x55	                                push rbp	      2708	dir.c	FUNCTION_86
0x4000268	              0x53	                                push rbx	      2708	dir.c	FUNCTION_86
0x4000269	        0x4883ec08	                              sub rsp, 8	      2708	dir.c	FUNCTION_86
0x400026d	          0x4889fb	                            mov rbx, rdi	      2708	dir.c	FUNCTION_86
0x4000270	        0x837f3800	               cmp dword [rdi + 0x38], 0	      2712	dir.c	FUNCTION_86	FOR_1
0x4000274	            0x741c	                            je 0x4000292	      2712	dir.c	FUNCTION_86	FOR_1
0x4000276	      0xbd00000000	                              mov ebp, 0	      2712	dir.c	FUNCTION_86	FOR_1
0x400027b	          0x4863d5	                         movsxd rdx, ebp	      2713	dir.c	FUNCTION_86	CALL_1
0x400027e	          0x488b03	                    mov rax, qword [rbx]	      2713	dir.c	FUNCTION_86	CALL_1
0x4000281	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	      2713	dir.c	FUNCTION_86	CALL_1
0x4000285	      0xe8d8ffffff	                 call sym.free_untracked	      2713	dir.c	FUNCTION_86	CALL_1
0x400028a	          0x83c501	                              add ebp, 1	      2712	dir.c	FUNCTION_86	FOR_1
0x400028d	          0x396b38	            cmp dword [rbx + 0x38], ebp 	      2712	dir.c	FUNCTION_86	FOR_1
0x4000290	            0x77e9	                            ja 0x400027b	      2712	dir.c	FUNCTION_86	FOR_1
0x4000292	        0x837b4000	               cmp dword [rbx + 0x40], 0	      2714	dir.c	FUNCTION_86	FOR_2
0x4000296	            0x741d	                            je 0x40002b5	      2714	dir.c	FUNCTION_86	FOR_2
0x4000298	      0xbd00000000	                              mov ebp, 0	      2714	dir.c	FUNCTION_86	FOR_2
0x400029d	          0x4863d5	                         movsxd rdx, ebp	      2715	dir.c	FUNCTION_86	CALL_2
0x40002a0	        0x488b4308	                mov rax, qword [rbx + 8]	      2715	dir.c	FUNCTION_86	CALL_2
0x40002a4	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	      2715	dir.c	FUNCTION_86	CALL_2
0x40002a8	      0xe800000000	                          call 0x40002ad	      2715	dir.c	FUNCTION_86	CALL_2
0x40002ad	          0x83c501	                              add ebp, 1	      2714	dir.c	FUNCTION_86	FOR_2
0x40002b0	          0x396b40	            cmp dword [rbx + 0x40], ebp 	      2714	dir.c	FUNCTION_86	FOR_2
0x40002b3	            0x77e8	                            ja 0x400029d	      2714	dir.c	FUNCTION_86	FOR_2
0x40002b5	        0x488b7b08	                mov rdi, qword [rbx + 8]	      2716	dir.c	FUNCTION_86	CALL_3
0x40002b9	      0xe800000000	                          call 0x40002be	      2716	dir.c	FUNCTION_86	CALL_3
0x40002be	          0x488b3b	                    mov rdi, qword [rbx]	      2717	dir.c	FUNCTION_86	CALL_4
0x40002c1	      0xe800000000	                          call 0x40002c6	      2717	dir.c	FUNCTION_86	CALL_4
0x40002c6	          0x4889df	                            mov rdi, rbx	      2718	dir.c	FUNCTION_86	CALL_5
0x40002c9	      0xe800000000	                          call 0x40002ce	      2718	dir.c	FUNCTION_86	CALL_5
0x40002ce	        0x4883c408	                              add rsp, 8	      2719	dir.c	FUNCTION_86
0x40002d2	              0x5b	                                 pop rbx	      2719	dir.c	FUNCTION_86
0x40002d3	              0x5d	                                 pop rbp	      2719	dir.c	FUNCTION_86
0x40002d4	            0xf3c3	                                     ret	      2719	dir.c	FUNCTION_86
report_path_error	ELSE,0:SWITCH,0:IF,4:functions,0:CALL,1:FOR,2:WHILE,0:DO,0	68
0x4001da7	            0x4157	                                push r15	       532	dir.c	FUNCTION_16
0x4001da9	            0x4156	                                push r14	       532	dir.c	FUNCTION_16
0x4001dab	            0x4155	                                push r13	       532	dir.c	FUNCTION_16
0x4001dad	            0x4154	                                push r12	       532	dir.c	FUNCTION_16
0x4001daf	              0x55	                                push rbp	       532	dir.c	FUNCTION_16
0x4001db0	              0x53	                                push rbx	       532	dir.c	FUNCTION_16
0x4001db1	        0x4883ec18	                           sub rsp, 0x18	       532	dir.c	FUNCTION_16
0x4001db5	          0x448b26	                   mov r12d, dword [rsi]	       537	dir.c	FUNCTION_16	FOR_1
0x4001db8	          0x4585e4	                         test r12d, r12d	       537	dir.c	FUNCTION_16	FOR_1
0x4001dbb	     0xf8ec2000000	                           jle 0x4001e83	       537	dir.c	FUNCTION_16	FOR_1
0x4001dc1	          0x4989f7	                            mov r15, rsi	       537	dir.c	FUNCTION_16	FOR_1
0x4001dc4	          0x4989fd	                            mov r13, rdi	       537	dir.c	FUNCTION_16	FOR_1
0x4001dc7	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       537	dir.c	FUNCTION_16	FOR_1
0x4001dcf	      0xbd00000000	                              mov ebp, 0	       537	dir.c	FUNCTION_16	FOR_1
0x4001dd4	          0x4c63f5	                         movsxd r14, ebp	       540	dir.c	FUNCTION_16	FOR_1	IF_1
0x4001dd7	    0x43807c350000	                 cmp byte [r13 + r14], 0	       540	dir.c	FUNCTION_16	FOR_1	IF_1
0x4001ddd	     0xf858f000000	                           jne 0x4001e72	       540	dir.c	FUNCTION_16	FOR_1	IF_1
0x4001de3	          0x4585e4	                         test r12d, r12d	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x4001de6	            0x7e5c	                           jle 0x4001e44	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x4001de8	    0x4a8d04f50000	                        lea rax, [r14*8]	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001df0	          0x4c89f2	                            mov rdx, r14	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001df3	        0x48c1e206	                              shl rdx, 6	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001df7	          0x4829c2	                            sub rdx, rax	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001dfa	        0x48891424	                    mov qword [rsp], rdx	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001dfe	      0xbb00000000	                              mov ebx, 0	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001e03	            0x39dd	                            cmp ebp, ebx	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x4001e05	            0x7435	                            je 0x4001e3c	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x4001e07	          0x4863c3	                         movsxd rax, ebx	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x4001e0a	    0x41807c050000	                 cmp byte [r13 + rax], 0	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x4001e10	            0x742a	                            je 0x4001e3c	       551	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_2
0x4001e12	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001e16	        0x488b0c24	                    mov rcx, qword [rsp]	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001e1a	      0x488b740a08	         mov rsi, qword [rdx + rcx + 8] 	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001e1f	    0x488d0cc50000	                        lea rcx, [rax*8]	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001e27	        0x48c1e006	                              shl rax, 6	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001e2b	          0x4829c8	                            sub rax, rcx	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001e2e	      0x488b7c0208	         mov rdi, qword [rdx + rax + 8] 	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001e33	      0xe800000000	                          call 0x4001e38	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001e38	            0x85c0	                           test eax, eax	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001e3a	            0x7436	                            je 0x4001e72	       553	dir.c	FUNCTION_16	FOR_1	FOR_2	IF_3	CALL_1
0x4001e3c	          0x83c301	                              add ebx, 1	       550	dir.c	FUNCTION_16	FOR_1	FOR_2
0x4001e3f	          0x4439e3	                           cmp ebx, r12d	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x4001e42	            0x7cbf	                            jl 0x4001e03	       549	dir.c	FUNCTION_16	FOR_1	FOR_2
0x4001e44	    0x4a8d04f50000	                        lea rax, [r14*8]	       563	dir.c	FUNCTION_16	FOR_1
0x4001e4c	        0x49c1e606	                              shl r14, 6	       563	dir.c	FUNCTION_16	FOR_1
0x4001e50	          0x4929c6	                            sub r14, rax	       563	dir.c	FUNCTION_16	FOR_1
0x4001e53	          0x4c89f0	                            mov rax, r14	       563	dir.c	FUNCTION_16	FOR_1
0x4001e56	        0x49034710	             add rax, qword [r15 + 0x10]	       563	dir.c	FUNCTION_16	FOR_1
0x4001e5a	        0x488b7008	                mov rsi, qword [rax + 8]	       563	dir.c	FUNCTION_16	FOR_1
0x4001e5e	      0xbf00000000	                              mov edi, 0	       563	dir.c	FUNCTION_16	FOR_1
0x4001e63	      0xb800000000	                              mov eax, 0	       563	dir.c	FUNCTION_16	FOR_1
0x4001e68	      0xe800000000	                          call 0x4001e6d	       563	dir.c	FUNCTION_16	FOR_1
0x4001e6d	      0x8344240c01	                add dword [rsp + 0xc], 1	       565	dir.c	FUNCTION_16	FOR_1
0x4001e72	          0x83c501	                              add ebp, 1	       537	dir.c	FUNCTION_16	FOR_1
0x4001e75	          0x458b27	                   mov r12d, dword [r15]	       537	dir.c	FUNCTION_16	FOR_1
0x4001e78	          0x4139ec	                           cmp r12d, ebp	       537	dir.c	FUNCTION_16	FOR_1
0x4001e7b	     0xf8f53ffffff	                            jg 0x4001dd4	       537	dir.c	FUNCTION_16	FOR_1
0x4001e81	            0xeb08	                           jmp 0x4001e8b	       537	dir.c	FUNCTION_16	FOR_1
0x4001e83	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       536	dir.c	FUNCTION_16
0x4001e8b	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       568	dir.c	FUNCTION_16
0x4001e8f	        0x4883c418	                           add rsp, 0x18	       568	dir.c	FUNCTION_16
0x4001e93	              0x5b	                                 pop rbx	       568	dir.c	FUNCTION_16
0x4001e94	              0x5d	                                 pop rbp	       568	dir.c	FUNCTION_16
0x4001e95	            0x415c	                                 pop r12	       568	dir.c	FUNCTION_16
0x4001e97	            0x415d	                                 pop r13	       568	dir.c	FUNCTION_16
0x4001e99	            0x415e	                                 pop r14	       568	dir.c	FUNCTION_16
0x4001e9b	            0x415f	                                 pop r15	       568	dir.c	FUNCTION_16
0x4001e9d	              0xc3	                                     ret	       568	dir.c	FUNCTION_16
add_untracked	ELSE,0:SWITCH,0:IF,1:functions,0:CALL,1:FOR,0:WHILE,0:DO,0	35
0x4000b82	          0x4885ff	                           test rdi, rdi	      1796	dir.c	FUNCTION_56	IF_1
0x4000b85	            0x7462	                            je 0x4000be9	      1796	dir.c	FUNCTION_56	IF_1
0x4000b87	              0x55	                                push rbp	      1795	dir.c	FUNCTION_56
0x4000b88	              0x53	                                push rbx	      1795	dir.c	FUNCTION_56
0x4000b89	        0x4883ec08	                              sub rsp, 8	      1795	dir.c	FUNCTION_56
0x4000b8d	          0x4889f5	                            mov rbp, rsi	      1795	dir.c	FUNCTION_56
0x4000b90	          0x4889fb	                            mov rbx, rdi	      1795	dir.c	FUNCTION_56
0x4000b93	          0x8b4740	            mov eax, dword [rdi + 0x40] 	      1798	dir.c	FUNCTION_56
0x4000b96	          0x8d7001	                      lea esi, [rax + 1]	      1798	dir.c	FUNCTION_56
0x4000b99	          0x8b4734	            mov eax, dword [rdi + 0x34] 	      1798	dir.c	FUNCTION_56
0x4000b9c	            0x39c6	                            cmp esi, eax	      1798	dir.c	FUNCTION_56
0x4000b9e	            0x7625	                           jbe 0x4000bc5	      1798	dir.c	FUNCTION_56
0x4000ba0	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	      1798	dir.c	FUNCTION_56
0x4000ba4	            0xd1e8	                              shr eax, 1	      1798	dir.c	FUNCTION_56
0x4000ba6	            0x39c6	                            cmp esi, eax	      1798	dir.c	FUNCTION_56
0x4000ba8	           0xf47c6	                          cmova eax, esi	      1798	dir.c	FUNCTION_56
0x4000bab	          0x894734	             mov dword [rdi + 0x34], eax	      1798	dir.c	FUNCTION_56
0x4000bae	            0x89c0	                            mov eax, eax	      1798	dir.c	FUNCTION_56
0x4000bb0	    0x488d34c50000	                        lea rsi, [rax*8]	      1798	dir.c	FUNCTION_56
0x4000bb8	        0x488b7f08	                mov rdi, qword [rdi + 8]	      1798	dir.c	FUNCTION_56
0x4000bbc	      0xe800000000	                          call 0x4000bc1	      1798	dir.c	FUNCTION_56
0x4000bc1	        0x48894308	                mov qword [rbx + 8], rax	      1798	dir.c	FUNCTION_56
0x4000bc5	        0x488b5308	                mov rdx, qword [rbx + 8]	      1800	dir.c	FUNCTION_56	CALL_1
0x4000bc9	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      1800	dir.c	FUNCTION_56	CALL_1
0x4000bcc	          0x8d4801	                      lea ecx, [rax + 1]	      1800	dir.c	FUNCTION_56	CALL_1
0x4000bcf	          0x894b40	             mov dword [rbx + 0x40], ecx	      1800	dir.c	FUNCTION_56	CALL_1
0x4000bd2	            0x89c0	                            mov eax, eax	      1800	dir.c	FUNCTION_56	CALL_1
0x4000bd4	        0x488d1cc2	                  lea rbx, [rdx + rax*8]	      1800	dir.c	FUNCTION_56	CALL_1
0x4000bd8	          0x4889ef	                            mov rdi, rbp	      1800	dir.c	FUNCTION_56	CALL_1
0x4000bdb	      0xe800000000	                          call 0x4000be0	      1800	dir.c	FUNCTION_56	CALL_1
0x4000be0	          0x488903	                    mov qword [rbx], rax	      1800	dir.c	FUNCTION_56	CALL_1
0x4000be3	        0x4883c408	                              add rsp, 8	      1801	dir.c	FUNCTION_56
0x4000be7	              0x5b	                                 pop rbx	      1801	dir.c	FUNCTION_56
0x4000be8	              0x5d	                                 pop rbp	      1801	dir.c	FUNCTION_56
0x4000be9	            0xf3c3	                                     ret	      1801	dir.c	FUNCTION_56
simplify_away	ELSE,0:SWITCH,0:IF,3:functions,0:CALL,1:FOR,1:WHILE,0:DO,0	58
0x4001052	          0x4885d2	                           test rdx, rdx	      1528	dir.c	FUNCTION_49	IF_1
0x4001055	     0xf849e000000	                            je 0x40010f9	      1528	dir.c	FUNCTION_49	IF_1
0x400105b	            0x8b02	                    mov eax, dword [rdx]	      1528	dir.c	FUNCTION_49	IF_1
0x400105d	            0x85c0	                           test eax, eax	      1528	dir.c	FUNCTION_49	IF_1
0x400105f	     0xf84a4000000	                            je 0x4001109	      1528	dir.c	FUNCTION_49	IF_1
0x4001065	            0x4155	                                push r13	      1525	dir.c	FUNCTION_49
0x4001067	            0x4154	                                push r12	      1525	dir.c	FUNCTION_49
0x4001069	              0x55	                                push rbp	      1525	dir.c	FUNCTION_49
0x400106a	              0x53	                                push rbx	      1525	dir.c	FUNCTION_49
0x400106b	        0x4883ec08	                              sub rsp, 8	      1525	dir.c	FUNCTION_49
0x400106f	            0x89f5	                            mov ebp, esi	      1525	dir.c	FUNCTION_49
0x4001071	          0x4989fc	                            mov r12, rdi	      1525	dir.c	FUNCTION_49
0x4001074	          0x8b4a08	                mov ecx, dword [rdx + 8]	      1531	dir.c	FUNCTION_49
0x4001077	          0x83e180	                     and ecx, 0xffffff80	      1531	dir.c	FUNCTION_49
0x400107a	            0x750b	                           jne 0x4001087	      1531	dir.c	FUNCTION_49
0x400107c	            0x85c0	                           test eax, eax	      1540	dir.c	FUNCTION_49	FOR_1
0x400107e	            0x7f20	                            jg 0x40010a0	      1540	dir.c	FUNCTION_49	FOR_1
0x4001080	      0xb801000000	                              mov eax, 1	      1550	dir.c	FUNCTION_49
0x4001085	            0xeb78	                           jmp 0x40010ff	      1550	dir.c	FUNCTION_49
0x4001087	      0xba02060000	                          mov edx, 0x602	      1531	dir.c	FUNCTION_49
0x400108c	      0xbe00000000	                              mov esi, 0	      1531	dir.c	FUNCTION_49
0x4001091	      0xbf00000000	                              mov edi, 0	      1531	dir.c	FUNCTION_49
0x4001096	      0xb800000000	                              mov eax, 0	      1531	dir.c	FUNCTION_49
0x400109b	      0xe800000000	                          call 0x40010a0	      1531	dir.c	FUNCTION_49
0x40010a0	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      1541	dir.c	FUNCTION_49	FOR_1
0x40010a4	        0x488d5a1c	                   lea rbx, [rdx + 0x1c]	      1541	dir.c	FUNCTION_49	FOR_1
0x40010a8	          0x8d40ff	                      lea eax, [rax - 1]	      1541	dir.c	FUNCTION_49	FOR_1
0x40010ab	    0x488d0cc50000	                        lea rcx, [rax*8]	      1541	dir.c	FUNCTION_49	FOR_1
0x40010b3	        0x48c1e006	                              shl rax, 6	      1541	dir.c	FUNCTION_49	FOR_1
0x40010b7	          0x4829c8	                            sub rax, rcx	      1541	dir.c	FUNCTION_49	FOR_1
0x40010ba	      0x4c8d6c0254	            lea r13, [rdx + rax + 0x54] 	      1541	dir.c	FUNCTION_49	FOR_1
0x40010bf	            0x8b13	                    mov edx, dword [rbx]	      1542	dir.c	FUNCTION_49	FOR_1
0x40010c1	            0x39ea	                            cmp edx, ebp	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x40010c3	           0xf4fd5	                          cmovg edx, ebp	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x40010c6	          0x4863d2	                         movsxd rdx, edx	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x40010c9	        0x488b7be4	             mov rdi, qword [rbx - 0x1c]	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x40010cd	        0xf643f410	            test byte [rbx - 0xc], 0x10 	        92	pathspec.h	FUNCTION_187	IF_1
0x40010d1	            0x740a	                            je 0x40010dd	        92	pathspec.h	FUNCTION_187	IF_1
0x40010d3	          0x4c89e6	                            mov rsi, r12	        93	pathspec.h	FUNCTION_187	CALL_1
0x40010d6	      0xe800000000	                          call 0x40010db	        93	pathspec.h	FUNCTION_187	CALL_1
0x40010db	            0xeb08	                           jmp 0x40010e5	        93	pathspec.h	FUNCTION_187	CALL_1
0x40010dd	          0x4c89e6	                            mov rsi, r12	        95	pathspec.h	FUNCTION_187	CALL_2
0x40010e0	      0xe800000000	                          call 0x40010e5	        95	pathspec.h	FUNCTION_187	CALL_2
0x40010e5	            0x85c0	                           test eax, eax	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x40010e7	            0x7416	                            je 0x40010ff	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x40010e9	        0x4883c338	                           add rbx, 0x38	      1546	dir.c	FUNCTION_49	FOR_1	IF_3	CALL_1
0x40010ed	          0x4c39eb	                            cmp rbx, r13	      1540	dir.c	FUNCTION_49	FOR_1
0x40010f0	            0x75cd	                           jne 0x40010bf	      1540	dir.c	FUNCTION_49	FOR_1
0x40010f2	      0xb801000000	                              mov eax, 1	      1550	dir.c	FUNCTION_49
0x40010f7	            0xeb06	                           jmp 0x40010ff	      1550	dir.c	FUNCTION_49
0x40010f9	      0xb800000000	                              mov eax, 0	      1529	dir.c	FUNCTION_49	IF_1
0x40010fe	              0xc3	                                     ret	      1529	dir.c	FUNCTION_49	IF_1
0x40010ff	        0x4883c408	                              add rsp, 8	      1551	dir.c	FUNCTION_49
0x4001103	              0x5b	                                 pop rbx	      1551	dir.c	FUNCTION_49
0x4001104	              0x5d	                                 pop rbp	      1551	dir.c	FUNCTION_49
0x4001105	            0x415c	                                 pop r12	      1551	dir.c	FUNCTION_49
0x4001107	            0x415d	                                 pop r13	      1551	dir.c	FUNCTION_49
0x4001109	            0xf3c3	                                     ret	      1551	dir.c	FUNCTION_49
add_excludes_from_file_to_list	ELSE,0:SWITCH,0:IF,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0	5
0x40025c2	        0x4883ec08	                              sub rsp, 8	       901	dir.c	FUNCTION_30
0x40025c6	    0x41b900000000	                              mov r9d, 0	       902	dir.c	FUNCTION_30	CALL_1
0x40025cc	      0xe89afcffff	                   call sym.add_excludes	       902	dir.c	FUNCTION_30	CALL_1
0x40025d1	        0x4883c408	                              add rsp, 8	       903	dir.c	FUNCTION_30
0x40025d5	              0xc3	                                     ret	       903	dir.c	FUNCTION_30
is_empty_dir	ELSE,0:SWITCH,0:IF,2:functions,0:CALL,4:FOR,0:WHILE,1:DO,0	37
0x400484d	              0x55	                                push rbp	      2396	dir.c	FUNCTION_77
0x400484e	              0x53	                                push rbx	      2396	dir.c	FUNCTION_77
0x400484f	        0x4883ec08	                              sub rsp, 8	      2396	dir.c	FUNCTION_77
0x4004853	      0xe800000000	                          call 0x4004858	      2397	dir.c	FUNCTION_77	CALL_1
0x4004858	          0x4889c3	                            mov rbx, rax	      2397	dir.c	FUNCTION_77	CALL_1
0x400485b	          0x4885c0	                           test rax, rax	      2401	dir.c	FUNCTION_77	IF_1
0x400485e	            0x751b	                           jne 0x400487b	      2401	dir.c	FUNCTION_77	IF_1
0x4004860	            0xeb4c	                           jmp 0x40048ae	      2401	dir.c	FUNCTION_77	IF_1
0x4004862	        0x8078132e	            cmp byte [rax + 0x13], 0x2e 	       277	dir.h	FUNCTION_184
0x4004866	            0x7527	                           jne 0x400488f	       277	dir.h	FUNCTION_184
0x4004868	         0xfb65014	           movzx edx, byte [rax + 0x14] 	       278	dir.h	FUNCTION_184
0x400486c	            0x84d2	                             test dl, dl	       277	dir.h	FUNCTION_184
0x400486e	            0x740b	                            je 0x400487b	       277	dir.h	FUNCTION_184
0x4004870	          0x80fa2e	                            cmp dl, 0x2e	       278	dir.h	FUNCTION_184
0x4004873	            0x7521	                           jne 0x4004896	       278	dir.h	FUNCTION_184
0x4004875	        0x80781500	                cmp byte [rax + 0x15], 0	       279	dir.h	FUNCTION_184
0x4004879	            0x7522	                           jne 0x400489d	       279	dir.h	FUNCTION_184
0x400487b	          0x4889df	                            mov rdi, rbx	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x400487e	      0xe800000000	                          call 0x4004883	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x4004883	          0x4885c0	                           test rax, rax	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x4004886	            0x75da	                           jne 0x4004862	      2404	dir.c	FUNCTION_77	WHILE_1	CALL_2
0x4004888	      0xbd01000000	                              mov ebp, 1	      2399	dir.c	FUNCTION_77
0x400488d	            0xeb13	                           jmp 0x40048a2	      2399	dir.c	FUNCTION_77
0x400488f	      0xbd00000000	                              mov ebp, 0	      2406	dir.c	FUNCTION_77	WHILE_1	IF_2
0x4004894	            0xeb0c	                           jmp 0x40048a2	      2406	dir.c	FUNCTION_77	WHILE_1	IF_2
0x4004896	      0xbd00000000	                              mov ebp, 0	      2406	dir.c	FUNCTION_77	WHILE_1	IF_2
0x400489b	            0xeb05	                           jmp 0x40048a2	      2406	dir.c	FUNCTION_77	WHILE_1	IF_2
0x400489d	      0xbd00000000	                              mov ebp, 0	      2406	dir.c	FUNCTION_77	WHILE_1	IF_2
0x40048a2	          0x4889df	                            mov rdi, rbx	      2410	dir.c	FUNCTION_77	CALL_4
0x40048a5	      0xe800000000	                          call 0x40048aa	      2410	dir.c	FUNCTION_77	CALL_4
0x40048aa	            0x89e8	                            mov eax, ebp	      2411	dir.c	FUNCTION_77
0x40048ac	            0xeb05	                           jmp 0x40048b3	      2411	dir.c	FUNCTION_77
0x40048ae	      0xb800000000	                              mov eax, 0	      2402	dir.c	FUNCTION_77	IF_1
0x40048b3	        0x4883c408	                              add rsp, 8	      2412	dir.c	FUNCTION_77
0x40048b7	              0x5b	                                 pop rbx	      2412	dir.c	FUNCTION_77
0x40048b8	              0x5d	                                 pop rbp	      2412	dir.c	FUNCTION_77
0x40048b9	              0xc3	                                     ret	      2412	dir.c	FUNCTION_77
common_prefix_len	ELSE,1:SWITCH,0:IF,6:functions,0:CALL,0:FOR,1:WHILE,1:DO,0	89
0x400008c	            0x4155	                                push r13	       134	dir.c	FUNCTION_6
0x400008e	            0x4154	                                push r12	       134	dir.c	FUNCTION_6
0x4000090	              0x55	                                push rbp	       134	dir.c	FUNCTION_6
0x4000091	              0x53	                                push rbx	       134	dir.c	FUNCTION_6
0x4000092	        0x4883ec08	                              sub rsp, 8	       134	dir.c	FUNCTION_6
0x4000096	          0x8b4f08	                mov ecx, dword [rdi + 8]	       145	dir.c	FUNCTION_6
0x4000099	          0x83e180	                     and ecx, 0xffffff80	       145	dir.c	FUNCTION_6
0x400009c	            0x7513	                           jne 0x40000b1	       145	dir.c	FUNCTION_6
0x400009e	          0x448b27	                   mov r12d, dword [rdi]	       154	dir.c	FUNCTION_6	FOR_1
0x40000a1	      0xb800000000	                              mov eax, 0	       154	dir.c	FUNCTION_6	FOR_1
0x40000a6	          0x4585e4	                         test r12d, r12d	       154	dir.c	FUNCTION_6	FOR_1
0x40000a9	     0xf8ee4000000	                           jle 0x4000193	       154	dir.c	FUNCTION_6	FOR_1
0x40000af	            0xeb19	                           jmp 0x40000ca	       154	dir.c	FUNCTION_6	FOR_1
0x40000b1	      0xba98000000	                           mov edx, 0x98	       145	dir.c	FUNCTION_6
0x40000b6	      0xbe00000000	                              mov esi, 0	       145	dir.c	FUNCTION_6
0x40000bb	      0xbf00000000	                              mov edi, 0	       145	dir.c	FUNCTION_6
0x40000c0	      0xb800000000	                              mov eax, 0	       145	dir.c	FUNCTION_6
0x40000c5	      0xe800000000	                          call 0x40000ca	       145	dir.c	FUNCTION_6
0x40000ca	        0x4c8b6f10	            mov r13, qword [rdi + 0x10] 	       156	dir.c	FUNCTION_6	FOR_1	IF_1
0x40000ce	        0x4d8d5d10	                   lea r11, [r13 + 0x10]	       156	dir.c	FUNCTION_6	FOR_1	IF_1
0x40000d2	      0xb800000000	                              mov eax, 0	       156	dir.c	FUNCTION_6	FOR_1	IF_1
0x40000d7	      0xbd00000000	                              mov ebp, 0	       156	dir.c	FUNCTION_6	FOR_1	IF_1
0x40000dc	          0x4c89d9	                            mov rcx, r11	       156	dir.c	FUNCTION_6	FOR_1	IF_1
0x40000df	          0x418b13	                    mov edx, dword [r11]	       156	dir.c	FUNCTION_6	FOR_1	IF_1
0x40000e2	          0xf6c220	                           test dl, 0x20	       156	dir.c	FUNCTION_6	FOR_1	IF_1
0x40000e5	            0x757c	                           jne 0x4000163	       156	dir.c	FUNCTION_6	FOR_1	IF_1
0x40000e7	          0xf6c210	                           test dl, 0x10	       158	dir.c	FUNCTION_6	FOR_1	IF_2
0x40000ea	            0x7438	                            je 0x4000124	       158	dir.c	FUNCTION_6	FOR_1	IF_2
0x40000ec	        0x4d634308	              movsxd r8, dword [r11 + 8]	       159	dir.c	FUNCTION_6	FOR_1	IF_2
0x40000f0	          0x4d85c0	                             test r8, r8	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x40000f3	     0xf848f000000	                            je 0x4000188	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x40000f9	            0x85ed	                           test ebp, ebp	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x40000fb	           0xf94c3	                                 sete bl	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x40000fe	          0x4885c0	                           test rax, rax	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000101	            0x7504	                           jne 0x4000107	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000103	            0x84db	                             test bl, bl	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000105	            0x745c	                            je 0x4000163	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000107	        0x4c8b49f0	              mov r9, qword [rcx - 0x10]	       163	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x400010b	        0x4d8b5500	                    mov r10, qword [r13]	       164	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_3
0x400010f	        0x410fb60a	                   movzx ecx, byte [r10]	       164	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_3
0x4000113	          0x413809	                       cmp byte [r9], cl	       164	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_3
0x4000116	            0x755d	                           jne 0x4000175	       164	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_3
0x4000118	      0xba01000000	                              mov edx, 1	       164	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_3
0x400011d	      0xbf00000000	                              mov edi, 0	       164	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_3
0x4000122	            0xeb19	                           jmp 0x400013d	       164	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_3
0x4000124	        0x4d63430c	           movsxd r8, dword [r11 + 0xc] 	       161	dir.c	FUNCTION_6	FOR_1	ELSE_1
0x4000128	            0xebc6	                           jmp 0x40000f0	       161	dir.c	FUNCTION_6	FOR_1	ELSE_1
0x400012a	      0x410fb60c11	              movzx ecx, byte [r9 + rdx]	       163	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x400012f	        0x488d7201	                      lea rsi, [rdx + 1]	       163	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000133	          0x4889f2	                            mov rdx, rsi	       163	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000136	      0x413a4c32ff	            cmp cl, byte [r10 + rsi - 1]	       164	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_3
0x400013b	            0x7515	                           jne 0x4000152	       164	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_3
0x400013d	          0x80f92f	                            cmp cl, 0x2f	       167	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_4
0x4000140	        0x480f44fa	                          cmove rdi, rdx	       167	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_4
0x4000144	          0x4939d0	                             cmp r8, rdx	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000147	            0x7409	                            je 0x4000152	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000149	          0x4839c2	                            cmp rdx, rax	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x400014c	            0x72dc	                            jb 0x400012a	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x400014e	            0x84db	                             test bl, bl	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000150	            0x75d8	                           jne 0x400012a	       162	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1
0x4000152	          0x4839c7	                            cmp rdi, rax	       170	dir.c	FUNCTION_6	FOR_1	IF_5
0x4000155	            0x7204	                            jb 0x400015b	       170	dir.c	FUNCTION_6	FOR_1	IF_5
0x4000157	            0x84db	                             test bl, bl	       170	dir.c	FUNCTION_6	FOR_1	IF_5
0x4000159	            0x7408	                            je 0x4000163	       170	dir.c	FUNCTION_6	FOR_1	IF_5
0x400015b	          0x4885ff	                           test rdi, rdi	       172	dir.c	FUNCTION_6	FOR_1	IF_5	IF_6
0x400015e	            0x741c	                            je 0x400017c	       172	dir.c	FUNCTION_6	FOR_1	IF_5	IF_6
0x4000160	          0x4889f8	                            mov rax, rdi	       172	dir.c	FUNCTION_6	FOR_1	IF_5	IF_6
0x4000163	          0x83c501	                              add ebp, 1	       154	dir.c	FUNCTION_6	FOR_1
0x4000166	        0x4983c338	                           add r11, 0x38	       154	dir.c	FUNCTION_6	FOR_1
0x400016a	          0x4439e5	                           cmp ebp, r12d	       154	dir.c	FUNCTION_6	FOR_1
0x400016d	     0xf8569ffffff	                           jne 0x40000dc	       154	dir.c	FUNCTION_6	FOR_1
0x4000173	            0xeb1e	                           jmp 0x4000193	       154	dir.c	FUNCTION_6	FOR_1
0x4000175	      0xb800000000	                              mov eax, 0	       164	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_3
0x400017a	            0xeb17	                           jmp 0x4000193	       164	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_3
0x400017c	          0x4889f8	                            mov rax, rdi	       164	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_3
0x400017f	            0xeb12	                           jmp 0x4000193	       164	dir.c	FUNCTION_6	FOR_1	ELSE_1	WHILE_1	IF_3
0x4000181	      0xb800000000	                              mov eax, 0	       170	dir.c	FUNCTION_6	FOR_1	IF_5
0x4000186	            0xeb0b	                           jmp 0x4000193	       176	dir.c	FUNCTION_6
0x4000188	          0x4885c0	                           test rax, rax	       170	dir.c	FUNCTION_6	FOR_1	IF_5
0x400018b	            0x75f4	                           jne 0x4000181	       170	dir.c	FUNCTION_6	FOR_1	IF_5
0x400018d	            0x85ed	                           test ebp, ebp	       170	dir.c	FUNCTION_6	FOR_1	IF_5
0x400018f	            0x75d2	                           jne 0x4000163	       170	dir.c	FUNCTION_6	FOR_1	IF_5
0x4000191	            0xebee	                           jmp 0x4000181	       170	dir.c	FUNCTION_6	FOR_1	IF_5
0x4000193	        0x4883c408	                              add rsp, 8	       177	dir.c	FUNCTION_6
0x4000197	              0x5b	                                 pop rbx	       177	dir.c	FUNCTION_6
0x4000198	              0x5d	                                 pop rbp	       177	dir.c	FUNCTION_6
0x4000199	            0x415c	                                 pop r12	       177	dir.c	FUNCTION_6
0x400019b	            0x415d	                                 pop r13	       177	dir.c	FUNCTION_6
0x400019d	              0xc3	                                     ret	       177	dir.c	FUNCTION_6
dir_add_name	ELSE,0:SWITCH,0:IF,1:functions,0:CALL,2:FOR,0:WHILE,0:DO,0	54
0x40005d5	            0x4154	                                push r12	      1340	dir.c	FUNCTION_44
0x40005d7	              0x55	                                push rbp	      1340	dir.c	FUNCTION_44
0x40005d8	              0x53	                                push rbx	      1340	dir.c	FUNCTION_44
0x40005d9	          0x4889fb	                            mov rbx, rdi	      1340	dir.c	FUNCTION_44
0x40005dc	          0x4889f7	                            mov rdi, rsi	      1340	dir.c	FUNCTION_44
0x40005df	          0x4889d5	                            mov rbp, rdx	      1340	dir.c	FUNCTION_44
0x40005e2	          0x4189cc	                           mov r12d, ecx	      1340	dir.c	FUNCTION_44
0x40005e5	    0x8b0d00000000	            mov ecx, dword [0x040005eb] 	      1341	dir.c	FUNCTION_44	IF_1	CALL_1
0x40005eb	          0x4489e2	                           mov edx, r12d	      1341	dir.c	FUNCTION_44	IF_1	CALL_1
0x40005ee	          0x4889ee	                            mov rsi, rbp	      1341	dir.c	FUNCTION_44	IF_1	CALL_1
0x40005f1	      0xe800000000	                          call 0x40005f6	      1341	dir.c	FUNCTION_44	IF_1	CALL_1
0x40005f6	          0x4885c0	                           test rax, rax	      1341	dir.c	FUNCTION_44	IF_1	CALL_1
0x40005f9	            0x757d	                           jne 0x4000678	      1341	dir.c	FUNCTION_44	IF_1	CALL_1
0x40005fb	            0x8b03	                    mov eax, dword [rbx]	      1344	dir.c	FUNCTION_44
0x40005fd	          0x8d5001	                      lea edx, [rax + 1]	      1344	dir.c	FUNCTION_44
0x4000600	          0x8b4304	                mov eax, dword [rbx + 4]	      1344	dir.c	FUNCTION_44
0x4000603	            0x39c2	                            cmp edx, eax	      1344	dir.c	FUNCTION_44
0x4000605	            0x7e50	                           jle 0x4000657	      1344	dir.c	FUNCTION_44
0x4000607	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	      1344	dir.c	FUNCTION_44
0x400060b	            0x89c6	                            mov esi, eax	      1344	dir.c	FUNCTION_44
0x400060d	          0xc1ee1f	                           shr esi, 0x1f	      1344	dir.c	FUNCTION_44
0x4000610	             0x1c6	                            add esi, eax	      1344	dir.c	FUNCTION_44
0x4000612	            0xd1fe	                              sar esi, 1	      1344	dir.c	FUNCTION_44
0x4000614	            0x39f2	                            cmp edx, esi	      1344	dir.c	FUNCTION_44
0x4000616	           0xf4ff2	                          cmovg esi, edx	      1344	dir.c	FUNCTION_44
0x4000619	          0x897304	                mov dword [rbx + 4], esi	      1344	dir.c	FUNCTION_44
0x400061c	          0x4863d6	                         movsxd rdx, esi	      1344	dir.c	FUNCTION_44
0x400061f	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_171	IF_1
0x4000629	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_171	IF_1
0x400062c	            0x7614	                           jbe 0x4000642	       795	git-compat-util.h	FUNCTION_171	IF_1
0x400062e	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_171	IF_1	CALL_1
0x4000633	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_171	IF_1	CALL_1
0x4000638	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_171	IF_1	CALL_1
0x400063d	      0xe800000000	                          call 0x4000642	       796	git-compat-util.h	FUNCTION_171	IF_1	CALL_1
0x4000642	    0x488d34d50000	                        lea rsi, [rdx*8]	      1344	dir.c	FUNCTION_44
0x400064a	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      1344	dir.c	FUNCTION_44
0x400064e	      0xe800000000	                          call 0x4000653	      1344	dir.c	FUNCTION_44
0x4000653	        0x48894318	             mov qword [rbx + 0x18], rax	      1344	dir.c	FUNCTION_44
0x4000657	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      1345	dir.c	FUNCTION_44	CALL_2
0x400065b	            0x8b03	                    mov eax, dword [rbx]	      1345	dir.c	FUNCTION_44	CALL_2
0x400065d	          0x8d4801	                      lea ecx, [rax + 1]	      1345	dir.c	FUNCTION_44	CALL_2
0x4000660	            0x890b	                    mov dword [rbx], ecx	      1345	dir.c	FUNCTION_44	CALL_2
0x4000662	            0x4898	                                    cdqe	      1345	dir.c	FUNCTION_44	CALL_2
0x4000664	        0x488d1cc2	                  lea rbx, [rdx + rax*8]	      1345	dir.c	FUNCTION_44	CALL_2
0x4000668	          0x4489e6	                           mov esi, r12d	      1345	dir.c	FUNCTION_44	CALL_2
0x400066b	          0x4889ef	                            mov rdi, rbp	      1345	dir.c	FUNCTION_44	CALL_2
0x400066e	      0xe86cfbffff	                  call sym.dir_entry_new	      1345	dir.c	FUNCTION_44	CALL_2
0x4000673	          0x488903	                    mov qword [rbx], rax	      1345	dir.c	FUNCTION_44	CALL_2
0x4000676	            0xeb05	                           jmp 0x400067d	      1345	dir.c	FUNCTION_44	CALL_2
0x4000678	      0xb800000000	                              mov eax, 0	      1342	dir.c	FUNCTION_44	IF_1
0x400067d	              0x5b	                                 pop rbx	      1346	dir.c	FUNCTION_44
0x400067e	              0x5d	                                 pop rbp	      1346	dir.c	FUNCTION_44
0x400067f	            0x415c	                                 pop r12	      1346	dir.c	FUNCTION_44
0x4000681	              0xc3	                                     ret	      1346	dir.c	FUNCTION_44
clear_directory	ELSE,0:SWITCH,0:IF,1:functions,0:CALL,5:FOR,2:WHILE,1:DO,0	52
0x4004a35	            0x4157	                                push r15	      2540	dir.c	FUNCTION_82
0x4004a37	            0x4156	                                push r14	      2540	dir.c	FUNCTION_82
0x4004a39	            0x4155	                                push r13	      2540	dir.c	FUNCTION_82
0x4004a3b	            0x4154	                                push r12	      2540	dir.c	FUNCTION_82
0x4004a3d	              0x55	                                push rbp	      2540	dir.c	FUNCTION_82
0x4004a3e	              0x53	                                push rbx	      2540	dir.c	FUNCTION_82
0x4004a3f	        0x4883ec08	                              sub rsp, 8	      2540	dir.c	FUNCTION_82
0x4004a43	          0x4989ff	                            mov r15, rdi	      2540	dir.c	FUNCTION_82
0x4004a46	        0x4c8d7730	                   lea r14, [rdi + 0x30]	      2540	dir.c	FUNCTION_82
0x4004a4a	    0x41bd00000000	                             mov r13d, 0	      2546	dir.c	FUNCTION_82	FOR_1
0x4004a50	            0xeb44	                           jmp 0x4004a96	      2546	dir.c	FUNCTION_82	FOR_1
0x4004a52	          0x4863dd	                         movsxd rbx, ebp	      2549	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4004a55	        0x48c1e305	                              shl rbx, 5	      2549	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4004a59	      0x49035c2408	                add rbx, qword [r12 + 8]	      2549	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4004a5e	        0x4183fd01	                             cmp r13d, 1	      2550	dir.c	FUNCTION_82	FOR_1	FOR_2	IF_1
0x4004a62	            0x7509	                           jne 0x4004a6d	      2550	dir.c	FUNCTION_82	FOR_1	FOR_2	IF_1
0x4004a64	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      2551	dir.c	FUNCTION_82	FOR_1	FOR_2	CALL_1
0x4004a68	      0xe800000000	                          call 0x4004a6d	      2551	dir.c	FUNCTION_82	FOR_1	FOR_2	CALL_1
0x4004a6d	          0x4889df	                            mov rdi, rbx	      2552	dir.c	FUNCTION_82	FOR_1	FOR_2	CALL_2
0x4004a70	      0xe800000000	                          call 0x4004a75	      2552	dir.c	FUNCTION_82	FOR_1	FOR_2	CALL_2
0x4004a75	          0x83c501	                              add ebp, 1	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4004a78	        0x41392c24	                    cmp dword [r12], ebp	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4004a7c	            0x7fd4	                            jg 0x4004a52	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4004a7e	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      2554	dir.c	FUNCTION_82	FOR_1	CALL_3
0x4004a83	      0xe800000000	                          call 0x4004a88	      2554	dir.c	FUNCTION_82	FOR_1	CALL_3
0x4004a88	        0x4183c501	                             add r13d, 1	      2546	dir.c	FUNCTION_82	FOR_1
0x4004a8c	        0x4983c610	                           add r14, 0x10	      2546	dir.c	FUNCTION_82	FOR_1
0x4004a90	        0x4183fd03	                             cmp r13d, 3	      2546	dir.c	FUNCTION_82	FOR_1
0x4004a94	            0x7410	                            je 0x4004aa6	      2546	dir.c	FUNCTION_82	FOR_1
0x4004a96	          0x4d89f4	                            mov r12, r14	      2546	dir.c	FUNCTION_82	FOR_1
0x4004a99	      0xbd00000000	                              mov ebp, 0	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4004a9e	        0x41833e00	                      cmp dword [r14], 0	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4004aa2	            0x7fae	                            jg 0x4004a52	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4004aa4	            0xebd8	                           jmp 0x4004a7e	      2548	dir.c	FUNCTION_82	FOR_1	FOR_2
0x4004aa6	        0x498b7f60	            mov rdi, qword [r15 + 0x60] 	      2557	dir.c	FUNCTION_82
0x4004aaa	          0x4885ff	                           test rdi, rdi	      2558	dir.c	FUNCTION_82	WHILE_1
0x4004aad	            0x7410	                            je 0x4004abf	      2558	dir.c	FUNCTION_82	WHILE_1
0x4004aaf	          0x488b1f	                    mov rbx, qword [rdi]	      2559	dir.c	FUNCTION_82	WHILE_1
0x4004ab2	      0xe800000000	                          call 0x4004ab7	      2560	dir.c	FUNCTION_82	WHILE_1	CALL_4
0x4004ab7	          0x4889df	                            mov rdi, rbx	      2561	dir.c	FUNCTION_82	WHILE_1
0x4004aba	          0x4885db	                           test rbx, rbx	      2558	dir.c	FUNCTION_82	WHILE_1
0x4004abd	            0x75f0	                           jne 0x4004aaf	      2558	dir.c	FUNCTION_82	WHILE_1
0x4004abf	        0x498d7f70	                   lea rdi, [r15 + 0x70]	      2563	dir.c	FUNCTION_82	CALL_5
0x4004ac3	      0xe800000000	                          call 0x4004ac8	      2563	dir.c	FUNCTION_82	CALL_5
0x4004ac8	        0x4883c408	                              add rsp, 8	      2564	dir.c	FUNCTION_82
0x4004acc	              0x5b	                                 pop rbx	      2564	dir.c	FUNCTION_82
0x4004acd	              0x5d	                                 pop rbp	      2564	dir.c	FUNCTION_82
0x4004ace	            0x415c	                                 pop r12	      2564	dir.c	FUNCTION_82
0x4004ad0	            0x415d	                                 pop r13	      2564	dir.c	FUNCTION_82
0x4004ad2	            0x415e	                                 pop r14	      2564	dir.c	FUNCTION_82
0x4004ad4	            0x415f	                                 pop r15	      2564	dir.c	FUNCTION_82
0x4004ad6	              0xc3	                                     ret	      2564	dir.c	FUNCTION_82
add_untracked_cache	ELSE,1:SWITCH,0:IF,2:functions,0:CALL,4:FOR,0:WHILE,0:DO,0	23
0x4004dc9	              0x55	                                push rbp	      2151	dir.c	FUNCTION_69
0x4004dca	              0x53	                                push rbx	      2151	dir.c	FUNCTION_69
0x4004dcb	        0x4883ec08	                              sub rsp, 8	      2151	dir.c	FUNCTION_69
0x4004dcf	          0x4889fd	                            mov rbp, rdi	      2151	dir.c	FUNCTION_69
0x4004dd2	    0x488b9fb80000	            mov rbx, qword [rdi + 0xb8] 	      2152	dir.c	FUNCTION_69	IF_1
0x4004dd9	          0x4885db	                           test rbx, rbx	      2152	dir.c	FUNCTION_69	IF_1
0x4004ddc	            0x7507	                           jne 0x4004de5	      2152	dir.c	FUNCTION_69	IF_1
0x4004dde	      0xe828c3ffff	            call sym.new_untracked_cache	      2153	dir.c	FUNCTION_69	IF_1	CALL_1
0x4004de3	            0xeb2c	                           jmp 0x4004e11	      2153	dir.c	FUNCTION_69	IF_1	CALL_1
0x4004de5	      0xe8fbbbffff	               call sym.get_ident_string	      2123	dir.c	FUNCTION_66	CALL_2
0x4004dea	    0x488bbb900000	            mov rdi, qword [rbx + 0x90] 	      2123	dir.c	FUNCTION_66	CALL_2
0x4004df1	          0x4889c6	                            mov rsi, rax	      2123	dir.c	FUNCTION_66	CALL_2
0x4004df4	      0xe800000000	                          call 0x4004df9	      2123	dir.c	FUNCTION_66	CALL_2
0x4004df9	            0x85c0	                           test eax, eax	      2155	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_2
0x4004dfb	            0x7414	                            je 0x4004e11	      2155	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_2
0x4004dfd	    0x488bbdb80000	            mov rdi, qword [rbp + 0xb8] 	      2156	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_3
0x4004e04	      0xe800000000	                          call 0x4004e09	      2156	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_3
0x4004e09	          0x4889ef	                            mov rdi, rbp	      2157	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_4
0x4004e0c	      0xe8fac2ffff	            call sym.new_untracked_cache	      2157	dir.c	FUNCTION_69	ELSE_1	IF_2	CALL_4
0x4004e11	        0x4883c408	                              add rsp, 8	      2160	dir.c	FUNCTION_69
0x4004e15	              0x5b	                                 pop rbx	      2160	dir.c	FUNCTION_69
0x4004e16	              0x5d	                                 pop rbp	      2160	dir.c	FUNCTION_69
0x4004e17	              0xc3	                                     ret	      2160	dir.c	FUNCTION_69
remove_path	ELSE,0:SWITCH,0:IF,2:functions,0:CALL,7:FOR,0:WHILE,0:DO,1	43
0x40049b0	            0x4154	                                push r12	      2517	dir.c	FUNCTION_81
0x40049b2	              0x55	                                push rbp	      2517	dir.c	FUNCTION_81
0x40049b3	              0x53	                                push rbx	      2517	dir.c	FUNCTION_81
0x40049b4	          0x4989fc	                            mov r12, rdi	      2517	dir.c	FUNCTION_81
0x40049b7	      0xe800000000	                          call 0x40049bc	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x40049bc	            0x85c0	                           test eax, eax	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x40049be	            0x7416	                            je 0x40049d6	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x40049c0	      0xe800000000	                          call 0x40049c5	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x40049c5	            0x8b10	                    mov edx, dword [rax]	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x40049c7	          0x83fa02	                              cmp edx, 2	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x40049ca	            0x740a	                            je 0x40049d6	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x40049cc	      0xb8ffffffff	                     mov eax, 0xffffffff	      2521	dir.c	FUNCTION_81	IF_1
0x40049d1	          0x83fa14	                           cmp edx, 0x14	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x40049d4	            0x755a	                           jne 0x4004a30	      2520	dir.c	FUNCTION_81	IF_1	CALL_2
0x40049d6	      0xbe2f000000	                           mov esi, 0x2f	      2523	dir.c	FUNCTION_81	CALL_3
0x40049db	          0x4c89e7	                            mov rdi, r12	      2523	dir.c	FUNCTION_81	CALL_3
0x40049de	      0xe800000000	                          call 0x40049e3	      2523	dir.c	FUNCTION_81	CALL_3
0x40049e3	          0x4889c3	                            mov rbx, rax	      2523	dir.c	FUNCTION_81	CALL_3
0x40049e6	      0xb800000000	                              mov eax, 0	      2532	dir.c	FUNCTION_81
0x40049eb	          0x4885db	                           test rbx, rbx	      2524	dir.c	FUNCTION_81	IF_2
0x40049ee	            0x7440	                            je 0x4004a30	      2524	dir.c	FUNCTION_81	IF_2
0x40049f0	          0x4c89e7	                            mov rdi, r12	      2525	dir.c	FUNCTION_81	IF_2	CALL_4
0x40049f3	      0xe800000000	                          call 0x40049f8	      2525	dir.c	FUNCTION_81	IF_2	CALL_4
0x40049f8	          0x4889c5	                            mov rbp, rax	      2525	dir.c	FUNCTION_81	IF_2	CALL_4
0x40049fb	          0x4c29e3	                            sub rbx, r12	      2526	dir.c	FUNCTION_81	IF_2
0x40049fe	        0x488d0418	                    lea rax, [rax + rbx]	      2526	dir.c	FUNCTION_81	IF_2
0x4004a02	          0xc60000	                       mov byte [rax], 0	      2528	dir.c	FUNCTION_81	IF_2	DO_1
0x4004a05	          0x4889ef	                            mov rdi, rbp	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4004a08	      0xe800000000	                          call 0x4004a0d	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4004a0d	            0x85c0	                           test eax, eax	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4004a0f	            0x7512	                           jne 0x4004a23	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4004a11	      0xbe2f000000	                           mov esi, 0x2f	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4004a16	          0x4889ef	                            mov rdi, rbp	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4004a19	      0xe800000000	                          call 0x4004a1e	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4004a1e	          0x4885c0	                           test rax, rax	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4004a21	            0x75df	                           jne 0x4004a02	      2529	dir.c	FUNCTION_81	IF_2	CALL_6
0x4004a23	          0x4889ef	                            mov rdi, rbp	      2530	dir.c	FUNCTION_81	IF_2	CALL_7
0x4004a26	      0xe800000000	                          call 0x4004a2b	      2530	dir.c	FUNCTION_81	IF_2	CALL_7
0x4004a2b	      0xb800000000	                              mov eax, 0	      2532	dir.c	FUNCTION_81
0x4004a30	              0x5b	                                 pop rbx	      2533	dir.c	FUNCTION_81
0x4004a31	              0x5d	                                 pop rbp	      2533	dir.c	FUNCTION_81
0x4004a32	            0x415c	                                 pop r12	      2533	dir.c	FUNCTION_81
0x4004a34	              0xc3	                                     ret	      2533	dir.c	FUNCTION_81
remove_dir_recursively	ELSE,0:SWITCH,0:IF,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0	5
0x40048ba	        0x4883ec08	                              sub rsp, 8	      2490	dir.c	FUNCTION_79
0x40048be	      0xba00000000	                              mov edx, 0	      2491	dir.c	FUNCTION_79	CALL_1
0x40048c3	      0xe853c9ffff	             call sym.remove_dir_recurse	      2491	dir.c	FUNCTION_79	CALL_1
0x40048c8	        0x4883c408	                              add rsp, 8	      2492	dir.c	FUNCTION_79
0x40048cc	              0xc3	                                     ret	      2492	dir.c	FUNCTION_79
fspathncmp	ELSE,0:SWITCH,0:IF,0:functions,0:CALL,2:FOR,0:WHILE,0:DO,0	8
0x400163e	        0x4883ec08	                              sub rsp, 8	        73	dir.c	FUNCTION_3
0x4001642	    0x833d00000000	               cmp dword [0x04001649], 0	        74	dir.c	FUNCTION_3	CALL_2
0x4001649	            0x7407	                            je 0x4001652	        74	dir.c	FUNCTION_3	CALL_2
0x400164b	      0xe800000000	                          call 0x4001650	        74	dir.c	FUNCTION_3	CALL_2
0x4001650	            0xeb05	                           jmp 0x4001657	        74	dir.c	FUNCTION_3	CALL_2
0x4001652	      0xe800000000	                          call 0x4001657	        74	dir.c	FUNCTION_3	CALL_2
0x4001657	        0x4883c408	                              add rsp, 8	        75	dir.c	FUNCTION_3
0x400165b	              0xc3	                                     ret	        75	dir.c	FUNCTION_3
untracked_cache_remove_from_index	ELSE,0:SWITCH,0:IF,0:functions,0:CALL,1:FOR,0:WHILE,0:DO,0	5
0x40051eb	        0x4883ec08	                              sub rsp, 8	      3004	dir.c	FUNCTION_98
0x40051ef	      0xba01000000	                              mov edx, 1	      3005	dir.c	FUNCTION_98	CALL_1
0x40051f4	      0xe800000000	                          call 0x40051f9	      3005	dir.c	FUNCTION_98	CALL_1
0x40051f9	        0x4883c408	                              add rsp, 8	      3006	dir.c	FUNCTION_98
0x40051fd	              0xc3	                                     ret	      3006	dir.c	FUNCTION_98
do_match_pathspec	ELSE,2:SWITCH,0:IF,12:functions,0:CALL,3:FOR,1:WHILE,0:DO,0	354
0x40017b1	            0x4157	                                push r15	       432	dir.c	FUNCTION_13
0x40017b3	            0x4156	                                push r14	       432	dir.c	FUNCTION_13
0x40017b5	            0x4155	                                push r13	       432	dir.c	FUNCTION_13
0x40017b7	            0x4154	                                push r12	       432	dir.c	FUNCTION_13
0x40017b9	              0x55	                                push rbp	       432	dir.c	FUNCTION_13
0x40017ba	              0x53	                                push rbx	       432	dir.c	FUNCTION_13
0x40017bb	        0x4883ec68	                           sub rsp, 0x68	       432	dir.c	FUNCTION_13
0x40017bf	          0x4989ff	                            mov r15, rdi	       432	dir.c	FUNCTION_13
0x40017c2	          0x4889f7	                            mov rdi, rsi	       432	dir.c	FUNCTION_13
0x40017c5	            0x89d6	                            mov esi, edx	       432	dir.c	FUNCTION_13
0x40017c7	        0x894c2438	             mov dword [rsp + 0x38], ecx	       432	dir.c	FUNCTION_13
0x40017cb	      0x4c89442418	              mov qword [rsp + 0x18], r8	       432	dir.c	FUNCTION_13
0x40017d0	        0x418b5708	                mov edx, dword [r15 + 8]	       435	dir.c	FUNCTION_13
0x40017d4	            0x89d1	                            mov ecx, edx	       435	dir.c	FUNCTION_13
0x40017d6	          0x83e180	                     and ecx, 0xffffff80	       435	dir.c	FUNCTION_13
0x40017d9	            0x7419	                            je 0x40017f4	       435	dir.c	FUNCTION_13
0x40017db	      0xbaba010000	                          mov edx, 0x1ba	       435	dir.c	FUNCTION_13
0x40017e0	      0xbe00000000	                              mov esi, 0	       435	dir.c	FUNCTION_13
0x40017e5	      0xbf00000000	                              mov edi, 0	       435	dir.c	FUNCTION_13
0x40017ea	      0xb800000000	                              mov eax, 0	       435	dir.c	FUNCTION_13
0x40017ef	      0xe800000000	                          call 0x40017f4	       435	dir.c	FUNCTION_13
0x40017f4	          0x418b07	                    mov eax, dword [r15]	       444	dir.c	FUNCTION_13	IF_1
0x40017f7	            0x85c0	                           test eax, eax	       444	dir.c	FUNCTION_13	IF_1
0x40017f9	            0x753f	                           jne 0x400183a	       444	dir.c	FUNCTION_13	IF_1
0x40017fb	      0xb801000000	                              mov eax, 1	       448	dir.c	FUNCTION_13	IF_1	IF_2
0x4001800	      0x41f6470402	                  test byte [r15 + 4], 2	       445	dir.c	FUNCTION_13	IF_1	IF_2
0x4001805	     0xf84d7040000	                            je 0x4001ce2	       445	dir.c	FUNCTION_13	IF_1	IF_2
0x400180b	          0xf6c202	                              test dl, 2	       445	dir.c	FUNCTION_13	IF_1	IF_2
0x400180e	     0xf84ce040000	                            je 0x4001ce2	       445	dir.c	FUNCTION_13	IF_1	IF_2
0x4001814	        0x418b4f0c	              mov ecx, dword [r15 + 0xc]	       447	dir.c	FUNCTION_13	IF_1	IF_2
0x4001818	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	       446	dir.c	FUNCTION_13	IF_1	IF_2
0x400181b	     0xf8457040000	                            je 0x4001c78	       446	dir.c	FUNCTION_13	IF_1	IF_2
0x4001821	      0xba00000000	                              mov edx, 0	       450	dir.c	FUNCTION_13	IF_1	IF_3	CALL_1
0x4001826	      0xe800000000	                          call 0x400182b	       450	dir.c	FUNCTION_13	IF_1	IF_3	CALL_1
0x400182b	            0x85c0	                           test eax, eax	       451	dir.c	FUNCTION_13	IF_1	IF_3
0x400182d	      0xba03000000	                              mov edx, 3	       451	dir.c	FUNCTION_13	IF_1	IF_3
0x4001832	           0xf45c2	                         cmovne eax, edx	       451	dir.c	FUNCTION_13	IF_1	IF_3
0x4001835	      0xe9a8040000	                           jmp 0x4001ce2	       451	dir.c	FUNCTION_13	IF_1	IF_3
0x400183a	        0x8b5c2438	            mov ebx, dword [rsp + 0x38] 	       456	dir.c	FUNCTION_13	ELSE_1
0x400183e	          0x4863cb	                         movsxd rcx, ebx	       456	dir.c	FUNCTION_13	ELSE_1
0x4001841	      0x48894c2430	             mov qword [rsp + 0x30], rcx	       456	dir.c	FUNCTION_13	ELSE_1
0x4001846	          0x4801cf	                            add rdi, rcx	       456	dir.c	FUNCTION_13	ELSE_1
0x4001849	      0x48897c2428	             mov qword [rsp + 0x28], rdi	       456	dir.c	FUNCTION_13	ELSE_1
0x400184e	            0x29de	                            sub esi, ebx	       457	dir.c	FUNCTION_13	ELSE_1
0x4001850	        0x8974243c	             mov dword [rsp + 0x3c], esi	       457	dir.c	FUNCTION_13	ELSE_1
0x4001854	          0x83e801	                              sub eax, 1	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001857	          0x4189c6	                           mov r14d, eax	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x400185a	     0xf881f040000	                            js 0x4001c7f	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001860	    0xc74424240000	               mov dword [rsp + 0x24], 0	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001868	          0x4489c8	                            mov eax, r9d	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x400186b	          0x83e001	                              and eax, 1	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x400186e	        0x89442414	             mov dword [rsp + 0x14], eax	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001872	          0x4489c8	                            mov eax, r9d	       385	dir.c	FUNCTION_12	IF_9
0x4001875	          0x83e004	                              and eax, 4	       385	dir.c	FUNCTION_12	IF_9
0x4001878	        0x8944244c	             mov dword [rsp + 0x4c], eax	       385	dir.c	FUNCTION_12	IF_9
0x400187c	          0x4863c6	                         movsxd rax, esi	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x400187f	      0x4889442458	             mov qword [rsp + 0x58], rax	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4001884	        0x4183e102	                              and r9d, 2	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001888	      0x44894c2448	             mov dword [rsp + 0x48], r9d	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x400188d	      0x837c241400	               cmp dword [rsp + 0x14], 0	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001892	            0x7522	                           jne 0x40018b6	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001894	          0x4963c6	                        movsxd rax, r14d	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4001897	    0x488d14c50000	                        lea rdx, [rax*8]	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x400189f	        0x48c1e006	                              shl rax, 6	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40018a3	          0x4829d0	                            sub rax, rdx	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40018a6	        0x49034710	             add rax, qword [r15 + 0x10]	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40018aa	        0xf6401020	           test byte [rax + 0x10], 0x20 	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40018ae	     0xf85b0030000	                           jne 0x4001c64	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40018b4	            0xeb20	                           jmp 0x40018d6	       462	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40018b6	          0x4963c6	                        movsxd rax, r14d	       463	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40018b9	    0x488d14c50000	                        lea rdx, [rax*8]	       463	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40018c1	        0x48c1e006	                              shl rax, 6	       463	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40018c5	          0x4829d0	                            sub rax, rdx	       463	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40018c8	        0x49034710	             add rax, qword [r15 + 0x10]	       463	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40018cc	        0xf6401020	           test byte [rax + 0x10], 0x20 	       463	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40018d0	     0xf848e030000	                            je 0x4001c64	       463	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x40018d6	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x40018db	          0x4885c9	                           test rcx, rcx	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x40018de	            0x742c	                            je 0x400190c	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x40018e0	          0x4963c6	                        movsxd rax, r14d	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x40018e3	        0x488d1401	                    lea rdx, [rcx + rax]	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x40018e7	          0x803a03	                       cmp byte [rdx], 3	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x40018ea	     0xf8474030000	                            je 0x4001c64	       466	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_5
0x40018f0	    0x488d0cc50000	                        lea rcx, [rax*8]	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x40018f8	        0x48c1e006	                              shl rax, 6	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x40018fc	          0x4829c8	                            sub rax, rcx	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x40018ff	        0x49034710	             add rax, qword [r15 + 0x10]	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x4001903	        0xf6401020	           test byte [rax + 0x10], 0x20 	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x4001907	            0x7403	                            je 0x400190c	       472	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x4001909	          0xc60202	                       mov byte [rdx], 2	       473	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_6
0x400190c	          0x4d63ee	                        movsxd r13, r14d	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x400190f	    0x4a8d04ed0000	                        lea rax, [r13*8]	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x4001917	          0x4c89ea	                            mov rdx, r13	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x400191a	        0x48c1e206	                              shl rdx, 6	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x400191e	          0x4829c2	                            sub rdx, rax	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x4001921	      0x4889542440	             mov qword [rsp + 0x40], rdx	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x4001926	          0x4989d4	                            mov r12, rdx	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x4001929	        0x4d036710	             add r12, qword [r15 + 0x10]	       474	dir.c	FUNCTION_13	ELSE_1	FOR_1	CALL_2
0x400192d	        0x498b3c24	                    mov rdi, qword [r12]	       324	dir.c	FUNCTION_12
0x4001931	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       324	dir.c	FUNCTION_12
0x4001936	        0x488d0c07	                    lea rcx, [rdi + rax]	       324	dir.c	FUNCTION_12
0x400193a	      0x48894c2408	                mov qword [rsp + 8], rcx	       324	dir.c	FUNCTION_12
0x400193f	      0x418b5c2414	            mov ebx, dword [r12 + 0x14] 	       325	dir.c	FUNCTION_12
0x4001944	        0x895c2420	             mov dword [rsp + 0x20], ebx	       325	dir.c	FUNCTION_12
0x4001948	      0x418b542418	            mov edx, dword [r12 + 0x18] 	       356	dir.c	FUNCTION_12	IF_1
0x400194d	            0x85d2	                           test edx, edx	       356	dir.c	FUNCTION_12	IF_1
0x400194f	            0x7420	                            je 0x4001971	       356	dir.c	FUNCTION_12	IF_1
0x4001951	    0x41f644241010	           test byte [r12 + 0x10], 0x10 	       356	dir.c	FUNCTION_12	IF_1
0x4001957	            0x7418	                            je 0x4001971	       356	dir.c	FUNCTION_12	IF_1
0x4001959	          0x4863d2	                         movsxd rdx, edx	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x400195c	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x4001961	          0x4829c6	                            sub rsi, rax	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x4001964	      0xe800000000	                          call 0x4001969	       357	dir.c	FUNCTION_12	IF_1	CALL_1
0x4001969	            0x85c0	                           test eax, eax	       356	dir.c	FUNCTION_12	IF_1
0x400196b	     0xf8515030000	                           jne 0x4001c86	       356	dir.c	FUNCTION_12	IF_1
0x4001971	    0x41837c242400	               cmp dword [r12 + 0x24], 0	       360	dir.c	FUNCTION_12	IF_2	CALL_2
0x4001977	     0xf84b8000000	                            je 0x4001a35	       360	dir.c	FUNCTION_12	IF_2	CALL_2
0x400197d	      0x498b742430	            mov rsi, qword [r12 + 0x30] 	       283	dir.c	FUNCTION_11	CALL_1
0x4001982	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       283	dir.c	FUNCTION_11	CALL_1
0x4001987	      0xe800000000	                          call 0x400198c	       283	dir.c	FUNCTION_11	CALL_1
0x400198c	      0x418b442424	            mov eax, dword [r12 + 0x24] 	       284	dir.c	FUNCTION_11	FOR_1
0x4001991	            0x85c0	                           test eax, eax	       284	dir.c	FUNCTION_11	FOR_1
0x4001993	     0xf8e9c000000	                           jle 0x4001a35	       284	dir.c	FUNCTION_11	FOR_1
0x4001999	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	       290	dir.c	FUNCTION_11	FOR_1
0x400199e	      0x498b4c2430	            mov rcx, qword [r12 + 0x30] 	       289	dir.c	FUNCTION_11	FOR_1
0x40019a3	        0x488b6908	                mov rbp, qword [rcx + 8]	       289	dir.c	FUNCTION_11	FOR_1
0x40019a7	        0x4883c508	                              add rbp, 8	       289	dir.c	FUNCTION_11	FOR_1
0x40019ab	        0x488d5a08	                      lea rbx, [rdx + 8]	       289	dir.c	FUNCTION_11	FOR_1
0x40019af	          0x8d40ff	                      lea eax, [rax - 1]	       289	dir.c	FUNCTION_11	FOR_1
0x40019b2	        0x48c1e004	                              shl rax, 4	       289	dir.c	FUNCTION_11	FOR_1
0x40019b6	      0x488d440218	            lea rax, [rdx + rax + 0x18] 	       289	dir.c	FUNCTION_11	FOR_1
0x40019bb	      0x4c89642450	             mov qword [rsp + 0x50], r12	       289	dir.c	FUNCTION_11	FOR_1
0x40019c0	          0x4989c4	                            mov r12, rax	       289	dir.c	FUNCTION_11	FOR_1
0x40019c3	        0x488b7500	                    mov rsi, qword [rbp]	       289	dir.c	FUNCTION_11	FOR_1
0x40019c7	            0x8b03	                    mov eax, dword [rbx]	       290	dir.c	FUNCTION_11	FOR_1
0x40019c9	    0x4881fe000000	                              cmp rsi, 0	       292	dir.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x40019d0	            0x750a	                           jne 0x40019dc	       292	dir.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x40019d2	            0x85c0	                           test eax, eax	       293	dir.c	FUNCTION_11	FOR_1	IF_1
0x40019d4	           0xf94c0	                                 sete al	       293	dir.c	FUNCTION_11	FOR_1	IF_1
0x40019d7	           0xfb6c0	                           movzx eax, al	       293	dir.c	FUNCTION_11	FOR_1	IF_1
0x40019da	            0xeb3f	                           jmp 0x4001a1b	       293	dir.c	FUNCTION_11	FOR_1	IF_1
0x40019dc	    0x4881fe000000	                              cmp rsi, 0	       294	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2	CALL_3
0x40019e3	            0x750b	                           jne 0x40019f0	       294	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2	CALL_3
0x40019e5	          0x83f801	                              cmp eax, 1	       295	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2
0x40019e8	           0xf94c0	                                 sete al	       295	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2
0x40019eb	           0xfb6c0	                           movzx eax, al	       295	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2
0x40019ee	            0xeb2b	                           jmp 0x4001a1b	       295	dir.c	FUNCTION_11	FOR_1	ELSE_1	IF_2
0x40019f0	          0x4885f6	                           test rsi, rsi	       296	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3	CALL_4
0x40019f3	            0x750b	                           jne 0x4001a00	       296	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3	CALL_4
0x40019f5	          0x83f803	                              cmp eax, 3	       297	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3
0x40019f8	           0xf94c0	                                 sete al	       297	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3
0x40019fb	           0xfb6c0	                           movzx eax, al	       297	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3
0x40019fe	            0xeb1b	                           jmp 0x4001a1b	       297	dir.c	FUNCTION_11	FOR_1	ELSE_2	IF_3
0x4001a00	          0x83f802	                              cmp eax, 2	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4001a03	     0xf857d020000	                           jne 0x4001c86	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4001a09	        0x488b7bf8	                mov rdi, qword [rbx - 8]	       300	dir.c	FUNCTION_11	FOR_1	CALL_5
0x4001a0d	      0xe800000000	                          call 0x4001a12	       300	dir.c	FUNCTION_11	FOR_1	CALL_5
0x4001a12	            0x85c0	                           test eax, eax	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4001a14	            0x740d	                            je 0x4001a23	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4001a16	      0xe96b020000	                           jmp 0x4001c86	       299	dir.c	FUNCTION_11	FOR_1	ELSE_3
0x4001a1b	            0x85c0	                           test eax, eax	       301	dir.c	FUNCTION_11	FOR_1	IF_4
0x4001a1d	     0xf84a0020000	                            je 0x4001cc3	       301	dir.c	FUNCTION_11	FOR_1	IF_4
0x4001a23	        0x4883c510	                           add rbp, 0x10	       301	dir.c	FUNCTION_11	FOR_1	IF_4
0x4001a27	        0x4883c310	                           add rbx, 0x10	       301	dir.c	FUNCTION_11	FOR_1	IF_4
0x4001a2b	          0x4c39e3	                            cmp rbx, r12	       284	dir.c	FUNCTION_11	FOR_1
0x4001a2e	            0x7593	                           jne 0x40019c3	       284	dir.c	FUNCTION_11	FOR_1
0x4001a30	      0x4c8b642450	            mov r12, qword [rsp + 0x50] 	       284	dir.c	FUNCTION_11	FOR_1
0x4001a35	      0x488b442408	                mov rax, qword [rsp + 8]	       364	dir.c	FUNCTION_12	IF_3
0x4001a3a	          0x803800	                       cmp byte [rax], 0	       364	dir.c	FUNCTION_12	IF_3
0x4001a3d	     0xf844c020000	                            je 0x4001c8f	       364	dir.c	FUNCTION_12	IF_3
0x4001a43	        0x8b5c2420	            mov ebx, dword [rsp + 0x20] 	       325	dir.c	FUNCTION_12
0x4001a47	        0x2b5c2438	             sub ebx, dword [rsp + 0x38]	       325	dir.c	FUNCTION_12
0x4001a4b	        0x395c243c	            cmp dword [rsp + 0x3c], ebx 	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4001a4f	            0x7c5d	                            jl 0x4001aae	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4001a51	          0x4863eb	                         movsxd rbp, ebx	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4001a54	    0x41f644241010	           test byte [r12 + 0x10], 0x10 	        92	pathspec.h	FUNCTION_187	IF_1
0x4001a5a	            0x7412	                            je 0x4001a6e	        92	pathspec.h	FUNCTION_187	IF_1
0x4001a5c	          0x4889ea	                            mov rdx, rbp	        93	pathspec.h	FUNCTION_187	CALL_1
0x4001a5f	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	        93	pathspec.h	FUNCTION_187	CALL_1
0x4001a64	          0x4889c7	                            mov rdi, rax	        93	pathspec.h	FUNCTION_187	CALL_1
0x4001a67	      0xe800000000	                          call 0x4001a6c	        93	pathspec.h	FUNCTION_187	CALL_1
0x4001a6c	            0xeb12	                           jmp 0x4001a80	        93	pathspec.h	FUNCTION_187	CALL_1
0x4001a6e	          0x4889ea	                            mov rdx, rbp	        95	pathspec.h	FUNCTION_187	CALL_2
0x4001a71	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	        95	pathspec.h	FUNCTION_187	CALL_2
0x4001a76	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        95	pathspec.h	FUNCTION_187	CALL_2
0x4001a7b	      0xe800000000	                          call 0x4001a80	        95	pathspec.h	FUNCTION_187	CALL_2
0x4001a80	            0x85c0	                           test eax, eax	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4001a82	            0x752a	                           jne 0x4001aae	       367	dir.c	FUNCTION_12	IF_4	CALL_3
0x4001a84	        0x395c243c	            cmp dword [rsp + 0x3c], ebx 	       368	dir.c	FUNCTION_12	IF_4	IF_5
0x4001a88	     0xf8408020000	                            je 0x4001c96	       368	dir.c	FUNCTION_12	IF_4	IF_5
0x4001a8e	      0x488b442408	                mov rax, qword [rsp + 8]	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4001a93	      0x807c28ff2f	         cmp byte [rax + rbp - 1], 0x2f 	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4001a98	     0xf84ff010000	                            je 0x4001c9d	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4001a9e	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4001aa3	        0x803c282f	              cmp byte [rax + rbp], 0x2f	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4001aa7	            0x755e	                           jne 0x4001b07	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4001aa9	      0xe9f6010000	                           jmp 0x4001ca4	       371	dir.c	FUNCTION_12	IF_4	IF_6
0x4001aae	      0x837c244800	               cmp dword [rsp + 0x48], 0	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001ab3	            0x7452	                            je 0x4001b07	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001ab5	          0x4863c3	                         movsxd rax, ebx	       374	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001ab8	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001abd	      0x807c07ff2f	         cmp byte [rdi + rax - 1], 0x2f 	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001ac2	            0x7543	                           jne 0x4001b07	       373	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001ac4	          0x8d43ff	                      lea eax, [rbx - 1]	       374	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001ac7	        0x3944243c	            cmp dword [rsp + 0x3c], eax 	       374	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001acb	            0x753a	                           jne 0x4001b07	       374	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001acd	    0x41f644241010	           test byte [r12 + 0x10], 0x10 	        92	pathspec.h	FUNCTION_187	IF_1
0x4001ad3	            0x7411	                            je 0x4001ae6	        92	pathspec.h	FUNCTION_187	IF_1
0x4001ad5	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	        93	pathspec.h	FUNCTION_187	CALL_1
0x4001ada	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	        93	pathspec.h	FUNCTION_187	CALL_1
0x4001adf	      0xe800000000	                          call 0x4001ae4	        93	pathspec.h	FUNCTION_187	CALL_1
0x4001ae4	            0xeb14	                           jmp 0x4001afa	        93	pathspec.h	FUNCTION_187	CALL_1
0x4001ae6	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	        95	pathspec.h	FUNCTION_187	CALL_2
0x4001aeb	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	        95	pathspec.h	FUNCTION_187	CALL_2
0x4001af0	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        95	pathspec.h	FUNCTION_187	CALL_2
0x4001af5	      0xe800000000	                          call 0x4001afa	        95	pathspec.h	FUNCTION_187	CALL_2
0x4001afa	      0xba03000000	                              mov edx, 3	       377	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001aff	            0x85c0	                           test eax, eax	       375	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001b01	     0xf84b0010000	                            je 0x4001cb7	       375	dir.c	FUNCTION_12	ELSE_1	IF_7
0x4001b07	      0x418b4c241c	            mov ecx, dword [r12 + 0x1c] 	       379	dir.c	FUNCTION_12	IF_8
0x4001b0c	      0x413b4c2414	            cmp ecx, dword [r12 + 0x14] 	       379	dir.c	FUNCTION_12	IF_8
0x4001b11	            0x7d23	                           jge 0x4001b36	       379	dir.c	FUNCTION_12	IF_8
0x4001b13	        0x2b4c2438	             sub ecx, dword [rsp + 0x38]	       380	dir.c	FUNCTION_12	IF_8	CALL_5
0x4001b17	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       380	dir.c	FUNCTION_12	IF_8	CALL_5
0x4001b1c	      0x488b742408	                mov rsi, qword [rsp + 8]	       380	dir.c	FUNCTION_12	IF_8	CALL_5
0x4001b21	          0x4c89e7	                            mov rdi, r12	       380	dir.c	FUNCTION_12	IF_8	CALL_5
0x4001b24	      0xe800000000	                          call 0x4001b29	       380	dir.c	FUNCTION_12	IF_8	CALL_5
0x4001b29	      0xba02000000	                              mov edx, 2	       382	dir.c	FUNCTION_12	IF_8
0x4001b2e	            0x85c0	                           test eax, eax	       379	dir.c	FUNCTION_12	IF_8
0x4001b30	     0xf8481010000	                            je 0x4001cb7	       379	dir.c	FUNCTION_12	IF_8
0x4001b36	      0x837c244c00	               cmp dword [rsp + 0x4c], 0	       385	dir.c	FUNCTION_12	IF_9
0x4001b3b	     0xf8445010000	                            je 0x4001c86	       385	dir.c	FUNCTION_12	IF_9
0x4001b41	        0x395c243c	            cmp dword [rsp + 0x3c], ebx 	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x4001b45	            0x7d46	                           jge 0x4001b8d	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x4001b47	      0x488b442408	                mov rax, qword [rsp + 8]	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x4001b4c	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x4001b51	        0x803c382f	              cmp byte [rax + rdi], 0x2f	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x4001b55	            0x7536	                           jne 0x4001b8d	       387	dir.c	FUNCTION_12	IF_9	IF_10
0x4001b57	    0x41f644241010	           test byte [r12 + 0x10], 0x10 	        92	pathspec.h	FUNCTION_187	IF_1
0x4001b5d	            0x7412	                            je 0x4001b71	        92	pathspec.h	FUNCTION_187	IF_1
0x4001b5f	          0x4889fa	                            mov rdx, rdi	        93	pathspec.h	FUNCTION_187	CALL_1
0x4001b62	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	        93	pathspec.h	FUNCTION_187	CALL_1
0x4001b67	          0x4889c7	                            mov rdi, rax	        93	pathspec.h	FUNCTION_187	CALL_1
0x4001b6a	      0xe800000000	                          call 0x4001b6f	        93	pathspec.h	FUNCTION_187	CALL_1
0x4001b6f	            0xeb14	                           jmp 0x4001b85	        93	pathspec.h	FUNCTION_187	CALL_1
0x4001b71	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	        95	pathspec.h	FUNCTION_187	CALL_2
0x4001b76	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	        95	pathspec.h	FUNCTION_187	CALL_2
0x4001b7b	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        95	pathspec.h	FUNCTION_187	CALL_2
0x4001b80	      0xe800000000	                          call 0x4001b85	        95	pathspec.h	FUNCTION_187	CALL_2
0x4001b85	            0x85c0	                           test eax, eax	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4001b87	     0xf841e010000	                            je 0x4001cab	       388	dir.c	FUNCTION_12	IF_9	IF_10
0x4001b8d	      0x418b54241c	            mov edx, dword [r12 + 0x1c] 	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x4001b92	      0x413b542414	            cmp edx, dword [r12 + 0x14] 	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x4001b97	     0xf8d15010000	                           jge 0x4001cb2	       393	dir.c	FUNCTION_12	IF_9	IF_11
0x4001b9d	        0x2b542438	             sub edx, dword [rsp + 0x38]	       394	dir.c	FUNCTION_12	IF_9	IF_11	CALL_7
0x4001ba1	          0x4863d2	                         movsxd rdx, edx	       394	dir.c	FUNCTION_12	IF_9	IF_11	CALL_7
0x4001ba4	    0x41f644241010	           test byte [r12 + 0x10], 0x10 	        92	pathspec.h	FUNCTION_187	IF_1
0x4001baa	            0x7411	                            je 0x4001bbd	        92	pathspec.h	FUNCTION_187	IF_1
0x4001bac	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	        93	pathspec.h	FUNCTION_187	CALL_1
0x4001bb1	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        93	pathspec.h	FUNCTION_187	CALL_1
0x4001bb6	      0xe800000000	                          call 0x4001bbb	        93	pathspec.h	FUNCTION_187	CALL_1
0x4001bbb	            0xeb0f	                           jmp 0x4001bcc	        93	pathspec.h	FUNCTION_187	CALL_1
0x4001bbd	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	        95	pathspec.h	FUNCTION_187	CALL_2
0x4001bc2	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        95	pathspec.h	FUNCTION_187	CALL_2
0x4001bc7	      0xe800000000	                          call 0x4001bcc	        95	pathspec.h	FUNCTION_187	CALL_2
0x4001bcc	            0x85c0	                           test eax, eax	       358	dir.c	FUNCTION_12	IF_1
0x4001bce	           0xf94c2	                                 sete dl	       358	dir.c	FUNCTION_12	IF_1
0x4001bd1	           0xfb6d2	                           movzx edx, dl	       358	dir.c	FUNCTION_12	IF_1
0x4001bd4	      0x41f6470402	                  test byte [r15 + 4], 2	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001bd9	            0x745b	                            je 0x4001c36	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001bdb	      0x41f6470802	                  test byte [r15 + 8], 2	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001be0	            0x7454	                            je 0x4001c36	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001be2	            0xeb05	                           jmp 0x4001be9	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001be4	      0xba00000000	                              mov edx, 0	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001be9	        0x418b4f0c	              mov ecx, dword [r15 + 0xc]	       478	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001bed	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	       477	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001bf0	            0x7444	                            je 0x4001c36	       477	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001bf2	    0xf7c2fdffffff	                    test edx, 0xfffffffd	       479	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001bf8	            0x743c	                            je 0x4001c36	       479	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001bfa	        0x498b4710	            mov rax, qword [r15 + 0x10] 	       480	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001bfe	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	       480	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001c03	        0x8b443814	      mov eax, dword [rax + rdi + 0x14] 	       480	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001c07	          0x4863d0	                         movsxd rdx, eax	       481	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x4001c0a	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       482	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x4001c0f	        0x803c172f	              cmp byte [rdi + rdx], 0x2f	       482	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x4001c13	           0xf94c2	                                 sete dl	       482	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x4001c16	           0xfb6d2	                           movzx edx, dl	       482	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x4001c19	             0x1d0	                            add eax, edx	       482	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_8
0x4001c1b	        0x8b74243c	            mov esi, dword [rsp + 0x3c] 	       483	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9	CALL_3
0x4001c1f	            0x29c6	                            sub esi, eax	       483	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9	CALL_3
0x4001c21	            0x4898	                                    cdqe	       483	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9	CALL_3
0x4001c23	          0x4801c7	                            add rdi, rax	       483	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9	CALL_3
0x4001c26	      0xba00000000	                              mov edx, 0	       483	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9	CALL_3
0x4001c2b	      0xe800000000	                          call 0x4001c30	       483	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9	CALL_3
0x4001c30	            0x85c0	                           test eax, eax	       483	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9	CALL_3
0x4001c32	            0x7508	                           jne 0x4001c3c	       483	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9	CALL_3
0x4001c34	            0xeb2e	                           jmp 0x4001c64	       483	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9	CALL_3
0x4001c36	            0x85d2	                           test edx, edx	       488	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10
0x4001c38	            0x742a	                            je 0x4001c64	       488	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10
0x4001c3a	            0xeb05	                           jmp 0x4001c41	       488	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10
0x4001c3c	      0xba03000000	                              mov edx, 3	       484	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9
0x4001c41	        0x8b442424	            mov eax, dword [rsp + 0x24] 	       484	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9
0x4001c45	            0x39d0	                            cmp eax, edx	       484	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9
0x4001c47	           0xf4cc2	                          cmovl eax, edx	       484	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9
0x4001c4a	        0x89442424	             mov dword [rsp + 0x24], eax	       484	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7	IF_9
0x4001c4e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001c53	          0x4885c0	                           test rax, rax	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001c56	            0x740c	                            je 0x4001c64	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001c58	          0x4c01e8	                            add rax, r13	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001c5b	           0xfbe08	                   movsx ecx, byte [rax]	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001c5e	            0x39d1	                            cmp ecx, edx	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001c60	            0x7d02	                           jge 0x4001c64	       491	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001c62	            0x8810	                      mov byte [rax], dl	       492	dir.c	FUNCTION_13	ELSE_1	FOR_1	ELSE_2	IF_10	IF_12
0x4001c64	        0x4183ee01	                             sub r14d, 1	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001c68	        0x4183feff	            cmp r14d, 0xffffffffffffffff	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001c6c	     0xf851bfcffff	                           jne 0x400188d	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001c72	        0x8b442424	            mov eax, dword [rsp + 0x24] 	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001c76	            0xeb6a	                           jmp 0x4001ce2	       459	dir.c	FUNCTION_13	ELSE_1	FOR_1
0x4001c78	      0xb801000000	                              mov eax, 1	       448	dir.c	FUNCTION_13	IF_1	IF_2
0x4001c7d	            0xeb63	                           jmp 0x4001ce2	       448	dir.c	FUNCTION_13	IF_1	IF_2
0x4001c7f	      0xb800000000	                              mov eax, 0	       433	dir.c	FUNCTION_13
0x4001c84	            0xeb5c	                           jmp 0x4001ce2	       433	dir.c	FUNCTION_13
0x4001c86	      0x41f6470402	                  test byte [r15 + 4], 2	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001c8b	            0x7548	                           jne 0x4001cd5	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001c8d	            0xebd5	                           jmp 0x4001c64	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001c8f	      0xba01000000	                              mov edx, 1	       365	dir.c	FUNCTION_12	IF_3
0x4001c94	            0xeb21	                           jmp 0x4001cb7	       365	dir.c	FUNCTION_12	IF_3
0x4001c96	      0xba03000000	                              mov edx, 3	       369	dir.c	FUNCTION_12	IF_4	IF_5
0x4001c9b	            0xeb1a	                           jmp 0x4001cb7	       369	dir.c	FUNCTION_12	IF_4	IF_5
0x4001c9d	      0xba01000000	                              mov edx, 1	       372	dir.c	FUNCTION_12	IF_4	IF_6
0x4001ca2	            0xeb13	                           jmp 0x4001cb7	       372	dir.c	FUNCTION_12	IF_4	IF_6
0x4001ca4	      0xba01000000	                              mov edx, 1	       372	dir.c	FUNCTION_12	IF_4	IF_6
0x4001ca9	            0xeb0c	                           jmp 0x4001cb7	       372	dir.c	FUNCTION_12	IF_4	IF_6
0x4001cab	      0xba01000000	                              mov edx, 1	       390	dir.c	FUNCTION_12	IF_9	IF_10
0x4001cb0	            0xeb05	                           jmp 0x4001cb7	       390	dir.c	FUNCTION_12	IF_9	IF_10
0x4001cb2	      0xba01000000	                              mov edx, 1	       407	dir.c	FUNCTION_12	IF_9
0x4001cb7	      0x41f6470402	                  test byte [r15 + 4], 2	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001cbc	            0x7483	                            je 0x4001c41	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001cbe	      0xe918ffffff	                           jmp 0x4001bdb	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001cc3	      0xba00000000	                              mov edx, 0	       361	dir.c	FUNCTION_12	IF_2
0x4001cc8	      0x41f6470402	                  test byte [r15 + 4], 2	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001ccd	     0xf8508ffffff	                           jne 0x4001bdb	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001cd3	            0xeb8f	                           jmp 0x4001c64	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001cd5	      0x41f6470802	                  test byte [r15 + 8], 2	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001cda	     0xf8504ffffff	                           jne 0x4001be4	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001ce0	            0xeb82	                           jmp 0x4001c64	       476	dir.c	FUNCTION_13	ELSE_1	FOR_1	IF_7
0x4001ce2	        0x4883c468	                           add rsp, 0x68	       496	dir.c	FUNCTION_13
0x4001ce6	              0x5b	                                 pop rbx	       496	dir.c	FUNCTION_13
0x4001ce7	              0x5d	                                 pop rbp	       496	dir.c	FUNCTION_13
0x4001ce8	            0x415c	                                 pop r12	       496	dir.c	FUNCTION_13
0x4001cea	            0x415d	                                 pop r13	       496	dir.c	FUNCTION_13
0x4001cec	            0x415e	                                 pop r14	       496	dir.c	FUNCTION_13
0x4001cee	            0x415f	                                 pop r15	       496	dir.c	FUNCTION_13
0x4001cf0	              0xc3	                                     ret	       496	dir.c	FUNCTION_13
