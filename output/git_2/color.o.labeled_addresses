color_output	WHILE,0:DO,0:ELSE,0:IF,1:functions,0:SWITCH,1:FOR,0:CALL,3	45
0x400006f	              0x53	                                push rbx	       170	color.c	FUNCTION_6
0x4000070	          0x4889fb	                            mov rbx, rdi	       170	color.c	FUNCTION_6
0x4000073	            0x8b02	                    mov eax, dword [rdx]	       171	color.c	FUNCTION_6	SWITCH_1
0x4000075	          0x83f803	                              cmp eax, 3	       171	color.c	FUNCTION_6	SWITCH_1
0x4000078	            0x7430	                            je 0x40000aa	       171	color.c	FUNCTION_6	SWITCH_1
0x400007a	          0x83f804	                              cmp eax, 4	       171	color.c	FUNCTION_6	SWITCH_1
0x400007d	            0x744c	                            je 0x40000cb	       171	color.c	FUNCTION_6	SWITCH_1
0x400007f	          0x83f802	                              cmp eax, 2	       171	color.c	FUNCTION_6	SWITCH_1
0x4000082	            0x7578	                           jne 0x40000fc	       171	color.c	FUNCTION_6	SWITCH_1
0x4000084	          0x83fe01	                              cmp esi, 1	       176	color.c	FUNCTION_6	SWITCH_1	IF_1
0x4000087	            0x7f0f	                            jg 0x4000098	       176	color.c	FUNCTION_6	SWITCH_1	IF_1
0x4000089	      0xbf00000000	                              mov edi, 0	       177	color.c	FUNCTION_6	SWITCH_1	CALL_1
0x400008e	      0xb800000000	                              mov eax, 0	       177	color.c	FUNCTION_6	SWITCH_1	CALL_1
0x4000093	      0xe800000000	                          call 0x4000098	       177	color.c	FUNCTION_6	SWITCH_1	CALL_1
0x4000098	            0x880f	                      mov byte [rdi], cl	       178	color.c	FUNCTION_6	SWITCH_1
0x400009a	         0xfb64204	               movzx eax, byte [rdx + 4]	       179	color.c	FUNCTION_6	SWITCH_1
0x400009e	          0x83c030	                           add eax, 0x30	       179	color.c	FUNCTION_6	SWITCH_1
0x40000a1	          0x884701	                  mov byte [rdi + 1], al	       179	color.c	FUNCTION_6	SWITCH_1
0x40000a4	        0x488d5f02	                      lea rbx, [rdi + 2]	       179	color.c	FUNCTION_6	SWITCH_1
0x40000a8	            0xeb52	                           jmp 0x40000fc	       180	color.c	FUNCTION_6	SWITCH_1
0x40000aa	           0xfbec9	                           movsx ecx, cl	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x40000ad	          0x4863f6	                         movsxd rsi, esi	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x40000b0	      0x440fb64204	               movzx r8d, byte [rdx + 4]	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x40000b5	      0xba00000000	                              mov edx, 0	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x40000ba	      0xb800000000	                              mov eax, 0	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x40000bf	      0xe800000000	                          call 0x40000c4	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x40000c4	            0x4898	                                    cdqe	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x40000c6	          0x4801c3	                            add rbx, rax	       182	color.c	FUNCTION_6	SWITCH_1	CALL_2
0x40000c9	            0xeb31	                           jmp 0x40000fc	       183	color.c	FUNCTION_6	SWITCH_1
0x40000cb	           0xfbec9	                           movsx ecx, cl	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x40000ce	          0x4863f6	                         movsxd rsi, esi	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x40000d1	        0x4883ec08	                              sub rsp, 8	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x40000d5	         0xfb64207	               movzx eax, byte [rdx + 7]	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x40000d9	              0x50	                                push rax	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x40000da	      0x440fb64a06	               movzx r9d, byte [rdx + 6]	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x40000df	      0x440fb64205	               movzx r8d, byte [rdx + 5]	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x40000e4	      0xba00000000	                              mov edx, 0	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x40000e9	      0xb800000000	                              mov eax, 0	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x40000ee	      0xe800000000	                          call 0x40000f3	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x40000f3	            0x4898	                                    cdqe	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x40000f5	          0x4801c3	                            add rbx, rax	       185	color.c	FUNCTION_6	SWITCH_1	CALL_3
0x40000f8	        0x4883c410	                           add rsp, 0x10	       187	color.c	FUNCTION_6	SWITCH_1
0x40000fc	          0x4889d8	                            mov rax, rbx	       190	color.c	FUNCTION_6
0x40000ff	              0x5b	                                 pop rbx	       190	color.c	FUNCTION_6
0x4000100	              0xc3	                                     ret	       190	color.c	FUNCTION_6
get_hex_color	WHILE,0:DO,0:ELSE,0:IF,1:functions,0:SWITCH,0:FOR,0:CALL,2	13
0x4000040	           0xfb607	                   movzx eax, byte [rdi]	      1273	cache.h	FUNCTION_90
0x4000043	     0xfbe80000000	                   movsx eax, byte [rax]	        57	color.c	FUNCTION_2	CALL_2
0x400004a	          0xc1e004	                              shl eax, 4	        57	color.c	FUNCTION_2	CALL_2
0x400004d	         0xfb65701	               movzx edx, byte [rdi + 1]	      1273	cache.h	FUNCTION_90
0x4000051	     0xfbe92000000	                   movsx edx, byte [rdx]	        57	color.c	FUNCTION_2	CALL_2
0x4000058	             0x9d0	                             or eax, edx	        57	color.c	FUNCTION_2	CALL_2
0x400005a	      0xa900ffffff	                    test eax, 0xffffff00	        58	color.c	FUNCTION_2	IF_1
0x400005f	            0x7508	                           jne 0x4000069	        58	color.c	FUNCTION_2	IF_1
0x4000061	            0x8806	                      mov byte [rsi], al	        60	color.c	FUNCTION_2
0x4000063	      0xb800000000	                              mov eax, 0	        61	color.c	FUNCTION_2
0x4000068	              0xc3	                                     ret	        61	color.c	FUNCTION_2
0x4000069	      0xb8ffffffff	                     mov eax, 0xffffffff	        59	color.c	FUNCTION_2	IF_1
0x400006e	              0xc3	                                     ret	        62	color.c	FUNCTION_2
color_fprintf	WHILE,0:DO,0:ELSE,0:IF,0:functions,0:SWITCH,0:FOR,0:CALL,3	32
0x40009eb	    0x4881ecd80000	                           sub rsp, 0xd8	       400	color.c	FUNCTION_16
0x40009f2	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       400	color.c	FUNCTION_16
0x40009f7	      0x4c89442440	              mov qword [rsp + 0x40], r8	       400	color.c	FUNCTION_16
0x40009fc	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       400	color.c	FUNCTION_16
0x4000a01	            0x84c0	                             test al, al	       400	color.c	FUNCTION_16
0x4000a03	            0x7437	                            je 0x4000a3c	       400	color.c	FUNCTION_16
0x4000a05	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       400	color.c	FUNCTION_16
0x4000a0a	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       400	color.c	FUNCTION_16
0x4000a0f	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       400	color.c	FUNCTION_16
0x4000a14	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       400	color.c	FUNCTION_16
0x4000a1c	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       400	color.c	FUNCTION_16
0x4000a24	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       400	color.c	FUNCTION_16
0x4000a2c	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       400	color.c	FUNCTION_16
0x4000a34	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       400	color.c	FUNCTION_16
0x4000a3c	    0x64488b042528	                mov rax, qword fs:[0x28]	       400	color.c	FUNCTION_16
0x4000a45	      0x4889442418	             mov qword [rsp + 0x18], rax	       400	color.c	FUNCTION_16
0x4000a4a	            0x31c0	                            xor eax, eax	       400	color.c	FUNCTION_16
0x4000a4c	    0xc70424180000	                   mov dword [rsp], 0x18	       403	color.c	FUNCTION_16	CALL_1
0x4000a53	    0xc74424043000	               mov dword [rsp + 4], 0x30	       403	color.c	FUNCTION_16	CALL_1
0x4000a5b	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       403	color.c	FUNCTION_16	CALL_1
0x4000a63	      0x4889442408	                mov qword [rsp + 8], rax	       403	color.c	FUNCTION_16	CALL_1
0x4000a68	      0x488d442420	                   lea rax, [rsp + 0x20]	       403	color.c	FUNCTION_16	CALL_1
0x4000a6d	      0x4889442410	             mov qword [rsp + 0x10], rax	       403	color.c	FUNCTION_16	CALL_1
0x4000a72	    0x41b800000000	                              mov r8d, 0	       404	color.c	FUNCTION_16	CALL_2
0x4000a78	          0x4889e1	                            mov rcx, rsp	       404	color.c	FUNCTION_16	CALL_2
0x4000a7b	      0xe881f6ffff	                 call sym.color_vfprintf	       404	color.c	FUNCTION_16	CALL_2
0x4000a80	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       407	color.c	FUNCTION_16
0x4000a85	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       407	color.c	FUNCTION_16
0x4000a8e	            0x7405	                            je 0x4000a95	       407	color.c	FUNCTION_16
0x4000a90	      0xe800000000	                          call 0x4000a95	       407	color.c	FUNCTION_16
0x4000a95	    0x4881c4d80000	                           add rsp, 0xd8	       407	color.c	FUNCTION_16
0x4000a9c	              0xc3	                                     ret	       407	color.c	FUNCTION_16
git_color_config	WHILE,0:DO,0:ELSE,0:IF,1:functions,0:SWITCH,0:FOR,0:CALL,2	20
0x400092a	          0x4889f8	                            mov rax, rdi	       358	color.c	FUNCTION_12
0x400092d	          0x4889f2	                            mov rdx, rsi	       358	color.c	FUNCTION_12
0x4000930	      0xbf00000000	                              mov edi, 0	       359	color.c	FUNCTION_12	IF_1	CALL_1
0x4000935	      0xb909000000	                              mov ecx, 9	       359	color.c	FUNCTION_12	IF_1	CALL_1
0x400093a	          0x4889c6	                            mov rsi, rax	       359	color.c	FUNCTION_12	IF_1	CALL_1
0x400093d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       359	color.c	FUNCTION_12	IF_1	CALL_1
0x400093f	        0x400f97c6	                                seta sil	       359	color.c	FUNCTION_12	IF_1	CALL_1
0x4000943	           0xf92c1	                                 setb cl	       359	color.c	FUNCTION_12	IF_1	CALL_1
0x4000946	          0x4038ce	                             cmp sil, cl	       359	color.c	FUNCTION_12	IF_1	CALL_1
0x4000949	            0x751f	                           jne 0x400096a	       359	color.c	FUNCTION_12	IF_1	CALL_1
0x400094b	        0x4883ec08	                              sub rsp, 8	       358	color.c	FUNCTION_12
0x400094f	          0x4889d6	                            mov rsi, rdx	       358	color.c	FUNCTION_12
0x4000952	          0x4889c7	                            mov rdi, rax	       358	color.c	FUNCTION_12
0x4000955	      0xe800000000	                          call 0x400095a	       360	color.c	FUNCTION_12	IF_1	CALL_2
0x400095a	    0x890500000000	            mov dword [0x04000960], eax 	       360	color.c	FUNCTION_12	IF_1	CALL_2
0x4000960	      0xb800000000	                              mov eax, 0	       365	color.c	FUNCTION_12
0x4000965	        0x4883c408	                              add rsp, 8	       365	color.c	FUNCTION_12
0x4000969	              0xc3	                                     ret	       365	color.c	FUNCTION_12
0x400096a	      0xb800000000	                              mov eax, 0	       365	color.c	FUNCTION_12
0x400096f	              0xc3	                                     ret	       365	color.c	FUNCTION_12
color_vfprintf	WHILE,0:DO,0:ELSE,0:IF,3:functions,0:SWITCH,0:FOR,0:CALL,1	54
0x4000101	            0x4157	                                push r15	       386	color.c	FUNCTION_15
0x4000103	            0x4156	                                push r14	       386	color.c	FUNCTION_15
0x4000105	            0x4155	                                push r13	       386	color.c	FUNCTION_15
0x4000107	            0x4154	                                push r12	       386	color.c	FUNCTION_15
0x4000109	              0x55	                                push rbp	       386	color.c	FUNCTION_15
0x400010a	              0x53	                                push rbx	       386	color.c	FUNCTION_15
0x400010b	        0x4883ec08	                              sub rsp, 8	       386	color.c	FUNCTION_15
0x400010f	          0x4889fd	                            mov rbp, rdi	       386	color.c	FUNCTION_15
0x4000112	          0x4989f4	                            mov r12, rsi	       386	color.c	FUNCTION_15
0x4000115	          0x4989d6	                            mov r14, rdx	       386	color.c	FUNCTION_15
0x4000118	          0x4989cf	                            mov r15, rcx	       386	color.c	FUNCTION_15
0x400011b	          0x4d89c5	                             mov r13, r8	       386	color.c	FUNCTION_15
0x400011e	      0xbb00000000	                              mov ebx, 0	       387	color.c	FUNCTION_15
0x4000123	          0x803e00	                       cmp byte [rsi], 0	       389	color.c	FUNCTION_15	IF_1
0x4000126	            0x7419	                            je 0x4000141	       389	color.c	FUNCTION_15	IF_1
0x4000128	          0x4889f1	                            mov rcx, rsi	        97	stdio2.h	CALL_9
0x400012b	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000130	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000135	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x400013a	      0xe800000000	                          call 0x400013f	        97	stdio2.h	CALL_9
0x400013f	            0x89c3	                            mov ebx, eax	        97	stdio2.h	CALL_9
0x4000141	          0x4c89f9	                            mov rcx, r15	       127	stdio2.h	FUNCTION_24	CALL_1
0x4000144	          0x4c89f2	                            mov rdx, r14	       127	stdio2.h	FUNCTION_24	CALL_1
0x4000147	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_24	CALL_1
0x400014c	          0x4889ef	                            mov rdi, rbp	       127	stdio2.h	FUNCTION_24	CALL_1
0x400014f	      0xe800000000	                          call 0x4000154	       127	stdio2.h	FUNCTION_24	CALL_1
0x4000154	             0x1c3	                            add ebx, eax	       391	color.c	FUNCTION_15	CALL_1
0x4000156	      0x41803c2400	                       cmp byte [r12], 0	       392	color.c	FUNCTION_15	IF_2
0x400015b	            0x741e	                            je 0x400017b	       392	color.c	FUNCTION_15	IF_2
0x400015d	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_9
0x4000162	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000167	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x400016c	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_9
0x400016f	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x4000174	      0xe800000000	                          call 0x4000179	        97	stdio2.h	CALL_9
0x4000179	             0x1c3	                            add ebx, eax	       393	color.c	FUNCTION_15	IF_2
0x400017b	          0x4d85ed	                           test r13, r13	       394	color.c	FUNCTION_15	IF_3
0x400017e	            0x741c	                            je 0x400019c	       394	color.c	FUNCTION_15	IF_3
0x4000180	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_9
0x4000183	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000188	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x400018d	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_9
0x4000190	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x4000195	      0xe800000000	                          call 0x400019a	        97	stdio2.h	CALL_9
0x400019a	             0x1c3	                            add ebx, eax	       395	color.c	FUNCTION_15	IF_3
0x400019c	            0x89d8	                            mov eax, ebx	       397	color.c	FUNCTION_15
0x400019e	        0x4883c408	                              add rsp, 8	       397	color.c	FUNCTION_15
0x40001a2	              0x5b	                                 pop rbx	       397	color.c	FUNCTION_15
0x40001a3	              0x5d	                                 pop rbp	       397	color.c	FUNCTION_15
0x40001a4	            0x415c	                                 pop r12	       397	color.c	FUNCTION_15
0x40001a6	            0x415d	                                 pop r13	       397	color.c	FUNCTION_15
0x40001a8	            0x415e	                                 pop r14	       397	color.c	FUNCTION_15
0x40001aa	            0x415f	                                 pop r15	       397	color.c	FUNCTION_15
0x40001ac	              0xc3	                                     ret	       397	color.c	FUNCTION_15
git_config_colorbool	WHILE,0:DO,0:ELSE,0:IF,6:functions,0:SWITCH,0:FOR,0:CALL,4	40
0x4000816	              0x55	                                push rbp	       301	color.c	FUNCTION_9
0x4000817	              0x53	                                push rbx	       301	color.c	FUNCTION_9
0x4000818	        0x4883ec08	                              sub rsp, 8	       301	color.c	FUNCTION_9
0x400081c	          0x4889fd	                            mov rbp, rdi	       301	color.c	FUNCTION_9
0x400081f	          0x4889f3	                            mov rbx, rsi	       301	color.c	FUNCTION_9
0x4000822	          0x4885f6	                           test rsi, rsi	       302	color.c	FUNCTION_9	IF_1
0x4000825	            0x7441	                            je 0x4000868	       302	color.c	FUNCTION_9	IF_1
0x4000827	      0xbe00000000	                              mov esi, 0	       303	color.c	FUNCTION_9	IF_1	IF_2	CALL_1
0x400082c	          0x4889df	                            mov rdi, rbx	       303	color.c	FUNCTION_9	IF_1	IF_2	CALL_1
0x400082f	      0xe800000000	                          call 0x4000834	       303	color.c	FUNCTION_9	IF_1	IF_2	CALL_1
0x4000834	            0x85c0	                           test eax, eax	       303	color.c	FUNCTION_9	IF_1	IF_2	CALL_1
0x4000836	            0x7451	                            je 0x4000889	       303	color.c	FUNCTION_9	IF_1	IF_2	CALL_1
0x4000838	      0xbe00000000	                              mov esi, 0	       305	color.c	FUNCTION_9	IF_1	IF_3	CALL_2
0x400083d	          0x4889df	                            mov rdi, rbx	       305	color.c	FUNCTION_9	IF_1	IF_3	CALL_2
0x4000840	      0xe800000000	                          call 0x4000845	       305	color.c	FUNCTION_9	IF_1	IF_3	CALL_2
0x4000845	            0x89c2	                            mov edx, eax	       305	color.c	FUNCTION_9	IF_1	IF_3	CALL_2
0x4000847	      0xb801000000	                              mov eax, 1	       306	color.c	FUNCTION_9	IF_1	IF_3
0x400084c	            0x85d2	                           test edx, edx	       305	color.c	FUNCTION_9	IF_1	IF_3	CALL_2
0x400084e	            0x7439	                            je 0x4000889	       305	color.c	FUNCTION_9	IF_1	IF_3	CALL_2
0x4000850	      0xbe00000000	                              mov esi, 0	       307	color.c	FUNCTION_9	IF_1	IF_4	CALL_3
0x4000855	          0x4889df	                            mov rdi, rbx	       307	color.c	FUNCTION_9	IF_1	IF_4	CALL_3
0x4000858	      0xe800000000	                          call 0x400085d	       307	color.c	FUNCTION_9	IF_1	IF_4	CALL_3
0x400085d	            0x89c2	                            mov edx, eax	       307	color.c	FUNCTION_9	IF_1	IF_4	CALL_3
0x400085f	      0xb802000000	                              mov eax, 2	       308	color.c	FUNCTION_9	IF_1	IF_4
0x4000864	            0x85d2	                           test edx, edx	       307	color.c	FUNCTION_9	IF_1	IF_4	CALL_3
0x4000866	            0x7421	                            je 0x4000889	       307	color.c	FUNCTION_9	IF_1	IF_4	CALL_3
0x4000868	          0x4885ed	                           test rbp, rbp	       311	color.c	FUNCTION_9	IF_5
0x400086b	            0x7417	                            je 0x4000884	       311	color.c	FUNCTION_9	IF_5
0x400086d	          0x4889de	                            mov rsi, rbx	       315	color.c	FUNCTION_9	IF_6	CALL_4
0x4000870	          0x4889ef	                            mov rdi, rbp	       315	color.c	FUNCTION_9	IF_6	CALL_4
0x4000873	      0xe800000000	                          call 0x4000878	       315	color.c	FUNCTION_9	IF_6	CALL_4
0x4000878	            0x85c0	                           test eax, eax	       315	color.c	FUNCTION_9	IF_6	CALL_4
0x400087a	      0xba02000000	                              mov edx, 2	       319	color.c	FUNCTION_9
0x400087f	           0xf45c2	                         cmovne eax, edx	       319	color.c	FUNCTION_9
0x4000882	            0xeb05	                           jmp 0x4000889	       319	color.c	FUNCTION_9
0x4000884	      0xb8ffffffff	                     mov eax, 0xffffffff	       312	color.c	FUNCTION_9	IF_5
0x4000889	        0x4883c408	                              add rsp, 8	       320	color.c	FUNCTION_9
0x400088d	              0x5b	                                 pop rbx	       320	color.c	FUNCTION_9
0x400088e	              0x5d	                                 pop rbp	       320	color.c	FUNCTION_9
0x400088f	              0xc3	                                     ret	       320	color.c	FUNCTION_9
color_fprintf_ln	WHILE,0:DO,0:ELSE,0:IF,0:functions,0:SWITCH,0:FOR,0:CALL,3	32
0x4000a9d	    0x4881ecd80000	                           sub rsp, 0xd8	       410	color.c	FUNCTION_17
0x4000aa4	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       410	color.c	FUNCTION_17
0x4000aa9	      0x4c89442440	              mov qword [rsp + 0x40], r8	       410	color.c	FUNCTION_17
0x4000aae	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       410	color.c	FUNCTION_17
0x4000ab3	            0x84c0	                             test al, al	       410	color.c	FUNCTION_17
0x4000ab5	            0x7437	                            je 0x4000aee	       410	color.c	FUNCTION_17
0x4000ab7	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       410	color.c	FUNCTION_17
0x4000abc	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       410	color.c	FUNCTION_17
0x4000ac1	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       410	color.c	FUNCTION_17
0x4000ac6	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       410	color.c	FUNCTION_17
0x4000ace	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       410	color.c	FUNCTION_17
0x4000ad6	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       410	color.c	FUNCTION_17
0x4000ade	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       410	color.c	FUNCTION_17
0x4000ae6	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       410	color.c	FUNCTION_17
0x4000aee	    0x64488b042528	                mov rax, qword fs:[0x28]	       410	color.c	FUNCTION_17
0x4000af7	      0x4889442418	             mov qword [rsp + 0x18], rax	       410	color.c	FUNCTION_17
0x4000afc	            0x31c0	                            xor eax, eax	       410	color.c	FUNCTION_17
0x4000afe	    0xc70424180000	                   mov dword [rsp], 0x18	       413	color.c	FUNCTION_17	CALL_1
0x4000b05	    0xc74424043000	               mov dword [rsp + 4], 0x30	       413	color.c	FUNCTION_17	CALL_1
0x4000b0d	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       413	color.c	FUNCTION_17	CALL_1
0x4000b15	      0x4889442408	                mov qword [rsp + 8], rax	       413	color.c	FUNCTION_17	CALL_1
0x4000b1a	      0x488d442420	                   lea rax, [rsp + 0x20]	       413	color.c	FUNCTION_17	CALL_1
0x4000b1f	      0x4889442410	             mov qword [rsp + 0x10], rax	       413	color.c	FUNCTION_17	CALL_1
0x4000b24	    0x41b800000000	                              mov r8d, 0	       414	color.c	FUNCTION_17	CALL_2
0x4000b2a	          0x4889e1	                            mov rcx, rsp	       414	color.c	FUNCTION_17	CALL_2
0x4000b2d	      0xe8cff5ffff	                 call sym.color_vfprintf	       414	color.c	FUNCTION_17	CALL_2
0x4000b32	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       417	color.c	FUNCTION_17
0x4000b37	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       417	color.c	FUNCTION_17
0x4000b40	            0x7405	                            je 0x4000b47	       417	color.c	FUNCTION_17
0x4000b42	      0xe800000000	                          call 0x4000b47	       417	color.c	FUNCTION_17
0x4000b47	    0x4881c4d80000	                           add rsp, 0xd8	       417	color.c	FUNCTION_17
0x4000b4e	              0xc3	                                     ret	       417	color.c	FUNCTION_17
color_parse_mem	WHILE,4:DO,0:ELSE,1:IF,13:functions,0:SWITCH,0:FOR,1:CALL,12	383
0x40001ad	            0x4157	                                push r15	       198	color.c	FUNCTION_8
0x40001af	            0x4156	                                push r14	       198	color.c	FUNCTION_8
0x40001b1	            0x4155	                                push r13	       198	color.c	FUNCTION_8
0x40001b3	            0x4154	                                push r12	       198	color.c	FUNCTION_8
0x40001b5	              0x55	                                push rbp	       198	color.c	FUNCTION_8
0x40001b6	              0x53	                                push rbx	       198	color.c	FUNCTION_8
0x40001b7	    0x4881ec880000	                           sub rsp, 0x88	       198	color.c	FUNCTION_8
0x40001be	      0x48897c2428	             mov qword [rsp + 0x28], rdi	       198	color.c	FUNCTION_8
0x40001c3	        0x89742424	             mov dword [rsp + 0x24], esi	       198	color.c	FUNCTION_8
0x40001c7	      0x4889542410	             mov qword [rsp + 0x10], rdx	       198	color.c	FUNCTION_8
0x40001cc	    0x64488b042528	                mov rax, qword fs:[0x28]	       198	color.c	FUNCTION_8
0x40001d5	      0x4889442478	             mov qword [rsp + 0x78], rax	       198	color.c	FUNCTION_8
0x40001da	            0x31c0	                            xor eax, eax	       198	color.c	FUNCTION_8
0x40001dc	    0x48c744244000	               mov qword [rsp + 0x40], 0	       203	color.c	FUNCTION_8
0x40001e5	    0x48c744245000	               mov qword [rsp + 0x50], 0	       204	color.c	FUNCTION_8
0x40001ee	            0x85f6	                           test esi, esi	       206	color.c	FUNCTION_8	WHILE_1
0x40001f0	            0x7e29	                           jle 0x400021b	       206	color.c	FUNCTION_8	WHILE_1
0x40001f2	          0x4989ff	                            mov r15, rdi	       206	color.c	FUNCTION_8	WHILE_1
0x40001f5	            0x89f3	                            mov ebx, esi	       206	color.c	FUNCTION_8	WHILE_1
0x40001f7	           0xfb607	                   movzx eax, byte [rdi]	       206	color.c	FUNCTION_8	WHILE_1
0x40001fa	    0xf68000000000	                      test byte [rax], 1	       206	color.c	FUNCTION_8	WHILE_1
0x4000201	            0x7418	                            je 0x400021b	       206	color.c	FUNCTION_8	WHILE_1
0x4000203	        0x4983c701	                              add r15, 1	       207	color.c	FUNCTION_8	WHILE_1
0x4000207	          0x83eb01	                              sub ebx, 1	       206	color.c	FUNCTION_8	WHILE_1
0x400020a	            0x7416	                            je 0x4000222	       206	color.c	FUNCTION_8	WHILE_1
0x400020c	        0x410fb607	                   movzx eax, byte [r15]	       206	color.c	FUNCTION_8	WHILE_1
0x4000210	    0xf68000000000	                      test byte [rax], 1	       206	color.c	FUNCTION_8	WHILE_1
0x4000217	            0x75ea	                           jne 0x4000203	       206	color.c	FUNCTION_8	WHILE_1
0x4000219	            0xeb22	                           jmp 0x400023d	       206	color.c	FUNCTION_8	WHILE_1
0x400021b	      0x837c242400	               cmp dword [rsp + 0x24], 0	       211	color.c	FUNCTION_8	IF_1
0x4000220	            0x7512	                           jne 0x4000234	       211	color.c	FUNCTION_8	IF_1
0x4000222	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       212	color.c	FUNCTION_8	IF_1
0x4000227	          0xc60000	                       mov byte [rax], 0	       212	color.c	FUNCTION_8	IF_1
0x400022a	      0xbd00000000	                              mov ebp, 0	       213	color.c	FUNCTION_8	IF_1
0x400022f	      0xe98b040000	                           jmp 0x40006bf	       213	color.c	FUNCTION_8	IF_1
0x4000234	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	       213	color.c	FUNCTION_8	IF_1
0x4000239	        0x8b5c2424	            mov ebx, dword [rsp + 0x24] 	       213	color.c	FUNCTION_8	IF_1
0x400023d	          0x4863d3	                         movsxd rdx, ebx	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x4000240	      0xbe00000000	                              mov esi, 0	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x4000245	          0x4c89ff	                            mov rdi, r15	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x4000248	      0xe800000000	                          call 0x400024d	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x400024d	            0x89c5	                            mov ebp, eax	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x400024f	            0x85c0	                           test eax, eax	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x4000251	            0x741f	                            je 0x4000272	       216	color.c	FUNCTION_8	IF_2	CALL_1
0x4000253	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       201	color.c	FUNCTION_8
0x4000258	        0x4883c04b	                           add rax, 0x4b	       201	color.c	FUNCTION_8
0x400025c	      0x4889442418	             mov qword [rsp + 0x18], rax	       201	color.c	FUNCTION_8
0x4000261	    0xc74424200000	               mov dword [rsp + 0x20], 0	       222	color.c	FUNCTION_8	WHILE_2
0x4000269	            0x85db	                           test ebx, ebx	       222	color.c	FUNCTION_8	WHILE_2
0x400026b	            0x7f28	                            jg 0x4000295	       222	color.c	FUNCTION_8	WHILE_2
0x400026d	      0xe9ef020000	                           jmp 0x4000561	       222	color.c	FUNCTION_8	WHILE_2
0x4000272	      0xba00000000	                              mov edx, 0	       217	color.c	FUNCTION_8	IF_2	CALL_2
0x4000277	      0xbe4b000000	                           mov esi, 0x4b	       217	color.c	FUNCTION_8	IF_2	CALL_2
0x400027c	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       217	color.c	FUNCTION_8	IF_2	CALL_2
0x4000281	      0xb800000000	                              mov eax, 0	       217	color.c	FUNCTION_8	IF_2	CALL_2
0x4000286	      0xe800000000	                          call 0x400028b	       217	color.c	FUNCTION_8	IF_2	CALL_2
0x400028b	      0xe92f040000	                           jmp 0x40006bf	       218	color.c	FUNCTION_8	IF_2
0x4000290	          0x4d89e7	                            mov r15, r12	       218	color.c	FUNCTION_8	IF_2
0x4000293	            0xeb14	                           jmp 0x40002a9	       218	color.c	FUNCTION_8	IF_2
0x4000295	      0x488d442465	                   lea rax, [rsp + 0x65]	        83	color.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x400029a	      0x4889442430	             mov qword [rsp + 0x30], rax	        83	color.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x400029f	      0x488d442466	                   lea rax, [rsp + 0x66]	        84	color.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x40002a4	      0x4889442438	             mov qword [rsp + 0x38], rax	        84	color.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x40002a9	    0x48c744246000	               mov qword [rsp + 0x60], 0	       224	color.c	FUNCTION_8	WHILE_2
0x40002b2	            0x85db	                           test ebx, ebx	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x40002b4	     0xf8e20040000	                           jle 0x40006da	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x40002ba	        0x410fb607	                   movzx eax, byte [r15]	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x40002be	    0xf68000000000	                      test byte [rax], 1	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x40002c5	     0xf85f7040000	                           jne 0x40007c2	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x40002cb	      0xbd00000000	                              mov ebp, 0	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x40002d0	          0x83c501	                              add ebp, 1	       228	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x40002d3	          0x83eb01	                              sub ebx, 1	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x40002d6	     0xf8403040000	                            je 0x40006df	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x40002dc	          0x4863c5	                         movsxd rax, ebp	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x40002df	      0x410fb60407	             movzx eax, byte [r15 + rax]	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x40002e4	    0xf68000000000	                      test byte [rax], 1	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x40002eb	            0x74e3	                            je 0x40002d0	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x40002ed	      0xe9d5040000	                           jmp 0x40007c7	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x40002f2	        0x4983c401	                              add r12, 1	       234	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x40002f6	          0x83eb01	                              sub ebx, 1	       235	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x40002f9	            0x85db	                           test ebx, ebx	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x40002fb	            0x7e0e	                           jle 0x400030b	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x40002fd	      0x410fb60424	                   movzx eax, byte [r12]	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x4000302	    0xf68000000000	                      test byte [rax], 1	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x4000309	            0x75e7	                           jne 0x40002f2	       233	color.c	FUNCTION_8	WHILE_2	WHILE_4
0x400030b	          0x4c89f2	                            mov rdx, r14	        51	color.c	FUNCTION_1	CALL_1
0x400030e	      0xbe00000000	                              mov esi, 0	        51	color.c	FUNCTION_1	CALL_1
0x4000313	          0x4c89ff	                            mov rdi, r15	        51	color.c	FUNCTION_1	CALL_1
0x4000316	      0xe800000000	                          call 0x400031b	        51	color.c	FUNCTION_1	CALL_1
0x400031b	            0x85c0	                           test eax, eax	        51	color.c	FUNCTION_1	CALL_1
0x400031d	     0xf85d2030000	                           jne 0x40006f5	        51	color.c	FUNCTION_1	CALL_1
0x4000323	    0x4180be000000	                       cmp byte [r14], 0	        51	color.c	FUNCTION_1	CALL_1
0x400032b	     0xf85c4030000	                           jne 0x40006f5	        51	color.c	FUNCTION_1	CALL_1
0x4000331	      0xe9b5030000	                           jmp 0x40006eb	        51	color.c	FUNCTION_1	CALL_1
0x4000336	        0x41803f23	                    cmp byte [r15], 0x23	        82	color.c	FUNCTION_3	IF_2
0x400033a	     0xf85be030000	                           jne 0x40006fe	        82	color.c	FUNCTION_3	IF_2
0x4000340	        0x498d7f01	                      lea rdi, [r15 + 1]	        83	color.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x4000344	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	        83	color.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x4000349	      0xe8f2fcffff	                  call sym.get_hex_color	        83	color.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x400034e	            0x85c0	                           test eax, eax	        83	color.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x4000350	     0xf85a8030000	                           jne 0x40006fe	        83	color.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x4000356	        0x498d7f03	                      lea rdi, [r15 + 3]	        84	color.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x400035a	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	        84	color.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x400035f	      0xe8dcfcffff	                  call sym.get_hex_color	        84	color.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x4000364	            0x85c0	                           test eax, eax	        83	color.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x4000366	     0xf8592030000	                           jne 0x40006fe	        83	color.c	FUNCTION_3	IF_2	IF_3	CALL_2
0x400036c	      0x488d742467	                   lea rsi, [rsp + 0x67]	        85	color.c	FUNCTION_3	IF_2	IF_3	CALL_4
0x4000371	        0x498d7f05	                      lea rdi, [r15 + 5]	        85	color.c	FUNCTION_3	IF_2	IF_3	CALL_4
0x4000375	      0xe8c6fcffff	                  call sym.get_hex_color	        85	color.c	FUNCTION_3	IF_2	IF_3	CALL_4
0x400037a	            0x85c0	                           test eax, eax	        84	color.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x400037c	     0xf857c030000	                           jne 0x40006fe	        84	color.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x4000382	    0xc74424600400	               mov dword [rsp + 0x60], 4	        86	color.c	FUNCTION_3	IF_2	IF_3
0x400038a	      0xe9b7030000	                           jmp 0x4000746	        86	color.c	FUNCTION_3	IF_2	IF_3
0x400038f	    0x4a8b2ced0000	                  mov rbp, qword [r13*8]	        93	color.c	FUNCTION_3	FOR_1	IF_4	CALL_5
0x4000397	          0x4c89f2	                            mov rdx, r14	        51	color.c	FUNCTION_1	CALL_1
0x400039a	          0x4889ee	                            mov rsi, rbp	        51	color.c	FUNCTION_1	CALL_1
0x400039d	          0x4c89ff	                            mov rdi, r15	        51	color.c	FUNCTION_1	CALL_1
0x40003a0	      0xe800000000	                          call 0x40003a5	        51	color.c	FUNCTION_1	CALL_1
0x40003a5	            0x85c0	                           test eax, eax	        51	color.c	FUNCTION_1	CALL_1
0x40003a7	     0xf856f030000	                           jne 0x400071c	        51	color.c	FUNCTION_1	CALL_1
0x40003ad	    0x42807c350000	                 cmp byte [rbp + r14], 0	        51	color.c	FUNCTION_1	CALL_1
0x40003b3	     0xf8563030000	                           jne 0x400071c	        51	color.c	FUNCTION_1	CALL_1
0x40003b9	      0xe94f030000	                           jmp 0x400070d	        51	color.c	FUNCTION_1	CALL_1
0x40003be	        0x8b6c240c	              mov ebp, dword [rsp + 0xc]	        51	color.c	FUNCTION_1	CALL_1
0x40003c2	      0xba0a000000	                            mov edx, 0xa	       101	color.c	FUNCTION_3	CALL_6
0x40003c7	      0x488d742470	                   lea rsi, [rsp + 0x70]	       101	color.c	FUNCTION_3	CALL_6
0x40003cc	          0x4c89ff	                            mov rdi, r15	       101	color.c	FUNCTION_3	CALL_6
0x40003cf	      0xe800000000	                          call 0x40003d4	       101	color.c	FUNCTION_3	CALL_6
0x40003d4	      0x488b542470	            mov rdx, qword [rsp + 0x70] 	       107	color.c	FUNCTION_3	IF_5	IF_6
0x40003d9	          0x4c29fa	                            sub rdx, r15	       107	color.c	FUNCTION_3	IF_5	IF_6
0x40003dc	          0x4863ed	                         movsxd rbp, ebp	       107	color.c	FUNCTION_3	IF_5	IF_6
0x40003df	          0x4839ea	                            cmp rdx, rbp	       107	color.c	FUNCTION_3	IF_5	IF_6
0x40003e2	     0xf8547030000	                           jne 0x400072f	       107	color.c	FUNCTION_3	IF_5	IF_6
0x40003e8	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       107	color.c	FUNCTION_3	IF_5	IF_6
0x40003ec	     0xf8c3d030000	                            jl 0x400072f	       107	color.c	FUNCTION_3	IF_5	IF_6
0x40003f2	          0x4885c0	                           test rax, rax	       109	color.c	FUNCTION_3	IF_5	ELSE_1	IF_7
0x40003f5	            0x790d	                           jns 0x4000404	       109	color.c	FUNCTION_3	IF_5	ELSE_1	IF_7
0x40003f7	    0xc74424600100	               mov dword [rsp + 0x60], 1	       110	color.c	FUNCTION_3	IF_5	ELSE_1	IF_7
0x40003ff	      0xe942030000	                           jmp 0x4000746	       110	color.c	FUNCTION_3	IF_5	ELSE_1	IF_7
0x4000404	        0x4883f807	                              cmp rax, 7	       113	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x4000408	            0x7f11	                            jg 0x400041b	       113	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x400040a	    0xc74424600200	               mov dword [rsp + 0x60], 2	       114	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x4000412	        0x88442464	               mov byte [rsp + 0x64], al	       115	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x4000416	      0xe92b030000	                           jmp 0x4000746	       115	color.c	FUNCTION_3	IF_5	ELSE_2	IF_8
0x400041b	    0x483dff000000	                           cmp rax, 0xff	       117	color.c	FUNCTION_3	IF_5	ELSE_3	IF_9
0x4000421	     0xf8f08030000	                            jg 0x400072f	       117	color.c	FUNCTION_3	IF_5	ELSE_3	IF_9
0x4000427	    0xc74424600300	               mov dword [rsp + 0x60], 3	       118	color.c	FUNCTION_3	IF_5	ELSE_3	IF_9
0x400042f	        0x88442464	               mov byte [rsp + 0x64], al	       119	color.c	FUNCTION_3	IF_5	ELSE_3	IF_9
0x4000433	      0xe90e030000	                           jmp 0x4000746	       119	color.c	FUNCTION_3	IF_5	ELSE_3	IF_9
0x4000438	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       240	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x400043d	      0x4889442440	             mov qword [rsp + 0x40], rax	       240	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x4000442	      0xe907010000	                           jmp 0x400054e	       241	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x4000447	      0x837c245000	               cmp dword [rsp + 0x50], 0	       243	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x400044c	     0xf85c8000000	                           jne 0x400051a	       243	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x4000452	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       244	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x4000457	      0x4889442450	             mov qword [rsp + 0x50], rax	       244	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x400045c	      0xe9ed000000	                           jmp 0x400054e	       245	color.c	FUNCTION_8	WHILE_2	IF_3	IF_5
0x4000461	      0xba02000000	                              mov edx, 2	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x4000466	      0xbe00000000	                              mov esi, 0	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x400046b	          0x4c89ff	                            mov rdi, r15	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x400046e	      0xe800000000	                          call 0x4000473	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x4000473	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       144	color.c	FUNCTION_4
0x400047b	            0x85c0	                           test eax, eax	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x400047d	            0x7529	                           jne 0x40004a8	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x400047f	        0x498d5702	                      lea rdx, [r15 + 2]	       525	git-compat-util.h	FUNCTION_44	IF_1
0x4000483	          0x4c89f0	                            mov rax, r14	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x4000486	        0x4883e802	                              sub rax, 2	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x400048a	     0xf84c6020000	                            je 0x4000756	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x4000490	      0x41807f022d	                cmp byte [r15 + 2], 0x2d	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x4000495	     0xf85bb020000	                           jne 0x4000756	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x400049b	        0x498d5703	                      lea rdx, [r15 + 3]	       525	git-compat-util.h	FUNCTION_44	IF_1
0x400049f	        0x498d46fd	                      lea rax, [r14 - 3]	       526	git-compat-util.h	FUNCTION_44	IF_1
0x40004a3	      0xe9ae020000	                           jmp 0x4000756	       526	git-compat-util.h	FUNCTION_44	IF_1
0x40004a8	      0xbd00000000	                              mov ebp, 0	       526	git-compat-util.h	FUNCTION_44	IF_1
0x40004ad	    0x41bd00000000	                             mov r13d, 0	       144	color.c	FUNCTION_4
0x40004b3	        0x4c3b7500	                    cmp r14, qword [rbp]	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40004b7	            0x753c	                           jne 0x40004f5	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40004b9	        0x488b7df8	                mov rdi, qword [rbp - 8]	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40004bd	          0x4c89f2	                            mov rdx, r14	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40004c0	          0x4c89fe	                            mov rsi, r15	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40004c3	      0xe800000000	                          call 0x40004c8	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40004c8	            0x85c0	                           test eax, eax	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40004ca	            0x7529	                           jne 0x40004f5	       153	color.c	FUNCTION_4	FOR_1	IF_2	CALL_3
0x40004cc	      0x837c240c00	                cmp dword [rsp + 0xc], 0	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x40004d1	            0x7411	                            je 0x40004e4	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x40004d3	          0x4d63ed	                        movsxd r13, r13d	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x40004d6	      0x4b8d446d00	                  lea rax, [r13 + r13*2]	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x40004db	    0x8b0cc5000000	                  mov ecx, dword [rax*8]	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x40004e2	            0xeb25	                           jmp 0x4000509	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x40004e4	          0x4d63ed	                        movsxd r13, r13d	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x40004e7	      0x4b8d446d00	                  lea rax, [r13 + r13*2]	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x40004ec	    0x8b0cc5000000	                  mov ecx, dword [rax*8]	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x40004f3	            0xeb14	                           jmp 0x4000509	       154	color.c	FUNCTION_4	FOR_1	IF_2
0x40004f5	        0x4183c501	                             add r13d, 1	       152	color.c	FUNCTION_4	FOR_1
0x40004f9	        0x4883c518	                           add rbp, 0x18	       152	color.c	FUNCTION_4	FOR_1
0x40004fd	      0xb800000000	                              mov eax, 0	       152	color.c	FUNCTION_4	FOR_1
0x4000502	          0x4839e8	                            cmp rax, rbp	       152	color.c	FUNCTION_4	FOR_1
0x4000505	            0x75ac	                           jne 0x40004b3	       152	color.c	FUNCTION_4	FOR_1
0x4000507	            0xeb11	                           jmp 0x400051a	       152	color.c	FUNCTION_4	FOR_1
0x4000509	            0x85c9	                           test ecx, ecx	       250	color.c	FUNCTION_8	WHILE_2	IF_6
0x400050b	            0x780d	                            js 0x400051a	       250	color.c	FUNCTION_8	WHILE_2	IF_6
0x400050d	      0xb801000000	                              mov eax, 1	       251	color.c	FUNCTION_8	WHILE_2	IF_6
0x4000512	            0xd3e0	                             shl eax, cl	       251	color.c	FUNCTION_8	WHILE_2	IF_6
0x4000514	         0x9442420	              or dword [rsp + 0x20], eax	       251	color.c	FUNCTION_8	WHILE_2	IF_6
0x4000518	            0xeb34	                           jmp 0x400054e	       251	color.c	FUNCTION_8	WHILE_2	IF_6
0x400051a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_65
0x400051f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_65
0x4000524	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_65
0x4000529	      0xe800000000	                          call 0x400052e	        54	gettext.h	FUNCTION_65
0x400052e	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       296	color.c	FUNCTION_8	CALL_12
0x4000533	        0x8b742424	            mov esi, dword [rsp + 0x24] 	       296	color.c	FUNCTION_8	CALL_12
0x4000537	          0x4889c7	                            mov rdi, rax	       296	color.c	FUNCTION_8	CALL_12
0x400053a	      0xb800000000	                              mov eax, 0	       296	color.c	FUNCTION_8	CALL_12
0x400053f	      0xe800000000	                          call 0x4000544	       296	color.c	FUNCTION_8	CALL_12
0x4000544	      0xbdffffffff	                     mov ebp, 0xffffffff	       296	color.c	FUNCTION_8	CALL_12
0x4000549	      0xe971010000	                           jmp 0x40006bf	       296	color.c	FUNCTION_8	CALL_12
0x400054e	            0x85db	                           test ebx, ebx	       222	color.c	FUNCTION_8	WHILE_2
0x4000550	     0xf8f3afdffff	                            jg 0x4000290	       222	color.c	FUNCTION_8	WHILE_2
0x4000556	      0x837c242000	               cmp dword [rsp + 0x20], 0	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x400055b	     0xf8530020000	                           jne 0x4000791	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x4000561	      0x837c244001	               cmp dword [rsp + 0x40], 1	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x4000566	     0xf87fd010000	                            ja 0x4000769	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x400056c	      0x837c245001	               cmp dword [rsp + 0x50], 1	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x4000571	     0xf87f2010000	                            ja 0x4000769	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x4000577	      0xe91b010000	                           jmp 0x4000697	       263	color.c	FUNCTION_8	ELSE_1	IF_7	CALL_6
0x400057c	          0x4489e2	                           mov edx, r12d	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x400057f	            0x89d9	                            mov ecx, ebx	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x4000581	            0xd3e2	                             shl edx, cl	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x4000583	            0x85d5	                           test ebp, edx	       272	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_8
0x4000585	            0x744e	                            je 0x40005d5	       272	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_8
0x4000587	            0xf7d2	                                 not edx	       274	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x4000589	            0x21d5	                            and ebp, edx	       274	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x400058b	        0x448d7601	                     lea r14d, [rsi + 1]	       275	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x400058f	            0x85f6	                           test esi, esi	       275	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x4000591	            0x741d	                            je 0x40005b0	       275	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x4000593	          0x4939c7	                            cmp r15, rax	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x4000596	            0x750f	                           jne 0x40005a7	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x4000598	      0xbf00000000	                              mov edi, 0	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x400059d	      0xb800000000	                              mov eax, 0	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x40005a2	      0xe800000000	                          call 0x40005a7	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x40005a7	        0x4c8d6801	                      lea r13, [rax + 1]	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x40005ab	          0xc6003b	                    mov byte [rax], 0x3b	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x40005ae	            0xeb03	                           jmp 0x40005b3	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x40005b0	          0x4989c5	                            mov r13, rax	       276	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x40005b3	          0x4c89fe	                            mov rsi, r15	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x40005b6	          0x4c29ee	                            sub rsi, r13	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x40005b9	            0x89d9	                            mov ecx, ebx	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x40005bb	      0xba00000000	                              mov edx, 0	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x40005c0	          0x4c89ef	                            mov rdi, r13	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x40005c3	      0xb800000000	                              mov eax, 0	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x40005c8	      0xe800000000	                          call 0x40005cd	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x40005cd	            0x4898	                                    cdqe	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x40005cf	          0x4c01e8	                            add rax, r13	       277	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	CALL_7
0x40005d2	          0x4489f6	                           mov esi, r14d	       275	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1	IF_9
0x40005d5	          0x83c301	                              add ebx, 1	       270	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x40005d8	            0x85ed	                           test ebp, ebp	       270	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x40005da	            0x75a0	                           jne 0x400057c	       270	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x40005dc	      0x837c244001	               cmp dword [rsp + 0x40], 1	       279	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_8
0x40005e1	            0x764c	                           jbe 0x400062f	       279	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_8
0x40005e3	          0x8d5e01	                      lea ebx, [rsi + 1]	       280	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x40005e6	            0x85f6	                           test esi, esi	       280	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x40005e8	            0x741f	                            je 0x4000609	       280	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x40005ea	      0x483b442418	            cmp rax, qword [rsp + 0x18] 	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x40005ef	            0x750f	                           jne 0x4000600	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x40005f1	      0xbf00000000	                              mov edi, 0	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x40005f6	      0xb800000000	                              mov eax, 0	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x40005fb	      0xe800000000	                          call 0x4000600	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x4000600	        0x488d7801	                      lea rdi, [rax + 1]	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x4000604	          0xc6003b	                    mov byte [rax], 0x3b	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x4000607	            0xeb0d	                           jmp 0x4000616	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x4000609	          0x4889c7	                            mov rdi, rax	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x400060c	            0xeb08	                           jmp 0x4000616	       281	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x400060e	          0x4889c7	                            mov rdi, rax	       268	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000611	      0xbb01000000	                              mov ebx, 1	       280	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	IF_11
0x4000616	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_9
0x400061b	          0x4829fe	                            sub rsi, rdi	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_9
0x400061e	      0xb933000000	                           mov ecx, 0x33	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_9
0x4000623	      0x488d542440	                   lea rdx, [rsp + 0x40]	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_9
0x4000628	      0xe842faffff	                   call sym.color_output	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_9
0x400062d	            0xeb02	                           jmp 0x4000631	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_9
0x400062f	            0x89f3	                            mov ebx, esi	       283	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_9
0x4000631	      0x837c245001	               cmp dword [rsp + 0x50], 1	       285	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_10
0x4000636	            0x763d	                           jbe 0x4000675	       285	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_10
0x4000638	            0x85db	                           test ebx, ebx	       286	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x400063a	            0x741f	                            je 0x400065b	       286	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x400063c	      0x483b442418	            cmp rax, qword [rsp + 0x18] 	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x4000641	            0x750f	                           jne 0x4000652	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x4000643	      0xbf00000000	                              mov edi, 0	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x4000648	      0xb800000000	                              mov eax, 0	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x400064d	      0xe800000000	                          call 0x4000652	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x4000652	        0x488d7801	                      lea rdi, [rax + 1]	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x4000656	          0xc6003b	                    mov byte [rax], 0x3b	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x4000659	            0xeb03	                           jmp 0x400065e	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x400065b	          0x4889c7	                            mov rdi, rax	       287	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	IF_13
0x400065e	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       289	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_11
0x4000663	          0x4829fe	                            sub rsi, rdi	       289	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_11
0x4000666	      0xb934000000	                           mov ecx, 0x34	       289	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_11
0x400066b	      0x488d542450	                   lea rdx, [rsp + 0x50]	       289	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_11
0x4000670	      0xe8faf9ffff	                   call sym.color_output	       289	color.c	FUNCTION_8	ELSE_1	IF_7	IF_12	CALL_11
0x4000675	      0x483b442418	            cmp rax, qword [rsp + 0x18] 	       291	color.c	FUNCTION_8	ELSE_1	IF_7
0x400067a	            0x750f	                           jne 0x400068b	       291	color.c	FUNCTION_8	ELSE_1	IF_7
0x400067c	      0xbf00000000	                              mov edi, 0	       291	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000681	      0xb800000000	                              mov eax, 0	       291	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000686	      0xe800000000	                          call 0x400068b	       291	color.c	FUNCTION_8	ELSE_1	IF_7
0x400068b	        0x488d4801	                      lea rcx, [rax + 1]	       291	color.c	FUNCTION_8	ELSE_1	IF_7
0x400068f	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       291	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000694	          0xc6006d	                    mov byte [rax], 0x6d	       291	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000697	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       293	color.c	FUNCTION_8
0x400069c	      0x48394c2410	            cmp qword [rsp + 0x10], rcx 	       293	color.c	FUNCTION_8
0x40006a1	            0x750f	                           jne 0x40006b2	       293	color.c	FUNCTION_8
0x40006a3	      0xbf00000000	                              mov edi, 0	       293	color.c	FUNCTION_8
0x40006a8	      0xb800000000	                              mov eax, 0	       293	color.c	FUNCTION_8
0x40006ad	      0xe800000000	                          call 0x40006b2	       293	color.c	FUNCTION_8
0x40006b2	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       293	color.c	FUNCTION_8
0x40006b7	          0xc60000	                       mov byte [rax], 0	       293	color.c	FUNCTION_8
0x40006ba	      0xbd00000000	                              mov ebp, 0	       294	color.c	FUNCTION_8
0x40006bf	            0x89e8	                            mov eax, ebp	       298	color.c	FUNCTION_8
0x40006c1	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	       298	color.c	FUNCTION_8
0x40006c6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       298	color.c	FUNCTION_8
0x40006cf	     0xf8403010000	                            je 0x40007d8	       298	color.c	FUNCTION_8
0x40006d5	      0xe9f9000000	                           jmp 0x40007d3	       298	color.c	FUNCTION_8
0x40006da	      0xbd00000000	                              mov ebp, 0	       225	color.c	FUNCTION_8	WHILE_2
0x40006df	          0x4c63f5	                         movsxd r14, ebp	       232	color.c	FUNCTION_8	WHILE_2
0x40006e2	        0x4f8d2437	                    lea r12, [r15 + r14]	       232	color.c	FUNCTION_8	WHILE_2
0x40006e6	      0xe920fcffff	                           jmp 0x400030b	       232	color.c	FUNCTION_8	WHILE_2
0x40006eb	    0xc74424600100	               mov dword [rsp + 0x60], 1	        77	color.c	FUNCTION_3	IF_1
0x40006f3	            0xeb51	                           jmp 0x4000746	        77	color.c	FUNCTION_3	IF_1
0x40006f5	          0x83fd07	                              cmp ebp, 7	        82	color.c	FUNCTION_3	IF_2
0x40006f8	     0xf8438fcffff	                            je 0x4000336	        82	color.c	FUNCTION_3	IF_2
0x40006fe	    0x41bd00000000	                             mov r13d, 0	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x4000704	        0x896c240c	              mov dword [rsp + 0xc], ebp	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x4000708	      0xe982fcffff	                           jmp 0x400038f	       227	color.c	FUNCTION_8	WHILE_2	WHILE_3
0x400070d	    0xc74424600200	               mov dword [rsp + 0x60], 2	        94	color.c	FUNCTION_3	FOR_1	IF_4
0x4000715	      0x44886c2464	             mov byte [rsp + 0x64], r13b	        95	color.c	FUNCTION_3	FOR_1	IF_4
0x400071a	            0xeb2a	                           jmp 0x4000746	        95	color.c	FUNCTION_3	FOR_1	IF_4
0x400071c	        0x4983c501	                              add r13, 1	        95	color.c	FUNCTION_3	FOR_1	IF_4
0x4000720	        0x4983fd08	                              cmp r13, 8	        92	color.c	FUNCTION_3	FOR_1
0x4000724	     0xf8565fcffff	                           jne 0x400038f	        92	color.c	FUNCTION_3	FOR_1
0x400072a	      0xe98ffcffff	                           jmp 0x40003be	        92	color.c	FUNCTION_3	FOR_1
0x400072f	        0x4983fe01	                              cmp r14, 1	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x4000733	     0xf8728fdffff	                            ja 0x4000461	       524	git-compat-util.h	FUNCTION_44	IF_1	CALL_2
0x4000739	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       144	color.c	FUNCTION_4
0x4000741	      0xe962fdffff	                           jmp 0x40004a8	       144	color.c	FUNCTION_4
0x4000746	      0x837c244000	               cmp dword [rsp + 0x40], 0	       239	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x400074b	     0xf84e7fcffff	                            je 0x4000438	       239	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x4000751	      0xe9f1fcffff	                           jmp 0x4000447	       239	color.c	FUNCTION_8	WHILE_2	IF_3	IF_4
0x4000756	          0x4989d7	                            mov r15, rdx	       144	color.c	FUNCTION_4
0x4000759	          0x4989c6	                            mov r14, rax	       144	color.c	FUNCTION_4
0x400075c	    0xc744240c0100	                mov dword [rsp + 0xc], 1	       144	color.c	FUNCTION_4
0x4000764	      0xe93ffdffff	                           jmp 0x40004a8	       144	color.c	FUNCTION_4
0x4000769	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       267	color.c	FUNCTION_8	ELSE_1	IF_7
0x400076e	          0x4889c8	                            mov rax, rcx	       267	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000771	          0xc6011b	                    mov byte [rcx], 0x1b	       267	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000774	        0x4883c002	                              add rax, 2	       268	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000778	        0xc641015b	                mov byte [rcx + 1], 0x5b	       268	color.c	FUNCTION_8	ELSE_1	IF_7
0x400077c	      0xbb00000000	                              mov ebx, 0	       264	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000781	      0x837c244001	               cmp dword [rsp + 0x40], 1	       279	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_8
0x4000786	     0xf86a5feffff	                           jbe 0x4000631	       279	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_8
0x400078c	      0xe97dfeffff	                           jmp 0x400060e	       279	color.c	FUNCTION_8	ELSE_1	IF_7	IF_10	CALL_8
0x4000791	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       267	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000796	          0x4889c8	                            mov rax, rcx	       267	color.c	FUNCTION_8	ELSE_1	IF_7
0x4000799	          0xc6011b	                    mov byte [rcx], 0x1b	       267	color.c	FUNCTION_8	ELSE_1	IF_7
0x400079c	        0x4883c002	                              add rax, 2	       268	color.c	FUNCTION_8	ELSE_1	IF_7
0x40007a0	        0xc641015b	                mov byte [rcx + 1], 0x5b	       268	color.c	FUNCTION_8	ELSE_1	IF_7
0x40007a4	      0xbb00000000	                              mov ebx, 0	       268	color.c	FUNCTION_8	ELSE_1	IF_7
0x40007a9	      0xbe00000000	                              mov esi, 0	       268	color.c	FUNCTION_8	ELSE_1	IF_7
0x40007ae	    0x41bc01000000	                             mov r12d, 1	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x40007b4	        0x8b6c2420	            mov ebp, dword [rsp + 0x20] 	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x40007b8	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x40007bd	      0xe9bafdffff	                           jmp 0x400057c	       271	color.c	FUNCTION_8	ELSE_1	IF_7	FOR_1
0x40007c2	      0xbd00000000	                              mov ebp, 0	       225	color.c	FUNCTION_8	WHILE_2
0x40007c7	          0x4c63f5	                         movsxd r14, ebp	       232	color.c	FUNCTION_8	WHILE_2
0x40007ca	        0x4f8d2437	                    lea r12, [r15 + r14]	       232	color.c	FUNCTION_8	WHILE_2
0x40007ce	      0xe91ffbffff	                           jmp 0x40002f2	       232	color.c	FUNCTION_8	WHILE_2
0x40007d3	      0xe800000000	                          call 0x40007d8	       298	color.c	FUNCTION_8
0x40007d8	    0x4881c4880000	                           add rsp, 0x88	       298	color.c	FUNCTION_8
0x40007df	              0x5b	                                 pop rbx	       298	color.c	FUNCTION_8
0x40007e0	              0x5d	                                 pop rbp	       298	color.c	FUNCTION_8
0x40007e1	            0x415c	                                 pop r12	       298	color.c	FUNCTION_8
0x40007e3	            0x415d	                                 pop r13	       298	color.c	FUNCTION_8
0x40007e5	            0x415e	                                 pop r14	       298	color.c	FUNCTION_8
0x40007e7	            0x415f	                                 pop r15	       298	color.c	FUNCTION_8
0x40007e9	              0xc3	                                     ret	       298	color.c	FUNCTION_8
color_parse	WHILE,0:DO,0:ELSE,0:IF,0:functions,0:SWITCH,0:FOR,0:CALL,2	12
0x40007ea	        0x4883ec08	                              sub rsp, 8	       160	color.c	FUNCTION_5
0x40007ee	          0x4989f8	                             mov r8, rdi	       160	color.c	FUNCTION_5
0x40007f1	          0x4889f2	                            mov rdx, rsi	       160	color.c	FUNCTION_5
0x40007f4	      0xb800000000	                              mov eax, 0	       161	color.c	FUNCTION_5	CALL_2
0x40007f9	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       161	color.c	FUNCTION_5	CALL_2
0x4000800	            0xf2ae	              repne scasb al, byte [rdi]	       161	color.c	FUNCTION_5	CALL_2
0x4000802	          0x48f7d1	                                 not rcx	       161	color.c	FUNCTION_5	CALL_2
0x4000805	        0x488d71ff	                      lea rsi, [rcx - 1]	       161	color.c	FUNCTION_5	CALL_2
0x4000809	          0x4c89c7	                             mov rdi, r8	       161	color.c	FUNCTION_5	CALL_2
0x400080c	      0xe800000000	                          call 0x4000811	       161	color.c	FUNCTION_5	CALL_2
0x4000811	        0x4883c408	                              add rsp, 8	       162	color.c	FUNCTION_5
0x4000815	              0xc3	                                     ret	       162	color.c	FUNCTION_5
git_color_default_config	WHILE,0:DO,0:ELSE,0:IF,1:functions,0:SWITCH,0:FOR,0:CALL,2	19
0x4000970	            0x4154	                                push r12	       368	color.c	FUNCTION_13
0x4000972	              0x55	                                push rbp	       368	color.c	FUNCTION_13
0x4000973	              0x53	                                push rbx	       368	color.c	FUNCTION_13
0x4000974	          0x4889fb	                            mov rbx, rdi	       368	color.c	FUNCTION_13
0x4000977	          0x4889f5	                            mov rbp, rsi	       368	color.c	FUNCTION_13
0x400097a	          0x4989d4	                            mov r12, rdx	       368	color.c	FUNCTION_13
0x400097d	      0xe800000000	                          call 0x4000982	       369	color.c	FUNCTION_13	IF_1	CALL_1
0x4000982	            0x85c0	                           test eax, eax	       369	color.c	FUNCTION_13	IF_1	CALL_1
0x4000984	            0x7810	                            js 0x4000996	       369	color.c	FUNCTION_13	IF_1	CALL_1
0x4000986	          0x4c89e2	                            mov rdx, r12	       372	color.c	FUNCTION_13	CALL_2
0x4000989	          0x4889ee	                            mov rsi, rbp	       372	color.c	FUNCTION_13	CALL_2
0x400098c	          0x4889df	                            mov rdi, rbx	       372	color.c	FUNCTION_13	CALL_2
0x400098f	      0xe800000000	                          call 0x4000994	       372	color.c	FUNCTION_13	CALL_2
0x4000994	            0xeb05	                           jmp 0x400099b	       372	color.c	FUNCTION_13	CALL_2
0x4000996	      0xb8ffffffff	                     mov eax, 0xffffffff	       370	color.c	FUNCTION_13	IF_1
0x400099b	              0x5b	                                 pop rbx	       373	color.c	FUNCTION_13
0x400099c	              0x5d	                                 pop rbp	       373	color.c	FUNCTION_13
0x400099d	            0x415c	                                 pop r12	       373	color.c	FUNCTION_13
0x400099f	              0xc3	                                     ret	       373	color.c	FUNCTION_13
color_is_nil	WHILE,0:DO,0:ELSE,0:IF,0:functions,0:SWITCH,0:FOR,0:CALL,1	18
0x4000b4f	           0xfb617	                   movzx edx, byte [rdi]	       421	color.c	FUNCTION_18	CALL_1
0x4000b52	      0xb84e000000	                           mov eax, 0x4e	       421	color.c	FUNCTION_18	CALL_1
0x4000b57	            0x29d0	                            sub eax, edx	       421	color.c	FUNCTION_18	CALL_1
0x4000b59	            0x7520	                           jne 0x4000b7b	       421	color.c	FUNCTION_18	CALL_1
0x4000b5b	         0xfb65701	               movzx edx, byte [rdi + 1]	       421	color.c	FUNCTION_18	CALL_1
0x4000b5f	      0xb849000000	                           mov eax, 0x49	       421	color.c	FUNCTION_18	CALL_1
0x4000b64	            0x29d0	                            sub eax, edx	       421	color.c	FUNCTION_18	CALL_1
0x4000b66	            0x7513	                           jne 0x4000b7b	       421	color.c	FUNCTION_18	CALL_1
0x4000b68	         0xfb65702	               movzx edx, byte [rdi + 2]	       421	color.c	FUNCTION_18	CALL_1
0x4000b6c	      0xb84c000000	                           mov eax, 0x4c	       421	color.c	FUNCTION_18	CALL_1
0x4000b71	            0x29d0	                            sub eax, edx	       421	color.c	FUNCTION_18	CALL_1
0x4000b73	            0x7506	                           jne 0x4000b7b	       421	color.c	FUNCTION_18	CALL_1
0x4000b75	         0xfb64703	               movzx eax, byte [rdi + 3]	       421	color.c	FUNCTION_18	CALL_1
0x4000b79	            0xf7d8	                                 neg eax	       421	color.c	FUNCTION_18	CALL_1
0x4000b7b	            0x85c0	                           test eax, eax	       421	color.c	FUNCTION_18	CALL_1
0x4000b7d	           0xf94c0	                                 sete al	       421	color.c	FUNCTION_18	CALL_1
0x4000b80	           0xfb6c0	                           movzx eax, al	       421	color.c	FUNCTION_18	CALL_1
0x4000b83	              0xc3	                                     ret	       422	color.c	FUNCTION_18
want_color_fd	WHILE,0:DO,0:ELSE,0:IF,3:functions,0:SWITCH,0:FOR,0:CALL,1	46
0x4000890	            0x85f6	                           test esi, esi	       347	color.c	FUNCTION_11	IF_1
0x4000892	     0xf4835000000	           cmovs esi, dword [0x04000899]	       347	color.c	FUNCTION_11	IF_1
0x4000899	            0x89f0	                            mov eax, esi	       354	color.c	FUNCTION_11
0x400089b	          0x83fe02	                              cmp esi, 2	       349	color.c	FUNCTION_11	IF_2
0x400089e	     0xf8584000000	                           jne 0x4000928	       349	color.c	FUNCTION_11	IF_2
0x40008a4	              0x55	                                push rbp	       336	color.c	FUNCTION_11
0x40008a5	              0x53	                                push rbx	       336	color.c	FUNCTION_11
0x40008a6	        0x4883ec08	                              sub rsp, 8	       336	color.c	FUNCTION_11
0x40008aa	            0x89fb	                            mov ebx, edi	       336	color.c	FUNCTION_11
0x40008ac	          0x4863c7	                         movsxd rax, edi	       350	color.c	FUNCTION_11	IF_2	IF_3
0x40008af	    0x833c85000000	                    cmp dword [rax*4], 0	       350	color.c	FUNCTION_11	IF_2	IF_3
0x40008b7	            0x795f	                           jns 0x4000918	       350	color.c	FUNCTION_11	IF_2	IF_3
0x40008b9	    0x8b0500000000	            mov eax, dword [0x040008bf] 	       325	color.c	FUNCTION_10
0x40008bf	      0xbd00000000	                              mov ebp, 0	       325	color.c	FUNCTION_10
0x40008c4	          0x83ff01	                              cmp edi, 1	       325	color.c	FUNCTION_10
0x40008c7	            0x750b	                           jne 0x40008d4	       325	color.c	FUNCTION_10
0x40008c9	    0x8b0500000000	            mov eax, dword [0x040008cf] 	       325	color.c	FUNCTION_10
0x40008cf	      0xbd00000000	                              mov ebp, 0	       325	color.c	FUNCTION_10
0x40008d4	            0x85c0	                           test eax, eax	       326	color.c	FUNCTION_10	IF_1
0x40008d6	            0x790a	                           jns 0x40008e2	       326	color.c	FUNCTION_10	IF_1
0x40008d8	            0x89df	                            mov edi, ebx	       327	color.c	FUNCTION_10	CALL_1
0x40008da	      0xe800000000	                          call 0x40008df	       327	color.c	FUNCTION_10	CALL_1
0x40008df	          0x894500	                    mov dword [rbp], eax	       327	color.c	FUNCTION_10	CALL_1
0x40008e2	          0x8b4500	                    mov eax, dword [rbp]	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x40008e5	            0x85c0	                           test eax, eax	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x40008e7	            0x7518	                           jne 0x4000901	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x40008e9	          0x83fb01	                              cmp ebx, 1	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x40008ec	            0x7520	                           jne 0x400090e	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x40008ee	      0xe800000000	                          call 0x40008f3	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x40008f3	            0x85c0	                           test eax, eax	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x40008f5	            0x7417	                            je 0x400090e	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x40008f7	    0x8b0500000000	            mov eax, dword [0x040008fd] 	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x40008fd	            0x85c0	                           test eax, eax	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x40008ff	            0x740d	                            je 0x400090e	       328	color.c	FUNCTION_10	IF_2	CALL_2
0x4000901	      0xe800000000	                          call 0x4000906	       329	color.c	FUNCTION_10	IF_2	IF_3	CALL_3
0x4000906	            0x85c0	                           test eax, eax	       332	color.c	FUNCTION_10
0x4000908	           0xf94c0	                                 sete al	       332	color.c	FUNCTION_10
0x400090b	           0xfb6c0	                           movzx eax, al	       332	color.c	FUNCTION_10
0x400090e	          0x4863d3	                         movsxd rdx, ebx	       351	color.c	FUNCTION_11	IF_2	CALL_1
0x4000911	    0x890495000000	                  mov dword [rdx*4], eax	       351	color.c	FUNCTION_11	IF_2	CALL_1
0x4000918	          0x4863db	                         movsxd rbx, ebx	       352	color.c	FUNCTION_11	IF_2
0x400091b	    0x8b049d000000	                  mov eax, dword [rbx*4]	       352	color.c	FUNCTION_11	IF_2
0x4000922	        0x4883c408	                              add rsp, 8	       355	color.c	FUNCTION_11
0x4000926	              0x5b	                                 pop rbx	       355	color.c	FUNCTION_11
0x4000927	              0x5d	                                 pop rbp	       355	color.c	FUNCTION_11
0x4000928	            0xf3c3	                                     ret	       355	color.c	FUNCTION_11
color_print_strbuf	WHILE,0:DO,0:ELSE,0:IF,2:functions,0:SWITCH,0:FOR,0:CALL,0	25
0x40009a0	            0x4154	                                push r12	       376	color.c	FUNCTION_14
0x40009a2	              0x55	                                push rbp	       376	color.c	FUNCTION_14
0x40009a3	              0x53	                                push rbx	       376	color.c	FUNCTION_14
0x40009a4	          0x4889fd	                            mov rbp, rdi	       376	color.c	FUNCTION_14
0x40009a7	          0x4889f3	                            mov rbx, rsi	       376	color.c	FUNCTION_14
0x40009aa	          0x4989d4	                            mov r12, rdx	       376	color.c	FUNCTION_14
0x40009ad	          0x803e00	                       cmp byte [rsi], 0	       377	color.c	FUNCTION_14	IF_1
0x40009b0	            0x740b	                            je 0x40009bd	       377	color.c	FUNCTION_14	IF_1
0x40009b2	          0x4889fe	                            mov rsi, rdi	        97	stdio2.h	CALL_9
0x40009b5	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_9
0x40009b8	      0xe800000000	                          call 0x40009bd	        97	stdio2.h	CALL_9
0x40009bd	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	        97	stdio2.h	CALL_9
0x40009c2	          0x4889ee	                            mov rsi, rbp	        97	stdio2.h	CALL_9
0x40009c5	      0xe800000000	                          call 0x40009ca	        97	stdio2.h	CALL_9
0x40009ca	          0x803b00	                       cmp byte [rbx], 0	       380	color.c	FUNCTION_14	IF_2
0x40009cd	            0x7417	                            je 0x40009e6	       380	color.c	FUNCTION_14	IF_2
0x40009cf	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_9
0x40009d2	      0xba03000000	                              mov edx, 3	        97	stdio2.h	CALL_9
0x40009d7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x40009dc	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_9
0x40009e1	      0xe800000000	                          call 0x40009e6	        97	stdio2.h	CALL_9
0x40009e6	              0x5b	                                 pop rbx	       382	color.c	FUNCTION_14
0x40009e7	              0x5d	                                 pop rbp	       382	color.c	FUNCTION_14
0x40009e8	            0x415c	                                 pop r12	       382	color.c	FUNCTION_14
0x40009ea	              0xc3	                                     ret	       382	color.c	FUNCTION_14
