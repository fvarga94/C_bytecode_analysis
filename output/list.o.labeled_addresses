write_list	DO,0:CALL,6:SWITCH,0:ELSE,1:FOR,2:functions,0:WHILE,0:IF,5	73
0x14e0	              0x55	                                push rbp	       898	list.c	FUNCTION_37
0x14e1	          0x4889e5	                            mov rbp, rsp	       898	list.c	FUNCTION_37
0x14e4	        0x4883ec40	                           sub rsp, 0x40	       898	list.c	FUNCTION_37
0x14e8	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       898	list.c	FUNCTION_37
0x14ec	        0x488975d0	             mov qword [rbp - 0x30], rsi	       898	list.c	FUNCTION_37
0x14f0	          0x8955cc	             mov dword [rbp - 0x34], edx	       898	list.c	FUNCTION_37
0x14f3	    0xc745ec010000	               mov dword [rbp - 0x14], 1	       901	list.c	FUNCTION_37
0x14fa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       904	list.c	FUNCTION_37	FOR_1
0x14fe	          0x488b00	                    mov rax, qword [rax]	       904	list.c	FUNCTION_37	FOR_1
0x1501	        0x488945f0	             mov qword [rbp - 0x10], rax	       904	list.c	FUNCTION_37	FOR_1
0x1505	      0xe9c7000000	                           jmp 0x4001611	       904	list.c	FUNCTION_37	FOR_1
0x150a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       906	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_1
0x150e	        0x4883c010	                           add rax, 0x10	       906	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_1
0x1512	          0x4889c7	                            mov rdi, rax	       906	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_1
0x1515	      0xe800000000	                          call 0x400155a	       906	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_1
0x151a	        0x488945f8	                mov qword [rbp - 8], rax	       906	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_1
0x151e	            0xeb50	                           jmp 0x40015b0	       906	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_1
0x1520	        0x488b45f8	                mov rax, qword [rbp - 8]	       908	list.c	FUNCTION_37	FOR_1	FOR_2	IF_1
0x1524	           0xfb600	                   movzx eax, byte [rax]	       908	list.c	FUNCTION_37	FOR_1	FOR_2	IF_1
0x1527	            0x3c0a	                             cmp al, 0xa	       908	list.c	FUNCTION_37	FOR_1	FOR_2	IF_1
0x1529	            0x7516	                           jne 0x4001581	       908	list.c	FUNCTION_37	FOR_1	FOR_2	IF_1
0x152b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       909	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_2
0x152f	          0x4889c6	                            mov rsi, rax	       909	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_2
0x1532	      0xbf00000000	                              mov edi, 0	       909	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_2
0x1537	      0xe800000000	                          call 0x400157c	       909	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_2
0x153c	          0x8945e8	             mov dword [rbp - 0x18], eax	       909	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_2
0x153f	            0xeb1b	                           jmp 0x400159c	       909	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_2
0x1541	        0x488b45f8	                mov rax, qword [rbp - 8]	       911	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_3
0x1545	           0xfb600	                   movzx eax, byte [rax]	       911	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_3
0x1548	           0xfb6c0	                           movzx eax, al	       911	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_3
0x154b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       911	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_3
0x154f	          0x4889d6	                            mov rsi, rdx	       911	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_3
0x1552	            0x89c7	                            mov edi, eax	       911	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_3
0x1554	      0xe800000000	                          call 0x4001599	       911	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_3
0x1559	          0x8945e8	             mov dword [rbp - 0x18], eax	       911	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_3
0x155c	        0x837de8ff	cmp dword [rbp - 0x18], 0xffffffffffffffff	       912	list.c	FUNCTION_37	FOR_1	FOR_2	IF_2
0x1560	            0x7509	                           jne 0x40015ab	       912	list.c	FUNCTION_37	FOR_1	FOR_2	IF_2
0x1562	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       914	list.c	FUNCTION_37	FOR_1	FOR_2	IF_2
0x1569	            0xeb10	                           jmp 0x40015bb	       915	list.c	FUNCTION_37	FOR_1	FOR_2	IF_2
0x156b	      0x488345f801	                  add qword [rbp - 8], 1	       906	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_1
0x1570	        0x488b45f8	                mov rax, qword [rbp - 8]	       906	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_1
0x1574	           0xfb600	                   movzx eax, byte [rax]	       906	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_1
0x1577	            0x84c0	                             test al, al	       906	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_1
0x1579	            0x75a5	                           jne 0x4001560	       906	list.c	FUNCTION_37	FOR_1	FOR_2	CALL_1
0x157b	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       918	list.c	FUNCTION_37	FOR_1	IF_3
0x157f	            0x740c	                            je 0x40015cd	       918	list.c	FUNCTION_37	FOR_1	IF_3
0x1581	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       918	list.c	FUNCTION_37	FOR_1	IF_3
0x1585	          0x488b00	                    mov rax, qword [rax]	       918	list.c	FUNCTION_37	FOR_1	IF_3
0x1588	          0x4885c0	                           test rax, rax	       918	list.c	FUNCTION_37	FOR_1	IF_3
0x158b	            0x741f	                            je 0x40015ec	       918	list.c	FUNCTION_37	FOR_1	IF_3
0x158d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       919	list.c	FUNCTION_37	FOR_1	IF_3	IF_4	CALL_4
0x1591	          0x4889c6	                            mov rsi, rax	       919	list.c	FUNCTION_37	FOR_1	IF_3	IF_4	CALL_4
0x1594	      0xbf0a000000	                            mov edi, 0xa	       919	list.c	FUNCTION_37	FOR_1	IF_3	IF_4	CALL_4
0x1599	      0xe800000000	                          call 0x40015de	       919	list.c	FUNCTION_37	FOR_1	IF_3	IF_4	CALL_4
0x159e	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       919	list.c	FUNCTION_37	FOR_1	IF_3	IF_4	CALL_4
0x15a1	            0x7509	                           jne 0x40015ec	       919	list.c	FUNCTION_37	FOR_1	IF_3	IF_4	CALL_4
0x15a3	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       921	list.c	FUNCTION_37	FOR_1	IF_3	IF_4
0x15aa	            0xeb30	                           jmp 0x400161c	       922	list.c	FUNCTION_37	FOR_1	IF_3	IF_4
0x15ac	        0x837dec00	               cmp dword [rbp - 0x14], 0	       924	list.c	FUNCTION_37	FOR_1	IF_5
0x15b0	            0x7514	                           jne 0x4001606	       924	list.c	FUNCTION_37	FOR_1	IF_5
0x15b2	      0xbf00000000	                              mov edi, 0	       926	list.c	FUNCTION_37	FOR_1	IF_5	CALL_6
0x15b7	      0xe800000000	                          call 0x40015fc	       926	list.c	FUNCTION_37	FOR_1	IF_5	CALL_6
0x15bc	          0x4889c7	                            mov rdi, rax	       926	list.c	FUNCTION_37	FOR_1	IF_5	CALL_6
0x15bf	      0xe800000000	                          call 0x4001604	       926	list.c	FUNCTION_37	FOR_1	IF_5	CALL_6
0x15c4	            0xeb16	                           jmp 0x400161c	       927	list.c	FUNCTION_37	FOR_1	IF_5
0x15c6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       904	list.c	FUNCTION_37	FOR_1
0x15ca	          0x488b00	                    mov rax, qword [rax]	       904	list.c	FUNCTION_37	FOR_1
0x15cd	        0x488945f0	             mov qword [rbp - 0x10], rax	       904	list.c	FUNCTION_37	FOR_1
0x15d1	      0x48837df000	               cmp qword [rbp - 0x10], 0	       904	list.c	FUNCTION_37	FOR_1
0x15d6	     0xf852effffff	                           jne 0x400154a	       904	list.c	FUNCTION_37	FOR_1
0x15dc	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       930	list.c	FUNCTION_37
0x15df	              0xc9	                                   leave	       931	list.c	FUNCTION_37
0x15e0	              0xc3	                                     ret	       931	list.c	FUNCTION_37
list2string	DO,0:CALL,6:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,2	57
0xe7a	              0x55	                                push rbp	       696	list.c	ELSE_2	FUNCTION_33
0xe7b	          0x4889e5	                            mov rbp, rsp	       696	list.c	ELSE_2	FUNCTION_33
0xe7e	        0x4883ec30	                           sub rsp, 0x30	       696	list.c	ELSE_2	FUNCTION_33
0xe82	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       696	list.c	ELSE_2	FUNCTION_33
0xe86	          0x8975d4	             mov dword [rbp - 0x2c], esi	       696	list.c	ELSE_2	FUNCTION_33
0xe89	          0x8955d0	             mov dword [rbp - 0x30], edx	       696	list.c	ELSE_2	FUNCTION_33
0xe8c	    0x64488b042528	                mov rax, qword fs:[0x28]	       696	list.c	ELSE_2	FUNCTION_33
0xe95	        0x488945f8	                mov qword [rbp - 8], rax	       696	list.c	ELSE_2	FUNCTION_33
0xe99	            0x31c0	                            xor eax, eax	       696	list.c	ELSE_2	FUNCTION_33
0xe9b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       699	list.c	ELSE_2	FUNCTION_33	IF_1
0xe9f	        0x488b4008	                mov rax, qword [rax + 8]	       699	list.c	ELSE_2	FUNCTION_33	IF_1
0xea3	          0x4885c0	                           test rax, rax	       699	list.c	ELSE_2	FUNCTION_33	IF_1
0xea6	            0x750a	                           jne 0x4000ef2	       699	list.c	ELSE_2	FUNCTION_33	IF_1
0xea8	      0xb800000000	                              mov eax, 0	       700	list.c	ELSE_2	FUNCTION_33	IF_1
0xead	      0xe98e000000	                           jmp 0x4000f80	       700	list.c	ELSE_2	FUNCTION_33	IF_1
0xeb2	        0x488d45e0	                   lea rax, [rbp - 0x20]	       701	list.c	ELSE_2	FUNCTION_33	CALL_1
0xeb6	      0xba50000000	                           mov edx, 0x50	       701	list.c	ELSE_2	FUNCTION_33	CALL_1
0xebb	      0xbe01000000	                              mov esi, 1	       701	list.c	ELSE_2	FUNCTION_33	CALL_1
0xec0	          0x4889c7	                            mov rdi, rax	       701	list.c	ELSE_2	FUNCTION_33	CALL_1
0xec3	      0xe800000000	                          call 0x4000f08	       701	list.c	ELSE_2	FUNCTION_33	CALL_1
0xec8	        0x488d45e0	                   lea rax, [rbp - 0x20]	       702	list.c	ELSE_2	FUNCTION_33	CALL_2
0xecc	      0xbe5b000000	                           mov esi, 0x5b	       702	list.c	ELSE_2	FUNCTION_33	CALL_2
0xed1	          0x4889c7	                            mov rdi, rax	       702	list.c	ELSE_2	FUNCTION_33	CALL_2
0xed4	      0xe800000000	                          call 0x4000f19	       702	list.c	ELSE_2	FUNCTION_33	CALL_2
0xed9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       703	list.c	ELSE_2	FUNCTION_33	IF_2	CALL_3
0xedd	        0x488b7008	                mov rsi, qword [rax + 8]	       703	list.c	ELSE_2	FUNCTION_33	IF_2	CALL_3
0xee1	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       703	list.c	ELSE_2	FUNCTION_33	IF_2	CALL_3
0xee4	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       703	list.c	ELSE_2	FUNCTION_33	IF_2	CALL_3
0xee7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       703	list.c	ELSE_2	FUNCTION_33	IF_2	CALL_3
0xeeb	          0x4189c9	                            mov r9d, ecx	       703	list.c	ELSE_2	FUNCTION_33	IF_2	CALL_3
0xeee	          0x4189d0	                            mov r8d, edx	       703	list.c	ELSE_2	FUNCTION_33	IF_2	CALL_3
0xef1	      0xb900000000	                              mov ecx, 0	       703	list.c	ELSE_2	FUNCTION_33	IF_2	CALL_3
0xef6	      0xba00000000	                              mov edx, 0	       703	list.c	ELSE_2	FUNCTION_33	IF_2	CALL_3
0xefb	          0x4889c7	                            mov rdi, rax	       703	list.c	ELSE_2	FUNCTION_33	IF_2	CALL_3
0xefe	      0xe800000000	                          call 0x4000f43	       703	list.c	ELSE_2	FUNCTION_33	IF_2	CALL_3
0xf03	            0x85c0	                           test eax, eax	       703	list.c	ELSE_2	FUNCTION_33	IF_2	CALL_3
0xf05	            0x7513	                           jne 0x4000f5a	       703	list.c	ELSE_2	FUNCTION_33	IF_2	CALL_3
0xf07	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       706	list.c	ELSE_2	FUNCTION_33	IF_2	CALL_4
0xf0b	          0x4889c7	                            mov rdi, rax	       706	list.c	ELSE_2	FUNCTION_33	IF_2	CALL_4
0xf0e	      0xe800000000	                          call 0x4000f53	       706	list.c	ELSE_2	FUNCTION_33	IF_2	CALL_4
0xf13	      0xb800000000	                              mov eax, 0	       707	list.c	ELSE_2	FUNCTION_33	IF_2
0xf18	            0xeb26	                           jmp 0x4000f80	       707	list.c	ELSE_2	FUNCTION_33	IF_2
0xf1a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       709	list.c	ELSE_2	FUNCTION_33	CALL_5
0xf1e	      0xbe5d000000	                           mov esi, 0x5d	       709	list.c	ELSE_2	FUNCTION_33	CALL_5
0xf23	          0x4889c7	                            mov rdi, rax	       709	list.c	ELSE_2	FUNCTION_33	CALL_5
0xf26	      0xe800000000	                          call 0x4000f6b	       709	list.c	ELSE_2	FUNCTION_33	CALL_5
0xf2b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       710	list.c	ELSE_2	FUNCTION_33	CALL_6
0xf2f	      0xbe00000000	                              mov esi, 0	       710	list.c	ELSE_2	FUNCTION_33	CALL_6
0xf34	          0x4889c7	                            mov rdi, rax	       710	list.c	ELSE_2	FUNCTION_33	CALL_6
0xf37	      0xe800000000	                          call 0x4000f7c	       710	list.c	ELSE_2	FUNCTION_33	CALL_6
0xf3c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       711	list.c	ELSE_2	FUNCTION_33
0xf40	        0x488b4df8	                mov rcx, qword [rbp - 8]	       712	list.c	ELSE_2	FUNCTION_33
0xf44	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       712	list.c	ELSE_2	FUNCTION_33
0xf4d	            0x7405	                            je 0x4000f94	       712	list.c	ELSE_2	FUNCTION_33
0xf4f	      0xe800000000	                          call 0x4000f94	       712	list.c	ELSE_2	FUNCTION_33
0xf54	              0xc9	                                   leave	       712	list.c	ELSE_2	FUNCTION_33
0xf55	              0xc3	                                     ret	       712	list.c	ELSE_2	FUNCTION_33
listitem_free	DO,0:CALL,2:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,0	14
0x3cc	              0x55	                                push rbp	       228	list.c	FUNCTION_14
0x3cd	          0x4889e5	                            mov rbp, rsp	       228	list.c	FUNCTION_14
0x3d0	        0x4883ec10	                           sub rsp, 0x10	       228	list.c	FUNCTION_14
0x3d4	        0x48897df8	                mov qword [rbp - 8], rdi	       228	list.c	FUNCTION_14
0x3d8	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	list.c	FUNCTION_14	CALL_1
0x3dc	        0x4883c010	                           add rax, 0x10	       229	list.c	FUNCTION_14	CALL_1
0x3e0	          0x4889c7	                            mov rdi, rax	       229	list.c	FUNCTION_14	CALL_1
0x3e3	      0xe800000000	                          call 0x4000428	       229	list.c	FUNCTION_14	CALL_1
0x3e8	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	list.c	FUNCTION_14	CALL_2
0x3ec	          0x4889c7	                            mov rdi, rax	       230	list.c	FUNCTION_14	CALL_2
0x3ef	      0xe800000000	                          call 0x4000434	       230	list.c	FUNCTION_14	CALL_2
0x3f4	              0x90	                                     nop	       231	list.c	FUNCTION_14
0x3f5	              0xc9	                                   leave	       231	list.c	FUNCTION_14
0x3f6	              0xc3	                                     ret	       231	list.c	FUNCTION_14
list_append_string	DO,0:CALL,4:SWITCH,0:ELSE,1:FOR,0:functions,0:WHILE,0:IF,3	50
0x95d	              0x55	                                push rbp	       484	list.c	FUNCTION_25
0x95e	          0x4889e5	                            mov rbp, rsp	       484	list.c	FUNCTION_25
0x961	        0x4883ec30	                           sub rsp, 0x30	       484	list.c	FUNCTION_25
0x965	        0x48897de8	             mov qword [rbp - 0x18], rdi	       484	list.c	FUNCTION_25
0x969	        0x488975e0	             mov qword [rbp - 0x20], rsi	       484	list.c	FUNCTION_25
0x96d	          0x8955dc	             mov dword [rbp - 0x24], edx	       484	list.c	FUNCTION_25
0x970	      0xe800000000	                          call 0x40009b5	       485	list.c	FUNCTION_25	CALL_1
0x975	        0x488945f8	                mov qword [rbp - 8], rax	       485	list.c	FUNCTION_25	CALL_1
0x979	      0x48837df800	                  cmp qword [rbp - 8], 0	       487	list.c	FUNCTION_25	IF_1
0x97e	            0x750a	                           jne 0x40009ca	       487	list.c	FUNCTION_25	IF_1
0x980	      0xb800000000	                              mov eax, 0	       488	list.c	FUNCTION_25	IF_1
0x985	      0xe987000000	                           jmp 0x4000a51	       488	list.c	FUNCTION_25	IF_1
0x98a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       489	list.c	FUNCTION_25	CALL_2
0x98e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       489	list.c	FUNCTION_25	CALL_2
0x992	          0x4889d6	                            mov rsi, rdx	       489	list.c	FUNCTION_25	CALL_2
0x995	          0x4889c7	                            mov rdi, rax	       489	list.c	FUNCTION_25	CALL_2
0x998	      0xe800000000	                          call 0x40009dd	       489	list.c	FUNCTION_25	CALL_2
0x99d	        0x488b45f8	                mov rax, qword [rbp - 8]	       490	list.c	FUNCTION_25
0x9a1	    0xc74010020000	               mov dword [rax + 0x10], 2	       490	list.c	FUNCTION_25
0x9a8	        0x488b45f8	                mov rax, qword [rbp - 8]	       491	list.c	FUNCTION_25
0x9ac	        0xc6401400	                mov byte [rax + 0x14], 0	       491	list.c	FUNCTION_25
0x9b0	      0x48837de000	               cmp qword [rbp - 0x20], 0	       492	list.c	FUNCTION_25	IF_2
0x9b5	            0x750e	                           jne 0x4000a05	       492	list.c	FUNCTION_25	IF_2
0x9b7	        0x488b45f8	                mov rax, qword [rbp - 8]	       493	list.c	FUNCTION_25	IF_2
0x9bb	    0x48c740180000	               mov qword [rax + 0x18], 0	       493	list.c	FUNCTION_25	IF_2
0x9c3	            0xeb47	                           jmp 0x4000a4c	       493	list.c	FUNCTION_25	IF_2
0x9c5	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       495	list.c	FUNCTION_25	ELSE_1	IF_3	CALL_4
0x9c9	            0x7816	                            js 0x4000a21	       495	list.c	FUNCTION_25	ELSE_1	IF_3	CALL_4
0x9cb	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       495	list.c	FUNCTION_25	ELSE_1	IF_3	CALL_4
0x9ce	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       495	list.c	FUNCTION_25	ELSE_1	IF_3	CALL_4
0x9d2	            0x89d6	                            mov esi, edx	       495	list.c	FUNCTION_25	ELSE_1	IF_3	CALL_4
0x9d4	          0x4889c7	                            mov rdi, rax	       495	list.c	FUNCTION_25	ELSE_1	IF_3	CALL_4
0x9d7	      0xe800000000	                          call 0x4000a1c	       495	list.c	FUNCTION_25	ELSE_1	IF_3	CALL_4
0x9dc	          0x4889c2	                            mov rdx, rax	       495	list.c	FUNCTION_25	ELSE_1	IF_3	CALL_4
0x9df	            0xeb0f	                           jmp 0x4000a30	       495	list.c	FUNCTION_25	ELSE_1	IF_3	CALL_4
0x9e1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       495	list.c	FUNCTION_25	ELSE_1	IF_3	CALL_4
0x9e5	          0x4889c7	                            mov rdi, rax	       495	list.c	FUNCTION_25	ELSE_1	IF_3	CALL_4
0x9e8	      0xe800000000	                          call 0x4000a2d	       495	list.c	FUNCTION_25	ELSE_1	IF_3	CALL_4
0x9ed	          0x4889c2	                            mov rdx, rax	       495	list.c	FUNCTION_25	ELSE_1	IF_3	CALL_4
0x9f0	        0x488b45f8	                mov rax, qword [rbp - 8]	       494	list.c	FUNCTION_25	ELSE_1	IF_3	CALL_3
0x9f4	        0x48895018	             mov qword [rax + 0x18], rdx	       494	list.c	FUNCTION_25	ELSE_1	IF_3	CALL_3
0x9f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       494	list.c	FUNCTION_25	ELSE_1	IF_3	CALL_3
0x9fc	        0x488b4018	            mov rax, qword [rax + 0x18] 	       494	list.c	FUNCTION_25	ELSE_1	IF_3	CALL_3
0xa00	          0x4885c0	                           test rax, rax	       494	list.c	FUNCTION_25	ELSE_1	IF_3	CALL_3
0xa03	            0x7507	                           jne 0x4000a4c	       494	list.c	FUNCTION_25	ELSE_1	IF_3	CALL_3
0xa05	      0xb800000000	                              mov eax, 0	       496	list.c	FUNCTION_25	ELSE_1	IF_3
0xa0a	            0xeb05	                           jmp 0x4000a51	       496	list.c	FUNCTION_25	ELSE_1	IF_3
0xa0c	      0xb801000000	                              mov eax, 1	       497	list.c	FUNCTION_25
0xa11	              0xc9	                                   leave	       498	list.c	FUNCTION_25
0xa12	              0xc3	                                     ret	       498	list.c	FUNCTION_25
listitem_remove	DO,0:CALL,2:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,0	17
0x3f7	              0x55	                                push rbp	       238	list.c	FUNCTION_15
0x3f8	          0x4889e5	                            mov rbp, rsp	       238	list.c	FUNCTION_15
0x3fb	        0x4883ec10	                           sub rsp, 0x10	       238	list.c	FUNCTION_15
0x3ff	        0x48897df8	                mov qword [rbp - 8], rdi	       238	list.c	FUNCTION_15
0x403	        0x488975f0	             mov qword [rbp - 0x10], rsi	       238	list.c	FUNCTION_15
0x407	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       239	list.c	FUNCTION_15	CALL_1
0x40b	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       239	list.c	FUNCTION_15	CALL_1
0x40f	        0x488b45f8	                mov rax, qword [rbp - 8]	       239	list.c	FUNCTION_15	CALL_1
0x413	          0x4889ce	                            mov rsi, rcx	       239	list.c	FUNCTION_15	CALL_1
0x416	          0x4889c7	                            mov rdi, rax	       239	list.c	FUNCTION_15	CALL_1
0x419	      0xe800000000	                          call 0x400045e	       239	list.c	FUNCTION_15	CALL_1
0x41e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       240	list.c	FUNCTION_15	CALL_2
0x422	          0x4889c7	                            mov rdi, rax	       240	list.c	FUNCTION_15	CALL_2
0x425	      0xe800000000	                          call 0x400046a	       240	list.c	FUNCTION_15	CALL_2
0x42a	              0x90	                                     nop	       241	list.c	FUNCTION_15
0x42b	              0xc9	                                   leave	       241	list.c	FUNCTION_15
0x42c	              0xc3	                                     ret	       241	list.c	FUNCTION_15
list_add_watch	DO,0:CALL,0:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,0	14
0x0	              0x55	                                push rbp	        26	list.c	FUNCTION_1
0x1	          0x4889e5	                            mov rbp, rsp	        26	list.c	FUNCTION_1
0x4	        0x48897df8	                mov qword [rbp - 8], rdi	        26	list.c	FUNCTION_1
0x8	        0x488975f0	             mov qword [rbp - 0x10], rsi	        26	list.c	FUNCTION_1
0xc	        0x488b45f8	                mov rax, qword [rbp - 8]	        27	list.c	FUNCTION_1
0x10	        0x488b5018	            mov rdx, qword [rax + 0x18] 	        27	list.c	FUNCTION_1
0x14	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        27	list.c	FUNCTION_1
0x18	        0x48895008	                mov qword [rax + 8], rdx	        27	list.c	FUNCTION_1
0x1c	        0x488b45f8	                mov rax, qword [rbp - 8]	        28	list.c	FUNCTION_1
0x20	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        28	list.c	FUNCTION_1
0x24	        0x48895018	             mov qword [rax + 0x18], rdx	        28	list.c	FUNCTION_1
0x28	              0x90	                                     nop	        29	list.c	FUNCTION_1
0x29	              0x5d	                                 pop rbp	        29	list.c	FUNCTION_1
0x2a	              0xc3	                                     ret	        29	list.c	FUNCTION_1
list_append_dict	DO,0:CALL,2:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,1	31
0x8ec	              0x55	                                push rbp	       464	list.c	FUNCTION_24
0x8ed	          0x4889e5	                            mov rbp, rsp	       464	list.c	FUNCTION_24
0x8f0	        0x4883ec20	                           sub rsp, 0x20	       464	list.c	FUNCTION_24
0x8f4	        0x48897de8	             mov qword [rbp - 0x18], rdi	       464	list.c	FUNCTION_24
0x8f8	        0x488975e0	             mov qword [rbp - 0x20], rsi	       464	list.c	FUNCTION_24
0x8fc	      0xe800000000	                          call 0x4000941	       465	list.c	FUNCTION_24	CALL_1
0x901	        0x488945f8	                mov qword [rbp - 8], rax	       465	list.c	FUNCTION_24	CALL_1
0x905	      0x48837df800	                  cmp qword [rbp - 8], 0	       467	list.c	FUNCTION_24	IF_1
0x90a	            0x7507	                           jne 0x4000953	       467	list.c	FUNCTION_24	IF_1
0x90c	      0xb800000000	                              mov eax, 0	       468	list.c	FUNCTION_24	IF_1
0x911	            0xeb48	                           jmp 0x400099b	       468	list.c	FUNCTION_24	IF_1
0x913	        0x488b45f8	                mov rax, qword [rbp - 8]	       469	list.c	FUNCTION_24
0x917	    0xc74010060000	               mov dword [rax + 0x10], 6	       469	list.c	FUNCTION_24
0x91e	        0x488b45f8	                mov rax, qword [rbp - 8]	       470	list.c	FUNCTION_24
0x922	        0xc6401400	                mov byte [rax + 0x14], 0	       470	list.c	FUNCTION_24
0x926	        0x488b45f8	                mov rax, qword [rbp - 8]	       471	list.c	FUNCTION_24
0x92a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       471	list.c	FUNCTION_24
0x92e	        0x48895018	             mov qword [rax + 0x18], rdx	       471	list.c	FUNCTION_24
0x932	        0x488b55f8	                mov rdx, qword [rbp - 8]	       472	list.c	FUNCTION_24	CALL_2
0x936	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       472	list.c	FUNCTION_24	CALL_2
0x93a	          0x4889d6	                            mov rsi, rdx	       472	list.c	FUNCTION_24	CALL_2
0x93d	          0x4889c7	                            mov rdi, rax	       472	list.c	FUNCTION_24	CALL_2
0x940	      0xe800000000	                          call 0x4000985	       472	list.c	FUNCTION_24	CALL_2
0x945	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       473	list.c	FUNCTION_24
0x949	          0x8b4004	                mov eax, dword [rax + 4]	       473	list.c	FUNCTION_24
0x94c	          0x8d5001	                      lea edx, [rax + 1]	       473	list.c	FUNCTION_24
0x94f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       473	list.c	FUNCTION_24
0x953	          0x895004	                mov dword [rax + 4], edx	       473	list.c	FUNCTION_24
0x956	      0xb801000000	                              mov eax, 1	       474	list.c	FUNCTION_24
0x95b	              0xc9	                                   leave	       475	list.c	FUNCTION_24
0x95c	              0xc3	                                     ret	       475	list.c	FUNCTION_24
list_find	DO,0:CALL,0:SWITCH,0:ELSE,4:FOR,0:functions,0:WHILE,2:IF,7	118
0x543	              0x55	                                push rbp	       288	list.c	FUNCTION_18
0x544	          0x4889e5	                            mov rbp, rsp	       288	list.c	FUNCTION_18
0x547	        0x48897de8	             mov qword [rbp - 0x18], rdi	       288	list.c	FUNCTION_18
0x54b	        0x488975e0	             mov qword [rbp - 0x20], rsi	       288	list.c	FUNCTION_18
0x54f	      0x48837de800	               cmp qword [rbp - 0x18], 0	       292	list.c	FUNCTION_18	IF_1
0x554	            0x750a	                           jne 0x40005a0	       292	list.c	FUNCTION_18	IF_1
0x556	      0xb800000000	                              mov eax, 0	       293	list.c	FUNCTION_18	IF_1
0x55b	      0xe96e010000	                           jmp 0x400070e	       293	list.c	FUNCTION_18	IF_1
0x560	      0x48837de000	               cmp qword [rbp - 0x20], 0	       296	list.c	FUNCTION_18	IF_2
0x565	            0x790d	                           jns 0x40005b4	       296	list.c	FUNCTION_18	IF_2
0x567	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       297	list.c	FUNCTION_18	IF_2
0x56b	          0x8b4014	            mov eax, dword [rax + 0x14] 	       297	list.c	FUNCTION_18	IF_2
0x56e	            0x4898	                                    cdqe	       297	list.c	FUNCTION_18	IF_2
0x570	        0x480145e0	            add qword [rbp - 0x20], rax 	       297	list.c	FUNCTION_18	IF_2
0x574	      0x48837de000	               cmp qword [rbp - 0x20], 0	       300	list.c	FUNCTION_18	IF_3
0x579	            0x780f	                            js 0x40005ca	       300	list.c	FUNCTION_18	IF_3
0x57b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       300	list.c	FUNCTION_18	IF_3
0x57f	          0x8b4014	            mov eax, dword [rax + 0x14] 	       300	list.c	FUNCTION_18	IF_3
0x582	            0x4898	                                    cdqe	       300	list.c	FUNCTION_18	IF_3
0x584	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       300	list.c	FUNCTION_18	IF_3
0x588	            0x7f0a	                            jg 0x40005d4	       300	list.c	FUNCTION_18	IF_3
0x58a	      0xb800000000	                              mov eax, 0	       301	list.c	FUNCTION_18	IF_3
0x58f	      0xe93a010000	                           jmp 0x400070e	       301	list.c	FUNCTION_18	IF_3
0x594	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       304	list.c	FUNCTION_18	IF_4
0x598	        0x488b4028	            mov rax, qword [rax + 0x28] 	       304	list.c	FUNCTION_18	IF_4
0x59c	          0x4885c0	                           test rax, rax	       304	list.c	FUNCTION_18	IF_4
0x59f	     0xf848a000000	                            je 0x400066f	       304	list.c	FUNCTION_18	IF_4
0x5a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       306	list.c	FUNCTION_18	IF_4	IF_5
0x5a9	          0x8b4020	            mov eax, dword [rax + 0x20] 	       306	list.c	FUNCTION_18	IF_4	IF_5
0x5ac	            0x89c2	                            mov edx, eax	       306	list.c	FUNCTION_18	IF_4	IF_5
0x5ae	          0xc1ea1f	                           shr edx, 0x1f	       306	list.c	FUNCTION_18	IF_4	IF_5
0x5b1	             0x1d0	                            add eax, edx	       306	list.c	FUNCTION_18	IF_4	IF_5
0x5b3	            0xd1f8	                              sar eax, 1	       306	list.c	FUNCTION_18	IF_4	IF_5
0x5b5	            0x4898	                                    cdqe	       306	list.c	FUNCTION_18	IF_4	IF_5
0x5b7	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       306	list.c	FUNCTION_18	IF_4	IF_5
0x5bb	            0x7e18	                           jle 0x4000615	       306	list.c	FUNCTION_18	IF_4	IF_5
0x5bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       309	list.c	FUNCTION_18	IF_4	IF_5
0x5c1	          0x488b00	                    mov rax, qword [rax]	       309	list.c	FUNCTION_18	IF_4	IF_5
0x5c4	        0x488945f0	             mov qword [rbp - 0x10], rax	       309	list.c	FUNCTION_18	IF_4	IF_5
0x5c8	    0x48c745f80000	                  mov qword [rbp - 8], 0	       310	list.c	FUNCTION_18	IF_4	IF_5
0x5d0	      0xe9b5000000	                           jmp 0x40006ca	       310	list.c	FUNCTION_18	IF_4	IF_5
0x5d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x5d9	          0x8b5020	            mov edx, dword [rax + 0x20] 	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x5dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x5e0	          0x8b4014	            mov eax, dword [rax + 0x14] 	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x5e3	             0x1d0	                            add eax, edx	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x5e5	            0x89c2	                            mov edx, eax	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x5e7	          0xc1ea1f	                           shr edx, 0x1f	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x5ea	             0x1d0	                            add eax, edx	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x5ec	            0xd1f8	                              sar eax, 1	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x5ee	            0x4898	                                    cdqe	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x5f0	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x5f4	            0x7d1e	                           jge 0x4000654	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x5f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       315	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x5fa	        0x488b4008	                mov rax, qword [rax + 8]	       315	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x5fe	        0x488945f0	             mov qword [rbp - 0x10], rax	       315	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x602	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x606	          0x8b4014	            mov eax, dword [rax + 0x14] 	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x609	          0x83e801	                              sub eax, 1	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x60c	            0x4898	                                    cdqe	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x60e	        0x488945f8	                mov qword [rbp - 8], rax	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x612	            0xeb76	                           jmp 0x40006ca	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x614	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       321	list.c	FUNCTION_18	IF_4	ELSE_2
0x618	        0x488b4028	            mov rax, qword [rax + 0x28] 	       321	list.c	FUNCTION_18	IF_4	ELSE_2
0x61c	        0x488945f0	             mov qword [rbp - 0x10], rax	       321	list.c	FUNCTION_18	IF_4	ELSE_2
0x620	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       322	list.c	FUNCTION_18	IF_4	ELSE_2
0x624	          0x8b4020	            mov eax, dword [rax + 0x20] 	       322	list.c	FUNCTION_18	IF_4	ELSE_2
0x627	            0x4898	                                    cdqe	       322	list.c	FUNCTION_18	IF_4	ELSE_2
0x629	        0x488945f8	                mov qword [rbp - 8], rax	       322	list.c	FUNCTION_18	IF_4	ELSE_2
0x62d	            0xeb5b	                           jmp 0x40006ca	       322	list.c	FUNCTION_18	IF_4	ELSE_2
0x62f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x633	          0x8b4014	            mov eax, dword [rax + 0x14] 	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x636	            0x89c2	                            mov edx, eax	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x638	          0xc1ea1f	                           shr edx, 0x1f	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x63b	             0x1d0	                            add eax, edx	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x63d	            0xd1f8	                              sar eax, 1	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x63f	            0x4898	                                    cdqe	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x641	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x645	            0x7e15	                           jle 0x400069c	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x647	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       330	list.c	FUNCTION_18	ELSE_3	IF_7
0x64b	          0x488b00	                    mov rax, qword [rax]	       330	list.c	FUNCTION_18	ELSE_3	IF_7
0x64e	        0x488945f0	             mov qword [rbp - 0x10], rax	       330	list.c	FUNCTION_18	ELSE_3	IF_7
0x652	    0x48c745f80000	                  mov qword [rbp - 8], 0	       331	list.c	FUNCTION_18	ELSE_3	IF_7
0x65a	            0xeb2e	                           jmp 0x40006ca	       331	list.c	FUNCTION_18	ELSE_3	IF_7
0x65c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       336	list.c	FUNCTION_18	ELSE_3	ELSE_4
0x660	        0x488b4008	                mov rax, qword [rax + 8]	       336	list.c	FUNCTION_18	ELSE_3	ELSE_4
0x664	        0x488945f0	             mov qword [rbp - 0x10], rax	       336	list.c	FUNCTION_18	ELSE_3	ELSE_4
0x668	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       337	list.c	FUNCTION_18	ELSE_3	ELSE_4
0x66c	          0x8b4014	            mov eax, dword [rax + 0x14] 	       337	list.c	FUNCTION_18	ELSE_3	ELSE_4
0x66f	          0x83e801	                              sub eax, 1	       337	list.c	FUNCTION_18	ELSE_3	ELSE_4
0x672	            0x4898	                                    cdqe	       337	list.c	FUNCTION_18	ELSE_3	ELSE_4
0x674	        0x488945f8	                mov qword [rbp - 8], rax	       337	list.c	FUNCTION_18	ELSE_3	ELSE_4
0x678	            0xeb10	                           jmp 0x40006ca	       341	list.c	FUNCTION_18	WHILE_1
0x67a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       344	list.c	FUNCTION_18	WHILE_1
0x67e	          0x488b00	                    mov rax, qword [rax]	       344	list.c	FUNCTION_18	WHILE_1
0x681	        0x488945f0	             mov qword [rbp - 0x10], rax	       344	list.c	FUNCTION_18	WHILE_1
0x685	      0x488345f801	                  add qword [rbp - 8], 1	       345	list.c	FUNCTION_18	WHILE_1
0x68a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       341	list.c	FUNCTION_18	WHILE_1
0x68e	        0x483b45f8	                cmp rax, qword [rbp - 8]	       341	list.c	FUNCTION_18	WHILE_1
0x692	            0x7fe6	                            jg 0x40006ba	       341	list.c	FUNCTION_18	WHILE_1
0x694	            0xeb11	                           jmp 0x40006e7	       347	list.c	FUNCTION_18	WHILE_2
0x696	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       350	list.c	FUNCTION_18	WHILE_2
0x69a	        0x488b4008	                mov rax, qword [rax + 8]	       350	list.c	FUNCTION_18	WHILE_2
0x69e	        0x488945f0	             mov qword [rbp - 0x10], rax	       350	list.c	FUNCTION_18	WHILE_2
0x6a2	      0x48836df801	                  sub qword [rbp - 8], 1	       351	list.c	FUNCTION_18	WHILE_2
0x6a7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       347	list.c	FUNCTION_18	WHILE_2
0x6ab	        0x483b45f8	                cmp rax, qword [rbp - 8]	       347	list.c	FUNCTION_18	WHILE_2
0x6af	            0x7ce5	                            jl 0x40006d6	       347	list.c	FUNCTION_18	WHILE_2
0x6b1	        0x488b45f8	                mov rax, qword [rbp - 8]	       355	list.c	FUNCTION_18
0x6b5	            0x89c2	                            mov edx, eax	       355	list.c	FUNCTION_18
0x6b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       355	list.c	FUNCTION_18
0x6bb	          0x895020	             mov dword [rax + 0x20], edx	       355	list.c	FUNCTION_18
0x6be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       356	list.c	FUNCTION_18
0x6c2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       356	list.c	FUNCTION_18
0x6c6	        0x48895028	             mov qword [rax + 0x28], rdx	       356	list.c	FUNCTION_18
0x6ca	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       358	list.c	FUNCTION_18
0x6ce	              0x5d	                                 pop rbp	       359	list.c	FUNCTION_18
0x6cf	              0xc3	                                     ret	       359	list.c	FUNCTION_18
list_equal	DO,0:CALL,3:SWITCH,0:ELSE,0:FOR,1:functions,0:WHILE,0:IF,4	72
0x44e	              0x55	                                push rbp	       263	list.c	FUNCTION_17
0x44f	          0x4889e5	                            mov rbp, rsp	       263	list.c	FUNCTION_17
0x452	              0x53	                                push rbx	       263	list.c	FUNCTION_17
0x453	        0x4883ec38	                           sub rsp, 0x38	       263	list.c	FUNCTION_17
0x457	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       263	list.c	FUNCTION_17
0x45b	        0x488975d0	             mov qword [rbp - 0x30], rsi	       263	list.c	FUNCTION_17
0x45f	          0x8955cc	             mov dword [rbp - 0x34], edx	       263	list.c	FUNCTION_17
0x462	          0x894dc8	             mov dword [rbp - 0x38], ecx	       263	list.c	FUNCTION_17
0x465	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       266	list.c	FUNCTION_17	IF_1
0x46a	            0x7407	                            je 0x40004b3	       266	list.c	FUNCTION_17	IF_1
0x46c	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       266	list.c	FUNCTION_17	IF_1
0x471	            0x750a	                           jne 0x40004bd	       266	list.c	FUNCTION_17	IF_1
0x473	      0xb800000000	                              mov eax, 0	       267	list.c	FUNCTION_17	IF_1
0x478	      0xe9bf000000	                           jmp 0x400057c	       267	list.c	FUNCTION_17	IF_1
0x47d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       268	list.c	FUNCTION_17	IF_2
0x481	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       268	list.c	FUNCTION_17	IF_2
0x485	            0x750a	                           jne 0x40004d1	       268	list.c	FUNCTION_17	IF_2
0x487	      0xb801000000	                              mov eax, 1	       269	list.c	FUNCTION_17	IF_2
0x48c	      0xe9ab000000	                           jmp 0x400057c	       269	list.c	FUNCTION_17	IF_2
0x491	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x495	          0x4889c7	                            mov rdi, rax	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x498	      0xe800000000	                          call 0x40004dd	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x49d	          0x4889c3	                            mov rbx, rax	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x4a0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x4a4	          0x4889c7	                            mov rdi, rax	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x4a7	      0xe800000000	                          call 0x40004ec	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x4ac	          0x4839c3	                            cmp rbx, rax	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x4af	            0x740a	                            je 0x40004fb	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x4b1	      0xb800000000	                              mov eax, 0	       271	list.c	FUNCTION_17	IF_3
0x4b6	      0xe981000000	                           jmp 0x400057c	       271	list.c	FUNCTION_17	IF_3
0x4bb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       273	list.c	FUNCTION_17	FOR_1
0x4bf	          0x488b00	                    mov rax, qword [rax]	       273	list.c	FUNCTION_17	FOR_1
0x4c2	        0x488945e0	             mov qword [rbp - 0x20], rax	       273	list.c	FUNCTION_17	FOR_1
0x4c6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       273	list.c	FUNCTION_17	FOR_1
0x4ca	          0x488b00	                    mov rax, qword [rax]	       273	list.c	FUNCTION_17	FOR_1
0x4cd	        0x488945e8	             mov qword [rbp - 0x18], rax	       273	list.c	FUNCTION_17	FOR_1
0x4d1	            0xeb40	                           jmp 0x4000553	       273	list.c	FUNCTION_17	FOR_1
0x4d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x4d7	        0x488d7010	                   lea rsi, [rax + 0x10]	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x4db	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x4df	        0x488d7810	                   lea rdi, [rax + 0x10]	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x4e3	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x4e6	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x4e9	            0x89d1	                            mov ecx, edx	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x4eb	            0x89c2	                            mov edx, eax	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x4ed	      0xe800000000	                          call 0x4000532	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x4f2	            0x85c0	                           test eax, eax	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x4f4	            0x7507	                           jne 0x400053d	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x4f6	      0xb800000000	                              mov eax, 0	       277	list.c	FUNCTION_17	FOR_1	IF_4
0x4fb	            0xeb3f	                           jmp 0x400057c	       277	list.c	FUNCTION_17	FOR_1	IF_4
0x4fd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       275	list.c	FUNCTION_17	FOR_1
0x501	          0x488b00	                    mov rax, qword [rax]	       275	list.c	FUNCTION_17	FOR_1
0x504	        0x488945e0	             mov qword [rbp - 0x20], rax	       275	list.c	FUNCTION_17	FOR_1
0x508	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       275	list.c	FUNCTION_17	FOR_1
0x50c	          0x488b00	                    mov rax, qword [rax]	       275	list.c	FUNCTION_17	FOR_1
0x50f	        0x488945e8	             mov qword [rbp - 0x18], rax	       275	list.c	FUNCTION_17	FOR_1
0x513	      0x48837de000	               cmp qword [rbp - 0x20], 0	       273	list.c	FUNCTION_17	FOR_1
0x518	            0x7407	                            je 0x4000561	       273	list.c	FUNCTION_17	FOR_1
0x51a	      0x48837de800	               cmp qword [rbp - 0x18], 0	       274	list.c	FUNCTION_17	FOR_1
0x51f	            0x75b2	                           jne 0x4000513	       274	list.c	FUNCTION_17	FOR_1
0x521	      0x48837de000	               cmp qword [rbp - 0x20], 0	       278	list.c	FUNCTION_17
0x526	            0x750e	                           jne 0x4000576	       278	list.c	FUNCTION_17
0x528	      0x48837de800	               cmp qword [rbp - 0x18], 0	       278	list.c	FUNCTION_17
0x52d	            0x7507	                           jne 0x4000576	       278	list.c	FUNCTION_17
0x52f	      0xb801000000	                              mov eax, 1	       278	list.c	FUNCTION_17
0x534	            0xeb05	                           jmp 0x400057b	       278	list.c	FUNCTION_17
0x536	      0xb800000000	                              mov eax, 0	       278	list.c	FUNCTION_17
0x53b	              0x90	                                     nop	       278	list.c	FUNCTION_17
0x53c	        0x4883c438	                           add rsp, 0x38	       279	list.c	FUNCTION_17
0x540	              0x5b	                                 pop rbx	       279	list.c	FUNCTION_17
0x541	              0x5d	                                 pop rbp	       279	list.c	FUNCTION_17
0x542	              0xc3	                                     ret	       279	list.c	FUNCTION_17
list_free_list	DO,0:CALL,1:SWITCH,0:ELSE,1:FOR,0:functions,0:WHILE,0:IF,2	32
0x2bd	              0x55	                                push rbp	       172	list.c	FUNCTION_10
0x2be	          0x4889e5	                            mov rbp, rsp	       172	list.c	FUNCTION_10
0x2c1	        0x4883ec10	                           sub rsp, 0x10	       172	list.c	FUNCTION_10
0x2c5	        0x48897df8	                mov qword [rbp - 8], rdi	       172	list.c	FUNCTION_10
0x2c9	        0x488b45f8	                mov rax, qword [rbp - 8]	       174	list.c	FUNCTION_10	IF_1
0x2cd	        0x488b4050	            mov rax, qword [rax + 0x50] 	       174	list.c	FUNCTION_10	IF_1
0x2d1	          0x4885c0	                           test rax, rax	       174	list.c	FUNCTION_10	IF_1
0x2d4	            0x7511	                           jne 0x4000327	       174	list.c	FUNCTION_10	IF_1
0x2d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	list.c	FUNCTION_10	IF_1
0x2da	        0x488b4048	            mov rax, qword [rax + 0x48] 	       175	list.c	FUNCTION_10	IF_1
0x2de	    0x488905000000	            mov qword [0x04000325], rax 	       175	list.c	FUNCTION_10	IF_1
0x2e5	            0xeb14	                           jmp 0x400033b	       175	list.c	FUNCTION_10	IF_1
0x2e7	        0x488b45f8	                mov rax, qword [rbp - 8]	       177	list.c	FUNCTION_10	ELSE_1
0x2eb	        0x488b4050	            mov rax, qword [rax + 0x50] 	       177	list.c	FUNCTION_10	ELSE_1
0x2ef	        0x488b55f8	                mov rdx, qword [rbp - 8]	       177	list.c	FUNCTION_10	ELSE_1
0x2f3	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	       177	list.c	FUNCTION_10	ELSE_1
0x2f7	        0x48895048	             mov qword [rax + 0x48], rdx	       177	list.c	FUNCTION_10	ELSE_1
0x2fb	        0x488b45f8	                mov rax, qword [rbp - 8]	       178	list.c	FUNCTION_10	IF_2
0x2ff	        0x488b4048	            mov rax, qword [rax + 0x48] 	       178	list.c	FUNCTION_10	IF_2
0x303	          0x4885c0	                           test rax, rax	       178	list.c	FUNCTION_10	IF_2
0x306	            0x7414	                            je 0x400035c	       178	list.c	FUNCTION_10	IF_2
0x308	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	list.c	FUNCTION_10	IF_2
0x30c	        0x488b4048	            mov rax, qword [rax + 0x48] 	       179	list.c	FUNCTION_10	IF_2
0x310	        0x488b55f8	                mov rdx, qword [rbp - 8]	       179	list.c	FUNCTION_10	IF_2
0x314	        0x488b5250	            mov rdx, qword [rdx + 0x50] 	       179	list.c	FUNCTION_10	IF_2
0x318	        0x48895050	             mov qword [rax + 0x50], rdx	       179	list.c	FUNCTION_10	IF_2
0x31c	        0x488b45f8	                mov rax, qword [rbp - 8]	       181	list.c	FUNCTION_10	CALL_1
0x320	          0x4889c7	                            mov rdi, rax	       181	list.c	FUNCTION_10	CALL_1
0x323	      0xe800000000	                          call 0x4000368	       181	list.c	FUNCTION_10	CALL_1
0x328	              0x90	                                     nop	       182	list.c	FUNCTION_10
0x329	              0xc9	                                   leave	       182	list.c	FUNCTION_10
0x32a	              0xc3	                                     ret	       182	list.c	FUNCTION_10
list_rem_watch	DO,0:CALL,0:SWITCH,0:ELSE,0:FOR,1:functions,0:WHILE,0:IF,1	30
0x2b	              0x55	                                push rbp	        37	list.c	FUNCTION_2
0x2c	          0x4889e5	                            mov rbp, rsp	        37	list.c	FUNCTION_2
0x2f	        0x48897de8	             mov qword [rbp - 0x18], rdi	        37	list.c	FUNCTION_2
0x33	        0x488975e0	             mov qword [rbp - 0x20], rsi	        37	list.c	FUNCTION_2
0x37	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        40	list.c	FUNCTION_2
0x3b	        0x4883c018	                           add rax, 0x18	        40	list.c	FUNCTION_2
0x3f	        0x488945f8	                mov qword [rbp - 8], rax	        40	list.c	FUNCTION_2
0x43	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	list.c	FUNCTION_2	FOR_1
0x47	        0x488b4018	            mov rax, qword [rax + 0x18] 	        41	list.c	FUNCTION_2	FOR_1
0x4b	        0x488945f0	             mov qword [rbp - 0x10], rax	        41	list.c	FUNCTION_2	FOR_1
0x4f	            0xeb33	                           jmp 0x40000c4	        41	list.c	FUNCTION_2	FOR_1
0x51	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x55	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x59	            0x7511	                           jne 0x40000ac	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x5b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        45	list.c	FUNCTION_2	FOR_1	IF_1
0x5f	        0x488b5008	                mov rdx, qword [rax + 8]	        45	list.c	FUNCTION_2	FOR_1	IF_1
0x63	        0x488b45f8	                mov rax, qword [rbp - 8]	        45	list.c	FUNCTION_2	FOR_1	IF_1
0x67	          0x488910	                    mov qword [rax], rdx	        45	list.c	FUNCTION_2	FOR_1	IF_1
0x6a	            0xeb1f	                           jmp 0x40000cb	        46	list.c	FUNCTION_2	FOR_1	IF_1
0x6c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        48	list.c	FUNCTION_2	FOR_1
0x70	        0x4883c008	                              add rax, 8	        48	list.c	FUNCTION_2	FOR_1
0x74	        0x488945f8	                mov qword [rbp - 8], rax	        48	list.c	FUNCTION_2	FOR_1
0x78	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        41	list.c	FUNCTION_2	FOR_1
0x7c	        0x488b4008	                mov rax, qword [rax + 8]	        41	list.c	FUNCTION_2	FOR_1
0x80	        0x488945f0	             mov qword [rbp - 0x10], rax	        41	list.c	FUNCTION_2	FOR_1
0x84	      0x48837df000	               cmp qword [rbp - 0x10], 0	        41	list.c	FUNCTION_2	FOR_1
0x89	            0x75c6	                           jne 0x4000091	        41	list.c	FUNCTION_2	FOR_1
0x8b	              0x90	                                     nop	        50	list.c	FUNCTION_2
0x8c	              0x5d	                                 pop rbp	        50	list.c	FUNCTION_2
0x8d	              0xc3	                                     ret	        50	list.c	FUNCTION_2
list_insert_tv	DO,0:CALL,3:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,1	27
0xa73	              0x55	                                push rbp	       526	list.c	FUNCTION_27
0xa74	          0x4889e5	                            mov rbp, rsp	       526	list.c	FUNCTION_27
0xa77	        0x4883ec30	                           sub rsp, 0x30	       526	list.c	FUNCTION_27
0xa7b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       526	list.c	FUNCTION_27
0xa7f	        0x488975e0	             mov qword [rbp - 0x20], rsi	       526	list.c	FUNCTION_27
0xa83	        0x488955d8	             mov qword [rbp - 0x28], rdx	       526	list.c	FUNCTION_27
0xa87	      0xe800000000	                          call 0x4000acc	       527	list.c	FUNCTION_27	CALL_1
0xa8c	        0x488945f8	                mov qword [rbp - 8], rax	       527	list.c	FUNCTION_27	CALL_1
0xa90	      0x48837df800	                  cmp qword [rbp - 8], 0	       529	list.c	FUNCTION_27	IF_1
0xa95	            0x7507	                           jne 0x4000ade	       529	list.c	FUNCTION_27	IF_1
0xa97	      0xb800000000	                              mov eax, 0	       530	list.c	FUNCTION_27	IF_1
0xa9c	            0xeb33	                           jmp 0x4000b11	       530	list.c	FUNCTION_27	IF_1
0xa9e	        0x488b45f8	                mov rax, qword [rbp - 8]	       531	list.c	FUNCTION_27	CALL_2
0xaa2	        0x488d5010	                   lea rdx, [rax + 0x10]	       531	list.c	FUNCTION_27	CALL_2
0xaa6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       531	list.c	FUNCTION_27	CALL_2
0xaaa	          0x4889d6	                            mov rsi, rdx	       531	list.c	FUNCTION_27	CALL_2
0xaad	          0x4889c7	                            mov rdi, rax	       531	list.c	FUNCTION_27	CALL_2
0xab0	      0xe800000000	                          call 0x4000af5	       531	list.c	FUNCTION_27	CALL_2
0xab5	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       532	list.c	FUNCTION_27	CALL_3
0xab9	        0x488b4df8	                mov rcx, qword [rbp - 8]	       532	list.c	FUNCTION_27	CALL_3
0xabd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       532	list.c	FUNCTION_27	CALL_3
0xac1	          0x4889ce	                            mov rsi, rcx	       532	list.c	FUNCTION_27	CALL_3
0xac4	          0x4889c7	                            mov rdi, rax	       532	list.c	FUNCTION_27	CALL_3
0xac7	      0xe800000000	                          call 0x4000b0c	       532	list.c	FUNCTION_27	CALL_3
0xacc	      0xb801000000	                              mov eax, 1	       533	list.c	FUNCTION_27
0xad1	              0xc9	                                   leave	       534	list.c	FUNCTION_27
0xad2	              0xc3	                                     ret	       534	list.c	FUNCTION_27
list_copy	DO,0:CALL,7:SWITCH,0:ELSE,1:FOR,1:functions,0:WHILE,0:IF,7	83
0xc79	              0x55	                                push rbp	       612	list.c	FUNCTION_31
0xc7a	          0x4889e5	                            mov rbp, rsp	       612	list.c	FUNCTION_31
0xc7d	        0x4883ec30	                           sub rsp, 0x30	       612	list.c	FUNCTION_31
0xc81	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       612	list.c	FUNCTION_31
0xc85	          0x8975d4	             mov dword [rbp - 0x2c], esi	       612	list.c	FUNCTION_31
0xc88	          0x8955d0	             mov dword [rbp - 0x30], edx	       612	list.c	FUNCTION_31
0xc8b	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       617	list.c	FUNCTION_31	IF_1
0xc90	            0x750a	                           jne 0x4000cdc	       617	list.c	FUNCTION_31	IF_1
0xc92	      0xb800000000	                              mov eax, 0	       618	list.c	FUNCTION_31	IF_1
0xc97	      0xe90c010000	                           jmp 0x4000de8	       618	list.c	FUNCTION_31	IF_1
0xc9c	      0xe800000000	                          call 0x4000ce1	       620	list.c	FUNCTION_31	CALL_1
0xca1	        0x488945e8	             mov qword [rbp - 0x18], rax	       620	list.c	FUNCTION_31	CALL_1
0xca5	      0x48837de800	               cmp qword [rbp - 0x18], 0	       621	list.c	FUNCTION_31	IF_2
0xcaa	     0xf84f4000000	                            je 0x4000de4	       621	list.c	FUNCTION_31	IF_2
0xcb0	        0x837dd000	               cmp dword [rbp - 0x30], 0	       623	list.c	FUNCTION_31	IF_2	IF_3
0xcb4	            0x7416	                            je 0x4000d0c	       623	list.c	FUNCTION_31	IF_2	IF_3
0xcb6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       627	list.c	FUNCTION_31	IF_2	IF_3
0xcba	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       627	list.c	FUNCTION_31	IF_2	IF_3
0xcbd	          0x895030	             mov dword [rax + 0x30], edx	       627	list.c	FUNCTION_31	IF_2	IF_3
0xcc0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       628	list.c	FUNCTION_31	IF_2	IF_3
0xcc4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       628	list.c	FUNCTION_31	IF_2	IF_3
0xcc8	        0x48895038	             mov qword [rax + 0x38], rdx	       628	list.c	FUNCTION_31	IF_2	IF_3
0xccc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       630	list.c	FUNCTION_31	IF_2	FOR_1
0xcd0	          0x488b00	                    mov rax, qword [rax]	       630	list.c	FUNCTION_31	IF_2	FOR_1
0xcd3	        0x488945f0	             mov qword [rbp - 0x10], rax	       630	list.c	FUNCTION_31	IF_2	FOR_1
0xcd7	      0xe984000000	                           jmp 0x4000da0	       630	list.c	FUNCTION_31	IF_2	FOR_1
0xcdc	      0xe800000000	                          call 0x4000d21	       633	list.c	FUNCTION_31	IF_2	FOR_1	CALL_2
0xce1	        0x488945f8	                mov qword [rbp - 8], rax	       633	list.c	FUNCTION_31	IF_2	FOR_1	CALL_2
0xce5	      0x48837df800	                  cmp qword [rbp - 8], 0	       634	list.c	FUNCTION_31	IF_2	FOR_1	IF_4
0xcea	     0xf8487000000	                            je 0x4000db7	       634	list.c	FUNCTION_31	IF_2	FOR_1	IF_4
0xcf0	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       636	list.c	FUNCTION_31	IF_2	FOR_1	IF_5
0xcf4	            0x7431	                            je 0x4000d67	       636	list.c	FUNCTION_31	IF_2	FOR_1	IF_5
0xcf6	        0x488b45f8	                mov rax, qword [rbp - 8]	       638	list.c	FUNCTION_31	IF_2	FOR_1	IF_5	IF_6	CALL_3
0xcfa	        0x488d7010	                   lea rsi, [rax + 0x10]	       638	list.c	FUNCTION_31	IF_2	FOR_1	IF_5	IF_6	CALL_3
0xcfe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       638	list.c	FUNCTION_31	IF_2	FOR_1	IF_5	IF_6	CALL_3
0xd02	        0x488d7810	                   lea rdi, [rax + 0x10]	       638	list.c	FUNCTION_31	IF_2	FOR_1	IF_5	IF_6	CALL_3
0xd06	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       638	list.c	FUNCTION_31	IF_2	FOR_1	IF_5	IF_6	CALL_3
0xd09	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       638	list.c	FUNCTION_31	IF_2	FOR_1	IF_5	IF_6	CALL_3
0xd0c	            0x89d1	                            mov ecx, edx	       638	list.c	FUNCTION_31	IF_2	FOR_1	IF_5	IF_6	CALL_3
0xd0e	            0x89c2	                            mov edx, eax	       638	list.c	FUNCTION_31	IF_2	FOR_1	IF_5	IF_6	CALL_3
0xd10	      0xe800000000	                          call 0x4000d55	       638	list.c	FUNCTION_31	IF_2	FOR_1	IF_5	IF_6	CALL_3
0xd15	            0x85c0	                           test eax, eax	       638	list.c	FUNCTION_31	IF_2	FOR_1	IF_5	IF_6	CALL_3
0xd17	            0x7529	                           jne 0x4000d82	       638	list.c	FUNCTION_31	IF_2	FOR_1	IF_5	IF_6	CALL_3
0xd19	        0x488b45f8	                mov rax, qword [rbp - 8]	       640	list.c	FUNCTION_31	IF_2	FOR_1	IF_5	IF_6	CALL_4
0xd1d	          0x4889c7	                            mov rdi, rax	       640	list.c	FUNCTION_31	IF_2	FOR_1	IF_5	IF_6	CALL_4
0xd20	      0xe800000000	                          call 0x4000d65	       640	list.c	FUNCTION_31	IF_2	FOR_1	IF_5	IF_6	CALL_4
0xd25	            0xeb51	                           jmp 0x4000db8	       641	list.c	FUNCTION_31	IF_2	FOR_1	IF_5	IF_6
0xd27	        0x488b45f8	                mov rax, qword [rbp - 8]	       645	list.c	FUNCTION_31	IF_2	FOR_1	CALL_5
0xd2b	        0x488d5010	                   lea rdx, [rax + 0x10]	       645	list.c	FUNCTION_31	IF_2	FOR_1	CALL_5
0xd2f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       645	list.c	FUNCTION_31	IF_2	FOR_1	CALL_5
0xd33	        0x4883c010	                           add rax, 0x10	       645	list.c	FUNCTION_31	IF_2	FOR_1	CALL_5
0xd37	          0x4889d6	                            mov rsi, rdx	       645	list.c	FUNCTION_31	IF_2	FOR_1	CALL_5
0xd3a	          0x4889c7	                            mov rdi, rax	       645	list.c	FUNCTION_31	IF_2	FOR_1	CALL_5
0xd3d	      0xe800000000	                          call 0x4000d82	       645	list.c	FUNCTION_31	IF_2	FOR_1	CALL_5
0xd42	        0x488b55f8	                mov rdx, qword [rbp - 8]	       646	list.c	FUNCTION_31	IF_2	FOR_1	CALL_6
0xd46	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       646	list.c	FUNCTION_31	IF_2	FOR_1	CALL_6
0xd4a	          0x4889d6	                            mov rsi, rdx	       646	list.c	FUNCTION_31	IF_2	FOR_1	CALL_6
0xd4d	          0x4889c7	                            mov rdi, rax	       646	list.c	FUNCTION_31	IF_2	FOR_1	CALL_6
0xd50	      0xe800000000	                          call 0x4000d95	       646	list.c	FUNCTION_31	IF_2	FOR_1	CALL_6
0xd55	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       631	list.c	FUNCTION_31	IF_2	FOR_1
0xd59	          0x488b00	                    mov rax, qword [rax]	       631	list.c	FUNCTION_31	IF_2	FOR_1
0xd5c	        0x488945f0	             mov qword [rbp - 0x10], rax	       631	list.c	FUNCTION_31	IF_2	FOR_1
0xd60	      0x48837df000	               cmp qword [rbp - 0x10], 0	       630	list.c	FUNCTION_31	IF_2	FOR_1
0xd65	            0x7411	                            je 0x4000db8	       630	list.c	FUNCTION_31	IF_2	FOR_1
0xd67	    0x8b0500000000	            mov eax, dword [0x04000dad] 	       630	list.c	FUNCTION_31	IF_2	FOR_1
0xd6d	            0x85c0	                           test eax, eax	       630	list.c	FUNCTION_31	IF_2	FOR_1
0xd6f	     0xf8467ffffff	                            je 0x4000d1c	       630	list.c	FUNCTION_31	IF_2	FOR_1
0xd75	            0xeb01	                           jmp 0x4000db8	       630	list.c	FUNCTION_31	IF_2	FOR_1
0xd77	              0x90	                                     nop	       635	list.c	FUNCTION_31	IF_2	FOR_1	IF_4
0xd78	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       648	list.c	FUNCTION_31	IF_2
0xd7c	          0x8b4010	            mov eax, dword [rax + 0x10] 	       648	list.c	FUNCTION_31	IF_2
0xd7f	          0x8d5001	                      lea edx, [rax + 1]	       648	list.c	FUNCTION_31	IF_2
0xd82	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       648	list.c	FUNCTION_31	IF_2
0xd86	          0x895010	             mov dword [rax + 0x10], edx	       648	list.c	FUNCTION_31	IF_2
0xd89	      0x48837df000	               cmp qword [rbp - 0x10], 0	       649	list.c	FUNCTION_31	IF_2	IF_7
0xd8e	            0x7414	                            je 0x4000de4	       649	list.c	FUNCTION_31	IF_2	IF_7
0xd90	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       651	list.c	FUNCTION_31	IF_2	IF_7	CALL_7
0xd94	          0x4889c7	                            mov rdi, rax	       651	list.c	FUNCTION_31	IF_2	IF_7	CALL_7
0xd97	      0xe800000000	                          call 0x4000ddc	       651	list.c	FUNCTION_31	IF_2	IF_7	CALL_7
0xd9c	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       652	list.c	FUNCTION_31	IF_2	IF_7
0xda4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       656	list.c	FUNCTION_31
0xda8	              0xc9	                                   leave	       657	list.c	FUNCTION_31
0xda9	              0xc3	                                     ret	       657	list.c	FUNCTION_31
list_unref	DO,0:CALL,1:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,1	21
0x1bf	              0x55	                                push rbp	       123	list.c	FUNCTION_7
0x1c0	          0x4889e5	                            mov rbp, rsp	       123	list.c	FUNCTION_7
0x1c3	        0x4883ec10	                           sub rsp, 0x10	       123	list.c	FUNCTION_7
0x1c7	        0x48897df8	                mov qword [rbp - 8], rdi	       123	list.c	FUNCTION_7
0x1cb	      0x48837df800	                  cmp qword [rbp - 8], 0	       124	list.c	FUNCTION_7	IF_1
0x1d0	            0x7428	                            je 0x400023a	       124	list.c	FUNCTION_7	IF_1
0x1d2	        0x488b45f8	                mov rax, qword [rbp - 8]	       124	list.c	FUNCTION_7	IF_1
0x1d6	          0x8b4010	            mov eax, dword [rax + 0x10] 	       124	list.c	FUNCTION_7	IF_1
0x1d9	          0x8d50ff	                      lea edx, [rax - 1]	       124	list.c	FUNCTION_7	IF_1
0x1dc	        0x488b45f8	                mov rax, qword [rbp - 8]	       124	list.c	FUNCTION_7	IF_1
0x1e0	          0x895010	             mov dword [rax + 0x10], edx	       124	list.c	FUNCTION_7	IF_1
0x1e3	        0x488b45f8	                mov rax, qword [rbp - 8]	       124	list.c	FUNCTION_7	IF_1
0x1e7	          0x8b4010	            mov eax, dword [rax + 0x10] 	       124	list.c	FUNCTION_7	IF_1
0x1ea	            0x85c0	                           test eax, eax	       124	list.c	FUNCTION_7	IF_1
0x1ec	            0x7f0c	                            jg 0x400023a	       124	list.c	FUNCTION_7	IF_1
0x1ee	        0x488b45f8	                mov rax, qword [rbp - 8]	       125	list.c	FUNCTION_7	CALL_1
0x1f2	          0x4889c7	                            mov rdi, rax	       125	list.c	FUNCTION_7	CALL_1
0x1f5	      0xe800000000	                          call 0x400023a	       125	list.c	FUNCTION_7	CALL_1
0x1fa	              0x90	                                     nop	       126	list.c	FUNCTION_7
0x1fb	              0xc9	                                   leave	       126	list.c	FUNCTION_7
0x1fc	              0xc3	                                     ret	       126	list.c	FUNCTION_7
list_idx_of_item	DO,0:CALL,0:SWITCH,0:ELSE,0:FOR,1:functions,0:WHILE,0:IF,2	30
0x79c	              0x55	                                push rbp	       405	list.c	FUNCTION_21
0x79d	          0x4889e5	                            mov rbp, rsp	       405	list.c	FUNCTION_21
0x7a0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       405	list.c	FUNCTION_21
0x7a4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       405	list.c	FUNCTION_21
0x7a8	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       406	list.c	FUNCTION_21
0x7b0	      0x48837de800	               cmp qword [rbp - 0x18], 0	       409	list.c	FUNCTION_21	IF_1
0x7b5	            0x7509	                           jne 0x4000800	       409	list.c	FUNCTION_21	IF_1
0x7b7	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       410	list.c	FUNCTION_21	IF_1
0x7be	            0xeb4a	                           jmp 0x400084a	       410	list.c	FUNCTION_21	IF_1
0x7c0	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       411	list.c	FUNCTION_21
0x7c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       412	list.c	FUNCTION_21	FOR_1
0x7cc	          0x488b00	                    mov rax, qword [rax]	       412	list.c	FUNCTION_21	FOR_1
0x7cf	        0x488945f8	                mov qword [rbp - 8], rax	       412	list.c	FUNCTION_21	FOR_1
0x7d3	            0xeb10	                           jmp 0x4000825	       412	list.c	FUNCTION_21	FOR_1
0x7d5	      0x488345f001	               add qword [rbp - 0x10], 1	       413	list.c	FUNCTION_21	FOR_1
0x7da	        0x488b45f8	                mov rax, qword [rbp - 8]	       412	list.c	FUNCTION_21	FOR_1
0x7de	          0x488b00	                    mov rax, qword [rax]	       412	list.c	FUNCTION_21	FOR_1
0x7e1	        0x488945f8	                mov qword [rbp - 8], rax	       412	list.c	FUNCTION_21	FOR_1
0x7e5	      0x48837df800	                  cmp qword [rbp - 8], 0	       412	list.c	FUNCTION_21	FOR_1
0x7ea	            0x740a	                            je 0x4000836	       412	list.c	FUNCTION_21	FOR_1
0x7ec	        0x488b45f8	                mov rax, qword [rbp - 8]	       412	list.c	FUNCTION_21	FOR_1
0x7f0	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       412	list.c	FUNCTION_21	FOR_1
0x7f4	            0x75df	                           jne 0x4000815	       412	list.c	FUNCTION_21	FOR_1
0x7f6	      0x48837df800	                  cmp qword [rbp - 8], 0	       414	list.c	FUNCTION_21	IF_2
0x7fb	            0x7509	                           jne 0x4000846	       414	list.c	FUNCTION_21	IF_2
0x7fd	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       415	list.c	FUNCTION_21	IF_2
0x804	            0xeb04	                           jmp 0x400084a	       415	list.c	FUNCTION_21	IF_2
0x806	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       416	list.c	FUNCTION_21
0x80a	              0x5d	                                 pop rbp	       417	list.c	FUNCTION_21
0x80b	              0xc3	                                     ret	       417	list.c	FUNCTION_21
list_len	DO,0:CALL,0:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,1	12
0x42d	              0x55	                                push rbp	       248	list.c	FUNCTION_16
0x42e	          0x4889e5	                            mov rbp, rsp	       248	list.c	FUNCTION_16
0x431	        0x48897df8	                mov qword [rbp - 8], rdi	       248	list.c	FUNCTION_16
0x435	      0x48837df800	                  cmp qword [rbp - 8], 0	       249	list.c	FUNCTION_16	IF_1
0x43a	            0x7507	                           jne 0x4000483	       249	list.c	FUNCTION_16	IF_1
0x43c	      0xb800000000	                              mov eax, 0	       250	list.c	FUNCTION_16	IF_1
0x441	            0xeb09	                           jmp 0x400048c	       250	list.c	FUNCTION_16	IF_1
0x443	        0x488b45f8	                mov rax, qword [rbp - 8]	       251	list.c	FUNCTION_16
0x447	          0x8b4014	            mov eax, dword [rax + 0x14] 	       251	list.c	FUNCTION_16
0x44a	            0x4898	                                    cdqe	       251	list.c	FUNCTION_16
0x44c	              0x5d	                                 pop rbp	       252	list.c	FUNCTION_16
0x44d	              0xc3	                                     ret	       252	list.c	FUNCTION_16
list_find_nr	DO,0:CALL,2:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,2	28
0x6d0	              0x55	                                push rbp	       369	list.c	FUNCTION_19
0x6d1	          0x4889e5	                            mov rbp, rsp	       369	list.c	FUNCTION_19
0x6d4	        0x4883ec30	                           sub rsp, 0x30	       369	list.c	FUNCTION_19
0x6d8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       369	list.c	FUNCTION_19
0x6dc	        0x488975e0	             mov qword [rbp - 0x20], rsi	       369	list.c	FUNCTION_19
0x6e0	        0x488955d8	             mov qword [rbp - 0x28], rdx	       369	list.c	FUNCTION_19
0x6e4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       372	list.c	FUNCTION_19	CALL_1
0x6e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       372	list.c	FUNCTION_19	CALL_1
0x6ec	          0x4889d6	                            mov rsi, rdx	       372	list.c	FUNCTION_19	CALL_1
0x6ef	          0x4889c7	                            mov rdi, rax	       372	list.c	FUNCTION_19	CALL_1
0x6f2	      0xe800000000	                          call 0x4000737	       372	list.c	FUNCTION_19	CALL_1
0x6f7	        0x488945f8	                mov qword [rbp - 8], rax	       372	list.c	FUNCTION_19	CALL_1
0x6fb	      0x48837df800	                  cmp qword [rbp - 8], 0	       373	list.c	FUNCTION_19	IF_1
0x700	            0x751a	                           jne 0x400075c	       373	list.c	FUNCTION_19	IF_1
0x702	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       375	list.c	FUNCTION_19	IF_1	IF_2
0x707	            0x740a	                            je 0x4000753	       375	list.c	FUNCTION_19	IF_1	IF_2
0x709	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       376	list.c	FUNCTION_19	IF_1	IF_2
0x70d	    0xc70001000000	                      mov dword [rax], 1	       376	list.c	FUNCTION_19	IF_1	IF_2
0x713	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       377	list.c	FUNCTION_19	IF_1
0x71a	            0xeb17	                           jmp 0x4000773	       377	list.c	FUNCTION_19	IF_1
0x71c	        0x488b45f8	                mov rax, qword [rbp - 8]	       379	list.c	FUNCTION_19	CALL_2
0x720	        0x488d5010	                   lea rdx, [rax + 0x10]	       379	list.c	FUNCTION_19	CALL_2
0x724	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       379	list.c	FUNCTION_19	CALL_2
0x728	          0x4889c6	                            mov rsi, rax	       379	list.c	FUNCTION_19	CALL_2
0x72b	          0x4889d7	                            mov rdi, rdx	       379	list.c	FUNCTION_19	CALL_2
0x72e	      0xe800000000	                          call 0x4000773	       379	list.c	FUNCTION_19	CALL_2
0x733	              0xc9	                                   leave	       380	list.c	FUNCTION_19
0x734	              0xc3	                                     ret	       380	list.c	FUNCTION_19
list_concat	DO,0:CALL,2:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,2	35
0xbf8	              0x55	                                push rbp	       587	list.c	FUNCTION_30
0xbf9	          0x4889e5	                            mov rbp, rsp	       587	list.c	FUNCTION_30
0xbfc	        0x4883ec30	                           sub rsp, 0x30	       587	list.c	FUNCTION_30
0xc00	        0x48897de8	             mov qword [rbp - 0x18], rdi	       587	list.c	FUNCTION_30
0xc04	        0x488975e0	             mov qword [rbp - 0x20], rsi	       587	list.c	FUNCTION_30
0xc08	        0x488955d8	             mov qword [rbp - 0x28], rdx	       587	list.c	FUNCTION_30
0xc0c	      0x48837de800	               cmp qword [rbp - 0x18], 0	       590	list.c	FUNCTION_30	IF_1
0xc11	            0x7407	                            je 0x4000c5a	       590	list.c	FUNCTION_30	IF_1
0xc13	      0x48837de000	               cmp qword [rbp - 0x20], 0	       590	list.c	FUNCTION_30	IF_1
0xc18	            0x7507	                           jne 0x4000c61	       590	list.c	FUNCTION_30	IF_1
0xc1a	      0xb800000000	                              mov eax, 0	       591	list.c	FUNCTION_30	IF_1
0xc1f	            0xeb56	                           jmp 0x4000cb7	       591	list.c	FUNCTION_30	IF_1
0xc21	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       594	list.c	FUNCTION_30	CALL_1
0xc25	      0xba00000000	                              mov edx, 0	       594	list.c	FUNCTION_30	CALL_1
0xc2a	      0xbe00000000	                              mov esi, 0	       594	list.c	FUNCTION_30	CALL_1
0xc2f	          0x4889c7	                            mov rdi, rax	       594	list.c	FUNCTION_30	CALL_1
0xc32	      0xe800000000	                          call 0x4000c77	       594	list.c	FUNCTION_30	CALL_1
0xc37	        0x488945f8	                mov qword [rbp - 8], rax	       594	list.c	FUNCTION_30	CALL_1
0xc3b	      0x48837df800	                  cmp qword [rbp - 8], 0	       595	list.c	FUNCTION_30	IF_2
0xc40	            0x7507	                           jne 0x4000c89	       595	list.c	FUNCTION_30	IF_2
0xc42	      0xb800000000	                              mov eax, 0	       596	list.c	FUNCTION_30	IF_2
0xc47	            0xeb2e	                           jmp 0x4000cb7	       596	list.c	FUNCTION_30	IF_2
0xc49	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       597	list.c	FUNCTION_30
0xc4d	    0xc70005000000	                      mov dword [rax], 5	       597	list.c	FUNCTION_30
0xc53	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       598	list.c	FUNCTION_30
0xc57	        0x488b55f8	                mov rdx, qword [rbp - 8]	       598	list.c	FUNCTION_30
0xc5b	        0x48895008	                mov qword [rax + 8], rdx	       598	list.c	FUNCTION_30
0xc5f	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       601	list.c	FUNCTION_30	CALL_2
0xc63	        0x488b45f8	                mov rax, qword [rbp - 8]	       601	list.c	FUNCTION_30	CALL_2
0xc67	      0xba00000000	                              mov edx, 0	       601	list.c	FUNCTION_30	CALL_2
0xc6c	          0x4889ce	                            mov rsi, rcx	       601	list.c	FUNCTION_30	CALL_2
0xc6f	          0x4889c7	                            mov rdi, rax	       601	list.c	FUNCTION_30	CALL_2
0xc72	      0xe800000000	                          call 0x4000cb7	       601	list.c	FUNCTION_30	CALL_2
0xc77	              0xc9	                                   leave	       602	list.c	FUNCTION_30
0xc78	              0xc3	                                     ret	       602	list.c	FUNCTION_30
get_list_tv	DO,0:CALL,14:SWITCH,0:ELSE,1:FOR,0:functions,0:WHILE,1:IF,10	141
0x12ec	              0x55	                                push rbp	       837	list.c	FUNCTION_36
0x12ed	          0x4889e5	                            mov rbp, rsp	       837	list.c	FUNCTION_36
0x12f0	              0x53	                                push rbx	       837	list.c	FUNCTION_36
0x12f1	        0x4883ec58	                           sub rsp, 0x58	       837	list.c	FUNCTION_36
0x12f5	        0x48897db8	             mov qword [rbp - 0x48], rdi	       837	list.c	FUNCTION_36
0x12f9	        0x488975b0	             mov qword [rbp - 0x50], rsi	       837	list.c	FUNCTION_36
0x12fd	          0x8955ac	             mov dword [rbp - 0x54], edx	       837	list.c	FUNCTION_36
0x1300	    0x64488b042528	                mov rax, qword fs:[0x28]	       837	list.c	FUNCTION_36
0x1309	        0x488945e8	             mov qword [rbp - 0x18], rax	       837	list.c	FUNCTION_36
0x130d	            0x31c0	                            xor eax, eax	       837	list.c	FUNCTION_36
0x130f	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       838	list.c	FUNCTION_36
0x1317	        0x837dac00	               cmp dword [rbp - 0x54], 0	       842	list.c	FUNCTION_36	IF_1
0x131b	            0x741a	                            je 0x4001377	       842	list.c	FUNCTION_36	IF_1
0x131d	      0xe800000000	                          call 0x4001362	       844	list.c	FUNCTION_36	IF_1	CALL_1
0x1322	        0x488945c0	             mov qword [rbp - 0x40], rax	       844	list.c	FUNCTION_36	IF_1	CALL_1
0x1326	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       845	list.c	FUNCTION_36	IF_1	IF_2
0x132b	            0x750a	                           jne 0x4001377	       845	list.c	FUNCTION_36	IF_1	IF_2
0x132d	      0xb800000000	                              mov eax, 0	       846	list.c	FUNCTION_36	IF_1	IF_2
0x1332	      0xe98e010000	                           jmp 0x4001505	       846	list.c	FUNCTION_36	IF_1	IF_2
0x1337	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       849	list.c	FUNCTION_36	CALL_2
0x133b	          0x488b00	                    mov rax, qword [rax]	       849	list.c	FUNCTION_36	CALL_2
0x133e	        0x4883c001	                              add rax, 1	       849	list.c	FUNCTION_36	CALL_2
0x1342	          0x4889c7	                            mov rdi, rax	       849	list.c	FUNCTION_36	CALL_2
0x1345	      0xe800000000	                          call 0x400138a	       849	list.c	FUNCTION_36	CALL_2
0x134a	          0x4889c2	                            mov rdx, rax	       849	list.c	FUNCTION_36	CALL_2
0x134d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       849	list.c	FUNCTION_36	CALL_2
0x1351	          0x488910	                    mov qword [rax], rdx	       849	list.c	FUNCTION_36	CALL_2
0x1354	      0xe9c8000000	                           jmp 0x4001461	       850	list.c	FUNCTION_36	WHILE_1
0x1359	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       852	list.c	FUNCTION_36	WHILE_1	IF_3	CALL_3
0x135c	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       852	list.c	FUNCTION_36	WHILE_1	IF_3	CALL_3
0x1360	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       852	list.c	FUNCTION_36	WHILE_1	IF_3	CALL_3
0x1364	          0x4889ce	                            mov rsi, rcx	       852	list.c	FUNCTION_36	WHILE_1	IF_3	CALL_3
0x1367	          0x4889c7	                            mov rdi, rax	       852	list.c	FUNCTION_36	WHILE_1	IF_3	CALL_3
0x136a	      0xe800000000	                          call 0x40013af	       852	list.c	FUNCTION_36	WHILE_1	IF_3	CALL_3
0x136f	            0x85c0	                           test eax, eax	       852	list.c	FUNCTION_36	WHILE_1	IF_3	CALL_3
0x1371	     0xf84f9000000	                            je 0x40014b0	       852	list.c	FUNCTION_36	WHILE_1	IF_3	CALL_3
0x1377	        0x837dac00	               cmp dword [rbp - 0x54], 0	       854	list.c	FUNCTION_36	WHILE_1	IF_4
0x137b	            0x744d	                            je 0x400140a	       854	list.c	FUNCTION_36	WHILE_1	IF_4
0x137d	      0xe800000000	                          call 0x40013c2	       856	list.c	FUNCTION_36	WHILE_1	IF_4	CALL_4
0x1382	        0x488945c8	             mov qword [rbp - 0x38], rax	       856	list.c	FUNCTION_36	WHILE_1	IF_4	CALL_4
0x1386	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       857	list.c	FUNCTION_36	WHILE_1	IF_4	IF_5
0x138b	            0x7431	                            je 0x40013fe	       857	list.c	FUNCTION_36	WHILE_1	IF_4	IF_5
0x138d	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       859	list.c	FUNCTION_36	WHILE_1	IF_4	IF_5
0x1391	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       859	list.c	FUNCTION_36	WHILE_1	IF_4	IF_5
0x1395	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       859	list.c	FUNCTION_36	WHILE_1	IF_4	IF_5
0x1399	        0x48894110	             mov qword [rcx + 0x10], rax	       859	list.c	FUNCTION_36	WHILE_1	IF_4	IF_5
0x139d	        0x48895118	             mov qword [rcx + 0x18], rdx	       859	list.c	FUNCTION_36	WHILE_1	IF_4	IF_5
0x13a1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       860	list.c	FUNCTION_36	WHILE_1	IF_4	IF_5
0x13a5	        0xc6401400	                mov byte [rax + 0x14], 0	       860	list.c	FUNCTION_36	WHILE_1	IF_4	IF_5
0x13a9	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       861	list.c	FUNCTION_36	WHILE_1	IF_4	IF_5	CALL_5
0x13ad	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       861	list.c	FUNCTION_36	WHILE_1	IF_4	IF_5	CALL_5
0x13b1	          0x4889d6	                            mov rsi, rdx	       861	list.c	FUNCTION_36	WHILE_1	IF_4	IF_5	CALL_5
0x13b4	          0x4889c7	                            mov rdi, rax	       861	list.c	FUNCTION_36	WHILE_1	IF_4	IF_5	CALL_5
0x13b7	      0xe800000000	                          call 0x40013fc	       861	list.c	FUNCTION_36	WHILE_1	IF_4	IF_5	CALL_5
0x13bc	            0xeb0c	                           jmp 0x400140a	       861	list.c	FUNCTION_36	WHILE_1	IF_4	IF_5	CALL_5
0x13be	        0x488d45d0	                   lea rax, [rbp - 0x30]	       864	list.c	FUNCTION_36	WHILE_1	IF_4	CALL_6
0x13c2	          0x4889c7	                            mov rdi, rax	       864	list.c	FUNCTION_36	WHILE_1	IF_4	CALL_6
0x13c5	      0xe800000000	                          call 0x400140a	       864	list.c	FUNCTION_36	WHILE_1	IF_4	CALL_6
0x13ca	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       867	list.c	FUNCTION_36	WHILE_1	IF_6
0x13ce	          0x488b00	                    mov rax, qword [rax]	       867	list.c	FUNCTION_36	WHILE_1	IF_6
0x13d1	           0xfb600	                   movzx eax, byte [rax]	       867	list.c	FUNCTION_36	WHILE_1	IF_6
0x13d4	            0x3c5d	                            cmp al, 0x5d	       867	list.c	FUNCTION_36	WHILE_1	IF_6
0x13d6	            0x746b	                            je 0x4001483	       867	list.c	FUNCTION_36	WHILE_1	IF_6
0x13d8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       869	list.c	FUNCTION_36	WHILE_1	IF_7
0x13dc	          0x488b00	                    mov rax, qword [rax]	       869	list.c	FUNCTION_36	WHILE_1	IF_7
0x13df	           0xfb600	                   movzx eax, byte [rax]	       869	list.c	FUNCTION_36	WHILE_1	IF_7
0x13e2	            0x3c2c	                            cmp al, 0x2c	       869	list.c	FUNCTION_36	WHILE_1	IF_7
0x13e4	            0x741e	                            je 0x4001444	       869	list.c	FUNCTION_36	WHILE_1	IF_7
0x13e6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       871	list.c	FUNCTION_36	WHILE_1	IF_7	CALL_8
0x13ea	          0x488b18	                    mov rbx, qword [rax]	       871	list.c	FUNCTION_36	WHILE_1	IF_7	CALL_8
0x13ed	      0xbf00000000	                              mov edi, 0	       871	list.c	FUNCTION_36	WHILE_1	IF_7	CALL_8
0x13f2	      0xe800000000	                          call 0x4001437	       871	list.c	FUNCTION_36	WHILE_1	IF_7	CALL_8
0x13f7	          0x4889de	                            mov rsi, rbx	       871	list.c	FUNCTION_36	WHILE_1	IF_7	CALL_8
0x13fa	          0x4889c7	                            mov rdi, rax	       871	list.c	FUNCTION_36	WHILE_1	IF_7	CALL_8
0x13fd	      0xe800000000	                          call 0x4001442	       871	list.c	FUNCTION_36	WHILE_1	IF_7	CALL_8
0x1402	            0xeb6d	                           jmp 0x40014b1	       872	list.c	FUNCTION_36	WHILE_1	IF_7
0x1404	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       874	list.c	FUNCTION_36	WHILE_1	CALL_9
0x1408	          0x488b00	                    mov rax, qword [rax]	       874	list.c	FUNCTION_36	WHILE_1	CALL_9
0x140b	        0x4883c001	                              add rax, 1	       874	list.c	FUNCTION_36	WHILE_1	CALL_9
0x140f	          0x4889c7	                            mov rdi, rax	       874	list.c	FUNCTION_36	WHILE_1	CALL_9
0x1412	      0xe800000000	                          call 0x4001457	       874	list.c	FUNCTION_36	WHILE_1	CALL_9
0x1417	          0x4889c2	                            mov rdx, rax	       874	list.c	FUNCTION_36	WHILE_1	CALL_9
0x141a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       874	list.c	FUNCTION_36	WHILE_1	CALL_9
0x141e	          0x488910	                    mov qword [rax], rdx	       874	list.c	FUNCTION_36	WHILE_1	CALL_9
0x1421	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       850	list.c	FUNCTION_36	WHILE_1
0x1425	          0x488b00	                    mov rax, qword [rax]	       850	list.c	FUNCTION_36	WHILE_1
0x1428	           0xfb600	                   movzx eax, byte [rax]	       850	list.c	FUNCTION_36	WHILE_1
0x142b	            0x3c5d	                            cmp al, 0x5d	       850	list.c	FUNCTION_36	WHILE_1
0x142d	            0x7415	                            je 0x4001484	       850	list.c	FUNCTION_36	WHILE_1
0x142f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       850	list.c	FUNCTION_36	WHILE_1
0x1433	          0x488b00	                    mov rax, qword [rax]	       850	list.c	FUNCTION_36	WHILE_1
0x1436	           0xfb600	                   movzx eax, byte [rax]	       850	list.c	FUNCTION_36	WHILE_1
0x1439	            0x84c0	                             test al, al	       850	list.c	FUNCTION_36	WHILE_1
0x143b	     0xf8518ffffff	                           jne 0x4001399	       850	list.c	FUNCTION_36	WHILE_1
0x1441	            0xeb01	                           jmp 0x4001484	       850	list.c	FUNCTION_36	WHILE_1
0x1443	              0x90	                                     nop	       868	list.c	FUNCTION_36	WHILE_1	IF_6
0x1444	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       877	list.c	FUNCTION_36	IF_8
0x1448	          0x488b00	                    mov rax, qword [rax]	       877	list.c	FUNCTION_36	IF_8
0x144b	           0xfb600	                   movzx eax, byte [rax]	       877	list.c	FUNCTION_36	IF_8
0x144e	            0x3c5d	                            cmp al, 0x5d	       877	list.c	FUNCTION_36	IF_8
0x1450	            0x7438	                            je 0x40014ca	       877	list.c	FUNCTION_36	IF_8
0x1452	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       879	list.c	FUNCTION_36	IF_8	CALL_11
0x1456	          0x488b18	                    mov rbx, qword [rax]	       879	list.c	FUNCTION_36	IF_8	CALL_11
0x1459	      0xbf00000000	                              mov edi, 0	       879	list.c	FUNCTION_36	IF_8	CALL_11
0x145e	      0xe800000000	                          call 0x40014a3	       879	list.c	FUNCTION_36	IF_8	CALL_11
0x1463	          0x4889de	                            mov rsi, rbx	       879	list.c	FUNCTION_36	IF_8	CALL_11
0x1466	          0x4889c7	                            mov rdi, rax	       879	list.c	FUNCTION_36	IF_8	CALL_11
0x1469	      0xe800000000	                          call 0x40014ae	       879	list.c	FUNCTION_36	IF_8	CALL_11
0x146e	            0xeb01	                           jmp 0x40014b1	       879	list.c	FUNCTION_36	IF_8	CALL_11
0x1470	              0x90	                                     nop	       853	list.c	FUNCTION_36	WHILE_1	IF_3
0x1471	        0x837dac00	               cmp dword [rbp - 0x54], 0	       881	list.c	FUNCTION_36	IF_8	IF_9
0x1475	            0x740c	                            je 0x40014c3	       881	list.c	FUNCTION_36	IF_8	IF_9
0x1477	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       882	list.c	FUNCTION_36	IF_8	CALL_12
0x147b	          0x4889c7	                            mov rdi, rax	       882	list.c	FUNCTION_36	IF_8	CALL_12
0x147e	      0xe800000000	                          call 0x40014c3	       882	list.c	FUNCTION_36	IF_8	CALL_12
0x1483	      0xb800000000	                              mov eax, 0	       883	list.c	FUNCTION_36	IF_8
0x1488	            0xeb3b	                           jmp 0x4001505	       883	list.c	FUNCTION_36	IF_8
0x148a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       886	list.c	FUNCTION_36	CALL_13
0x148e	          0x488b00	                    mov rax, qword [rax]	       886	list.c	FUNCTION_36	CALL_13
0x1491	        0x4883c001	                              add rax, 1	       886	list.c	FUNCTION_36	CALL_13
0x1495	          0x4889c7	                            mov rdi, rax	       886	list.c	FUNCTION_36	CALL_13
0x1498	      0xe800000000	                          call 0x40014dd	       886	list.c	FUNCTION_36	CALL_13
0x149d	          0x4889c2	                            mov rdx, rax	       886	list.c	FUNCTION_36	CALL_13
0x14a0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       886	list.c	FUNCTION_36	CALL_13
0x14a4	          0x488910	                    mov qword [rax], rdx	       886	list.c	FUNCTION_36	CALL_13
0x14a7	        0x837dac00	               cmp dword [rbp - 0x54], 0	       887	list.c	FUNCTION_36	IF_10
0x14ab	            0x7413	                            je 0x4001500	       887	list.c	FUNCTION_36	IF_10
0x14ad	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       888	list.c	FUNCTION_36	CALL_14
0x14b1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       888	list.c	FUNCTION_36	CALL_14
0x14b5	          0x4889d6	                            mov rsi, rdx	       888	list.c	FUNCTION_36	CALL_14
0x14b8	          0x4889c7	                            mov rdi, rax	       888	list.c	FUNCTION_36	CALL_14
0x14bb	      0xe800000000	                          call 0x4001500	       888	list.c	FUNCTION_36	CALL_14
0x14c0	      0xb801000000	                              mov eax, 1	       890	list.c	FUNCTION_36
0x14c5	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       891	list.c	FUNCTION_36
0x14c9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       891	list.c	FUNCTION_36
0x14d2	            0x7405	                            je 0x4001519	       891	list.c	FUNCTION_36
0x14d4	      0xe800000000	                          call 0x4001519	       891	list.c	FUNCTION_36
0x14d9	        0x4883c458	                           add rsp, 0x58	       891	list.c	FUNCTION_36
0x14dd	              0x5b	                                 pop rbx	       891	list.c	FUNCTION_36
0x14de	              0x5d	                                 pop rbp	       891	list.c	FUNCTION_36
0x14df	              0xc3	                                     ret	       891	list.c	FUNCTION_36
rettv_list_alloc	DO,0:CALL,2:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,1	20
0x13d	              0x55	                                push rbp	        94	list.c	FUNCTION_5
0x13e	          0x4889e5	                            mov rbp, rsp	        94	list.c	FUNCTION_5
0x141	        0x4883ec20	                           sub rsp, 0x20	        94	list.c	FUNCTION_5
0x145	        0x48897de8	             mov qword [rbp - 0x18], rdi	        94	list.c	FUNCTION_5
0x149	      0xe800000000	                          call 0x400018e	        95	list.c	FUNCTION_5	CALL_1
0x14e	        0x488945f8	                mov qword [rbp - 8], rax	        95	list.c	FUNCTION_5	CALL_1
0x152	      0x48837df800	                  cmp qword [rbp - 8], 0	        97	list.c	FUNCTION_5	IF_1
0x157	            0x7507	                           jne 0x40001a0	        97	list.c	FUNCTION_5	IF_1
0x159	      0xb800000000	                              mov eax, 0	        98	list.c	FUNCTION_5	IF_1
0x15e	            0xeb20	                           jmp 0x40001c0	        98	list.c	FUNCTION_5	IF_1
0x160	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       100	list.c	FUNCTION_5
0x164	        0xc6400400	                   mov byte [rax + 4], 0	       100	list.c	FUNCTION_5
0x168	        0x488b55f8	                mov rdx, qword [rbp - 8]	       101	list.c	FUNCTION_5	CALL_2
0x16c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       101	list.c	FUNCTION_5	CALL_2
0x170	          0x4889d6	                            mov rsi, rdx	       101	list.c	FUNCTION_5	CALL_2
0x173	          0x4889c7	                            mov rdi, rax	       101	list.c	FUNCTION_5	CALL_2
0x176	      0xe800000000	                          call 0x40001bb	       101	list.c	FUNCTION_5	CALL_2
0x17b	      0xb801000000	                              mov eax, 1	       102	list.c	FUNCTION_5
0x180	              0xc9	                                   leave	       103	list.c	FUNCTION_5
0x181	              0xc3	                                     ret	       103	list.c	FUNCTION_5
list_insert	DO,0:CALL,1:SWITCH,0:ELSE,2:FOR,0:functions,0:WHILE,0:IF,2	51
0xad3	              0x55	                                push rbp	       538	list.c	FUNCTION_28
0xad4	          0x4889e5	                            mov rbp, rsp	       538	list.c	FUNCTION_28
0xad7	        0x4883ec18	                           sub rsp, 0x18	       538	list.c	FUNCTION_28
0xadb	        0x48897df8	                mov qword [rbp - 8], rdi	       538	list.c	FUNCTION_28
0xadf	        0x488975f0	             mov qword [rbp - 0x10], rsi	       538	list.c	FUNCTION_28
0xae3	        0x488955e8	             mov qword [rbp - 0x18], rdx	       538	list.c	FUNCTION_28
0xae7	      0x48837de800	               cmp qword [rbp - 0x18], 0	       539	list.c	FUNCTION_28	IF_1
0xaec	            0x7515	                           jne 0x4000b43	       539	list.c	FUNCTION_28	IF_1
0xaee	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       541	list.c	FUNCTION_28	CALL_1
0xaf2	        0x488b45f8	                mov rax, qword [rbp - 8]	       541	list.c	FUNCTION_28	CALL_1
0xaf6	          0x4889d6	                            mov rsi, rdx	       541	list.c	FUNCTION_28	CALL_1
0xaf9	          0x4889c7	                            mov rdi, rax	       541	list.c	FUNCTION_28	CALL_1
0xafc	      0xe800000000	                          call 0x4000b41	       541	list.c	FUNCTION_28	CALL_1
0xb01	            0xeb7e	                           jmp 0x4000bc1	       560	list.c	FUNCTION_28
0xb03	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       545	list.c	FUNCTION_28	ELSE_1
0xb07	        0x488b5008	                mov rdx, qword [rax + 8]	       545	list.c	FUNCTION_28	ELSE_1
0xb0b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       545	list.c	FUNCTION_28	ELSE_1
0xb0f	        0x48895008	                mov qword [rax + 8], rdx	       545	list.c	FUNCTION_28	ELSE_1
0xb13	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       546	list.c	FUNCTION_28	ELSE_1
0xb17	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       546	list.c	FUNCTION_28	ELSE_1
0xb1b	          0x488910	                    mov qword [rax], rdx	       546	list.c	FUNCTION_28	ELSE_1
0xb1e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       547	list.c	FUNCTION_28	ELSE_1	IF_2
0xb22	        0x488b4008	                mov rax, qword [rax + 8]	       547	list.c	FUNCTION_28	ELSE_1	IF_2
0xb26	          0x4885c0	                           test rax, rax	       547	list.c	FUNCTION_28	ELSE_1	IF_2
0xb29	            0x751e	                           jne 0x4000b89	       547	list.c	FUNCTION_28	ELSE_1	IF_2
0xb2b	        0x488b45f8	                mov rax, qword [rbp - 8]	       549	list.c	FUNCTION_28	ELSE_1	IF_2
0xb2f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       549	list.c	FUNCTION_28	ELSE_1	IF_2
0xb33	          0x488910	                    mov qword [rax], rdx	       549	list.c	FUNCTION_28	ELSE_1	IF_2
0xb36	        0x488b45f8	                mov rax, qword [rbp - 8]	       550	list.c	FUNCTION_28	ELSE_1	IF_2
0xb3a	          0x8b4020	            mov eax, dword [rax + 0x20] 	       550	list.c	FUNCTION_28	ELSE_1	IF_2
0xb3d	          0x8d5001	                      lea edx, [rax + 1]	       550	list.c	FUNCTION_28	ELSE_1	IF_2
0xb40	        0x488b45f8	                mov rax, qword [rbp - 8]	       550	list.c	FUNCTION_28	ELSE_1	IF_2
0xb44	          0x895020	             mov dword [rax + 0x20], edx	       550	list.c	FUNCTION_28	ELSE_1	IF_2
0xb47	            0xeb1b	                           jmp 0x4000ba4	       550	list.c	FUNCTION_28	ELSE_1	IF_2
0xb49	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       554	list.c	FUNCTION_28	ELSE_1	ELSE_2
0xb4d	        0x488b4008	                mov rax, qword [rax + 8]	       554	list.c	FUNCTION_28	ELSE_1	ELSE_2
0xb51	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       554	list.c	FUNCTION_28	ELSE_1	ELSE_2
0xb55	          0x488910	                    mov qword [rax], rdx	       554	list.c	FUNCTION_28	ELSE_1	ELSE_2
0xb58	        0x488b45f8	                mov rax, qword [rbp - 8]	       555	list.c	FUNCTION_28	ELSE_1	ELSE_2
0xb5c	    0x48c740280000	               mov qword [rax + 0x28], 0	       555	list.c	FUNCTION_28	ELSE_1	ELSE_2
0xb64	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       557	list.c	FUNCTION_28	ELSE_1
0xb68	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       557	list.c	FUNCTION_28	ELSE_1
0xb6c	        0x48895008	                mov qword [rax + 8], rdx	       557	list.c	FUNCTION_28	ELSE_1
0xb70	        0x488b45f8	                mov rax, qword [rbp - 8]	       558	list.c	FUNCTION_28	ELSE_1
0xb74	          0x8b4014	            mov eax, dword [rax + 0x14] 	       558	list.c	FUNCTION_28	ELSE_1
0xb77	          0x8d5001	                      lea edx, [rax + 1]	       558	list.c	FUNCTION_28	ELSE_1
0xb7a	        0x488b45f8	                mov rax, qword [rbp - 8]	       558	list.c	FUNCTION_28	ELSE_1
0xb7e	          0x895014	             mov dword [rax + 0x14], edx	       558	list.c	FUNCTION_28	ELSE_1
0xb81	              0x90	                                     nop	       560	list.c	FUNCTION_28
0xb82	              0xc9	                                   leave	       560	list.c	FUNCTION_28
0xb83	              0xc3	                                     ret	       560	list.c	FUNCTION_28
list_fix_watch	DO,0:CALL,0:SWITCH,0:ELSE,0:FOR,1:functions,0:WHILE,0:IF,1	24
0x8e	              0x55	                                push rbp	        58	list.c	FUNCTION_3
0x8f	          0x4889e5	                            mov rbp, rsp	        58	list.c	FUNCTION_3
0x92	        0x48897de8	             mov qword [rbp - 0x18], rdi	        58	list.c	FUNCTION_3
0x96	        0x488975e0	             mov qword [rbp - 0x20], rsi	        58	list.c	FUNCTION_3
0x9a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        61	list.c	FUNCTION_3	FOR_1
0x9e	        0x488b4018	            mov rax, qword [rax + 0x18] 	        61	list.c	FUNCTION_3	FOR_1
0xa2	        0x488945f8	                mov qword [rbp - 8], rax	        61	list.c	FUNCTION_3	FOR_1
0xa6	            0xeb27	                           jmp 0x400010f	        61	list.c	FUNCTION_3	FOR_1
0xa8	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	list.c	FUNCTION_3	FOR_1	IF_1
0xac	          0x488b00	                    mov rax, qword [rax]	        62	list.c	FUNCTION_3	FOR_1	IF_1
0xaf	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	        62	list.c	FUNCTION_3	FOR_1	IF_1
0xb3	            0x750e	                           jne 0x4000103	        62	list.c	FUNCTION_3	FOR_1	IF_1
0xb5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        63	list.c	FUNCTION_3	FOR_1	IF_1
0xb9	          0x488b10	                    mov rdx, qword [rax]	        63	list.c	FUNCTION_3	FOR_1	IF_1
0xbc	        0x488b45f8	                mov rax, qword [rbp - 8]	        63	list.c	FUNCTION_3	FOR_1	IF_1
0xc0	          0x488910	                    mov qword [rax], rdx	        63	list.c	FUNCTION_3	FOR_1	IF_1
0xc3	        0x488b45f8	                mov rax, qword [rbp - 8]	        61	list.c	FUNCTION_3	FOR_1
0xc7	        0x488b4008	                mov rax, qword [rax + 8]	        61	list.c	FUNCTION_3	FOR_1
0xcb	        0x488945f8	                mov qword [rbp - 8], rax	        61	list.c	FUNCTION_3	FOR_1
0xcf	      0x48837df800	                  cmp qword [rbp - 8], 0	        61	list.c	FUNCTION_3	FOR_1
0xd4	            0x75d2	                           jne 0x40000e8	        61	list.c	FUNCTION_3	FOR_1
0xd6	              0x90	                                     nop	        64	list.c	FUNCTION_3
0xd7	              0x5d	                                 pop rbp	        64	list.c	FUNCTION_3
0xd8	              0xc3	                                     ret	        64	list.c	FUNCTION_3
list_join	DO,0:CALL,4:SWITCH,0:ELSE,0:FOR,1:functions,0:WHILE,0:IF,2	63
0x1202	              0x55	                                push rbp	       804	list.c	FUNCTION_35
0x1203	          0x4889e5	                            mov rbp, rsp	       804	list.c	FUNCTION_35
0x1206	        0x4883ec60	                           sub rsp, 0x60	       804	list.c	FUNCTION_35
0x120a	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       804	list.c	FUNCTION_35
0x120e	        0x488975c0	             mov qword [rbp - 0x40], rsi	       804	list.c	FUNCTION_35
0x1212	        0x488955b8	             mov qword [rbp - 0x48], rdx	       804	list.c	FUNCTION_35
0x1216	          0x894db4	             mov dword [rbp - 0x4c], ecx	       804	list.c	FUNCTION_35
0x1219	        0x448945b0	             mov dword [rbp - 0x50], r8d	       804	list.c	FUNCTION_35
0x121d	        0x44894dac	             mov dword [rbp - 0x54], r9d	       804	list.c	FUNCTION_35
0x1221	    0x64488b042528	                mov rax, qword fs:[0x28]	       804	list.c	FUNCTION_35
0x122a	        0x488945f8	                mov qword [rbp - 8], rax	       804	list.c	FUNCTION_35
0x122e	            0x31c0	                            xor eax, eax	       804	list.c	FUNCTION_35
0x1230	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       810	list.c	FUNCTION_35	IF_1
0x1234	          0x8b4014	            mov eax, dword [rax + 0x14] 	       810	list.c	FUNCTION_35	IF_1
0x1237	            0x85c0	                           test eax, eax	       810	list.c	FUNCTION_35	IF_1
0x1239	            0x7f0a	                            jg 0x4001285	       810	list.c	FUNCTION_35	IF_1
0x123b	      0xb801000000	                              mov eax, 1	       811	list.c	FUNCTION_35	IF_1
0x1240	      0xe991000000	                           jmp 0x4001316	       811	list.c	FUNCTION_35	IF_1
0x1245	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       812	list.c	FUNCTION_35	CALL_1
0x1249	          0x8b5014	            mov edx, dword [rax + 0x14] 	       812	list.c	FUNCTION_35	CALL_1
0x124c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       812	list.c	FUNCTION_35	CALL_1
0x1250	      0xbe10000000	                           mov esi, 0x10	       812	list.c	FUNCTION_35	CALL_1
0x1255	          0x4889c7	                            mov rdi, rax	       812	list.c	FUNCTION_35	CALL_1
0x1258	      0xe800000000	                          call 0x400129d	       812	list.c	FUNCTION_35	CALL_1
0x125d	        0x448b4dac	             mov r9d, dword [rbp - 0x54]	       813	list.c	FUNCTION_35	CALL_2
0x1261	        0x448b45b0	             mov r8d, dword [rbp - 0x50]	       813	list.c	FUNCTION_35	CALL_2
0x1265	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	       813	list.c	FUNCTION_35	CALL_2
0x1268	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       813	list.c	FUNCTION_35	CALL_2
0x126c	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	       813	list.c	FUNCTION_35	CALL_2
0x1270	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       813	list.c	FUNCTION_35	CALL_2
0x1274	        0x4883ec08	                              sub rsp, 8	       813	list.c	FUNCTION_35	CALL_2
0x1278	        0x488d7de0	                   lea rdi, [rbp - 0x20]	       813	list.c	FUNCTION_35	CALL_2
0x127c	              0x57	                                push rdi	       813	list.c	FUNCTION_35	CALL_2
0x127d	          0x4889c7	                            mov rdi, rax	       813	list.c	FUNCTION_35	CALL_2
0x1280	      0xe8d1fcffff	                call sym.list_join_inner	       813	list.c	FUNCTION_35	CALL_2
0x1285	        0x4883c410	                           add rsp, 0x10	       813	list.c	FUNCTION_35	CALL_2
0x1289	          0x8945d4	             mov dword [rbp - 0x2c], eax	       813	list.c	FUNCTION_35	CALL_2
0x128c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       817	list.c	FUNCTION_35	IF_2
0x1290	          0x4885c0	                           test rax, rax	       817	list.c	FUNCTION_35	IF_2
0x1293	            0x743e	                            je 0x4001313	       817	list.c	FUNCTION_35	IF_2
0x1295	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       819	list.c	FUNCTION_35	IF_2
0x1299	        0x488945d8	             mov qword [rbp - 0x28], rax	       819	list.c	FUNCTION_35	IF_2
0x129d	    0xc745d0000000	               mov dword [rbp - 0x30], 0	       820	list.c	FUNCTION_35	IF_2	FOR_1
0x12a4	            0xeb19	                           jmp 0x40012ff	       820	list.c	FUNCTION_35	IF_2	FOR_1
0x12a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       822	list.c	FUNCTION_35	IF_2	FOR_1	CALL_3
0x12aa	        0x488b4008	                mov rax, qword [rax + 8]	       822	list.c	FUNCTION_35	IF_2	FOR_1	CALL_3
0x12ae	          0x4889c7	                            mov rdi, rax	       822	list.c	FUNCTION_35	IF_2	FOR_1	CALL_3
0x12b1	      0xe800000000	                          call 0x40012f6	       822	list.c	FUNCTION_35	IF_2	FOR_1	CALL_3
0x12b6	      0x488345d810	            add qword [rbp - 0x28], 0x10	       823	list.c	FUNCTION_35	IF_2	FOR_1
0x12bb	        0x8345d001	               add dword [rbp - 0x30], 1	       820	list.c	FUNCTION_35	IF_2	FOR_1
0x12bf	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       820	list.c	FUNCTION_35	IF_2	FOR_1
0x12c2	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	       820	list.c	FUNCTION_35	IF_2	FOR_1
0x12c5	            0x7fdf	                            jg 0x40012e6	       820	list.c	FUNCTION_35	IF_2	FOR_1
0x12c7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       825	list.c	FUNCTION_35	IF_2	CALL_4
0x12cb	          0x4889c7	                            mov rdi, rax	       825	list.c	FUNCTION_35	IF_2	CALL_4
0x12ce	      0xe800000000	                          call 0x4001313	       825	list.c	FUNCTION_35	IF_2	CALL_4
0x12d3	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       828	list.c	FUNCTION_35
0x12d6	        0x488b4df8	                mov rcx, qword [rbp - 8]	       829	list.c	FUNCTION_35
0x12da	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       829	list.c	FUNCTION_35
0x12e3	            0x7405	                            je 0x400132a	       829	list.c	FUNCTION_35
0x12e5	      0xe800000000	                          call 0x400132a	       829	list.c	FUNCTION_35
0x12ea	              0xc9	                                   leave	       829	list.c	FUNCTION_35
0x12eb	              0xc3	                                     ret	       829	list.c	FUNCTION_35
listitem_alloc	DO,0:CALL,1:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,0	6
0x3bc	              0x55	                                push rbp	       219	list.c	FUNCTION_13
0x3bd	          0x4889e5	                            mov rbp, rsp	       219	list.c	FUNCTION_13
0x3c0	      0xbf20000000	                           mov edi, 0x20	       220	list.c	FUNCTION_13	CALL_1
0x3c5	      0xe800000000	                          call 0x400040a	       220	list.c	FUNCTION_13	CALL_1
0x3ca	              0x5d	                                 pop rbp	       221	list.c	FUNCTION_13
0x3cb	              0xc3	                                     ret	       221	list.c	FUNCTION_13
list_join_inner	DO,0:CALL,10:SWITCH,0:ELSE,2:FOR,2:functions,0:WHILE,0:IF,7	167
0xf56	              0x55	                                push rbp	       728	list.c	FUNCTION_34
0xf57	          0x4889e5	                            mov rbp, rsp	       728	list.c	FUNCTION_34
0xf5a	    0x4881ecb00000	                           sub rsp, 0xb0	       728	list.c	FUNCTION_34
0xf61	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       728	list.c	FUNCTION_34
0xf68	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       728	list.c	FUNCTION_34
0xf6f	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	       728	list.c	FUNCTION_34
0xf76	    0x898d64ffffff	             mov dword [rbp - 0x9c], ecx	       728	list.c	FUNCTION_34
0xf7c	    0x44898560ffff	             mov dword [rbp - 0xa0], r8d	       728	list.c	FUNCTION_34
0xf83	    0x44898d5cffff	             mov dword [rbp - 0xa4], r9d	       728	list.c	FUNCTION_34
0xf8a	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       728	list.c	FUNCTION_34
0xf8e	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       728	list.c	FUNCTION_34
0xf95	    0x64488b042528	                mov rax, qword fs:[0x28]	       728	list.c	FUNCTION_34
0xf9e	        0x488945f8	                mov qword [rbp - 8], rax	       728	list.c	FUNCTION_34
0xfa2	            0x31c0	                            xor eax, eax	       728	list.c	FUNCTION_34
0xfa4	    0xc74584000000	               mov dword [rbp - 0x7c], 0	       732	list.c	FUNCTION_34
0xfab	    0xc74588010000	               mov dword [rbp - 0x78], 1	       733	list.c	FUNCTION_34
0xfb2	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       740	list.c	FUNCTION_34	FOR_1
0xfb9	          0x488b00	                    mov rax, qword [rax]	       740	list.c	FUNCTION_34	FOR_1
0xfbc	        0x48894598	             mov qword [rbp - 0x68], rax	       740	list.c	FUNCTION_34	FOR_1
0xfc0	      0xe91d010000	                           jmp 0x4001122	       740	list.c	FUNCTION_34	FOR_1
0xfc5	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	       742	list.c	FUNCTION_34	FOR_1	CALL_1
0xfcc	           0xf94c0	                                 sete al	       742	list.c	FUNCTION_34	FOR_1	CALL_1
0xfcf	           0xfb6f0	                           movzx esi, al	       742	list.c	FUNCTION_34	FOR_1	CALL_1
0xfd2	        0x488b4598	             mov rax, qword [rbp - 0x68]	       742	list.c	FUNCTION_34	FOR_1	CALL_1
0xfd6	        0x488d7810	                   lea rdi, [rax + 0x10]	       742	list.c	FUNCTION_34	FOR_1	CALL_1
0xfda	    0x448b8d60ffff	             mov r9d, dword [rbp - 0xa0]	       742	list.c	FUNCTION_34	FOR_1	CALL_1
0xfe1	    0x448b8564ffff	             mov r8d, dword [rbp - 0x9c]	       742	list.c	FUNCTION_34	FOR_1	CALL_1
0xfe8	    0x8b8d5cffffff	             mov ecx, dword [rbp - 0xa4]	       742	list.c	FUNCTION_34	FOR_1	CALL_1
0xfee	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       742	list.c	FUNCTION_34	FOR_1	CALL_1
0xff2	        0x488d4590	                   lea rax, [rbp - 0x70]	       742	list.c	FUNCTION_34	FOR_1	CALL_1
0xff6	        0x4883ec08	                              sub rsp, 8	       742	list.c	FUNCTION_34	FOR_1	CALL_1
0xffa	              0x56	                                push rsi	       742	list.c	FUNCTION_34	FOR_1	CALL_1
0xffb	          0x4889c6	                            mov rsi, rax	       742	list.c	FUNCTION_34	FOR_1	CALL_1
0xffe	      0xe800000000	                          call 0x4001043	       742	list.c	FUNCTION_34	FOR_1	CALL_1
0x1003	        0x4883c410	                           add rsp, 0x10	       742	list.c	FUNCTION_34	FOR_1	CALL_1
0x1007	        0x488945a0	             mov qword [rbp - 0x60], rax	       742	list.c	FUNCTION_34	FOR_1	CALL_1
0x100b	      0x48837da000	               cmp qword [rbp - 0x60], 0	       744	list.c	FUNCTION_34	FOR_1	IF_1
0x1010	            0x750a	                           jne 0x400105c	       744	list.c	FUNCTION_34	FOR_1	IF_1
0x1012	      0xb800000000	                              mov eax, 0	       745	list.c	FUNCTION_34	FOR_1	IF_1
0x1017	      0xe9d0010000	                           jmp 0x400122c	       745	list.c	FUNCTION_34	FOR_1	IF_1
0x101c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       747	list.c	FUNCTION_34	FOR_1	CALL_2
0x1020	          0x4889c7	                            mov rdi, rax	       747	list.c	FUNCTION_34	FOR_1	CALL_2
0x1023	      0xe800000000	                          call 0x4001068	       747	list.c	FUNCTION_34	FOR_1	CALL_2
0x1028	          0x89458c	             mov dword [rbp - 0x74], eax	       747	list.c	FUNCTION_34	FOR_1	CALL_2
0x102b	          0x8b458c	             mov eax, dword [rbp - 0x74]	       748	list.c	FUNCTION_34	FOR_1
0x102e	           0x14584	             add dword [rbp - 0x7c], eax	       748	list.c	FUNCTION_34	FOR_1
0x1031	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       750	list.c	FUNCTION_34	FOR_1	CALL_3
0x1038	      0xbe01000000	                              mov esi, 1	       750	list.c	FUNCTION_34	FOR_1	CALL_3
0x103d	          0x4889c7	                            mov rdi, rax	       750	list.c	FUNCTION_34	FOR_1	CALL_3
0x1040	      0xe800000000	                          call 0x4001085	       750	list.c	FUNCTION_34	FOR_1	CALL_3
0x1045	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       751	list.c	FUNCTION_34	FOR_1
0x104c	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       751	list.c	FUNCTION_34	FOR_1
0x1050	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       751	list.c	FUNCTION_34	FOR_1
0x1057	            0x8b00	                    mov eax, dword [rax]	       751	list.c	FUNCTION_34	FOR_1
0x1059	          0x8d4801	                      lea ecx, [rax + 1]	       751	list.c	FUNCTION_34	FOR_1
0x105c	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	       751	list.c	FUNCTION_34	FOR_1
0x1063	            0x890a	                    mov dword [rdx], ecx	       751	list.c	FUNCTION_34	FOR_1
0x1065	            0x4898	                                    cdqe	       751	list.c	FUNCTION_34	FOR_1
0x1067	        0x48c1e004	                              shl rax, 4	       751	list.c	FUNCTION_34	FOR_1
0x106b	          0x4801f0	                            add rax, rsi	       751	list.c	FUNCTION_34	FOR_1
0x106e	        0x488945a8	             mov qword [rbp - 0x58], rax	       751	list.c	FUNCTION_34	FOR_1
0x1072	        0x488b4590	             mov rax, qword [rbp - 0x70]	       752	list.c	FUNCTION_34	FOR_1	IF_2
0x1076	          0x4885c0	                           test rax, rax	       752	list.c	FUNCTION_34	FOR_1	IF_2
0x1079	            0x750a	                           jne 0x40010c5	       752	list.c	FUNCTION_34	FOR_1	IF_2
0x107b	        0x488d45b0	                   lea rax, [rbp - 0x50]	       752	list.c	FUNCTION_34	FOR_1	IF_2
0x107f	        0x483945a0	            cmp qword [rbp - 0x60], rax 	       752	list.c	FUNCTION_34	FOR_1	IF_2
0x1083	            0x7419	                            je 0x40010de	       752	list.c	FUNCTION_34	FOR_1	IF_2
0x1085	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       754	list.c	FUNCTION_34	FOR_1	IF_2
0x1089	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       754	list.c	FUNCTION_34	FOR_1	IF_2
0x108d	          0x488910	                    mov qword [rax], rdx	       754	list.c	FUNCTION_34	FOR_1	IF_2
0x1090	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       755	list.c	FUNCTION_34	FOR_1	IF_2
0x1094	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       755	list.c	FUNCTION_34	FOR_1	IF_2
0x1098	        0x48895008	                mov qword [rax + 8], rdx	       755	list.c	FUNCTION_34	FOR_1	IF_2
0x109c	            0xeb2a	                           jmp 0x4001108	       755	list.c	FUNCTION_34	FOR_1	IF_2
0x109e	          0x8b558c	             mov edx, dword [rbp - 0x74]	       759	list.c	FUNCTION_34	FOR_1	ELSE_1	CALL_4
0x10a1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       759	list.c	FUNCTION_34	FOR_1	ELSE_1	CALL_4
0x10a5	            0x89d6	                            mov esi, edx	       759	list.c	FUNCTION_34	FOR_1	ELSE_1	CALL_4
0x10a7	          0x4889c7	                            mov rdi, rax	       759	list.c	FUNCTION_34	FOR_1	ELSE_1	CALL_4
0x10aa	      0xe800000000	                          call 0x40010ef	       759	list.c	FUNCTION_34	FOR_1	ELSE_1	CALL_4
0x10af	          0x4889c2	                            mov rdx, rax	       759	list.c	FUNCTION_34	FOR_1	ELSE_1	CALL_4
0x10b2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       759	list.c	FUNCTION_34	FOR_1	ELSE_1	CALL_4
0x10b6	          0x488910	                    mov qword [rax], rdx	       759	list.c	FUNCTION_34	FOR_1	ELSE_1	CALL_4
0x10b9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       760	list.c	FUNCTION_34	FOR_1	ELSE_1
0x10bd	          0x488b10	                    mov rdx, qword [rax]	       760	list.c	FUNCTION_34	FOR_1	ELSE_1
0x10c0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       760	list.c	FUNCTION_34	FOR_1	ELSE_1
0x10c4	        0x48895008	                mov qword [rax + 8], rdx	       760	list.c	FUNCTION_34	FOR_1	ELSE_1
0x10c8	      0xe800000000	                          call 0x400110d	       763	list.c	FUNCTION_34	FOR_1	CALL_5
0x10cd	    0x8b0500000000	            mov eax, dword [0x04001113] 	       764	list.c	FUNCTION_34	FOR_1	IF_3
0x10d3	            0x85c0	                           test eax, eax	       764	list.c	FUNCTION_34	FOR_1	IF_3
0x10d5	            0x7522	                           jne 0x4001139	       764	list.c	FUNCTION_34	FOR_1	IF_3
0x10d7	        0x488b4598	             mov rax, qword [rbp - 0x68]	       740	list.c	FUNCTION_34	FOR_1
0x10db	          0x488b00	                    mov rax, qword [rax]	       740	list.c	FUNCTION_34	FOR_1
0x10de	        0x48894598	             mov qword [rbp - 0x68], rax	       740	list.c	FUNCTION_34	FOR_1
0x10e2	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       740	list.c	FUNCTION_34	FOR_1
0x10e7	            0x7411	                            je 0x400113a	       740	list.c	FUNCTION_34	FOR_1
0x10e9	    0x8b0500000000	            mov eax, dword [0x0400112f] 	       740	list.c	FUNCTION_34	FOR_1
0x10ef	            0x85c0	                           test eax, eax	       740	list.c	FUNCTION_34	FOR_1
0x10f1	     0xf84cefeffff	                            je 0x4001005	       740	list.c	FUNCTION_34	FOR_1
0x10f7	            0xeb01	                           jmp 0x400113a	       740	list.c	FUNCTION_34	FOR_1
0x10f9	              0x90	                                     nop	       765	list.c	FUNCTION_34	FOR_1	IF_3
0x10fa	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       770	list.c	FUNCTION_34	IF_4
0x1101	            0x8b00	                    mov eax, dword [rax]	       770	list.c	FUNCTION_34	IF_4
0x1103	          0x83f801	                              cmp eax, 1	       770	list.c	FUNCTION_34	IF_4
0x1106	            0x7e23	                           jle 0x400116b	       770	list.c	FUNCTION_34	IF_4
0x1108	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       771	list.c	FUNCTION_34	CALL_6
0x110f	          0x4889c7	                            mov rdi, rax	       771	list.c	FUNCTION_34	CALL_6
0x1112	      0xe800000000	                          call 0x4001157	       771	list.c	FUNCTION_34	CALL_6
0x1117	            0x89c2	                            mov edx, eax	       771	list.c	FUNCTION_34	CALL_6
0x1119	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       771	list.c	FUNCTION_34	CALL_6
0x1120	            0x8b00	                    mov eax, dword [rax]	       771	list.c	FUNCTION_34	CALL_6
0x1122	          0x83e801	                              sub eax, 1	       771	list.c	FUNCTION_34	CALL_6
0x1125	           0xfafc2	                           imul eax, edx	       771	list.c	FUNCTION_34	CALL_6
0x1128	           0x14584	             add dword [rbp - 0x7c], eax	       771	list.c	FUNCTION_34	CALL_6
0x112b	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       772	list.c	FUNCTION_34	IF_5	CALL_7
0x112e	          0x8d5002	                      lea edx, [rax + 2]	       772	list.c	FUNCTION_34	IF_5	CALL_7
0x1131	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       772	list.c	FUNCTION_34	IF_5	CALL_7
0x1138	            0x89d6	                            mov esi, edx	       772	list.c	FUNCTION_34	IF_5	CALL_7
0x113a	          0x4889c7	                            mov rdi, rax	       772	list.c	FUNCTION_34	IF_5	CALL_7
0x113d	      0xe800000000	                          call 0x4001182	       772	list.c	FUNCTION_34	IF_5	CALL_7
0x1142	            0x85c0	                           test eax, eax	       772	list.c	FUNCTION_34	IF_5	CALL_7
0x1144	            0x750a	                           jne 0x4001190	       772	list.c	FUNCTION_34	IF_5	CALL_7
0x1146	      0xb800000000	                              mov eax, 0	       773	list.c	FUNCTION_34	IF_5
0x114b	      0xe99c000000	                           jmp 0x400122c	       773	list.c	FUNCTION_34	IF_5
0x1150	    0xc74580000000	               mov dword [rbp - 0x80], 0	       775	list.c	FUNCTION_34	FOR_2
0x1157	            0xeb72	                           jmp 0x400120b	       775	list.c	FUNCTION_34	FOR_2
0x1159	        0x837d8800	               cmp dword [rbp - 0x78], 0	       777	list.c	FUNCTION_34	FOR_2	IF_6
0x115d	            0x7409	                            je 0x40011a8	       777	list.c	FUNCTION_34	FOR_2	IF_6
0x115f	    0xc74588000000	               mov dword [rbp - 0x78], 0	       778	list.c	FUNCTION_34	FOR_2	IF_6
0x1166	            0xeb19	                           jmp 0x40011c1	       778	list.c	FUNCTION_34	FOR_2	IF_6
0x1168	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       780	list.c	FUNCTION_34	FOR_2	CALL_8
0x116f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       780	list.c	FUNCTION_34	FOR_2	CALL_8
0x1176	          0x4889d6	                            mov rsi, rdx	       780	list.c	FUNCTION_34	FOR_2	CALL_8
0x1179	          0x4889c7	                            mov rdi, rax	       780	list.c	FUNCTION_34	FOR_2	CALL_8
0x117c	      0xe800000000	                          call 0x40011c1	       780	list.c	FUNCTION_34	FOR_2	CALL_8
0x1181	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       781	list.c	FUNCTION_34	FOR_2
0x1188	        0x488b4010	            mov rax, qword [rax + 0x10] 	       781	list.c	FUNCTION_34	FOR_2
0x118c	          0x8b5580	             mov edx, dword [rbp - 0x80]	       781	list.c	FUNCTION_34	FOR_2
0x118f	          0x4863d2	                         movsxd rdx, edx	       781	list.c	FUNCTION_34	FOR_2
0x1192	        0x48c1e204	                              shl rdx, 4	       781	list.c	FUNCTION_34	FOR_2
0x1196	          0x4801d0	                            add rax, rdx	       781	list.c	FUNCTION_34	FOR_2
0x1199	        0x488945a8	             mov qword [rbp - 0x58], rax	       781	list.c	FUNCTION_34	FOR_2
0x119d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       783	list.c	FUNCTION_34	FOR_2	IF_7
0x11a1	          0x488b00	                    mov rax, qword [rax]	       783	list.c	FUNCTION_34	FOR_2	IF_7
0x11a4	          0x4885c0	                           test rax, rax	       783	list.c	FUNCTION_34	FOR_2	IF_7
0x11a7	            0x7419	                            je 0x4001202	       783	list.c	FUNCTION_34	FOR_2	IF_7
0x11a9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       784	list.c	FUNCTION_34	FOR_2	CALL_9
0x11ad	          0x488b10	                    mov rdx, qword [rax]	       784	list.c	FUNCTION_34	FOR_2	CALL_9
0x11b0	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       784	list.c	FUNCTION_34	FOR_2	CALL_9
0x11b7	          0x4889d6	                            mov rsi, rdx	       784	list.c	FUNCTION_34	FOR_2	CALL_9
0x11ba	          0x4889c7	                            mov rdi, rax	       784	list.c	FUNCTION_34	FOR_2	CALL_9
0x11bd	      0xe800000000	                          call 0x4001202	       784	list.c	FUNCTION_34	FOR_2	CALL_9
0x11c2	      0xe800000000	                          call 0x4001207	       785	list.c	FUNCTION_34	FOR_2	CALL_10
0x11c7	        0x83458001	               add dword [rbp - 0x80], 1	       775	list.c	FUNCTION_34	FOR_2
0x11cb	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       775	list.c	FUNCTION_34	FOR_2
0x11d2	            0x8b00	                    mov eax, dword [rax]	       775	list.c	FUNCTION_34	FOR_2
0x11d4	          0x3b4580	             cmp eax, dword [rbp - 0x80]	       775	list.c	FUNCTION_34	FOR_2
0x11d7	            0x7e0e	                           jle 0x4001227	       775	list.c	FUNCTION_34	FOR_2
0x11d9	    0x8b0500000000	            mov eax, dword [0x0400121f] 	       775	list.c	FUNCTION_34	FOR_2
0x11df	            0x85c0	                           test eax, eax	       775	list.c	FUNCTION_34	FOR_2
0x11e1	     0xf8472ffffff	                            je 0x4001199	       775	list.c	FUNCTION_34	FOR_2
0x11e7	      0xb801000000	                              mov eax, 1	       788	list.c	FUNCTION_34
0x11ec	        0x488b4df8	                mov rcx, qword [rbp - 8]	       789	list.c	FUNCTION_34
0x11f0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       789	list.c	FUNCTION_34
0x11f9	            0x7405	                            je 0x4001240	       789	list.c	FUNCTION_34
0x11fb	      0xe800000000	                          call 0x4001240	       789	list.c	FUNCTION_34
0x1200	              0xc9	                                   leave	       789	list.c	FUNCTION_34
0x1201	              0xc3	                                     ret	       789	list.c	FUNCTION_34
init_static_list	DO,0:CALL,1:SWITCH,0:ELSE,2:FOR,1:functions,0:WHILE,0:IF,2	59
0x15e1	              0x55	                                push rbp	       938	list.c	FUNCTION_38
0x15e2	          0x4889e5	                            mov rbp, rsp	       938	list.c	FUNCTION_38
0x15e5	        0x4883ec30	                           sub rsp, 0x30	       938	list.c	FUNCTION_38
0x15e9	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       938	list.c	FUNCTION_38
0x15ed	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       939	list.c	FUNCTION_38
0x15f1	        0x488945f0	             mov qword [rbp - 0x10], rax	       939	list.c	FUNCTION_38
0x15f5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       942	list.c	FUNCTION_38	CALL_1
0x15f9	      0xba98010000	                          mov edx, 0x198	       942	list.c	FUNCTION_38	CALL_1
0x15fe	      0xbe00000000	                              mov esi, 0	       942	list.c	FUNCTION_38	CALL_1
0x1603	          0x4889c7	                            mov rdi, rax	       942	list.c	FUNCTION_38	CALL_1
0x1606	      0xe800000000	                          call 0x400164b	       942	list.c	FUNCTION_38	CALL_1
0x160b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       943	list.c	FUNCTION_38
0x160f	        0x488d5058	                   lea rdx, [rax + 0x58]	       943	list.c	FUNCTION_38
0x1613	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       943	list.c	FUNCTION_38
0x1617	          0x488910	                    mov qword [rax], rdx	       943	list.c	FUNCTION_38
0x161a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       944	list.c	FUNCTION_38
0x161e	    0x488d90780100	                  lea rdx, [rax + 0x178]	       944	list.c	FUNCTION_38
0x1625	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       944	list.c	FUNCTION_38
0x1629	        0x48895008	                mov qword [rax + 8], rdx	       944	list.c	FUNCTION_38
0x162d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       945	list.c	FUNCTION_38
0x1631	    0xc740109f8601	        mov dword [rax + 0x10], 0x1869f 	       945	list.c	FUNCTION_38
0x1638	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       946	list.c	FUNCTION_38
0x163c	        0xc6404002	                mov byte [rax + 0x40], 2	       946	list.c	FUNCTION_38
0x1640	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       947	list.c	FUNCTION_38
0x1644	    0xc740140a0000	             mov dword [rax + 0x14], 0xa	       947	list.c	FUNCTION_38
0x164b	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       949	list.c	FUNCTION_38	FOR_1
0x1652	            0xeb66	                           jmp 0x40016fa	       949	list.c	FUNCTION_38	FOR_1
0x1654	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       951	list.c	FUNCTION_38	FOR_1
0x1657	            0x4898	                                    cdqe	       951	list.c	FUNCTION_38	FOR_1
0x1659	        0x48c1e005	                              shl rax, 5	       951	list.c	FUNCTION_38	FOR_1
0x165d	        0x488d5050	                   lea rdx, [rax + 0x50]	       951	list.c	FUNCTION_38	FOR_1
0x1661	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       951	list.c	FUNCTION_38	FOR_1
0x1665	          0x4801d0	                            add rax, rdx	       951	list.c	FUNCTION_38	FOR_1
0x1668	        0x4883c008	                              add rax, 8	       951	list.c	FUNCTION_38	FOR_1
0x166c	        0x488945f8	                mov qword [rbp - 8], rax	       951	list.c	FUNCTION_38	FOR_1
0x1670	        0x837dec00	               cmp dword [rbp - 0x14], 0	       953	list.c	FUNCTION_38	FOR_1	IF_1
0x1674	            0x750e	                           jne 0x40016c4	       953	list.c	FUNCTION_38	FOR_1	IF_1
0x1676	        0x488b45f8	                mov rax, qword [rbp - 8]	       954	list.c	FUNCTION_38	FOR_1	IF_1
0x167a	    0x48c740080000	                  mov qword [rax + 8], 0	       954	list.c	FUNCTION_38	FOR_1	IF_1
0x1682	            0xeb10	                           jmp 0x40016d4	       954	list.c	FUNCTION_38	FOR_1	IF_1
0x1684	        0x488b45f8	                mov rax, qword [rbp - 8]	       956	list.c	FUNCTION_38	FOR_1	ELSE_1
0x1688	        0x488d50e0	                   lea rdx, [rax - 0x20]	       956	list.c	FUNCTION_38	FOR_1	ELSE_1
0x168c	        0x488b45f8	                mov rax, qword [rbp - 8]	       956	list.c	FUNCTION_38	FOR_1	ELSE_1
0x1690	        0x48895008	                mov qword [rax + 8], rdx	       956	list.c	FUNCTION_38	FOR_1	ELSE_1
0x1694	        0x837dec09	               cmp dword [rbp - 0x14], 9	       957	list.c	FUNCTION_38	FOR_1	IF_2
0x1698	            0x750d	                           jne 0x40016e7	       957	list.c	FUNCTION_38	FOR_1	IF_2
0x169a	        0x488b45f8	                mov rax, qword [rbp - 8]	       958	list.c	FUNCTION_38	FOR_1	IF_2
0x169e	    0x48c700000000	                      mov qword [rax], 0	       958	list.c	FUNCTION_38	FOR_1	IF_2
0x16a5	            0xeb0f	                           jmp 0x40016f6	       958	list.c	FUNCTION_38	FOR_1	IF_2
0x16a7	        0x488b45f8	                mov rax, qword [rbp - 8]	       960	list.c	FUNCTION_38	FOR_1	ELSE_2
0x16ab	        0x488d5020	                   lea rdx, [rax + 0x20]	       960	list.c	FUNCTION_38	FOR_1	ELSE_2
0x16af	        0x488b45f8	                mov rax, qword [rbp - 8]	       960	list.c	FUNCTION_38	FOR_1	ELSE_2
0x16b3	          0x488910	                    mov qword [rax], rdx	       960	list.c	FUNCTION_38	FOR_1	ELSE_2
0x16b6	        0x8345ec01	               add dword [rbp - 0x14], 1	       949	list.c	FUNCTION_38	FOR_1
0x16ba	        0x837dec09	               cmp dword [rbp - 0x14], 9	       949	list.c	FUNCTION_38	FOR_1
0x16be	            0x7e94	                           jle 0x4001694	       949	list.c	FUNCTION_38	FOR_1
0x16c0	              0x90	                                     nop	       962	list.c	FUNCTION_38
0x16c1	              0xc9	                                   leave	       962	list.c	FUNCTION_38
0x16c2	              0xc3	                                     ret	       962	list.c	FUNCTION_38
list_free_items	DO,0:CALL,1:SWITCH,0:ELSE,0:FOR,1:functions,0:WHILE,0:IF,1	30
0x32b	              0x55	                                push rbp	       186	list.c	FUNCTION_11
0x32c	          0x4889e5	                            mov rbp, rsp	       186	list.c	FUNCTION_11
0x32f	        0x4883ec20	                           sub rsp, 0x20	       186	list.c	FUNCTION_11
0x333	          0x897dec	             mov dword [rbp - 0x14], edi	       186	list.c	FUNCTION_11
0x336	    0x488b05000000	            mov rax, qword [0x0400037d] 	       189	list.c	FUNCTION_11	FOR_1
0x33d	        0x488945f0	             mov qword [rbp - 0x10], rax	       189	list.c	FUNCTION_11	FOR_1
0x341	            0xeb3e	                           jmp 0x40003c1	       189	list.c	FUNCTION_11	FOR_1
0x343	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       191	list.c	FUNCTION_11	FOR_1
0x347	        0x488b4048	            mov rax, qword [rax + 0x48] 	       191	list.c	FUNCTION_11	FOR_1
0x34b	        0x488945f8	                mov qword [rbp - 8], rax	       191	list.c	FUNCTION_11	FOR_1
0x34f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x353	          0x8b4030	            mov eax, dword [rax + 0x30] 	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x356	          0x3345ec	             xor eax, dword [rbp - 0x14]	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x359	          0x83e0fe	                     and eax, 0xfffffffe	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x35c	            0x85c0	                           test eax, eax	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x35e	            0x7419	                            je 0x40003b9	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x360	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       193	list.c	FUNCTION_11	FOR_1	IF_1
0x364	        0x488b4018	            mov rax, qword [rax + 0x18] 	       193	list.c	FUNCTION_11	FOR_1	IF_1
0x368	          0x4885c0	                           test rax, rax	       193	list.c	FUNCTION_11	FOR_1	IF_1
0x36b	            0x750c	                           jne 0x40003b9	       193	list.c	FUNCTION_11	FOR_1	IF_1
0x36d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       198	list.c	FUNCTION_11	FOR_1	IF_1	CALL_1
0x371	          0x4889c7	                            mov rdi, rax	       198	list.c	FUNCTION_11	FOR_1	IF_1	CALL_1
0x374	      0xe844ffffff	                 call sym.list_free_list	       198	list.c	FUNCTION_11	FOR_1	IF_1	CALL_1
0x379	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	list.c	FUNCTION_11	FOR_1
0x37d	        0x488945f0	             mov qword [rbp - 0x10], rax	       189	list.c	FUNCTION_11	FOR_1
0x381	      0x48837df000	               cmp qword [rbp - 0x10], 0	       189	list.c	FUNCTION_11	FOR_1
0x386	            0x75bb	                           jne 0x4000383	       189	list.c	FUNCTION_11	FOR_1
0x388	              0x90	                                     nop	       201	list.c	FUNCTION_11
0x389	              0xc9	                                   leave	       201	list.c	FUNCTION_11
0x38a	              0xc3	                                     ret	       201	list.c	FUNCTION_11
list_alloc	DO,0:CALL,1:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,2	24
0xd9	              0x55	                                push rbp	        72	list.c	FUNCTION_4
0xda	          0x4889e5	                            mov rbp, rsp	        72	list.c	FUNCTION_4
0xdd	        0x4883ec10	                           sub rsp, 0x10	        72	list.c	FUNCTION_4
0xe1	      0xbf58000000	                           mov edi, 0x58	        75	list.c	FUNCTION_4	CALL_1
0xe6	      0xe800000000	                          call 0x400012b	        75	list.c	FUNCTION_4	CALL_1
0xeb	        0x488945f8	                mov qword [rbp - 8], rax	        75	list.c	FUNCTION_4	CALL_1
0xef	      0x48837df800	                  cmp qword [rbp - 8], 0	        76	list.c	FUNCTION_4	IF_1
0xf4	            0x7441	                            je 0x4000177	        76	list.c	FUNCTION_4	IF_1
0xf6	    0x488b05000000	            mov rax, qword [0x0400013d] 	        79	list.c	FUNCTION_4	IF_1	IF_2
0xfd	          0x4885c0	                           test rax, rax	        79	list.c	FUNCTION_4	IF_1	IF_2
0x100	            0x740f	                            je 0x4000151	        79	list.c	FUNCTION_4	IF_1	IF_2
0x102	    0x488b05000000	            mov rax, qword [0x04000149] 	        80	list.c	FUNCTION_4	IF_1	IF_2
0x109	        0x488b55f8	                mov rdx, qword [rbp - 8]	        80	list.c	FUNCTION_4	IF_1	IF_2
0x10d	        0x48895050	             mov qword [rax + 0x50], rdx	        80	list.c	FUNCTION_4	IF_1	IF_2
0x111	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	list.c	FUNCTION_4	IF_1
0x115	    0x48c740500000	               mov qword [rax + 0x50], 0	        81	list.c	FUNCTION_4	IF_1
0x11d	    0x488b15000000	            mov rdx, qword [0x04000164] 	        82	list.c	FUNCTION_4	IF_1
0x124	        0x488b45f8	                mov rax, qword [rbp - 8]	        82	list.c	FUNCTION_4	IF_1
0x128	        0x48895048	             mov qword [rax + 0x48], rdx	        82	list.c	FUNCTION_4	IF_1
0x12c	        0x488b45f8	                mov rax, qword [rbp - 8]	        83	list.c	FUNCTION_4	IF_1
0x130	    0x488905000000	            mov qword [0x04000177], rax 	        83	list.c	FUNCTION_4	IF_1
0x137	        0x488b45f8	                mov rax, qword [rbp - 8]	        85	list.c	FUNCTION_4
0x13b	              0xc9	                                   leave	        86	list.c	FUNCTION_4
0x13c	              0xc3	                                     ret	        86	list.c	FUNCTION_4
vimlist_remove	DO,0:CALL,1:SWITCH,0:ELSE,2:FOR,1:functions,0:WHILE,0:IF,3	62
0xdaa	              0x55	                                push rbp	       667	list.c	FUNCTION_32
0xdab	          0x4889e5	                            mov rbp, rsp	       667	list.c	FUNCTION_32
0xdae	        0x4883ec28	                           sub rsp, 0x28	       667	list.c	FUNCTION_32
0xdb2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       667	list.c	FUNCTION_32
0xdb6	        0x488975e0	             mov qword [rbp - 0x20], rsi	       667	list.c	FUNCTION_32
0xdba	        0x488955d8	             mov qword [rbp - 0x28], rdx	       667	list.c	FUNCTION_32
0xdbe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       671	list.c	FUNCTION_32	FOR_1
0xdc2	        0x488945f8	                mov qword [rbp - 8], rax	       671	list.c	FUNCTION_32	FOR_1
0xdc6	            0xeb39	                           jmp 0x4000e41	       671	list.c	FUNCTION_32	FOR_1
0xdc8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       673	list.c	FUNCTION_32	FOR_1
0xdcc	          0x8b4014	            mov eax, dword [rax + 0x14] 	       673	list.c	FUNCTION_32	FOR_1
0xdcf	          0x8d50ff	                      lea edx, [rax - 1]	       673	list.c	FUNCTION_32	FOR_1
0xdd2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       673	list.c	FUNCTION_32	FOR_1
0xdd6	          0x895014	             mov dword [rax + 0x14], edx	       673	list.c	FUNCTION_32	FOR_1
0xdd9	        0x488b55f8	                mov rdx, qword [rbp - 8]	       674	list.c	FUNCTION_32	FOR_1	CALL_1
0xddd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       674	list.c	FUNCTION_32	FOR_1	CALL_1
0xde1	          0x4889d6	                            mov rsi, rdx	       674	list.c	FUNCTION_32	FOR_1	CALL_1
0xde4	          0x4889c7	                            mov rdi, rax	       674	list.c	FUNCTION_32	FOR_1	CALL_1
0xde7	      0xe800000000	                          call 0x4000e2c	       674	list.c	FUNCTION_32	FOR_1	CALL_1
0xdec	        0x488b45f8	                mov rax, qword [rbp - 8]	       675	list.c	FUNCTION_32	FOR_1	IF_1
0xdf0	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       675	list.c	FUNCTION_32	FOR_1	IF_1
0xdf4	            0x7414	                            je 0x4000e4a	       675	list.c	FUNCTION_32	FOR_1	IF_1
0xdf6	        0x488b45f8	                mov rax, qword [rbp - 8]	       671	list.c	FUNCTION_32	FOR_1
0xdfa	          0x488b00	                    mov rax, qword [rax]	       671	list.c	FUNCTION_32	FOR_1
0xdfd	        0x488945f8	                mov qword [rbp - 8], rax	       671	list.c	FUNCTION_32	FOR_1
0xe01	      0x48837df800	                  cmp qword [rbp - 8], 0	       671	list.c	FUNCTION_32	FOR_1
0xe06	            0x75c0	                           jne 0x4000e08	       671	list.c	FUNCTION_32	FOR_1
0xe08	            0xeb01	                           jmp 0x4000e4b	       671	list.c	FUNCTION_32	FOR_1
0xe0a	              0x90	                                     nop	       676	list.c	FUNCTION_32	FOR_1	IF_1
0xe0b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       679	list.c	FUNCTION_32	IF_2
0xe0f	          0x488b00	                    mov rax, qword [rax]	       679	list.c	FUNCTION_32	IF_2
0xe12	          0x4885c0	                           test rax, rax	       679	list.c	FUNCTION_32	IF_2
0xe15	            0x7512	                           jne 0x4000e69	       679	list.c	FUNCTION_32	IF_2
0xe17	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       680	list.c	FUNCTION_32	IF_2
0xe1b	        0x488b5008	                mov rdx, qword [rax + 8]	       680	list.c	FUNCTION_32	IF_2
0xe1f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       680	list.c	FUNCTION_32	IF_2
0xe23	        0x48895008	                mov qword [rax + 8], rdx	       680	list.c	FUNCTION_32	IF_2
0xe27	            0xeb13	                           jmp 0x4000e7c	       680	list.c	FUNCTION_32	IF_2
0xe29	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       682	list.c	FUNCTION_32	ELSE_1
0xe2d	          0x488b00	                    mov rax, qword [rax]	       682	list.c	FUNCTION_32	ELSE_1
0xe30	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       682	list.c	FUNCTION_32	ELSE_1
0xe34	        0x488b5208	                mov rdx, qword [rdx + 8]	       682	list.c	FUNCTION_32	ELSE_1
0xe38	        0x48895008	                mov qword [rax + 8], rdx	       682	list.c	FUNCTION_32	ELSE_1
0xe3c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       683	list.c	FUNCTION_32	IF_3
0xe40	        0x488b4008	                mov rax, qword [rax + 8]	       683	list.c	FUNCTION_32	IF_3
0xe44	          0x4885c0	                           test rax, rax	       683	list.c	FUNCTION_32	IF_3
0xe47	            0x7510	                           jne 0x4000e99	       683	list.c	FUNCTION_32	IF_3
0xe49	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       684	list.c	FUNCTION_32	IF_3
0xe4d	          0x488b10	                    mov rdx, qword [rax]	       684	list.c	FUNCTION_32	IF_3
0xe50	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       684	list.c	FUNCTION_32	IF_3
0xe54	          0x488910	                    mov qword [rax], rdx	       684	list.c	FUNCTION_32	IF_3
0xe57	            0xeb12	                           jmp 0x4000eab	       684	list.c	FUNCTION_32	IF_3
0xe59	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       686	list.c	FUNCTION_32	ELSE_2
0xe5d	        0x488b4008	                mov rax, qword [rax + 8]	       686	list.c	FUNCTION_32	ELSE_2
0xe61	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       686	list.c	FUNCTION_32	ELSE_2
0xe65	          0x488b12	                    mov rdx, qword [rdx]	       686	list.c	FUNCTION_32	ELSE_2
0xe68	          0x488910	                    mov qword [rax], rdx	       686	list.c	FUNCTION_32	ELSE_2
0xe6b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       687	list.c	FUNCTION_32	ELSE_2
0xe6f	    0x48c740280000	               mov qword [rax + 0x28], 0	       687	list.c	FUNCTION_32	ELSE_2
0xe77	              0x90	                                     nop	       688	list.c	FUNCTION_32	ELSE_2
0xe78	              0xc9	                                   leave	       688	list.c	FUNCTION_32	ELSE_2
0xe79	              0xc3	                                     ret	       688	list.c	FUNCTION_32	ELSE_2
list_append_number	DO,0:CALL,2:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,1	26
0xa13	              0x55	                                push rbp	       506	list.c	FUNCTION_26
0xa14	          0x4889e5	                            mov rbp, rsp	       506	list.c	FUNCTION_26
0xa17	        0x4883ec20	                           sub rsp, 0x20	       506	list.c	FUNCTION_26
0xa1b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       506	list.c	FUNCTION_26
0xa1f	        0x488975e0	             mov qword [rbp - 0x20], rsi	       506	list.c	FUNCTION_26
0xa23	      0xe800000000	                          call 0x4000a68	       509	list.c	FUNCTION_26	CALL_1
0xa28	        0x488945f8	                mov qword [rbp - 8], rax	       509	list.c	FUNCTION_26	CALL_1
0xa2c	      0x48837df800	                  cmp qword [rbp - 8], 0	       510	list.c	FUNCTION_26	IF_1
0xa31	            0x7507	                           jne 0x4000a7a	       510	list.c	FUNCTION_26	IF_1
0xa33	      0xb800000000	                              mov eax, 0	       511	list.c	FUNCTION_26	IF_1
0xa38	            0xeb37	                           jmp 0x4000ab1	       511	list.c	FUNCTION_26	IF_1
0xa3a	        0x488b45f8	                mov rax, qword [rbp - 8]	       512	list.c	FUNCTION_26
0xa3e	    0xc74010010000	               mov dword [rax + 0x10], 1	       512	list.c	FUNCTION_26
0xa45	        0x488b45f8	                mov rax, qword [rbp - 8]	       513	list.c	FUNCTION_26
0xa49	        0xc6401400	                mov byte [rax + 0x14], 0	       513	list.c	FUNCTION_26
0xa4d	        0x488b45f8	                mov rax, qword [rbp - 8]	       514	list.c	FUNCTION_26
0xa51	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       514	list.c	FUNCTION_26
0xa55	        0x48895018	             mov qword [rax + 0x18], rdx	       514	list.c	FUNCTION_26
0xa59	        0x488b55f8	                mov rdx, qword [rbp - 8]	       515	list.c	FUNCTION_26	CALL_2
0xa5d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       515	list.c	FUNCTION_26	CALL_2
0xa61	          0x4889d6	                            mov rsi, rdx	       515	list.c	FUNCTION_26	CALL_2
0xa64	          0x4889c7	                            mov rdi, rax	       515	list.c	FUNCTION_26	CALL_2
0xa67	      0xe800000000	                          call 0x4000aac	       515	list.c	FUNCTION_26	CALL_2
0xa6c	      0xb801000000	                              mov eax, 1	       516	list.c	FUNCTION_26
0xa71	              0xc9	                                   leave	       517	list.c	FUNCTION_26
0xa72	              0xc3	                                     ret	       517	list.c	FUNCTION_26
list_find_str	DO,0:CALL,4:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,1	29
0x735	              0x55	                                push rbp	       387	list.c	FUNCTION_20
0x736	          0x4889e5	                            mov rbp, rsp	       387	list.c	FUNCTION_20
0x739	        0x4883ec20	                           sub rsp, 0x20	       387	list.c	FUNCTION_20
0x73d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       387	list.c	FUNCTION_20
0x741	        0x488975e0	             mov qword [rbp - 0x20], rsi	       387	list.c	FUNCTION_20
0x745	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       390	list.c	FUNCTION_20	CALL_1
0x749	        0x488d50ff	                      lea rdx, [rax - 1]	       390	list.c	FUNCTION_20	CALL_1
0x74d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	list.c	FUNCTION_20	CALL_1
0x751	          0x4889d6	                            mov rsi, rdx	       390	list.c	FUNCTION_20	CALL_1
0x754	          0x4889c7	                            mov rdi, rax	       390	list.c	FUNCTION_20	CALL_1
0x757	      0xe800000000	                          call 0x400079c	       390	list.c	FUNCTION_20	CALL_1
0x75c	        0x488945f8	                mov qword [rbp - 8], rax	       390	list.c	FUNCTION_20	CALL_1
0x760	      0x48837df800	                  cmp qword [rbp - 8], 0	       391	list.c	FUNCTION_20	IF_1
0x765	            0x7523	                           jne 0x40007ca	       391	list.c	FUNCTION_20	IF_1
0x767	      0xbf00000000	                              mov edi, 0	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x76c	      0xe800000000	                          call 0x40007b1	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x771	          0x4889c2	                            mov rdx, rax	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x774	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x778	          0x4889c6	                            mov rsi, rax	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x77b	          0x4889d7	                            mov rdi, rdx	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x77e	      0xe800000000	                          call 0x40007c3	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x783	      0xb800000000	                              mov eax, 0	       394	list.c	FUNCTION_20	IF_1
0x788	            0xeb10	                           jmp 0x40007da	       394	list.c	FUNCTION_20	IF_1
0x78a	        0x488b45f8	                mov rax, qword [rbp - 8]	       396	list.c	FUNCTION_20	CALL_4
0x78e	        0x4883c010	                           add rax, 0x10	       396	list.c	FUNCTION_20	CALL_4
0x792	          0x4889c7	                            mov rdi, rax	       396	list.c	FUNCTION_20	CALL_4
0x795	      0xe800000000	                          call 0x40007da	       396	list.c	FUNCTION_20	CALL_4
0x79a	              0xc9	                                   leave	       397	list.c	FUNCTION_20
0x79b	              0xc3	                                     ret	       397	list.c	FUNCTION_20
list_free	DO,0:CALL,2:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,1	16
0x38b	              0x55	                                push rbp	       205	list.c	FUNCTION_12
0x38c	          0x4889e5	                            mov rbp, rsp	       205	list.c	FUNCTION_12
0x38f	        0x4883ec10	                           sub rsp, 0x10	       205	list.c	FUNCTION_12
0x393	        0x48897df8	                mov qword [rbp - 8], rdi	       205	list.c	FUNCTION_12
0x397	    0x8b0500000000	            mov eax, dword [0x040003dd] 	       206	list.c	FUNCTION_12	IF_1
0x39d	            0x85c0	                           test eax, eax	       206	list.c	FUNCTION_12	IF_1
0x39f	            0x7518	                           jne 0x40003f9	       206	list.c	FUNCTION_12	IF_1
0x3a1	        0x488b45f8	                mov rax, qword [rbp - 8]	       208	list.c	FUNCTION_12	IF_1	CALL_1
0x3a5	          0x4889c7	                            mov rdi, rax	       208	list.c	FUNCTION_12	IF_1	CALL_1
0x3a8	      0xe850feffff	             call sym.list_free_contents	       208	list.c	FUNCTION_12	IF_1	CALL_1
0x3ad	        0x488b45f8	                mov rax, qword [rbp - 8]	       209	list.c	FUNCTION_12	IF_1	CALL_2
0x3b1	          0x4889c7	                            mov rdi, rax	       209	list.c	FUNCTION_12	IF_1	CALL_2
0x3b4	      0xe804ffffff	                 call sym.list_free_list	       209	list.c	FUNCTION_12	IF_1	CALL_2
0x3b9	              0x90	                                     nop	       211	list.c	FUNCTION_12
0x3ba	              0xc9	                                   leave	       211	list.c	FUNCTION_12
0x3bb	              0xc3	                                     ret	       211	list.c	FUNCTION_12
rettv_list_set	DO,0:CALL,0:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,1	19
0x182	              0x55	                                push rbp	       110	list.c	FUNCTION_6
0x183	          0x4889e5	                            mov rbp, rsp	       110	list.c	FUNCTION_6
0x186	        0x48897df8	                mov qword [rbp - 8], rdi	       110	list.c	FUNCTION_6
0x18a	        0x488975f0	             mov qword [rbp - 0x10], rsi	       110	list.c	FUNCTION_6
0x18e	        0x488b45f8	                mov rax, qword [rbp - 8]	       111	list.c	FUNCTION_6
0x192	    0xc70005000000	                      mov dword [rax], 5	       111	list.c	FUNCTION_6
0x198	        0x488b45f8	                mov rax, qword [rbp - 8]	       112	list.c	FUNCTION_6
0x19c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       112	list.c	FUNCTION_6
0x1a0	        0x48895008	                mov qword [rax + 8], rdx	       112	list.c	FUNCTION_6
0x1a4	      0x48837df000	               cmp qword [rbp - 0x10], 0	       113	list.c	FUNCTION_6	IF_1
0x1a9	            0x7411	                            je 0x40001fc	       113	list.c	FUNCTION_6	IF_1
0x1ab	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       114	list.c	FUNCTION_6	IF_1
0x1af	          0x8b4010	            mov eax, dword [rax + 0x10] 	       114	list.c	FUNCTION_6	IF_1
0x1b2	          0x8d5001	                      lea edx, [rax + 1]	       114	list.c	FUNCTION_6	IF_1
0x1b5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       114	list.c	FUNCTION_6	IF_1
0x1b9	          0x895010	             mov dword [rax + 0x10], edx	       114	list.c	FUNCTION_6	IF_1
0x1bc	              0x90	                                     nop	       115	list.c	FUNCTION_6
0x1bd	              0x5d	                                 pop rbp	       115	list.c	FUNCTION_6
0x1be	              0xc3	                                     ret	       115	list.c	FUNCTION_6
list_append	DO,0:CALL,0:SWITCH,0:ELSE,1:FOR,0:functions,0:WHILE,0:IF,1	38
0x80c	              0x55	                                push rbp	       424	list.c	FUNCTION_22
0x80d	          0x4889e5	                            mov rbp, rsp	       424	list.c	FUNCTION_22
0x810	        0x48897df8	                mov qword [rbp - 8], rdi	       424	list.c	FUNCTION_22
0x814	        0x488975f0	             mov qword [rbp - 0x10], rsi	       424	list.c	FUNCTION_22
0x818	        0x488b45f8	                mov rax, qword [rbp - 8]	       425	list.c	FUNCTION_22	IF_1
0x81c	        0x488b4008	                mov rax, qword [rax + 8]	       425	list.c	FUNCTION_22	IF_1
0x820	          0x4885c0	                           test rax, rax	       425	list.c	FUNCTION_22	IF_1
0x823	            0x7525	                           jne 0x400088a	       425	list.c	FUNCTION_22	IF_1
0x825	        0x488b45f8	                mov rax, qword [rbp - 8]	       428	list.c	FUNCTION_22	IF_1
0x829	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       428	list.c	FUNCTION_22	IF_1
0x82d	          0x488910	                    mov qword [rax], rdx	       428	list.c	FUNCTION_22	IF_1
0x830	        0x488b45f8	                mov rax, qword [rbp - 8]	       429	list.c	FUNCTION_22	IF_1
0x834	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       429	list.c	FUNCTION_22	IF_1
0x838	        0x48895008	                mov qword [rax + 8], rdx	       429	list.c	FUNCTION_22	IF_1
0x83c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       430	list.c	FUNCTION_22	IF_1
0x840	    0x48c740080000	                  mov qword [rax + 8], 0	       430	list.c	FUNCTION_22	IF_1
0x848	            0xeb2b	                           jmp 0x40008b5	       430	list.c	FUNCTION_22	IF_1
0x84a	        0x488b45f8	                mov rax, qword [rbp - 8]	       434	list.c	FUNCTION_22	ELSE_1
0x84e	        0x488b4008	                mov rax, qword [rax + 8]	       434	list.c	FUNCTION_22	ELSE_1
0x852	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       434	list.c	FUNCTION_22	ELSE_1
0x856	          0x488910	                    mov qword [rax], rdx	       434	list.c	FUNCTION_22	ELSE_1
0x859	        0x488b45f8	                mov rax, qword [rbp - 8]	       435	list.c	FUNCTION_22	ELSE_1
0x85d	        0x488b5008	                mov rdx, qword [rax + 8]	       435	list.c	FUNCTION_22	ELSE_1
0x861	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       435	list.c	FUNCTION_22	ELSE_1
0x865	        0x48895008	                mov qword [rax + 8], rdx	       435	list.c	FUNCTION_22	ELSE_1
0x869	        0x488b45f8	                mov rax, qword [rbp - 8]	       436	list.c	FUNCTION_22	ELSE_1
0x86d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       436	list.c	FUNCTION_22	ELSE_1
0x871	        0x48895008	                mov qword [rax + 8], rdx	       436	list.c	FUNCTION_22	ELSE_1
0x875	        0x488b45f8	                mov rax, qword [rbp - 8]	       438	list.c	FUNCTION_22
0x879	          0x8b4014	            mov eax, dword [rax + 0x14] 	       438	list.c	FUNCTION_22
0x87c	          0x8d5001	                      lea edx, [rax + 1]	       438	list.c	FUNCTION_22
0x87f	        0x488b45f8	                mov rax, qword [rbp - 8]	       438	list.c	FUNCTION_22
0x883	          0x895014	             mov dword [rax + 0x14], edx	       438	list.c	FUNCTION_22
0x886	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       439	list.c	FUNCTION_22
0x88a	    0x48c700000000	                      mov qword [rax], 0	       439	list.c	FUNCTION_22
0x891	              0x90	                                     nop	       440	list.c	FUNCTION_22
0x892	              0x5d	                                 pop rbp	       440	list.c	FUNCTION_22
0x893	              0xc3	                                     ret	       440	list.c	FUNCTION_22
list_free_nonref	DO,0:CALL,1:SWITCH,0:ELSE,0:FOR,1:functions,0:WHILE,0:IF,1	30
0x255	              0x55	                                push rbp	       153	list.c	FUNCTION_9
0x256	          0x4889e5	                            mov rbp, rsp	       153	list.c	FUNCTION_9
0x259	        0x4883ec20	                           sub rsp, 0x20	       153	list.c	FUNCTION_9
0x25d	          0x897dec	             mov dword [rbp - 0x14], edi	       153	list.c	FUNCTION_9
0x260	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       155	list.c	FUNCTION_9
0x267	    0x488b05000000	            mov rax, qword [0x040002ae] 	       157	list.c	FUNCTION_9	FOR_1
0x26e	        0x488945f8	                mov qword [rbp - 8], rax	       157	list.c	FUNCTION_9	FOR_1
0x272	            0xeb3d	                           jmp 0x40002f1	       157	list.c	FUNCTION_9	FOR_1
0x274	        0x488b45f8	                mov rax, qword [rbp - 8]	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x278	          0x8b4030	            mov eax, dword [rax + 0x30] 	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x27b	          0x3345ec	             xor eax, dword [rbp - 0x14]	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x27e	          0x83e0fe	                     and eax, 0xfffffffe	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x281	            0x85c0	                           test eax, eax	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x283	            0x7420	                            je 0x40002e5	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x285	        0x488b45f8	                mov rax, qword [rbp - 8]	       159	list.c	FUNCTION_9	FOR_1	IF_1
0x289	        0x488b4018	            mov rax, qword [rax + 0x18] 	       159	list.c	FUNCTION_9	FOR_1	IF_1
0x28d	          0x4885c0	                           test rax, rax	       159	list.c	FUNCTION_9	FOR_1	IF_1
0x290	            0x7513	                           jne 0x40002e5	       159	list.c	FUNCTION_9	FOR_1	IF_1
0x292	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	list.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x296	          0x4889c7	                            mov rdi, rax	       164	list.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x299	      0xe85fffffff	             call sym.list_free_contents	       164	list.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x29e	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       165	list.c	FUNCTION_9	FOR_1	IF_1
0x2a5	        0x488b45f8	                mov rax, qword [rbp - 8]	       157	list.c	FUNCTION_9	FOR_1
0x2a9	        0x488b4048	            mov rax, qword [rax + 0x48] 	       157	list.c	FUNCTION_9	FOR_1
0x2ad	        0x488945f8	                mov qword [rbp - 8], rax	       157	list.c	FUNCTION_9	FOR_1
0x2b1	      0x48837df800	                  cmp qword [rbp - 8], 0	       157	list.c	FUNCTION_9	FOR_1
0x2b6	            0x75bc	                           jne 0x40002b4	       157	list.c	FUNCTION_9	FOR_1
0x2b8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       167	list.c	FUNCTION_9
0x2bb	              0xc9	                                   leave	       168	list.c	FUNCTION_9
0x2bc	              0xc3	                                     ret	       168	list.c	FUNCTION_9
list_append_tv	DO,0:CALL,3:SWITCH,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,1	25
0x894	              0x55	                                push rbp	       448	list.c	FUNCTION_23
0x895	          0x4889e5	                            mov rbp, rsp	       448	list.c	FUNCTION_23
0x898	        0x4883ec20	                           sub rsp, 0x20	       448	list.c	FUNCTION_23
0x89c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       448	list.c	FUNCTION_23
0x8a0	        0x488975e0	             mov qword [rbp - 0x20], rsi	       448	list.c	FUNCTION_23
0x8a4	      0xe800000000	                          call 0x40008e9	       449	list.c	FUNCTION_23	CALL_1
0x8a9	        0x488945f8	                mov qword [rbp - 8], rax	       449	list.c	FUNCTION_23	CALL_1
0x8ad	      0x48837df800	                  cmp qword [rbp - 8], 0	       451	list.c	FUNCTION_23	IF_1
0x8b2	            0x7507	                           jne 0x40008fb	       451	list.c	FUNCTION_23	IF_1
0x8b4	      0xb800000000	                              mov eax, 0	       452	list.c	FUNCTION_23	IF_1
0x8b9	            0xeb2f	                           jmp 0x400092a	       452	list.c	FUNCTION_23	IF_1
0x8bb	        0x488b45f8	                mov rax, qword [rbp - 8]	       453	list.c	FUNCTION_23	CALL_2
0x8bf	        0x488d5010	                   lea rdx, [rax + 0x10]	       453	list.c	FUNCTION_23	CALL_2
0x8c3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       453	list.c	FUNCTION_23	CALL_2
0x8c7	          0x4889d6	                            mov rsi, rdx	       453	list.c	FUNCTION_23	CALL_2
0x8ca	          0x4889c7	                            mov rdi, rax	       453	list.c	FUNCTION_23	CALL_2
0x8cd	      0xe800000000	                          call 0x4000912	       453	list.c	FUNCTION_23	CALL_2
0x8d2	        0x488b55f8	                mov rdx, qword [rbp - 8]	       454	list.c	FUNCTION_23	CALL_3
0x8d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       454	list.c	FUNCTION_23	CALL_3
0x8da	          0x4889d6	                            mov rsi, rdx	       454	list.c	FUNCTION_23	CALL_3
0x8dd	          0x4889c7	                            mov rdi, rax	       454	list.c	FUNCTION_23	CALL_3
0x8e0	      0xe800000000	                          call 0x4000925	       454	list.c	FUNCTION_23	CALL_3
0x8e5	      0xb801000000	                              mov eax, 1	       455	list.c	FUNCTION_23
0x8ea	              0xc9	                                   leave	       456	list.c	FUNCTION_23
0x8eb	              0xc3	                                     ret	       456	list.c	FUNCTION_23
list_extend	DO,0:CALL,1:SWITCH,0:ELSE,0:FOR,1:functions,0:WHILE,0:IF,1	35
0xb84	              0x55	                                push rbp	       569	list.c	FUNCTION_29
0xb85	          0x4889e5	                            mov rbp, rsp	       569	list.c	FUNCTION_29
0xb88	        0x4883ec30	                           sub rsp, 0x30	       569	list.c	FUNCTION_29
0xb8c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       569	list.c	FUNCTION_29
0xb90	        0x488975e0	             mov qword [rbp - 0x20], rsi	       569	list.c	FUNCTION_29
0xb94	        0x488955d8	             mov qword [rbp - 0x28], rdx	       569	list.c	FUNCTION_29
0xb98	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       571	list.c	FUNCTION_29
0xb9c	          0x8b4014	            mov eax, dword [rax + 0x14] 	       571	list.c	FUNCTION_29
0xb9f	          0x8945f4	              mov dword [rbp - 0xc], eax	       571	list.c	FUNCTION_29
0xba2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       575	list.c	FUNCTION_29	FOR_1
0xba6	          0x488b00	                    mov rax, qword [rax]	       575	list.c	FUNCTION_29	FOR_1
0xba9	        0x488945f8	                mov qword [rbp - 8], rax	       575	list.c	FUNCTION_29	FOR_1
0xbad	            0xeb31	                           jmp 0x4000c20	       575	list.c	FUNCTION_29	FOR_1
0xbaf	        0x488b45f8	                mov rax, qword [rbp - 8]	       576	list.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0xbb3	        0x488d4810	                   lea rcx, [rax + 0x10]	       576	list.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0xbb7	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       576	list.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0xbbb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       576	list.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0xbbf	          0x4889ce	                            mov rsi, rcx	       576	list.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0xbc2	          0x4889c7	                            mov rdi, rax	       576	list.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0xbc5	      0xe800000000	                          call 0x4000c0a	       576	list.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0xbca	            0x85c0	                           test eax, eax	       576	list.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0xbcc	            0x7507	                           jne 0x4000c15	       576	list.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0xbce	      0xb800000000	                              mov eax, 0	       577	list.c	FUNCTION_29	FOR_1	IF_1
0xbd3	            0xeb21	                           jmp 0x4000c36	       577	list.c	FUNCTION_29	FOR_1	IF_1
0xbd5	        0x488b45f8	                mov rax, qword [rbp - 8]	       575	list.c	FUNCTION_29	FOR_1
0xbd9	          0x488b00	                    mov rax, qword [rax]	       575	list.c	FUNCTION_29	FOR_1
0xbdc	        0x488945f8	                mov qword [rbp - 8], rax	       575	list.c	FUNCTION_29	FOR_1
0xbe0	      0x48837df800	                  cmp qword [rbp - 8], 0	       575	list.c	FUNCTION_29	FOR_1
0xbe5	            0x740a	                            je 0x4000c31	       575	list.c	FUNCTION_29	FOR_1
0xbe7	        0x836df401	                sub dword [rbp - 0xc], 1	       575	list.c	FUNCTION_29	FOR_1
0xbeb	        0x837df400	                cmp dword [rbp - 0xc], 0	       575	list.c	FUNCTION_29	FOR_1
0xbef	            0x79be	                           jns 0x4000bef	       575	list.c	FUNCTION_29	FOR_1
0xbf1	      0xb801000000	                              mov eax, 1	       578	list.c	FUNCTION_29
0xbf6	              0xc9	                                   leave	       579	list.c	FUNCTION_29
0xbf7	              0xc3	                                     ret	       579	list.c	FUNCTION_29
list_free_contents	DO,0:CALL,2:SWITCH,0:ELSE,0:FOR,1:functions,0:WHILE,0:IF,0	27
0x1fd	              0x55	                                push rbp	       134	list.c	FUNCTION_8
0x1fe	          0x4889e5	                            mov rbp, rsp	       134	list.c	FUNCTION_8
0x201	        0x4883ec20	                           sub rsp, 0x20	       134	list.c	FUNCTION_8
0x205	        0x48897de8	             mov qword [rbp - 0x18], rdi	       134	list.c	FUNCTION_8
0x209	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       137	list.c	FUNCTION_8	FOR_1
0x20d	          0x488b00	                    mov rax, qword [rax]	       137	list.c	FUNCTION_8	FOR_1
0x210	        0x488945f8	                mov qword [rbp - 8], rax	       137	list.c	FUNCTION_8	FOR_1
0x214	            0xeb35	                           jmp 0x400028b	       137	list.c	FUNCTION_8	FOR_1
0x216	        0x488b45f8	                mov rax, qword [rbp - 8]	       140	list.c	FUNCTION_8	FOR_1
0x21a	          0x488b10	                    mov rdx, qword [rax]	       140	list.c	FUNCTION_8	FOR_1
0x21d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       140	list.c	FUNCTION_8	FOR_1
0x221	          0x488910	                    mov qword [rax], rdx	       140	list.c	FUNCTION_8	FOR_1
0x224	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	list.c	FUNCTION_8	FOR_1	CALL_1
0x228	        0x4883c010	                           add rax, 0x10	       141	list.c	FUNCTION_8	FOR_1	CALL_1
0x22c	          0x4889c7	                            mov rdi, rax	       141	list.c	FUNCTION_8	FOR_1	CALL_1
0x22f	      0xe800000000	                          call 0x4000274	       141	list.c	FUNCTION_8	FOR_1	CALL_1
0x234	        0x488b45f8	                mov rax, qword [rbp - 8]	       142	list.c	FUNCTION_8	FOR_1	CALL_2
0x238	          0x4889c7	                            mov rdi, rax	       142	list.c	FUNCTION_8	FOR_1	CALL_2
0x23b	      0xe800000000	                          call 0x4000280	       142	list.c	FUNCTION_8	FOR_1	CALL_2
0x240	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       137	list.c	FUNCTION_8	FOR_1
0x244	          0x488b00	                    mov rax, qword [rax]	       137	list.c	FUNCTION_8	FOR_1
0x247	        0x488945f8	                mov qword [rbp - 8], rax	       137	list.c	FUNCTION_8	FOR_1
0x24b	      0x48837df800	                  cmp qword [rbp - 8], 0	       137	list.c	FUNCTION_8	FOR_1
0x250	            0x75c4	                           jne 0x4000256	       137	list.c	FUNCTION_8	FOR_1
0x252	              0x90	                                     nop	       144	list.c	FUNCTION_8
0x253	              0xc9	                                   leave	       144	list.c	FUNCTION_8
0x254	              0xc3	                                     ret	       144	list.c	FUNCTION_8
