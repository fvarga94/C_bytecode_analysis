setcharset	IF,14:WHILE,0:ELSE,11:CALL,5:SWITCH,1:DO,0:FOR,1:functions,0	204
0x4000504	              0x55	                                push rbp	       162	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3	CALL_3
0x4000505	          0x4889e5	                            mov rbp, rsp	       162	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3	CALL_3
0x4000508	        0x4883ec30	                           sub rsp, 0x30	       162	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3	CALL_3
0x400050c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       162	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3	CALL_3
0x4000510	        0x488975d0	             mov qword [rbp - 0x30], rsi	       162	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3	CALL_3
0x4000514	    0x64488b042528	                mov rax, qword fs:[0x28]	       162	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3	CALL_3
0x400051d	        0x488945f8	                mov qword [rbp - 8], rax	       162	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3	CALL_3
0x4000521	            0x31c0	                            xor eax, eax	       162	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3	CALL_3
0x4000523	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       163	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3	WHILE_1
0x400052a	        0xc645ea00	                mov byte [rbp - 0x16], 0	       164	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3	WHILE_1	IF_4	CALL_4
0x400052e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       167	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3
0x4000532	      0xba0f010000	                          mov edx, 0x10f	       167	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3
0x4000537	      0xbe00000000	                              mov esi, 0	       167	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3
0x400053c	          0x4889c7	                            mov rdi, rax	       167	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3
0x400053f	      0xe800000000	                          call 0x4000544	       167	curl_fnmatch.c	FUNCTION_3	IF_1	IF_3
0x4000544	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       169	curl_fnmatch.c	FUNCTION_3
0x4000548	          0x488b00	                    mov rax, qword [rax]	       169	curl_fnmatch.c	FUNCTION_3
0x400054b	           0xfb600	                   movzx eax, byte [rax]	       169	curl_fnmatch.c	FUNCTION_3
0x400054e	          0x8845eb	               mov byte [rbp - 0x15], al	       169	curl_fnmatch.c	FUNCTION_3
0x4000551	        0x807deb00	                cmp byte [rbp - 0x15], 0	       170	curl_fnmatch.c	
0x4000555	            0x750a	                           jne 0x4000561	       170	curl_fnmatch.c	
0x4000557	      0xb800000000	                              mov eax, 0	       171	curl_fnmatch.c	
0x400055c	      0xe96e020000	                           jmp 0x40007cf	       171	curl_fnmatch.c	
0x4000561	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       173	curl_fnmatch.c	FUNCTION_4
0x4000564	          0x83f801	                              cmp eax, 1	       173	curl_fnmatch.c	FUNCTION_4
0x4000567	     0xf84ae010000	                            je 0x400071b	       173	curl_fnmatch.c	FUNCTION_4
0x400056d	          0x83f801	                              cmp eax, 1	       173	curl_fnmatch.c	FUNCTION_4
0x4000570	            0x720e	                            jb 0x4000580	       173	curl_fnmatch.c	FUNCTION_4
0x4000572	          0x83f802	                              cmp eax, 2	       173	curl_fnmatch.c	FUNCTION_4
0x4000575	     0xf8414020000	                            je 0x400078f	       173	curl_fnmatch.c	FUNCTION_4
0x400057b	      0xe944020000	                           jmp 0x40007c4	       173	curl_fnmatch.c	FUNCTION_4
0x4000580	        0x807deb5d	            cmp byte [rbp - 0x15], 0x5d 	       175	curl_fnmatch.c	FUNCTION_4
0x4000584	            0x7540	                           jne 0x40005c6	       175	curl_fnmatch.c	FUNCTION_4
0x4000586	        0x807dea00	                cmp byte [rbp - 0x16], 0	       176	curl_fnmatch.c	FUNCTION_4
0x400058a	            0x740a	                            je 0x4000596	       176	curl_fnmatch.c	FUNCTION_4
0x400058c	      0xb801000000	                              mov eax, 1	       177	curl_fnmatch.c	FUNCTION_4
0x4000591	      0xe939020000	                           jmp 0x40007cf	       177	curl_fnmatch.c	FUNCTION_4
0x4000596	        0xc645ea01	                mov byte [rbp - 0x16], 1	       178	curl_fnmatch.c	FUNCTION_4	CALL_1
0x400059a	    0xc745ec010000	               mov dword [rbp - 0x14], 1	       179	curl_fnmatch.c	FUNCTION_4	FOR_1
0x40005a1	         0xfb655eb	            movzx edx, byte [rbp - 0x15]	       180	curl_fnmatch.c	FUNCTION_4	FOR_1
0x40005a5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       180	curl_fnmatch.c	FUNCTION_4	FOR_1
0x40005a9	          0x4801d0	                            add rax, rdx	       180	curl_fnmatch.c	FUNCTION_4	FOR_1
0x40005ac	          0xc60001	                       mov byte [rax], 1	       180	curl_fnmatch.c	FUNCTION_4	FOR_1
0x40005af	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       181	curl_fnmatch.c	FUNCTION_4	FOR_1	IF_1
0x40005b3	          0x488b00	                    mov rax, qword [rax]	       181	curl_fnmatch.c	FUNCTION_4	FOR_1	IF_1
0x40005b6	        0x488d5001	                      lea rdx, [rax + 1]	       181	curl_fnmatch.c	FUNCTION_4	FOR_1	IF_1
0x40005ba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       181	curl_fnmatch.c	FUNCTION_4	FOR_1	IF_1
0x40005be	          0x488910	                    mov qword [rax], rdx	       181	curl_fnmatch.c	FUNCTION_4	FOR_1	IF_1
0x40005c1	      0xe9fe010000	                           jmp 0x40007c4	       219	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9
0x40005c6	        0x807deb5b	            cmp byte [rbp - 0x15], 0x5b 	       183	curl_fnmatch.c	FUNCTION_4	FOR_1
0x40005ca	            0x756f	                           jne 0x400063b	       183	curl_fnmatch.c	FUNCTION_4	FOR_1
0x40005cc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       184	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40005d0	          0x488b00	                    mov rax, qword [rax]	       184	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40005d3	        0x4883c001	                              add rax, 1	       184	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40005d7	        0x488945f0	             mov qword [rbp - 0x10], rax	       184	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40005db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x40005df	        0x488d5001	                      lea rdx, [rax + 1]	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x40005e3	        0x488955f0	             mov qword [rbp - 0x10], rdx	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x40005e7	           0xfb600	                   movzx eax, byte [rax]	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x40005ea	            0x3c3a	                            cmp al, 0x3a	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x40005ec	            0x7524	                           jne 0x4000612	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x40005ee	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x40005f2	        0x488d45f0	                   lea rax, [rbp - 0x10]	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x40005f6	          0x4889d6	                            mov rsi, rdx	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x40005f9	          0x4889c7	                            mov rdi, rax	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x40005fc	      0xe811fbffff	                   call sym.parsekeyword	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x4000601	            0x85c0	                           test eax, eax	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x4000603	            0x740d	                            je 0x4000612	       186	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x4000605	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       187	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2	IF_3
0x4000609	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       187	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2	IF_3
0x400060d	          0x488910	                    mov qword [rax], rdx	       187	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2	IF_3
0x4000610	            0xeb20	                           jmp 0x4000632	       187	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2	IF_3
0x4000612	         0xfb655eb	            movzx edx, byte [rbp - 0x15]	       189	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x4000616	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       189	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x400061a	          0x4801d0	                            add rax, rdx	       189	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x400061d	          0xc60001	                       mov byte [rax], 1	       189	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x4000620	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       190	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x4000624	          0x488b00	                    mov rax, qword [rax]	       190	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x4000627	        0x488d5001	                      lea rdx, [rax + 1]	       190	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x400062b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       190	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x400062f	          0x488910	                    mov qword [rax], rdx	       190	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x4000632	        0xc645ea01	                mov byte [rbp - 0x16], 1	       192	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_2
0x4000636	      0xe989010000	                           jmp 0x40007c4	       219	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9
0x400063b	        0x807deb5e	            cmp byte [rbp - 0x15], 0x5e 	       194	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x400063f	            0x7406	                            je 0x4000647	       194	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000641	        0x807deb21	            cmp byte [rbp - 0x15], 0x21 	       194	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000645	            0x7564	                           jne 0x40006ab	       194	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000647	         0xfb645ea	            movzx eax, byte [rbp - 0x16]	       195	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x400064b	          0x83f001	                              xor eax, 1	       195	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x400064e	            0x84c0	                             test al, al	       195	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000650	            0x7434	                            je 0x4000686	       195	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000652	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       196	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000656	    0x480500010000	                          add rax, 0x100	       196	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x400065c	           0xfb600	                   movzx eax, byte [rax]	       196	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x400065f	            0x84c0	                             test al, al	       196	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000661	            0x7414	                            je 0x4000677	       196	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000663	         0xfb655eb	            movzx edx, byte [rbp - 0x15]	       197	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4	IF_5	CALL_2
0x4000667	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       197	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4	IF_5	CALL_2
0x400066b	          0x4801d0	                            add rax, rdx	       197	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4	IF_5	CALL_2
0x400066e	          0xc60001	                       mov byte [rax], 1	       197	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4	IF_5	CALL_2
0x4000671	        0xc645ea01	                mov byte [rbp - 0x16], 1	       198	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4	IF_5
0x4000675	            0xeb1d	                           jmp 0x4000694	       198	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4	IF_5
0x4000677	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       201	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4	ELSE_2
0x400067b	    0x480500010000	                          add rax, 0x100	       201	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4	ELSE_2
0x4000681	          0xc60001	                       mov byte [rax], 1	       201	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4	ELSE_2
0x4000684	            0xeb0e	                           jmp 0x4000694	       201	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4	ELSE_2
0x4000686	         0xfb655eb	            movzx edx, byte [rbp - 0x15]	       204	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x400068a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       204	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x400068e	          0x4801d0	                            add rax, rdx	       204	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000691	          0xc60001	                       mov byte [rax], 1	       204	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000694	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       205	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6
0x4000698	          0x488b00	                    mov rax, qword [rax]	       205	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6
0x400069b	        0x488d5001	                      lea rdx, [rax + 1]	       205	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6
0x400069f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       205	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6
0x40006a3	          0x488910	                    mov qword [rax], rdx	       205	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6
0x40006a6	      0xe919010000	                           jmp 0x40007c4	       219	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9
0x40006ab	        0x807deb5c	            cmp byte [rbp - 0x15], 0x5c 	       207	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006af	            0x754e	                           jne 0x40006ff	       207	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006b1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       208	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006b5	          0x488b00	                    mov rax, qword [rax]	       208	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006b8	        0x488d5001	                      lea rdx, [rax + 1]	       208	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006bc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       208	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006c0	          0x488910	                    mov qword [rax], rdx	       208	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006c3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       208	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006c7	          0x488b00	                    mov rax, qword [rax]	       208	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006ca	           0xfb600	                   movzx eax, byte [rax]	       208	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006cd	          0x8845eb	               mov byte [rbp - 0x15], al	       208	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006d0	        0x807deb00	                cmp byte [rbp - 0x15], 0	       209	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006d4	            0x7415	                            je 0x40006eb	       209	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006d6	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       210	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       210	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006de	          0x4889d6	                            mov rsi, rdx	       210	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006e1	          0x4889c7	                            mov rdi, rax	       210	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006e4	      0xe81dfdffff	                 call sym.setcharorrange	       210	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006e9	            0xeb0b	                           jmp 0x40006f6	       210	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	IF_8
0x40006eb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       212	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	ELSE_4
0x40006ef	        0x4883c05c	                           add rax, 0x5c	       212	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	ELSE_4
0x40006f3	          0xc60001	                       mov byte [rax], 1	       212	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7	ELSE_4
0x40006f6	        0xc645ea01	                mov byte [rbp - 0x16], 1	       213	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6	IF_7
0x40006fa	      0xe9c5000000	                           jmp 0x40007c4	       219	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9
0x40006ff	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       216	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6
0x4000703	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       216	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6
0x4000707	          0x4889d6	                            mov rsi, rdx	       216	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6
0x400070a	          0x4889c7	                            mov rdi, rax	       216	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6
0x400070d	      0xe8f4fcffff	                 call sym.setcharorrange	       216	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6
0x4000712	        0xc645ea01	                mov byte [rbp - 0x16], 1	       217	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_3	IF_6
0x4000716	      0xe9a9000000	                           jmp 0x40007c4	       219	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9
0x400071b	        0x807deb5b	            cmp byte [rbp - 0x15], 0x5b 	       221	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9	CALL_3
0x400071f	            0x7529	                           jne 0x400074a	       221	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9	CALL_3
0x4000721	    0xc745ec020000	               mov dword [rbp - 0x14], 2	       222	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9	ELSE_7
0x4000728	         0xfb655eb	            movzx edx, byte [rbp - 0x15]	       223	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9	ELSE_7
0x400072c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       223	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9	ELSE_7
0x4000730	          0x4801d0	                            add rax, rdx	       223	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9	ELSE_7
0x4000733	          0xc60001	                       mov byte [rax], 1	       223	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9	ELSE_7
0x4000736	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       224	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9
0x400073a	          0x488b00	                    mov rax, qword [rax]	       224	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9
0x400073d	        0x488d5001	                      lea rdx, [rax + 1]	       224	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9
0x4000741	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       224	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9
0x4000745	          0x488910	                    mov qword [rax], rdx	       224	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_6	IF_9
0x4000748	            0xeb7a	                           jmp 0x40007c4	       239	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_9	IF_12
0x400074a	        0x807deb5d	            cmp byte [rbp - 0x15], 0x5d 	       226	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_8
0x400074e	            0x7507	                           jne 0x4000757	       226	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_8
0x4000750	      0xb801000000	                              mov eax, 1	       227	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_8	CALL_4
0x4000755	            0xeb78	                           jmp 0x40007cf	       227	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_8	CALL_4
0x4000757	         0xfb645eb	            movzx eax, byte [rbp - 0x15]	       229	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_8
0x400075b	            0x89c7	                            mov edi, eax	       229	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_8
0x400075d	      0xe800000000	                          call 0x4000762	       229	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_8
0x4000762	            0x85c0	                           test eax, eax	       229	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_8
0x4000764	            0x7463	                            je 0x40007c9	       229	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_8
0x4000766	         0xfb655eb	            movzx edx, byte [rbp - 0x15]	       230	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x400076a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       230	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x400076e	          0x4801d0	                            add rax, rdx	       230	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000771	          0xc60001	                       mov byte [rax], 1	       230	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000774	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       231	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000778	          0x488b00	                    mov rax, qword [rax]	       231	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x400077b	        0x488d5001	                      lea rdx, [rax + 1]	       231	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x400077f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       231	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000783	          0x488910	                    mov qword [rax], rdx	       231	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x4000786	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       232	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	IF_11
0x400078d	            0xeb35	                           jmp 0x40007c4	       239	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_9	IF_12
0x400078f	        0x807deb5d	            cmp byte [rbp - 0x15], 0x5d 	       241	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_10	IF_13
0x4000793	            0x7507	                           jne 0x400079c	       241	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_10	IF_13
0x4000795	      0xb801000000	                              mov eax, 1	       242	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_10	IF_13
0x400079a	            0xeb33	                           jmp 0x40007cf	       242	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_10	IF_13
0x400079c	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       243	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_10	IF_13
0x40007a3	         0xfb655eb	            movzx edx, byte [rbp - 0x15]	       244	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_10	IF_13
0x40007a7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       244	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_10	IF_13
0x40007ab	          0x4801d0	                            add rax, rdx	       244	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_10	IF_13
0x40007ae	          0xc60001	                       mov byte [rax], 1	       244	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_10	IF_13
0x40007b1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       245	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_11
0x40007b5	          0x488b00	                    mov rax, qword [rax]	       245	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_11
0x40007b8	        0x488d5001	                      lea rdx, [rax + 1]	       245	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_11
0x40007bc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       245	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_11
0x40007c0	          0x488910	                    mov qword [rax], rdx	       245	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_11
0x40007c3	              0x90	                                     nop	       246	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_11
0x40007c4	      0xe97bfdffff	                           jmp 0x4000544	       248	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_11
0x40007c9	              0x90	                                     nop	       238	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1	ELSE_9	IF_12
0x40007ca	      0xb800000000	                              mov eax, 0	       250	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40007cf	        0x488b4df8	                mov rcx, qword [rbp - 8]	       251	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40007d3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       251	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40007dc	            0x7405	                            je 0x40007e3	       251	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40007de	      0xe800000000	                          call 0x40007e3	       251	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40007e3	              0xc9	                                   leave	       251	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
0x40007e4	              0xc3	                                     ret	       251	curl_fnmatch.c	FUNCTION_4	FOR_1	SWITCH_1
charclass	IF,3:WHILE,0:ELSE,0:CALL,3:SWITCH,0:DO,0:FOR,0:functions,0	29
0x40003b0	              0x55	                                push rbp	       128	curl_fnmatch.c	FUNCTION_1	ELSE_11	IF_13	CALL_10
0x40003b1	          0x4889e5	                            mov rbp, rsp	       128	curl_fnmatch.c	FUNCTION_1	ELSE_11	IF_13	CALL_10
0x40003b4	        0x4883ec10	                           sub rsp, 0x10	       128	curl_fnmatch.c	FUNCTION_1	ELSE_11	IF_13	CALL_10
0x40003b8	            0x89f8	                            mov eax, edi	       128	curl_fnmatch.c	FUNCTION_1	ELSE_11	IF_13	CALL_10
0x40003ba	          0x8845fc	                  mov byte [rbp - 4], al	       128	curl_fnmatch.c	FUNCTION_1	ELSE_11	IF_13	CALL_10
0x40003bd	         0xfb645fc	               movzx eax, byte [rbp - 4]	       129	curl_fnmatch.c	FUNCTION_1	ELSE_11	IF_13
0x40003c1	            0x89c7	                            mov edi, eax	       129	curl_fnmatch.c	FUNCTION_1	ELSE_11	IF_13
0x40003c3	      0xe800000000	                          call 0x40003c8	       129	curl_fnmatch.c	FUNCTION_1	ELSE_11	IF_13
0x40003c8	            0x85c0	                           test eax, eax	       129	curl_fnmatch.c	FUNCTION_1	ELSE_11	IF_13
0x40003ca	            0x7407	                            je 0x40003d3	       129	curl_fnmatch.c	FUNCTION_1	ELSE_11	IF_13
0x40003cc	      0xb802000000	                              mov eax, 2	       130	curl_fnmatch.c	FUNCTION_1	ELSE_12	IF_14	CALL_11
0x40003d1	            0xeb31	                           jmp 0x4000404	       130	curl_fnmatch.c	FUNCTION_1	ELSE_12	IF_14	CALL_11
0x40003d3	         0xfb645fc	               movzx eax, byte [rbp - 4]	       131	curl_fnmatch.c	FUNCTION_1	ELSE_12	IF_14
0x40003d7	            0x89c7	                            mov edi, eax	       131	curl_fnmatch.c	FUNCTION_1	ELSE_12	IF_14
0x40003d9	      0xe800000000	                          call 0x40003de	       131	curl_fnmatch.c	FUNCTION_1	ELSE_12	IF_14
0x40003de	            0x85c0	                           test eax, eax	       131	curl_fnmatch.c	FUNCTION_1	ELSE_12	IF_14
0x40003e0	            0x7407	                            je 0x40003e9	       131	curl_fnmatch.c	FUNCTION_1	ELSE_12	IF_14
0x40003e2	      0xb803000000	                              mov eax, 3	       132	curl_fnmatch.c	FUNCTION_1	ELSE_13
0x40003e7	            0xeb1b	                           jmp 0x4000404	       132	curl_fnmatch.c	FUNCTION_1	ELSE_13
0x40003e9	         0xfb645fc	               movzx eax, byte [rbp - 4]	       133	curl_fnmatch.c	FUNCTION_1	ELSE_13
0x40003ed	            0x89c7	                            mov edi, eax	       133	curl_fnmatch.c	FUNCTION_1	ELSE_13
0x40003ef	      0xe800000000	                          call 0x40003f4	       133	curl_fnmatch.c	FUNCTION_1	ELSE_13
0x40003f4	            0x85c0	                           test eax, eax	       133	curl_fnmatch.c	FUNCTION_1	ELSE_13
0x40003f6	            0x7407	                            je 0x40003ff	       133	curl_fnmatch.c	FUNCTION_1	ELSE_13
0x40003f8	      0xb801000000	                              mov eax, 1	       134	curl_fnmatch.c	FUNCTION_1	ELSE_13
0x40003fd	            0xeb05	                           jmp 0x4000404	       134	curl_fnmatch.c	FUNCTION_1	ELSE_13
0x40003ff	      0xb800000000	                              mov eax, 0	       135	curl_fnmatch.c	FUNCTION_1	ELSE_13
0x4000404	              0xc9	                                   leave	       136	curl_fnmatch.c	ELSE_13
0x4000405	              0xc3	                                     ret	       136	curl_fnmatch.c	ELSE_13
parsekeyword	IF,14:WHILE,0:ELSE,13:CALL,11:SWITCH,1:DO,0:FOR,1:functions,0	170
