curl_strequal	SWITCH,0:IF,0:CALL,1:FOR,0:ELSE,0:DO,0:functions,0:WHILE,0	12
0x400032a	              0x55	                                push rbp	       171	strcase.c	FUNCTION_6
0x400032b	          0x4889e5	                            mov rbp, rsp	       171	strcase.c	FUNCTION_6
0x400032e	        0x4883ec10	                           sub rsp, 0x10	       171	strcase.c	FUNCTION_6
0x4000332	        0x48897df8	                mov qword [rbp - 8], rdi	       171	strcase.c	FUNCTION_6
0x4000336	        0x488975f0	             mov qword [rbp - 0x10], rsi	       171	strcase.c	FUNCTION_6
0x400033a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       172	strcase.c	FUNCTION_6	CALL_1
0x400033e	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	strcase.c	FUNCTION_6	CALL_1
0x4000342	          0x4889d6	                            mov rsi, rdx	       172	strcase.c	FUNCTION_6	CALL_1
0x4000345	          0x4889c7	                            mov rdi, rax	       172	strcase.c	FUNCTION_6	CALL_1
0x4000348	      0xe800000000	                          call 0x400034d	       172	strcase.c	FUNCTION_6	CALL_1
0x400034d	              0xc9	                                   leave	       173	strcase.c	FUNCTION_6
0x400034e	              0xc3	                                     ret	       173	strcase.c	FUNCTION_6
Curl_safe_strcasecompare	SWITCH,0:IF,1:CALL,1:FOR,0:ELSE,0:DO,0:functions,0:WHILE,0	25
0x40001c7	              0x55	                                push rbp	       125	strcase.c	FUNCTION_3
0x40001c8	          0x4889e5	                            mov rbp, rsp	       125	strcase.c	FUNCTION_3
0x40001cb	        0x4883ec10	                           sub rsp, 0x10	       125	strcase.c	FUNCTION_3
0x40001cf	        0x48897df8	                mov qword [rbp - 8], rdi	       125	strcase.c	FUNCTION_3
0x40001d3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       125	strcase.c	FUNCTION_3
0x40001d7	      0x48837df800	                  cmp qword [rbp - 8], 0	       126	strcase.c	FUNCTION_3	IF_1
0x40001dc	            0x741c	                            je 0x40001fa	       126	strcase.c	FUNCTION_3	IF_1
0x40001de	      0x48837df000	               cmp qword [rbp - 0x10], 0	       126	strcase.c	FUNCTION_3	IF_1
0x40001e3	            0x7415	                            je 0x40001fa	       126	strcase.c	FUNCTION_3	IF_1
0x40001e5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       128	strcase.c	FUNCTION_3	CALL_1
0x40001e9	        0x488b45f8	                mov rax, qword [rbp - 8]	       128	strcase.c	FUNCTION_3	CALL_1
0x40001ed	          0x4889d6	                            mov rsi, rdx	       128	strcase.c	FUNCTION_3	CALL_1
0x40001f0	          0x4889c7	                            mov rdi, rax	       128	strcase.c	FUNCTION_3	CALL_1
0x40001f3	      0xe800000000	                          call 0x40001f8	       128	strcase.c	FUNCTION_3	CALL_1
0x40001f8	            0xeb1b	                           jmp 0x4000215	       128	strcase.c	FUNCTION_3	CALL_1
0x40001fa	      0x48837df800	                  cmp qword [rbp - 8], 0	       131	strcase.c	FUNCTION_3
0x40001ff	            0x750e	                           jne 0x400020f	       131	strcase.c	FUNCTION_3
0x4000201	      0x48837df000	               cmp qword [rbp - 0x10], 0	       131	strcase.c	FUNCTION_3
0x4000206	            0x7507	                           jne 0x400020f	       131	strcase.c	FUNCTION_3
0x4000208	      0xb801000000	                              mov eax, 1	       131	strcase.c	FUNCTION_3
0x400020d	            0xeb05	                           jmp 0x4000214	       131	strcase.c	FUNCTION_3
0x400020f	      0xb800000000	                              mov eax, 0	       131	strcase.c	FUNCTION_3
0x4000214	              0x90	                                     nop	       131	strcase.c	FUNCTION_3
0x4000215	              0xc9	                                   leave	       132	strcase.c	FUNCTION_3
0x4000216	              0xc3	                                     ret	       132	strcase.c	FUNCTION_3
curl_strnequal	SWITCH,0:IF,0:CALL,1:FOR,0:ELSE,0:DO,0:functions,0:WHILE,0	14
0x400034f	              0x55	                                push rbp	       175	strcase.c	FUNCTION_7
0x4000350	          0x4889e5	                            mov rbp, rsp	       175	strcase.c	FUNCTION_7
0x4000353	        0x4883ec18	                           sub rsp, 0x18	       175	strcase.c	FUNCTION_7
0x4000357	        0x48897df8	                mov qword [rbp - 8], rdi	       175	strcase.c	FUNCTION_7
0x400035b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       175	strcase.c	FUNCTION_7
0x400035f	        0x488955e8	             mov qword [rbp - 0x18], rdx	       175	strcase.c	FUNCTION_7
0x4000363	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       176	strcase.c	FUNCTION_7	CALL_1
0x4000367	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       176	strcase.c	FUNCTION_7	CALL_1
0x400036b	        0x488b45f8	                mov rax, qword [rbp - 8]	       176	strcase.c	FUNCTION_7	CALL_1
0x400036f	          0x4889ce	                            mov rsi, rcx	       176	strcase.c	FUNCTION_7	CALL_1
0x4000372	          0x4889c7	                            mov rdi, rax	       176	strcase.c	FUNCTION_7	CALL_1
0x4000375	      0xe800000000	                          call 0x400037a	       176	strcase.c	FUNCTION_7	CALL_1
0x400037a	              0xc9	                                   leave	       177	strcase.c	FUNCTION_7
0x400037b	              0xc3	                                     ret	       177	strcase.c	FUNCTION_7
Curl_strcasecompare	SWITCH,0:IF,1:CALL,4:FOR,0:ELSE,0:DO,0:functions,0:WHILE,1	50
0x4000136	              0x55	                                push rbp	       110	strcase.c	FUNCTION_2
0x4000137	          0x4889e5	                            mov rbp, rsp	       110	strcase.c	FUNCTION_2
0x400013a	              0x53	                                push rbx	       110	strcase.c	FUNCTION_2
0x400013b	        0x4883ec10	                           sub rsp, 0x10	       110	strcase.c	FUNCTION_2
0x400013f	        0x48897df0	             mov qword [rbp - 0x10], rdi	       110	strcase.c	FUNCTION_2
0x4000143	        0x488975e8	             mov qword [rbp - 0x18], rsi	       110	strcase.c	FUNCTION_2
0x4000147	            0xeb32	                           jmp 0x400017b	       111	strcase.c	FUNCTION_2	WHILE_1
0x4000149	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       112	strcase.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x400014d	           0xfb600	                   movzx eax, byte [rax]	       112	strcase.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x4000150	           0xfbec0	                           movsx eax, al	       112	strcase.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x4000153	            0x89c7	                            mov edi, eax	       112	strcase.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x4000155	      0xe800000000	                          call 0x400015a	       112	strcase.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x400015a	            0x89c3	                            mov ebx, eax	       112	strcase.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x400015c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       112	strcase.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x4000160	           0xfb600	                   movzx eax, byte [rax]	       112	strcase.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x4000163	           0xfbec0	                           movsx eax, al	       112	strcase.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x4000166	            0x89c7	                            mov edi, eax	       112	strcase.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x4000168	      0xe800000000	                          call 0x400016d	       112	strcase.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x400016d	            0x38c3	                              cmp bl, al	       112	strcase.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x400016f	            0x7522	                           jne 0x4000193	       112	strcase.c	FUNCTION_2	WHILE_1	IF_1	CALL_2
0x4000171	      0x488345f001	               add qword [rbp - 0x10], 1	       115	strcase.c	FUNCTION_2	WHILE_1
0x4000176	      0x488345e801	               add qword [rbp - 0x18], 1	       116	strcase.c	FUNCTION_2	WHILE_1
0x400017b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       111	strcase.c	FUNCTION_2	WHILE_1
0x400017f	           0xfb600	                   movzx eax, byte [rax]	       111	strcase.c	FUNCTION_2	WHILE_1
0x4000182	            0x84c0	                             test al, al	       111	strcase.c	FUNCTION_2	WHILE_1
0x4000184	            0x740e	                            je 0x4000194	       111	strcase.c	FUNCTION_2	WHILE_1
0x4000186	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       111	strcase.c	FUNCTION_2	WHILE_1
0x400018a	           0xfb600	                   movzx eax, byte [rax]	       111	strcase.c	FUNCTION_2	WHILE_1
0x400018d	            0x84c0	                             test al, al	       111	strcase.c	FUNCTION_2	WHILE_1
0x400018f	            0x75b8	                           jne 0x4000149	       111	strcase.c	FUNCTION_2	WHILE_1
0x4000191	            0xeb01	                           jmp 0x4000194	       111	strcase.c	FUNCTION_2	WHILE_1
0x4000193	              0x90	                                     nop	       114	strcase.c	FUNCTION_2	WHILE_1	IF_1
0x4000194	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       121	strcase.c	FUNCTION_2	CALL_4
0x4000198	           0xfb600	                   movzx eax, byte [rax]	       121	strcase.c	FUNCTION_2	CALL_4
0x400019b	           0xfbec0	                           movsx eax, al	       121	strcase.c	FUNCTION_2	CALL_4
0x400019e	            0x89c7	                            mov edi, eax	       121	strcase.c	FUNCTION_2	CALL_4
0x40001a0	      0xe800000000	                          call 0x40001a5	       121	strcase.c	FUNCTION_2	CALL_4
0x40001a5	            0x89c3	                            mov ebx, eax	       121	strcase.c	FUNCTION_2	CALL_4
0x40001a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       121	strcase.c	FUNCTION_2	CALL_4
0x40001ab	           0xfb600	                   movzx eax, byte [rax]	       121	strcase.c	FUNCTION_2	CALL_4
0x40001ae	           0xfbec0	                           movsx eax, al	       121	strcase.c	FUNCTION_2	CALL_4
0x40001b1	            0x89c7	                            mov edi, eax	       121	strcase.c	FUNCTION_2	CALL_4
0x40001b3	      0xe800000000	                          call 0x40001b8	       121	strcase.c	FUNCTION_2	CALL_4
0x40001b8	            0x38c3	                              cmp bl, al	       121	strcase.c	FUNCTION_2	CALL_4
0x40001ba	           0xf94c0	                                 sete al	       121	strcase.c	FUNCTION_2	CALL_4
0x40001bd	           0xfb6c0	                           movzx eax, al	       121	strcase.c	FUNCTION_2	CALL_4
0x40001c0	        0x4883c410	                           add rsp, 0x10	       122	strcase.c	FUNCTION_2
0x40001c4	              0x5b	                                 pop rbx	       122	strcase.c	FUNCTION_2
0x40001c5	              0x5d	                                 pop rbp	       122	strcase.c	FUNCTION_2
0x40001c6	              0xc3	                                     ret	       122	strcase.c	FUNCTION_2
Curl_raw_toupper	SWITCH,1:IF,1:CALL,0:FOR,0:ELSE,0:DO,0:functions,0:WHILE,0	14
0x4000112	              0x55	                                push rbp	        32	strcase.c	FUNCTION_1
0x4000113	          0x4889e5	                            mov rbp, rsp	        32	strcase.c	FUNCTION_1
0x4000116	            0x89f8	                            mov eax, edi	        32	strcase.c	FUNCTION_1
0x4000118	          0x8845fc	                  mov byte [rbp - 4], al	        32	strcase.c	FUNCTION_1
0x400011b	        0x807dfc60	                cmp byte [rbp - 4], 0x60	        34	strcase.c	FUNCTION_1	IF_1
0x400011f	            0x7e0f	                           jle 0x4000130	        34	strcase.c	FUNCTION_1	IF_1
0x4000121	        0x807dfc7a	                cmp byte [rbp - 4], 0x7a	        34	strcase.c	FUNCTION_1	IF_1
0x4000125	            0x7f09	                            jg 0x4000130	        34	strcase.c	FUNCTION_1	IF_1
0x4000127	         0xfb645fc	               movzx eax, byte [rbp - 4]	        35	strcase.c	FUNCTION_1	IF_1
0x400012b	          0x83e820	                           sub eax, 0x20	        35	strcase.c	FUNCTION_1	IF_1
0x400012e	            0xeb04	                           jmp 0x4000134	        35	strcase.c	FUNCTION_1	IF_1
0x4000130	         0xfb645fc	               movzx eax, byte [rbp - 4]	        93	strcase.c	FUNCTION_1
0x4000134	              0x5d	                                 pop rbp	        94	strcase.c	FUNCTION_1
0x4000135	              0xc3	                                     ret	        94	strcase.c	FUNCTION_1
Curl_strncasecompare	SWITCH,0:IF,2:CALL,4:FOR,0:ELSE,0:DO,0:functions,0:WHILE,1	58
0x4000217	              0x55	                                push rbp	       138	strcase.c	FUNCTION_4
0x4000218	          0x4889e5	                            mov rbp, rsp	       138	strcase.c	FUNCTION_4
0x400021b	              0x53	                                push rbx	       138	strcase.c	FUNCTION_4
0x400021c	        0x4883ec18	                           sub rsp, 0x18	       138	strcase.c	FUNCTION_4
0x4000220	        0x48897df0	             mov qword [rbp - 0x10], rdi	       138	strcase.c	FUNCTION_4
0x4000224	        0x488975e8	             mov qword [rbp - 0x18], rsi	       138	strcase.c	FUNCTION_4
0x4000228	        0x488955e0	             mov qword [rbp - 0x20], rdx	       138	strcase.c	FUNCTION_4
0x400022c	            0xeb37	                           jmp 0x4000265	       139	strcase.c	FUNCTION_4	WHILE_1
0x400022e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       140	strcase.c	FUNCTION_4	WHILE_1	IF_1	CALL_2
0x4000232	           0xfb600	                   movzx eax, byte [rax]	       140	strcase.c	FUNCTION_4	WHILE_1	IF_1	CALL_2
0x4000235	           0xfbec0	                           movsx eax, al	       140	strcase.c	FUNCTION_4	WHILE_1	IF_1	CALL_2
0x4000238	            0x89c7	                            mov edi, eax	       140	strcase.c	FUNCTION_4	WHILE_1	IF_1	CALL_2
0x400023a	      0xe800000000	                          call 0x400023f	       140	strcase.c	FUNCTION_4	WHILE_1	IF_1	CALL_2
0x400023f	            0x89c3	                            mov ebx, eax	       140	strcase.c	FUNCTION_4	WHILE_1	IF_1	CALL_2
0x4000241	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       140	strcase.c	FUNCTION_4	WHILE_1	IF_1	CALL_2
0x4000245	           0xfb600	                   movzx eax, byte [rax]	       140	strcase.c	FUNCTION_4	WHILE_1	IF_1	CALL_2
0x4000248	           0xfbec0	                           movsx eax, al	       140	strcase.c	FUNCTION_4	WHILE_1	IF_1	CALL_2
0x400024b	            0x89c7	                            mov edi, eax	       140	strcase.c	FUNCTION_4	WHILE_1	IF_1	CALL_2
0x400024d	      0xe800000000	                          call 0x4000252	       140	strcase.c	FUNCTION_4	WHILE_1	IF_1	CALL_2
0x4000252	            0x38c3	                              cmp bl, al	       140	strcase.c	FUNCTION_4	WHILE_1	IF_1	CALL_2
0x4000254	            0x752e	                           jne 0x4000284	       140	strcase.c	FUNCTION_4	WHILE_1	IF_1	CALL_2
0x4000256	      0x48836de001	               sub qword [rbp - 0x20], 1	       143	strcase.c	FUNCTION_4	WHILE_1
0x400025b	      0x488345f001	               add qword [rbp - 0x10], 1	       144	strcase.c	FUNCTION_4	WHILE_1
0x4000260	      0x488345e801	               add qword [rbp - 0x18], 1	       145	strcase.c	FUNCTION_4	WHILE_1
0x4000265	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       139	strcase.c	FUNCTION_4	WHILE_1
0x4000269	           0xfb600	                   movzx eax, byte [rax]	       139	strcase.c	FUNCTION_4	WHILE_1
0x400026c	            0x84c0	                             test al, al	       139	strcase.c	FUNCTION_4	WHILE_1
0x400026e	            0x7415	                            je 0x4000285	       139	strcase.c	FUNCTION_4	WHILE_1
0x4000270	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       139	strcase.c	FUNCTION_4	WHILE_1
0x4000274	           0xfb600	                   movzx eax, byte [rax]	       139	strcase.c	FUNCTION_4	WHILE_1
0x4000277	            0x84c0	                             test al, al	       139	strcase.c	FUNCTION_4	WHILE_1
0x4000279	            0x740a	                            je 0x4000285	       139	strcase.c	FUNCTION_4	WHILE_1
0x400027b	      0x48837de000	               cmp qword [rbp - 0x20], 0	       139	strcase.c	FUNCTION_4	WHILE_1
0x4000280	            0x75ac	                           jne 0x400022e	       139	strcase.c	FUNCTION_4	WHILE_1
0x4000282	            0xeb01	                           jmp 0x4000285	       139	strcase.c	FUNCTION_4	WHILE_1
0x4000284	              0x90	                                     nop	       141	strcase.c	FUNCTION_4	WHILE_1	IF_1
0x4000285	      0x48837de000	               cmp qword [rbp - 0x20], 0	       147	strcase.c	FUNCTION_4	IF_2
0x400028a	            0x7507	                           jne 0x4000293	       147	strcase.c	FUNCTION_4	IF_2
0x400028c	      0xb801000000	                              mov eax, 1	       148	strcase.c	FUNCTION_4	IF_2
0x4000291	            0xeb2c	                           jmp 0x40002bf	       148	strcase.c	FUNCTION_4	IF_2
0x4000293	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       150	strcase.c	FUNCTION_4	CALL_4
0x4000297	           0xfb600	                   movzx eax, byte [rax]	       150	strcase.c	FUNCTION_4	CALL_4
0x400029a	           0xfbec0	                           movsx eax, al	       150	strcase.c	FUNCTION_4	CALL_4
0x400029d	            0x89c7	                            mov edi, eax	       150	strcase.c	FUNCTION_4	CALL_4
0x400029f	      0xe800000000	                          call 0x40002a4	       150	strcase.c	FUNCTION_4	CALL_4
0x40002a4	            0x89c3	                            mov ebx, eax	       150	strcase.c	FUNCTION_4	CALL_4
0x40002a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       150	strcase.c	FUNCTION_4	CALL_4
0x40002aa	           0xfb600	                   movzx eax, byte [rax]	       150	strcase.c	FUNCTION_4	CALL_4
0x40002ad	           0xfbec0	                           movsx eax, al	       150	strcase.c	FUNCTION_4	CALL_4
0x40002b0	            0x89c7	                            mov edi, eax	       150	strcase.c	FUNCTION_4	CALL_4
0x40002b2	      0xe800000000	                          call 0x40002b7	       150	strcase.c	FUNCTION_4	CALL_4
0x40002b7	            0x38c3	                              cmp bl, al	       150	strcase.c	FUNCTION_4	CALL_4
0x40002b9	           0xf94c0	                                 sete al	       150	strcase.c	FUNCTION_4	CALL_4
0x40002bc	           0xfb6c0	                           movzx eax, al	       150	strcase.c	FUNCTION_4	CALL_4
0x40002bf	        0x4883c418	                           add rsp, 0x18	       151	strcase.c	FUNCTION_4
0x40002c3	              0x5b	                                 pop rbx	       151	strcase.c	FUNCTION_4
0x40002c4	              0x5d	                                 pop rbp	       151	strcase.c	FUNCTION_4
0x40002c5	              0xc3	                                     ret	       151	strcase.c	FUNCTION_4
Curl_strntoupper	SWITCH,0:IF,1:CALL,1:FOR,0:ELSE,0:DO,1:functions,0:WHILE,0	33
0x40002c6	              0x55	                                push rbp	       159	strcase.c	FUNCTION_5
0x40002c7	          0x4889e5	                            mov rbp, rsp	       159	strcase.c	FUNCTION_5
0x40002ca	              0x53	                                push rbx	       159	strcase.c	FUNCTION_5
0x40002cb	        0x4883ec18	                           sub rsp, 0x18	       159	strcase.c	FUNCTION_5
0x40002cf	        0x48897df0	             mov qword [rbp - 0x10], rdi	       159	strcase.c	FUNCTION_5
0x40002d3	        0x488975e8	             mov qword [rbp - 0x18], rsi	       159	strcase.c	FUNCTION_5
0x40002d7	        0x488955e0	             mov qword [rbp - 0x20], rdx	       159	strcase.c	FUNCTION_5
0x40002db	      0x48837de000	               cmp qword [rbp - 0x20], 0	       160	strcase.c	FUNCTION_5	IF_1
0x40002e0	            0x7440	                            je 0x4000322	       160	strcase.c	FUNCTION_5	IF_1
0x40002e2	        0x488b5df0	             mov rbx, qword [rbp - 0x10]	       164	strcase.c	FUNCTION_5	DO_1	CALL_1
0x40002e6	        0x488d4301	                      lea rax, [rbx + 1]	       164	strcase.c	FUNCTION_5	DO_1	CALL_1
0x40002ea	        0x488945f0	             mov qword [rbp - 0x10], rax	       164	strcase.c	FUNCTION_5	DO_1	CALL_1
0x40002ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       164	strcase.c	FUNCTION_5	DO_1	CALL_1
0x40002f2	           0xfb600	                   movzx eax, byte [rax]	       164	strcase.c	FUNCTION_5	DO_1	CALL_1
0x40002f5	           0xfbec0	                           movsx eax, al	       164	strcase.c	FUNCTION_5	DO_1	CALL_1
0x40002f8	            0x89c7	                            mov edi, eax	       164	strcase.c	FUNCTION_5	DO_1	CALL_1
0x40002fa	      0xe800000000	                          call 0x40002ff	       164	strcase.c	FUNCTION_5	DO_1	CALL_1
0x40002ff	            0x8803	                      mov byte [rbx], al	       164	strcase.c	FUNCTION_5	DO_1	CALL_1
0x4000301	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       165	strcase.c	FUNCTION_5	DO_1
0x4000305	        0x488d5001	                      lea rdx, [rax + 1]	       165	strcase.c	FUNCTION_5	DO_1
0x4000309	        0x488955e8	             mov qword [rbp - 0x18], rdx	       165	strcase.c	FUNCTION_5	DO_1
0x400030d	           0xfb600	                   movzx eax, byte [rax]	       165	strcase.c	FUNCTION_5	DO_1
0x4000310	            0x84c0	                             test al, al	       165	strcase.c	FUNCTION_5	DO_1
0x4000312	            0x740f	                            je 0x4000323	       165	strcase.c	FUNCTION_5	DO_1
0x4000314	      0x48836de001	               sub qword [rbp - 0x20], 1	       165	strcase.c	FUNCTION_5	DO_1
0x4000319	      0x48837de000	               cmp qword [rbp - 0x20], 0	       165	strcase.c	FUNCTION_5	DO_1
0x400031e	            0x75c2	                           jne 0x40002e2	       165	strcase.c	FUNCTION_5	DO_1
0x4000320	            0xeb01	                           jmp 0x4000323	       165	strcase.c	FUNCTION_5	DO_1
0x4000322	              0x90	                                     nop	       161	strcase.c	FUNCTION_5	IF_1
0x4000323	        0x4883c418	                           add rsp, 0x18	       166	strcase.c	FUNCTION_5
0x4000327	              0x5b	                                 pop rbx	       166	strcase.c	FUNCTION_5
0x4000328	              0x5d	                                 pop rbp	       166	strcase.c	FUNCTION_5
0x4000329	              0xc3	                                     ret	       166	strcase.c	FUNCTION_5
