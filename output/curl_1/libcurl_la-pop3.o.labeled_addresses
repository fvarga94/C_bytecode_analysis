pop3_state_servergreet_resp	IF,5:CALL,5:SWITCH,0:ELSE,1:functions,0:FOR,1:DO,0:WHILE,0	103
0x4000afa	              0x55	                                push rbp	       610	pop3.c	FUNCTION_14
0x4000afb	          0x4889e5	                            mov rbp, rsp	       610	pop3.c	FUNCTION_14
0x4000afe	        0x4883ec50	                           sub rsp, 0x50	       610	pop3.c	FUNCTION_14
0x4000b02	        0x48897db8	             mov qword [rbp - 0x48], rdi	       610	pop3.c	FUNCTION_14
0x4000b06	          0x8975b4	             mov dword [rbp - 0x4c], esi	       610	pop3.c	FUNCTION_14
0x4000b09	          0x8955b0	             mov dword [rbp - 0x50], edx	       610	pop3.c	FUNCTION_14
0x4000b0c	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       611	pop3.c	FUNCTION_14
0x4000b13	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       612	pop3.c	FUNCTION_14
0x4000b17	          0x488b00	                    mov rax, qword [rax]	       612	pop3.c	FUNCTION_14
0x4000b1a	        0x488945d8	             mov qword [rbp - 0x28], rax	       612	pop3.c	FUNCTION_14
0x4000b1e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       613	pop3.c	FUNCTION_14
0x4000b22	    0x480550060000	                          add rax, 0x650	       613	pop3.c	FUNCTION_14
0x4000b28	        0x488945e0	             mov qword [rbp - 0x20], rax	       613	pop3.c	FUNCTION_14
0x4000b2c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       614	pop3.c	FUNCTION_14
0x4000b30	    0x488b80200d00	           mov rax, qword [rax + 0xd20] 	       614	pop3.c	FUNCTION_14
0x4000b37	        0x488945e8	             mov qword [rbp - 0x18], rax	       614	pop3.c	FUNCTION_14
0x4000b3b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       615	pop3.c	FUNCTION_14	CALL_1
0x4000b3f	          0x4889c7	                            mov rdi, rax	       615	pop3.c	FUNCTION_14	CALL_1
0x4000b42	      0xe800000000	                          call 0x4000b47	       615	pop3.c	FUNCTION_14	CALL_1
0x4000b47	        0x488945f0	             mov qword [rbp - 0x10], rax	       615	pop3.c	FUNCTION_14	CALL_1
0x4000b4b	        0x837db42b	           cmp dword [rbp - 0x4c], 0x2b 	       620	pop3.c	FUNCTION_14	IF_1
0x4000b4f	            0x7424	                            je 0x4000b75	       620	pop3.c	FUNCTION_14	IF_1
0x4000b51	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       621	pop3.c	FUNCTION_14	IF_1	CALL_2
0x4000b55	    0x488d35000000	                   lea rsi, [0x04000b5c]	       621	pop3.c	FUNCTION_14	IF_1	CALL_2
0x4000b5c	          0x4889c7	                            mov rdi, rax	       621	pop3.c	FUNCTION_14	IF_1	CALL_2
0x4000b5f	      0xb800000000	                              mov eax, 0	       621	pop3.c	FUNCTION_14	IF_1	CALL_2
0x4000b64	      0xe800000000	                          call 0x4000b69	       621	pop3.c	FUNCTION_14	IF_1	CALL_2
0x4000b69	    0xc745cc080000	               mov dword [rbp - 0x34], 8	       622	pop3.c	FUNCTION_14	IF_1
0x4000b70	      0xe91f010000	                           jmp 0x4000c94	       622	pop3.c	FUNCTION_14	IF_1
0x4000b75	      0x48837df003	               cmp qword [rbp - 0x10], 3	       626	pop3.c	FUNCTION_14	ELSE_1	IF_2
0x4000b7a	     0xf8605010000	                           jbe 0x4000c85	       626	pop3.c	FUNCTION_14	ELSE_1	IF_2
0x4000b80	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       626	pop3.c	FUNCTION_14	ELSE_1	IF_2
0x4000b84	        0x488d50fe	                      lea rdx, [rax - 2]	       626	pop3.c	FUNCTION_14	ELSE_1	IF_2
0x4000b88	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       626	pop3.c	FUNCTION_14	ELSE_1	IF_2
0x4000b8c	          0x4801d0	                            add rax, rdx	       626	pop3.c	FUNCTION_14	ELSE_1	IF_2
0x4000b8f	           0xfb600	                   movzx eax, byte [rax]	       626	pop3.c	FUNCTION_14	ELSE_1	IF_2
0x4000b92	            0x3c3e	                            cmp al, 0x3e	       626	pop3.c	FUNCTION_14	ELSE_1	IF_2
0x4000b94	     0xf85eb000000	                           jne 0x4000c85	       626	pop3.c	FUNCTION_14	ELSE_1	IF_2
0x4000b9a	    0x48c745d00300	               mov qword [rbp - 0x30], 3	       628	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1
0x4000ba2	      0xe9c6000000	                           jmp 0x4000c6d	       628	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1
0x4000ba7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4000bab	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4000baf	          0x4801d0	                            add rax, rdx	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4000bb2	           0xfb600	                   movzx eax, byte [rax]	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4000bb5	            0x3c3c	                            cmp al, 0x3c	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4000bb7	     0xf85ab000000	                           jne 0x4000c68	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4000bbd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       631	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4000bc1	        0x482b45d0	             sub rax, qword [rbp - 0x30]	       631	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4000bc5	        0x4883e801	                              sub rax, 1	       631	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4000bc9	        0x488945f8	                mov qword [rbp - 8], rax	       631	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4000bcd	      0x48837df800	                  cmp qword [rbp - 8], 0	       632	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	IF_4
0x4000bd2	     0xf84a9000000	                            je 0x4000c81	       632	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	IF_4
0x4000bd8	    0x488b05000000	            mov rax, qword [0x04000bdf] 	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4000bdf	          0x488b00	                    mov rax, qword [rax]	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4000be2	        0x488b55f8	                mov rdx, qword [rbp - 8]	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4000be6	        0x4883c201	                              add rdx, 1	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4000bea	          0x4889d6	                            mov rsi, rdx	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4000bed	      0xbf01000000	                              mov edi, 1	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4000bf2	            0xffd0	                                call rax	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4000bf4	          0x4889c2	                            mov rdx, rax	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4000bf7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4000bfb	    0x488990b00000	             mov qword [rax + 0xb0], rdx	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4000c02	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       638	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	IF_5
0x4000c06	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       638	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	IF_5
0x4000c0d	          0x4885c0	                           test rax, rax	       638	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	IF_5
0x4000c10	            0x7472	                            je 0x4000c84	       638	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	IF_5
0x4000c12	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       642	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_4
0x4000c16	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       642	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_4
0x4000c1a	        0x488d0c02	                    lea rcx, [rdx + rax]	       642	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_4
0x4000c1e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       642	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_4
0x4000c22	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       642	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_4
0x4000c29	        0x488b55f8	                mov rdx, qword [rbp - 8]	       642	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_4
0x4000c2d	          0x4889ce	                            mov rsi, rcx	       642	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_4
0x4000c30	          0x4889c7	                            mov rdi, rax	       642	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_4
0x4000c33	      0xe800000000	                          call 0x4000c38	       642	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_4
0x4000c38	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       643	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4000c3c	    0x488b90b00000	            mov rdx, qword [rax + 0xb0] 	       643	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4000c43	        0x488b45f8	                mov rax, qword [rbp - 8]	       643	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4000c47	          0x4801d0	                            add rax, rdx	       643	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4000c4a	          0xc60000	                       mov byte [rax], 0	       643	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4000c4d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       646	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4000c51	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	       646	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4000c57	          0x83c802	                               or eax, 2	       646	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4000c5a	            0x89c2	                            mov edx, eax	       646	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4000c5c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       646	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4000c60	    0x8990a8000000	             mov dword [rax + 0xa8], edx	       646	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4000c66	            0xeb1d	                           jmp 0x4000c85	       647	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4000c68	      0x488345d001	               add qword [rbp - 0x30], 1	       628	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1
0x4000c6d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       628	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1
0x4000c71	        0x4883e802	                              sub rax, 2	       628	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1
0x4000c75	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       628	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1
0x4000c79	     0xf8728ffffff	                            ja 0x4000ba7	       628	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1
0x4000c7f	            0xeb04	                           jmp 0x4000c85	       628	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1
0x4000c81	              0x90	                                     nop	       633	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	IF_4
0x4000c82	            0xeb01	                           jmp 0x4000c85	       633	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	IF_4
0x4000c84	              0x90	                                     nop	       639	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	IF_5
0x4000c85	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       652	pop3.c	FUNCTION_14	ELSE_1	CALL_5
0x4000c89	          0x4889c7	                            mov rdi, rax	       652	pop3.c	FUNCTION_14	ELSE_1	CALL_5
0x4000c8c	      0xe8d6f6ffff	              call sym.pop3_perform_capa	       652	pop3.c	FUNCTION_14	ELSE_1	CALL_5
0x4000c91	          0x8945cc	             mov dword [rbp - 0x34], eax	       652	pop3.c	FUNCTION_14	ELSE_1	CALL_5
0x4000c94	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       655	pop3.c	FUNCTION_14
0x4000c97	              0xc9	                                   leave	       656	pop3.c	FUNCTION_14
0x4000c98	              0xc3	                                     ret	       656	pop3.c	FUNCTION_14
pop3_parse_url_options	IF,4:CALL,3:SWITCH,1:ELSE,1:functions,0:FOR,0:DO,0:WHILE,3	114
0x4001ced	              0x55	                                push rbp	      1327	pop3.c	FUNCTION_36
0x4001cee	          0x4889e5	                            mov rbp, rsp	      1327	pop3.c	FUNCTION_36
0x4001cf1	        0x4883ec40	                           sub rsp, 0x40	      1327	pop3.c	FUNCTION_36
0x4001cf5	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1327	pop3.c	FUNCTION_36
0x4001cf9	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1328	pop3.c	FUNCTION_36
0x4001d00	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1329	pop3.c	FUNCTION_36
0x4001d04	    0x480550060000	                          add rax, 0x650	      1329	pop3.c	FUNCTION_36
0x4001d0a	        0x488945e8	             mov qword [rbp - 0x18], rax	      1329	pop3.c	FUNCTION_36
0x4001d0e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1330	pop3.c	FUNCTION_36
0x4001d12	    0x488b80200200	           mov rax, qword [rax + 0x220] 	      1330	pop3.c	FUNCTION_36
0x4001d19	        0x488945e0	             mov qword [rbp - 0x20], rax	      1330	pop3.c	FUNCTION_36
0x4001d1d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1332	pop3.c	FUNCTION_36
0x4001d21	    0xc680a0000000	                mov byte [rax + 0xa0], 1	      1332	pop3.c	FUNCTION_36
0x4001d28	      0xe906010000	                           jmp 0x4001e33	      1334	pop3.c	FUNCTION_36	WHILE_1
0x4001d2d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1335	pop3.c	FUNCTION_36	WHILE_1
0x4001d31	        0x488945f0	             mov qword [rbp - 0x10], rax	      1335	pop3.c	FUNCTION_36	WHILE_1
0x4001d35	            0xeb05	                           jmp 0x4001d3c	      1338	pop3.c	FUNCTION_36	WHILE_1	WHILE_2
0x4001d37	      0x488345e001	               add qword [rbp - 0x20], 1	      1339	pop3.c	FUNCTION_36	WHILE_1	WHILE_2
0x4001d3c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1338	pop3.c	FUNCTION_36	WHILE_1	WHILE_2
0x4001d40	           0xfb600	                   movzx eax, byte [rax]	      1338	pop3.c	FUNCTION_36	WHILE_1	WHILE_2
0x4001d43	            0x84c0	                             test al, al	      1338	pop3.c	FUNCTION_36	WHILE_1	WHILE_2
0x4001d45	            0x740b	                            je 0x4001d52	      1338	pop3.c	FUNCTION_36	WHILE_1	WHILE_2
0x4001d47	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1338	pop3.c	FUNCTION_36	WHILE_1	WHILE_2
0x4001d4b	           0xfb600	                   movzx eax, byte [rax]	      1338	pop3.c	FUNCTION_36	WHILE_1	WHILE_2
0x4001d4e	            0x3c3d	                            cmp al, 0x3d	      1338	pop3.c	FUNCTION_36	WHILE_1	WHILE_2
0x4001d50	            0x75e5	                           jne 0x4001d37	      1338	pop3.c	FUNCTION_36	WHILE_1	WHILE_2
0x4001d52	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1341	pop3.c	FUNCTION_36	WHILE_1
0x4001d56	        0x4883c001	                              add rax, 1	      1341	pop3.c	FUNCTION_36	WHILE_1
0x4001d5a	        0x488945f8	                mov qword [rbp - 8], rax	      1341	pop3.c	FUNCTION_36	WHILE_1
0x4001d5e	            0xeb05	                           jmp 0x4001d65	      1343	pop3.c	FUNCTION_36	WHILE_1	WHILE_3
0x4001d60	      0x488345e001	               add qword [rbp - 0x20], 1	      1344	pop3.c	FUNCTION_36	WHILE_1	WHILE_3
0x4001d65	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1343	pop3.c	FUNCTION_36	WHILE_1	WHILE_3
0x4001d69	           0xfb600	                   movzx eax, byte [rax]	      1343	pop3.c	FUNCTION_36	WHILE_1	WHILE_3
0x4001d6c	            0x84c0	                             test al, al	      1343	pop3.c	FUNCTION_36	WHILE_1	WHILE_3
0x4001d6e	            0x740b	                            je 0x4001d7b	      1343	pop3.c	FUNCTION_36	WHILE_1	WHILE_3
0x4001d70	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1343	pop3.c	FUNCTION_36	WHILE_1	WHILE_3
0x4001d74	           0xfb600	                   movzx eax, byte [rax]	      1343	pop3.c	FUNCTION_36	WHILE_1	WHILE_3
0x4001d77	            0x3c3b	                            cmp al, 0x3b	      1343	pop3.c	FUNCTION_36	WHILE_1	WHILE_3
0x4001d79	            0x75e5	                           jne 0x4001d60	      1343	pop3.c	FUNCTION_36	WHILE_1	WHILE_3
0x4001d7b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1346	pop3.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4001d7f	      0xba05000000	                              mov edx, 5	      1346	pop3.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4001d84	    0x488d35000000	                   lea rsi, [0x04001d8b]	      1346	pop3.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4001d8b	          0x4889c7	                            mov rdi, rax	      1346	pop3.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4001d8e	      0xe800000000	                          call 0x4001d93	      1346	pop3.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4001d93	            0x85c0	                           test eax, eax	      1346	pop3.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4001d95	     0xf8481000000	                            je 0x4001e1c	      1346	pop3.c	FUNCTION_36	WHILE_1	IF_1	CALL_1
0x4001d9b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1348	pop3.c	FUNCTION_36	WHILE_1	IF_1
0x4001d9f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1348	pop3.c	FUNCTION_36	WHILE_1	IF_1
0x4001da3	          0x4829c2	                            sub rdx, rax	      1348	pop3.c	FUNCTION_36	WHILE_1	IF_1
0x4001da6	          0x4889d0	                            mov rax, rdx	      1348	pop3.c	FUNCTION_36	WHILE_1	IF_1
0x4001da9	          0x4889c2	                            mov rdx, rax	      1347	pop3.c	FUNCTION_36	WHILE_1	IF_1	CALL_2
0x4001dac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1347	pop3.c	FUNCTION_36	WHILE_1	IF_1	CALL_2
0x4001db0	    0x488d88880000	                   lea rcx, [rax + 0x88]	      1347	pop3.c	FUNCTION_36	WHILE_1	IF_1	CALL_2
0x4001db7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1347	pop3.c	FUNCTION_36	WHILE_1	IF_1	CALL_2
0x4001dbb	          0x4889c6	                            mov rsi, rax	      1347	pop3.c	FUNCTION_36	WHILE_1	IF_1	CALL_2
0x4001dbe	          0x4889cf	                            mov rdi, rcx	      1347	pop3.c	FUNCTION_36	WHILE_1	IF_1	CALL_2
0x4001dc1	      0xe800000000	                          call 0x4001dc6	      1347	pop3.c	FUNCTION_36	WHILE_1	IF_1	CALL_2
0x4001dc6	          0x8945dc	             mov dword [rbp - 0x24], eax	      1347	pop3.c	FUNCTION_36	WHILE_1	IF_1	CALL_2
0x4001dc9	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1350	pop3.c	FUNCTION_36	WHILE_1	IF_1	IF_2	CALL_3
0x4001dcd	            0x7454	                            je 0x4001e23	      1350	pop3.c	FUNCTION_36	WHILE_1	IF_1	IF_2	CALL_3
0x4001dcf	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1350	pop3.c	FUNCTION_36	WHILE_1	IF_1	IF_2	CALL_3
0x4001dd3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1350	pop3.c	FUNCTION_36	WHILE_1	IF_1	IF_2	CALL_3
0x4001dd7	          0x4829c2	                            sub rdx, rax	      1350	pop3.c	FUNCTION_36	WHILE_1	IF_1	IF_2	CALL_3
0x4001dda	          0x4889d0	                            mov rax, rdx	      1350	pop3.c	FUNCTION_36	WHILE_1	IF_1	IF_2	CALL_3
0x4001ddd	          0x4889c2	                            mov rdx, rax	      1350	pop3.c	FUNCTION_36	WHILE_1	IF_1	IF_2	CALL_3
0x4001de0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1350	pop3.c	FUNCTION_36	WHILE_1	IF_1	IF_2	CALL_3
0x4001de4	    0x488d35000000	                   lea rsi, [0x04001deb]	      1350	pop3.c	FUNCTION_36	WHILE_1	IF_1	IF_2	CALL_3
0x4001deb	          0x4889c7	                            mov rdi, rax	      1350	pop3.c	FUNCTION_36	WHILE_1	IF_1	IF_2	CALL_3
0x4001dee	      0xe800000000	                          call 0x4001df3	      1350	pop3.c	FUNCTION_36	WHILE_1	IF_1	IF_2	CALL_3
0x4001df3	            0x85c0	                           test eax, eax	      1350	pop3.c	FUNCTION_36	WHILE_1	IF_1	IF_2	CALL_3
0x4001df5	            0x742c	                            je 0x4001e23	      1350	pop3.c	FUNCTION_36	WHILE_1	IF_1	IF_2	CALL_3
0x4001df7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1351	pop3.c	FUNCTION_36	WHILE_1	IF_1	IF_2
0x4001dfb	    0xc780ac000000	               mov dword [rax + 0xac], 2	      1351	pop3.c	FUNCTION_36	WHILE_1	IF_1	IF_2
0x4001e05	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1352	pop3.c	FUNCTION_36	WHILE_1	IF_1	IF_2
0x4001e09	    0xc78098000000	               mov dword [rax + 0x98], 0	      1352	pop3.c	FUNCTION_36	WHILE_1	IF_1	IF_2
0x4001e13	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1353	pop3.c	FUNCTION_36	WHILE_1	IF_1	IF_2
0x4001e1a	            0xeb07	                           jmp 0x4001e23	      1353	pop3.c	FUNCTION_36	WHILE_1	IF_1	IF_2
0x4001e1c	    0xc745dc030000	               mov dword [rbp - 0x24], 3	      1357	pop3.c	FUNCTION_36	WHILE_1	ELSE_1
0x4001e23	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1359	pop3.c	FUNCTION_36	WHILE_1	IF_3
0x4001e27	           0xfb600	                   movzx eax, byte [rax]	      1359	pop3.c	FUNCTION_36	WHILE_1	IF_3
0x4001e2a	            0x3c3b	                            cmp al, 0x3b	      1359	pop3.c	FUNCTION_36	WHILE_1	IF_3
0x4001e2c	            0x7505	                           jne 0x4001e33	      1359	pop3.c	FUNCTION_36	WHILE_1	IF_3
0x4001e2e	      0x488345e001	               add qword [rbp - 0x20], 1	      1360	pop3.c	FUNCTION_36	WHILE_1	IF_3
0x4001e33	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1334	pop3.c	FUNCTION_36	WHILE_1
0x4001e37	            0x7516	                           jne 0x4001e4f	      1334	pop3.c	FUNCTION_36	WHILE_1
0x4001e39	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1334	pop3.c	FUNCTION_36	WHILE_1
0x4001e3e	            0x740f	                            je 0x4001e4f	      1334	pop3.c	FUNCTION_36	WHILE_1
0x4001e40	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1334	pop3.c	FUNCTION_36	WHILE_1
0x4001e44	           0xfb600	                   movzx eax, byte [rax]	      1334	pop3.c	FUNCTION_36	WHILE_1
0x4001e47	            0x84c0	                             test al, al	      1334	pop3.c	FUNCTION_36	WHILE_1
0x4001e49	     0xf85defeffff	                           jne 0x4001d2d	      1334	pop3.c	FUNCTION_36	WHILE_1
0x4001e4f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1363	pop3.c	FUNCTION_36	IF_4
0x4001e53	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1363	pop3.c	FUNCTION_36	IF_4
0x4001e59	          0x83f802	                              cmp eax, 2	      1363	pop3.c	FUNCTION_36	IF_4
0x4001e5c	            0x7444	                            je 0x4001ea2	      1363	pop3.c	FUNCTION_36	IF_4
0x4001e5e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1364	pop3.c	FUNCTION_36	IF_4	SWITCH_1
0x4001e62	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      1364	pop3.c	FUNCTION_36	IF_4	SWITCH_1
0x4001e68	            0x85c0	                           test eax, eax	      1364	pop3.c	FUNCTION_36	IF_4	SWITCH_1
0x4001e6a	            0x7407	                            je 0x4001e73	      1364	pop3.c	FUNCTION_36	IF_4	SWITCH_1
0x4001e6c	          0x83f8df	             cmp eax, 0xffffffffffffffdf	      1364	pop3.c	FUNCTION_36	IF_4	SWITCH_1
0x4001e6f	            0x7412	                            je 0x4001e83	      1364	pop3.c	FUNCTION_36	IF_4	SWITCH_1
0x4001e71	            0xeb20	                           jmp 0x4001e93	      1364	pop3.c	FUNCTION_36	IF_4	SWITCH_1
0x4001e73	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1366	pop3.c	FUNCTION_36	IF_4	SWITCH_1
0x4001e77	    0xc780ac000000	               mov dword [rax + 0xac], 0	      1366	pop3.c	FUNCTION_36	IF_4	SWITCH_1
0x4001e81	            0xeb1f	                           jmp 0x4001ea2	      1367	pop3.c	FUNCTION_36	IF_4	SWITCH_1
0x4001e83	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1369	pop3.c	FUNCTION_36	IF_4	SWITCH_1
0x4001e87	    0xc780ac000000	     mov dword [rax + 0xac], 0xffffffff 	      1369	pop3.c	FUNCTION_36	IF_4	SWITCH_1
0x4001e91	            0xeb0f	                           jmp 0x4001ea2	      1370	pop3.c	FUNCTION_36	IF_4	SWITCH_1
0x4001e93	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1372	pop3.c	FUNCTION_36	IF_4	SWITCH_1
0x4001e97	    0xc780ac000000	               mov dword [rax + 0xac], 4	      1372	pop3.c	FUNCTION_36	IF_4	SWITCH_1
0x4001ea1	              0x90	                                     nop	      1373	pop3.c	FUNCTION_36	IF_4	SWITCH_1
0x4001ea2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1376	pop3.c	FUNCTION_36
0x4001ea5	              0xc9	                                   leave	      1377	pop3.c	FUNCTION_36
0x4001ea6	              0xc3	                                     ret	      1377	pop3.c	FUNCTION_36
pop3_endofresp	IF,5:CALL,4:SWITCH,0:ELSE,1:functions,0:FOR,0:DO,0:WHILE,0	70
0x400013a	              0x55	                                push rbp	       198	pop3.c	FUNCTION_1
0x400013b	          0x4889e5	                            mov rbp, rsp	       198	pop3.c	FUNCTION_1
0x400013e	        0x4883ec30	                           sub rsp, 0x30	       198	pop3.c	FUNCTION_1
0x4000142	        0x48897de8	             mov qword [rbp - 0x18], rdi	       198	pop3.c	FUNCTION_1
0x4000146	        0x488975e0	             mov qword [rbp - 0x20], rsi	       198	pop3.c	FUNCTION_1
0x400014a	        0x488955d8	             mov qword [rbp - 0x28], rdx	       198	pop3.c	FUNCTION_1
0x400014e	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       198	pop3.c	FUNCTION_1
0x4000152	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       199	pop3.c	FUNCTION_1
0x4000156	    0x480550060000	                          add rax, 0x650	       199	pop3.c	FUNCTION_1
0x400015c	        0x488945f8	                mov qword [rbp - 8], rax	       199	pop3.c	FUNCTION_1
0x4000160	      0x48837dd803	               cmp qword [rbp - 0x28], 3	       202	pop3.c	FUNCTION_1	IF_1	CALL_1
0x4000165	            0x7630	                           jbe 0x4000197	       202	pop3.c	FUNCTION_1	IF_1	CALL_1
0x4000167	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       202	pop3.c	FUNCTION_1	IF_1	CALL_1
0x400016b	      0xba04000000	                              mov edx, 4	       202	pop3.c	FUNCTION_1	IF_1	CALL_1
0x4000170	          0x4889c6	                            mov rsi, rax	       202	pop3.c	FUNCTION_1	IF_1	CALL_1
0x4000173	    0x488d3d000000	                   lea rdi, [0x0400017a]	       202	pop3.c	FUNCTION_1	IF_1	CALL_1
0x400017a	      0xe800000000	                          call 0x400017f	       202	pop3.c	FUNCTION_1	IF_1	CALL_1
0x400017f	            0x85c0	                           test eax, eax	       202	pop3.c	FUNCTION_1	IF_1	CALL_1
0x4000181	            0x7514	                           jne 0x4000197	       202	pop3.c	FUNCTION_1	IF_1	CALL_1
0x4000183	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       203	pop3.c	FUNCTION_1	IF_1
0x4000187	    0xc7002d000000	                   mov dword [rax], 0x2d	       203	pop3.c	FUNCTION_1	IF_1
0x400018d	      0xb801000000	                              mov eax, 1	       205	pop3.c	FUNCTION_1	IF_1
0x4000192	      0xe9ab000000	                           jmp 0x4000242	       205	pop3.c	FUNCTION_1	IF_1
0x4000197	        0x488b45f8	                mov rax, qword [rbp - 8]	       209	pop3.c	FUNCTION_1	IF_2
0x400019b	          0x8b4070	            mov eax, dword [rax + 0x70] 	       209	pop3.c	FUNCTION_1	IF_2
0x400019e	          0x83f802	                              cmp eax, 2	       209	pop3.c	FUNCTION_1	IF_2
0x40001a1	            0x7539	                           jne 0x40001dc	       209	pop3.c	FUNCTION_1	IF_2
0x40001a3	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       211	pop3.c	FUNCTION_1	IF_2	IF_3	CALL_2
0x40001a8	            0x7421	                            je 0x40001cb	       211	pop3.c	FUNCTION_1	IF_2	IF_3	CALL_2
0x40001aa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       211	pop3.c	FUNCTION_1	IF_2	IF_3	CALL_2
0x40001ae	           0xfb610	                   movzx edx, byte [rax]	       211	pop3.c	FUNCTION_1	IF_2	IF_3	CALL_2
0x40001b1	    0x488d05000000	                   lea rax, [0x040001b8]	       211	pop3.c	FUNCTION_1	IF_2	IF_3	CALL_2
0x40001b8	           0xfb600	                   movzx eax, byte [rax]	       211	pop3.c	FUNCTION_1	IF_2	IF_3	CALL_2
0x40001bb	            0x38c2	                              cmp dl, al	       211	pop3.c	FUNCTION_1	IF_2	IF_3	CALL_2
0x40001bd	            0x750c	                           jne 0x40001cb	       211	pop3.c	FUNCTION_1	IF_2	IF_3	CALL_2
0x40001bf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       213	pop3.c	FUNCTION_1	IF_2	IF_3
0x40001c3	    0xc7002b000000	                   mov dword [rax], 0x2b	       213	pop3.c	FUNCTION_1	IF_2	IF_3
0x40001c9	            0xeb0a	                           jmp 0x40001d5	       213	pop3.c	FUNCTION_1	IF_2	IF_3
0x40001cb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       216	pop3.c	FUNCTION_1	IF_2	ELSE_1
0x40001cf	    0xc7002a000000	                   mov dword [rax], 0x2a	       216	pop3.c	FUNCTION_1	IF_2	ELSE_1
0x40001d5	      0xb801000000	                              mov eax, 1	       218	pop3.c	FUNCTION_1	IF_2	ELSE_1
0x40001da	            0xeb66	                           jmp 0x4000242	       218	pop3.c	FUNCTION_1	IF_2	ELSE_1
0x40001dc	      0x48837dd802	               cmp qword [rbp - 0x28], 2	       222	pop3.c	FUNCTION_1	ELSE_1	IF_4	CALL_3
0x40001e1	            0x762d	                           jbe 0x4000210	       222	pop3.c	FUNCTION_1	ELSE_1	IF_4	CALL_3
0x40001e3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       222	pop3.c	FUNCTION_1	ELSE_1	IF_4	CALL_3
0x40001e7	      0xba03000000	                              mov edx, 3	       222	pop3.c	FUNCTION_1	ELSE_1	IF_4	CALL_3
0x40001ec	          0x4889c6	                            mov rsi, rax	       222	pop3.c	FUNCTION_1	ELSE_1	IF_4	CALL_3
0x40001ef	    0x488d3d000000	                   lea rdi, [0x040001f6]	       222	pop3.c	FUNCTION_1	ELSE_1	IF_4	CALL_3
0x40001f6	      0xe800000000	                          call 0x40001fb	       222	pop3.c	FUNCTION_1	ELSE_1	IF_4	CALL_3
0x40001fb	            0x85c0	                           test eax, eax	       222	pop3.c	FUNCTION_1	ELSE_1	IF_4	CALL_3
0x40001fd	            0x7511	                           jne 0x4000210	       222	pop3.c	FUNCTION_1	ELSE_1	IF_4	CALL_3
0x40001ff	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       223	pop3.c	FUNCTION_1	ELSE_1	IF_4
0x4000203	    0xc7002b000000	                   mov dword [rax], 0x2b	       223	pop3.c	FUNCTION_1	ELSE_1	IF_4
0x4000209	      0xb801000000	                              mov eax, 1	       225	pop3.c	FUNCTION_1	ELSE_1	IF_4
0x400020e	            0xeb32	                           jmp 0x4000242	       225	pop3.c	FUNCTION_1	ELSE_1	IF_4
0x4000210	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       229	pop3.c	FUNCTION_1	IF_5	CALL_4
0x4000215	            0x7426	                            je 0x400023d	       229	pop3.c	FUNCTION_1	IF_5	CALL_4
0x4000217	    0x488d05000000	                   lea rax, [0x0400021e]	       229	pop3.c	FUNCTION_1	IF_5	CALL_4
0x400021e	           0xfb610	                   movzx edx, byte [rax]	       229	pop3.c	FUNCTION_1	IF_5	CALL_4
0x4000221	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       229	pop3.c	FUNCTION_1	IF_5	CALL_4
0x4000225	           0xfb600	                   movzx eax, byte [rax]	       229	pop3.c	FUNCTION_1	IF_5	CALL_4
0x4000228	            0x38c2	                              cmp dl, al	       229	pop3.c	FUNCTION_1	IF_5	CALL_4
0x400022a	            0x7511	                           jne 0x400023d	       229	pop3.c	FUNCTION_1	IF_5	CALL_4
0x400022c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       230	pop3.c	FUNCTION_1	IF_5
0x4000230	    0xc7002a000000	                   mov dword [rax], 0x2a	       230	pop3.c	FUNCTION_1	IF_5
0x4000236	      0xb801000000	                              mov eax, 1	       232	pop3.c	FUNCTION_1	IF_5
0x400023b	            0xeb05	                           jmp 0x4000242	       232	pop3.c	FUNCTION_1	IF_5
0x400023d	      0xb800000000	                              mov eax, 0	       235	pop3.c	FUNCTION_1
0x4000242	              0xc9	                                   leave	       236	pop3.c	FUNCTION_1
0x4000243	              0xc3	                                     ret	       236	pop3.c	FUNCTION_1
pop3_perform_user	IF,2:CALL,3:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	41
0x40004d0	              0x55	                                push rbp	       386	pop3.c	FUNCTION_7
0x40004d1	          0x4889e5	                            mov rbp, rsp	       386	pop3.c	FUNCTION_7
0x40004d4	        0x4883ec20	                           sub rsp, 0x20	       386	pop3.c	FUNCTION_7
0x40004d8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       386	pop3.c	FUNCTION_7
0x40004dc	    0xc745fc000000	                  mov dword [rbp - 4], 0	       387	pop3.c	FUNCTION_7
0x40004e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       391	pop3.c	FUNCTION_7	IF_1
0x40004e7	     0xfb680a00300	          movzx eax, byte [rax + 0x3a0] 	       391	pop3.c	FUNCTION_7	IF_1
0x40004ee	          0x83f001	                              xor eax, 1	       391	pop3.c	FUNCTION_7	IF_1
0x40004f1	            0x84c0	                             test al, al	       391	pop3.c	FUNCTION_7	IF_1
0x40004f3	            0x7416	                            je 0x400050b	       391	pop3.c	FUNCTION_7	IF_1
0x40004f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       392	pop3.c	FUNCTION_7	IF_1	CALL_1
0x40004f9	      0xbe00000000	                              mov esi, 0	       392	pop3.c	FUNCTION_7	IF_1	CALL_1
0x40004fe	          0x4889c7	                            mov rdi, rax	       392	pop3.c	FUNCTION_7	IF_1	CALL_1
0x4000501	      0xe83bfeffff	                          call sym.state	       392	pop3.c	FUNCTION_7	IF_1	CALL_1
0x4000506	          0x8b45fc	                mov eax, dword [rbp - 4]	       394	pop3.c	FUNCTION_7	IF_1
0x4000509	            0xeb63	                           jmp 0x400056e	       394	pop3.c	FUNCTION_7	IF_1
0x400050b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       399	pop3.c	FUNCTION_7
0x400050f	    0x488b80100200	           mov rax, qword [rax + 0x210] 	       399	pop3.c	FUNCTION_7
0x4000516	          0x4885c0	                           test rax, rax	       398	pop3.c	FUNCTION_7	CALL_2
0x4000519	            0x740d	                            je 0x4000528	       398	pop3.c	FUNCTION_7	CALL_2
0x400051b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       398	pop3.c	FUNCTION_7	CALL_2
0x400051f	    0x488b80100200	           mov rax, qword [rax + 0x210] 	       398	pop3.c	FUNCTION_7	CALL_2
0x4000526	            0xeb07	                           jmp 0x400052f	       398	pop3.c	FUNCTION_7	CALL_2
0x4000528	    0x488d05000000	                   lea rax, [0x0400052f]	       398	pop3.c	FUNCTION_7	CALL_2
0x400052f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       398	pop3.c	FUNCTION_7	CALL_2
0x4000533	    0x488d8a500600	                  lea rcx, [rdx + 0x650]	       398	pop3.c	FUNCTION_7	CALL_2
0x400053a	          0x4889c2	                            mov rdx, rax	       398	pop3.c	FUNCTION_7	CALL_2
0x400053d	    0x488d35000000	                   lea rsi, [0x04000544]	       398	pop3.c	FUNCTION_7	CALL_2
0x4000544	          0x4889cf	                            mov rdi, rcx	       398	pop3.c	FUNCTION_7	CALL_2
0x4000547	      0xb800000000	                              mov eax, 0	       398	pop3.c	FUNCTION_7	CALL_2
0x400054c	      0xe800000000	                          call 0x4000551	       398	pop3.c	FUNCTION_7	CALL_2
0x4000551	          0x8945fc	                mov dword [rbp - 4], eax	       398	pop3.c	FUNCTION_7	CALL_2
0x4000554	        0x837dfc00	                  cmp dword [rbp - 4], 0	       400	pop3.c	FUNCTION_7	IF_2
0x4000558	            0x7511	                           jne 0x400056b	       400	pop3.c	FUNCTION_7	IF_2
0x400055a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       401	pop3.c	FUNCTION_7	CALL_3
0x400055e	      0xbe07000000	                              mov esi, 7	       401	pop3.c	FUNCTION_7	CALL_3
0x4000563	          0x4889c7	                            mov rdi, rax	       401	pop3.c	FUNCTION_7	CALL_3
0x4000566	      0xe8d6fdffff	                          call sym.state	       401	pop3.c	FUNCTION_7	CALL_3
0x400056b	          0x8b45fc	                mov eax, dword [rbp - 4]	       403	pop3.c	FUNCTION_7
0x400056e	              0xc9	                                   leave	       404	pop3.c	FUNCTION_7
0x400056f	              0xc3	                                     ret	       404	pop3.c	FUNCTION_7
pop3_state_auth_resp	IF,3:CALL,5:SWITCH,1:ELSE,2:functions,0:FOR,0:DO,0:WHILE,0	77
0x4001027	              0x55	                                push rbp	       776	pop3.c	FUNCTION_17
0x4001028	          0x4889e5	                            mov rbp, rsp	       776	pop3.c	FUNCTION_17
0x400102b	        0x4883ec30	                           sub rsp, 0x30	       776	pop3.c	FUNCTION_17
0x400102f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       776	pop3.c	FUNCTION_17
0x4001033	          0x8975d4	             mov dword [rbp - 0x2c], esi	       776	pop3.c	FUNCTION_17
0x4001036	          0x8955d0	             mov dword [rbp - 0x30], edx	       776	pop3.c	FUNCTION_17
0x4001039	    0x64488b042528	                mov rax, qword fs:[0x28]	       776	pop3.c	FUNCTION_17
0x4001042	        0x488945f8	                mov qword [rbp - 8], rax	       776	pop3.c	FUNCTION_17
0x4001046	            0x31c0	                            xor eax, eax	       776	pop3.c	FUNCTION_17
0x4001048	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       777	pop3.c	FUNCTION_17
0x400104f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       778	pop3.c	FUNCTION_17
0x4001053	          0x488b00	                    mov rax, qword [rax]	       778	pop3.c	FUNCTION_17
0x4001056	        0x488945e8	             mov qword [rbp - 0x18], rax	       778	pop3.c	FUNCTION_17
0x400105a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       779	pop3.c	FUNCTION_17
0x400105e	    0x480550060000	                          add rax, 0x650	       779	pop3.c	FUNCTION_17
0x4001064	        0x488945f0	             mov qword [rbp - 0x10], rax	       779	pop3.c	FUNCTION_17
0x4001068	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       784	pop3.c	FUNCTION_17	CALL_1
0x400106c	    0x488db8880000	                   lea rdi, [rax + 0x88]	       784	pop3.c	FUNCTION_17	CALL_1
0x4001073	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       784	pop3.c	FUNCTION_17	CALL_1
0x4001077	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       784	pop3.c	FUNCTION_17	CALL_1
0x400107a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       784	pop3.c	FUNCTION_17	CALL_1
0x400107e	          0x4889c6	                            mov rsi, rax	       784	pop3.c	FUNCTION_17	CALL_1
0x4001081	      0xe800000000	                          call 0x4001086	       784	pop3.c	FUNCTION_17	CALL_1
0x4001086	          0x8945e4	             mov dword [rbp - 0x1c], eax	       784	pop3.c	FUNCTION_17	CALL_1
0x4001089	        0x837de400	               cmp dword [rbp - 0x1c], 0	       785	pop3.c	FUNCTION_17	IF_1
0x400108d	     0xf85a0000000	                           jne 0x4001133	       785	pop3.c	FUNCTION_17	IF_1
0x4001093	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       786	pop3.c	FUNCTION_17	IF_1	SWITCH_1
0x4001096	            0x85c0	                           test eax, eax	       786	pop3.c	FUNCTION_17	IF_1	SWITCH_1
0x4001098	            0x741d	                            je 0x40010b7	       786	pop3.c	FUNCTION_17	IF_1	SWITCH_1
0x400109a	          0x83f802	                              cmp eax, 2	       786	pop3.c	FUNCTION_17	IF_1	SWITCH_1
0x400109d	            0x7405	                            je 0x40010a4	       786	pop3.c	FUNCTION_17	IF_1	SWITCH_1
0x400109f	      0xe98f000000	                           jmp 0x4001133	       806	pop3.c	FUNCTION_17	IF_1	SWITCH_1
0x40010a4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       788	pop3.c	FUNCTION_17	IF_1	SWITCH_1	CALL_2
0x40010a8	      0xbe00000000	                              mov esi, 0	       788	pop3.c	FUNCTION_17	IF_1	SWITCH_1	CALL_2
0x40010ad	          0x4889c7	                            mov rdi, rax	       788	pop3.c	FUNCTION_17	IF_1	SWITCH_1	CALL_2
0x40010b0	      0xe88cf2ffff	                          call sym.state	       788	pop3.c	FUNCTION_17	IF_1	SWITCH_1	CALL_2
0x40010b5	            0xeb7c	                           jmp 0x4001133	       789	pop3.c	FUNCTION_17	IF_1	SWITCH_1
0x40010b7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       792	pop3.c	FUNCTION_17	IF_1	SWITCH_1	IF_2
0x40010bb	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	       792	pop3.c	FUNCTION_17	IF_1	SWITCH_1	IF_2
0x40010c1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       792	pop3.c	FUNCTION_17	IF_1	SWITCH_1	IF_2
0x40010c5	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       792	pop3.c	FUNCTION_17	IF_1	SWITCH_1	IF_2
0x40010cb	            0x21d0	                            and eax, edx	       792	pop3.c	FUNCTION_17	IF_1	SWITCH_1	IF_2
0x40010cd	          0x83e002	                              and eax, 2	       792	pop3.c	FUNCTION_17	IF_1	SWITCH_1	IF_2
0x40010d0	            0x85c0	                           test eax, eax	       792	pop3.c	FUNCTION_17	IF_1	SWITCH_1	IF_2
0x40010d2	            0x7411	                            je 0x40010e5	       792	pop3.c	FUNCTION_17	IF_1	SWITCH_1	IF_2
0x40010d4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       794	pop3.c	FUNCTION_17	IF_1	SWITCH_1	CALL_3
0x40010d8	          0x4889c7	                            mov rdi, rax	       794	pop3.c	FUNCTION_17	IF_1	SWITCH_1	CALL_3
0x40010db	      0xe890f4ffff	              call sym.pop3_perform_apop	       794	pop3.c	FUNCTION_17	IF_1	SWITCH_1	CALL_3
0x40010e0	          0x8945e4	             mov dword [rbp - 0x1c], eax	       794	pop3.c	FUNCTION_17	IF_1	SWITCH_1	CALL_3
0x40010e3	            0xeb4d	                           jmp 0x4001132	       804	pop3.c	FUNCTION_17	IF_1	SWITCH_1
0x40010e5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       797	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_1	IF_3
0x40010e9	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	       797	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_1	IF_3
0x40010ef	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       797	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_1	IF_3
0x40010f3	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       797	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_1	IF_3
0x40010f9	            0x21d0	                            and eax, edx	       797	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_1	IF_3
0x40010fb	          0x83e001	                              and eax, 1	       797	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_1	IF_3
0x40010fe	            0x85c0	                           test eax, eax	       797	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_1	IF_3
0x4001100	            0x7411	                            je 0x4001113	       797	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_1	IF_3
0x4001102	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       799	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_1	IF_3
0x4001106	          0x4889c7	                            mov rdi, rax	       799	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_1	IF_3
0x4001109	      0xe8c2f3ffff	              call sym.pop3_perform_user	       799	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_1	IF_3
0x400110e	          0x8945e4	             mov dword [rbp - 0x1c], eax	       799	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_1	IF_3
0x4001111	            0xeb1f	                           jmp 0x4001132	       804	pop3.c	FUNCTION_17	IF_1	SWITCH_1
0x4001113	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       801	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_2	CALL_5
0x4001117	    0x488d35000000	                   lea rsi, [0x0400111e]	       801	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_2	CALL_5
0x400111e	          0x4889c7	                            mov rdi, rax	       801	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_2	CALL_5
0x4001121	      0xb800000000	                              mov eax, 0	       801	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_2	CALL_5
0x4001126	      0xe800000000	                          call 0x400112b	       801	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_2	CALL_5
0x400112b	    0xc745e4430000	           mov dword [rbp - 0x1c], 0x43 	       802	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_2
0x4001132	              0x90	                                     nop	       804	pop3.c	FUNCTION_17	IF_1	SWITCH_1
0x4001133	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       809	pop3.c	FUNCTION_17
0x4001136	        0x488b4df8	                mov rcx, qword [rbp - 8]	       810	pop3.c	FUNCTION_17
0x400113a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       810	pop3.c	FUNCTION_17
0x4001143	            0x7405	                            je 0x400114a	       810	pop3.c	FUNCTION_17
0x4001145	      0xe800000000	                          call 0x400114a	       810	pop3.c	FUNCTION_17
0x400114a	              0xc9	                                   leave	       810	pop3.c	FUNCTION_17
0x400114b	              0xc3	                                     ret	       810	pop3.c	FUNCTION_17
pop3_init	IF,1:CALL,1:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	25
0x4001748	              0x55	                                push rbp	      1040	pop3.c	FUNCTION_25
0x4001749	          0x4889e5	                            mov rbp, rsp	      1040	pop3.c	FUNCTION_25
0x400174c	        0x4883ec30	                           sub rsp, 0x30	      1040	pop3.c	FUNCTION_25
0x4001750	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1040	pop3.c	FUNCTION_25
0x4001754	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1041	pop3.c	FUNCTION_25
0x400175b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1042	pop3.c	FUNCTION_25
0x400175f	          0x488b00	                    mov rax, qword [rax]	      1042	pop3.c	FUNCTION_25
0x4001762	        0x488945f0	             mov qword [rbp - 0x10], rax	      1042	pop3.c	FUNCTION_25
0x4001766	    0x488b05000000	            mov rax, qword [0x0400176d] 	      1045	pop3.c	FUNCTION_25	CALL_1
0x400176d	          0x488b00	                    mov rax, qword [rax]	      1045	pop3.c	FUNCTION_25	CALL_1
0x4001770	      0xbe01000000	                              mov esi, 1	      1045	pop3.c	FUNCTION_25	CALL_1
0x4001775	      0xbf18000000	                           mov edi, 0x18	      1045	pop3.c	FUNCTION_25	CALL_1
0x400177a	            0xffd0	                                call rax	      1045	pop3.c	FUNCTION_25	CALL_1
0x400177c	          0x4889c2	                            mov rdx, rax	      1045	pop3.c	FUNCTION_25	CALL_1
0x400177f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1045	pop3.c	FUNCTION_25	CALL_1
0x4001783	    0x488990e80100	            mov qword [rax + 0x1e8], rdx	      1045	pop3.c	FUNCTION_25	CALL_1
0x400178a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1045	pop3.c	FUNCTION_25	CALL_1
0x400178e	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1045	pop3.c	FUNCTION_25	CALL_1
0x4001795	        0x488945f8	                mov qword [rbp - 8], rax	      1045	pop3.c	FUNCTION_25	CALL_1
0x4001799	      0x48837df800	                  cmp qword [rbp - 8], 0	      1046	pop3.c	FUNCTION_25	IF_1
0x400179e	            0x7507	                           jne 0x40017a7	      1046	pop3.c	FUNCTION_25	IF_1
0x40017a0	    0xc745ec1b0000	           mov dword [rbp - 0x14], 0x1b 	      1047	pop3.c	FUNCTION_25	IF_1
0x40017a7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1049	pop3.c	FUNCTION_25
0x40017aa	              0xc9	                                   leave	      1050	pop3.c	FUNCTION_25
0x40017ab	              0xc3	                                     ret	      1050	pop3.c	FUNCTION_25
pop3_perform_apop	IF,3:CALL,12:SWITCH,0:ELSE,0:functions,0:FOR,1:DO,0:WHILE,0	102
0x4000570	              0x55	                                push rbp	       414	pop3.c	FUNCTION_8
0x4000571	          0x4889e5	                            mov rbp, rsp	       414	pop3.c	FUNCTION_8
0x4000574	        0x4883ec70	                           sub rsp, 0x70	       414	pop3.c	FUNCTION_8
0x4000578	        0x48897d98	             mov qword [rbp - 0x68], rdi	       414	pop3.c	FUNCTION_8
0x400057c	    0x64488b042528	                mov rax, qword fs:[0x28]	       414	pop3.c	FUNCTION_8
0x4000585	        0x488945f8	                mov qword [rbp - 8], rax	       414	pop3.c	FUNCTION_8
0x4000589	            0x31c0	                            xor eax, eax	       414	pop3.c	FUNCTION_8
0x400058b	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       415	pop3.c	FUNCTION_8
0x4000592	        0x488b4598	             mov rax, qword [rbp - 0x68]	       416	pop3.c	FUNCTION_8
0x4000596	    0x480550060000	                          add rax, 0x650	       416	pop3.c	FUNCTION_8
0x400059c	        0x488945b0	             mov qword [rbp - 0x50], rax	       416	pop3.c	FUNCTION_8
0x40005a0	        0x488b4598	             mov rax, qword [rbp - 0x68]	       424	pop3.c	FUNCTION_8	IF_1
0x40005a4	     0xfb680a00300	          movzx eax, byte [rax + 0x3a0] 	       424	pop3.c	FUNCTION_8	IF_1
0x40005ab	          0x83f001	                              xor eax, 1	       424	pop3.c	FUNCTION_8	IF_1
0x40005ae	            0x84c0	                             test al, al	       424	pop3.c	FUNCTION_8	IF_1
0x40005b0	            0x7419	                            je 0x40005cb	       424	pop3.c	FUNCTION_8	IF_1
0x40005b2	        0x488b4598	             mov rax, qword [rbp - 0x68]	       425	pop3.c	FUNCTION_8	IF_1	CALL_1
0x40005b6	      0xbe00000000	                              mov esi, 0	       425	pop3.c	FUNCTION_8	IF_1	CALL_1
0x40005bb	          0x4889c7	                            mov rdi, rax	       425	pop3.c	FUNCTION_8	IF_1	CALL_1
0x40005be	      0xe87efdffff	                          call sym.state	       425	pop3.c	FUNCTION_8	IF_1	CALL_1
0x40005c3	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       427	pop3.c	FUNCTION_8	IF_1
0x40005c6	      0xe938010000	                           jmp 0x4000703	       427	pop3.c	FUNCTION_8	IF_1
0x40005cb	    0x488b05000000	            mov rax, qword [0x040005d2] 	       431	pop3.c	FUNCTION_8	CALL_2
0x40005d2	          0x4889c7	                            mov rdi, rax	       431	pop3.c	FUNCTION_8	CALL_2
0x40005d5	      0xe800000000	                          call 0x40005da	       431	pop3.c	FUNCTION_8	CALL_2
0x40005da	        0x488945b8	             mov qword [rbp - 0x48], rax	       431	pop3.c	FUNCTION_8	CALL_2
0x40005de	      0x48837db800	               cmp qword [rbp - 0x48], 0	       432	pop3.c	FUNCTION_8	IF_2
0x40005e3	            0x750a	                           jne 0x40005ef	       432	pop3.c	FUNCTION_8	IF_2
0x40005e5	      0xb81b000000	                           mov eax, 0x1b	       433	pop3.c	FUNCTION_8	IF_2
0x40005ea	      0xe914010000	                           jmp 0x4000703	       433	pop3.c	FUNCTION_8	IF_2
0x40005ef	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       436	pop3.c	FUNCTION_8	CALL_5
0x40005f3	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       436	pop3.c	FUNCTION_8	CALL_5
0x40005fa	          0x4889c7	                            mov rdi, rax	       435	pop3.c	FUNCTION_8	CALL_3
0x40005fd	      0xe800000000	                          call 0x4000602	       435	pop3.c	FUNCTION_8	CALL_3
0x4000602	          0x4889c7	                            mov rdi, rax	       435	pop3.c	FUNCTION_8	CALL_3
0x4000605	      0xe800000000	                          call 0x400060a	       435	pop3.c	FUNCTION_8	CALL_3
0x400060a	            0x89c2	                            mov edx, eax	       435	pop3.c	FUNCTION_8	CALL_3
0x400060c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       435	pop3.c	FUNCTION_8	CALL_3
0x4000610	    0x488b88b00000	            mov rcx, qword [rax + 0xb0] 	       435	pop3.c	FUNCTION_8	CALL_3
0x4000617	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       435	pop3.c	FUNCTION_8	CALL_3
0x400061b	          0x4889ce	                            mov rsi, rcx	       435	pop3.c	FUNCTION_8	CALL_3
0x400061e	          0x4889c7	                            mov rdi, rax	       435	pop3.c	FUNCTION_8	CALL_3
0x4000621	      0xe800000000	                          call 0x4000626	       435	pop3.c	FUNCTION_8	CALL_3
0x4000626	        0x488b4598	             mov rax, qword [rbp - 0x68]	       439	pop3.c	FUNCTION_8	CALL_8
0x400062a	    0x488b80180200	           mov rax, qword [rax + 0x218] 	       439	pop3.c	FUNCTION_8	CALL_8
0x4000631	          0x4889c7	                            mov rdi, rax	       438	pop3.c	FUNCTION_8	CALL_6
0x4000634	      0xe800000000	                          call 0x4000639	       438	pop3.c	FUNCTION_8	CALL_6
0x4000639	          0x4889c7	                            mov rdi, rax	       438	pop3.c	FUNCTION_8	CALL_6
0x400063c	      0xe800000000	                          call 0x4000641	       438	pop3.c	FUNCTION_8	CALL_6
0x4000641	            0x89c2	                            mov edx, eax	       438	pop3.c	FUNCTION_8	CALL_6
0x4000643	        0x488b4598	             mov rax, qword [rbp - 0x68]	       438	pop3.c	FUNCTION_8	CALL_6
0x4000647	    0x488b88180200	           mov rcx, qword [rax + 0x218] 	       438	pop3.c	FUNCTION_8	CALL_6
0x400064e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       438	pop3.c	FUNCTION_8	CALL_6
0x4000652	          0x4889ce	                            mov rsi, rcx	       438	pop3.c	FUNCTION_8	CALL_6
0x4000655	          0x4889c7	                            mov rdi, rax	       438	pop3.c	FUNCTION_8	CALL_6
0x4000658	      0xe800000000	                          call 0x400065d	       438	pop3.c	FUNCTION_8	CALL_6
0x400065d	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       442	pop3.c	FUNCTION_8	CALL_9
0x4000661	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       442	pop3.c	FUNCTION_8	CALL_9
0x4000665	          0x4889d6	                            mov rsi, rdx	       442	pop3.c	FUNCTION_8	CALL_9
0x4000668	          0x4889c7	                            mov rdi, rax	       442	pop3.c	FUNCTION_8	CALL_9
0x400066b	      0xe800000000	                          call 0x4000670	       442	pop3.c	FUNCTION_8	CALL_9
0x4000670	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       445	pop3.c	FUNCTION_8	FOR_1
0x4000678	            0xeb3e	                           jmp 0x40006b8	       445	pop3.c	FUNCTION_8	FOR_1
0x400067a	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       446	pop3.c	FUNCTION_8	CALL_10
0x400067e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       446	pop3.c	FUNCTION_8	CALL_10
0x4000682	          0x4801d0	                            add rax, rdx	       446	pop3.c	FUNCTION_8	CALL_10
0x4000685	           0xfb600	                   movzx eax, byte [rax]	       446	pop3.c	FUNCTION_8	CALL_10
0x4000688	           0xfb6c0	                           movzx eax, al	       446	pop3.c	FUNCTION_8	CALL_10
0x400068b	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       446	pop3.c	FUNCTION_8	CALL_10
0x400068f	        0x488d0c12	                    lea rcx, [rdx + rdx]	       446	pop3.c	FUNCTION_8	CALL_10
0x4000693	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       446	pop3.c	FUNCTION_8	CALL_10
0x4000697	        0x488d3c0a	                    lea rdi, [rdx + rcx]	       446	pop3.c	FUNCTION_8	CALL_10
0x400069b	            0x89c1	                            mov ecx, eax	       446	pop3.c	FUNCTION_8	CALL_10
0x400069d	    0x488d15000000	                   lea rdx, [0x040006a4]	       446	pop3.c	FUNCTION_8	CALL_10
0x40006a4	      0xbe03000000	                              mov esi, 3	       446	pop3.c	FUNCTION_8	CALL_10
0x40006a9	      0xb800000000	                              mov eax, 0	       446	pop3.c	FUNCTION_8	CALL_10
0x40006ae	      0xe800000000	                          call 0x40006b3	       446	pop3.c	FUNCTION_8	CALL_10
0x40006b3	      0x488345a801	               add qword [rbp - 0x58], 1	       445	pop3.c	FUNCTION_8	FOR_1
0x40006b8	      0x48837da80f	            cmp qword [rbp - 0x58], 0xf 	       445	pop3.c	FUNCTION_8	FOR_1
0x40006bd	            0x76bb	                           jbe 0x400067a	       445	pop3.c	FUNCTION_8	FOR_1
0x40006bf	        0x488b4598	             mov rax, qword [rbp - 0x68]	       448	pop3.c	FUNCTION_8	CALL_11
0x40006c3	    0x488b90100200	           mov rdx, qword [rax + 0x210] 	       448	pop3.c	FUNCTION_8	CALL_11
0x40006ca	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       448	pop3.c	FUNCTION_8	CALL_11
0x40006ce	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       448	pop3.c	FUNCTION_8	CALL_11
0x40006d2	    0x488d35000000	                   lea rsi, [0x040006d9]	       448	pop3.c	FUNCTION_8	CALL_11
0x40006d9	          0x4889c7	                            mov rdi, rax	       448	pop3.c	FUNCTION_8	CALL_11
0x40006dc	      0xb800000000	                              mov eax, 0	       448	pop3.c	FUNCTION_8	CALL_11
0x40006e1	      0xe800000000	                          call 0x40006e6	       448	pop3.c	FUNCTION_8	CALL_11
0x40006e6	          0x8945a4	             mov dword [rbp - 0x5c], eax	       448	pop3.c	FUNCTION_8	CALL_11
0x40006e9	        0x837da400	               cmp dword [rbp - 0x5c], 0	       450	pop3.c	FUNCTION_8	IF_3
0x40006ed	            0x7511	                           jne 0x4000700	       450	pop3.c	FUNCTION_8	IF_3
0x40006ef	        0x488b4598	             mov rax, qword [rbp - 0x68]	       451	pop3.c	FUNCTION_8	CALL_12
0x40006f3	      0xbe06000000	                              mov esi, 6	       451	pop3.c	FUNCTION_8	CALL_12
0x40006f8	          0x4889c7	                            mov rdi, rax	       451	pop3.c	FUNCTION_8	CALL_12
0x40006fb	      0xe841fcffff	                          call sym.state	       451	pop3.c	FUNCTION_8	CALL_12
0x4000700	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       453	pop3.c	FUNCTION_8
0x4000703	        0x488b75f8	                mov rsi, qword [rbp - 8]	       454	pop3.c	FUNCTION_8
0x4000707	    0x644833342528	                xor rsi, qword fs:[0x28]	       454	pop3.c	FUNCTION_8
0x4000710	            0x7405	                            je 0x4000717	       454	pop3.c	FUNCTION_8
0x4000712	      0xe800000000	                          call 0x4000717	       454	pop3.c	FUNCTION_8
0x4000717	              0xc9	                                   leave	       454	pop3.c	FUNCTION_8
0x4000718	              0xc3	                                     ret	       454	pop3.c	FUNCTION_8
pop3_perform_capa	IF,1:CALL,2:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	30
0x4000367	              0x55	                                push rbp	       316	pop3.c	FUNCTION_4
0x4000368	          0x4889e5	                            mov rbp, rsp	       316	pop3.c	FUNCTION_4
0x400036b	        0x4883ec20	                           sub rsp, 0x20	       316	pop3.c	FUNCTION_4
0x400036f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       316	pop3.c	FUNCTION_4
0x4000373	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       317	pop3.c	FUNCTION_4
0x400037a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       318	pop3.c	FUNCTION_4
0x400037e	    0x480550060000	                          add rax, 0x650	       318	pop3.c	FUNCTION_4
0x4000384	        0x488945f8	                mov qword [rbp - 8], rax	       318	pop3.c	FUNCTION_4
0x4000388	        0x488b45f8	                mov rax, qword [rbp - 8]	       320	pop3.c	FUNCTION_4
0x400038c	    0xc78094000000	               mov dword [rax + 0x94], 0	       320	pop3.c	FUNCTION_4
0x4000396	        0x488b45f8	                mov rax, qword [rbp - 8]	       321	pop3.c	FUNCTION_4
0x400039a	    0xc7809c000000	               mov dword [rax + 0x9c], 0	       321	pop3.c	FUNCTION_4
0x40003a4	        0x488b45f8	                mov rax, qword [rbp - 8]	       322	pop3.c	FUNCTION_4
0x40003a8	    0xc680b8000000	                mov byte [rax + 0xb8], 0	       322	pop3.c	FUNCTION_4
0x40003af	        0x488b45f8	                mov rax, qword [rbp - 8]	       325	pop3.c	FUNCTION_4	CALL_1
0x40003b3	    0x488d15000000	                   lea rdx, [0x040003ba]	       325	pop3.c	FUNCTION_4	CALL_1
0x40003ba	    0x488d35000000	                   lea rsi, [0x040003c1]	       325	pop3.c	FUNCTION_4	CALL_1
0x40003c1	          0x4889c7	                            mov rdi, rax	       325	pop3.c	FUNCTION_4	CALL_1
0x40003c4	      0xb800000000	                              mov eax, 0	       325	pop3.c	FUNCTION_4	CALL_1
0x40003c9	      0xe800000000	                          call 0x40003ce	       325	pop3.c	FUNCTION_4	CALL_1
0x40003ce	          0x8945f4	              mov dword [rbp - 0xc], eax	       325	pop3.c	FUNCTION_4	CALL_1
0x40003d1	        0x837df400	                cmp dword [rbp - 0xc], 0	       327	pop3.c	FUNCTION_4	IF_1
0x40003d5	            0x7511	                           jne 0x40003e8	       327	pop3.c	FUNCTION_4	IF_1
0x40003d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       328	pop3.c	FUNCTION_4	CALL_2
0x40003db	      0xbe02000000	                              mov esi, 2	       328	pop3.c	FUNCTION_4	CALL_2
0x40003e0	          0x4889c7	                            mov rdi, rax	       328	pop3.c	FUNCTION_4	CALL_2
0x40003e3	      0xe859ffffff	                          call sym.state	       328	pop3.c	FUNCTION_4	CALL_2
0x40003e8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       330	pop3.c	FUNCTION_4
0x40003eb	              0xc9	                                   leave	       331	pop3.c	FUNCTION_4
0x40003ec	              0xc3	                                     ret	       331	pop3.c	FUNCTION_4
pop3_multi_statemach	IF,2:CALL,2:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	50
0x400164e	              0x55	                                push rbp	      1010	pop3.c	FUNCTION_23
0x400164f	          0x4889e5	                            mov rbp, rsp	      1010	pop3.c	FUNCTION_23
0x4001652	        0x4883ec20	                           sub rsp, 0x20	      1010	pop3.c	FUNCTION_23
0x4001656	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1010	pop3.c	FUNCTION_23
0x400165a	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1010	pop3.c	FUNCTION_23
0x400165e	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1011	pop3.c	FUNCTION_23
0x4001665	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1012	pop3.c	FUNCTION_23
0x4001669	    0x480550060000	                          add rax, 0x650	      1012	pop3.c	FUNCTION_23
0x400166f	        0x488945f8	                mov qword [rbp - 8], rax	      1012	pop3.c	FUNCTION_23
0x4001673	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1014	pop3.c	FUNCTION_23	IF_1
0x4001677	    0x488b80e00300	           mov rax, qword [rax + 0x3e0] 	      1014	pop3.c	FUNCTION_23	IF_1
0x400167e	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1014	pop3.c	FUNCTION_23	IF_1
0x4001684	          0x83e001	                              and eax, 1	      1014	pop3.c	FUNCTION_23	IF_1
0x4001687	            0x85c0	                           test eax, eax	      1014	pop3.c	FUNCTION_23	IF_1
0x4001689	            0x7445	                            je 0x40016d0	      1014	pop3.c	FUNCTION_23	IF_1
0x400168b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1014	pop3.c	FUNCTION_23	IF_1
0x400168f	         0xfb64074	           movzx eax, byte [rax + 0x74] 	      1014	pop3.c	FUNCTION_23	IF_1
0x4001693	          0x83f001	                              xor eax, 1	      1014	pop3.c	FUNCTION_23	IF_1
0x4001696	            0x84c0	                             test al, al	      1014	pop3.c	FUNCTION_23	IF_1
0x4001698	            0x7436	                            je 0x40016d0	      1014	pop3.c	FUNCTION_23	IF_1
0x400169a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1015	pop3.c	FUNCTION_23	IF_1	CALL_1
0x400169e	        0x488d5074	                   lea rdx, [rax + 0x74]	      1015	pop3.c	FUNCTION_23	IF_1	CALL_1
0x40016a2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1015	pop3.c	FUNCTION_23	IF_1	CALL_1
0x40016a6	      0xbe00000000	                              mov esi, 0	      1015	pop3.c	FUNCTION_23	IF_1	CALL_1
0x40016ab	          0x4889c7	                            mov rdi, rax	      1015	pop3.c	FUNCTION_23	IF_1	CALL_1
0x40016ae	      0xe800000000	                          call 0x40016b3	      1015	pop3.c	FUNCTION_23	IF_1	CALL_1
0x40016b3	          0x8945f4	              mov dword [rbp - 0xc], eax	      1015	pop3.c	FUNCTION_23	IF_1	CALL_1
0x40016b6	        0x837df400	                cmp dword [rbp - 0xc], 0	      1016	pop3.c	FUNCTION_23	IF_1	IF_2
0x40016ba	            0x750f	                           jne 0x40016cb	      1016	pop3.c	FUNCTION_23	IF_1	IF_2
0x40016bc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1016	pop3.c	FUNCTION_23	IF_1	IF_2
0x40016c0	         0xfb64074	           movzx eax, byte [rax + 0x74] 	      1016	pop3.c	FUNCTION_23	IF_1	IF_2
0x40016c4	          0x83f001	                              xor eax, 1	      1016	pop3.c	FUNCTION_23	IF_1	IF_2
0x40016c7	            0x84c0	                             test al, al	      1016	pop3.c	FUNCTION_23	IF_1	IF_2
0x40016c9	            0x7405	                            je 0x40016d0	      1016	pop3.c	FUNCTION_23	IF_1	IF_2
0x40016cb	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1017	pop3.c	FUNCTION_23	IF_1	IF_2
0x40016ce	            0xeb29	                           jmp 0x40016f9	      1017	pop3.c	FUNCTION_23	IF_1	IF_2
0x40016d0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1020	pop3.c	FUNCTION_23	CALL_2
0x40016d4	      0xbe00000000	                              mov esi, 0	      1020	pop3.c	FUNCTION_23	CALL_2
0x40016d9	          0x4889c7	                            mov rdi, rax	      1020	pop3.c	FUNCTION_23	CALL_2
0x40016dc	      0xe800000000	                          call 0x40016e1	      1020	pop3.c	FUNCTION_23	CALL_2
0x40016e1	          0x8945f4	              mov dword [rbp - 0xc], eax	      1020	pop3.c	FUNCTION_23	CALL_2
0x40016e4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1021	pop3.c	FUNCTION_23
0x40016e8	          0x8b4070	            mov eax, dword [rax + 0x70] 	      1021	pop3.c	FUNCTION_23
0x40016eb	            0x85c0	                           test eax, eax	      1021	pop3.c	FUNCTION_23
0x40016ed	           0xf94c2	                                 sete dl	      1021	pop3.c	FUNCTION_23
0x40016f0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1021	pop3.c	FUNCTION_23
0x40016f4	            0x8810	                      mov byte [rax], dl	      1021	pop3.c	FUNCTION_23
0x40016f6	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1023	pop3.c	FUNCTION_23
0x40016f9	              0xc9	                                   leave	      1024	pop3.c	FUNCTION_23
0x40016fa	              0xc3	                                     ret	      1024	pop3.c	FUNCTION_23
pop3_getsock	IF,0:CALL,1:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	15
0x40017ac	              0x55	                                push rbp	      1055	pop3.c	FUNCTION_26
0x40017ad	          0x4889e5	                            mov rbp, rsp	      1055	pop3.c	FUNCTION_26
0x40017b0	        0x4883ec20	                           sub rsp, 0x20	      1055	pop3.c	FUNCTION_26
0x40017b4	        0x48897df8	                mov qword [rbp - 8], rdi	      1055	pop3.c	FUNCTION_26
0x40017b8	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1055	pop3.c	FUNCTION_26
0x40017bc	          0x8955ec	             mov dword [rbp - 0x14], edx	      1055	pop3.c	FUNCTION_26
0x40017bf	        0x488b45f8	                mov rax, qword [rbp - 8]	      1056	pop3.c	FUNCTION_26	CALL_1
0x40017c3	    0x488d88500600	                  lea rcx, [rax + 0x650]	      1056	pop3.c	FUNCTION_26	CALL_1
0x40017ca	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1056	pop3.c	FUNCTION_26	CALL_1
0x40017cd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1056	pop3.c	FUNCTION_26	CALL_1
0x40017d1	          0x4889c6	                            mov rsi, rax	      1056	pop3.c	FUNCTION_26	CALL_1
0x40017d4	          0x4889cf	                            mov rdi, rcx	      1056	pop3.c	FUNCTION_26	CALL_1
0x40017d7	      0xe800000000	                          call 0x40017dc	      1056	pop3.c	FUNCTION_26	CALL_1
0x40017dc	              0xc9	                                   leave	      1057	pop3.c	FUNCTION_26
0x40017dd	              0xc3	                                     ret	      1057	pop3.c	FUNCTION_26
pop3_statemach_act	IF,4:CALL,13:SWITCH,1:ELSE,0:functions,0:FOR,0:DO,1:WHILE,0	156
0x400141a	              0x55	                                push rbp	       935	pop3.c	FUNCTION_22
0x400141b	          0x4889e5	                            mov rbp, rsp	       935	pop3.c	FUNCTION_22
0x400141e	        0x4883ec40	                           sub rsp, 0x40	       935	pop3.c	FUNCTION_22
0x4001422	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       935	pop3.c	FUNCTION_22
0x4001426	    0x64488b042528	                mov rax, qword fs:[0x28]	       935	pop3.c	FUNCTION_22
0x400142f	        0x488945f8	                mov qword [rbp - 8], rax	       935	pop3.c	FUNCTION_22
0x4001433	            0x31c0	                            xor eax, eax	       935	pop3.c	FUNCTION_22
0x4001435	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       936	pop3.c	FUNCTION_22
0x400143c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       937	pop3.c	FUNCTION_22
0x4001440	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	       937	pop3.c	FUNCTION_22
0x4001446	          0x8945dc	             mov dword [rbp - 0x24], eax	       937	pop3.c	FUNCTION_22
0x4001449	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       939	pop3.c	FUNCTION_22
0x400144d	    0x480550060000	                          add rax, 0x650	       939	pop3.c	FUNCTION_22
0x4001453	        0x488945e8	             mov qword [rbp - 0x18], rax	       939	pop3.c	FUNCTION_22
0x4001457	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       940	pop3.c	FUNCTION_22
0x400145b	        0x488945f0	             mov qword [rbp - 0x10], rax	       940	pop3.c	FUNCTION_22
0x400145f	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       941	pop3.c	FUNCTION_22
0x4001467	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       944	pop3.c	FUNCTION_22	IF_1
0x400146b	          0x8b4070	            mov eax, dword [rax + 0x70] 	       944	pop3.c	FUNCTION_22	IF_1
0x400146e	          0x83f804	                              cmp eax, 4	       944	pop3.c	FUNCTION_22	IF_1
0x4001471	            0x7511	                           jne 0x4001484	       944	pop3.c	FUNCTION_22	IF_1
0x4001473	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       945	pop3.c	FUNCTION_22	CALL_1
0x4001477	          0x4889c7	                            mov rdi, rax	       945	pop3.c	FUNCTION_22	CALL_1
0x400147a	      0xe8c5efffff	       call sym.pop3_perform_upgrade_tls	       945	pop3.c	FUNCTION_22	CALL_1
0x400147f	      0xe9b4010000	                           jmp 0x4001638	       945	pop3.c	FUNCTION_22	CALL_1
0x4001484	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       948	pop3.c	FUNCTION_22	IF_2
0x4001488	        0x488b4030	            mov rax, qword [rax + 0x30] 	       948	pop3.c	FUNCTION_22	IF_2
0x400148c	          0x4885c0	                           test rax, rax	       948	pop3.c	FUNCTION_22	IF_2
0x400148f	            0x7411	                            je 0x40014a2	       948	pop3.c	FUNCTION_22	IF_2
0x4001491	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       949	pop3.c	FUNCTION_22	CALL_2
0x4001495	          0x4889c7	                            mov rdi, rax	       949	pop3.c	FUNCTION_22	CALL_2
0x4001498	      0xe800000000	                          call 0x400149d	       949	pop3.c	FUNCTION_22	CALL_2
0x400149d	      0xe996010000	                           jmp 0x4001638	       949	pop3.c	FUNCTION_22	CALL_2
0x40014a2	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       953	pop3.c	FUNCTION_22	DO_1	CALL_3
0x40014a6	        0x488d55d4	                   lea rdx, [rbp - 0x2c]	       953	pop3.c	FUNCTION_22	DO_1	CALL_3
0x40014aa	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       953	pop3.c	FUNCTION_22	DO_1	CALL_3
0x40014ae	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       953	pop3.c	FUNCTION_22	DO_1	CALL_3
0x40014b1	            0x89c7	                            mov edi, eax	       953	pop3.c	FUNCTION_22	DO_1	CALL_3
0x40014b3	      0xe800000000	                          call 0x40014b8	       953	pop3.c	FUNCTION_22	DO_1	CALL_3
0x40014b8	          0x8945d8	             mov dword [rbp - 0x28], eax	       953	pop3.c	FUNCTION_22	DO_1	CALL_3
0x40014bb	        0x837dd800	               cmp dword [rbp - 0x28], 0	       954	pop3.c	FUNCTION_22	DO_1	IF_3
0x40014bf	            0x7408	                            je 0x40014c9	       954	pop3.c	FUNCTION_22	DO_1	IF_3
0x40014c1	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       955	pop3.c	FUNCTION_22	DO_1	IF_3
0x40014c4	      0xe96f010000	                           jmp 0x4001638	       955	pop3.c	FUNCTION_22	DO_1	IF_3
0x40014c9	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       957	pop3.c	FUNCTION_22	DO_1	IF_4
0x40014cc	            0x85c0	                           test eax, eax	       957	pop3.c	FUNCTION_22	DO_1	IF_4
0x40014ce	     0xf8460010000	                            je 0x4001634	       957	pop3.c	FUNCTION_22	DO_1	IF_4
0x40014d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x40014d8	          0x8b4070	            mov eax, dword [rax + 0x70] 	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x40014db	          0x83f809	                              cmp eax, 9	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x40014de	     0xf8717010000	                            ja 0x40015fb	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x40014e4	            0x89c0	                            mov eax, eax	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x40014e6	    0x488d14850000	                        lea rdx, [rax*4]	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x40014ee	    0x488d05000000	                   lea rax, [0x040014f5]	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x40014f5	          0x8b0402	              mov eax, dword [rdx + rax]	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x40014f8	          0x4863d0	                         movsxd rdx, eax	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x40014fb	    0x488d05000000	                   lea rax, [0x04001502]	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4001502	          0x4801d0	                            add rax, rdx	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4001505	            0xffe0	                                 jmp rax	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4001507	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       963	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_4
0x400150b	          0x8b5070	            mov edx, dword [rax + 0x70] 	       963	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_4
0x400150e	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       963	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_4
0x4001511	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       963	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_4
0x4001515	            0x89ce	                            mov esi, ecx	       963	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_4
0x4001517	          0x4889c7	                            mov rdi, rax	       963	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_4
0x400151a	      0xe8dbf5ffff	    call sym.pop3_state_servergreet_resp	       963	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_4
0x400151f	          0x8945d8	             mov dword [rbp - 0x28], eax	       963	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_4
0x4001522	      0xe9e6000000	                           jmp 0x400160d	       964	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4001527	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       967	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_5
0x400152b	          0x8b5070	            mov edx, dword [rax + 0x70] 	       967	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_5
0x400152e	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       967	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_5
0x4001531	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       967	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_5
0x4001535	            0x89ce	                            mov esi, ecx	       967	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_5
0x4001537	          0x4889c7	                            mov rdi, rax	       967	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_5
0x400153a	      0xe85af7ffff	           call sym.pop3_state_capa_resp	       967	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_5
0x400153f	          0x8945d8	             mov dword [rbp - 0x28], eax	       967	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_5
0x4001542	      0xe9c6000000	                           jmp 0x400160d	       968	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4001547	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       971	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_6
0x400154b	          0x8b5070	            mov edx, dword [rax + 0x70] 	       971	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_6
0x400154e	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       971	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_6
0x4001551	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       971	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_6
0x4001555	            0x89ce	                            mov esi, ecx	       971	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_6
0x4001557	          0x4889c7	                            mov rdi, rax	       971	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_6
0x400155a	      0xe849faffff	       call sym.pop3_state_starttls_resp	       971	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_6
0x400155f	          0x8945d8	             mov dword [rbp - 0x28], eax	       971	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_6
0x4001562	      0xe9a6000000	                           jmp 0x400160d	       972	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4001567	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       975	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_7
0x400156b	          0x8b5070	            mov edx, dword [rax + 0x70] 	       975	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_7
0x400156e	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       975	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_7
0x4001571	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       975	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_7
0x4001575	            0x89ce	                            mov esi, ecx	       975	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_7
0x4001577	          0x4889c7	                            mov rdi, rax	       975	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_7
0x400157a	      0xe8a8faffff	           call sym.pop3_state_auth_resp	       975	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_7
0x400157f	          0x8945d8	             mov dword [rbp - 0x28], eax	       975	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_7
0x4001582	      0xe986000000	                           jmp 0x400160d	       976	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4001587	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       980	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_8
0x400158b	          0x8b5070	            mov edx, dword [rax + 0x70] 	       980	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_8
0x400158e	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       980	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_8
0x4001591	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       980	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_8
0x4001595	            0x89ce	                            mov esi, ecx	       980	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_8
0x4001597	          0x4889c7	                            mov rdi, rax	       980	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_8
0x400159a	      0xe8adfbffff	           call sym.pop3_state_apop_resp	       980	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_8
0x400159f	          0x8945d8	             mov dword [rbp - 0x28], eax	       980	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_8
0x40015a2	            0xeb69	                           jmp 0x400160d	       981	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x40015a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       985	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_9
0x40015a8	          0x8b5070	            mov edx, dword [rax + 0x70] 	       985	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_9
0x40015ab	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       985	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_9
0x40015ae	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       985	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_9
0x40015b2	            0x89ce	                            mov esi, ecx	       985	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_9
0x40015b4	          0x4889c7	                            mov rdi, rax	       985	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_9
0x40015b7	      0xe8f4fbffff	           call sym.pop3_state_user_resp	       985	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_9
0x40015bc	          0x8945d8	             mov dword [rbp - 0x28], eax	       985	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_9
0x40015bf	            0xeb4c	                           jmp 0x400160d	       986	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x40015c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       989	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_10
0x40015c5	          0x8b5070	            mov edx, dword [rax + 0x70] 	       989	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_10
0x40015c8	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       989	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_10
0x40015cb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       989	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_10
0x40015cf	            0x89ce	                            mov esi, ecx	       989	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_10
0x40015d1	          0x4889c7	                            mov rdi, rax	       989	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_10
0x40015d4	      0xe88afcffff	           call sym.pop3_state_pass_resp	       989	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_10
0x40015d9	          0x8945d8	             mov dword [rbp - 0x28], eax	       989	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_10
0x40015dc	            0xeb2f	                           jmp 0x400160d	       990	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x40015de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       993	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_11
0x40015e2	          0x8b5070	            mov edx, dword [rax + 0x70] 	       993	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_11
0x40015e5	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       993	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_11
0x40015e8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       993	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_11
0x40015ec	            0x89ce	                            mov esi, ecx	       993	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_11
0x40015ee	          0x4889c7	                            mov rdi, rax	       993	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_11
0x40015f1	      0xe8d1fcffff	        call sym.pop3_state_command_resp	       993	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_11
0x40015f6	          0x8945d8	             mov dword [rbp - 0x28], eax	       993	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_11
0x40015f9	            0xeb12	                           jmp 0x400160d	       994	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x40015fb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1000	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_12
0x40015ff	      0xbe00000000	                              mov esi, 0	      1000	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_12
0x4001604	          0x4889c7	                            mov rdi, rax	      1000	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_12
0x4001607	      0xe835edffff	                          call sym.state	      1000	pop3.c	FUNCTION_22	DO_1	SWITCH_1	CALL_12
0x400160c	              0x90	                                     nop	      1001	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x400160d	        0x837dd800	               cmp dword [rbp - 0x28], 0	      1003	pop3.c	FUNCTION_22	CALL_13
0x4001611	            0x7522	                           jne 0x4001635	      1003	pop3.c	FUNCTION_22	CALL_13
0x4001613	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1003	pop3.c	FUNCTION_22	CALL_13
0x4001617	          0x8b4070	            mov eax, dword [rax + 0x70] 	      1003	pop3.c	FUNCTION_22	CALL_13
0x400161a	            0x85c0	                           test eax, eax	      1003	pop3.c	FUNCTION_22	CALL_13
0x400161c	            0x7417	                            je 0x4001635	      1003	pop3.c	FUNCTION_22	CALL_13
0x400161e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1003	pop3.c	FUNCTION_22	CALL_13
0x4001622	          0x4889c7	                            mov rdi, rax	      1003	pop3.c	FUNCTION_22	CALL_13
0x4001625	      0xe800000000	                          call 0x400162a	      1003	pop3.c	FUNCTION_22	CALL_13
0x400162a	            0x84c0	                             test al, al	      1003	pop3.c	FUNCTION_22	CALL_13
0x400162c	     0xf8570feffff	                           jne 0x40014a2	      1003	pop3.c	FUNCTION_22	CALL_13
0x4001632	            0xeb01	                           jmp 0x4001635	      1003	pop3.c	FUNCTION_22	CALL_13
0x4001634	              0x90	                                     nop	       958	pop3.c	FUNCTION_22	DO_1	IF_4
0x4001635	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1005	pop3.c	FUNCTION_22
0x4001638	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1006	pop3.c	FUNCTION_22
0x400163c	    0x644833342528	                xor rsi, qword fs:[0x28]	      1006	pop3.c	FUNCTION_22
0x4001645	            0x7405	                            je 0x400164c	      1006	pop3.c	FUNCTION_22
0x4001647	      0xe800000000	                          call 0x400164c	      1006	pop3.c	FUNCTION_22
0x400164c	              0xc9	                                   leave	      1006	pop3.c	FUNCTION_22
0x400164d	              0xc3	                                     ret	      1006	pop3.c	FUNCTION_22
pop3_perform_command	IF,4:CALL,3:SWITCH,0:ELSE,2:functions,0:FOR,0:DO,0:WHILE,0	93
0x4000949	              0x55	                                push rbp	       554	pop3.c	FUNCTION_12
0x400094a	          0x4889e5	                            mov rbp, rsp	       554	pop3.c	FUNCTION_12
0x400094d	        0x4883ec30	                           sub rsp, 0x30	       554	pop3.c	FUNCTION_12
0x4000951	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       554	pop3.c	FUNCTION_12
0x4000955	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       555	pop3.c	FUNCTION_12
0x400095c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       556	pop3.c	FUNCTION_12
0x4000960	          0x488b00	                    mov rax, qword [rax]	       556	pop3.c	FUNCTION_12
0x4000963	        0x488945f0	             mov qword [rbp - 0x10], rax	       556	pop3.c	FUNCTION_12
0x4000967	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       557	pop3.c	FUNCTION_12
0x400096b	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	       557	pop3.c	FUNCTION_12
0x4000972	        0x488945f8	                mov qword [rbp - 8], rax	       557	pop3.c	FUNCTION_12
0x4000976	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       558	pop3.c	FUNCTION_12
0x400097e	        0x488b45f8	                mov rax, qword [rbp - 8]	       561	pop3.c	FUNCTION_12	IF_1
0x4000982	        0x488b4008	                mov rax, qword [rax + 8]	       561	pop3.c	FUNCTION_12	IF_1
0x4000986	           0xfb600	                   movzx eax, byte [rax]	       561	pop3.c	FUNCTION_12	IF_1
0x4000989	            0x84c0	                             test al, al	       561	pop3.c	FUNCTION_12	IF_1
0x400098b	            0x7412	                            je 0x400099f	       561	pop3.c	FUNCTION_12	IF_1
0x400098d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       561	pop3.c	FUNCTION_12	IF_1
0x4000991	          0x488b00	                    mov rax, qword [rax]	       561	pop3.c	FUNCTION_12	IF_1
0x4000994	     0xfb680d60700	          movzx eax, byte [rax + 0x7d6] 	       561	pop3.c	FUNCTION_12	IF_1
0x400099b	            0x84c0	                             test al, al	       561	pop3.c	FUNCTION_12	IF_1
0x400099d	            0x7426	                            je 0x40009c5	       561	pop3.c	FUNCTION_12	IF_1
0x400099f	    0x488d05000000	                   lea rax, [0x040009a6]	       562	pop3.c	FUNCTION_12	IF_1
0x40009a6	        0x488945e8	             mov qword [rbp - 0x18], rax	       562	pop3.c	FUNCTION_12	IF_1
0x40009aa	        0x488b45f8	                mov rax, qword [rbp - 8]	       564	pop3.c	FUNCTION_12	IF_1	IF_2
0x40009ae	        0x488b4008	                mov rax, qword [rax + 8]	       564	pop3.c	FUNCTION_12	IF_1	IF_2
0x40009b2	           0xfb600	                   movzx eax, byte [rax]	       564	pop3.c	FUNCTION_12	IF_1	IF_2
0x40009b5	            0x84c0	                             test al, al	       564	pop3.c	FUNCTION_12	IF_1	IF_2
0x40009b7	            0x7417	                            je 0x40009d0	       564	pop3.c	FUNCTION_12	IF_1	IF_2
0x40009b9	        0x488b45f8	                mov rax, qword [rbp - 8]	       566	pop3.c	FUNCTION_12	IF_1	IF_2
0x40009bd	    0xc70001000000	                      mov dword [rax], 1	       566	pop3.c	FUNCTION_12	IF_1	IF_2
0x40009c3	            0xeb0b	                           jmp 0x40009d0	       564	pop3.c	FUNCTION_12	IF_1	IF_2
0x40009c5	    0x488d05000000	                   lea rax, [0x040009cc]	       569	pop3.c	FUNCTION_12	ELSE_1
0x40009cc	        0x488945e8	             mov qword [rbp - 0x18], rax	       569	pop3.c	FUNCTION_12	ELSE_1
0x40009d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       572	pop3.c	FUNCTION_12	IF_3
0x40009d4	        0x488b4008	                mov rax, qword [rax + 8]	       572	pop3.c	FUNCTION_12	IF_3
0x40009d8	           0xfb600	                   movzx eax, byte [rax]	       572	pop3.c	FUNCTION_12	IF_3
0x40009db	            0x84c0	                             test al, al	       572	pop3.c	FUNCTION_12	IF_3
0x40009dd	            0x7459	                            je 0x4000a38	       572	pop3.c	FUNCTION_12	IF_3
0x40009df	        0x488b45f8	                mov rax, qword [rbp - 8]	       573	pop3.c	FUNCTION_12	IF_3	CALL_1
0x40009e3	        0x488b5008	                mov rdx, qword [rax + 8]	       573	pop3.c	FUNCTION_12	IF_3	CALL_1
0x40009e7	        0x488b45f8	                mov rax, qword [rbp - 8]	       574	pop3.c	FUNCTION_12	IF_3
0x40009eb	        0x488b4010	            mov rax, qword [rax + 0x10] 	       574	pop3.c	FUNCTION_12	IF_3
0x40009ef	          0x4885c0	                           test rax, rax	       573	pop3.c	FUNCTION_12	IF_3	CALL_1
0x40009f2	            0x7419	                            je 0x4000a0d	       573	pop3.c	FUNCTION_12	IF_3	CALL_1
0x40009f4	        0x488b45f8	                mov rax, qword [rbp - 8]	       574	pop3.c	FUNCTION_12	IF_3
0x40009f8	        0x488b4010	            mov rax, qword [rax + 0x10] 	       574	pop3.c	FUNCTION_12	IF_3
0x40009fc	           0xfb600	                   movzx eax, byte [rax]	       574	pop3.c	FUNCTION_12	IF_3
0x40009ff	            0x84c0	                             test al, al	       574	pop3.c	FUNCTION_12	IF_3
0x4000a01	            0x740a	                            je 0x4000a0d	       574	pop3.c	FUNCTION_12	IF_3
0x4000a03	        0x488b45f8	                mov rax, qword [rbp - 8]	       573	pop3.c	FUNCTION_12	IF_3	CALL_1
0x4000a07	        0x488b4010	            mov rax, qword [rax + 0x10] 	       573	pop3.c	FUNCTION_12	IF_3	CALL_1
0x4000a0b	            0xeb04	                           jmp 0x4000a11	       573	pop3.c	FUNCTION_12	IF_3	CALL_1
0x4000a0d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       573	pop3.c	FUNCTION_12	IF_3	CALL_1
0x4000a11	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       573	pop3.c	FUNCTION_12	IF_3	CALL_1
0x4000a15	    0x488db9500600	                  lea rdi, [rcx + 0x650]	       573	pop3.c	FUNCTION_12	IF_3	CALL_1
0x4000a1c	          0x4889d1	                            mov rcx, rdx	       573	pop3.c	FUNCTION_12	IF_3	CALL_1
0x4000a1f	          0x4889c2	                            mov rdx, rax	       573	pop3.c	FUNCTION_12	IF_3	CALL_1
0x4000a22	    0x488d35000000	                   lea rsi, [0x04000a29]	       573	pop3.c	FUNCTION_12	IF_3	CALL_1
0x4000a29	      0xb800000000	                              mov eax, 0	       573	pop3.c	FUNCTION_12	IF_3	CALL_1
0x4000a2e	      0xe800000000	                          call 0x4000a33	       573	pop3.c	FUNCTION_12	IF_3	CALL_1
0x4000a33	          0x8945e4	             mov dword [rbp - 0x1c], eax	       573	pop3.c	FUNCTION_12	IF_3	CALL_1
0x4000a36	            0xeb4f	                           jmp 0x4000a87	       573	pop3.c	FUNCTION_12	IF_3	CALL_1
0x4000a38	        0x488b45f8	                mov rax, qword [rbp - 8]	       578	pop3.c	FUNCTION_12	ELSE_2
0x4000a3c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       578	pop3.c	FUNCTION_12	ELSE_2
0x4000a40	          0x4885c0	                           test rax, rax	       577	pop3.c	FUNCTION_12	ELSE_2	CALL_2
0x4000a43	            0x7419	                            je 0x4000a5e	       577	pop3.c	FUNCTION_12	ELSE_2	CALL_2
0x4000a45	        0x488b45f8	                mov rax, qword [rbp - 8]	       578	pop3.c	FUNCTION_12	ELSE_2
0x4000a49	        0x488b4010	            mov rax, qword [rax + 0x10] 	       578	pop3.c	FUNCTION_12	ELSE_2
0x4000a4d	           0xfb600	                   movzx eax, byte [rax]	       578	pop3.c	FUNCTION_12	ELSE_2
0x4000a50	            0x84c0	                             test al, al	       578	pop3.c	FUNCTION_12	ELSE_2
0x4000a52	            0x740a	                            je 0x4000a5e	       578	pop3.c	FUNCTION_12	ELSE_2
0x4000a54	        0x488b45f8	                mov rax, qword [rbp - 8]	       577	pop3.c	FUNCTION_12	ELSE_2	CALL_2
0x4000a58	        0x488b4010	            mov rax, qword [rax + 0x10] 	       577	pop3.c	FUNCTION_12	ELSE_2	CALL_2
0x4000a5c	            0xeb04	                           jmp 0x4000a62	       577	pop3.c	FUNCTION_12	ELSE_2	CALL_2
0x4000a5e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       577	pop3.c	FUNCTION_12	ELSE_2	CALL_2
0x4000a62	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       577	pop3.c	FUNCTION_12	ELSE_2	CALL_2
0x4000a66	    0x488d8a500600	                  lea rcx, [rdx + 0x650]	       577	pop3.c	FUNCTION_12	ELSE_2	CALL_2
0x4000a6d	          0x4889c2	                            mov rdx, rax	       577	pop3.c	FUNCTION_12	ELSE_2	CALL_2
0x4000a70	    0x488d35000000	                   lea rsi, [0x04000a77]	       577	pop3.c	FUNCTION_12	ELSE_2	CALL_2
0x4000a77	          0x4889cf	                            mov rdi, rcx	       577	pop3.c	FUNCTION_12	ELSE_2	CALL_2
0x4000a7a	      0xb800000000	                              mov eax, 0	       577	pop3.c	FUNCTION_12	ELSE_2	CALL_2
0x4000a7f	      0xe800000000	                          call 0x4000a84	       577	pop3.c	FUNCTION_12	ELSE_2	CALL_2
0x4000a84	          0x8945e4	             mov dword [rbp - 0x1c], eax	       577	pop3.c	FUNCTION_12	ELSE_2	CALL_2
0x4000a87	        0x837de400	               cmp dword [rbp - 0x1c], 0	       581	pop3.c	FUNCTION_12	IF_4
0x4000a8b	            0x7511	                           jne 0x4000a9e	       581	pop3.c	FUNCTION_12	IF_4
0x4000a8d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       582	pop3.c	FUNCTION_12	CALL_3
0x4000a91	      0xbe09000000	                              mov esi, 9	       582	pop3.c	FUNCTION_12	CALL_3
0x4000a96	          0x4889c7	                            mov rdi, rax	       582	pop3.c	FUNCTION_12	CALL_3
0x4000a99	      0xe8a3f8ffff	                          call sym.state	       582	pop3.c	FUNCTION_12	CALL_3
0x4000a9e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       584	pop3.c	FUNCTION_12
0x4000aa1	              0xc9	                                   leave	       585	pop3.c	FUNCTION_12
0x4000aa2	              0xc3	                                     ret	       585	pop3.c	FUNCTION_12
pop3_perform	IF,3:CALL,6:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	41
0x4001987	              0x55	                                push rbp	      1151	pop3.c	FUNCTION_29
0x4001988	          0x4889e5	                            mov rbp, rsp	      1151	pop3.c	FUNCTION_29
0x400198b	        0x4883ec30	                           sub rsp, 0x30	      1151	pop3.c	FUNCTION_29
0x400198f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1151	pop3.c	FUNCTION_29
0x4001993	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1151	pop3.c	FUNCTION_29
0x4001997	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1151	pop3.c	FUNCTION_29
0x400199b	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1153	pop3.c	FUNCTION_29
0x40019a2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1154	pop3.c	FUNCTION_29
0x40019a6	          0x488b00	                    mov rax, qword [rax]	      1154	pop3.c	FUNCTION_29
0x40019a9	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1154	pop3.c	FUNCTION_29
0x40019b0	        0x488945f8	                mov qword [rbp - 8], rax	      1154	pop3.c	FUNCTION_29
0x40019b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1158	pop3.c	FUNCTION_29	IF_1
0x40019b8	          0x488b00	                    mov rax, qword [rax]	      1158	pop3.c	FUNCTION_29	IF_1
0x40019bb	     0xfb680e10700	          movzx eax, byte [rax + 0x7e1] 	      1158	pop3.c	FUNCTION_29	IF_1
0x40019c2	            0x84c0	                             test al, al	      1158	pop3.c	FUNCTION_29	IF_1
0x40019c4	            0x740a	                            je 0x40019d0	      1158	pop3.c	FUNCTION_29	IF_1
0x40019c6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1160	pop3.c	FUNCTION_29	IF_1
0x40019ca	    0xc70001000000	                      mov dword [rax], 1	      1160	pop3.c	FUNCTION_29	IF_1
0x40019d0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1163	pop3.c	FUNCTION_29
0x40019d4	          0xc60000	                       mov byte [rax], 0	      1163	pop3.c	FUNCTION_29
0x40019d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1166	pop3.c	FUNCTION_29	CALL_3
0x40019db	          0x4889c7	                            mov rdi, rax	      1166	pop3.c	FUNCTION_29	CALL_3
0x40019de	      0xe866efffff	           call sym.pop3_perform_command	      1166	pop3.c	FUNCTION_29	CALL_3
0x40019e3	          0x8945f4	              mov dword [rbp - 0xc], eax	      1166	pop3.c	FUNCTION_29	CALL_3
0x40019e6	        0x837df400	                cmp dword [rbp - 0xc], 0	      1167	pop3.c	FUNCTION_29	IF_2
0x40019ea	            0x7405	                            je 0x40019f1	      1167	pop3.c	FUNCTION_29	IF_2
0x40019ec	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1168	pop3.c	FUNCTION_29	IF_2
0x40019ef	            0xeb2a	                           jmp 0x4001a1b	      1168	pop3.c	FUNCTION_29	IF_2
0x40019f1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1171	pop3.c	FUNCTION_29	CALL_4
0x40019f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1171	pop3.c	FUNCTION_29	CALL_4
0x40019f9	          0x4889d6	                            mov rsi, rdx	      1171	pop3.c	FUNCTION_29	CALL_4
0x40019fc	          0x4889c7	                            mov rdi, rax	      1171	pop3.c	FUNCTION_29	CALL_4
0x40019ff	      0xe84afcffff	           call sym.pop3_multi_statemach	      1171	pop3.c	FUNCTION_29	CALL_4
0x4001a04	          0x8945f4	              mov dword [rbp - 0xc], eax	      1171	pop3.c	FUNCTION_29	CALL_4
0x4001a07	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1173	pop3.c	FUNCTION_29
0x4001a0b	     0xfb690a50300	          movzx edx, byte [rax + 0x3a5] 	      1173	pop3.c	FUNCTION_29
0x4001a12	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1173	pop3.c	FUNCTION_29
0x4001a16	            0x8810	                      mov byte [rax], dl	      1173	pop3.c	FUNCTION_29
0x4001a18	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1178	pop3.c	FUNCTION_29
0x4001a1b	              0xc9	                                   leave	      1179	pop3.c	FUNCTION_29
0x4001a1c	              0xc3	                                     ret	      1179	pop3.c	FUNCTION_29
pop3_state_pass_resp	IF,1:CALL,2:SWITCH,0:ELSE,1:functions,0:FOR,0:DO,0:WHILE,0	27
0x4001263	              0x55	                                push rbp	       860	pop3.c	FUNCTION_20
0x4001264	          0x4889e5	                            mov rbp, rsp	       860	pop3.c	FUNCTION_20
0x4001267	        0x4883ec20	                           sub rsp, 0x20	       860	pop3.c	FUNCTION_20
0x400126b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       860	pop3.c	FUNCTION_20
0x400126f	          0x8975e4	             mov dword [rbp - 0x1c], esi	       860	pop3.c	FUNCTION_20
0x4001272	          0x8955e0	             mov dword [rbp - 0x20], edx	       860	pop3.c	FUNCTION_20
0x4001275	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       861	pop3.c	FUNCTION_20
0x400127c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       862	pop3.c	FUNCTION_20
0x4001280	          0x488b00	                    mov rax, qword [rax]	       862	pop3.c	FUNCTION_20
0x4001283	        0x488945f8	                mov qword [rbp - 8], rax	       862	pop3.c	FUNCTION_20
0x4001287	        0x837de42b	           cmp dword [rbp - 0x1c], 0x2b 	       866	pop3.c	FUNCTION_20	IF_1
0x400128b	            0x7424	                            je 0x40012b1	       866	pop3.c	FUNCTION_20	IF_1
0x400128d	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       867	pop3.c	FUNCTION_20	IF_1	CALL_1
0x4001290	        0x488b45f8	                mov rax, qword [rbp - 8]	       867	pop3.c	FUNCTION_20	IF_1	CALL_1
0x4001294	    0x488d35000000	                   lea rsi, [0x0400129b]	       867	pop3.c	FUNCTION_20	IF_1	CALL_1
0x400129b	          0x4889c7	                            mov rdi, rax	       867	pop3.c	FUNCTION_20	IF_1	CALL_1
0x400129e	      0xb800000000	                              mov eax, 0	       867	pop3.c	FUNCTION_20	IF_1	CALL_1
0x40012a3	      0xe800000000	                          call 0x40012a8	       867	pop3.c	FUNCTION_20	IF_1	CALL_1
0x40012a8	    0xc745f4430000	            mov dword [rbp - 0xc], 0x43 	       868	pop3.c	FUNCTION_20	IF_1
0x40012af	            0xeb11	                           jmp 0x40012c2	       868	pop3.c	FUNCTION_20	IF_1
0x40012b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       872	pop3.c	FUNCTION_20	CALL_2
0x40012b5	      0xbe00000000	                              mov esi, 0	       872	pop3.c	FUNCTION_20	CALL_2
0x40012ba	          0x4889c7	                            mov rdi, rax	       872	pop3.c	FUNCTION_20	CALL_2
0x40012bd	      0xe87ff0ffff	                          call sym.state	       872	pop3.c	FUNCTION_20	CALL_2
0x40012c2	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       874	pop3.c	FUNCTION_20
0x40012c5	              0xc9	                                   leave	       875	pop3.c	FUNCTION_20
0x40012c6	              0xc3	                                     ret	       875	pop3.c	FUNCTION_20
pop3_state_starttls_resp	IF,2:CALL,3:SWITCH,0:ELSE,2:functions,0:FOR,0:DO,0:WHILE,0	35
0x4000fa8	              0x55	                                push rbp	       752	pop3.c	FUNCTION_16
0x4000fa9	          0x4889e5	                            mov rbp, rsp	       752	pop3.c	FUNCTION_16
0x4000fac	        0x4883ec20	                           sub rsp, 0x20	       752	pop3.c	FUNCTION_16
0x4000fb0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       752	pop3.c	FUNCTION_16
0x4000fb4	          0x8975e4	             mov dword [rbp - 0x1c], esi	       752	pop3.c	FUNCTION_16
0x4000fb7	          0x8955e0	             mov dword [rbp - 0x20], edx	       752	pop3.c	FUNCTION_16
0x4000fba	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       753	pop3.c	FUNCTION_16
0x4000fc1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       754	pop3.c	FUNCTION_16
0x4000fc5	          0x488b00	                    mov rax, qword [rax]	       754	pop3.c	FUNCTION_16
0x4000fc8	        0x488945f8	                mov qword [rbp - 8], rax	       754	pop3.c	FUNCTION_16
0x4000fcc	        0x837de42b	           cmp dword [rbp - 0x1c], 0x2b 	       758	pop3.c	FUNCTION_16	IF_1
0x4000fd0	            0x7441	                            je 0x4001013	       758	pop3.c	FUNCTION_16	IF_1
0x4000fd2	        0x488b45f8	                mov rax, qword [rbp - 8]	       759	pop3.c	FUNCTION_16	IF_1	IF_2
0x4000fd6	    0x8b80f0070000	           mov eax, dword [rax + 0x7f0] 	       759	pop3.c	FUNCTION_16	IF_1	IF_2
0x4000fdc	          0x83f801	                              cmp eax, 1	       759	pop3.c	FUNCTION_16	IF_1	IF_2
0x4000fdf	            0x7421	                            je 0x4001002	       759	pop3.c	FUNCTION_16	IF_1	IF_2
0x4000fe1	        0x488b45f8	                mov rax, qword [rbp - 8]	       760	pop3.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x4000fe5	    0x488d35000000	                   lea rsi, [0x04000fec]	       760	pop3.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x4000fec	          0x4889c7	                            mov rdi, rax	       760	pop3.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x4000fef	      0xb800000000	                              mov eax, 0	       760	pop3.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x4000ff4	      0xe800000000	                          call 0x4000ff9	       760	pop3.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x4000ff9	    0xc745f4400000	            mov dword [rbp - 0xc], 0x40 	       761	pop3.c	FUNCTION_16	IF_1	IF_2
0x4001000	            0xeb20	                           jmp 0x4001022	       761	pop3.c	FUNCTION_16	IF_1	IF_2
0x4001002	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       764	pop3.c	FUNCTION_16	IF_1	CALL_2
0x4001006	          0x4889c7	                            mov rdi, rax	       764	pop3.c	FUNCTION_16	IF_1	CALL_2
0x4001009	      0xe8c0f7ffff	    call sym.pop3_perform_authentication	       764	pop3.c	FUNCTION_16	IF_1	CALL_2
0x400100e	          0x8945f4	              mov dword [rbp - 0xc], eax	       764	pop3.c	FUNCTION_16	IF_1	CALL_2
0x4001011	            0xeb0f	                           jmp 0x4001022	       764	pop3.c	FUNCTION_16	IF_1	CALL_2
0x4001013	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       767	pop3.c	FUNCTION_16	CALL_3
0x4001017	          0x4889c7	                            mov rdi, rax	       767	pop3.c	FUNCTION_16	CALL_3
0x400101a	      0xe825f4ffff	       call sym.pop3_perform_upgrade_tls	       767	pop3.c	FUNCTION_16	CALL_3
0x400101f	          0x8945f4	              mov dword [rbp - 0xc], eax	       767	pop3.c	FUNCTION_16	CALL_3
0x4001022	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       769	pop3.c	FUNCTION_16
0x4001025	              0xc9	                                   leave	       770	pop3.c	FUNCTION_16
0x4001026	              0xc3	                                     ret	       770	pop3.c	FUNCTION_16
pop3_perform_auth	IF,1:CALL,2:SWITCH,0:ELSE,1:functions,0:FOR,0:DO,0:WHILE,0	31
0x4000719	              0x55	                                push rbp	       467	pop3.c	FUNCTION_9
0x400071a	          0x4889e5	                            mov rbp, rsp	       467	pop3.c	FUNCTION_9
0x400071d	        0x4883ec30	                           sub rsp, 0x30	       467	pop3.c	FUNCTION_9
0x4000721	        0x48897de8	             mov qword [rbp - 0x18], rdi	       467	pop3.c	FUNCTION_9
0x4000725	        0x488975e0	             mov qword [rbp - 0x20], rsi	       467	pop3.c	FUNCTION_9
0x4000729	        0x488955d8	             mov qword [rbp - 0x28], rdx	       467	pop3.c	FUNCTION_9
0x400072d	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       468	pop3.c	FUNCTION_9
0x4000734	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       469	pop3.c	FUNCTION_9
0x4000738	    0x480550060000	                          add rax, 0x650	       469	pop3.c	FUNCTION_9
0x400073e	        0x488945f8	                mov qword [rbp - 8], rax	       469	pop3.c	FUNCTION_9
0x4000742	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       471	pop3.c	FUNCTION_9	IF_1
0x4000747	            0x7425	                            je 0x400076e	       471	pop3.c	FUNCTION_9	IF_1
0x4000749	        0x488b45f8	                mov rax, qword [rbp - 8]	       473	pop3.c	FUNCTION_9	IF_1	CALL_1
0x400074d	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       473	pop3.c	FUNCTION_9	IF_1	CALL_1
0x4000751	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       473	pop3.c	FUNCTION_9	IF_1	CALL_1
0x4000755	    0x488d35000000	                   lea rsi, [0x0400075c]	       473	pop3.c	FUNCTION_9	IF_1	CALL_1
0x400075c	          0x4889c7	                            mov rdi, rax	       473	pop3.c	FUNCTION_9	IF_1	CALL_1
0x400075f	      0xb800000000	                              mov eax, 0	       473	pop3.c	FUNCTION_9	IF_1	CALL_1
0x4000764	      0xe800000000	                          call 0x4000769	       473	pop3.c	FUNCTION_9	IF_1	CALL_1
0x4000769	          0x8945f4	              mov dword [rbp - 0xc], eax	       473	pop3.c	FUNCTION_9	IF_1	CALL_1
0x400076c	            0xeb1f	                           jmp 0x400078d	       473	pop3.c	FUNCTION_9	IF_1	CALL_1
0x400076e	        0x488b45f8	                mov rax, qword [rbp - 8]	       477	pop3.c	FUNCTION_9	ELSE_1	CALL_2
0x4000772	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       477	pop3.c	FUNCTION_9	ELSE_1	CALL_2
0x4000776	    0x488d35000000	                   lea rsi, [0x0400077d]	       477	pop3.c	FUNCTION_9	ELSE_1	CALL_2
0x400077d	          0x4889c7	                            mov rdi, rax	       477	pop3.c	FUNCTION_9	ELSE_1	CALL_2
0x4000780	      0xb800000000	                              mov eax, 0	       477	pop3.c	FUNCTION_9	ELSE_1	CALL_2
0x4000785	      0xe800000000	                          call 0x400078a	       477	pop3.c	FUNCTION_9	ELSE_1	CALL_2
0x400078a	          0x8945f4	              mov dword [rbp - 0xc], eax	       477	pop3.c	FUNCTION_9	ELSE_1	CALL_2
0x400078d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       480	pop3.c	FUNCTION_9
0x4000790	              0xc9	                                   leave	       481	pop3.c	FUNCTION_9
0x4000791	              0xc3	                                     ret	       481	pop3.c	FUNCTION_9
pop3_perform_starttls	IF,1:CALL,2:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	22
0x40003ed	              0x55	                                push rbp	       340	pop3.c	FUNCTION_5
0x40003ee	          0x4889e5	                            mov rbp, rsp	       340	pop3.c	FUNCTION_5
0x40003f1	        0x4883ec20	                           sub rsp, 0x20	       340	pop3.c	FUNCTION_5
0x40003f5	        0x48897de8	             mov qword [rbp - 0x18], rdi	       340	pop3.c	FUNCTION_5
0x40003f9	    0xc745fc000000	                  mov dword [rbp - 4], 0	       341	pop3.c	FUNCTION_5
0x4000400	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       344	pop3.c	FUNCTION_5	CALL_1
0x4000404	    0x480550060000	                          add rax, 0x650	       344	pop3.c	FUNCTION_5	CALL_1
0x400040a	    0x488d15000000	                   lea rdx, [0x04000411]	       344	pop3.c	FUNCTION_5	CALL_1
0x4000411	    0x488d35000000	                   lea rsi, [0x04000418]	       344	pop3.c	FUNCTION_5	CALL_1
0x4000418	          0x4889c7	                            mov rdi, rax	       344	pop3.c	FUNCTION_5	CALL_1
0x400041b	      0xb800000000	                              mov eax, 0	       344	pop3.c	FUNCTION_5	CALL_1
0x4000420	      0xe800000000	                          call 0x4000425	       344	pop3.c	FUNCTION_5	CALL_1
0x4000425	          0x8945fc	                mov dword [rbp - 4], eax	       344	pop3.c	FUNCTION_5	CALL_1
0x4000428	        0x837dfc00	                  cmp dword [rbp - 4], 0	       346	pop3.c	FUNCTION_5	IF_1
0x400042c	            0x7511	                           jne 0x400043f	       346	pop3.c	FUNCTION_5	IF_1
0x400042e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       347	pop3.c	FUNCTION_5	CALL_2
0x4000432	      0xbe03000000	                              mov esi, 3	       347	pop3.c	FUNCTION_5	CALL_2
0x4000437	          0x4889c7	                            mov rdi, rax	       347	pop3.c	FUNCTION_5	CALL_2
0x400043a	      0xe802ffffff	                          call sym.state	       347	pop3.c	FUNCTION_5	CALL_2
0x400043f	          0x8b45fc	                mov eax, dword [rbp - 4]	       349	pop3.c	FUNCTION_5
0x4000442	              0xc9	                                   leave	       350	pop3.c	FUNCTION_5
0x4000443	              0xc3	                                     ret	       350	pop3.c	FUNCTION_5
pop3_done	IF,2:CALL,3:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	47
0x40018d2	              0x55	                                push rbp	      1117	pop3.c	FUNCTION_28
0x40018d3	          0x4889e5	                            mov rbp, rsp	      1117	pop3.c	FUNCTION_28
0x40018d6	        0x4883ec30	                           sub rsp, 0x30	      1117	pop3.c	FUNCTION_28
0x40018da	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1117	pop3.c	FUNCTION_28
0x40018de	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1117	pop3.c	FUNCTION_28
0x40018e1	            0x89d0	                            mov eax, edx	      1117	pop3.c	FUNCTION_28
0x40018e3	          0x8845d0	               mov byte [rbp - 0x30], al	      1117	pop3.c	FUNCTION_28
0x40018e6	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1118	pop3.c	FUNCTION_28
0x40018ed	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1119	pop3.c	FUNCTION_28
0x40018f1	          0x488b00	                    mov rax, qword [rax]	      1119	pop3.c	FUNCTION_28
0x40018f4	        0x488945f0	             mov qword [rbp - 0x10], rax	      1119	pop3.c	FUNCTION_28
0x40018f8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1120	pop3.c	FUNCTION_28
0x40018fc	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1120	pop3.c	FUNCTION_28
0x4001903	        0x488945f8	                mov qword [rbp - 8], rax	      1120	pop3.c	FUNCTION_28
0x4001907	      0x48837df800	                  cmp qword [rbp - 8], 0	      1124	pop3.c	FUNCTION_28	IF_1
0x400190c	            0x7507	                           jne 0x4001915	      1124	pop3.c	FUNCTION_28	IF_1
0x400190e	      0xb800000000	                              mov eax, 0	      1125	pop3.c	FUNCTION_28	IF_1
0x4001913	            0xeb70	                           jmp 0x4001985	      1125	pop3.c	FUNCTION_28	IF_1
0x4001915	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1127	pop3.c	FUNCTION_28	IF_2
0x4001919	            0x7417	                            je 0x4001932	      1127	pop3.c	FUNCTION_28	IF_2
0x400191b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1128	pop3.c	FUNCTION_28	IF_2	CALL_1
0x400191f	      0xbe01000000	                              mov esi, 1	      1128	pop3.c	FUNCTION_28	IF_2	CALL_1
0x4001924	          0x4889c7	                            mov rdi, rax	      1128	pop3.c	FUNCTION_28	IF_2	CALL_1
0x4001927	      0xe800000000	                          call 0x400192c	      1128	pop3.c	FUNCTION_28	IF_2	CALL_1
0x400192c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1129	pop3.c	FUNCTION_28	IF_2
0x400192f	          0x8945ec	             mov dword [rbp - 0x14], eax	      1129	pop3.c	FUNCTION_28	IF_2
0x4001932	    0x488b05000000	            mov rax, qword [0x04001939] 	      1133	pop3.c	FUNCTION_28	CALL_2
0x4001939	          0x488b00	                    mov rax, qword [rax]	      1133	pop3.c	FUNCTION_28	CALL_2
0x400193c	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1133	pop3.c	FUNCTION_28	CALL_2
0x4001940	        0x488b5208	                mov rdx, qword [rdx + 8]	      1133	pop3.c	FUNCTION_28	CALL_2
0x4001944	          0x4889d7	                            mov rdi, rdx	      1133	pop3.c	FUNCTION_28	CALL_2
0x4001947	            0xffd0	                                call rax	      1133	pop3.c	FUNCTION_28	CALL_2
0x4001949	        0x488b45f8	                mov rax, qword [rbp - 8]	      1133	pop3.c	FUNCTION_28	CALL_2
0x400194d	    0x48c740080000	                  mov qword [rax + 8], 0	      1133	pop3.c	FUNCTION_28	CALL_2
0x4001955	    0x488b05000000	            mov rax, qword [0x0400195c] 	      1134	pop3.c	FUNCTION_28	CALL_3
0x400195c	          0x488b00	                    mov rax, qword [rax]	      1134	pop3.c	FUNCTION_28	CALL_3
0x400195f	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1134	pop3.c	FUNCTION_28	CALL_3
0x4001963	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      1134	pop3.c	FUNCTION_28	CALL_3
0x4001967	          0x4889d7	                            mov rdi, rdx	      1134	pop3.c	FUNCTION_28	CALL_3
0x400196a	            0xffd0	                                call rax	      1134	pop3.c	FUNCTION_28	CALL_3
0x400196c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1134	pop3.c	FUNCTION_28	CALL_3
0x4001970	    0x48c740100000	               mov qword [rax + 0x10], 0	      1134	pop3.c	FUNCTION_28	CALL_3
0x4001978	        0x488b45f8	                mov rax, qword [rbp - 8]	      1137	pop3.c	FUNCTION_28
0x400197c	    0xc70000000000	                      mov dword [rax], 0	      1137	pop3.c	FUNCTION_28
0x4001982	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1139	pop3.c	FUNCTION_28
0x4001985	              0xc9	                                   leave	      1140	pop3.c	FUNCTION_28
0x4001986	              0xc3	                                     ret	      1140	pop3.c	FUNCTION_28
pop3_doing	IF,2:CALL,6:SWITCH,0:ELSE,1:functions,0:FOR,0:DO,0:WHILE,0	25
0x4001b58	              0x55	                                push rbp	      1255	pop3.c	FUNCTION_33
0x4001b59	          0x4889e5	                            mov rbp, rsp	      1255	pop3.c	FUNCTION_33
0x4001b5c	        0x4883ec20	                           sub rsp, 0x20	      1255	pop3.c	FUNCTION_33
0x4001b60	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1255	pop3.c	FUNCTION_33
0x4001b64	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1255	pop3.c	FUNCTION_33
0x4001b68	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1256	pop3.c	FUNCTION_33	CALL_1
0x4001b6c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1256	pop3.c	FUNCTION_33	CALL_1
0x4001b70	          0x4889d6	                            mov rsi, rdx	      1256	pop3.c	FUNCTION_33	CALL_1
0x4001b73	          0x4889c7	                            mov rdi, rax	      1256	pop3.c	FUNCTION_33	CALL_1
0x4001b76	      0xe8d3faffff	           call sym.pop3_multi_statemach	      1256	pop3.c	FUNCTION_33	CALL_1
0x4001b7b	          0x8945fc	                mov dword [rbp - 4], eax	      1256	pop3.c	FUNCTION_33	CALL_1
0x4001b7e	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1258	pop3.c	FUNCTION_33	IF_1
0x4001b82	            0x751f	                           jne 0x4001ba3	      1258	pop3.c	FUNCTION_33	IF_1
0x4001b84	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1260	pop3.c	FUNCTION_33	ELSE_1	IF_2
0x4001b88	           0xfb600	                   movzx eax, byte [rax]	      1260	pop3.c	FUNCTION_33	ELSE_1	IF_2
0x4001b8b	            0x84c0	                             test al, al	      1260	pop3.c	FUNCTION_33	ELSE_1	IF_2
0x4001b8d	            0x7414	                            je 0x4001ba3	      1260	pop3.c	FUNCTION_33	ELSE_1	IF_2
0x4001b8f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1261	pop3.c	FUNCTION_33	ELSE_1	IF_2	CALL_4
0x4001b93	      0xbe00000000	                              mov esi, 0	      1261	pop3.c	FUNCTION_33	ELSE_1	IF_2	CALL_4
0x4001b98	          0x4889c7	                            mov rdi, rax	      1261	pop3.c	FUNCTION_33	ELSE_1	IF_2	CALL_4
0x4001b9b	      0xe8a4ffffff	              call sym.pop3_dophase_done	      1261	pop3.c	FUNCTION_33	ELSE_1	IF_2	CALL_4
0x4001ba0	          0x8945fc	                mov dword [rbp - 4], eax	      1261	pop3.c	FUNCTION_33	ELSE_1	IF_2	CALL_4
0x4001ba3	          0x8b45fc	                mov eax, dword [rbp - 4]	      1266	pop3.c	FUNCTION_33
0x4001ba6	              0xc9	                                   leave	      1267	pop3.c	FUNCTION_33
0x4001ba7	              0xc3	                                     ret	      1267	pop3.c	FUNCTION_33
pop3_dophase_done	IF,0:CALL,0:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	8
0x4001b44	              0x55	                                push rbp	      1246	pop3.c	FUNCTION_32
0x4001b45	          0x4889e5	                            mov rbp, rsp	      1246	pop3.c	FUNCTION_32
0x4001b48	        0x48897df8	                mov qword [rbp - 8], rdi	      1246	pop3.c	FUNCTION_32
0x4001b4c	            0x89f0	                            mov eax, esi	      1246	pop3.c	FUNCTION_32
0x4001b4e	          0x8845f4	                mov byte [rbp - 0xc], al	      1246	pop3.c	FUNCTION_32
0x4001b51	      0xb800000000	                              mov eax, 0	      1250	pop3.c	FUNCTION_32
0x4001b56	              0x5d	                                 pop rbp	      1251	pop3.c	FUNCTION_32
0x4001b57	              0xc3	                                     ret	      1251	pop3.c	FUNCTION_32
pop3_connect	IF,1:CALL,6:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	59
0x40017de	              0x55	                                push rbp	      1070	pop3.c	FUNCTION_27
0x40017df	          0x4889e5	                            mov rbp, rsp	      1070	pop3.c	FUNCTION_27
0x40017e2	        0x4883ec30	                           sub rsp, 0x30	      1070	pop3.c	FUNCTION_27
0x40017e6	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1070	pop3.c	FUNCTION_27
0x40017ea	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1070	pop3.c	FUNCTION_27
0x40017ee	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1071	pop3.c	FUNCTION_27
0x40017f5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1072	pop3.c	FUNCTION_27
0x40017f9	    0x480550060000	                          add rax, 0x650	      1072	pop3.c	FUNCTION_27
0x40017ff	        0x488945f0	             mov qword [rbp - 0x10], rax	      1072	pop3.c	FUNCTION_27
0x4001803	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1073	pop3.c	FUNCTION_27
0x4001807	        0x488945f8	                mov qword [rbp - 8], rax	      1073	pop3.c	FUNCTION_27
0x400180b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1075	pop3.c	FUNCTION_27
0x400180f	          0xc60000	                       mov byte [rax], 0	      1075	pop3.c	FUNCTION_27
0x4001812	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1078	pop3.c	FUNCTION_27	CALL_1
0x4001816	      0xbe00000000	                              mov esi, 0	      1078	pop3.c	FUNCTION_27	CALL_1
0x400181b	          0x4889c7	                            mov rdi, rax	      1078	pop3.c	FUNCTION_27	CALL_1
0x400181e	      0xe800000000	                          call 0x4001823	      1078	pop3.c	FUNCTION_27	CALL_1
0x4001823	        0x488b45f8	                mov rax, qword [rbp - 8]	      1081	pop3.c	FUNCTION_27
0x4001827	    0x48c740504077	       mov qword [rax + 0x50], 0x1b7740 	      1081	pop3.c	FUNCTION_27
0x400182f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1082	pop3.c	FUNCTION_27
0x4001833	    0x488d15e0fbff	        lea rdx, sym.pop3_statemach_act 	      1082	pop3.c	FUNCTION_27
0x400183a	        0x48895060	             mov qword [rax + 0x60], rdx	      1082	pop3.c	FUNCTION_27
0x400183e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1083	pop3.c	FUNCTION_27
0x4001842	    0x488d15f1e8ff	            lea rdx, sym.pop3_endofresp 	      1083	pop3.c	FUNCTION_27
0x4001849	        0x48895068	             mov qword [rax + 0x68], rdx	      1083	pop3.c	FUNCTION_27
0x400184d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1084	pop3.c	FUNCTION_27
0x4001851	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1084	pop3.c	FUNCTION_27
0x4001855	        0x48895058	             mov qword [rax + 0x58], rdx	      1084	pop3.c	FUNCTION_27
0x4001859	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1087	pop3.c	FUNCTION_27
0x400185d	    0xc780ac000000	     mov dword [rax + 0xac], 0xffffffff 	      1087	pop3.c	FUNCTION_27
0x4001867	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1088	pop3.c	FUNCTION_27	CALL_2
0x400186b	    0x480588000000	                           add rax, 0x88	      1088	pop3.c	FUNCTION_27	CALL_2
0x4001871	    0x488d35000000	                   lea rsi, [0x04001878]	      1088	pop3.c	FUNCTION_27	CALL_2
0x4001878	          0x4889c7	                            mov rdi, rax	      1088	pop3.c	FUNCTION_27	CALL_2
0x400187b	      0xe800000000	                          call 0x4001880	      1088	pop3.c	FUNCTION_27	CALL_2
0x4001880	        0x488b45f8	                mov rax, qword [rbp - 8]	      1091	pop3.c	FUNCTION_27	CALL_3
0x4001884	          0x4889c7	                            mov rdi, rax	      1091	pop3.c	FUNCTION_27	CALL_3
0x4001887	      0xe800000000	                          call 0x400188c	      1091	pop3.c	FUNCTION_27	CALL_3
0x400188c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1094	pop3.c	FUNCTION_27	CALL_4
0x4001890	          0x4889c7	                            mov rdi, rax	      1094	pop3.c	FUNCTION_27	CALL_4
0x4001893	      0xe855040000	         call sym.pop3_parse_url_options	      1094	pop3.c	FUNCTION_27	CALL_4
0x4001898	          0x8945ec	             mov dword [rbp - 0x14], eax	      1094	pop3.c	FUNCTION_27	CALL_4
0x400189b	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1095	pop3.c	FUNCTION_27	IF_1
0x400189f	            0x7405	                            je 0x40018a6	      1095	pop3.c	FUNCTION_27	IF_1
0x40018a1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1096	pop3.c	FUNCTION_27	IF_1
0x40018a4	            0xeb2a	                           jmp 0x40018d0	      1096	pop3.c	FUNCTION_27	IF_1
0x40018a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1099	pop3.c	FUNCTION_27	CALL_5
0x40018aa	      0xbe01000000	                              mov esi, 1	      1099	pop3.c	FUNCTION_27	CALL_5
0x40018af	          0x4889c7	                            mov rdi, rax	      1099	pop3.c	FUNCTION_27	CALL_5
0x40018b2	      0xe88aeaffff	                          call sym.state	      1099	pop3.c	FUNCTION_27	CALL_5
0x40018b7	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1101	pop3.c	FUNCTION_27	CALL_6
0x40018bb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1101	pop3.c	FUNCTION_27	CALL_6
0x40018bf	          0x4889d6	                            mov rsi, rdx	      1101	pop3.c	FUNCTION_27	CALL_6
0x40018c2	          0x4889c7	                            mov rdi, rax	      1101	pop3.c	FUNCTION_27	CALL_6
0x40018c5	      0xe884fdffff	           call sym.pop3_multi_statemach	      1101	pop3.c	FUNCTION_27	CALL_6
0x40018ca	          0x8945ec	             mov dword [rbp - 0x14], eax	      1101	pop3.c	FUNCTION_27	CALL_6
0x40018cd	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1103	pop3.c	FUNCTION_27
0x40018d0	              0xc9	                                   leave	      1104	pop3.c	FUNCTION_27
0x40018d1	              0xc3	                                     ret	      1104	pop3.c	FUNCTION_27
pop3_state_command_resp	IF,5:CALL,5:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	84
0x40012c7	              0x55	                                push rbp	       881	pop3.c	FUNCTION_21
0x40012c8	          0x4889e5	                            mov rbp, rsp	       881	pop3.c	FUNCTION_21
0x40012cb	        0x4883ec40	                           sub rsp, 0x40	       881	pop3.c	FUNCTION_21
0x40012cf	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       881	pop3.c	FUNCTION_21
0x40012d3	          0x8975c4	             mov dword [rbp - 0x3c], esi	       881	pop3.c	FUNCTION_21
0x40012d6	          0x8955c0	             mov dword [rbp - 0x40], edx	       881	pop3.c	FUNCTION_21
0x40012d9	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       882	pop3.c	FUNCTION_21
0x40012e0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       883	pop3.c	FUNCTION_21
0x40012e4	          0x488b00	                    mov rax, qword [rax]	       883	pop3.c	FUNCTION_21
0x40012e7	        0x488945e0	             mov qword [rbp - 0x20], rax	       883	pop3.c	FUNCTION_21
0x40012eb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       884	pop3.c	FUNCTION_21
0x40012ef	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	       884	pop3.c	FUNCTION_21
0x40012f6	        0x488945e8	             mov qword [rbp - 0x18], rax	       884	pop3.c	FUNCTION_21
0x40012fa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       885	pop3.c	FUNCTION_21
0x40012fe	    0x480550060000	                          add rax, 0x650	       885	pop3.c	FUNCTION_21
0x4001304	        0x488945f0	             mov qword [rbp - 0x10], rax	       885	pop3.c	FUNCTION_21
0x4001308	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       886	pop3.c	FUNCTION_21
0x400130c	        0x488945f8	                mov qword [rbp - 8], rax	       886	pop3.c	FUNCTION_21
0x4001310	        0x837dc42b	           cmp dword [rbp - 0x3c], 0x2b 	       890	pop3.c	FUNCTION_21	IF_1
0x4001314	            0x741b	                            je 0x4001331	       890	pop3.c	FUNCTION_21	IF_1
0x4001316	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       891	pop3.c	FUNCTION_21	IF_1	CALL_1
0x400131a	      0xbe00000000	                              mov esi, 0	       891	pop3.c	FUNCTION_21	IF_1	CALL_1
0x400131f	          0x4889c7	                            mov rdi, rax	       891	pop3.c	FUNCTION_21	IF_1	CALL_1
0x4001322	      0xe81af0ffff	                          call sym.state	       891	pop3.c	FUNCTION_21	IF_1	CALL_1
0x4001327	      0xb838000000	                           mov eax, 0x38	       892	pop3.c	FUNCTION_21	IF_1
0x400132c	      0xe9e7000000	                           jmp 0x4001418	       892	pop3.c	FUNCTION_21	IF_1
0x4001331	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       899	pop3.c	FUNCTION_21
0x4001335	    0x48c740780200	               mov qword [rax + 0x78], 2	       899	pop3.c	FUNCTION_21
0x400133d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       903	pop3.c	FUNCTION_21
0x4001341	    0x48c780800000	               mov qword [rax + 0x80], 2	       903	pop3.c	FUNCTION_21
0x400134c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       905	pop3.c	FUNCTION_21	IF_2
0x4001350	            0x8b00	                    mov eax, dword [rax]	       905	pop3.c	FUNCTION_21	IF_2
0x4001352	            0x85c0	                           test eax, eax	       905	pop3.c	FUNCTION_21	IF_2
0x4001354	     0xf85aa000000	                           jne 0x4001404	       905	pop3.c	FUNCTION_21	IF_2
0x400135a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x400135e	        0x4883ec08	                              sub rsp, 8	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x4001362	            0x6a00	                                  push 0	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x4001364	    0x41b9ffffffff	                     mov r9d, 0xffffffff	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x400136a	    0x41b800000000	                              mov r8d, 0	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x4001370	      0xb900000000	                              mov ecx, 0	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x4001375	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x400137c	      0xbe00000000	                              mov esi, 0	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x4001381	          0x4889c7	                            mov rdi, rax	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x4001384	      0xe800000000	                          call 0x4001389	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x4001389	        0x4883c410	                           add rsp, 0x10	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x400138d	        0x488b45f8	                mov rax, qword [rbp - 8]	       909	pop3.c	FUNCTION_21	IF_2	IF_3
0x4001391	          0x488b00	                    mov rax, qword [rax]	       909	pop3.c	FUNCTION_21	IF_2	IF_3
0x4001394	          0x4885c0	                           test rax, rax	       909	pop3.c	FUNCTION_21	IF_2	IF_3
0x4001397	            0x746b	                            je 0x4001404	       909	pop3.c	FUNCTION_21	IF_2	IF_3
0x4001399	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       914	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4
0x400139d	     0xfb680e10700	          movzx eax, byte [rax + 0x7e1] 	       914	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4
0x40013a4	          0x83f001	                              xor eax, 1	       914	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4
0x40013a7	            0x84c0	                             test al, al	       914	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4
0x40013a9	            0x742c	                            je 0x40013d7	       914	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4
0x40013ab	        0x488b45f8	                mov rax, qword [rbp - 8]	       915	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_3
0x40013af	        0x488b5008	                mov rdx, qword [rax + 8]	       915	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_3
0x40013b3	        0x488b45f8	                mov rax, qword [rbp - 8]	       915	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_3
0x40013b7	          0x488b08	                    mov rcx, qword [rax]	       915	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_3
0x40013ba	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       915	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_3
0x40013be	          0x4889ce	                            mov rsi, rcx	       915	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_3
0x40013c1	          0x4889c7	                            mov rdi, rax	       915	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_3
0x40013c4	      0xe800000000	                          call 0x40013c9	       915	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_3
0x40013c9	          0x8945dc	             mov dword [rbp - 0x24], eax	       915	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_3
0x40013cc	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       916	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	IF_5
0x40013d0	            0x7405	                            je 0x40013d7	       916	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	IF_5
0x40013d2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       917	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	IF_5
0x40013d5	            0xeb41	                           jmp 0x4001418	       917	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	IF_5
0x40013d7	    0x488b05000000	            mov rax, qword [0x040013de] 	       921	pop3.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x40013de	          0x488b00	                    mov rax, qword [rax]	       921	pop3.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x40013e1	        0x488b55f8	                mov rdx, qword [rbp - 8]	       921	pop3.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x40013e5	          0x488b12	                    mov rdx, qword [rdx]	       921	pop3.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x40013e8	          0x4889d7	                            mov rdi, rdx	       921	pop3.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x40013eb	            0xffd0	                                call rax	       921	pop3.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x40013ed	        0x488b45f8	                mov rax, qword [rbp - 8]	       921	pop3.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x40013f1	    0x48c700000000	                      mov qword [rax], 0	       921	pop3.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x40013f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       924	pop3.c	FUNCTION_21	IF_2	IF_3
0x40013fc	    0x48c740080000	                  mov qword [rax + 8], 0	       924	pop3.c	FUNCTION_21	IF_2	IF_3
0x4001404	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       929	pop3.c	FUNCTION_21	CALL_5
0x4001408	      0xbe00000000	                              mov esi, 0	       929	pop3.c	FUNCTION_21	CALL_5
0x400140d	          0x4889c7	                            mov rdi, rax	       929	pop3.c	FUNCTION_21	CALL_5
0x4001410	      0xe82cefffff	                          call sym.state	       929	pop3.c	FUNCTION_21	CALL_5
0x4001415	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       931	pop3.c	FUNCTION_21
0x4001418	              0xc9	                                   leave	       932	pop3.c	FUNCTION_21
0x4001419	              0xc3	                                     ret	       932	pop3.c	FUNCTION_21
pop3_continue_auth	IF,0:CALL,1:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	16
0x4000792	              0x55	                                push rbp	       491	pop3.c	FUNCTION_10
0x4000793	          0x4889e5	                            mov rbp, rsp	       491	pop3.c	FUNCTION_10
0x4000796	        0x4883ec20	                           sub rsp, 0x20	       491	pop3.c	FUNCTION_10
0x400079a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       491	pop3.c	FUNCTION_10
0x400079e	        0x488975e0	             mov qword [rbp - 0x20], rsi	       491	pop3.c	FUNCTION_10
0x40007a2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       492	pop3.c	FUNCTION_10
0x40007a6	    0x480550060000	                          add rax, 0x650	       492	pop3.c	FUNCTION_10
0x40007ac	        0x488945f8	                mov qword [rbp - 8], rax	       492	pop3.c	FUNCTION_10
0x40007b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       494	pop3.c	FUNCTION_10	CALL_1
0x40007b4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       494	pop3.c	FUNCTION_10	CALL_1
0x40007b8	    0x488d35000000	                   lea rsi, [0x040007bf]	       494	pop3.c	FUNCTION_10	CALL_1
0x40007bf	          0x4889c7	                            mov rdi, rax	       494	pop3.c	FUNCTION_10	CALL_1
0x40007c2	      0xb800000000	                              mov eax, 0	       494	pop3.c	FUNCTION_10	CALL_1
0x40007c7	      0xe800000000	                          call 0x40007cc	       494	pop3.c	FUNCTION_10	CALL_1
0x40007cc	              0xc9	                                   leave	       495	pop3.c	FUNCTION_10
0x40007cd	              0xc3	                                     ret	       495	pop3.c	FUNCTION_10
pop3_perform_authentication	IF,7:CALL,7:SWITCH,0:ELSE,2:functions,0:FOR,0:DO,0:WHILE,0	98
0x40007ce	              0x55	                                push rbp	       506	pop3.c	FUNCTION_11
0x40007cf	          0x4889e5	                            mov rbp, rsp	       506	pop3.c	FUNCTION_11
0x40007d2	        0x4883ec30	                           sub rsp, 0x30	       506	pop3.c	FUNCTION_11
0x40007d6	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       506	pop3.c	FUNCTION_11
0x40007da	    0x64488b042528	                mov rax, qword fs:[0x28]	       506	pop3.c	FUNCTION_11
0x40007e3	        0x488945f8	                mov qword [rbp - 8], rax	       506	pop3.c	FUNCTION_11
0x40007e7	            0x31c0	                            xor eax, eax	       506	pop3.c	FUNCTION_11
0x40007e9	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       507	pop3.c	FUNCTION_11
0x40007f0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       508	pop3.c	FUNCTION_11
0x40007f4	    0x480550060000	                          add rax, 0x650	       508	pop3.c	FUNCTION_11
0x40007fa	        0x488945f0	             mov qword [rbp - 0x10], rax	       508	pop3.c	FUNCTION_11
0x40007fe	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       509	pop3.c	FUNCTION_11
0x4000805	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       513	pop3.c	FUNCTION_11	IF_1	CALL_1
0x4000809	    0x488d90880000	                   lea rdx, [rax + 0x88]	       513	pop3.c	FUNCTION_11	IF_1	CALL_1
0x4000810	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       513	pop3.c	FUNCTION_11	IF_1	CALL_1
0x4000814	          0x4889c6	                            mov rsi, rax	       513	pop3.c	FUNCTION_11	IF_1	CALL_1
0x4000817	          0x4889d7	                            mov rdi, rdx	       513	pop3.c	FUNCTION_11	IF_1	CALL_1
0x400081a	      0xe800000000	                          call 0x400081f	       513	pop3.c	FUNCTION_11	IF_1	CALL_1
0x400081f	          0x83f001	                              xor eax, 1	       513	pop3.c	FUNCTION_11	IF_1	CALL_1
0x4000822	            0x84c0	                             test al, al	       513	pop3.c	FUNCTION_11	IF_1	CALL_1
0x4000824	            0x7419	                            je 0x400083f	       513	pop3.c	FUNCTION_11	IF_1	CALL_1
0x4000826	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       514	pop3.c	FUNCTION_11	IF_1	CALL_2
0x400082a	      0xbe00000000	                              mov esi, 0	       514	pop3.c	FUNCTION_11	IF_1	CALL_2
0x400082f	          0x4889c7	                            mov rdi, rax	       514	pop3.c	FUNCTION_11	IF_1	CALL_2
0x4000832	      0xe80afbffff	                          call sym.state	       514	pop3.c	FUNCTION_11	IF_1	CALL_2
0x4000837	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       515	pop3.c	FUNCTION_11	IF_1
0x400083a	      0xe9f4000000	                           jmp 0x4000933	       515	pop3.c	FUNCTION_11	IF_1
0x400083f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       518	pop3.c	FUNCTION_11	IF_2
0x4000843	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	       518	pop3.c	FUNCTION_11	IF_2
0x4000849	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       518	pop3.c	FUNCTION_11	IF_2
0x400084d	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       518	pop3.c	FUNCTION_11	IF_2
0x4000853	            0x21d0	                            and eax, edx	       518	pop3.c	FUNCTION_11	IF_2
0x4000855	          0x83e004	                              and eax, 4	       518	pop3.c	FUNCTION_11	IF_2
0x4000858	            0x85c0	                           test eax, eax	       518	pop3.c	FUNCTION_11	IF_2
0x400085a	            0x7445	                            je 0x40008a1	       518	pop3.c	FUNCTION_11	IF_2
0x400085c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       520	pop3.c	FUNCTION_11	IF_2	CALL_3
0x4000860	    0x488db8880000	                   lea rdi, [rax + 0x88]	       520	pop3.c	FUNCTION_11	IF_2	CALL_3
0x4000867	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       520	pop3.c	FUNCTION_11	IF_2	CALL_3
0x400086b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       520	pop3.c	FUNCTION_11	IF_2	CALL_3
0x400086f	          0x4889d1	                            mov rcx, rdx	       520	pop3.c	FUNCTION_11	IF_2	CALL_3
0x4000872	      0xba00000000	                              mov edx, 0	       520	pop3.c	FUNCTION_11	IF_2	CALL_3
0x4000877	          0x4889c6	                            mov rsi, rax	       520	pop3.c	FUNCTION_11	IF_2	CALL_3
0x400087a	      0xe800000000	                          call 0x400087f	       520	pop3.c	FUNCTION_11	IF_2	CALL_3
0x400087f	          0x8945ec	             mov dword [rbp - 0x14], eax	       520	pop3.c	FUNCTION_11	IF_2	CALL_3
0x4000882	        0x837dec00	               cmp dword [rbp - 0x14], 0	       522	pop3.c	FUNCTION_11	IF_2	IF_3
0x4000886	            0x7519	                           jne 0x40008a1	       522	pop3.c	FUNCTION_11	IF_2	IF_3
0x4000888	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       523	pop3.c	FUNCTION_11	IF_2	IF_3	IF_4
0x400088b	          0x83f801	                              cmp eax, 1	       523	pop3.c	FUNCTION_11	IF_2	IF_3	IF_4
0x400088e	            0x7511	                           jne 0x40008a1	       523	pop3.c	FUNCTION_11	IF_2	IF_3	IF_4
0x4000890	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       524	pop3.c	FUNCTION_11	IF_2	IF_3	IF_4
0x4000894	      0xbe05000000	                              mov esi, 5	       524	pop3.c	FUNCTION_11	IF_2	IF_3	IF_4
0x4000899	          0x4889c7	                            mov rdi, rax	       524	pop3.c	FUNCTION_11	IF_2	IF_3	IF_4
0x400089c	      0xe8a0faffff	                          call sym.state	       524	pop3.c	FUNCTION_11	IF_2	IF_3	IF_4
0x40008a1	        0x837dec00	               cmp dword [rbp - 0x14], 0	       527	pop3.c	FUNCTION_11	IF_5
0x40008a5	     0xf8585000000	                           jne 0x4000930	       527	pop3.c	FUNCTION_11	IF_5
0x40008ab	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       527	pop3.c	FUNCTION_11	IF_5
0x40008ae	            0x85c0	                           test eax, eax	       527	pop3.c	FUNCTION_11	IF_5
0x40008b0	            0x757e	                           jne 0x4000930	       527	pop3.c	FUNCTION_11	IF_5
0x40008b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       529	pop3.c	FUNCTION_11	IF_5	IF_6
0x40008b6	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	       529	pop3.c	FUNCTION_11	IF_5	IF_6
0x40008bc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       529	pop3.c	FUNCTION_11	IF_5	IF_6
0x40008c0	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       529	pop3.c	FUNCTION_11	IF_5	IF_6
0x40008c6	            0x21d0	                            and eax, edx	       529	pop3.c	FUNCTION_11	IF_5	IF_6
0x40008c8	          0x83e002	                              and eax, 2	       529	pop3.c	FUNCTION_11	IF_5	IF_6
0x40008cb	            0x85c0	                           test eax, eax	       529	pop3.c	FUNCTION_11	IF_5	IF_6
0x40008cd	            0x7411	                            je 0x40008e0	       529	pop3.c	FUNCTION_11	IF_5	IF_6
0x40008cf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       531	pop3.c	FUNCTION_11	IF_5	CALL_5
0x40008d3	          0x4889c7	                            mov rdi, rax	       531	pop3.c	FUNCTION_11	IF_5	CALL_5
0x40008d6	      0xe895fcffff	              call sym.pop3_perform_apop	       531	pop3.c	FUNCTION_11	IF_5	CALL_5
0x40008db	          0x8945ec	             mov dword [rbp - 0x14], eax	       531	pop3.c	FUNCTION_11	IF_5	CALL_5
0x40008de	            0xeb50	                           jmp 0x4000930	       531	pop3.c	FUNCTION_11	IF_5	CALL_5
0x40008e0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       534	pop3.c	FUNCTION_11	IF_5	ELSE_1	IF_7
0x40008e4	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	       534	pop3.c	FUNCTION_11	IF_5	ELSE_1	IF_7
0x40008ea	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       534	pop3.c	FUNCTION_11	IF_5	ELSE_1	IF_7
0x40008ee	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       534	pop3.c	FUNCTION_11	IF_5	ELSE_1	IF_7
0x40008f4	            0x21d0	                            and eax, edx	       534	pop3.c	FUNCTION_11	IF_5	ELSE_1	IF_7
0x40008f6	          0x83e001	                              and eax, 1	       534	pop3.c	FUNCTION_11	IF_5	ELSE_1	IF_7
0x40008f9	            0x85c0	                           test eax, eax	       534	pop3.c	FUNCTION_11	IF_5	ELSE_1	IF_7
0x40008fb	            0x7411	                            je 0x400090e	       534	pop3.c	FUNCTION_11	IF_5	ELSE_1	IF_7
0x40008fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       536	pop3.c	FUNCTION_11	IF_5	ELSE_1	IF_7
0x4000901	          0x4889c7	                            mov rdi, rax	       536	pop3.c	FUNCTION_11	IF_5	ELSE_1	IF_7
0x4000904	      0xe8c7fbffff	              call sym.pop3_perform_user	       536	pop3.c	FUNCTION_11	IF_5	ELSE_1	IF_7
0x4000909	          0x8945ec	             mov dword [rbp - 0x14], eax	       536	pop3.c	FUNCTION_11	IF_5	ELSE_1	IF_7
0x400090c	            0xeb22	                           jmp 0x4000930	       536	pop3.c	FUNCTION_11	IF_5	ELSE_1	IF_7
0x400090e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       539	pop3.c	FUNCTION_11	IF_5	ELSE_2	CALL_7
0x4000912	          0x488b00	                    mov rax, qword [rax]	       539	pop3.c	FUNCTION_11	IF_5	ELSE_2	CALL_7
0x4000915	    0x488d35000000	                   lea rsi, [0x0400091c]	       539	pop3.c	FUNCTION_11	IF_5	ELSE_2	CALL_7
0x400091c	          0x4889c7	                            mov rdi, rax	       539	pop3.c	FUNCTION_11	IF_5	ELSE_2	CALL_7
0x400091f	      0xb800000000	                              mov eax, 0	       539	pop3.c	FUNCTION_11	IF_5	ELSE_2	CALL_7
0x4000924	      0xe800000000	                          call 0x4000929	       539	pop3.c	FUNCTION_11	IF_5	ELSE_2	CALL_7
0x4000929	    0xc745ec430000	           mov dword [rbp - 0x14], 0x43 	       540	pop3.c	FUNCTION_11	IF_5	ELSE_2
0x4000930	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       544	pop3.c	FUNCTION_11
0x4000933	        0x488b4df8	                mov rcx, qword [rbp - 8]	       545	pop3.c	FUNCTION_11
0x4000937	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       545	pop3.c	FUNCTION_11
0x4000940	            0x7405	                            je 0x4000947	       545	pop3.c	FUNCTION_11
0x4000942	      0xe800000000	                          call 0x4000947	       545	pop3.c	FUNCTION_11
0x4000947	              0xc9	                                   leave	       545	pop3.c	FUNCTION_11
0x4000948	              0xc3	                                     ret	       545	pop3.c	FUNCTION_11
pop3_perform_quit	IF,1:CALL,2:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	22
0x4000aa3	              0x55	                                push rbp	       594	pop3.c	FUNCTION_13
0x4000aa4	          0x4889e5	                            mov rbp, rsp	       594	pop3.c	FUNCTION_13
0x4000aa7	        0x4883ec20	                           sub rsp, 0x20	       594	pop3.c	FUNCTION_13
0x4000aab	        0x48897de8	             mov qword [rbp - 0x18], rdi	       594	pop3.c	FUNCTION_13
0x4000aaf	    0xc745fc000000	                  mov dword [rbp - 4], 0	       595	pop3.c	FUNCTION_13
0x4000ab6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       598	pop3.c	FUNCTION_13	CALL_1
0x4000aba	    0x480550060000	                          add rax, 0x650	       598	pop3.c	FUNCTION_13	CALL_1
0x4000ac0	    0x488d15000000	                   lea rdx, [0x04000ac7]	       598	pop3.c	FUNCTION_13	CALL_1
0x4000ac7	    0x488d35000000	                   lea rsi, [0x04000ace]	       598	pop3.c	FUNCTION_13	CALL_1
0x4000ace	          0x4889c7	                            mov rdi, rax	       598	pop3.c	FUNCTION_13	CALL_1
0x4000ad1	      0xb800000000	                              mov eax, 0	       598	pop3.c	FUNCTION_13	CALL_1
0x4000ad6	      0xe800000000	                          call 0x4000adb	       598	pop3.c	FUNCTION_13	CALL_1
0x4000adb	          0x8945fc	                mov dword [rbp - 4], eax	       598	pop3.c	FUNCTION_13	CALL_1
0x4000ade	        0x837dfc00	                  cmp dword [rbp - 4], 0	       600	pop3.c	FUNCTION_13	IF_1
0x4000ae2	            0x7511	                           jne 0x4000af5	       600	pop3.c	FUNCTION_13	IF_1
0x4000ae4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       601	pop3.c	FUNCTION_13	CALL_2
0x4000ae8	      0xbe0a000000	                            mov esi, 0xa	       601	pop3.c	FUNCTION_13	CALL_2
0x4000aed	          0x4889c7	                            mov rdi, rax	       601	pop3.c	FUNCTION_13	CALL_2
0x4000af0	      0xe84cf8ffff	                          call sym.state	       601	pop3.c	FUNCTION_13	CALL_2
0x4000af5	          0x8b45fc	                mov eax, dword [rbp - 4]	       603	pop3.c	FUNCTION_13
0x4000af8	              0xc9	                                   leave	       604	pop3.c	FUNCTION_13
0x4000af9	              0xc3	                                     ret	       604	pop3.c	FUNCTION_13
pop3_state_user_resp	IF,2:CALL,3:SWITCH,0:ELSE,1:functions,0:FOR,0:DO,0:WHILE,0	45
0x40011b0	              0x55	                                push rbp	       837	pop3.c	FUNCTION_19
0x40011b1	          0x4889e5	                            mov rbp, rsp	       837	pop3.c	FUNCTION_19
0x40011b4	        0x4883ec20	                           sub rsp, 0x20	       837	pop3.c	FUNCTION_19
0x40011b8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       837	pop3.c	FUNCTION_19
0x40011bc	          0x8975e4	             mov dword [rbp - 0x1c], esi	       837	pop3.c	FUNCTION_19
0x40011bf	          0x8955e0	             mov dword [rbp - 0x20], edx	       837	pop3.c	FUNCTION_19
0x40011c2	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       838	pop3.c	FUNCTION_19
0x40011c9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       839	pop3.c	FUNCTION_19
0x40011cd	          0x488b00	                    mov rax, qword [rax]	       839	pop3.c	FUNCTION_19
0x40011d0	        0x488945f8	                mov qword [rbp - 8], rax	       839	pop3.c	FUNCTION_19
0x40011d4	        0x837de42b	           cmp dword [rbp - 0x1c], 0x2b 	       843	pop3.c	FUNCTION_19	IF_1
0x40011d8	            0x7424	                            je 0x40011fe	       843	pop3.c	FUNCTION_19	IF_1
0x40011da	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       844	pop3.c	FUNCTION_19	IF_1	CALL_1
0x40011dd	        0x488b45f8	                mov rax, qword [rbp - 8]	       844	pop3.c	FUNCTION_19	IF_1	CALL_1
0x40011e1	    0x488d35000000	                   lea rsi, [0x040011e8]	       844	pop3.c	FUNCTION_19	IF_1	CALL_1
0x40011e8	          0x4889c7	                            mov rdi, rax	       844	pop3.c	FUNCTION_19	IF_1	CALL_1
0x40011eb	      0xb800000000	                              mov eax, 0	       844	pop3.c	FUNCTION_19	IF_1	CALL_1
0x40011f0	      0xe800000000	                          call 0x40011f5	       844	pop3.c	FUNCTION_19	IF_1	CALL_1
0x40011f5	    0xc745f4430000	            mov dword [rbp - 0xc], 0x43 	       845	pop3.c	FUNCTION_19	IF_1
0x40011fc	            0xeb49	                           jmp 0x4001247	       845	pop3.c	FUNCTION_19	IF_1
0x40011fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       850	pop3.c	FUNCTION_19	ELSE_1
0x4001202	    0x488b80180200	           mov rax, qword [rax + 0x218] 	       850	pop3.c	FUNCTION_19	ELSE_1
0x4001209	          0x4885c0	                           test rax, rax	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x400120c	            0x740d	                            je 0x400121b	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x400120e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x4001212	    0x488b80180200	           mov rax, qword [rax + 0x218] 	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x4001219	            0xeb07	                           jmp 0x4001222	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x400121b	    0x488d05000000	                   lea rax, [0x04001222]	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x4001222	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x4001226	    0x488d8a500600	                  lea rcx, [rdx + 0x650]	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x400122d	          0x4889c2	                            mov rdx, rax	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x4001230	    0x488d35000000	                   lea rsi, [0x04001237]	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x4001237	          0x4889cf	                            mov rdi, rcx	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x400123a	      0xb800000000	                              mov eax, 0	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x400123f	      0xe800000000	                          call 0x4001244	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x4001244	          0x8945f4	              mov dword [rbp - 0xc], eax	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x4001247	        0x837df400	                cmp dword [rbp - 0xc], 0	       851	pop3.c	FUNCTION_19	IF_2
0x400124b	            0x7511	                           jne 0x400125e	       851	pop3.c	FUNCTION_19	IF_2
0x400124d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       852	pop3.c	FUNCTION_19	CALL_3
0x4001251	      0xbe08000000	                              mov esi, 8	       852	pop3.c	FUNCTION_19	CALL_3
0x4001256	          0x4889c7	                            mov rdi, rax	       852	pop3.c	FUNCTION_19	CALL_3
0x4001259	      0xe8e3f0ffff	                          call sym.state	       852	pop3.c	FUNCTION_19	CALL_3
0x400125e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       854	pop3.c	FUNCTION_19
0x4001261	              0xc9	                                   leave	       855	pop3.c	FUNCTION_19
0x4001262	              0xc3	                                     ret	       855	pop3.c	FUNCTION_19
pop3_regular_transfer	IF,1:CALL,6:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	58
0x4001ba8	              0x55	                                push rbp	      1280	pop3.c	FUNCTION_34
0x4001ba9	          0x4889e5	                            mov rbp, rsp	      1280	pop3.c	FUNCTION_34
0x4001bac	        0x4883ec30	                           sub rsp, 0x30	      1280	pop3.c	FUNCTION_34
0x4001bb0	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1280	pop3.c	FUNCTION_34
0x4001bb4	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1280	pop3.c	FUNCTION_34
0x4001bb8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1280	pop3.c	FUNCTION_34
0x4001bc1	        0x488945f8	                mov qword [rbp - 8], rax	      1280	pop3.c	FUNCTION_34
0x4001bc5	            0x31c0	                            xor eax, eax	      1280	pop3.c	FUNCTION_34
0x4001bc7	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1281	pop3.c	FUNCTION_34
0x4001bce	        0xc645eb00	                mov byte [rbp - 0x15], 0	      1282	pop3.c	FUNCTION_34
0x4001bd2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1283	pop3.c	FUNCTION_34
0x4001bd6	          0x488b00	                    mov rax, qword [rax]	      1283	pop3.c	FUNCTION_34
0x4001bd9	        0x488945f0	             mov qword [rbp - 0x10], rax	      1283	pop3.c	FUNCTION_34
0x4001bdd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1286	pop3.c	FUNCTION_34
0x4001be1	    0x48c780c00000	mov qword [rax + 0xc0], 0xffffffffffffffff	      1286	pop3.c	FUNCTION_34
0x4001bec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1289	pop3.c	FUNCTION_34	CALL_1
0x4001bf0	      0xbe00000000	                              mov esi, 0	      1289	pop3.c	FUNCTION_34	CALL_1
0x4001bf5	          0x4889c7	                            mov rdi, rax	      1289	pop3.c	FUNCTION_34	CALL_1
0x4001bf8	      0xe800000000	                          call 0x4001bfd	      1289	pop3.c	FUNCTION_34	CALL_1
0x4001bfd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1290	pop3.c	FUNCTION_34	CALL_2
0x4001c01	      0xbe00000000	                              mov esi, 0	      1290	pop3.c	FUNCTION_34	CALL_2
0x4001c06	          0x4889c7	                            mov rdi, rax	      1290	pop3.c	FUNCTION_34	CALL_2
0x4001c09	      0xe800000000	                          call 0x4001c0e	      1290	pop3.c	FUNCTION_34	CALL_2
0x4001c0e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1291	pop3.c	FUNCTION_34	CALL_3
0x4001c12	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      1291	pop3.c	FUNCTION_34	CALL_3
0x4001c19	          0x4889c7	                            mov rdi, rax	      1291	pop3.c	FUNCTION_34	CALL_3
0x4001c1c	      0xe800000000	                          call 0x4001c21	      1291	pop3.c	FUNCTION_34	CALL_3
0x4001c21	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1292	pop3.c	FUNCTION_34	CALL_4
0x4001c25	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      1292	pop3.c	FUNCTION_34	CALL_4
0x4001c2c	          0x4889c7	                            mov rdi, rax	      1292	pop3.c	FUNCTION_34	CALL_4
0x4001c2f	      0xe800000000	                          call 0x4001c34	      1292	pop3.c	FUNCTION_34	CALL_4
0x4001c34	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1295	pop3.c	FUNCTION_34	CALL_5
0x4001c38	        0x488d4deb	                   lea rcx, [rbp - 0x15]	      1295	pop3.c	FUNCTION_34	CALL_5
0x4001c3c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1295	pop3.c	FUNCTION_34	CALL_5
0x4001c40	          0x4889ce	                            mov rsi, rcx	      1295	pop3.c	FUNCTION_34	CALL_5
0x4001c43	          0x4889c7	                            mov rdi, rax	      1295	pop3.c	FUNCTION_34	CALL_5
0x4001c46	      0xe83cfdffff	                   call sym.pop3_perform	      1295	pop3.c	FUNCTION_34	CALL_5
0x4001c4b	          0x8945ec	             mov dword [rbp - 0x14], eax	      1295	pop3.c	FUNCTION_34	CALL_5
0x4001c4e	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1298	pop3.c	FUNCTION_34	IF_1
0x4001c52	            0x7523	                           jne 0x4001c77	      1298	pop3.c	FUNCTION_34	IF_1
0x4001c54	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1298	pop3.c	FUNCTION_34	IF_1
0x4001c58	           0xfb600	                   movzx eax, byte [rax]	      1298	pop3.c	FUNCTION_34	IF_1
0x4001c5b	            0x84c0	                             test al, al	      1298	pop3.c	FUNCTION_34	IF_1
0x4001c5d	            0x7418	                            je 0x4001c77	      1298	pop3.c	FUNCTION_34	IF_1
0x4001c5f	         0xfb645eb	            movzx eax, byte [rbp - 0x15]	      1299	pop3.c	FUNCTION_34	CALL_6
0x4001c63	           0xfb6d0	                           movzx edx, al	      1299	pop3.c	FUNCTION_34	CALL_6
0x4001c66	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1299	pop3.c	FUNCTION_34	CALL_6
0x4001c6a	            0x89d6	                            mov esi, edx	      1299	pop3.c	FUNCTION_34	CALL_6
0x4001c6c	          0x4889c7	                            mov rdi, rax	      1299	pop3.c	FUNCTION_34	CALL_6
0x4001c6f	      0xe8d0feffff	              call sym.pop3_dophase_done	      1299	pop3.c	FUNCTION_34	CALL_6
0x4001c74	          0x8945ec	             mov dword [rbp - 0x14], eax	      1299	pop3.c	FUNCTION_34	CALL_6
0x4001c77	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1301	pop3.c	FUNCTION_34
0x4001c7a	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1302	pop3.c	FUNCTION_34
0x4001c7e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1302	pop3.c	FUNCTION_34
0x4001c87	            0x7405	                            je 0x4001c8e	      1302	pop3.c	FUNCTION_34
0x4001c89	      0xe800000000	                          call 0x4001c8e	      1302	pop3.c	FUNCTION_34
0x4001c8e	              0xc9	                                   leave	      1302	pop3.c	FUNCTION_34
0x4001c8f	              0xc3	                                     ret	      1302	pop3.c	FUNCTION_34
pop3_parse_custom_request	IF,1:CALL,1:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	30
0x4001f0a	              0x55	                                push rbp	      1403	pop3.c	FUNCTION_38
0x4001f0b	          0x4889e5	                            mov rbp, rsp	      1403	pop3.c	FUNCTION_38
0x4001f0e	        0x4883ec30	                           sub rsp, 0x30	      1403	pop3.c	FUNCTION_38
0x4001f12	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1403	pop3.c	FUNCTION_38
0x4001f16	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1404	pop3.c	FUNCTION_38
0x4001f1d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1405	pop3.c	FUNCTION_38
0x4001f21	          0x488b00	                    mov rax, qword [rax]	      1405	pop3.c	FUNCTION_38
0x4001f24	        0x488945e8	             mov qword [rbp - 0x18], rax	      1405	pop3.c	FUNCTION_38
0x4001f28	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1406	pop3.c	FUNCTION_38
0x4001f2c	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1406	pop3.c	FUNCTION_38
0x4001f33	        0x488945f0	             mov qword [rbp - 0x10], rax	      1406	pop3.c	FUNCTION_38
0x4001f37	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1407	pop3.c	FUNCTION_38
0x4001f3b	    0x488b80600800	           mov rax, qword [rax + 0x860] 	      1407	pop3.c	FUNCTION_38
0x4001f42	        0x488945f8	                mov qword [rbp - 8], rax	      1407	pop3.c	FUNCTION_38
0x4001f46	      0x48837df800	                  cmp qword [rbp - 8], 0	      1410	pop3.c	FUNCTION_38	IF_1
0x4001f4b	            0x742f	                            je 0x4001f7c	      1410	pop3.c	FUNCTION_38	IF_1
0x4001f4d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1411	pop3.c	FUNCTION_38	CALL_1
0x4001f51	        0x488d5010	                   lea rdx, [rax + 0x10]	      1411	pop3.c	FUNCTION_38	CALL_1
0x4001f55	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1411	pop3.c	FUNCTION_38	CALL_1
0x4001f59	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1411	pop3.c	FUNCTION_38	CALL_1
0x4001f5d	    0x41b901000000	                              mov r9d, 1	      1411	pop3.c	FUNCTION_38	CALL_1
0x4001f63	    0x41b800000000	                              mov r8d, 0	      1411	pop3.c	FUNCTION_38	CALL_1
0x4001f69	          0x4889d1	                            mov rcx, rdx	      1411	pop3.c	FUNCTION_38	CALL_1
0x4001f6c	      0xba00000000	                              mov edx, 0	      1411	pop3.c	FUNCTION_38	CALL_1
0x4001f71	          0x4889c7	                            mov rdi, rax	      1411	pop3.c	FUNCTION_38	CALL_1
0x4001f74	      0xe800000000	                          call 0x4001f79	      1411	pop3.c	FUNCTION_38	CALL_1
0x4001f79	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1411	pop3.c	FUNCTION_38	CALL_1
0x4001f7c	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1413	pop3.c	FUNCTION_38
0x4001f7f	              0xc9	                                   leave	      1414	pop3.c	FUNCTION_38
0x4001f80	              0xc3	                                     ret	      1414	pop3.c	FUNCTION_38
pop3_do	IF,2:CALL,3:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	33
0x4001a1d	              0x55	                                push rbp	      1191	pop3.c	FUNCTION_30
0x4001a1e	          0x4889e5	                            mov rbp, rsp	      1191	pop3.c	FUNCTION_30
0x4001a21	        0x4883ec20	                           sub rsp, 0x20	      1191	pop3.c	FUNCTION_30
0x4001a25	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1191	pop3.c	FUNCTION_30
0x4001a29	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1191	pop3.c	FUNCTION_30
0x4001a2d	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1192	pop3.c	FUNCTION_30
0x4001a34	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1194	pop3.c	FUNCTION_30
0x4001a38	          0xc60000	                       mov byte [rax], 0	      1194	pop3.c	FUNCTION_30
0x4001a3b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1197	pop3.c	FUNCTION_30	CALL_1
0x4001a3f	          0x4889c7	                            mov rdi, rax	      1197	pop3.c	FUNCTION_30	CALL_1
0x4001a42	      0xe860040000	            call sym.pop3_parse_url_path	      1197	pop3.c	FUNCTION_30	CALL_1
0x4001a47	          0x8945fc	                mov dword [rbp - 4], eax	      1197	pop3.c	FUNCTION_30	CALL_1
0x4001a4a	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1198	pop3.c	FUNCTION_30	IF_1
0x4001a4e	            0x7405	                            je 0x4001a55	      1198	pop3.c	FUNCTION_30	IF_1
0x4001a50	          0x8b45fc	                mov eax, dword [rbp - 4]	      1199	pop3.c	FUNCTION_30	IF_1
0x4001a53	            0xeb33	                           jmp 0x4001a88	      1199	pop3.c	FUNCTION_30	IF_1
0x4001a55	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1202	pop3.c	FUNCTION_30	CALL_2
0x4001a59	          0x4889c7	                            mov rdi, rax	      1202	pop3.c	FUNCTION_30	CALL_2
0x4001a5c	      0xe8a9040000	      call sym.pop3_parse_custom_request	      1202	pop3.c	FUNCTION_30	CALL_2
0x4001a61	          0x8945fc	                mov dword [rbp - 4], eax	      1202	pop3.c	FUNCTION_30	CALL_2
0x4001a64	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1203	pop3.c	FUNCTION_30	IF_2
0x4001a68	            0x7405	                            je 0x4001a6f	      1203	pop3.c	FUNCTION_30	IF_2
0x4001a6a	          0x8b45fc	                mov eax, dword [rbp - 4]	      1204	pop3.c	FUNCTION_30	IF_2
0x4001a6d	            0xeb19	                           jmp 0x4001a88	      1204	pop3.c	FUNCTION_30	IF_2
0x4001a6f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1206	pop3.c	FUNCTION_30	CALL_3
0x4001a73	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1206	pop3.c	FUNCTION_30	CALL_3
0x4001a77	          0x4889d6	                            mov rsi, rdx	      1206	pop3.c	FUNCTION_30	CALL_3
0x4001a7a	          0x4889c7	                            mov rdi, rax	      1206	pop3.c	FUNCTION_30	CALL_3
0x4001a7d	      0xe826010000	          call sym.pop3_regular_transfer	      1206	pop3.c	FUNCTION_30	CALL_3
0x4001a82	          0x8945fc	                mov dword [rbp - 4], eax	      1206	pop3.c	FUNCTION_30	CALL_3
0x4001a85	          0x8b45fc	                mov eax, dword [rbp - 4]	      1208	pop3.c	FUNCTION_30
0x4001a88	              0xc9	                                   leave	      1209	pop3.c	FUNCTION_30
0x4001a89	              0xc3	                                     ret	      1209	pop3.c	FUNCTION_30
pop3_parse_url_path	IF,0:CALL,1:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	25
0x4001ea7	              0x55	                                push rbp	      1386	pop3.c	FUNCTION_37
0x4001ea8	          0x4889e5	                            mov rbp, rsp	      1386	pop3.c	FUNCTION_37
0x4001eab	        0x4883ec30	                           sub rsp, 0x30	      1386	pop3.c	FUNCTION_37
0x4001eaf	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1386	pop3.c	FUNCTION_37
0x4001eb3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1388	pop3.c	FUNCTION_37
0x4001eb7	          0x488b00	                    mov rax, qword [rax]	      1388	pop3.c	FUNCTION_37
0x4001eba	        0x488945e8	             mov qword [rbp - 0x18], rax	      1388	pop3.c	FUNCTION_37
0x4001ebe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1389	pop3.c	FUNCTION_37
0x4001ec2	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1389	pop3.c	FUNCTION_37
0x4001ec9	        0x488945f0	             mov qword [rbp - 0x10], rax	      1389	pop3.c	FUNCTION_37
0x4001ecd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1390	pop3.c	FUNCTION_37
0x4001ed1	    0x488b80185100	          mov rax, qword [rax + 0x5118] 	      1390	pop3.c	FUNCTION_37
0x4001ed8	        0x488945f8	                mov qword [rbp - 8], rax	      1390	pop3.c	FUNCTION_37
0x4001edc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1393	pop3.c	FUNCTION_37	CALL_1
0x4001ee0	        0x488d5008	                      lea rdx, [rax + 8]	      1393	pop3.c	FUNCTION_37	CALL_1
0x4001ee4	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1393	pop3.c	FUNCTION_37	CALL_1
0x4001ee8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1393	pop3.c	FUNCTION_37	CALL_1
0x4001eec	    0x41b901000000	                              mov r9d, 1	      1393	pop3.c	FUNCTION_37	CALL_1
0x4001ef2	    0x41b800000000	                              mov r8d, 0	      1393	pop3.c	FUNCTION_37	CALL_1
0x4001ef8	          0x4889d1	                            mov rcx, rdx	      1393	pop3.c	FUNCTION_37	CALL_1
0x4001efb	      0xba00000000	                              mov edx, 0	      1393	pop3.c	FUNCTION_37	CALL_1
0x4001f00	          0x4889c7	                            mov rdi, rax	      1393	pop3.c	FUNCTION_37	CALL_1
0x4001f03	      0xe800000000	                          call 0x4001f08	      1393	pop3.c	FUNCTION_37	CALL_1
0x4001f08	              0xc9	                                   leave	      1394	pop3.c	FUNCTION_37
0x4001f09	              0xc3	                                     ret	      1394	pop3.c	FUNCTION_37
pop3_disconnect	IF,2:CALL,5:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	50
0x4001a8a	              0x55	                                push rbp	      1219	pop3.c	FUNCTION_31
0x4001a8b	          0x4889e5	                            mov rbp, rsp	      1219	pop3.c	FUNCTION_31
0x4001a8e	        0x4883ec20	                           sub rsp, 0x20	      1219	pop3.c	FUNCTION_31
0x4001a92	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1219	pop3.c	FUNCTION_31
0x4001a96	            0x89f0	                            mov eax, esi	      1219	pop3.c	FUNCTION_31
0x4001a98	          0x8845e4	               mov byte [rbp - 0x1c], al	      1219	pop3.c	FUNCTION_31
0x4001a9b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1220	pop3.c	FUNCTION_31
0x4001a9f	    0x480550060000	                          add rax, 0x650	      1220	pop3.c	FUNCTION_31
0x4001aa5	        0x488945f8	                mov qword [rbp - 8], rax	      1220	pop3.c	FUNCTION_31
0x4001aa9	         0xfb645e4	            movzx eax, byte [rbp - 0x1c]	      1228	pop3.c	FUNCTION_31	IF_1
0x4001aad	          0x83f001	                              xor eax, 1	      1228	pop3.c	FUNCTION_31	IF_1
0x4001ab0	            0x84c0	                             test al, al	      1228	pop3.c	FUNCTION_31	IF_1
0x4001ab2	            0x743c	                            je 0x4001af0	      1228	pop3.c	FUNCTION_31	IF_1
0x4001ab4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1228	pop3.c	FUNCTION_31	IF_1
0x4001ab8	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1228	pop3.c	FUNCTION_31	IF_1
0x4001abc	          0x4885c0	                           test rax, rax	      1228	pop3.c	FUNCTION_31	IF_1
0x4001abf	            0x742f	                            je 0x4001af0	      1228	pop3.c	FUNCTION_31	IF_1
0x4001ac1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1228	pop3.c	FUNCTION_31	IF_1
0x4001ac5	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1228	pop3.c	FUNCTION_31	IF_1
0x4001ac9	     0xfb680a70300	          movzx eax, byte [rax + 0x3a7] 	      1228	pop3.c	FUNCTION_31	IF_1
0x4001ad0	            0x84c0	                             test al, al	      1228	pop3.c	FUNCTION_31	IF_1
0x4001ad2	            0x741c	                            je 0x4001af0	      1228	pop3.c	FUNCTION_31	IF_1
0x4001ad4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1229	pop3.c	FUNCTION_31	IF_1	IF_2	CALL_1
0x4001ad8	          0x4889c7	                            mov rdi, rax	      1229	pop3.c	FUNCTION_31	IF_1	IF_2	CALL_1
0x4001adb	      0xe8c3efffff	              call sym.pop3_perform_quit	      1229	pop3.c	FUNCTION_31	IF_1	IF_2	CALL_1
0x4001ae0	            0x85c0	                           test eax, eax	      1229	pop3.c	FUNCTION_31	IF_1	IF_2	CALL_1
0x4001ae2	            0x750c	                           jne 0x4001af0	      1229	pop3.c	FUNCTION_31	IF_1	IF_2	CALL_1
0x4001ae4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1230	pop3.c	FUNCTION_31	IF_1	IF_2
0x4001ae8	          0x4889c7	                            mov rdi, rax	      1230	pop3.c	FUNCTION_31	IF_1	IF_2
0x4001aeb	      0xe80bfcffff	           call sym.pop3_block_statemach	      1230	pop3.c	FUNCTION_31	IF_1	IF_2
0x4001af0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1233	pop3.c	FUNCTION_31	CALL_3
0x4001af4	          0x4889c7	                            mov rdi, rax	      1233	pop3.c	FUNCTION_31	CALL_3
0x4001af7	      0xe800000000	                          call 0x4001afc	      1233	pop3.c	FUNCTION_31	CALL_3
0x4001afc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1236	pop3.c	FUNCTION_31	CALL_4
0x4001b00	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	      1236	pop3.c	FUNCTION_31	CALL_4
0x4001b06	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1236	pop3.c	FUNCTION_31	CALL_4
0x4001b0a	            0x89d6	                            mov esi, edx	      1236	pop3.c	FUNCTION_31	CALL_4
0x4001b0c	          0x4889c7	                            mov rdi, rax	      1236	pop3.c	FUNCTION_31	CALL_4
0x4001b0f	      0xe800000000	                          call 0x4001b14	      1236	pop3.c	FUNCTION_31	CALL_4
0x4001b14	    0x488b05000000	            mov rax, qword [0x04001b1b] 	      1239	pop3.c	FUNCTION_31	CALL_5
0x4001b1b	          0x488b00	                    mov rax, qword [rax]	      1239	pop3.c	FUNCTION_31	CALL_5
0x4001b1e	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1239	pop3.c	FUNCTION_31	CALL_5
0x4001b22	    0x488b92b00000	            mov rdx, qword [rdx + 0xb0] 	      1239	pop3.c	FUNCTION_31	CALL_5
0x4001b29	          0x4889d7	                            mov rdi, rdx	      1239	pop3.c	FUNCTION_31	CALL_5
0x4001b2c	            0xffd0	                                call rax	      1239	pop3.c	FUNCTION_31	CALL_5
0x4001b2e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1239	pop3.c	FUNCTION_31	CALL_5
0x4001b32	    0x48c780b00000	               mov qword [rax + 0xb0], 0	      1239	pop3.c	FUNCTION_31	CALL_5
0x4001b3d	      0xb800000000	                              mov eax, 0	      1241	pop3.c	FUNCTION_31
0x4001b42	              0xc9	                                   leave	      1242	pop3.c	FUNCTION_31
0x4001b43	              0xc3	                                     ret	      1242	pop3.c	FUNCTION_31
pop3_state_apop_resp	IF,1:CALL,2:SWITCH,0:ELSE,1:functions,0:FOR,0:DO,0:WHILE,0	27
0x400114c	              0x55	                                push rbp	       816	pop3.c	FUNCTION_18
0x400114d	          0x4889e5	                            mov rbp, rsp	       816	pop3.c	FUNCTION_18
0x4001150	        0x4883ec20	                           sub rsp, 0x20	       816	pop3.c	FUNCTION_18
0x4001154	        0x48897de8	             mov qword [rbp - 0x18], rdi	       816	pop3.c	FUNCTION_18
0x4001158	          0x8975e4	             mov dword [rbp - 0x1c], esi	       816	pop3.c	FUNCTION_18
0x400115b	          0x8955e0	             mov dword [rbp - 0x20], edx	       816	pop3.c	FUNCTION_18
0x400115e	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       817	pop3.c	FUNCTION_18
0x4001165	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       818	pop3.c	FUNCTION_18
0x4001169	          0x488b00	                    mov rax, qword [rax]	       818	pop3.c	FUNCTION_18
0x400116c	        0x488945f8	                mov qword [rbp - 8], rax	       818	pop3.c	FUNCTION_18
0x4001170	        0x837de42b	           cmp dword [rbp - 0x1c], 0x2b 	       822	pop3.c	FUNCTION_18	IF_1
0x4001174	            0x7424	                            je 0x400119a	       822	pop3.c	FUNCTION_18	IF_1
0x4001176	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       823	pop3.c	FUNCTION_18	IF_1	CALL_1
0x4001179	        0x488b45f8	                mov rax, qword [rbp - 8]	       823	pop3.c	FUNCTION_18	IF_1	CALL_1
0x400117d	    0x488d35000000	                   lea rsi, [0x04001184]	       823	pop3.c	FUNCTION_18	IF_1	CALL_1
0x4001184	          0x4889c7	                            mov rdi, rax	       823	pop3.c	FUNCTION_18	IF_1	CALL_1
0x4001187	      0xb800000000	                              mov eax, 0	       823	pop3.c	FUNCTION_18	IF_1	CALL_1
0x400118c	      0xe800000000	                          call 0x4001191	       823	pop3.c	FUNCTION_18	IF_1	CALL_1
0x4001191	    0xc745f4430000	            mov dword [rbp - 0xc], 0x43 	       824	pop3.c	FUNCTION_18	IF_1
0x4001198	            0xeb11	                           jmp 0x40011ab	       824	pop3.c	FUNCTION_18	IF_1
0x400119a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       828	pop3.c	FUNCTION_18	CALL_2
0x400119e	      0xbe00000000	                              mov esi, 0	       828	pop3.c	FUNCTION_18	CALL_2
0x40011a3	          0x4889c7	                            mov rdi, rax	       828	pop3.c	FUNCTION_18	CALL_2
0x40011a6	      0xe896f1ffff	                          call sym.state	       828	pop3.c	FUNCTION_18	CALL_2
0x40011ab	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       830	pop3.c	FUNCTION_18
0x40011ae	              0xc9	                                   leave	       831	pop3.c	FUNCTION_18
0x40011af	              0xc3	                                     ret	       831	pop3.c	FUNCTION_18
pop3_setup_connection	IF,1:CALL,1:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	25
0x4001c90	              0x55	                                push rbp	      1305	pop3.c	FUNCTION_35
0x4001c91	          0x4889e5	                            mov rbp, rsp	      1305	pop3.c	FUNCTION_35
0x4001c94	        0x4883ec20	                           sub rsp, 0x20	      1305	pop3.c	FUNCTION_35
0x4001c98	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1305	pop3.c	FUNCTION_35
0x4001c9c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1306	pop3.c	FUNCTION_35
0x4001ca0	          0x488b00	                    mov rax, qword [rax]	      1306	pop3.c	FUNCTION_35
0x4001ca3	        0x488945f8	                mov qword [rbp - 8], rax	      1306	pop3.c	FUNCTION_35
0x4001ca7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1309	pop3.c	FUNCTION_35	CALL_1
0x4001cab	          0x4889c7	                            mov rdi, rax	      1309	pop3.c	FUNCTION_35	CALL_1
0x4001cae	      0xe895faffff	                      call sym.pop3_init	      1309	pop3.c	FUNCTION_35	CALL_1
0x4001cb3	          0x8945f4	              mov dword [rbp - 0xc], eax	      1309	pop3.c	FUNCTION_35	CALL_1
0x4001cb6	        0x837df400	                cmp dword [rbp - 0xc], 0	      1310	pop3.c	FUNCTION_35	IF_1
0x4001cba	            0x7405	                            je 0x4001cc1	      1310	pop3.c	FUNCTION_35	IF_1
0x4001cbc	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1311	pop3.c	FUNCTION_35	IF_1
0x4001cbf	            0xeb2a	                           jmp 0x4001ceb	      1311	pop3.c	FUNCTION_35	IF_1
0x4001cc1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1314	pop3.c	FUNCTION_35
0x4001cc5	    0xc68098030000	               mov byte [rax + 0x398], 0	      1314	pop3.c	FUNCTION_35
0x4001ccc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1315	pop3.c	FUNCTION_35
0x4001cd0	    0x488b80185100	          mov rax, qword [rax + 0x5118] 	      1315	pop3.c	FUNCTION_35
0x4001cd7	        0x488d5001	                      lea rdx, [rax + 1]	      1315	pop3.c	FUNCTION_35
0x4001cdb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1315	pop3.c	FUNCTION_35
0x4001cdf	    0x488990185100	          mov qword [rax + 0x5118], rdx 	      1315	pop3.c	FUNCTION_35
0x4001ce6	      0xb800000000	                              mov eax, 0	      1317	pop3.c	FUNCTION_35
0x4001ceb	              0xc9	                                   leave	      1318	pop3.c	FUNCTION_35
0x4001cec	              0xc3	                                     ret	      1318	pop3.c	FUNCTION_35
pop3_state_capa_resp	IF,10:CALL,10:SWITCH,0:ELSE,7:functions,0:FOR,2:DO,0:WHILE,1	206
0x4000c99	              0x55	                                push rbp	       661	pop3.c	FUNCTION_15
0x4000c9a	          0x4889e5	                            mov rbp, rsp	       661	pop3.c	FUNCTION_15
0x4000c9d	        0x4883ec50	                           sub rsp, 0x50	       661	pop3.c	FUNCTION_15
0x4000ca1	        0x48897db8	             mov qword [rbp - 0x48], rdi	       661	pop3.c	FUNCTION_15
0x4000ca5	          0x8975b4	             mov dword [rbp - 0x4c], esi	       661	pop3.c	FUNCTION_15
0x4000ca8	          0x8955b0	             mov dword [rbp - 0x50], edx	       661	pop3.c	FUNCTION_15
0x4000cab	    0x64488b042528	                mov rax, qword fs:[0x28]	       661	pop3.c	FUNCTION_15
0x4000cb4	        0x488945f8	                mov qword [rbp - 8], rax	       661	pop3.c	FUNCTION_15
0x4000cb8	            0x31c0	                            xor eax, eax	       661	pop3.c	FUNCTION_15
0x4000cba	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       662	pop3.c	FUNCTION_15
0x4000cc1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       663	pop3.c	FUNCTION_15
0x4000cc5	          0x488b00	                    mov rax, qword [rax]	       663	pop3.c	FUNCTION_15
0x4000cc8	        0x488945e8	             mov qword [rbp - 0x18], rax	       663	pop3.c	FUNCTION_15
0x4000ccc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       664	pop3.c	FUNCTION_15
0x4000cd0	    0x480550060000	                          add rax, 0x650	       664	pop3.c	FUNCTION_15
0x4000cd6	        0x488945f0	             mov qword [rbp - 0x10], rax	       664	pop3.c	FUNCTION_15
0x4000cda	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       665	pop3.c	FUNCTION_15
0x4000cde	    0x488b80200d00	           mov rax, qword [rax + 0xd20] 	       665	pop3.c	FUNCTION_15
0x4000ce5	        0x488945d0	             mov qword [rbp - 0x30], rax	       665	pop3.c	FUNCTION_15
0x4000ce9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       666	pop3.c	FUNCTION_15	CALL_1
0x4000ced	          0x4889c7	                            mov rdi, rax	       666	pop3.c	FUNCTION_15	CALL_1
0x4000cf0	      0xe800000000	                          call 0x4000cf5	       666	pop3.c	FUNCTION_15	CALL_1
0x4000cf5	        0x488945d8	             mov qword [rbp - 0x28], rax	       666	pop3.c	FUNCTION_15	CALL_1
0x4000cf9	        0x837db42a	           cmp dword [rbp - 0x4c], 0x2a 	       672	pop3.c	FUNCTION_15	IF_1
0x4000cfd	     0xf85c5010000	                           jne 0x4000ec8	       672	pop3.c	FUNCTION_15	IF_1
0x4000d03	      0x48837dd803	               cmp qword [rbp - 0x28], 3	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4000d08	            0x762c	                           jbe 0x4000d36	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4000d0a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4000d0e	      0xba04000000	                              mov edx, 4	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4000d13	    0x488d35000000	                   lea rsi, [0x04000d1a]	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4000d1a	          0x4889c7	                            mov rdi, rax	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4000d1d	      0xe800000000	                          call 0x4000d22	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4000d22	            0x85c0	                           test eax, eax	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4000d24	            0x7510	                           jne 0x4000d36	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4000d26	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       675	pop3.c	FUNCTION_15	IF_1	IF_2
0x4000d2a	    0xc680b8000000	                mov byte [rax + 0xb8], 1	       675	pop3.c	FUNCTION_15	IF_1	IF_2
0x4000d31	      0xe959020000	                           jmp 0x4000f8f	       675	pop3.c	FUNCTION_15	IF_1	IF_2
0x4000d36	      0x48837dd803	               cmp qword [rbp - 0x28], 3	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x4000d3b	            0x763a	                           jbe 0x4000d77	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x4000d3d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x4000d41	      0xba04000000	                              mov edx, 4	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x4000d46	    0x488d35000000	                   lea rsi, [0x04000d4d]	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x4000d4d	          0x4889c7	                            mov rdi, rax	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x4000d50	      0xe800000000	                          call 0x4000d55	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x4000d55	            0x85c0	                           test eax, eax	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x4000d57	            0x751e	                           jne 0x4000d77	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x4000d59	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       679	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3
0x4000d5d	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	       679	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3
0x4000d63	          0x83c801	                               or eax, 1	       679	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3
0x4000d66	            0x89c2	                            mov edx, eax	       679	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3
0x4000d68	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       679	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3
0x4000d6c	    0x8990a8000000	             mov dword [rax + 0xa8], edx	       679	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3
0x4000d72	      0xe918020000	                           jmp 0x4000f8f	       679	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3
0x4000d77	      0x48837dd804	               cmp qword [rbp - 0x28], 4	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x4000d7c	     0xf860d020000	                           jbe 0x4000f8f	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x4000d82	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x4000d86	      0xba05000000	                              mov edx, 5	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x4000d8b	    0x488d35000000	                   lea rsi, [0x04000d92]	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x4000d92	          0x4889c7	                            mov rdi, rax	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x4000d95	      0xe800000000	                          call 0x4000d9a	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x4000d9a	            0x85c0	                           test eax, eax	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x4000d9c	     0xf85ed010000	                           jne 0x4000f8f	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x4000da2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       683	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4
0x4000da6	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	       683	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4
0x4000dac	          0x83c804	                               or eax, 4	       683	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4
0x4000daf	            0x89c2	                            mov edx, eax	       683	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4
0x4000db1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       683	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4
0x4000db5	    0x8990a8000000	             mov dword [rax + 0xa8], edx	       683	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4
0x4000dbb	      0x488345d005	               add qword [rbp - 0x30], 5	       686	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4
0x4000dc0	      0x48836dd805	               sub qword [rbp - 0x28], 5	       687	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4
0x4000dc5	            0xeb0a	                           jmp 0x4000dd1	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000dc7	      0x488345d001	               add qword [rbp - 0x30], 1	       698	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000dcc	      0x48836dd801	               sub qword [rbp - 0x28], 1	       699	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000dd1	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000dd6	            0x742c	                            je 0x4000e04	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000dd8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       695	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000ddc	           0xfb600	                   movzx eax, byte [rax]	       695	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000ddf	            0x3c20	                            cmp al, 0x20	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000de1	            0x74e4	                            je 0x4000dc7	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000de3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       695	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000de7	           0xfb600	                   movzx eax, byte [rax]	       695	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000dea	            0x3c09	                               cmp al, 9	       695	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000dec	            0x74d9	                            je 0x4000dc7	       695	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000dee	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       696	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000df2	           0xfb600	                   movzx eax, byte [rax]	       696	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000df5	            0x3c0d	                             cmp al, 0xd	       695	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000df7	            0x74ce	                            je 0x4000dc7	       695	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000df9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       696	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000dfd	           0xfb600	                   movzx eax, byte [rax]	       696	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000e00	            0x3c0a	                             cmp al, 0xa	       696	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000e02	            0x74c3	                            je 0x4000dc7	       696	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4000e04	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       702	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_5
0x4000e09	     0xf847f010000	                            je 0x4000f8e	       702	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_5
0x4000e0f	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e17	            0xeb05	                           jmp 0x4000e1e	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e19	      0x488345e001	               add qword [rbp - 0x20], 1	       709	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e1e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e22	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e26	            0x7348	                           jae 0x4000e70	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e28	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e2c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e30	          0x4801d0	                            add rax, rdx	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e33	           0xfb600	                   movzx eax, byte [rax]	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e36	            0x3c20	                            cmp al, 0x20	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e38	            0x7436	                            je 0x4000e70	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e3a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e3e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e42	          0x4801d0	                            add rax, rdx	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e45	           0xfb600	                   movzx eax, byte [rax]	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e48	            0x3c09	                               cmp al, 9	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e4a	            0x7424	                            je 0x4000e70	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e4c	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e50	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e54	          0x4801d0	                            add rax, rdx	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e57	           0xfb600	                   movzx eax, byte [rax]	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e5a	            0x3c0d	                             cmp al, 0xd	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e5c	            0x7412	                            je 0x4000e70	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e5e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       708	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e62	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       708	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e66	          0x4801d0	                            add rax, rdx	       708	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e69	           0xfb600	                   movzx eax, byte [rax]	       708	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e6c	            0x3c0a	                             cmp al, 0xa	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e6e	            0x75a9	                           jne 0x4000e19	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4000e70	        0x488d55c8	                   lea rdx, [rbp - 0x38]	       712	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	CALL_5
0x4000e74	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       712	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	CALL_5
0x4000e78	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       712	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	CALL_5
0x4000e7c	          0x4889ce	                            mov rsi, rcx	       712	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	CALL_5
0x4000e7f	          0x4889c7	                            mov rdi, rax	       712	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	CALL_5
0x4000e82	      0xe800000000	                          call 0x4000e87	       712	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	CALL_5
0x4000e87	          0x8945c4	             mov dword [rbp - 0x3c], eax	       712	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	CALL_5
0x4000e8a	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       713	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4000e8e	            0x7423	                            je 0x4000eb3	       713	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4000e90	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       713	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4000e94	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       713	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4000e98	            0x7519	                           jne 0x4000eb3	       713	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4000e9a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       714	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4000e9e	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	       714	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4000ea4	           0xb45c4	              or eax, dword [rbp - 0x3c]	       714	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4000ea7	            0x89c2	                            mov edx, eax	       714	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4000ea9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       714	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4000ead	    0x899094000000	             mov dword [rax + 0x94], edx	       714	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4000eb3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       716	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1
0x4000eb7	        0x480145d0	            add qword [rbp - 0x30], rax 	       716	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1
0x4000ebb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       717	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1
0x4000ebf	        0x482945d8	             sub qword [rbp - 0x28], rax	       717	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1
0x4000ec3	      0xe9fdfeffff	                           jmp 0x4000dc5	       718	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1
0x4000ec8	        0x837db42b	           cmp dword [rbp - 0x4c], 0x2b 	       721	pop3.c	FUNCTION_15	ELSE_3	IF_7
0x4000ecc	     0xf8592000000	                           jne 0x4000f64	       721	pop3.c	FUNCTION_15	ELSE_3	IF_7
0x4000ed2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       722	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8
0x4000ed6	    0x8b80f0070000	           mov eax, dword [rax + 0x7f0] 	       722	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8
0x4000edc	            0x85c0	                           test eax, eax	       722	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8
0x4000ede	            0x7473	                            je 0x4000f53	       722	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8
0x4000ee0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       722	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8
0x4000ee4	     0xfb680900200	          movzx eax, byte [rax + 0x290] 	       722	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8
0x4000eeb	          0x83f001	                              xor eax, 1	       722	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8
0x4000eee	            0x84c0	                             test al, al	       722	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8
0x4000ef0	            0x7461	                            je 0x4000f53	       722	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8
0x4000ef2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       724	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	IF_9
0x4000ef6	     0xfb680b80000	           movzx eax, byte [rax + 0xb8] 	       724	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	IF_9
0x4000efd	            0x84c0	                             test al, al	       724	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	IF_9
0x4000eff	            0x7411	                            je 0x4000f12	       724	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	IF_9
0x4000f01	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       726	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	CALL_6
0x4000f05	          0x4889c7	                            mov rdi, rax	       726	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	CALL_6
0x4000f08	      0xe8e0f4ffff	          call sym.pop3_perform_starttls	       726	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	CALL_6
0x4000f0d	          0x8945c0	             mov dword [rbp - 0x40], eax	       726	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	CALL_6
0x4000f10	            0xeb7d	                           jmp 0x4000f8f	       724	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	IF_9
0x4000f12	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       727	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_4	IF_10
0x4000f16	    0x8b80f0070000	           mov eax, dword [rax + 0x7f0] 	       727	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_4	IF_10
0x4000f1c	          0x83f801	                              cmp eax, 1	       727	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_4	IF_10
0x4000f1f	            0x7511	                           jne 0x4000f32	       727	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_4	IF_10
0x4000f21	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       729	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_4	IF_10
0x4000f25	          0x4889c7	                            mov rdi, rax	       729	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_4	IF_10
0x4000f28	      0xe8a1f8ffff	    call sym.pop3_perform_authentication	       729	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_4	IF_10
0x4000f2d	          0x8945c0	             mov dword [rbp - 0x40], eax	       729	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_4	IF_10
0x4000f30	            0xeb5d	                           jmp 0x4000f8f	       724	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	IF_9
0x4000f32	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       731	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_5	CALL_8
0x4000f36	    0x488d35000000	                   lea rsi, [0x04000f3d]	       731	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_5	CALL_8
0x4000f3d	          0x4889c7	                            mov rdi, rax	       731	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_5	CALL_8
0x4000f40	      0xb800000000	                              mov eax, 0	       731	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_5	CALL_8
0x4000f45	      0xe800000000	                          call 0x4000f4a	       731	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_5	CALL_8
0x4000f4a	    0xc745c0400000	           mov dword [rbp - 0x40], 0x40 	       732	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_5
0x4000f51	            0xeb3c	                           jmp 0x4000f8f	       724	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	IF_9
0x4000f53	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       736	pop3.c	FUNCTION_15	ELSE_3	IF_7	CALL_9
0x4000f57	          0x4889c7	                            mov rdi, rax	       736	pop3.c	FUNCTION_15	ELSE_3	IF_7	CALL_9
0x4000f5a	      0xe86ff8ffff	    call sym.pop3_perform_authentication	       736	pop3.c	FUNCTION_15	ELSE_3	IF_7	CALL_9
0x4000f5f	          0x8945c0	             mov dword [rbp - 0x40], eax	       736	pop3.c	FUNCTION_15	ELSE_3	IF_7	CALL_9
0x4000f62	            0xeb2b	                           jmp 0x4000f8f	       736	pop3.c	FUNCTION_15	ELSE_3	IF_7	CALL_9
0x4000f64	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       740	pop3.c	FUNCTION_15	ELSE_7
0x4000f68	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	       740	pop3.c	FUNCTION_15	ELSE_7
0x4000f6e	          0x83c801	                               or eax, 1	       740	pop3.c	FUNCTION_15	ELSE_7
0x4000f71	            0x89c2	                            mov edx, eax	       740	pop3.c	FUNCTION_15	ELSE_7
0x4000f73	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       740	pop3.c	FUNCTION_15	ELSE_7
0x4000f77	    0x8990a8000000	             mov dword [rax + 0xa8], edx	       740	pop3.c	FUNCTION_15	ELSE_7
0x4000f7d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       742	pop3.c	FUNCTION_15	ELSE_7	CALL_10
0x4000f81	          0x4889c7	                            mov rdi, rax	       742	pop3.c	FUNCTION_15	ELSE_7	CALL_10
0x4000f84	      0xe845f8ffff	    call sym.pop3_perform_authentication	       742	pop3.c	FUNCTION_15	ELSE_7	CALL_10
0x4000f89	          0x8945c0	             mov dword [rbp - 0x40], eax	       742	pop3.c	FUNCTION_15	ELSE_7	CALL_10
0x4000f8c	            0xeb01	                           jmp 0x4000f8f	       742	pop3.c	FUNCTION_15	ELSE_7	CALL_10
0x4000f8e	              0x90	                                     nop	       703	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_5
0x4000f8f	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       745	pop3.c	FUNCTION_15
0x4000f92	        0x488b4df8	                mov rcx, qword [rbp - 8]	       746	pop3.c	FUNCTION_15
0x4000f96	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       746	pop3.c	FUNCTION_15
0x4000f9f	            0x7405	                            je 0x4000fa6	       746	pop3.c	FUNCTION_15
0x4000fa1	      0xe800000000	                          call 0x4000fa6	       746	pop3.c	FUNCTION_15
0x4000fa6	              0xc9	                                   leave	       746	pop3.c	FUNCTION_15
0x4000fa7	              0xc3	                                     ret	       746	pop3.c	FUNCTION_15
Curl_pop3_write	IF,13:CALL,4:SWITCH,1:ELSE,5:functions,0:FOR,1:DO,0:WHILE,1	211
0x4001f81	              0x55	                                push rbp	      1424	pop3.c	FUNCTION_39
0x4001f82	          0x4889e5	                            mov rbp, rsp	      1424	pop3.c	FUNCTION_39
0x4001f85	        0x4883ec60	                           sub rsp, 0x60	      1424	pop3.c	FUNCTION_39
0x4001f89	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1424	pop3.c	FUNCTION_39
0x4001f8d	        0x488975b0	             mov qword [rbp - 0x50], rsi	      1424	pop3.c	FUNCTION_39
0x4001f91	        0x488955a8	             mov qword [rbp - 0x58], rdx	      1424	pop3.c	FUNCTION_39
0x4001f95	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1426	pop3.c	FUNCTION_39
0x4001f9c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1427	pop3.c	FUNCTION_39
0x4001fa0	          0x488b00	                    mov rax, qword [rax]	      1427	pop3.c	FUNCTION_39
0x4001fa3	        0x488945e8	             mov qword [rbp - 0x18], rax	      1427	pop3.c	FUNCTION_39
0x4001fa7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1428	pop3.c	FUNCTION_39
0x4001fab	    0x4805c0000000	                           add rax, 0xc0	      1428	pop3.c	FUNCTION_39
0x4001fb1	        0x488945f0	             mov qword [rbp - 0x10], rax	      1428	pop3.c	FUNCTION_39
0x4001fb5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1430	pop3.c	FUNCTION_39
0x4001fb9	    0x480550060000	                          add rax, 0x650	      1430	pop3.c	FUNCTION_39
0x4001fbf	        0x488945f8	                mov qword [rbp - 8], rax	      1430	pop3.c	FUNCTION_39
0x4001fc3	        0xc645cb00	                mov byte [rbp - 0x35], 0	      1431	pop3.c	FUNCTION_39
0x4001fc7	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1432	pop3.c	FUNCTION_39
0x4001fcf	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1440	pop3.c	FUNCTION_39	FOR_1
0x4001fd7	      0xe934020000	                           jmp 0x4002210	      1440	pop3.c	FUNCTION_39	FOR_1
0x4001fdc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1441	pop3.c	FUNCTION_39	FOR_1
0x4001fe0	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1441	pop3.c	FUNCTION_39	FOR_1
0x4001fe4	        0x488945e0	             mov qword [rbp - 0x20], rax	      1441	pop3.c	FUNCTION_39	FOR_1
0x4001fe8	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4001fec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4001ff0	          0x4801d0	                            add rax, rdx	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4001ff3	           0xfb600	                   movzx eax, byte [rax]	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4001ff6	           0xfbec0	                           movsx eax, al	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4001ff9	          0x83f80d	                            cmp eax, 0xd	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4001ffc	            0x7417	                            je 0x4002015	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4001ffe	          0x83f82e	                           cmp eax, 0x2e	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4002001	     0xf84fe000000	                            je 0x4002105	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4002007	          0x83f80a	                            cmp eax, 0xa	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x400200a	     0xf84b5000000	                            je 0x40020c5	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4002010	      0xe942010000	                           jmp 0x4002157	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4002015	        0x488b45f8	                mov rax, qword [rbp - 8]	      1445	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1
0x4002019	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1445	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1
0x400201d	          0x4885c0	                           test rax, rax	      1445	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1
0x4002020	            0x756b	                           jne 0x400208d	      1445	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1
0x4002022	        0x488b45f8	                mov rax, qword [rbp - 8]	      1446	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1
0x4002026	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1446	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1
0x400202a	        0x488d5001	                      lea rdx, [rax + 1]	      1446	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1
0x400202e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1446	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1
0x4002032	        0x48895078	             mov qword [rax + 0x78], rdx	      1446	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1
0x4002036	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1448	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2
0x400203b	     0xf8424010000	                            je 0x4002165	      1448	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2
0x4002041	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4002045	        0x482b45d0	             sub rax, qword [rbp - 0x30]	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4002049	          0x4889c2	                            mov rdx, rax	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x400204c	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4002050	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4002054	        0x488d3401	                    lea rsi, [rcx + rax]	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4002058	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x400205c	          0x4889d1	                            mov rcx, rdx	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x400205f	          0x4889f2	                            mov rdx, rsi	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4002062	      0xbe01000000	                              mov esi, 1	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4002067	          0x4889c7	                            mov rdi, rax	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x400206a	      0xe800000000	                          call 0x400206f	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x400206f	          0x8945cc	             mov dword [rbp - 0x34], eax	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4002072	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1453	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	IF_3
0x4002076	            0x7408	                            je 0x4002080	      1453	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	IF_3
0x4002078	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1454	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	IF_3
0x400207b	      0xe948020000	                           jmp 0x40022c8	      1454	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	IF_3
0x4002080	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1456	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2
0x4002084	        0x488945d0	             mov qword [rbp - 0x30], rax	      1456	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2
0x4002088	      0xe9d8000000	                           jmp 0x4002165	      1465	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x400208d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1459	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4002091	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1459	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4002095	        0x4883f803	                              cmp rax, 3	      1459	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4002099	            0x7519	                           jne 0x40020b4	      1459	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_1	IF_4
0x400209b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1460	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_1	IF_4
0x400209f	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1460	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_1	IF_4
0x40020a3	        0x488d5001	                      lea rdx, [rax + 1]	      1460	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_1	IF_4
0x40020a7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1460	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_1	IF_4
0x40020ab	        0x48895078	             mov qword [rax + 0x78], rdx	      1460	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_1	IF_4
0x40020af	      0xe9b1000000	                           jmp 0x4002165	      1465	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x40020b4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1464	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_2
0x40020b8	    0x48c740780100	               mov qword [rax + 0x78], 1	      1464	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_2
0x40020c0	      0xe9a0000000	                           jmp 0x4002165	      1465	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x40020c5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1468	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x40020c9	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1468	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x40020cd	        0x4883f801	                              cmp rax, 1	      1468	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x40020d1	            0x740e	                            je 0x40020e1	      1468	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x40020d3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1468	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x40020d7	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1468	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x40020db	        0x4883f804	                              cmp rax, 4	      1468	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x40020df	            0x7516	                           jne 0x40020f7	      1468	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x40020e1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1469	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x40020e5	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1469	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x40020e9	        0x488d5001	                      lea rdx, [rax + 1]	      1469	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x40020ed	        0x488b45f8	                mov rax, qword [rbp - 8]	      1469	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x40020f1	        0x48895078	             mov qword [rax + 0x78], rdx	      1469	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x40020f5	            0xeb6f	                           jmp 0x4002166	      1474	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x40020f7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1473	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_3
0x40020fb	    0x48c740780000	               mov qword [rax + 0x78], 0	      1473	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_3
0x4002103	            0xeb61	                           jmp 0x4002166	      1474	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4002105	        0x488b45f8	                mov rax, qword [rbp - 8]	      1477	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_6
0x4002109	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1477	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_6
0x400210d	        0x4883f802	                              cmp rax, 2	      1477	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_6
0x4002111	            0x7516	                           jne 0x4002129	      1477	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_6
0x4002113	        0x488b45f8	                mov rax, qword [rbp - 8]	      1478	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_6
0x4002117	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1478	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_6
0x400211b	        0x488d5001	                      lea rdx, [rax + 1]	      1478	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_6
0x400211f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1478	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_6
0x4002123	        0x48895078	             mov qword [rax + 0x78], rdx	      1478	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_6
0x4002127	            0xeb3d	                           jmp 0x4002166	      1488	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_5
0x4002129	        0x488b45f8	                mov rax, qword [rbp - 8]	      1479	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_4	IF_7
0x400212d	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1479	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_4	IF_7
0x4002131	        0x4883f803	                              cmp rax, 3	      1479	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_4	IF_7
0x4002135	            0x7512	                           jne 0x4002149	      1479	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_4	IF_7
0x4002137	        0xc645cb01	                mov byte [rbp - 0x35], 1	      1481	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_4	IF_7
0x400213b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1482	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_4	IF_7
0x400213f	    0x48c740780000	               mov qword [rax + 0x78], 0	      1482	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_4	IF_7
0x4002147	            0xeb1d	                           jmp 0x4002166	      1488	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_5
0x4002149	        0x488b45f8	                mov rax, qword [rbp - 8]	      1487	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_5
0x400214d	    0x48c740780000	               mov qword [rax + 0x78], 0	      1487	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_5
0x4002155	            0xeb0f	                           jmp 0x4002166	      1488	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_5
0x4002157	        0x488b45f8	                mov rax, qword [rbp - 8]	      1491	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_5
0x400215b	    0x48c740780000	               mov qword [rax + 0x78], 0	      1491	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_5
0x4002163	            0xeb01	                           jmp 0x4002166	      1492	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_5
0x4002165	              0x90	                                     nop	      1465	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4002166	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x400216b	     0xf849a000000	                            je 0x400220b	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4002171	        0x488b45f8	                mov rax, qword [rbp - 8]	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4002175	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4002179	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x400217d	     0xf8788000000	                            ja 0x400220b	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4002183	            0xeb1f	                           jmp 0x40021a4	      1500	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x4002185	      0x48836de001	               sub qword [rbp - 0x20], 1	      1501	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x400218a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1502	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x400218e	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1502	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x4002195	        0x488d50ff	                      lea rdx, [rax - 1]	      1502	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x4002199	        0x488b45f8	                mov rax, qword [rbp - 8]	      1502	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x400219d	    0x488990800000	             mov qword [rax + 0x80], rdx	      1502	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x40021a4	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1500	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x40021a9	            0x7410	                            je 0x40021bb	      1500	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x40021ab	        0x488b45f8	                mov rax, qword [rbp - 8]	      1500	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x40021af	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1500	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x40021b6	          0x4885c0	                           test rax, rax	      1500	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x40021b9	            0x75ca	                           jne 0x4002185	      1500	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x40021bb	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1505	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9
0x40021c0	            0x7449	                            je 0x400220b	      1505	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9
0x40021c2	        0x807dcb00	                cmp byte [rbp - 0x35], 0	      1508	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x40021c6	            0x740a	                            je 0x40021d2	      1508	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x40021c8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1508	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x40021cc	        0x4883e801	                              sub rax, 1	      1508	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x40021d0	            0xeb04	                           jmp 0x40021d6	      1508	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x40021d2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1508	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x40021d6	        0x488b7db8	             mov rdi, qword [rbp - 0x48]	      1508	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x40021da	          0x4889c1	                            mov rcx, rax	      1508	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x40021dd	    0x488d15000000	                   lea rdx, [0x040021e4]	      1508	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x40021e4	      0xbe01000000	                              mov esi, 1	      1508	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x40021e9	      0xe800000000	                          call 0x40021ee	      1508	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x40021ee	          0x8945cc	             mov dword [rbp - 0x34], eax	      1508	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x40021f1	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1511	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	IF_10
0x40021f5	            0x7408	                            je 0x40021ff	      1511	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	IF_10
0x40021f7	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1512	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	IF_10
0x40021fa	      0xe9c9000000	                           jmp 0x40022c8	      1512	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	IF_10
0x40021ff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1514	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9
0x4002203	        0x488945d0	             mov qword [rbp - 0x30], rax	      1514	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9
0x4002207	        0xc645cb00	                mov byte [rbp - 0x35], 0	      1515	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9
0x400220b	      0x488345d801	               add qword [rbp - 0x28], 1	      1440	pop3.c	FUNCTION_39	FOR_1
0x4002210	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1440	pop3.c	FUNCTION_39	FOR_1
0x4002214	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      1440	pop3.c	FUNCTION_39	FOR_1
0x4002218	     0xf82befdffff	                            jb 0x4001fdc	      1440	pop3.c	FUNCTION_39	FOR_1
0x400221e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1520	pop3.c	FUNCTION_39	IF_11
0x4002222	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1520	pop3.c	FUNCTION_39	IF_11
0x4002226	        0x4883f805	                              cmp rax, 5	      1520	pop3.c	FUNCTION_39	IF_11
0x400222a	            0x754a	                           jne 0x4002276	      1520	pop3.c	FUNCTION_39	IF_11
0x400222c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1524	pop3.c	FUNCTION_39	IF_11	CALL_3
0x4002230	      0xb902000000	                              mov ecx, 2	      1524	pop3.c	FUNCTION_39	IF_11	CALL_3
0x4002235	    0x488d15000000	                   lea rdx, [0x0400223c]	      1524	pop3.c	FUNCTION_39	IF_11	CALL_3
0x400223c	      0xbe01000000	                              mov esi, 1	      1524	pop3.c	FUNCTION_39	IF_11	CALL_3
0x4002241	          0x4889c7	                            mov rdi, rax	      1524	pop3.c	FUNCTION_39	IF_11	CALL_3
0x4002244	      0xe800000000	                          call 0x4002249	      1524	pop3.c	FUNCTION_39	IF_11	CALL_3
0x4002249	          0x8945cc	             mov dword [rbp - 0x34], eax	      1524	pop3.c	FUNCTION_39	IF_11	CALL_3
0x400224c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1526	pop3.c	FUNCTION_39	IF_11
0x4002250	    0x8b80f4000000	            mov eax, dword [rax + 0xf4] 	      1526	pop3.c	FUNCTION_39	IF_11
0x4002256	          0x83e0fe	                     and eax, 0xfffffffe	      1526	pop3.c	FUNCTION_39	IF_11
0x4002259	            0x89c2	                            mov edx, eax	      1526	pop3.c	FUNCTION_39	IF_11
0x400225b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1526	pop3.c	FUNCTION_39	IF_11
0x400225f	    0x8990f4000000	             mov dword [rax + 0xf4], edx	      1526	pop3.c	FUNCTION_39	IF_11
0x4002265	        0x488b45f8	                mov rax, qword [rbp - 8]	      1527	pop3.c	FUNCTION_39	IF_11
0x4002269	    0x48c740780000	               mov qword [rax + 0x78], 0	      1527	pop3.c	FUNCTION_39	IF_11
0x4002271	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1529	pop3.c	FUNCTION_39	IF_11
0x4002274	            0xeb52	                           jmp 0x40022c8	      1529	pop3.c	FUNCTION_39	IF_11
0x4002276	        0x488b45f8	                mov rax, qword [rbp - 8]	      1532	pop3.c	FUNCTION_39	IF_12
0x400227a	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1532	pop3.c	FUNCTION_39	IF_12
0x400227e	          0x4885c0	                           test rax, rax	      1532	pop3.c	FUNCTION_39	IF_12
0x4002281	            0x7407	                            je 0x400228a	      1532	pop3.c	FUNCTION_39	IF_12
0x4002283	      0xb800000000	                              mov eax, 0	      1534	pop3.c	FUNCTION_39	IF_12
0x4002288	            0xeb3e	                           jmp 0x40022c8	      1534	pop3.c	FUNCTION_39	IF_12
0x400228a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1536	pop3.c	FUNCTION_39	IF_13
0x400228e	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1536	pop3.c	FUNCTION_39	IF_13
0x4002292	            0x7431	                            je 0x40022c5	      1536	pop3.c	FUNCTION_39	IF_13
0x4002294	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x4002298	        0x482b45d0	             sub rax, qword [rbp - 0x30]	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x400229c	          0x4889c2	                            mov rdx, rax	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x400229f	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x40022a3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x40022a7	        0x488d3401	                    lea rsi, [rcx + rax]	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x40022ab	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x40022af	          0x4889d1	                            mov rcx, rdx	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x40022b2	          0x4889f2	                            mov rdx, rsi	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x40022b5	      0xbe01000000	                              mov esi, 1	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x40022ba	          0x4889c7	                            mov rdi, rax	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x40022bd	      0xe800000000	                          call 0x40022c2	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x40022c2	          0x8945cc	             mov dword [rbp - 0x34], eax	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x40022c5	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1541	pop3.c	FUNCTION_39
0x40022c8	              0xc9	                                   leave	      1542	pop3.c	FUNCTION_39
0x40022c9	              0xc3	                                     ret	      1542	pop3.c	FUNCTION_39
pop3_perform_upgrade_tls	IF,3:CALL,3:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	39
0x4000444	              0x55	                                push rbp	       359	pop3.c	FUNCTION_6
0x4000445	          0x4889e5	                            mov rbp, rsp	       359	pop3.c	FUNCTION_6
0x4000448	        0x4883ec20	                           sub rsp, 0x20	       359	pop3.c	FUNCTION_6
0x400044c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       359	pop3.c	FUNCTION_6
0x4000450	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       360	pop3.c	FUNCTION_6
0x4000457	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       361	pop3.c	FUNCTION_6
0x400045b	    0x480550060000	                          add rax, 0x650	       361	pop3.c	FUNCTION_6
0x4000461	        0x488945f8	                mov qword [rbp - 8], rax	       361	pop3.c	FUNCTION_6
0x4000465	        0x488b45f8	                mov rax, qword [rbp - 8]	       364	pop3.c	FUNCTION_6	CALL_1
0x4000469	        0x488d5074	                   lea rdx, [rax + 0x74]	       364	pop3.c	FUNCTION_6	CALL_1
0x400046d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       364	pop3.c	FUNCTION_6	CALL_1
0x4000471	      0xbe00000000	                              mov esi, 0	       364	pop3.c	FUNCTION_6	CALL_1
0x4000476	          0x4889c7	                            mov rdi, rax	       364	pop3.c	FUNCTION_6	CALL_1
0x4000479	      0xe800000000	                          call 0x400047e	       364	pop3.c	FUNCTION_6	CALL_1
0x400047e	          0x8945f4	              mov dword [rbp - 0xc], eax	       364	pop3.c	FUNCTION_6	CALL_1
0x4000481	        0x837df400	                cmp dword [rbp - 0xc], 0	       366	pop3.c	FUNCTION_6	IF_1
0x4000485	            0x7544	                           jne 0x40004cb	       366	pop3.c	FUNCTION_6	IF_1
0x4000487	        0x488b45f8	                mov rax, qword [rbp - 8]	       367	pop3.c	FUNCTION_6	IF_1	IF_2
0x400048b	          0x8b4070	            mov eax, dword [rax + 0x70] 	       367	pop3.c	FUNCTION_6	IF_1	IF_2
0x400048e	          0x83f804	                              cmp eax, 4	       367	pop3.c	FUNCTION_6	IF_1	IF_2
0x4000491	            0x7411	                            je 0x40004a4	       367	pop3.c	FUNCTION_6	IF_1	IF_2
0x4000493	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       368	pop3.c	FUNCTION_6	IF_1	CALL_2
0x4000497	      0xbe04000000	                              mov esi, 4	       368	pop3.c	FUNCTION_6	IF_1	CALL_2
0x400049c	          0x4889c7	                            mov rdi, rax	       368	pop3.c	FUNCTION_6	IF_1	CALL_2
0x400049f	      0xe89dfeffff	                          call sym.state	       368	pop3.c	FUNCTION_6	IF_1	CALL_2
0x40004a4	        0x488b45f8	                mov rax, qword [rbp - 8]	       370	pop3.c	FUNCTION_6	IF_1	IF_3
0x40004a8	         0xfb64074	           movzx eax, byte [rax + 0x74] 	       370	pop3.c	FUNCTION_6	IF_1	IF_3
0x40004ac	            0x84c0	                             test al, al	       370	pop3.c	FUNCTION_6	IF_1	IF_3
0x40004ae	            0x741b	                            je 0x40004cb	       370	pop3.c	FUNCTION_6	IF_1	IF_3
0x40004b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       371	pop3.c	FUNCTION_6	IF_1	IF_3
0x40004b4	          0x4889c7	                            mov rdi, rax	       371	pop3.c	FUNCTION_6	IF_1	IF_3
0x40004b7	      0xe856fcffff	                  call sym.pop3_to_pop3s	       371	pop3.c	FUNCTION_6	IF_1	IF_3
0x40004bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       372	pop3.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40004c0	          0x4889c7	                            mov rdi, rax	       372	pop3.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40004c3	      0xe89ffeffff	              call sym.pop3_perform_capa	       372	pop3.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40004c8	          0x8945f4	              mov dword [rbp - 0xc], eax	       372	pop3.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40004cb	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       376	pop3.c	FUNCTION_6
0x40004ce	              0xc9	                                   leave	       377	pop3.c	FUNCTION_6
0x40004cf	              0xc3	                                     ret	       377	pop3.c	FUNCTION_6
state	IF,1:CALL,1:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,0	13
0x4000341	              0x55	                                push rbp	       281	pop3.c	ELSE_1	FUNCTION_3
0x4000342	          0x4889e5	                            mov rbp, rsp	       281	pop3.c	ELSE_1	FUNCTION_3
0x4000345	        0x48897de8	             mov qword [rbp - 0x18], rdi	       281	pop3.c	ELSE_1	FUNCTION_3
0x4000349	          0x8975e4	             mov dword [rbp - 0x1c], esi	       281	pop3.c	ELSE_1	FUNCTION_3
0x400034c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       282	pop3.c	ELSE_1	FUNCTION_3
0x4000350	    0x480550060000	                          add rax, 0x650	       282	pop3.c	ELSE_1	FUNCTION_3
0x4000356	        0x488945f8	                mov qword [rbp - 8], rax	       282	pop3.c	ELSE_1	FUNCTION_3
0x400035a	        0x488b45f8	                mov rax, qword [rbp - 8]	       305	pop3.c	ELSE_1	FUNCTION_3
0x400035e	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       305	pop3.c	ELSE_1	FUNCTION_3
0x4000361	          0x895070	             mov dword [rax + 0x70], edx	       305	pop3.c	ELSE_1	FUNCTION_3
0x4000364	              0x90	                                     nop	       306	pop3.c	ELSE_1	FUNCTION_3
0x4000365	              0x5d	                                 pop rbp	       306	pop3.c	ELSE_1	FUNCTION_3
0x4000366	              0xc3	                                     ret	       306	pop3.c	ELSE_1	FUNCTION_3
pop3_block_statemach	IF,0:CALL,1:SWITCH,0:ELSE,0:functions,0:FOR,0:DO,0:WHILE,1	23
0x40016fb	              0x55	                                push rbp	      1027	pop3.c	FUNCTION_24
0x40016fc	          0x4889e5	                            mov rbp, rsp	      1027	pop3.c	FUNCTION_24
0x40016ff	        0x4883ec20	                           sub rsp, 0x20	      1027	pop3.c	FUNCTION_24
0x4001703	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1027	pop3.c	FUNCTION_24
0x4001707	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1028	pop3.c	FUNCTION_24
0x400170e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1029	pop3.c	FUNCTION_24
0x4001712	    0x480550060000	                          add rax, 0x650	      1029	pop3.c	FUNCTION_24
0x4001718	        0x488945f8	                mov qword [rbp - 8], rax	      1029	pop3.c	FUNCTION_24
0x400171c	            0xeb14	                           jmp 0x4001732	      1031	pop3.c	FUNCTION_24	WHILE_1
0x400171e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1032	pop3.c	FUNCTION_24	CALL_1
0x4001722	      0xbe01000000	                              mov esi, 1	      1032	pop3.c	FUNCTION_24	CALL_1
0x4001727	          0x4889c7	                            mov rdi, rax	      1032	pop3.c	FUNCTION_24	CALL_1
0x400172a	      0xe800000000	                          call 0x400172f	      1032	pop3.c	FUNCTION_24	CALL_1
0x400172f	          0x8945f4	              mov dword [rbp - 0xc], eax	      1032	pop3.c	FUNCTION_24	CALL_1
0x4001732	        0x488b45f8	                mov rax, qword [rbp - 8]	      1031	pop3.c	FUNCTION_24	WHILE_1
0x4001736	          0x8b4070	            mov eax, dword [rax + 0x70] 	      1031	pop3.c	FUNCTION_24	WHILE_1
0x4001739	            0x85c0	                           test eax, eax	      1031	pop3.c	FUNCTION_24	WHILE_1
0x400173b	            0x7406	                            je 0x4001743	      1031	pop3.c	FUNCTION_24	WHILE_1
0x400173d	        0x837df400	                cmp dword [rbp - 0xc], 0	      1031	pop3.c	FUNCTION_24	WHILE_1
0x4001741	            0x74db	                            je 0x400171e	      1031	pop3.c	FUNCTION_24	WHILE_1
0x4001743	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1034	pop3.c	FUNCTION_24
0x4001746	              0xc9	                                   leave	      1035	pop3.c	FUNCTION_24
0x4001747	              0xc3	                                     ret	      1035	pop3.c	FUNCTION_24
pop3_get_message	IF,3:CALL,1:SWITCH,0:ELSE,1:functions,0:FOR,2:DO,0:WHILE,0	77
0x4000244	              0x55	                                push rbp	       245	pop3.c	FUNCTION_2
0x4000245	          0x4889e5	                            mov rbp, rsp	       245	pop3.c	FUNCTION_2
0x4000248	        0x4883ec20	                           sub rsp, 0x20	       245	pop3.c	FUNCTION_2
0x400024c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       245	pop3.c	FUNCTION_2
0x4000250	        0x488975e0	             mov qword [rbp - 0x20], rsi	       245	pop3.c	FUNCTION_2
0x4000254	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       246	pop3.c	FUNCTION_2	CALL_1
0x4000258	          0x4889c7	                            mov rdi, rax	       246	pop3.c	FUNCTION_2	CALL_1
0x400025b	      0xe800000000	                          call 0x4000260	       246	pop3.c	FUNCTION_2	CALL_1
0x4000260	        0x488945f0	             mov qword [rbp - 0x10], rax	       246	pop3.c	FUNCTION_2	CALL_1
0x4000264	    0x48c745f80000	                  mov qword [rbp - 8], 0	       247	pop3.c	FUNCTION_2
0x400026c	      0x48837df002	               cmp qword [rbp - 0x10], 2	       249	pop3.c	FUNCTION_2	IF_1
0x4000271	     0xf86ad000000	                           jbe 0x4000324	       249	pop3.c	FUNCTION_2	IF_1
0x4000277	      0x48836df002	               sub qword [rbp - 0x10], 2	       251	pop3.c	FUNCTION_2	IF_1
0x400027c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x4000280	        0x4883c002	                              add rax, 2	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x4000284	        0x488945f8	                mov qword [rbp - 8], rax	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x4000288	            0xeb0a	                           jmp 0x4000294	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x400028a	      0x488345f801	                  add qword [rbp - 8], 1	       253	pop3.c	FUNCTION_2	IF_1	FOR_1
0x400028f	      0x48836df001	               sub qword [rbp - 0x10], 1	       253	pop3.c	FUNCTION_2	IF_1	FOR_1
0x4000294	        0x488b45f8	                mov rax, qword [rbp - 8]	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x4000298	           0xfb600	                   movzx eax, byte [rax]	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x400029b	            0x3c20	                            cmp al, 0x20	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x400029d	            0x74eb	                            je 0x400028a	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x400029f	        0x488b45f8	                mov rax, qword [rbp - 8]	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002a3	           0xfb600	                   movzx eax, byte [rax]	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002a6	            0x3c09	                               cmp al, 9	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002a8	            0x74e0	                            je 0x400028a	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002aa	            0xeb48	                           jmp 0x40002f4	       257	pop3.c	FUNCTION_2	IF_1	FOR_2
0x40002ac	        0x488b55f8	                mov rdx, qword [rbp - 8]	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002b0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002b4	          0x4801d0	                            add rax, rdx	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002b7	           0xfb600	                   movzx eax, byte [rax]	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002ba	            0x3c0d	                             cmp al, 0xd	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002bc	            0x7436	                            je 0x40002f4	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002be	        0x488b55f8	                mov rdx, qword [rbp - 8]	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002c2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002c6	          0x4801d0	                            add rax, rdx	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002c9	           0xfb600	                   movzx eax, byte [rax]	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002cc	            0x3c0a	                             cmp al, 0xa	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002ce	            0x7424	                            je 0x40002f4	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002d0	        0x488b55f8	                mov rdx, qword [rbp - 8]	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002d8	          0x4801d0	                            add rax, rdx	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002db	           0xfb600	                   movzx eax, byte [rax]	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002de	            0x3c20	                            cmp al, 0x20	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002e0	            0x7412	                            je 0x40002f4	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002e2	        0x488b55f8	                mov rdx, qword [rbp - 8]	       259	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002e6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       259	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002ea	          0x4801d0	                            add rax, rdx	       259	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002ed	           0xfb600	                   movzx eax, byte [rax]	       259	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002f0	            0x3c09	                               cmp al, 9	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002f2	            0x7513	                           jne 0x4000307	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002f4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       257	pop3.c	FUNCTION_2	IF_1	FOR_2
0x40002f8	        0x488d50ff	                      lea rdx, [rax - 1]	       257	pop3.c	FUNCTION_2	IF_1	FOR_2
0x40002fc	        0x488955f0	             mov qword [rbp - 0x10], rdx	       257	pop3.c	FUNCTION_2	IF_1	FOR_2
0x4000300	          0x4885c0	                           test rax, rax	       257	pop3.c	FUNCTION_2	IF_1	FOR_2
0x4000303	            0x75a7	                           jne 0x40002ac	       257	pop3.c	FUNCTION_2	IF_1	FOR_2
0x4000305	            0xeb01	                           jmp 0x4000308	       257	pop3.c	FUNCTION_2	IF_1	FOR_2
0x4000307	              0x90	                                     nop	       260	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x4000308	      0x488345f001	               add qword [rbp - 0x10], 1	       263	pop3.c	FUNCTION_2	IF_1	IF_3
0x400030d	      0x48837df000	               cmp qword [rbp - 0x10], 0	       263	pop3.c	FUNCTION_2	IF_1	IF_3
0x4000312	            0x741f	                            je 0x4000333	       263	pop3.c	FUNCTION_2	IF_1	IF_3
0x4000314	        0x488b55f8	                mov rdx, qword [rbp - 8]	       264	pop3.c	FUNCTION_2	IF_1	IF_3
0x4000318	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       264	pop3.c	FUNCTION_2	IF_1	IF_3
0x400031c	          0x4801d0	                            add rax, rdx	       264	pop3.c	FUNCTION_2	IF_1	IF_3
0x400031f	          0xc60000	                       mov byte [rax], 0	       264	pop3.c	FUNCTION_2	IF_1	IF_3
0x4000322	            0xeb0f	                           jmp 0x4000333	       264	pop3.c	FUNCTION_2	IF_1	IF_3
0x4000324	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       269	pop3.c	FUNCTION_2	ELSE_1
0x4000328	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       269	pop3.c	FUNCTION_2	ELSE_1
0x400032c	          0x4801d0	                            add rax, rdx	       269	pop3.c	FUNCTION_2	ELSE_1
0x400032f	        0x488945f8	                mov qword [rbp - 8], rax	       269	pop3.c	FUNCTION_2	ELSE_1
0x4000333	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       271	pop3.c	FUNCTION_2	ELSE_1
0x4000337	        0x488b55f8	                mov rdx, qword [rbp - 8]	       271	pop3.c	FUNCTION_2	ELSE_1
0x400033b	          0x488910	                    mov qword [rax], rdx	       271	pop3.c	FUNCTION_2	ELSE_1
0x400033e	              0x90	                                     nop	       272	pop3.c	FUNCTION_2	ELSE_1
0x400033f	              0xc9	                                   leave	       272	pop3.c	FUNCTION_2	ELSE_1
0x4000340	              0xc3	                                     ret	       272	pop3.c	FUNCTION_2	ELSE_1
