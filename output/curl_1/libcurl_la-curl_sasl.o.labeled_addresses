Curl_sasl_cleanup	IF,2:DO,0:CALL,2:functions,0:FOR,0:SWITCH,0:ELSE,0:WHILE,0	14
0x4000112	              0x55	                                push rbp	        82	curl_sasl.c	FUNCTION_1
0x4000113	          0x4889e5	                            mov rbp, rsp	        82	curl_sasl.c	FUNCTION_1
0x4000116	        0x4883ec10	                           sub rsp, 0x10	        82	curl_sasl.c	FUNCTION_1
0x400011a	        0x48897df8	                mov qword [rbp - 8], rdi	        82	curl_sasl.c	FUNCTION_1
0x400011e	          0x8975f4	              mov dword [rbp - 0xc], esi	        82	curl_sasl.c	FUNCTION_1
0x4000121	        0x837df440	            cmp dword [rbp - 0xc], 0x40 	        92	curl_sasl.c	FUNCTION_1	IF_2
0x4000125	            0x7512	                           jne 0x4000139	        92	curl_sasl.c	FUNCTION_1	IF_2
0x4000127	        0x488b45f8	                mov rax, qword [rbp - 8]	        93	curl_sasl.c	FUNCTION_1	IF_2	CALL_2
0x400012b	    0x4805c0040000	                          add rax, 0x4c0	        93	curl_sasl.c	FUNCTION_1	IF_2	CALL_2
0x4000131	          0x4889c7	                            mov rdi, rax	        93	curl_sasl.c	FUNCTION_1	IF_2	CALL_2
0x4000134	      0xe800000000	                          call 0x4000139	        93	curl_sasl.c	FUNCTION_1	IF_2	CALL_2
0x4000139	              0x90	                                     nop	       102	curl_sasl.c	FUNCTION_1
0x400013a	              0xc9	                                   leave	       102	curl_sasl.c	FUNCTION_1
0x400013b	              0xc3	                                     ret	       102	curl_sasl.c	FUNCTION_1
state	IF,1:DO,0:CALL,1:functions,0:FOR,0:SWITCH,0:ELSE,0:WHILE,0	11
0x4000437	              0x55	                                push rbp	       197	curl_sasl.c	FUNCTION_5
0x4000438	          0x4889e5	                            mov rbp, rsp	       197	curl_sasl.c	FUNCTION_5
0x400043b	        0x48897df8	                mov qword [rbp - 8], rdi	       197	curl_sasl.c	FUNCTION_5
0x400043f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       197	curl_sasl.c	FUNCTION_5
0x4000443	          0x8955ec	             mov dword [rbp - 0x14], edx	       197	curl_sasl.c	FUNCTION_5
0x4000446	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	curl_sasl.c	FUNCTION_5
0x400044a	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       228	curl_sasl.c	FUNCTION_5
0x400044d	          0x895008	                mov dword [rax + 8], edx	       228	curl_sasl.c	FUNCTION_5
0x4000450	              0x90	                                     nop	       229	curl_sasl.c	FUNCTION_5
0x4000451	              0x5d	                                 pop rbp	       229	curl_sasl.c	FUNCTION_5
0x4000452	              0xc3	                                     ret	       229	curl_sasl.c	FUNCTION_5
Curl_sasl_init	IF,0:DO,0:CALL,0:functions,0:FOR,0:SWITCH,0:ELSE,0:WHILE,0	24
0x40003d9	              0x55	                                push rbp	       179	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003da	          0x4889e5	                            mov rbp, rsp	       179	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003dd	        0x48897df8	                mov qword [rbp - 8], rdi	       179	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003e1	        0x488975f0	             mov qword [rbp - 0x10], rsi	       179	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003e5	        0x488b45f8	                mov rax, qword [rbp - 8]	       180	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003e9	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       180	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003ed	          0x488910	                    mov qword [rax], rdx	       180	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003f0	        0x488b45f8	                mov rax, qword [rbp - 8]	       181	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003f4	    0xc74008000000	                  mov dword [rax + 8], 0	       181	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003fb	        0x488b45f8	                mov rax, qword [rbp - 8]	       182	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003ff	    0xc7400c000000	                mov dword [rax + 0xc], 0	       182	curl_sasl.c	ELSE_2	FUNCTION_4
0x4000406	        0x488b45f8	                mov rax, qword [rbp - 8]	       183	curl_sasl.c	ELSE_2	FUNCTION_4
0x400040a	    0xc74010dfffff	     mov dword [rax + 0x10], 0xffffffdf 	       183	curl_sasl.c	ELSE_2	FUNCTION_4
0x4000411	        0x488b45f8	                mov rax, qword [rbp - 8]	       184	curl_sasl.c	ELSE_2	FUNCTION_4
0x4000415	    0xc74014000000	               mov dword [rax + 0x14], 0	       184	curl_sasl.c	ELSE_2	FUNCTION_4
0x400041c	        0x488b45f8	                mov rax, qword [rbp - 8]	       185	curl_sasl.c	ELSE_2	FUNCTION_4
0x4000420	        0xc6401801	                mov byte [rax + 0x18], 1	       185	curl_sasl.c	ELSE_2	FUNCTION_4
0x4000424	        0x488b45f8	                mov rax, qword [rbp - 8]	       186	curl_sasl.c	ELSE_2	FUNCTION_4
0x4000428	        0xc6401900	                mov byte [rax + 0x19], 0	       186	curl_sasl.c	ELSE_2	FUNCTION_4
0x400042c	        0x488b45f8	                mov rax, qword [rbp - 8]	       187	curl_sasl.c	ELSE_2	FUNCTION_4
0x4000430	        0xc6401a00	                mov byte [rax + 0x1a], 0	       187	curl_sasl.c	ELSE_2	FUNCTION_4
0x4000434	              0x90	                                     nop	       188	curl_sasl.c	ELSE_2	FUNCTION_4
0x4000435	              0x5d	                                 pop rbp	       188	curl_sasl.c	ELSE_2	FUNCTION_4
0x4000436	              0xc3	                                     ret	       188	curl_sasl.c	ELSE_2	FUNCTION_4
Curl_sasl_start	IF,20:DO,0:CALL,18:functions,0:FOR,0:SWITCH,0:ELSE,8:WHILE,0	387
0x400049a	              0x55	                                push rbp	       256	curl_sasl.c	FUNCTION_7
0x400049b	          0x4889e5	                            mov rbp, rsp	       256	curl_sasl.c	FUNCTION_7
0x400049e	        0x4883ec70	                           sub rsp, 0x70	       256	curl_sasl.c	FUNCTION_7
0x40004a2	        0x48897da8	             mov qword [rbp - 0x58], rdi	       256	curl_sasl.c	FUNCTION_7
0x40004a6	        0x488975a0	             mov qword [rbp - 0x60], rsi	       256	curl_sasl.c	FUNCTION_7
0x40004aa	            0x89d0	                            mov eax, edx	       256	curl_sasl.c	FUNCTION_7
0x40004ac	        0x48894d90	             mov qword [rbp - 0x70], rcx	       256	curl_sasl.c	FUNCTION_7
0x40004b0	          0x88459c	               mov byte [rbp - 0x64], al	       256	curl_sasl.c	FUNCTION_7
0x40004b3	    0x64488b042528	                mov rax, qword fs:[0x28]	       256	curl_sasl.c	FUNCTION_7
0x40004bc	        0x488945f8	                mov qword [rbp - 8], rax	       256	curl_sasl.c	FUNCTION_7
0x40004c0	            0x31c0	                            xor eax, eax	       256	curl_sasl.c	FUNCTION_7
0x40004c2	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       257	curl_sasl.c	FUNCTION_7
0x40004c9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       258	curl_sasl.c	FUNCTION_7
0x40004cd	          0x488b00	                    mov rax, qword [rax]	       258	curl_sasl.c	FUNCTION_7
0x40004d0	        0x488945d8	             mov qword [rbp - 0x28], rax	       258	curl_sasl.c	FUNCTION_7
0x40004d4	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       260	curl_sasl.c	FUNCTION_7
0x40004dc	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       261	curl_sasl.c	FUNCTION_7
0x40004e4	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       262	curl_sasl.c	FUNCTION_7
0x40004ec	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	       263	curl_sasl.c	FUNCTION_7
0x40004f3	    0xc745b8100000	           mov dword [rbp - 0x48], 0x10 	       264	curl_sasl.c	FUNCTION_7
0x40004fa	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x40004fe	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000504	          0x83f802	                              cmp eax, 2	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000507	            0x7544	                           jne 0x400054d	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000509	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x400050d	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000513	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000516	           0xf95c0	                                setne al	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000519	           0xfb6c0	                           movzx eax, al	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x400051c	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000520	          0x4863d0	                         movsxd rdx, eax	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000523	          0x4889d0	                            mov rax, rdx	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000526	          0x4801c0	                            add rax, rax	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000529	          0x4801d0	                            add rax, rdx	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x400052c	        0x48c1e003	                              shl rax, 3	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000530	          0x4801c8	                            add rax, rcx	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000533	    0x4805c4020000	                          add rax, 0x2c4	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000539	            0x8b00	                    mov eax, dword [rax]	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x400053b	          0x83f802	                              cmp eax, 2	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x400053e	            0x740d	                            je 0x400054d	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000540	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000544	    0x488b80600100	           mov rax, qword [rax + 0x160] 	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x400054b	            0xeb0b	                           jmp 0x4000558	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x400054d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000551	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000558	        0x488945e0	             mov qword [rbp - 0x20], rax	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x400055c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000560	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000566	          0x83f802	                              cmp eax, 2	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000569	            0x7544	                           jne 0x40005af	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x400056b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x400056f	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000575	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000578	           0xf95c0	                                setne al	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x400057b	           0xfb6c0	                           movzx eax, al	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x400057e	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000582	          0x4863d0	                         movsxd rdx, eax	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000585	          0x4889d0	                            mov rax, rdx	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000588	          0x4801c0	                            add rax, rax	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x400058b	          0x4801d0	                            add rax, rdx	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x400058e	        0x48c1e003	                              shl rax, 3	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000592	          0x4801c8	                            add rax, rcx	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000595	    0x4805c4020000	                          add rax, 0x2c4	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x400059b	            0x8b00	                    mov eax, dword [rax]	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x400059d	          0x83f802	                              cmp eax, 2	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x40005a0	            0x740d	                            je 0x40005af	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x40005a2	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x40005a6	    0x488b80900100	           mov rax, qword [rax + 0x190] 	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x40005ad	            0xeb0c	                           jmp 0x40005bb	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x40005af	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x40005b3	    0x8b8098010000	           mov eax, dword [rax + 0x198] 	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x40005b9	            0x4898	                                    cdqe	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x40005bb	        0x488945e8	             mov qword [rbp - 0x18], rax	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x40005bf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       269	curl_sasl.c	FUNCTION_7
0x40005c3	    0x488b80d80900	           mov rax, qword [rax + 0x9d8] 	       269	curl_sasl.c	FUNCTION_7
0x40005ca	          0x4885c0	                           test rax, rax	       270	curl_sasl.c	FUNCTION_7
0x40005cd	            0x740d	                            je 0x40005dc	       270	curl_sasl.c	FUNCTION_7
0x40005cf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       270	curl_sasl.c	FUNCTION_7
0x40005d3	    0x488b80d80900	           mov rax, qword [rax + 0x9d8] 	       270	curl_sasl.c	FUNCTION_7
0x40005da	            0xeb0a	                           jmp 0x40005e6	       270	curl_sasl.c	FUNCTION_7
0x40005dc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       271	curl_sasl.c	FUNCTION_7
0x40005e0	          0x488b00	                    mov rax, qword [rax]	       271	curl_sasl.c	FUNCTION_7
0x40005e3	          0x488b00	                    mov rax, qword [rax]	       270	curl_sasl.c	FUNCTION_7
0x40005e6	        0x488945f0	             mov qword [rbp - 0x10], rax	       269	curl_sasl.c	FUNCTION_7
0x40005ea	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       274	curl_sasl.c	FUNCTION_7
0x40005ee	         0xfb6559c	            movzx edx, byte [rbp - 0x64]	       274	curl_sasl.c	FUNCTION_7
0x40005f2	          0x88501a	               mov byte [rax + 0x1a], dl	       274	curl_sasl.c	FUNCTION_7
0x40005f5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       275	curl_sasl.c	FUNCTION_7
0x40005f9	    0xc74014000000	               mov dword [rax + 0x14], 0	       275	curl_sasl.c	FUNCTION_7
0x4000600	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       276	curl_sasl.c	FUNCTION_7
0x4000604	          0x8b500c	              mov edx, dword [rax + 0xc]	       276	curl_sasl.c	FUNCTION_7
0x4000607	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       276	curl_sasl.c	FUNCTION_7
0x400060b	          0x8b4010	            mov eax, dword [rax + 0x10] 	       276	curl_sasl.c	FUNCTION_7
0x400060e	            0x21d0	                            and eax, edx	       276	curl_sasl.c	FUNCTION_7
0x4000610	          0x8945bc	             mov dword [rbp - 0x44], eax	       276	curl_sasl.c	FUNCTION_7
0x4000613	        0x488b4590	             mov rax, qword [rbp - 0x70]	       277	curl_sasl.c	FUNCTION_7
0x4000617	    0xc70000000000	                      mov dword [rax], 0	       277	curl_sasl.c	FUNCTION_7
0x400061d	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       281	curl_sasl.c	FUNCTION_7	IF_1
0x4000620	          0x83e020	                           and eax, 0x20	       281	curl_sasl.c	FUNCTION_7	IF_1
0x4000623	            0x85c0	                           test eax, eax	       281	curl_sasl.c	FUNCTION_7	IF_1
0x4000625	            0x746f	                            je 0x4000696	       281	curl_sasl.c	FUNCTION_7	IF_1
0x4000627	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       281	curl_sasl.c	FUNCTION_7	IF_1
0x400062b	    0x488b80180200	           mov rax, qword [rax + 0x218] 	       281	curl_sasl.c	FUNCTION_7	IF_1
0x4000632	           0xfb600	                   movzx eax, byte [rax]	       281	curl_sasl.c	FUNCTION_7	IF_1
0x4000635	            0x84c0	                             test al, al	       281	curl_sasl.c	FUNCTION_7	IF_1
0x4000637	            0x755d	                           jne 0x4000696	       281	curl_sasl.c	FUNCTION_7	IF_1
0x4000639	    0x488d05000000	                   lea rax, [0x04000640]	       282	curl_sasl.c	FUNCTION_7	IF_1
0x4000640	        0x488945d0	             mov qword [rbp - 0x30], rax	       282	curl_sasl.c	FUNCTION_7	IF_1
0x4000644	    0xc745b4040000	               mov dword [rbp - 0x4c], 4	       283	curl_sasl.c	FUNCTION_7	IF_1
0x400064b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       284	curl_sasl.c	FUNCTION_7	IF_1
0x400064f	    0xc74014200000	           mov dword [rax + 0x14], 0x20 	       284	curl_sasl.c	FUNCTION_7	IF_1
0x4000656	        0x807d9c00	                cmp byte [rbp - 0x64], 0	       286	curl_sasl.c	FUNCTION_7	IF_1	IF_2
0x400065a	            0x7513	                           jne 0x400066f	       286	curl_sasl.c	FUNCTION_7	IF_1	IF_2
0x400065c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       286	curl_sasl.c	FUNCTION_7	IF_1	IF_2
0x4000660	     0xfb680580a00	          movzx eax, byte [rax + 0xa58] 	       286	curl_sasl.c	FUNCTION_7	IF_1	IF_2
0x4000667	            0x84c0	                             test al, al	       286	curl_sasl.c	FUNCTION_7	IF_1	IF_2
0x4000669	     0xf8460030000	                            je 0x40009cf	       286	curl_sasl.c	FUNCTION_7	IF_1	IF_2
0x400066f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       287	curl_sasl.c	FUNCTION_7	IF_1	IF_2	CALL_3
0x4000673	    0x488bb0100200	           mov rsi, qword [rax + 0x210] 	       287	curl_sasl.c	FUNCTION_7	IF_1	IF_2	CALL_3
0x400067a	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	       287	curl_sasl.c	FUNCTION_7	IF_1	IF_2	CALL_3
0x400067e	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       287	curl_sasl.c	FUNCTION_7	IF_1	IF_2	CALL_3
0x4000682	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       287	curl_sasl.c	FUNCTION_7	IF_1	IF_2	CALL_3
0x4000686	          0x4889c7	                            mov rdi, rax	       287	curl_sasl.c	FUNCTION_7	IF_1	IF_2	CALL_3
0x4000689	      0xe800000000	                          call 0x400068e	       287	curl_sasl.c	FUNCTION_7	IF_1	IF_2	CALL_3
0x400068e	          0x8945b0	             mov dword [rbp - 0x50], eax	       287	curl_sasl.c	FUNCTION_7	IF_1	IF_2	CALL_3
0x4000691	      0xe939030000	                           jmp 0x40009cf	       286	curl_sasl.c	FUNCTION_7	IF_1	IF_2
0x4000696	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       290	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3
0x400069a	     0xfb680a00300	          movzx eax, byte [rax + 0x3a0] 	       290	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3
0x40006a1	            0x84c0	                             test al, al	       290	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3
0x40006a3	     0xf8430030000	                            je 0x40009d9	       290	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3
0x40006a9	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       313	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x40006ac	          0x83e008	                              and eax, 8	       313	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x40006af	            0x85c0	                           test eax, eax	       313	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x40006b1	            0x742b	                            je 0x40006de	       313	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x40006b3	      0xe800000000	                          call 0x40006b8	       314	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6	CALL_7
0x40006b8	            0x84c0	                             test al, al	       313	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x40006ba	            0x7422	                            je 0x40006de	       313	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x40006bc	    0x488d05000000	                   lea rax, [0x040006c3]	       315	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x40006c3	        0x488945d0	             mov qword [rbp - 0x30], rax	       315	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x40006c7	    0xc745b4060000	               mov dword [rbp - 0x4c], 6	       316	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x40006ce	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       317	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x40006d2	    0xc74014080000	               mov dword [rax + 0x14], 8	       317	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x40006d9	      0xe9fb020000	                           jmp 0x40009d9	       317	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x40006de	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       319	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_7
0x40006e1	          0x83e004	                              and eax, 4	       319	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_7
0x40006e4	            0x85c0	                           test eax, eax	       319	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_7
0x40006e6	            0x7422	                            je 0x400070a	       319	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_7
0x40006e8	    0x488d05000000	                   lea rax, [0x040006ef]	       320	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_7
0x40006ef	        0x488945d0	             mov qword [rbp - 0x30], rax	       320	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_7
0x40006f3	    0xc745b4050000	               mov dword [rbp - 0x4c], 5	       321	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_7
0x40006fa	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       322	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_7
0x40006fe	    0xc74014040000	               mov dword [rax + 0x14], 4	       322	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_7
0x4000705	      0xe9cf020000	                           jmp 0x40009d9	       322	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_7
0x400070a	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       327	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	CALL_8
0x400070d	          0x83e040	                           and eax, 0x40	       327	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	CALL_8
0x4000710	            0x85c0	                           test eax, eax	       327	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	CALL_8
0x4000712	     0xf8495000000	                            je 0x40007ad	       327	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	CALL_8
0x4000718	      0xe800000000	                          call 0x400071d	       327	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	CALL_8
0x400071d	            0x84c0	                             test al, al	       327	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	CALL_8
0x400071f	     0xf8488000000	                            je 0x40007ad	       327	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	CALL_8
0x4000725	    0x488d05000000	                   lea rax, [0x0400072c]	       328	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8
0x400072c	        0x488945d0	             mov qword [rbp - 0x30], rax	       328	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8
0x4000730	    0xc745b4080000	               mov dword [rbp - 0x4c], 8	       329	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8
0x4000737	    0xc745b8090000	               mov dword [rbp - 0x48], 9	       330	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8
0x400073e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       331	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8
0x4000742	    0xc74014400000	           mov dword [rax + 0x14], 0x40 	       331	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8
0x4000749	        0x807d9c00	                cmp byte [rbp - 0x64], 0	       333	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9
0x400074d	            0x7513	                           jne 0x4000762	       333	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9
0x400074f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       333	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9
0x4000753	     0xfb680580a00	          movzx eax, byte [rax + 0xa58] 	       333	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9
0x400075a	            0x84c0	                             test al, al	       333	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9
0x400075c	     0xf8470020000	                            je 0x40009d2	       333	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9
0x4000762	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       334	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9	CALL_9
0x4000766	    0x4c8d88c00400	                   lea r9, [rax + 0x4c0]	       334	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9	CALL_9
0x400076d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       335	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9
0x4000771	    0x488b90180200	           mov rdx, qword [rax + 0x218] 	       335	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9
0x4000778	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       335	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9
0x400077c	    0x488bb0100200	           mov rsi, qword [rax + 0x210] 	       335	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9
0x4000783	        0x4c8b45e0	              mov r8, qword [rbp - 0x20]	       334	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9	CALL_9
0x4000787	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       334	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9	CALL_9
0x400078b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       334	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9	CALL_9
0x400078f	        0x488d7dc8	                   lea rdi, [rbp - 0x38]	       334	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9	CALL_9
0x4000793	              0x57	                                push rdi	       334	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9	CALL_9
0x4000794	        0x488d7dc0	                   lea rdi, [rbp - 0x40]	       334	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9	CALL_9
0x4000798	              0x57	                                push rdi	       334	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9	CALL_9
0x4000799	          0x4889c7	                            mov rdi, rax	       334	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9	CALL_9
0x400079c	      0xe800000000	                          call 0x40007a1	       334	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9	CALL_9
0x40007a1	        0x4883c410	                           add rsp, 0x10	       334	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9	CALL_9
0x40007a5	          0x8945b0	             mov dword [rbp - 0x50], eax	       334	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9	CALL_9
0x40007a8	      0xe925020000	                           jmp 0x40009d2	       333	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9
0x40007ad	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       343	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40007b0	      0x2500010000	                          and eax, 0x100	       343	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40007b5	            0x85c0	                           test eax, eax	       343	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40007b7	     0xf8494000000	                            je 0x4000851	       343	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40007bd	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       343	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40007c1	    0x488b80280200	           mov rax, qword [rax + 0x228] 	       343	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40007c8	          0x4885c0	                           test rax, rax	       343	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40007cb	     0xf8480000000	                            je 0x4000851	       343	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40007d1	    0x488d05000000	                   lea rax, [0x040007d8]	       344	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40007d8	        0x488945d0	             mov qword [rbp - 0x30], rax	       344	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40007dc	    0xc745b40d0000	            mov dword [rbp - 0x4c], 0xd 	       345	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40007e3	    0xc745b80e0000	            mov dword [rbp - 0x48], 0xe 	       346	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40007ea	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       347	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40007ee	    0xc74014000100	          mov dword [rax + 0x14], 0x100 	       347	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40007f5	        0x807d9c00	                cmp byte [rbp - 0x64], 0	       349	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11
0x40007f9	            0x7513	                           jne 0x400080e	       349	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11
0x40007fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       349	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11
0x40007ff	     0xfb680580a00	          movzx eax, byte [rax + 0xa58] 	       349	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11
0x4000806	            0x84c0	                             test al, al	       349	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11
0x4000808	     0xf84c7010000	                            je 0x40009d5	       349	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11
0x400080e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       353	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11
0x4000812	    0x4c8b80280200	            mov r8, qword [rax + 0x228] 	       353	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11
0x4000819	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x400081d	    0x488bb0100200	           mov rsi, qword [rax + 0x210] 	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x4000824	        0x4c8d4dc0	                    lea r9, [rbp - 0x40]	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x4000828	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x400082c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x4000830	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x4000834	        0x4883ec08	                              sub rsp, 8	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x4000838	        0x488d7dc8	                   lea rdi, [rbp - 0x38]	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x400083c	              0x57	                                push rdi	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x400083d	          0x4889c7	                            mov rdi, rax	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x4000840	      0xe800000000	                          call 0x4000845	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x4000845	        0x4883c410	                           add rsp, 0x10	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x4000849	          0x8945b0	             mov dword [rbp - 0x50], eax	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x400084c	      0xe984010000	                           jmp 0x40009d5	       349	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11
0x4000851	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       356	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x4000854	      0x2580000000	                           and eax, 0x80	       356	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x4000859	            0x85c0	                           test eax, eax	       356	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x400085b	     0xf8495000000	                            je 0x40008f6	       356	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x4000861	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       356	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x4000865	    0x488b80280200	           mov rax, qword [rax + 0x228] 	       356	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x400086c	          0x4885c0	                           test rax, rax	       356	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x400086f	     0xf8481000000	                            je 0x40008f6	       356	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x4000875	    0x488d05000000	                   lea rax, [0x0400087c]	       357	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x400087c	        0x488945d0	             mov qword [rbp - 0x30], rax	       357	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x4000880	    0xc745b40d0000	            mov dword [rbp - 0x4c], 0xd 	       358	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x4000887	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       359	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x400088b	    0xc74014800000	           mov dword [rax + 0x14], 0x80 	       359	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x4000892	        0x807d9c00	                cmp byte [rbp - 0x64], 0	       361	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13
0x4000896	            0x7513	                           jne 0x40008ab	       361	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13
0x4000898	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       361	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13
0x400089c	     0xfb680580a00	          movzx eax, byte [rax + 0xa58] 	       361	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13
0x40008a3	            0x84c0	                             test al, al	       361	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13
0x40008a5	     0xf842d010000	                            je 0x40009d8	       361	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13
0x40008ab	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       364	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13
0x40008af	    0x488b88280200	           mov rcx, qword [rax + 0x228] 	       364	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13
0x40008b6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40008ba	    0x488bb0100200	           mov rsi, qword [rax + 0x210] 	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40008c1	        0x488d7dc0	                   lea rdi, [rbp - 0x40]	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40008c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40008c9	        0x4883ec08	                              sub rsp, 8	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40008cd	        0x488d55c8	                   lea rdx, [rbp - 0x38]	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40008d1	              0x52	                                push rdx	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40008d2	          0x4989f9	                             mov r9, rdi	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40008d5	          0x4989c8	                             mov r8, rcx	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40008d8	      0xb900000000	                              mov ecx, 0	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40008dd	      0xba00000000	                              mov edx, 0	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40008e2	          0x4889c7	                            mov rdi, rax	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40008e5	      0xe800000000	                          call 0x40008ea	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40008ea	        0x4883c410	                           add rsp, 0x10	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40008ee	          0x8945b0	             mov dword [rbp - 0x50], eax	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40008f1	      0xe9e2000000	                           jmp 0x40009d8	       361	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13
0x40008f6	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       367	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14
0x40008f9	          0x83e002	                              and eax, 2	       367	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14
0x40008fc	            0x85c0	                           test eax, eax	       367	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14
0x40008fe	            0x7468	                            je 0x4000968	       367	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14
0x4000900	    0x488d05000000	                   lea rax, [0x04000907]	       368	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14
0x4000907	        0x488945d0	             mov qword [rbp - 0x30], rax	       368	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14
0x400090b	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	       369	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14
0x4000912	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       370	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14
0x4000916	    0xc74014020000	               mov dword [rax + 0x14], 2	       370	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14
0x400091d	        0x807d9c00	                cmp byte [rbp - 0x64], 0	       372	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15
0x4000921	            0x7513	                           jne 0x4000936	       372	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15
0x4000923	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       372	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15
0x4000927	     0xfb680580a00	          movzx eax, byte [rax + 0xa58] 	       372	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15
0x400092e	            0x84c0	                             test al, al	       372	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15
0x4000930	     0xf84a3000000	                            je 0x40009d9	       372	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15
0x4000936	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x400093a	    0x488b90180200	           mov rdx, qword [rax + 0x218] 	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x4000941	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x4000945	    0x488bb0100200	           mov rsi, qword [rax + 0x210] 	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x400094c	        0x488d7dc8	                   lea rdi, [rbp - 0x38]	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x4000950	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x4000954	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x4000958	          0x4989f8	                             mov r8, rdi	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x400095b	          0x4889c7	                            mov rdi, rax	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x400095e	      0xe800000000	                          call 0x4000963	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x4000963	          0x8945b0	             mov dword [rbp - 0x50], eax	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x4000966	            0xeb71	                           jmp 0x40009d9	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x4000968	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       376	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16
0x400096b	          0x83e001	                              and eax, 1	       376	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16
0x400096e	            0x85c0	                           test eax, eax	       376	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16
0x4000970	            0x7467	                            je 0x40009d9	       376	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16
0x4000972	    0x488d05000000	                   lea rax, [0x04000979]	       377	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16
0x4000979	        0x488945d0	             mov qword [rbp - 0x30], rax	       377	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16
0x400097d	    0xc745b4020000	               mov dword [rbp - 0x4c], 2	       378	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16
0x4000984	    0xc745b8030000	               mov dword [rbp - 0x48], 3	       379	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16
0x400098b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       380	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16
0x400098f	    0xc74014010000	               mov dword [rax + 0x14], 1	       380	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16
0x4000996	        0x807d9c00	                cmp byte [rbp - 0x64], 0	       382	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	IF_17
0x400099a	            0x750f	                           jne 0x40009ab	       382	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	IF_17
0x400099c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       382	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	IF_17
0x40009a0	     0xfb680580a00	          movzx eax, byte [rax + 0xa58] 	       382	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	IF_17
0x40009a7	            0x84c0	                             test al, al	       382	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	IF_17
0x40009a9	            0x742e	                            je 0x40009d9	       382	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	IF_17
0x40009ab	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       383	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	CALL_13
0x40009af	    0x488bb0100200	           mov rsi, qword [rax + 0x210] 	       383	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	CALL_13
0x40009b6	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	       383	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	CALL_13
0x40009ba	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       383	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	CALL_13
0x40009be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       383	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	CALL_13
0x40009c2	          0x4889c7	                            mov rdi, rax	       383	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	CALL_13
0x40009c5	      0xe800000000	                          call 0x40009ca	       383	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	CALL_13
0x40009ca	          0x8945b0	             mov dword [rbp - 0x50], eax	       383	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	CALL_13
0x40009cd	            0xeb0a	                           jmp 0x40009d9	       383	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	CALL_13
0x40009cf	              0x90	                                     nop	       286	curl_sasl.c	FUNCTION_7	IF_1	IF_2
0x40009d0	            0xeb07	                           jmp 0x40009d9	       286	curl_sasl.c	FUNCTION_7	IF_1	IF_2
0x40009d2	              0x90	                                     nop	       333	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9
0x40009d3	            0xeb04	                           jmp 0x40009d9	       333	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_4	IF_8	IF_9
0x40009d5	              0x90	                                     nop	       349	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11
0x40009d6	            0xeb01	                           jmp 0x40009d9	       349	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11
0x40009d8	              0x90	                                     nop	       361	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13
0x40009d9	        0x837db000	               cmp dword [rbp - 0x50], 0	       387	curl_sasl.c	FUNCTION_7	IF_18
0x40009dd	     0xf85b7000000	                           jne 0x4000a9a	       387	curl_sasl.c	FUNCTION_7	IF_18
0x40009e3	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       387	curl_sasl.c	FUNCTION_7	IF_18
0x40009e8	     0xf84ac000000	                            je 0x4000a9a	       387	curl_sasl.c	FUNCTION_7	IF_18
0x40009ee	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       388	curl_sasl.c	FUNCTION_7	IF_18	IF_19
0x40009f2	          0x4885c0	                           test rax, rax	       388	curl_sasl.c	FUNCTION_7	IF_18	IF_19
0x40009f5	            0x7451	                            je 0x4000a48	       388	curl_sasl.c	FUNCTION_7	IF_18	IF_19
0x40009f7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       388	curl_sasl.c	FUNCTION_7	IF_18	IF_19
0x40009fb	          0x488b00	                    mov rax, qword [rax]	       388	curl_sasl.c	FUNCTION_7	IF_18	IF_19
0x40009fe	        0x488b4010	            mov rax, qword [rax + 0x10] 	       388	curl_sasl.c	FUNCTION_7	IF_18	IF_19
0x4000a02	          0x4885c0	                           test rax, rax	       388	curl_sasl.c	FUNCTION_7	IF_18	IF_19
0x4000a05	            0x7441	                            je 0x4000a48	       388	curl_sasl.c	FUNCTION_7	IF_18	IF_19
0x4000a07	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       389	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_14
0x4000a0b	          0x4889c7	                            mov rdi, rax	       389	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_14
0x4000a0e	      0xe800000000	                          call 0x4000a13	       389	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_14
0x4000a13	          0x4889c2	                            mov rdx, rax	       389	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_14
0x4000a16	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       389	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_14
0x4000a1a	          0x4801c2	                            add rdx, rax	       389	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_14
0x4000a1d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       389	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_14
0x4000a21	          0x488b00	                    mov rax, qword [rax]	       389	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_14
0x4000a24	        0x488b4010	            mov rax, qword [rax + 0x10] 	       389	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_14
0x4000a28	          0x4839c2	                            cmp rdx, rax	       388	curl_sasl.c	FUNCTION_7	IF_18	IF_19
0x4000a2b	            0x761b	                           jbe 0x4000a48	       388	curl_sasl.c	FUNCTION_7	IF_18	IF_19
0x4000a2d	    0x488b05000000	            mov rax, qword [0x04000a34] 	       390	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_15
0x4000a34	          0x488b00	                    mov rax, qword [rax]	       390	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_15
0x4000a37	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       390	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_15
0x4000a3b	          0x4889d7	                            mov rdi, rdx	       390	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_15
0x4000a3e	            0xffd0	                                call rax	       390	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_15
0x4000a40	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       391	curl_sasl.c	FUNCTION_7	IF_18	IF_19
0x4000a48	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       394	curl_sasl.c	FUNCTION_7	IF_18	CALL_16
0x4000a4c	          0x488b00	                    mov rax, qword [rax]	       394	curl_sasl.c	FUNCTION_7	IF_18	CALL_16
0x4000a4f	        0x488b4018	            mov rax, qword [rax + 0x18] 	       394	curl_sasl.c	FUNCTION_7	IF_18	CALL_16
0x4000a53	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       394	curl_sasl.c	FUNCTION_7	IF_18	CALL_16
0x4000a57	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       394	curl_sasl.c	FUNCTION_7	IF_18	CALL_16
0x4000a5b	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       394	curl_sasl.c	FUNCTION_7	IF_18	CALL_16
0x4000a5f	          0x4889cf	                            mov rdi, rcx	       394	curl_sasl.c	FUNCTION_7	IF_18	CALL_16
0x4000a62	            0xffd0	                                call rax	       394	curl_sasl.c	FUNCTION_7	IF_18	CALL_16
0x4000a64	          0x8945b0	             mov dword [rbp - 0x50], eax	       394	curl_sasl.c	FUNCTION_7	IF_18	CALL_16
0x4000a67	        0x837db000	               cmp dword [rbp - 0x50], 0	       395	curl_sasl.c	FUNCTION_7	IF_18	IF_20
0x4000a6b	            0x752d	                           jne 0x4000a9a	       395	curl_sasl.c	FUNCTION_7	IF_18	IF_20
0x4000a6d	        0x488b4590	             mov rax, qword [rbp - 0x70]	       396	curl_sasl.c	FUNCTION_7	IF_18	IF_20
0x4000a71	    0xc70001000000	                      mov dword [rax], 1	       396	curl_sasl.c	FUNCTION_7	IF_18	IF_20
0x4000a77	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       397	curl_sasl.c	FUNCTION_7	IF_18	IF_20	CALL_17
0x4000a7b	          0x4885c0	                           test rax, rax	       397	curl_sasl.c	FUNCTION_7	IF_18	IF_20	CALL_17
0x4000a7e	            0x7405	                            je 0x4000a85	       397	curl_sasl.c	FUNCTION_7	IF_18	IF_20	CALL_17
0x4000a80	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       397	curl_sasl.c	FUNCTION_7	IF_18	IF_20	CALL_17
0x4000a83	            0xeb03	                           jmp 0x4000a88	       397	curl_sasl.c	FUNCTION_7	IF_18	IF_20	CALL_17
0x4000a85	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       397	curl_sasl.c	FUNCTION_7	IF_18	IF_20	CALL_17
0x4000a88	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	       397	curl_sasl.c	FUNCTION_7	IF_18	IF_20	CALL_17
0x4000a8c	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       397	curl_sasl.c	FUNCTION_7	IF_18	IF_20	CALL_17
0x4000a90	            0x89c2	                            mov edx, eax	       397	curl_sasl.c	FUNCTION_7	IF_18	IF_20	CALL_17
0x4000a92	          0x4889cf	                            mov rdi, rcx	       397	curl_sasl.c	FUNCTION_7	IF_18	IF_20	CALL_17
0x4000a95	      0xe89df9ffff	                          call sym.state	       397	curl_sasl.c	FUNCTION_7	IF_18	IF_20	CALL_17
0x4000a9a	    0x488b05000000	            mov rax, qword [0x04000aa1] 	       401	curl_sasl.c	FUNCTION_7	CALL_18
0x4000aa1	          0x488b00	                    mov rax, qword [rax]	       401	curl_sasl.c	FUNCTION_7	CALL_18
0x4000aa4	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       401	curl_sasl.c	FUNCTION_7	CALL_18
0x4000aa8	          0x4889d7	                            mov rdi, rdx	       401	curl_sasl.c	FUNCTION_7	CALL_18
0x4000aab	            0xffd0	                                call rax	       401	curl_sasl.c	FUNCTION_7	CALL_18
0x4000aad	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       403	curl_sasl.c	FUNCTION_7
0x4000ab0	        0x488b7df8	                mov rdi, qword [rbp - 8]	       404	curl_sasl.c	FUNCTION_7
0x4000ab4	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       404	curl_sasl.c	FUNCTION_7
0x4000abd	            0x7405	                            je 0x4000ac4	       404	curl_sasl.c	FUNCTION_7
0x4000abf	      0xe800000000	                          call 0x4000ac4	       404	curl_sasl.c	FUNCTION_7
0x4000ac4	              0xc9	                                   leave	       404	curl_sasl.c	FUNCTION_7
0x4000ac5	              0xc3	                                     ret	       404	curl_sasl.c	FUNCTION_7
Curl_sasl_decode_mech	IF,4:DO,0:CALL,3:functions,0:FOR,1:SWITCH,0:ELSE,0:WHILE,0	123
0x400013c	              0x55	                                push rbp	       118	curl_sasl.c	FUNCTION_2
0x400013d	          0x4889e5	                            mov rbp, rsp	       118	curl_sasl.c	FUNCTION_2
0x4000140	        0x4883ec30	                           sub rsp, 0x30	       118	curl_sasl.c	FUNCTION_2
0x4000144	        0x48897de8	             mov qword [rbp - 0x18], rdi	       118	curl_sasl.c	FUNCTION_2
0x4000148	        0x488975e0	             mov qword [rbp - 0x20], rsi	       118	curl_sasl.c	FUNCTION_2
0x400014c	        0x488955d8	             mov qword [rbp - 0x28], rdx	       118	curl_sasl.c	FUNCTION_2
0x4000150	    0xc745fc000000	                  mov dword [rbp - 4], 0	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x4000157	      0xe96e010000	                           jmp 0x40002ca	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x400015c	          0x8b55fc	                mov edx, dword [rbp - 4]	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x400015f	          0x4889d0	                            mov rax, rdx	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000162	          0x4801c0	                            add rax, rax	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000165	          0x4801d0	                            add rax, rdx	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000168	        0x48c1e003	                              shl rax, 3	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x400016c	          0x4889c2	                            mov rdx, rax	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x400016f	    0x488d05000000	                   lea rax, [0x04000176]	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000176	        0x488b0402	              mov rax, qword [rdx + rax]	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x400017a	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x400017e	     0xf8742010000	                            ja 0x40002c6	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000184	          0x8b55fc	                mov edx, dword [rbp - 4]	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000187	          0x4889d0	                            mov rax, rdx	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x400018a	          0x4801c0	                            add rax, rax	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x400018d	          0x4801d0	                            add rax, rdx	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000190	        0x48c1e003	                              shl rax, 3	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000194	          0x4889c2	                            mov rdx, rax	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000197	    0x488d05000000	                   lea rax, [0x0400019e]	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x400019e	        0x488b3402	              mov rsi, qword [rdx + rax]	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40001a2	          0x8b55fc	                mov edx, dword [rbp - 4]	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40001a5	          0x4889d0	                            mov rax, rdx	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40001a8	          0x4801c0	                            add rax, rax	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40001ab	          0x4801d0	                            add rax, rdx	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40001ae	        0x48c1e003	                              shl rax, 3	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40001b2	          0x4889c2	                            mov rdx, rax	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40001b5	    0x488d05000000	                   lea rax, [0x040001bc]	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40001bc	        0x488b0c02	              mov rcx, qword [rdx + rax]	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40001c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40001c4	          0x4889f2	                            mov rdx, rsi	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40001c7	          0x4889ce	                            mov rsi, rcx	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40001ca	          0x4889c7	                            mov rdi, rax	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40001cd	      0xe800000000	                          call 0x40001d2	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40001d2	            0x85c0	                           test eax, eax	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x40001d4	     0xf85ec000000	                           jne 0x40002c6	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x40001da	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       125	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40001df	            0x7425	                            je 0x4000206	       125	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40001e1	          0x8b55fc	                mov edx, dword [rbp - 4]	       126	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40001e4	          0x4889d0	                            mov rax, rdx	       126	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40001e7	          0x4801c0	                            add rax, rax	       126	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40001ea	          0x4801d0	                            add rax, rdx	       126	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40001ed	        0x48c1e003	                              shl rax, 3	       126	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40001f1	          0x4889c2	                            mov rdx, rax	       126	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40001f4	    0x488d05000000	                   lea rax, [0x040001fb]	       126	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40001fb	        0x488b1402	              mov rdx, qword [rdx + rax]	       126	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40001ff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       126	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x4000203	          0x488910	                    mov qword [rax], rdx	       126	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x4000206	          0x8b55fc	                mov edx, dword [rbp - 4]	       128	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000209	          0x4889d0	                            mov rax, rdx	       128	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x400020c	          0x4801c0	                            add rax, rax	       128	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x400020f	          0x4801d0	                            add rax, rdx	       128	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000212	        0x48c1e003	                              shl rax, 3	       128	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000216	          0x4889c2	                            mov rdx, rax	       128	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000219	    0x488d05000000	                   lea rax, [0x04000220]	       128	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000220	        0x488b0402	              mov rax, qword [rdx + rax]	       128	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000224	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       128	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000228	            0x7522	                           jne 0x400024c	       128	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x400022a	          0x8b55fc	                mov edx, dword [rbp - 4]	       129	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x400022d	          0x4889d0	                            mov rax, rdx	       129	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000230	          0x4801c0	                            add rax, rax	       129	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000233	          0x4801d0	                            add rax, rdx	       129	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000236	        0x48c1e003	                              shl rax, 3	       129	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x400023a	          0x4889c2	                            mov rdx, rax	       129	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x400023d	    0x488d05000000	                   lea rax, [0x04000244]	       129	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000244	          0x8b0402	              mov eax, dword [rdx + rax]	       129	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000247	      0xe9aa000000	                           jmp 0x40002f6	       129	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x400024c	          0x8b55fc	                mov edx, dword [rbp - 4]	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x400024f	          0x4889d0	                            mov rax, rdx	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000252	          0x4801c0	                            add rax, rax	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000255	          0x4801d0	                            add rax, rdx	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000258	        0x48c1e003	                              shl rax, 3	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x400025c	          0x4889c2	                            mov rdx, rax	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x400025f	    0x488d05000000	                   lea rax, [0x04000266]	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000266	        0x488b1402	              mov rdx, qword [rdx + rax]	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x400026a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x400026e	          0x4801d0	                            add rax, rdx	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000271	           0xfb600	                   movzx eax, byte [rax]	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000274	          0x8845fb	                  mov byte [rbp - 5], al	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000277	         0xfb645fb	               movzx eax, byte [rbp - 5]	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x400027b	           0xfb6c0	                           movzx eax, al	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x400027e	            0x89c7	                            mov edi, eax	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x4000280	      0xe800000000	                          call 0x4000285	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x4000285	            0x85c0	                           test eax, eax	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x4000287	            0x753d	                           jne 0x40002c6	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x4000289	         0xfb645fb	               movzx eax, byte [rbp - 5]	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x400028d	           0xfb6c0	                           movzx eax, al	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x4000290	            0x89c7	                            mov edi, eax	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x4000292	      0xe800000000	                          call 0x4000297	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x4000297	            0x85c0	                           test eax, eax	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x4000299	            0x752b	                           jne 0x40002c6	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x400029b	        0x807dfb2d	                cmp byte [rbp - 5], 0x2d	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x400029f	            0x7425	                            je 0x40002c6	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x40002a1	        0x807dfb5f	                cmp byte [rbp - 5], 0x5f	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x40002a5	            0x741f	                            je 0x40002c6	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x40002a7	          0x8b55fc	                mov edx, dword [rbp - 4]	       133	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x40002aa	          0x4889d0	                            mov rax, rdx	       133	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x40002ad	          0x4801c0	                            add rax, rax	       133	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x40002b0	          0x4801d0	                            add rax, rdx	       133	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x40002b3	        0x48c1e003	                              shl rax, 3	       133	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x40002b7	          0x4889c2	                            mov rdx, rax	       133	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x40002ba	    0x488d05000000	                   lea rax, [0x040002c1]	       133	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x40002c1	          0x8b0402	              mov eax, dword [rdx + rax]	       133	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x40002c4	            0xeb30	                           jmp 0x40002f6	       133	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x40002c6	        0x8345fc01	                  add dword [rbp - 4], 1	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x40002ca	          0x8b55fc	                mov edx, dword [rbp - 4]	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x40002cd	          0x4889d0	                            mov rax, rdx	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x40002d0	          0x4801c0	                            add rax, rax	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x40002d3	          0x4801d0	                            add rax, rdx	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x40002d6	        0x48c1e003	                              shl rax, 3	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x40002da	          0x4889c2	                            mov rdx, rax	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x40002dd	    0x488d05000000	                   lea rax, [0x040002e4]	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x40002e4	        0x488b0402	              mov rax, qword [rdx + rax]	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x40002e8	          0x4885c0	                           test rax, rax	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x40002eb	     0xf856bfeffff	                           jne 0x400015c	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x40002f1	      0xb800000000	                              mov eax, 0	       137	curl_sasl.c	FUNCTION_2
0x40002f6	              0xc9	                                   leave	       138	curl_sasl.c	FUNCTION_2
0x40002f7	              0xc3	                                     ret	       138	curl_sasl.c	FUNCTION_2
Curl_sasl_continue	IF,12:DO,0:CALL,36:functions,0:FOR,0:SWITCH,2:ELSE,4:WHILE,0	472
0x4000ac6	              0x55	                                push rbp	       413	curl_sasl.c	FUNCTION_8
0x4000ac7	          0x4889e5	                            mov rbp, rsp	       413	curl_sasl.c	FUNCTION_8
0x4000aca	        0x4883c480	             add rsp, 0xffffffffffffff80	       413	curl_sasl.c	FUNCTION_8
0x4000ace	        0x48897d98	             mov qword [rbp - 0x68], rdi	       413	curl_sasl.c	FUNCTION_8
0x4000ad2	        0x48897590	             mov qword [rbp - 0x70], rsi	       413	curl_sasl.c	FUNCTION_8
0x4000ad6	          0x89558c	             mov dword [rbp - 0x74], edx	       413	curl_sasl.c	FUNCTION_8
0x4000ad9	        0x48894d80	             mov qword [rbp - 0x80], rcx	       413	curl_sasl.c	FUNCTION_8
0x4000add	    0x64488b042528	                mov rax, qword fs:[0x28]	       413	curl_sasl.c	FUNCTION_8
0x4000ae6	        0x488945f8	                mov qword [rbp - 8], rax	       413	curl_sasl.c	FUNCTION_8
0x4000aea	            0x31c0	                            xor eax, eax	       413	curl_sasl.c	FUNCTION_8
0x4000aec	    0xc745a8000000	               mov dword [rbp - 0x58], 0	       414	curl_sasl.c	FUNCTION_8
0x4000af3	        0x488b4590	             mov rax, qword [rbp - 0x70]	       415	curl_sasl.c	FUNCTION_8
0x4000af7	          0x488b00	                    mov rax, qword [rax]	       415	curl_sasl.c	FUNCTION_8
0x4000afa	        0x488945d8	             mov qword [rbp - 0x28], rax	       415	curl_sasl.c	FUNCTION_8
0x4000afe	    0xc745ac100000	           mov dword [rbp - 0x54], 0x10 	       416	curl_sasl.c	FUNCTION_8
0x4000b05	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       417	curl_sasl.c	FUNCTION_8
0x4000b0d	        0x488b4590	             mov rax, qword [rbp - 0x70]	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b11	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b17	          0x83f802	                              cmp eax, 2	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b1a	            0x7544	                           jne 0x4000b60	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b1c	        0x488b4590	             mov rax, qword [rbp - 0x70]	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b20	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b26	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b29	           0xf95c0	                                setne al	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b2c	           0xfb6c0	                           movzx eax, al	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b2f	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b33	          0x4863d0	                         movsxd rdx, eax	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b36	          0x4889d0	                            mov rax, rdx	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b39	          0x4801c0	                            add rax, rax	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b3c	          0x4801d0	                            add rax, rdx	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b3f	        0x48c1e003	                              shl rax, 3	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b43	          0x4801c8	                            add rax, rcx	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b46	    0x4805c4020000	                          add rax, 0x2c4	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b4c	            0x8b00	                    mov eax, dword [rax]	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b4e	          0x83f802	                              cmp eax, 2	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b51	            0x740d	                            je 0x4000b60	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b53	        0x488b4590	             mov rax, qword [rbp - 0x70]	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b57	    0x488b80600100	           mov rax, qword [rax + 0x160] 	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b5e	            0xeb0b	                           jmp 0x4000b6b	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b60	        0x488b4590	             mov rax, qword [rbp - 0x70]	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b64	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b6b	        0x488945e0	             mov qword [rbp - 0x20], rax	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000b6f	        0x488b4590	             mov rax, qword [rbp - 0x70]	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000b73	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000b79	          0x83f802	                              cmp eax, 2	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000b7c	            0x7544	                           jne 0x4000bc2	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000b7e	        0x488b4590	             mov rax, qword [rbp - 0x70]	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000b82	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000b88	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000b8b	           0xf95c0	                                setne al	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000b8e	           0xfb6c0	                           movzx eax, al	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000b91	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000b95	          0x4863d0	                         movsxd rdx, eax	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000b98	          0x4889d0	                            mov rax, rdx	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000b9b	          0x4801c0	                            add rax, rax	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000b9e	          0x4801d0	                            add rax, rdx	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000ba1	        0x48c1e003	                              shl rax, 3	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000ba5	          0x4801c8	                            add rax, rcx	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000ba8	    0x4805c4020000	                          add rax, 0x2c4	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000bae	            0x8b00	                    mov eax, dword [rax]	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000bb0	          0x83f802	                              cmp eax, 2	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000bb3	            0x740d	                            je 0x4000bc2	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000bb5	        0x488b4590	             mov rax, qword [rbp - 0x70]	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000bb9	    0x488b80900100	           mov rax, qword [rax + 0x190] 	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000bc0	            0xeb0c	                           jmp 0x4000bce	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000bc2	        0x488b4590	             mov rax, qword [rbp - 0x70]	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000bc6	    0x8b8098010000	           mov eax, dword [rax + 0x198] 	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000bcc	            0x4898	                                    cdqe	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000bce	        0x488945e8	             mov qword [rbp - 0x18], rax	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000bd2	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       422	curl_sasl.c	FUNCTION_8
0x4000bda	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       423	curl_sasl.c	FUNCTION_8
0x4000be2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       427	curl_sasl.c	FUNCTION_8
0x4000be6	    0x488b80d80900	           mov rax, qword [rax + 0x9d8] 	       427	curl_sasl.c	FUNCTION_8
0x4000bed	          0x4885c0	                           test rax, rax	       428	curl_sasl.c	FUNCTION_8
0x4000bf0	            0x740d	                            je 0x4000bff	       428	curl_sasl.c	FUNCTION_8
0x4000bf2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       428	curl_sasl.c	FUNCTION_8
0x4000bf6	    0x488b80d80900	           mov rax, qword [rax + 0x9d8] 	       428	curl_sasl.c	FUNCTION_8
0x4000bfd	            0xeb0a	                           jmp 0x4000c09	       428	curl_sasl.c	FUNCTION_8
0x4000bff	        0x488b4598	             mov rax, qword [rbp - 0x68]	       429	curl_sasl.c	FUNCTION_8
0x4000c03	          0x488b00	                    mov rax, qword [rax]	       429	curl_sasl.c	FUNCTION_8
0x4000c06	          0x488b00	                    mov rax, qword [rax]	       428	curl_sasl.c	FUNCTION_8
0x4000c09	        0x488945f0	             mov qword [rbp - 0x10], rax	       427	curl_sasl.c	FUNCTION_8
0x4000c0d	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       432	curl_sasl.c	FUNCTION_8
0x4000c15	        0x488b4580	             mov rax, qword [rbp - 0x80]	       434	curl_sasl.c	FUNCTION_8
0x4000c19	    0xc70001000000	                      mov dword [rax], 1	       434	curl_sasl.c	FUNCTION_8
0x4000c1f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       436	curl_sasl.c	FUNCTION_8	IF_1
0x4000c23	          0x8b4008	                mov eax, dword [rax + 8]	       436	curl_sasl.c	FUNCTION_8	IF_1
0x4000c26	          0x83f810	                           cmp eax, 0x10	       436	curl_sasl.c	FUNCTION_8	IF_1
0x4000c29	            0x7540	                           jne 0x4000c6b	       436	curl_sasl.c	FUNCTION_8	IF_1
0x4000c2b	        0x488b4598	             mov rax, qword [rbp - 0x68]	       437	curl_sasl.c	FUNCTION_8	IF_1	IF_2
0x4000c2f	          0x488b00	                    mov rax, qword [rax]	       437	curl_sasl.c	FUNCTION_8	IF_1	IF_2
0x4000c32	          0x8b400c	              mov eax, dword [rax + 0xc]	       437	curl_sasl.c	FUNCTION_8	IF_1	IF_2
0x4000c35	          0x3b458c	             cmp eax, dword [rbp - 0x74]	       437	curl_sasl.c	FUNCTION_8	IF_1	IF_2
0x4000c38	            0x7407	                            je 0x4000c41	       437	curl_sasl.c	FUNCTION_8	IF_1	IF_2
0x4000c3a	    0xc745a8430000	           mov dword [rbp - 0x58], 0x43 	       438	curl_sasl.c	FUNCTION_8	IF_1	IF_2
0x4000c41	        0x488b4580	             mov rax, qword [rbp - 0x80]	       439	curl_sasl.c	FUNCTION_8	IF_1
0x4000c45	    0xc70002000000	                      mov dword [rax], 2	       439	curl_sasl.c	FUNCTION_8	IF_1
0x4000c4b	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	       440	curl_sasl.c	FUNCTION_8	IF_1	CALL_3
0x4000c4f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       440	curl_sasl.c	FUNCTION_8	IF_1	CALL_3
0x4000c53	      0xba00000000	                              mov edx, 0	       440	curl_sasl.c	FUNCTION_8	IF_1	CALL_3
0x4000c58	          0x4889ce	                            mov rsi, rcx	       440	curl_sasl.c	FUNCTION_8	IF_1	CALL_3
0x4000c5b	          0x4889c7	                            mov rdi, rax	       440	curl_sasl.c	FUNCTION_8	IF_1	CALL_3
0x4000c5e	      0xe8d4f7ffff	                          call sym.state	       440	curl_sasl.c	FUNCTION_8	IF_1	CALL_3
0x4000c63	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       441	curl_sasl.c	FUNCTION_8	IF_1
0x4000c66	      0xe9a8050000	                           jmp 0x4001213	       441	curl_sasl.c	FUNCTION_8	IF_1
0x4000c6b	        0x488b4598	             mov rax, qword [rbp - 0x68]	       444	curl_sasl.c	FUNCTION_8	IF_3
0x4000c6f	          0x8b4008	                mov eax, dword [rax + 8]	       444	curl_sasl.c	FUNCTION_8	IF_3
0x4000c72	          0x83f80f	                            cmp eax, 0xf	       444	curl_sasl.c	FUNCTION_8	IF_3
0x4000c75	            0x7447	                            je 0x4000cbe	       444	curl_sasl.c	FUNCTION_8	IF_3
0x4000c77	        0x488b4598	             mov rax, qword [rbp - 0x68]	       444	curl_sasl.c	FUNCTION_8	IF_3
0x4000c7b	          0x8b4008	                mov eax, dword [rax + 8]	       444	curl_sasl.c	FUNCTION_8	IF_3
0x4000c7e	          0x83f80e	                            cmp eax, 0xe	       444	curl_sasl.c	FUNCTION_8	IF_3
0x4000c81	            0x743b	                            je 0x4000cbe	       444	curl_sasl.c	FUNCTION_8	IF_3
0x4000c83	        0x488b4598	             mov rax, qword [rbp - 0x68]	       445	curl_sasl.c	FUNCTION_8	IF_3
0x4000c87	          0x488b00	                    mov rax, qword [rax]	       445	curl_sasl.c	FUNCTION_8	IF_3
0x4000c8a	          0x8b4008	                mov eax, dword [rax + 8]	       445	curl_sasl.c	FUNCTION_8	IF_3
0x4000c8d	          0x3b458c	             cmp eax, dword [rbp - 0x74]	       444	curl_sasl.c	FUNCTION_8	IF_3
0x4000c90	            0x742c	                            je 0x4000cbe	       444	curl_sasl.c	FUNCTION_8	IF_3
0x4000c92	        0x488b4580	             mov rax, qword [rbp - 0x80]	       446	curl_sasl.c	FUNCTION_8	IF_3
0x4000c96	    0xc70002000000	                      mov dword [rax], 2	       446	curl_sasl.c	FUNCTION_8	IF_3
0x4000c9c	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	       447	curl_sasl.c	FUNCTION_8	IF_3	CALL_4
0x4000ca0	        0x488b4598	             mov rax, qword [rbp - 0x68]	       447	curl_sasl.c	FUNCTION_8	IF_3	CALL_4
0x4000ca4	      0xba00000000	                              mov edx, 0	       447	curl_sasl.c	FUNCTION_8	IF_3	CALL_4
0x4000ca9	          0x4889ce	                            mov rsi, rcx	       447	curl_sasl.c	FUNCTION_8	IF_3	CALL_4
0x4000cac	          0x4889c7	                            mov rdi, rax	       447	curl_sasl.c	FUNCTION_8	IF_3	CALL_4
0x4000caf	      0xe883f7ffff	                          call sym.state	       447	curl_sasl.c	FUNCTION_8	IF_3	CALL_4
0x4000cb4	      0xb843000000	                           mov eax, 0x43	       448	curl_sasl.c	FUNCTION_8	IF_3
0x4000cb9	      0xe955050000	                           jmp 0x4001213	       448	curl_sasl.c	FUNCTION_8	IF_3
0x4000cbe	        0x488b4598	             mov rax, qword [rbp - 0x68]	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000cc2	          0x8b4008	                mov eax, dword [rax + 8]	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000cc5	          0x83f80f	                            cmp eax, 0xf	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000cc8	     0xf8781040000	                            ja 0x400114f	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000cce	            0x89c0	                            mov eax, eax	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000cd0	    0x488d14850000	                        lea rdx, [rax*4]	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000cd8	    0x488d05000000	                   lea rax, [0x04000cdf]	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000cdf	          0x8b0402	              mov eax, dword [rdx + rax]	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000ce2	          0x4863d0	                         movsxd rdx, eax	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000ce5	    0x488d05000000	                   lea rax, [0x04000cec]	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000cec	          0x4801d0	                            add rax, rdx	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000cef	            0xffe0	                                 jmp rax	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000cf1	        0x488b4580	             mov rax, qword [rbp - 0x80]	       453	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000cf5	    0xc70002000000	                      mov dword [rax], 2	       453	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000cfb	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       454	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000cfe	      0xe910050000	                           jmp 0x4001213	       454	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000d03	        0x488b4590	             mov rax, qword [rbp - 0x70]	       456	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000d07	    0x488b90180200	           mov rdx, qword [rax + 0x218] 	       456	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000d0e	        0x488b4590	             mov rax, qword [rbp - 0x70]	       456	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000d12	    0x488bb0100200	           mov rsi, qword [rax + 0x210] 	       456	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000d19	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	       456	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000d1d	        0x488d4db0	                   lea rcx, [rbp - 0x50]	       456	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000d21	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       456	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000d25	          0x4989f8	                             mov r8, rdi	       456	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000d28	          0x4889c7	                            mov rdi, rax	       456	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000d2b	      0xe800000000	                          call 0x4000d30	       456	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000d30	          0x8945a8	             mov dword [rbp - 0x58], eax	       456	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000d33	      0xe93f040000	                           jmp 0x4001177	       459	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000d38	        0x488b4590	             mov rax, qword [rbp - 0x70]	       461	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_6
0x4000d3c	    0x488bb0100200	           mov rsi, qword [rax + 0x210] 	       461	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_6
0x4000d43	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       461	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_6
0x4000d47	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       461	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_6
0x4000d4b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       461	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_6
0x4000d4f	          0x4889c7	                            mov rdi, rax	       461	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_6
0x4000d52	      0xe800000000	                          call 0x4000d57	       461	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_6
0x4000d57	          0x8945a8	             mov dword [rbp - 0x58], eax	       461	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_6
0x4000d5a	    0xc745ac030000	               mov dword [rbp - 0x54], 3	       462	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000d61	      0xe911040000	                           jmp 0x4001177	       463	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000d66	        0x488b4590	             mov rax, qword [rbp - 0x70]	       465	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_7
0x4000d6a	    0x488bb0180200	           mov rsi, qword [rax + 0x218] 	       465	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_7
0x4000d71	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       465	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_7
0x4000d75	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       465	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_7
0x4000d79	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       465	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_7
0x4000d7d	          0x4889c7	                            mov rdi, rax	       465	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_7
0x4000d80	      0xe800000000	                          call 0x4000d85	       465	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_7
0x4000d85	          0x8945a8	             mov dword [rbp - 0x58], eax	       465	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_7
0x4000d88	      0xe9ea030000	                           jmp 0x4001177	       466	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000d8d	        0x488b4590	             mov rax, qword [rbp - 0x70]	       468	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_8
0x4000d91	    0x488bb0100200	           mov rsi, qword [rax + 0x210] 	       468	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_8
0x4000d98	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       468	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_8
0x4000d9c	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       468	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_8
0x4000da0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       468	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_8
0x4000da4	          0x4889c7	                            mov rdi, rax	       468	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_8
0x4000da7	      0xe800000000	                          call 0x4000dac	       468	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_8
0x4000dac	          0x8945a8	             mov dword [rbp - 0x58], eax	       468	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_8
0x4000daf	      0xe9c3030000	                           jmp 0x4001177	       469	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000db4	        0x488b4598	             mov rax, qword [rbp - 0x68]	       473	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_9
0x4000db8	          0x488b00	                    mov rax, qword [rax]	       473	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_9
0x4000dbb	        0x488b4028	            mov rax, qword [rax + 0x28] 	       473	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_9
0x4000dbf	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       473	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_9
0x4000dc3	    0x488b92200d00	           mov rdx, qword [rdx + 0xd20] 	       473	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_9
0x4000dca	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	       473	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_9
0x4000dce	          0x4889ce	                            mov rsi, rcx	       473	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_9
0x4000dd1	          0x4889d7	                            mov rdi, rdx	       473	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_9
0x4000dd4	            0xffd0	                                call rax	       473	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_9
0x4000dd6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       474	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_10
0x4000dda	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       474	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_10
0x4000dde	        0x488d4db8	                   lea rcx, [rbp - 0x48]	       474	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_10
0x4000de2	          0x4889ce	                            mov rsi, rcx	       474	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_10
0x4000de5	          0x4889c7	                            mov rdi, rax	       474	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_10
0x4000de8	      0xe800000000	                          call 0x4000ded	       474	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_10
0x4000ded	          0x8945a8	             mov dword [rbp - 0x58], eax	       474	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_10
0x4000df0	        0x837da800	               cmp dword [rbp - 0x58], 0	       475	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4
0x4000df4	            0x7537	                           jne 0x4000e2d	       475	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4
0x4000df6	        0x488b4590	             mov rax, qword [rbp - 0x70]	       477	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4
0x4000dfa	    0x488b88180200	           mov rcx, qword [rax + 0x218] 	       477	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4
0x4000e01	        0x488b4590	             mov rax, qword [rbp - 0x70]	       476	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4	CALL_11
0x4000e05	    0x488b90100200	           mov rdx, qword [rax + 0x210] 	       476	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4	CALL_11
0x4000e0c	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       476	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4	CALL_11
0x4000e10	        0x4c8d45d0	                    lea r8, [rbp - 0x30]	       476	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4	CALL_11
0x4000e14	        0x488d7db0	                   lea rdi, [rbp - 0x50]	       476	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4	CALL_11
0x4000e18	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       476	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4	CALL_11
0x4000e1c	          0x4d89c1	                              mov r9, r8	       476	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4	CALL_11
0x4000e1f	          0x4989f8	                             mov r8, rdi	       476	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4	CALL_11
0x4000e22	          0x4889c7	                            mov rdi, rax	       476	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4	CALL_11
0x4000e25	      0xe800000000	                          call 0x4000e2a	       476	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4	CALL_11
0x4000e2a	          0x8945a8	             mov dword [rbp - 0x58], eax	       476	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4	CALL_11
0x4000e2d	    0x488b05000000	            mov rax, qword [0x04000e34] 	       478	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_12
0x4000e34	          0x488b00	                    mov rax, qword [rax]	       478	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_12
0x4000e37	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       478	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_12
0x4000e3b	          0x4889d7	                            mov rdi, rdx	       478	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_12
0x4000e3e	            0xffd0	                                call rax	       478	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_12
0x4000e40	      0xe932030000	                           jmp 0x4001177	       479	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000e45	        0x488b4598	             mov rax, qword [rbp - 0x68]	       481	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_13
0x4000e49	          0x488b00	                    mov rax, qword [rax]	       481	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_13
0x4000e4c	        0x488b4028	            mov rax, qword [rax + 0x28] 	       481	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_13
0x4000e50	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       481	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_13
0x4000e54	    0x488b92200d00	           mov rdx, qword [rdx + 0xd20] 	       481	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_13
0x4000e5b	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	       481	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_13
0x4000e5f	          0x4889ce	                            mov rsi, rcx	       481	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_13
0x4000e62	          0x4889d7	                            mov rdi, rdx	       481	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_13
0x4000e65	            0xffd0	                                call rax	       481	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_13
0x4000e67	        0x488b4590	             mov rax, qword [rbp - 0x70]	       483	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000e6b	    0x488b88180200	           mov rcx, qword [rax + 0x218] 	       483	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000e72	        0x488b4590	             mov rax, qword [rbp - 0x70]	       483	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000e76	    0x488b90100200	           mov rdx, qword [rax + 0x210] 	       483	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000e7d	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       482	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000e81	        0x4c8d4db0	                    lea r9, [rbp - 0x50]	       482	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000e85	        0x4c8b45f0	              mov r8, qword [rbp - 0x10]	       482	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000e89	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       482	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000e8d	        0x4883ec08	                              sub rsp, 8	       482	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000e91	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	       482	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000e95	              0x57	                                push rdi	       482	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000e96	          0x4889c7	                            mov rdi, rax	       482	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000e99	      0xe800000000	                          call 0x4000e9e	       482	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000e9e	        0x4883c410	                           add rsp, 0x10	       482	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000ea2	          0x8945a8	             mov dword [rbp - 0x58], eax	       482	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000ea5	    0xc745ac070000	               mov dword [rbp - 0x54], 7	       486	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000eac	      0xe9c6020000	                           jmp 0x4001177	       487	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000eb1	    0x488b05000000	            mov rax, qword [0x04000eb8] 	       489	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_15
0x4000eb8	          0x488b00	                    mov rax, qword [rax]	       489	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_15
0x4000ebb	    0x488d3d000000	                   lea rdi, [0x04000ec2]	       489	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_15
0x4000ec2	            0xffd0	                                call rax	       489	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_15
0x4000ec4	        0x488945b0	             mov qword [rbp - 0x50], rax	       489	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_15
0x4000ec8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       490	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_5
0x4000ecc	          0x4885c0	                           test rax, rax	       490	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_5
0x4000ecf	     0xf859b020000	                           jne 0x4001170	       490	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_5
0x4000ed5	    0xc745a81b0000	           mov dword [rbp - 0x58], 0x1b 	       491	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_5
0x4000edc	      0xe98f020000	                           jmp 0x4001170	       492	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000ee1	        0x488b4590	             mov rax, qword [rbp - 0x70]	       498	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_16
0x4000ee5	    0x4c8d88c00400	                   lea r9, [rax + 0x4c0]	       498	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_16
0x4000eec	        0x488b4590	             mov rax, qword [rbp - 0x70]	       499	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000ef0	    0x488b90180200	           mov rdx, qword [rax + 0x218] 	       499	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000ef7	        0x488b4590	             mov rax, qword [rbp - 0x70]	       499	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000efb	    0x488bb0100200	           mov rsi, qword [rax + 0x210] 	       499	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000f02	        0x4c8b45e0	              mov r8, qword [rbp - 0x20]	       498	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_16
0x4000f06	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       498	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_16
0x4000f0a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       498	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_16
0x4000f0e	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	       498	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_16
0x4000f12	              0x57	                                push rdi	       498	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_16
0x4000f13	        0x488d7db0	                   lea rdi, [rbp - 0x50]	       498	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_16
0x4000f17	              0x57	                                push rdi	       498	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_16
0x4000f18	          0x4889c7	                            mov rdi, rax	       498	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_16
0x4000f1b	      0xe800000000	                          call 0x4000f20	       498	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_16
0x4000f20	        0x4883c410	                           add rsp, 0x10	       498	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_16
0x4000f24	          0x8945a8	             mov dword [rbp - 0x58], eax	       498	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_16
0x4000f27	    0xc745ac090000	               mov dword [rbp - 0x54], 9	       502	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000f2e	      0xe944020000	                           jmp 0x4001177	       503	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000f33	        0x488b4598	             mov rax, qword [rbp - 0x68]	       506	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_17
0x4000f37	          0x488b00	                    mov rax, qword [rax]	       506	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_17
0x4000f3a	        0x488b4028	            mov rax, qword [rax + 0x28] 	       506	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_17
0x4000f3e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       506	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_17
0x4000f42	    0x488b92200d00	           mov rdx, qword [rdx + 0xd20] 	       506	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_17
0x4000f49	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	       506	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_17
0x4000f4d	          0x4889ce	                            mov rsi, rcx	       506	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_17
0x4000f50	          0x4889d7	                            mov rdi, rdx	       506	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_17
0x4000f53	            0xffd0	                                call rax	       506	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_17
0x4000f55	        0x488b4590	             mov rax, qword [rbp - 0x70]	       507	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_18
0x4000f59	    0x488d90c00400	                  lea rdx, [rax + 0x4c0]	       507	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_18
0x4000f60	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       507	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_18
0x4000f64	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       507	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_18
0x4000f68	          0x4889ce	                            mov rsi, rcx	       507	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_18
0x4000f6b	          0x4889c7	                            mov rdi, rax	       507	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_18
0x4000f6e	      0xe800000000	                          call 0x4000f73	       507	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_18
0x4000f73	          0x8945a8	             mov dword [rbp - 0x58], eax	       507	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_18
0x4000f76	        0x837da800	               cmp dword [rbp - 0x58], 0	       509	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_6
0x4000f7a	     0xf85f3010000	                           jne 0x4001173	       509	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_6
0x4000f80	        0x488b4590	             mov rax, qword [rbp - 0x70]	       510	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_6	CALL_19
0x4000f84	    0x488d88c00400	                  lea rcx, [rax + 0x4c0]	       510	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_6	CALL_19
0x4000f8b	        0x488b4590	             mov rax, qword [rbp - 0x70]	       511	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_6
0x4000f8f	    0x488b90180200	           mov rdx, qword [rax + 0x218] 	       511	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_6
0x4000f96	        0x488b4590	             mov rax, qword [rbp - 0x70]	       510	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_6	CALL_19
0x4000f9a	    0x488bb0100200	           mov rsi, qword [rax + 0x210] 	       510	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_6	CALL_19
0x4000fa1	        0x4c8d45d0	                    lea r8, [rbp - 0x30]	       510	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_6	CALL_19
0x4000fa5	        0x488d7db0	                   lea rdi, [rbp - 0x50]	       510	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_6	CALL_19
0x4000fa9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       510	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_6	CALL_19
0x4000fad	          0x4d89c1	                              mov r9, r8	       510	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_6	CALL_19
0x4000fb0	          0x4989f8	                             mov r8, rdi	       510	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_6	CALL_19
0x4000fb3	          0x4889c7	                            mov rdi, rax	       510	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_6	CALL_19
0x4000fb6	      0xe800000000	                          call 0x4000fbb	       510	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_6	CALL_19
0x4000fbb	          0x8945a8	             mov dword [rbp - 0x58], eax	       510	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_6	CALL_19
0x4000fbe	      0xe9b0010000	                           jmp 0x4001173	       513	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000fc3	        0x488b4598	             mov rax, qword [rbp - 0x68]	       556	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8
0x4000fc7	          0x8b4014	            mov eax, dword [rax + 0x14] 	       556	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8
0x4000fca	      0x3d00010000	                          cmp eax, 0x100	       556	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8
0x4000fcf	            0x754a	                           jne 0x400101b	       556	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8
0x4000fd1	        0x488b4590	             mov rax, qword [rbp - 0x70]	       560	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8
0x4000fd5	    0x4c8b80280200	            mov r8, qword [rax + 0x228] 	       560	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8
0x4000fdc	        0x488b4590	             mov rax, qword [rbp - 0x70]	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4000fe0	    0x488bb0100200	           mov rsi, qword [rax + 0x210] 	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4000fe7	        0x4c8d4db0	                    lea r9, [rbp - 0x50]	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4000feb	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4000fef	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4000ff3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4000ff7	        0x4883ec08	                              sub rsp, 8	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4000ffb	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4000fff	              0x57	                                push rdi	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4001000	          0x4889c7	                            mov rdi, rax	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4001003	      0xe800000000	                          call 0x4001008	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4001008	        0x4883c410	                           add rsp, 0x10	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x400100c	          0x8945a8	             mov dword [rbp - 0x58], eax	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x400100f	    0xc745ac0e0000	            mov dword [rbp - 0x54], 0xe 	       564	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8
0x4001016	      0xe95c010000	                           jmp 0x4001177	       571	curl_sasl.c	FUNCTION_8	SWITCH_1
0x400101b	        0x488b4590	             mov rax, qword [rbp - 0x70]	       569	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2
0x400101f	    0x488b88280200	           mov rcx, qword [rax + 0x228] 	       569	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2
0x4001026	        0x488b4590	             mov rax, qword [rbp - 0x70]	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x400102a	    0x488bb0100200	           mov rsi, qword [rax + 0x210] 	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4001031	        0x488d7db0	                   lea rdi, [rbp - 0x50]	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4001035	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4001039	        0x4883ec08	                              sub rsp, 8	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x400103d	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4001041	              0x52	                                push rdx	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4001042	          0x4989f9	                             mov r9, rdi	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4001045	          0x4989c8	                             mov r8, rcx	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4001048	      0xb900000000	                              mov ecx, 0	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x400104d	      0xba00000000	                              mov edx, 0	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4001052	          0x4889c7	                            mov rdi, rax	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4001055	      0xe800000000	                          call 0x400105a	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x400105a	        0x4883c410	                           add rsp, 0x10	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x400105e	          0x8945a8	             mov dword [rbp - 0x58], eax	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4001061	      0xe911010000	                           jmp 0x4001177	       571	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4001066	        0x488b4598	             mov rax, qword [rbp - 0x68]	       575	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9
0x400106a	          0x488b00	                    mov rax, qword [rax]	       575	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9
0x400106d	          0x8b400c	              mov eax, dword [rax + 0xc]	       575	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9
0x4001070	          0x3b458c	             cmp eax, dword [rbp - 0x74]	       575	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9
0x4001073	            0x752a	                           jne 0x400109f	       575	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9
0x4001075	        0x488b4580	             mov rax, qword [rbp - 0x80]	       577	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9
0x4001079	    0xc70002000000	                      mov dword [rax], 2	       577	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9
0x400107f	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	       578	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9	CALL_28
0x4001083	        0x488b4598	             mov rax, qword [rbp - 0x68]	       578	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9	CALL_28
0x4001087	      0xba00000000	                              mov edx, 0	       578	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9	CALL_28
0x400108c	          0x4889ce	                            mov rsi, rcx	       578	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9	CALL_28
0x400108f	          0x4889c7	                            mov rdi, rax	       578	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9	CALL_28
0x4001092	      0xe8a0f3ffff	                          call sym.state	       578	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9	CALL_28
0x4001097	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       579	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9
0x400109a	      0xe974010000	                           jmp 0x4001213	       579	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9
0x400109f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       581	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10
0x40010a3	          0x488b00	                    mov rax, qword [rax]	       581	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10
0x40010a6	          0x8b4008	                mov eax, dword [rax + 8]	       581	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10
0x40010a9	          0x3b458c	             cmp eax, dword [rbp - 0x74]	       581	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10
0x40010ac	            0x7530	                           jne 0x40010de	       581	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10
0x40010ae	    0x488b05000000	            mov rax, qword [0x040010b5] 	       584	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10	CALL_29
0x40010b5	          0x488b00	                    mov rax, qword [rax]	       584	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10	CALL_29
0x40010b8	    0x488d3d000000	                   lea rdi, [0x040010bf]	       584	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10	CALL_29
0x40010bf	            0xffd0	                                call rax	       584	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10	CALL_29
0x40010c1	        0x488945b0	             mov qword [rbp - 0x50], rax	       584	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10	CALL_29
0x40010c5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       585	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10	IF_11
0x40010c9	          0x4885c0	                           test rax, rax	       585	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10	IF_11
0x40010cc	     0xf85a4000000	                           jne 0x4001176	       585	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10	IF_11
0x40010d2	    0xc745a81b0000	           mov dword [rbp - 0x58], 0x1b 	       586	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10	IF_11
0x40010d9	      0xe998000000	                           jmp 0x4001176	       587	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10
0x40010de	        0x488b4580	             mov rax, qword [rbp - 0x80]	       590	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_4
0x40010e2	    0xc70002000000	                      mov dword [rax], 2	       590	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_4
0x40010e8	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	       591	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_4	CALL_30
0x40010ec	        0x488b4598	             mov rax, qword [rbp - 0x68]	       591	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_4	CALL_30
0x40010f0	      0xba00000000	                              mov edx, 0	       591	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_4	CALL_30
0x40010f5	          0x4889ce	                            mov rsi, rcx	       591	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_4	CALL_30
0x40010f8	          0x4889c7	                            mov rdi, rax	       591	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_4	CALL_30
0x40010fb	      0xe837f3ffff	                          call sym.state	       591	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_4	CALL_30
0x4001100	      0xb843000000	                           mov eax, 0x43	       592	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_4
0x4001105	      0xe909010000	                           jmp 0x4001213	       592	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_4
0x400110a	        0x488b4598	             mov rax, qword [rbp - 0x68]	       597	curl_sasl.c	FUNCTION_8	SWITCH_1
0x400110e	          0x8b500c	              mov edx, dword [rax + 0xc]	       597	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4001111	        0x488b4598	             mov rax, qword [rbp - 0x68]	       597	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4001115	          0x8b4014	            mov eax, dword [rax + 0x14] 	       597	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4001118	            0x31c2	                            xor edx, eax	       597	curl_sasl.c	FUNCTION_8	SWITCH_1
0x400111a	        0x488b4598	             mov rax, qword [rbp - 0x68]	       597	curl_sasl.c	FUNCTION_8	SWITCH_1
0x400111e	          0x89500c	              mov dword [rax + 0xc], edx	       597	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4001121	        0x488b4598	             mov rax, qword [rbp - 0x68]	       600	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_31
0x4001125	         0xfb6401a	           movzx eax, byte [rax + 0x1a] 	       600	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_31
0x4001129	           0xfb6d0	                           movzx edx, al	       600	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_31
0x400112c	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	       600	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_31
0x4001130	        0x488b7590	             mov rsi, qword [rbp - 0x70]	       600	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_31
0x4001134	        0x488b4598	             mov rax, qword [rbp - 0x68]	       600	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_31
0x4001138	          0x4889c7	                            mov rdi, rax	       600	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_31
0x400113b	      0xe800000000	                          call 0x4001140	       600	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_31
0x4001140	          0x8945a8	             mov dword [rbp - 0x58], eax	       600	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_31
0x4001143	        0x488b4598	             mov rax, qword [rbp - 0x68]	       601	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4001147	          0x8b4008	                mov eax, dword [rax + 8]	       601	curl_sasl.c	FUNCTION_8	SWITCH_1
0x400114a	          0x8945ac	             mov dword [rbp - 0x54], eax	       601	curl_sasl.c	FUNCTION_8	SWITCH_1
0x400114d	            0xeb28	                           jmp 0x4001177	       602	curl_sasl.c	FUNCTION_8	SWITCH_1
0x400114f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       604	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_32
0x4001153	    0x488d35000000	                   lea rsi, [0x0400115a]	       604	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_32
0x400115a	          0x4889c7	                            mov rdi, rax	       604	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_32
0x400115d	      0xb800000000	                              mov eax, 0	       604	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_32
0x4001162	      0xe800000000	                          call 0x4001167	       604	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_32
0x4001167	    0xc745a8010000	               mov dword [rbp - 0x58], 1	       605	curl_sasl.c	FUNCTION_8	SWITCH_1
0x400116e	            0xeb07	                           jmp 0x4001177	       606	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4001170	              0x90	                                     nop	       492	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4001171	            0xeb04	                           jmp 0x4001177	       492	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4001173	              0x90	                                     nop	       513	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4001174	            0xeb01	                           jmp 0x4001177	       513	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4001176	              0x90	                                     nop	       587	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10
0x4001177	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       609	curl_sasl.c	FUNCTION_8	SWITCH_2
0x400117a	            0x85c0	                           test eax, eax	       609	curl_sasl.c	FUNCTION_8	SWITCH_2
0x400117c	            0x742c	                            je 0x40011aa	       609	curl_sasl.c	FUNCTION_8	SWITCH_2
0x400117e	          0x83f83d	                           cmp eax, 0x3d	       609	curl_sasl.c	FUNCTION_8	SWITCH_2
0x4001181	            0x7550	                           jne 0x40011d3	       609	curl_sasl.c	FUNCTION_8	SWITCH_2
0x4001183	        0x488b4598	             mov rax, qword [rbp - 0x68]	       612	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_33
0x4001187	          0x488b00	                    mov rax, qword [rax]	       612	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_33
0x400118a	        0x488b4020	            mov rax, qword [rax + 0x20] 	       612	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_33
0x400118e	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       612	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_33
0x4001192	    0x488d35000000	                   lea rsi, [0x04001199]	       612	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_33
0x4001199	          0x4889d7	                            mov rdi, rdx	       612	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_33
0x400119c	            0xffd0	                                call rax	       612	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_33
0x400119e	          0x8945a8	             mov dword [rbp - 0x58], eax	       612	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_33
0x40011a1	    0xc745ac0f0000	            mov dword [rbp - 0x54], 0xf 	       613	curl_sasl.c	FUNCTION_8	SWITCH_2
0x40011a8	            0xeb3d	                           jmp 0x40011e7	       614	curl_sasl.c	FUNCTION_8	SWITCH_2
0x40011aa	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       616	curl_sasl.c	FUNCTION_8	SWITCH_2	IF_12
0x40011ae	          0x4885c0	                           test rax, rax	       616	curl_sasl.c	FUNCTION_8	SWITCH_2	IF_12
0x40011b1	            0x7433	                            je 0x40011e6	       616	curl_sasl.c	FUNCTION_8	SWITCH_2	IF_12
0x40011b3	        0x488b4598	             mov rax, qword [rbp - 0x68]	       617	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_34
0x40011b7	          0x488b00	                    mov rax, qword [rax]	       617	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_34
0x40011ba	        0x488b4020	            mov rax, qword [rax + 0x20] 	       617	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_34
0x40011be	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       617	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_34
0x40011c2	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       617	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_34
0x40011c6	          0x4889ce	                            mov rsi, rcx	       617	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_34
0x40011c9	          0x4889d7	                            mov rdi, rdx	       617	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_34
0x40011cc	            0xffd0	                                call rax	       617	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_34
0x40011ce	          0x8945a8	             mov dword [rbp - 0x58], eax	       617	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_34
0x40011d1	            0xeb13	                           jmp 0x40011e6	       618	curl_sasl.c	FUNCTION_8	SWITCH_2
0x40011d3	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       620	curl_sasl.c	FUNCTION_8	SWITCH_2
0x40011da	        0x488b4580	             mov rax, qword [rbp - 0x80]	       621	curl_sasl.c	FUNCTION_8	SWITCH_2
0x40011de	    0xc70002000000	                      mov dword [rax], 2	       621	curl_sasl.c	FUNCTION_8	SWITCH_2
0x40011e4	            0xeb01	                           jmp 0x40011e7	       622	curl_sasl.c	FUNCTION_8	SWITCH_2
0x40011e6	              0x90	                                     nop	       618	curl_sasl.c	FUNCTION_8	SWITCH_2
0x40011e7	    0x488b05000000	            mov rax, qword [0x040011ee] 	       625	curl_sasl.c	FUNCTION_8	CALL_35
0x40011ee	          0x488b00	                    mov rax, qword [rax]	       625	curl_sasl.c	FUNCTION_8	CALL_35
0x40011f1	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       625	curl_sasl.c	FUNCTION_8	CALL_35
0x40011f5	          0x4889d7	                            mov rdi, rdx	       625	curl_sasl.c	FUNCTION_8	CALL_35
0x40011f8	            0xffd0	                                call rax	       625	curl_sasl.c	FUNCTION_8	CALL_35
0x40011fa	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       627	curl_sasl.c	FUNCTION_8	CALL_36
0x40011fd	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	       627	curl_sasl.c	FUNCTION_8	CALL_36
0x4001201	        0x488b4598	             mov rax, qword [rbp - 0x68]	       627	curl_sasl.c	FUNCTION_8	CALL_36
0x4001205	          0x4889ce	                            mov rsi, rcx	       627	curl_sasl.c	FUNCTION_8	CALL_36
0x4001208	          0x4889c7	                            mov rdi, rax	       627	curl_sasl.c	FUNCTION_8	CALL_36
0x400120b	      0xe827f2ffff	                          call sym.state	       627	curl_sasl.c	FUNCTION_8	CALL_36
0x4001210	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       629	curl_sasl.c	FUNCTION_8
0x4001213	        0x488b7df8	                mov rdi, qword [rbp - 8]	       630	curl_sasl.c	FUNCTION_8
0x4001217	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       630	curl_sasl.c	FUNCTION_8
0x4001220	            0x7405	                            je 0x4001227	       630	curl_sasl.c	FUNCTION_8
0x4001222	      0xe800000000	                          call 0x4001227	       630	curl_sasl.c	FUNCTION_8
0x4001227	              0xc9	                                   leave	       630	curl_sasl.c	FUNCTION_8
0x4001228	              0xc3	                                     ret	       630	curl_sasl.c	FUNCTION_8
Curl_sasl_can_authenticate	IF,2:DO,0:CALL,0:functions,0:FOR,0:SWITCH,0:ELSE,0:WHILE,0	23
0x4000453	              0x55	                                push rbp	       237	curl_sasl.c	FUNCTION_6
0x4000454	          0x4889e5	                            mov rbp, rsp	       237	curl_sasl.c	FUNCTION_6
0x4000457	        0x48897df8	                mov qword [rbp - 8], rdi	       237	curl_sasl.c	FUNCTION_6
0x400045b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       237	curl_sasl.c	FUNCTION_6
0x400045f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       239	curl_sasl.c	FUNCTION_6	IF_1
0x4000463	     0xfb680a00300	          movzx eax, byte [rax + 0x3a0] 	       239	curl_sasl.c	FUNCTION_6	IF_1
0x400046a	            0x84c0	                             test al, al	       239	curl_sasl.c	FUNCTION_6	IF_1
0x400046c	            0x7407	                            je 0x4000475	       239	curl_sasl.c	FUNCTION_6	IF_1
0x400046e	      0xb801000000	                              mov eax, 1	       240	curl_sasl.c	FUNCTION_6	IF_1
0x4000473	            0xeb23	                           jmp 0x4000498	       240	curl_sasl.c	FUNCTION_6	IF_1
0x4000475	        0x488b45f8	                mov rax, qword [rbp - 8]	       243	curl_sasl.c	FUNCTION_6	IF_2
0x4000479	          0x8b500c	              mov edx, dword [rax + 0xc]	       243	curl_sasl.c	FUNCTION_6	IF_2
0x400047c	        0x488b45f8	                mov rax, qword [rbp - 8]	       243	curl_sasl.c	FUNCTION_6	IF_2
0x4000480	          0x8b4010	            mov eax, dword [rax + 0x10] 	       243	curl_sasl.c	FUNCTION_6	IF_2
0x4000483	            0x21d0	                            and eax, edx	       243	curl_sasl.c	FUNCTION_6	IF_2
0x4000485	          0x83e020	                           and eax, 0x20	       243	curl_sasl.c	FUNCTION_6	IF_2
0x4000488	            0x85c0	                           test eax, eax	       243	curl_sasl.c	FUNCTION_6	IF_2
0x400048a	            0x7407	                            je 0x4000493	       243	curl_sasl.c	FUNCTION_6	IF_2
0x400048c	      0xb801000000	                              mov eax, 1	       244	curl_sasl.c	FUNCTION_6	IF_2
0x4000491	            0xeb05	                           jmp 0x4000498	       244	curl_sasl.c	FUNCTION_6	IF_2
0x4000493	      0xb800000000	                              mov eax, 0	       246	curl_sasl.c	FUNCTION_6
0x4000498	              0x5d	                                 pop rbp	       247	curl_sasl.c	FUNCTION_6
0x4000499	              0xc3	                                     ret	       247	curl_sasl.c	FUNCTION_6
Curl_sasl_parse_url_auth_option	IF,4:DO,0:CALL,2:functions,0:FOR,0:SWITCH,0:ELSE,2:WHILE,0	59
0x40002f8	              0x55	                                push rbp	       147	curl_sasl.c	FUNCTION_3
0x40002f9	          0x4889e5	                            mov rbp, rsp	       147	curl_sasl.c	FUNCTION_3
0x40002fc	        0x4883ec40	                           sub rsp, 0x40	       147	curl_sasl.c	FUNCTION_3
0x4000300	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       147	curl_sasl.c	FUNCTION_3
0x4000304	        0x488975d0	             mov qword [rbp - 0x30], rsi	       147	curl_sasl.c	FUNCTION_3
0x4000308	        0x488955c8	             mov qword [rbp - 0x38], rdx	       147	curl_sasl.c	FUNCTION_3
0x400030c	    0x64488b042528	                mov rax, qword fs:[0x28]	       147	curl_sasl.c	FUNCTION_3
0x4000315	        0x488945f8	                mov qword [rbp - 8], rax	       147	curl_sasl.c	FUNCTION_3
0x4000319	            0x31c0	                            xor eax, eax	       147	curl_sasl.c	FUNCTION_3
0x400031b	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       148	curl_sasl.c	FUNCTION_3
0x4000322	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       152	curl_sasl.c	FUNCTION_3	IF_1
0x4000327	            0x750a	                           jne 0x4000333	       152	curl_sasl.c	FUNCTION_3	IF_1
0x4000329	      0xb803000000	                              mov eax, 3	       153	curl_sasl.c	FUNCTION_3	IF_1
0x400032e	      0xe990000000	                           jmp 0x40003c3	       153	curl_sasl.c	FUNCTION_3	IF_1
0x4000333	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       155	curl_sasl.c	FUNCTION_3	IF_2
0x4000337	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       155	curl_sasl.c	FUNCTION_3	IF_2
0x400033b	            0x84c0	                             test al, al	       155	curl_sasl.c	FUNCTION_3	IF_2
0x400033d	            0x7413	                            je 0x4000352	       155	curl_sasl.c	FUNCTION_3	IF_2
0x400033f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       156	curl_sasl.c	FUNCTION_3	IF_2
0x4000343	        0xc6401800	                mov byte [rax + 0x18], 0	       156	curl_sasl.c	FUNCTION_3	IF_2
0x4000347	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       157	curl_sasl.c	FUNCTION_3	IF_2
0x400034b	    0xc74010000000	               mov dword [rax + 0x10], 0	       157	curl_sasl.c	FUNCTION_3	IF_2
0x4000352	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       160	curl_sasl.c	FUNCTION_3	IF_3	CALL_1
0x4000356	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       160	curl_sasl.c	FUNCTION_3	IF_3	CALL_1
0x400035a	    0x488d35000000	                   lea rsi, [0x04000361]	       160	curl_sasl.c	FUNCTION_3	IF_3	CALL_1
0x4000361	          0x4889c7	                            mov rdi, rax	       160	curl_sasl.c	FUNCTION_3	IF_3	CALL_1
0x4000364	      0xe800000000	                          call 0x4000369	       160	curl_sasl.c	FUNCTION_3	IF_3	CALL_1
0x4000369	            0x85c0	                           test eax, eax	       160	curl_sasl.c	FUNCTION_3	IF_3	CALL_1
0x400036b	            0x750d	                           jne 0x400037a	       160	curl_sasl.c	FUNCTION_3	IF_3	CALL_1
0x400036d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       161	curl_sasl.c	FUNCTION_3	IF_3
0x4000371	    0xc74010dfffff	     mov dword [rax + 0x10], 0xffffffdf 	       161	curl_sasl.c	FUNCTION_3	IF_3
0x4000378	            0xeb46	                           jmp 0x40003c0	       161	curl_sasl.c	FUNCTION_3	IF_3
0x400037a	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       163	curl_sasl.c	FUNCTION_3	ELSE_1	CALL_2
0x400037e	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       163	curl_sasl.c	FUNCTION_3	ELSE_1	CALL_2
0x4000382	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       163	curl_sasl.c	FUNCTION_3	ELSE_1	CALL_2
0x4000386	          0x4889ce	                            mov rsi, rcx	       163	curl_sasl.c	FUNCTION_3	ELSE_1	CALL_2
0x4000389	          0x4889c7	                            mov rdi, rax	       163	curl_sasl.c	FUNCTION_3	ELSE_1	CALL_2
0x400038c	      0xe800000000	                          call 0x4000391	       163	curl_sasl.c	FUNCTION_3	ELSE_1	CALL_2
0x4000391	          0x8945ec	             mov dword [rbp - 0x14], eax	       163	curl_sasl.c	FUNCTION_3	ELSE_1	CALL_2
0x4000394	        0x837dec00	               cmp dword [rbp - 0x14], 0	       164	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x4000398	            0x741f	                            je 0x40003b9	       164	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x400039a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       164	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x400039e	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       164	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x40003a2	            0x7515	                           jne 0x40003b9	       164	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x40003a4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       165	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x40003a8	          0x8b4010	            mov eax, dword [rax + 0x10] 	       165	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x40003ab	           0xb45ec	              or eax, dword [rbp - 0x14]	       165	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x40003ae	            0x89c2	                            mov edx, eax	       165	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x40003b0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       165	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x40003b4	          0x895010	             mov dword [rax + 0x10], edx	       165	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x40003b7	            0xeb07	                           jmp 0x40003c0	       165	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x40003b9	    0xc745e8030000	               mov dword [rbp - 0x18], 3	       167	curl_sasl.c	FUNCTION_3	ELSE_1	ELSE_2
0x40003c0	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       170	curl_sasl.c	FUNCTION_3	ELSE_2
0x40003c3	        0x488b4df8	                mov rcx, qword [rbp - 8]	       171	curl_sasl.c	FUNCTION_3	ELSE_2
0x40003c7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       171	curl_sasl.c	FUNCTION_3	ELSE_2
0x40003d0	            0x7405	                            je 0x40003d7	       171	curl_sasl.c	FUNCTION_3	ELSE_2
0x40003d2	      0xe800000000	                          call 0x40003d7	       171	curl_sasl.c	FUNCTION_3	ELSE_2
0x40003d7	              0xc9	                                   leave	       171	curl_sasl.c	FUNCTION_3	ELSE_2
0x40003d8	              0xc3	                                     ret	       171	curl_sasl.c	FUNCTION_3	ELSE_2
