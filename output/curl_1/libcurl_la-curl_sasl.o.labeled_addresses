Curl_sasl_decode_mech	ELSE,0:CALL,3:SWITCH,0:WHILE,0:FOR,1:functions,0:DO,0:IF,4	123
0x4000120	              0x55	                                push rbp	       118	curl_sasl.c	FUNCTION_2
0x4000121	          0x4889e5	                            mov rbp, rsp	       118	curl_sasl.c	FUNCTION_2
0x4000124	        0x4883ec30	                           sub rsp, 0x30	       118	curl_sasl.c	FUNCTION_2
0x4000128	        0x48897de8	             mov qword [rbp - 0x18], rdi	       118	curl_sasl.c	FUNCTION_2
0x400012c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       118	curl_sasl.c	FUNCTION_2
0x4000130	        0x488955d8	             mov qword [rbp - 0x28], rdx	       118	curl_sasl.c	FUNCTION_2
0x4000134	    0xc745fc000000	                  mov dword [rbp - 4], 0	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x400013b	      0xe96e010000	                           jmp 0x40002ae	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x4000140	          0x8b55fc	                mov edx, dword [rbp - 4]	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000143	          0x4889d0	                            mov rax, rdx	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000146	          0x4801c0	                            add rax, rax	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000149	          0x4801d0	                            add rax, rdx	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x400014c	        0x48c1e003	                              shl rax, 3	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000150	          0x4889c2	                            mov rdx, rax	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000153	    0x488d05000000	                   lea rax, [0x0400015a]	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x400015a	        0x488b0402	              mov rax, qword [rdx + rax]	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x400015e	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000162	     0xf8742010000	                            ja 0x40002aa	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000168	          0x8b55fc	                mov edx, dword [rbp - 4]	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x400016b	          0x4889d0	                            mov rax, rdx	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x400016e	          0x4801c0	                            add rax, rax	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000171	          0x4801d0	                            add rax, rdx	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000174	        0x48c1e003	                              shl rax, 3	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000178	          0x4889c2	                            mov rdx, rax	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x400017b	    0x488d05000000	                   lea rax, [0x04000182]	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000182	        0x488b3402	              mov rsi, qword [rdx + rax]	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000186	          0x8b55fc	                mov edx, dword [rbp - 4]	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000189	          0x4889d0	                            mov rax, rdx	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x400018c	          0x4801c0	                            add rax, rax	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x400018f	          0x4801d0	                            add rax, rdx	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000192	        0x48c1e003	                              shl rax, 3	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000196	          0x4889c2	                            mov rdx, rax	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x4000199	    0x488d05000000	                   lea rax, [0x040001a0]	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40001a0	        0x488b0c02	              mov rcx, qword [rdx + rax]	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40001a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40001a8	          0x4889f2	                            mov rdx, rsi	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40001ab	          0x4889ce	                            mov rsi, rcx	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40001ae	          0x4889c7	                            mov rdi, rax	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40001b1	      0xe800000000	                          call 0x40001b6	       124	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x40001b6	            0x85c0	                           test eax, eax	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x40001b8	     0xf85ec000000	                           jne 0x40002aa	       123	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x40001be	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       125	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40001c3	            0x7425	                            je 0x40001ea	       125	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40001c5	          0x8b55fc	                mov edx, dword [rbp - 4]	       126	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40001c8	          0x4889d0	                            mov rax, rdx	       126	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40001cb	          0x4801c0	                            add rax, rax	       126	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40001ce	          0x4801d0	                            add rax, rdx	       126	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40001d1	        0x48c1e003	                              shl rax, 3	       126	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40001d5	          0x4889c2	                            mov rdx, rax	       126	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40001d8	    0x488d05000000	                   lea rax, [0x040001df]	       126	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40001df	        0x488b1402	              mov rdx, qword [rdx + rax]	       126	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40001e3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       126	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40001e7	          0x488910	                    mov qword [rax], rdx	       126	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_2
0x40001ea	          0x8b55fc	                mov edx, dword [rbp - 4]	       128	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x40001ed	          0x4889d0	                            mov rax, rdx	       128	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x40001f0	          0x4801c0	                            add rax, rax	       128	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x40001f3	          0x4801d0	                            add rax, rdx	       128	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x40001f6	        0x48c1e003	                              shl rax, 3	       128	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x40001fa	          0x4889c2	                            mov rdx, rax	       128	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x40001fd	    0x488d05000000	                   lea rax, [0x04000204]	       128	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000204	        0x488b0402	              mov rax, qword [rdx + rax]	       128	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000208	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       128	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x400020c	            0x7522	                           jne 0x4000230	       128	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x400020e	          0x8b55fc	                mov edx, dword [rbp - 4]	       129	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000211	          0x4889d0	                            mov rax, rdx	       129	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000214	          0x4801c0	                            add rax, rax	       129	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000217	          0x4801d0	                            add rax, rdx	       129	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x400021a	        0x48c1e003	                              shl rax, 3	       129	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x400021e	          0x4889c2	                            mov rdx, rax	       129	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000221	    0x488d05000000	                   lea rax, [0x04000228]	       129	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000228	          0x8b0402	              mov eax, dword [rdx + rax]	       129	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x400022b	      0xe9aa000000	                           jmp 0x40002da	       129	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_3
0x4000230	          0x8b55fc	                mov edx, dword [rbp - 4]	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000233	          0x4889d0	                            mov rax, rdx	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000236	          0x4801c0	                            add rax, rax	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000239	          0x4801d0	                            add rax, rdx	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x400023c	        0x48c1e003	                              shl rax, 3	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000240	          0x4889c2	                            mov rdx, rax	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000243	    0x488d05000000	                   lea rax, [0x0400024a]	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x400024a	        0x488b1402	              mov rdx, qword [rdx + rax]	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x400024e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000252	          0x4801d0	                            add rax, rdx	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000255	           0xfb600	                   movzx eax, byte [rax]	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x4000258	          0x8845fb	                  mov byte [rbp - 5], al	       131	curl_sasl.c	FUNCTION_2	FOR_1	IF_1
0x400025b	         0xfb645fb	               movzx eax, byte [rbp - 5]	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x400025f	           0xfb6c0	                           movzx eax, al	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x4000262	            0x89c7	                            mov edi, eax	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x4000264	      0xe800000000	                          call 0x4000269	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x4000269	            0x85c0	                           test eax, eax	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x400026b	            0x753d	                           jne 0x40002aa	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x400026d	         0xfb645fb	               movzx eax, byte [rbp - 5]	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x4000271	           0xfb6c0	                           movzx eax, al	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x4000274	            0x89c7	                            mov edi, eax	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x4000276	      0xe800000000	                          call 0x400027b	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x400027b	            0x85c0	                           test eax, eax	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x400027d	            0x752b	                           jne 0x40002aa	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x400027f	        0x807dfb2d	                cmp byte [rbp - 5], 0x2d	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x4000283	            0x7425	                            je 0x40002aa	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x4000285	        0x807dfb5f	                cmp byte [rbp - 5], 0x5f	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x4000289	            0x741f	                            je 0x40002aa	       132	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4	CALL_3
0x400028b	          0x8b55fc	                mov edx, dword [rbp - 4]	       133	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x400028e	          0x4889d0	                            mov rax, rdx	       133	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x4000291	          0x4801c0	                            add rax, rax	       133	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x4000294	          0x4801d0	                            add rax, rdx	       133	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x4000297	        0x48c1e003	                              shl rax, 3	       133	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x400029b	          0x4889c2	                            mov rdx, rax	       133	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x400029e	    0x488d05000000	                   lea rax, [0x040002a5]	       133	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x40002a5	          0x8b0402	              mov eax, dword [rdx + rax]	       133	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x40002a8	            0xeb30	                           jmp 0x40002da	       133	curl_sasl.c	FUNCTION_2	FOR_1	IF_1	IF_4
0x40002aa	        0x8345fc01	                  add dword [rbp - 4], 1	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x40002ae	          0x8b55fc	                mov edx, dword [rbp - 4]	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x40002b1	          0x4889d0	                            mov rax, rdx	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x40002b4	          0x4801c0	                            add rax, rax	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x40002b7	          0x4801d0	                            add rax, rdx	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x40002ba	        0x48c1e003	                              shl rax, 3	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x40002be	          0x4889c2	                            mov rdx, rax	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x40002c1	    0x488d05000000	                   lea rax, [0x040002c8]	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x40002c8	        0x488b0402	              mov rax, qword [rdx + rax]	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x40002cc	          0x4885c0	                           test rax, rax	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x40002cf	     0xf856bfeffff	                           jne 0x4000140	       122	curl_sasl.c	FUNCTION_2	FOR_1
0x40002d5	      0xb800000000	                              mov eax, 0	       137	curl_sasl.c	FUNCTION_2
0x40002da	              0xc9	                                   leave	       138	curl_sasl.c	FUNCTION_2
0x40002db	              0xc3	                                     ret	       138	curl_sasl.c	FUNCTION_2
Curl_sasl_cleanup	ELSE,0:CALL,2:SWITCH,0:WHILE,0:FOR,0:functions,0:DO,0:IF,2	7
0x4000112	              0x55	                                push rbp	        82	curl_sasl.c	FUNCTION_1
0x4000113	          0x4889e5	                            mov rbp, rsp	        82	curl_sasl.c	FUNCTION_1
0x4000116	        0x48897df8	                mov qword [rbp - 8], rdi	        82	curl_sasl.c	FUNCTION_1
0x400011a	          0x8975f4	              mov dword [rbp - 0xc], esi	        82	curl_sasl.c	FUNCTION_1
0x400011d	              0x90	                                     nop	       102	curl_sasl.c	FUNCTION_1
0x400011e	              0x5d	                                 pop rbp	       102	curl_sasl.c	FUNCTION_1
0x400011f	              0xc3	                                     ret	       102	curl_sasl.c	FUNCTION_1
Curl_sasl_start	ELSE,8:CALL,18:SWITCH,0:WHILE,0:FOR,0:functions,0:DO,0:IF,20	337
0x400047e	              0x55	                                push rbp	       256	curl_sasl.c	FUNCTION_7
0x400047f	          0x4889e5	                            mov rbp, rsp	       256	curl_sasl.c	FUNCTION_7
0x4000482	        0x4883ec70	                           sub rsp, 0x70	       256	curl_sasl.c	FUNCTION_7
0x4000486	        0x48897da8	             mov qword [rbp - 0x58], rdi	       256	curl_sasl.c	FUNCTION_7
0x400048a	        0x488975a0	             mov qword [rbp - 0x60], rsi	       256	curl_sasl.c	FUNCTION_7
0x400048e	            0x89d0	                            mov eax, edx	       256	curl_sasl.c	FUNCTION_7
0x4000490	        0x48894d90	             mov qword [rbp - 0x70], rcx	       256	curl_sasl.c	FUNCTION_7
0x4000494	          0x88459c	               mov byte [rbp - 0x64], al	       256	curl_sasl.c	FUNCTION_7
0x4000497	    0x64488b042528	                mov rax, qword fs:[0x28]	       256	curl_sasl.c	FUNCTION_7
0x40004a0	        0x488945f8	                mov qword [rbp - 8], rax	       256	curl_sasl.c	FUNCTION_7
0x40004a4	            0x31c0	                            xor eax, eax	       256	curl_sasl.c	FUNCTION_7
0x40004a6	    0xc745b8000000	               mov dword [rbp - 0x48], 0	       257	curl_sasl.c	FUNCTION_7
0x40004ad	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       258	curl_sasl.c	FUNCTION_7
0x40004b1	          0x488b00	                    mov rax, qword [rax]	       258	curl_sasl.c	FUNCTION_7
0x40004b4	        0x488945e0	             mov qword [rbp - 0x20], rax	       258	curl_sasl.c	FUNCTION_7
0x40004b8	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       260	curl_sasl.c	FUNCTION_7
0x40004c0	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       261	curl_sasl.c	FUNCTION_7
0x40004c8	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       262	curl_sasl.c	FUNCTION_7
0x40004d0	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       263	curl_sasl.c	FUNCTION_7
0x40004d7	    0xc745c0100000	           mov dword [rbp - 0x40], 0x10 	       264	curl_sasl.c	FUNCTION_7
0x40004de	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x40004e2	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x40004e8	          0x83f802	                              cmp eax, 2	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x40004eb	            0x7544	                           jne 0x4000531	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x40004ed	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x40004f1	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x40004f7	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x40004fa	           0xf95c0	                                setne al	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x40004fd	           0xfb6c0	                           movzx eax, al	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000500	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000504	          0x4863d0	                         movsxd rdx, eax	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000507	          0x4889d0	                            mov rax, rdx	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x400050a	          0x4801c0	                            add rax, rax	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x400050d	          0x4801d0	                            add rax, rdx	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000510	        0x48c1e002	                              shl rax, 2	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000514	          0x4801c8	                            add rax, rcx	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000517	    0x4805ac020000	                          add rax, 0x2ac	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x400051d	            0x8b00	                    mov eax, dword [rax]	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x400051f	          0x83f802	                              cmp eax, 2	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000522	            0x740d	                            je 0x4000531	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000524	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000528	    0x488b80600100	           mov rax, qword [rax + 0x160] 	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x400052f	            0xeb0b	                           jmp 0x400053c	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000531	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000535	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x400053c	        0x488945e8	             mov qword [rbp - 0x18], rax	       265	curl_sasl.c	FUNCTION_7	CALL_1
0x4000540	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000544	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x400054a	          0x83f802	                              cmp eax, 2	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x400054d	            0x7544	                           jne 0x4000593	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x400054f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000553	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000559	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x400055c	           0xf95c0	                                setne al	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x400055f	           0xfb6c0	                           movzx eax, al	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000562	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000566	          0x4863d0	                         movsxd rdx, eax	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000569	          0x4889d0	                            mov rax, rdx	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x400056c	          0x4801c0	                            add rax, rax	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x400056f	          0x4801d0	                            add rax, rdx	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000572	        0x48c1e002	                              shl rax, 2	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000576	          0x4801c8	                            add rax, rcx	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000579	    0x4805ac020000	                          add rax, 0x2ac	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x400057f	            0x8b00	                    mov eax, dword [rax]	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000581	          0x83f802	                              cmp eax, 2	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000584	            0x740d	                            je 0x4000593	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000586	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x400058a	    0x488b80900100	           mov rax, qword [rax + 0x190] 	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000591	            0xeb0c	                           jmp 0x400059f	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000593	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x4000597	    0x8b8098010000	           mov eax, dword [rax + 0x198] 	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x400059d	            0x4898	                                    cdqe	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x400059f	        0x488945f0	             mov qword [rbp - 0x10], rax	       267	curl_sasl.c	FUNCTION_7	CALL_2
0x40005a3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       274	curl_sasl.c	FUNCTION_7
0x40005a7	         0xfb6559c	            movzx edx, byte [rbp - 0x64]	       274	curl_sasl.c	FUNCTION_7
0x40005ab	          0x88501a	               mov byte [rax + 0x1a], dl	       274	curl_sasl.c	FUNCTION_7
0x40005ae	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       275	curl_sasl.c	FUNCTION_7
0x40005b2	    0xc74014000000	               mov dword [rax + 0x14], 0	       275	curl_sasl.c	FUNCTION_7
0x40005b9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       276	curl_sasl.c	FUNCTION_7
0x40005bd	          0x8b500c	              mov edx, dword [rax + 0xc]	       276	curl_sasl.c	FUNCTION_7
0x40005c0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       276	curl_sasl.c	FUNCTION_7
0x40005c4	          0x8b4010	            mov eax, dword [rax + 0x10] 	       276	curl_sasl.c	FUNCTION_7
0x40005c7	            0x21d0	                            and eax, edx	       276	curl_sasl.c	FUNCTION_7
0x40005c9	          0x8945c4	             mov dword [rbp - 0x3c], eax	       276	curl_sasl.c	FUNCTION_7
0x40005cc	        0x488b4590	             mov rax, qword [rbp - 0x70]	       277	curl_sasl.c	FUNCTION_7
0x40005d0	    0xc70000000000	                      mov dword [rax], 0	       277	curl_sasl.c	FUNCTION_7
0x40005d6	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       281	curl_sasl.c	FUNCTION_7	IF_1
0x40005d9	          0x83e020	                           and eax, 0x20	       281	curl_sasl.c	FUNCTION_7	IF_1
0x40005dc	            0x85c0	                           test eax, eax	       281	curl_sasl.c	FUNCTION_7	IF_1
0x40005de	            0x746f	                            je 0x400064f	       281	curl_sasl.c	FUNCTION_7	IF_1
0x40005e0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       281	curl_sasl.c	FUNCTION_7	IF_1
0x40005e4	    0x488b80180200	           mov rax, qword [rax + 0x218] 	       281	curl_sasl.c	FUNCTION_7	IF_1
0x40005eb	           0xfb600	                   movzx eax, byte [rax]	       281	curl_sasl.c	FUNCTION_7	IF_1
0x40005ee	            0x84c0	                             test al, al	       281	curl_sasl.c	FUNCTION_7	IF_1
0x40005f0	            0x755d	                           jne 0x400064f	       281	curl_sasl.c	FUNCTION_7	IF_1
0x40005f2	    0x488d05000000	                   lea rax, [0x040005f9]	       282	curl_sasl.c	FUNCTION_7	IF_1
0x40005f9	        0x488945d8	             mov qword [rbp - 0x28], rax	       282	curl_sasl.c	FUNCTION_7	IF_1
0x40005fd	    0xc745bc040000	               mov dword [rbp - 0x44], 4	       283	curl_sasl.c	FUNCTION_7	IF_1
0x4000604	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       284	curl_sasl.c	FUNCTION_7	IF_1
0x4000608	    0xc74014200000	           mov dword [rax + 0x14], 0x20 	       284	curl_sasl.c	FUNCTION_7	IF_1
0x400060f	        0x807d9c00	                cmp byte [rbp - 0x64], 0	       286	curl_sasl.c	FUNCTION_7	IF_1	IF_2
0x4000613	            0x7513	                           jne 0x4000628	       286	curl_sasl.c	FUNCTION_7	IF_1	IF_2
0x4000615	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       286	curl_sasl.c	FUNCTION_7	IF_1	IF_2
0x4000619	     0xfb680e80900	          movzx eax, byte [rax + 0x9e8] 	       286	curl_sasl.c	FUNCTION_7	IF_1	IF_2
0x4000620	            0x84c0	                             test al, al	       286	curl_sasl.c	FUNCTION_7	IF_1	IF_2
0x4000622	     0xf84bd020000	                            je 0x40008e5	       286	curl_sasl.c	FUNCTION_7	IF_1	IF_2
0x4000628	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       287	curl_sasl.c	FUNCTION_7	IF_1	IF_2	CALL_3
0x400062c	    0x488bb0100200	           mov rsi, qword [rax + 0x210] 	       287	curl_sasl.c	FUNCTION_7	IF_1	IF_2	CALL_3
0x4000633	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       287	curl_sasl.c	FUNCTION_7	IF_1	IF_2	CALL_3
0x4000637	        0x488d55c8	                   lea rdx, [rbp - 0x38]	       287	curl_sasl.c	FUNCTION_7	IF_1	IF_2	CALL_3
0x400063b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       287	curl_sasl.c	FUNCTION_7	IF_1	IF_2	CALL_3
0x400063f	          0x4889c7	                            mov rdi, rax	       287	curl_sasl.c	FUNCTION_7	IF_1	IF_2	CALL_3
0x4000642	      0xe800000000	                          call 0x4000647	       287	curl_sasl.c	FUNCTION_7	IF_1	IF_2	CALL_3
0x4000647	          0x8945b8	             mov dword [rbp - 0x48], eax	       287	curl_sasl.c	FUNCTION_7	IF_1	IF_2	CALL_3
0x400064a	      0xe996020000	                           jmp 0x40008e5	       286	curl_sasl.c	FUNCTION_7	IF_1	IF_2
0x400064f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       290	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3
0x4000653	     0xfb680580300	          movzx eax, byte [rax + 0x358] 	       290	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3
0x400065a	            0x84c0	                             test al, al	       290	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3
0x400065c	     0xf848a020000	                            je 0x40008ec	       290	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3
0x4000662	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       313	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x4000665	          0x83e008	                              and eax, 8	       313	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x4000668	            0x85c0	                           test eax, eax	       313	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x400066a	            0x742b	                            je 0x4000697	       313	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x400066c	      0xe800000000	                          call 0x4000671	       314	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6	CALL_7
0x4000671	            0x84c0	                             test al, al	       313	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x4000673	            0x7422	                            je 0x4000697	       313	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x4000675	    0x488d05000000	                   lea rax, [0x0400067c]	       315	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x400067c	        0x488945d8	             mov qword [rbp - 0x28], rax	       315	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x4000680	    0xc745bc060000	               mov dword [rbp - 0x44], 6	       316	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x4000687	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       317	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x400068b	    0xc74014080000	               mov dword [rax + 0x14], 8	       317	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x4000692	      0xe955020000	                           jmp 0x40008ec	       317	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_2	IF_6
0x4000697	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       319	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_7
0x400069a	          0x83e004	                              and eax, 4	       319	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_7
0x400069d	            0x85c0	                           test eax, eax	       319	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_7
0x400069f	            0x7422	                            je 0x40006c3	       319	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_7
0x40006a1	    0x488d05000000	                   lea rax, [0x040006a8]	       320	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_7
0x40006a8	        0x488945d8	             mov qword [rbp - 0x28], rax	       320	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_7
0x40006ac	    0xc745bc050000	               mov dword [rbp - 0x44], 5	       321	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_7
0x40006b3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       322	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_7
0x40006b7	    0xc74014040000	               mov dword [rax + 0x14], 4	       322	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_7
0x40006be	      0xe929020000	                           jmp 0x40008ec	       322	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_3	IF_7
0x40006c3	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       343	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40006c6	      0x2500010000	                          and eax, 0x100	       343	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40006cb	            0x85c0	                           test eax, eax	       343	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40006cd	     0xf8494000000	                            je 0x4000767	       343	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40006d3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       343	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40006d7	    0x488b80280200	           mov rax, qword [rax + 0x228] 	       343	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40006de	          0x4885c0	                           test rax, rax	       343	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40006e1	     0xf8480000000	                            je 0x4000767	       343	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40006e7	    0x488d05000000	                   lea rax, [0x040006ee]	       344	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40006ee	        0x488945d8	             mov qword [rbp - 0x28], rax	       344	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40006f2	    0xc745bc0d0000	            mov dword [rbp - 0x44], 0xd 	       345	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x40006f9	    0xc745c00e0000	            mov dword [rbp - 0x40], 0xe 	       346	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x4000700	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       347	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x4000704	    0xc74014000100	          mov dword [rax + 0x14], 0x100 	       347	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10
0x400070b	        0x807d9c00	                cmp byte [rbp - 0x64], 0	       349	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11
0x400070f	            0x7513	                           jne 0x4000724	       349	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11
0x4000711	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       349	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11
0x4000715	     0xfb680e80900	          movzx eax, byte [rax + 0x9e8] 	       349	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11
0x400071c	            0x84c0	                             test al, al	       349	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11
0x400071e	     0xf84c4010000	                            je 0x40008e8	       349	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11
0x4000724	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       353	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11
0x4000728	    0x4c8b80280200	            mov r8, qword [rax + 0x228] 	       353	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11
0x400072f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x4000733	    0x488bb0100200	           mov rsi, qword [rax + 0x210] 	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x400073a	        0x4c8d4dc8	                    lea r9, [rbp - 0x38]	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x400073e	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x4000742	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x4000746	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x400074a	        0x4883ec08	                              sub rsp, 8	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x400074e	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x4000752	              0x57	                                push rdi	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x4000753	          0x4889c7	                            mov rdi, rax	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x4000756	      0xe800000000	                          call 0x400075b	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x400075b	        0x4883c410	                           add rsp, 0x10	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x400075f	          0x8945b8	             mov dword [rbp - 0x48], eax	       350	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11	CALL_10
0x4000762	      0xe981010000	                           jmp 0x40008e8	       349	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11
0x4000767	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       356	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x400076a	      0x2580000000	                           and eax, 0x80	       356	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x400076f	            0x85c0	                           test eax, eax	       356	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x4000771	     0xf8495000000	                            je 0x400080c	       356	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x4000777	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       356	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x400077b	    0x488b80280200	           mov rax, qword [rax + 0x228] 	       356	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x4000782	          0x4885c0	                           test rax, rax	       356	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x4000785	     0xf8481000000	                            je 0x400080c	       356	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x400078b	    0x488d05000000	                   lea rax, [0x04000792]	       357	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x4000792	        0x488945d8	             mov qword [rbp - 0x28], rax	       357	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x4000796	    0xc745bc0d0000	            mov dword [rbp - 0x44], 0xd 	       358	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x400079d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       359	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x40007a1	    0xc74014800000	           mov dword [rax + 0x14], 0x80 	       359	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12
0x40007a8	        0x807d9c00	                cmp byte [rbp - 0x64], 0	       361	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13
0x40007ac	            0x7513	                           jne 0x40007c1	       361	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13
0x40007ae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       361	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13
0x40007b2	     0xfb680e80900	          movzx eax, byte [rax + 0x9e8] 	       361	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13
0x40007b9	            0x84c0	                             test al, al	       361	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13
0x40007bb	     0xf842a010000	                            je 0x40008eb	       361	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13
0x40007c1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       364	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13
0x40007c5	    0x488b88280200	           mov rcx, qword [rax + 0x228] 	       364	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13
0x40007cc	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40007d0	    0x488bb0100200	           mov rsi, qword [rax + 0x210] 	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40007d7	        0x488d7dc8	                   lea rdi, [rbp - 0x38]	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40007db	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40007df	        0x4883ec08	                              sub rsp, 8	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40007e3	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40007e7	              0x52	                                push rdx	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40007e8	          0x4989f9	                             mov r9, rdi	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40007eb	          0x4989c8	                             mov r8, rcx	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40007ee	      0xb900000000	                              mov ecx, 0	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40007f3	      0xba00000000	                              mov edx, 0	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40007f8	          0x4889c7	                            mov rdi, rax	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x40007fb	      0xe800000000	                          call 0x4000800	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x4000800	        0x4883c410	                           add rsp, 0x10	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x4000804	          0x8945b8	             mov dword [rbp - 0x48], eax	       362	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13	CALL_11
0x4000807	      0xe9df000000	                           jmp 0x40008eb	       361	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13
0x400080c	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       367	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14
0x400080f	          0x83e002	                              and eax, 2	       367	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14
0x4000812	            0x85c0	                           test eax, eax	       367	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14
0x4000814	            0x7468	                            je 0x400087e	       367	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14
0x4000816	    0x488d05000000	                   lea rax, [0x0400081d]	       368	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14
0x400081d	        0x488945d8	             mov qword [rbp - 0x28], rax	       368	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14
0x4000821	    0xc745bc010000	               mov dword [rbp - 0x44], 1	       369	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14
0x4000828	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       370	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14
0x400082c	    0xc74014020000	               mov dword [rax + 0x14], 2	       370	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14
0x4000833	        0x807d9c00	                cmp byte [rbp - 0x64], 0	       372	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15
0x4000837	            0x7513	                           jne 0x400084c	       372	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15
0x4000839	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       372	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15
0x400083d	     0xfb680e80900	          movzx eax, byte [rax + 0x9e8] 	       372	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15
0x4000844	            0x84c0	                             test al, al	       372	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15
0x4000846	     0xf84a0000000	                            je 0x40008ec	       372	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15
0x400084c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x4000850	    0x488b90180200	           mov rdx, qword [rax + 0x218] 	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x4000857	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x400085b	    0x488bb0100200	           mov rsi, qword [rax + 0x210] 	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x4000862	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x4000866	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x400086a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x400086e	          0x4989f8	                             mov r8, rdi	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x4000871	          0x4889c7	                            mov rdi, rax	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x4000874	      0xe800000000	                          call 0x4000879	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x4000879	          0x8945b8	             mov dword [rbp - 0x48], eax	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x400087c	            0xeb6e	                           jmp 0x40008ec	       373	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_7	IF_14	IF_15	CALL_12
0x400087e	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       376	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16
0x4000881	          0x83e001	                              and eax, 1	       376	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16
0x4000884	            0x85c0	                           test eax, eax	       376	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16
0x4000886	            0x7464	                            je 0x40008ec	       376	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16
0x4000888	    0x488d05000000	                   lea rax, [0x0400088f]	       377	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16
0x400088f	        0x488945d8	             mov qword [rbp - 0x28], rax	       377	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16
0x4000893	    0xc745bc020000	               mov dword [rbp - 0x44], 2	       378	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16
0x400089a	    0xc745c0030000	               mov dword [rbp - 0x40], 3	       379	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16
0x40008a1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       380	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16
0x40008a5	    0xc74014010000	               mov dword [rax + 0x14], 1	       380	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16
0x40008ac	        0x807d9c00	                cmp byte [rbp - 0x64], 0	       382	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	IF_17
0x40008b0	            0x750f	                           jne 0x40008c1	       382	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	IF_17
0x40008b2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       382	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	IF_17
0x40008b6	     0xfb680e80900	          movzx eax, byte [rax + 0x9e8] 	       382	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	IF_17
0x40008bd	            0x84c0	                             test al, al	       382	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	IF_17
0x40008bf	            0x742b	                            je 0x40008ec	       382	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	IF_17
0x40008c1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       383	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	CALL_13
0x40008c5	    0x488bb0100200	           mov rsi, qword [rax + 0x210] 	       383	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	CALL_13
0x40008cc	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       383	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	CALL_13
0x40008d0	        0x488d55c8	                   lea rdx, [rbp - 0x38]	       383	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	CALL_13
0x40008d4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       383	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	CALL_13
0x40008d8	          0x4889c7	                            mov rdi, rax	       383	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	CALL_13
0x40008db	      0xe800000000	                          call 0x40008e0	       383	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	CALL_13
0x40008e0	          0x8945b8	             mov dword [rbp - 0x48], eax	       383	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	CALL_13
0x40008e3	            0xeb07	                           jmp 0x40008ec	       383	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_8	IF_16	CALL_13
0x40008e5	              0x90	                                     nop	       286	curl_sasl.c	FUNCTION_7	IF_1	IF_2
0x40008e6	            0xeb04	                           jmp 0x40008ec	       286	curl_sasl.c	FUNCTION_7	IF_1	IF_2
0x40008e8	              0x90	                                     nop	       349	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11
0x40008e9	            0xeb01	                           jmp 0x40008ec	       349	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_5	IF_10	IF_11
0x40008eb	              0x90	                                     nop	       361	curl_sasl.c	FUNCTION_7	ELSE_1	IF_3	ELSE_6	IF_12	IF_13
0x40008ec	        0x837db800	               cmp dword [rbp - 0x48], 0	       387	curl_sasl.c	FUNCTION_7	IF_18
0x40008f0	     0xf85b7000000	                           jne 0x40009ad	       387	curl_sasl.c	FUNCTION_7	IF_18
0x40008f6	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       387	curl_sasl.c	FUNCTION_7	IF_18
0x40008fb	     0xf84ac000000	                            je 0x40009ad	       387	curl_sasl.c	FUNCTION_7	IF_18
0x4000901	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       388	curl_sasl.c	FUNCTION_7	IF_18	IF_19
0x4000905	          0x4885c0	                           test rax, rax	       388	curl_sasl.c	FUNCTION_7	IF_18	IF_19
0x4000908	            0x7451	                            je 0x400095b	       388	curl_sasl.c	FUNCTION_7	IF_18	IF_19
0x400090a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       388	curl_sasl.c	FUNCTION_7	IF_18	IF_19
0x400090e	          0x488b00	                    mov rax, qword [rax]	       388	curl_sasl.c	FUNCTION_7	IF_18	IF_19
0x4000911	        0x488b4010	            mov rax, qword [rax + 0x10] 	       388	curl_sasl.c	FUNCTION_7	IF_18	IF_19
0x4000915	          0x4885c0	                           test rax, rax	       388	curl_sasl.c	FUNCTION_7	IF_18	IF_19
0x4000918	            0x7441	                            je 0x400095b	       388	curl_sasl.c	FUNCTION_7	IF_18	IF_19
0x400091a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       389	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_14
0x400091e	          0x4889c7	                            mov rdi, rax	       389	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_14
0x4000921	      0xe800000000	                          call 0x4000926	       389	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_14
0x4000926	          0x4889c2	                            mov rdx, rax	       389	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_14
0x4000929	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       389	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_14
0x400092d	          0x4801c2	                            add rdx, rax	       389	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_14
0x4000930	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       389	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_14
0x4000934	          0x488b00	                    mov rax, qword [rax]	       389	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_14
0x4000937	        0x488b4010	            mov rax, qword [rax + 0x10] 	       389	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_14
0x400093b	          0x4839c2	                            cmp rdx, rax	       388	curl_sasl.c	FUNCTION_7	IF_18	IF_19
0x400093e	            0x761b	                           jbe 0x400095b	       388	curl_sasl.c	FUNCTION_7	IF_18	IF_19
0x4000940	    0x488b05000000	            mov rax, qword [0x04000947] 	       390	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_15
0x4000947	          0x488b00	                    mov rax, qword [rax]	       390	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_15
0x400094a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       390	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_15
0x400094e	          0x4889d7	                            mov rdi, rdx	       390	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_15
0x4000951	            0xffd0	                                call rax	       390	curl_sasl.c	FUNCTION_7	IF_18	IF_19	CALL_15
0x4000953	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       391	curl_sasl.c	FUNCTION_7	IF_18	IF_19
0x400095b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       394	curl_sasl.c	FUNCTION_7	IF_18	CALL_16
0x400095f	          0x488b00	                    mov rax, qword [rax]	       394	curl_sasl.c	FUNCTION_7	IF_18	CALL_16
0x4000962	        0x488b4018	            mov rax, qword [rax + 0x18] 	       394	curl_sasl.c	FUNCTION_7	IF_18	CALL_16
0x4000966	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       394	curl_sasl.c	FUNCTION_7	IF_18	CALL_16
0x400096a	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       394	curl_sasl.c	FUNCTION_7	IF_18	CALL_16
0x400096e	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       394	curl_sasl.c	FUNCTION_7	IF_18	CALL_16
0x4000972	          0x4889cf	                            mov rdi, rcx	       394	curl_sasl.c	FUNCTION_7	IF_18	CALL_16
0x4000975	            0xffd0	                                call rax	       394	curl_sasl.c	FUNCTION_7	IF_18	CALL_16
0x4000977	          0x8945b8	             mov dword [rbp - 0x48], eax	       394	curl_sasl.c	FUNCTION_7	IF_18	CALL_16
0x400097a	        0x837db800	               cmp dword [rbp - 0x48], 0	       395	curl_sasl.c	FUNCTION_7	IF_18	IF_20
0x400097e	            0x752d	                           jne 0x40009ad	       395	curl_sasl.c	FUNCTION_7	IF_18	IF_20
0x4000980	        0x488b4590	             mov rax, qword [rbp - 0x70]	       396	curl_sasl.c	FUNCTION_7	IF_18	IF_20
0x4000984	    0xc70001000000	                      mov dword [rax], 1	       396	curl_sasl.c	FUNCTION_7	IF_18	IF_20
0x400098a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       397	curl_sasl.c	FUNCTION_7	IF_18	IF_20	CALL_17
0x400098e	          0x4885c0	                           test rax, rax	       397	curl_sasl.c	FUNCTION_7	IF_18	IF_20	CALL_17
0x4000991	            0x7405	                            je 0x4000998	       397	curl_sasl.c	FUNCTION_7	IF_18	IF_20	CALL_17
0x4000993	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       397	curl_sasl.c	FUNCTION_7	IF_18	IF_20	CALL_17
0x4000996	            0xeb03	                           jmp 0x400099b	       397	curl_sasl.c	FUNCTION_7	IF_18	IF_20	CALL_17
0x4000998	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       397	curl_sasl.c	FUNCTION_7	IF_18	IF_20	CALL_17
0x400099b	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	       397	curl_sasl.c	FUNCTION_7	IF_18	IF_20	CALL_17
0x400099f	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       397	curl_sasl.c	FUNCTION_7	IF_18	IF_20	CALL_17
0x40009a3	            0x89c2	                            mov edx, eax	       397	curl_sasl.c	FUNCTION_7	IF_18	IF_20	CALL_17
0x40009a5	          0x4889cf	                            mov rdi, rcx	       397	curl_sasl.c	FUNCTION_7	IF_18	IF_20	CALL_17
0x40009a8	      0xe86efaffff	                          call sym.state	       397	curl_sasl.c	FUNCTION_7	IF_18	IF_20	CALL_17
0x40009ad	    0x488b05000000	            mov rax, qword [0x040009b4] 	       401	curl_sasl.c	FUNCTION_7	CALL_18
0x40009b4	          0x488b00	                    mov rax, qword [rax]	       401	curl_sasl.c	FUNCTION_7	CALL_18
0x40009b7	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       401	curl_sasl.c	FUNCTION_7	CALL_18
0x40009bb	          0x4889d7	                            mov rdi, rdx	       401	curl_sasl.c	FUNCTION_7	CALL_18
0x40009be	            0xffd0	                                call rax	       401	curl_sasl.c	FUNCTION_7	CALL_18
0x40009c0	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       403	curl_sasl.c	FUNCTION_7
0x40009c3	        0x488b7df8	                mov rdi, qword [rbp - 8]	       404	curl_sasl.c	FUNCTION_7
0x40009c7	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       404	curl_sasl.c	FUNCTION_7
0x40009d0	            0x7405	                            je 0x40009d7	       404	curl_sasl.c	FUNCTION_7
0x40009d2	      0xe800000000	                          call 0x40009d7	       404	curl_sasl.c	FUNCTION_7
0x40009d7	              0xc9	                                   leave	       404	curl_sasl.c	FUNCTION_7
0x40009d8	              0xc3	                                     ret	       404	curl_sasl.c	FUNCTION_7
Curl_sasl_init	ELSE,0:CALL,0:SWITCH,0:WHILE,0:FOR,0:functions,0:DO,0:IF,0	24
0x40003bd	              0x55	                                push rbp	       179	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003be	          0x4889e5	                            mov rbp, rsp	       179	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003c1	        0x48897df8	                mov qword [rbp - 8], rdi	       179	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003c5	        0x488975f0	             mov qword [rbp - 0x10], rsi	       179	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003c9	        0x488b45f8	                mov rax, qword [rbp - 8]	       180	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003cd	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       180	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003d1	          0x488910	                    mov qword [rax], rdx	       180	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003d4	        0x488b45f8	                mov rax, qword [rbp - 8]	       181	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003d8	    0xc74008000000	                  mov dword [rax + 8], 0	       181	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003df	        0x488b45f8	                mov rax, qword [rbp - 8]	       182	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003e3	    0xc7400c000000	                mov dword [rax + 0xc], 0	       182	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003ea	        0x488b45f8	                mov rax, qword [rbp - 8]	       183	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003ee	    0xc74010dfffff	     mov dword [rax + 0x10], 0xffffffdf 	       183	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003f5	        0x488b45f8	                mov rax, qword [rbp - 8]	       184	curl_sasl.c	ELSE_2	FUNCTION_4
0x40003f9	    0xc74014000000	               mov dword [rax + 0x14], 0	       184	curl_sasl.c	ELSE_2	FUNCTION_4
0x4000400	        0x488b45f8	                mov rax, qword [rbp - 8]	       185	curl_sasl.c	ELSE_2	FUNCTION_4
0x4000404	        0xc6401801	                mov byte [rax + 0x18], 1	       185	curl_sasl.c	ELSE_2	FUNCTION_4
0x4000408	        0x488b45f8	                mov rax, qword [rbp - 8]	       186	curl_sasl.c	ELSE_2	FUNCTION_4
0x400040c	        0xc6401900	                mov byte [rax + 0x19], 0	       186	curl_sasl.c	ELSE_2	FUNCTION_4
0x4000410	        0x488b45f8	                mov rax, qword [rbp - 8]	       187	curl_sasl.c	ELSE_2	FUNCTION_4
0x4000414	        0xc6401a00	                mov byte [rax + 0x1a], 0	       187	curl_sasl.c	ELSE_2	FUNCTION_4
0x4000418	              0x90	                                     nop	       188	curl_sasl.c	ELSE_2	FUNCTION_4
0x4000419	              0x5d	                                 pop rbp	       188	curl_sasl.c	ELSE_2	FUNCTION_4
0x400041a	              0xc3	                                     ret	       188	curl_sasl.c	ELSE_2	FUNCTION_4
state	ELSE,0:CALL,1:SWITCH,0:WHILE,0:FOR,0:functions,0:DO,0:IF,1	11
0x400041b	              0x55	                                push rbp	       197	curl_sasl.c	FUNCTION_5
0x400041c	          0x4889e5	                            mov rbp, rsp	       197	curl_sasl.c	FUNCTION_5
0x400041f	        0x48897df8	                mov qword [rbp - 8], rdi	       197	curl_sasl.c	FUNCTION_5
0x4000423	        0x488975f0	             mov qword [rbp - 0x10], rsi	       197	curl_sasl.c	FUNCTION_5
0x4000427	          0x8955ec	             mov dword [rbp - 0x14], edx	       197	curl_sasl.c	FUNCTION_5
0x400042a	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	curl_sasl.c	FUNCTION_5
0x400042e	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       228	curl_sasl.c	FUNCTION_5
0x4000431	          0x895008	                mov dword [rax + 8], edx	       228	curl_sasl.c	FUNCTION_5
0x4000434	              0x90	                                     nop	       229	curl_sasl.c	FUNCTION_5
0x4000435	              0x5d	                                 pop rbp	       229	curl_sasl.c	FUNCTION_5
0x4000436	              0xc3	                                     ret	       229	curl_sasl.c	FUNCTION_5
Curl_sasl_parse_url_auth_option	ELSE,2:CALL,2:SWITCH,0:WHILE,0:FOR,0:functions,0:DO,0:IF,4	59
0x40002dc	              0x55	                                push rbp	       147	curl_sasl.c	FUNCTION_3
0x40002dd	          0x4889e5	                            mov rbp, rsp	       147	curl_sasl.c	FUNCTION_3
0x40002e0	        0x4883ec40	                           sub rsp, 0x40	       147	curl_sasl.c	FUNCTION_3
0x40002e4	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       147	curl_sasl.c	FUNCTION_3
0x40002e8	        0x488975d0	             mov qword [rbp - 0x30], rsi	       147	curl_sasl.c	FUNCTION_3
0x40002ec	        0x488955c8	             mov qword [rbp - 0x38], rdx	       147	curl_sasl.c	FUNCTION_3
0x40002f0	    0x64488b042528	                mov rax, qword fs:[0x28]	       147	curl_sasl.c	FUNCTION_3
0x40002f9	        0x488945f8	                mov qword [rbp - 8], rax	       147	curl_sasl.c	FUNCTION_3
0x40002fd	            0x31c0	                            xor eax, eax	       147	curl_sasl.c	FUNCTION_3
0x40002ff	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       148	curl_sasl.c	FUNCTION_3
0x4000306	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       152	curl_sasl.c	FUNCTION_3	IF_1
0x400030b	            0x750a	                           jne 0x4000317	       152	curl_sasl.c	FUNCTION_3	IF_1
0x400030d	      0xb803000000	                              mov eax, 3	       153	curl_sasl.c	FUNCTION_3	IF_1
0x4000312	      0xe990000000	                           jmp 0x40003a7	       153	curl_sasl.c	FUNCTION_3	IF_1
0x4000317	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       155	curl_sasl.c	FUNCTION_3	IF_2
0x400031b	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       155	curl_sasl.c	FUNCTION_3	IF_2
0x400031f	            0x84c0	                             test al, al	       155	curl_sasl.c	FUNCTION_3	IF_2
0x4000321	            0x7413	                            je 0x4000336	       155	curl_sasl.c	FUNCTION_3	IF_2
0x4000323	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       156	curl_sasl.c	FUNCTION_3	IF_2
0x4000327	        0xc6401800	                mov byte [rax + 0x18], 0	       156	curl_sasl.c	FUNCTION_3	IF_2
0x400032b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       157	curl_sasl.c	FUNCTION_3	IF_2
0x400032f	    0xc74010000000	               mov dword [rax + 0x10], 0	       157	curl_sasl.c	FUNCTION_3	IF_2
0x4000336	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       160	curl_sasl.c	FUNCTION_3	IF_3	CALL_1
0x400033a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       160	curl_sasl.c	FUNCTION_3	IF_3	CALL_1
0x400033e	    0x488d35000000	                   lea rsi, [0x04000345]	       160	curl_sasl.c	FUNCTION_3	IF_3	CALL_1
0x4000345	          0x4889c7	                            mov rdi, rax	       160	curl_sasl.c	FUNCTION_3	IF_3	CALL_1
0x4000348	      0xe800000000	                          call 0x400034d	       160	curl_sasl.c	FUNCTION_3	IF_3	CALL_1
0x400034d	            0x85c0	                           test eax, eax	       160	curl_sasl.c	FUNCTION_3	IF_3	CALL_1
0x400034f	            0x750d	                           jne 0x400035e	       160	curl_sasl.c	FUNCTION_3	IF_3	CALL_1
0x4000351	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       161	curl_sasl.c	FUNCTION_3	IF_3
0x4000355	    0xc74010dfffff	     mov dword [rax + 0x10], 0xffffffdf 	       161	curl_sasl.c	FUNCTION_3	IF_3
0x400035c	            0xeb46	                           jmp 0x40003a4	       161	curl_sasl.c	FUNCTION_3	IF_3
0x400035e	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       163	curl_sasl.c	FUNCTION_3	ELSE_1	CALL_2
0x4000362	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       163	curl_sasl.c	FUNCTION_3	ELSE_1	CALL_2
0x4000366	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       163	curl_sasl.c	FUNCTION_3	ELSE_1	CALL_2
0x400036a	          0x4889ce	                            mov rsi, rcx	       163	curl_sasl.c	FUNCTION_3	ELSE_1	CALL_2
0x400036d	          0x4889c7	                            mov rdi, rax	       163	curl_sasl.c	FUNCTION_3	ELSE_1	CALL_2
0x4000370	      0xe800000000	                          call 0x4000375	       163	curl_sasl.c	FUNCTION_3	ELSE_1	CALL_2
0x4000375	          0x8945ec	             mov dword [rbp - 0x14], eax	       163	curl_sasl.c	FUNCTION_3	ELSE_1	CALL_2
0x4000378	        0x837dec00	               cmp dword [rbp - 0x14], 0	       164	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x400037c	            0x741f	                            je 0x400039d	       164	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x400037e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       164	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x4000382	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       164	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x4000386	            0x7515	                           jne 0x400039d	       164	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x4000388	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       165	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x400038c	          0x8b4010	            mov eax, dword [rax + 0x10] 	       165	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x400038f	           0xb45ec	              or eax, dword [rbp - 0x14]	       165	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x4000392	            0x89c2	                            mov edx, eax	       165	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x4000394	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       165	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x4000398	          0x895010	             mov dword [rax + 0x10], edx	       165	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x400039b	            0xeb07	                           jmp 0x40003a4	       165	curl_sasl.c	FUNCTION_3	ELSE_1	IF_4
0x400039d	    0xc745e8030000	               mov dword [rbp - 0x18], 3	       167	curl_sasl.c	FUNCTION_3	ELSE_1	ELSE_2
0x40003a4	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       170	curl_sasl.c	FUNCTION_3	ELSE_2
0x40003a7	        0x488b4df8	                mov rcx, qword [rbp - 8]	       171	curl_sasl.c	FUNCTION_3	ELSE_2
0x40003ab	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       171	curl_sasl.c	FUNCTION_3	ELSE_2
0x40003b4	            0x7405	                            je 0x40003bb	       171	curl_sasl.c	FUNCTION_3	ELSE_2
0x40003b6	      0xe800000000	                          call 0x40003bb	       171	curl_sasl.c	FUNCTION_3	ELSE_2
0x40003bb	              0xc9	                                   leave	       171	curl_sasl.c	FUNCTION_3	ELSE_2
0x40003bc	              0xc3	                                     ret	       171	curl_sasl.c	FUNCTION_3	ELSE_2
Curl_sasl_continue	ELSE,4:CALL,36:SWITCH,2:WHILE,0:FOR,0:functions,0:DO,0:IF,12	417
0x40009d9	              0x55	                                push rbp	       413	curl_sasl.c	FUNCTION_8
0x40009da	          0x4889e5	                            mov rbp, rsp	       413	curl_sasl.c	FUNCTION_8
0x40009dd	        0x4883c480	             add rsp, 0xffffffffffffff80	       413	curl_sasl.c	FUNCTION_8
0x40009e1	        0x48897d98	             mov qword [rbp - 0x68], rdi	       413	curl_sasl.c	FUNCTION_8
0x40009e5	        0x48897590	             mov qword [rbp - 0x70], rsi	       413	curl_sasl.c	FUNCTION_8
0x40009e9	          0x89558c	             mov dword [rbp - 0x74], edx	       413	curl_sasl.c	FUNCTION_8
0x40009ec	        0x48894d80	             mov qword [rbp - 0x80], rcx	       413	curl_sasl.c	FUNCTION_8
0x40009f0	    0x64488b042528	                mov rax, qword fs:[0x28]	       413	curl_sasl.c	FUNCTION_8
0x40009f9	        0x488945f8	                mov qword [rbp - 8], rax	       413	curl_sasl.c	FUNCTION_8
0x40009fd	            0x31c0	                            xor eax, eax	       413	curl_sasl.c	FUNCTION_8
0x40009ff	    0xc745a8000000	               mov dword [rbp - 0x58], 0	       414	curl_sasl.c	FUNCTION_8
0x4000a06	        0x488b4590	             mov rax, qword [rbp - 0x70]	       415	curl_sasl.c	FUNCTION_8
0x4000a0a	          0x488b00	                    mov rax, qword [rax]	       415	curl_sasl.c	FUNCTION_8
0x4000a0d	        0x488945d8	             mov qword [rbp - 0x28], rax	       415	curl_sasl.c	FUNCTION_8
0x4000a11	    0xc745ac100000	           mov dword [rbp - 0x54], 0x10 	       416	curl_sasl.c	FUNCTION_8
0x4000a18	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       417	curl_sasl.c	FUNCTION_8
0x4000a20	        0x488b4590	             mov rax, qword [rbp - 0x70]	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a24	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a2a	          0x83f802	                              cmp eax, 2	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a2d	            0x7544	                           jne 0x4000a73	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a2f	        0x488b4590	             mov rax, qword [rbp - 0x70]	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a33	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a39	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a3c	           0xf95c0	                                setne al	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a3f	           0xfb6c0	                           movzx eax, al	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a42	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a46	          0x4863d0	                         movsxd rdx, eax	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a49	          0x4889d0	                            mov rax, rdx	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a4c	          0x4801c0	                            add rax, rax	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a4f	          0x4801d0	                            add rax, rdx	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a52	        0x48c1e002	                              shl rax, 2	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a56	          0x4801c8	                            add rax, rcx	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a59	    0x4805ac020000	                          add rax, 0x2ac	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a5f	            0x8b00	                    mov eax, dword [rax]	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a61	          0x83f802	                              cmp eax, 2	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a64	            0x740d	                            je 0x4000a73	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a66	        0x488b4590	             mov rax, qword [rbp - 0x70]	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a6a	    0x488b80600100	           mov rax, qword [rax + 0x160] 	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a71	            0xeb0b	                           jmp 0x4000a7e	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a73	        0x488b4590	             mov rax, qword [rbp - 0x70]	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a77	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a7e	        0x488945e0	             mov qword [rbp - 0x20], rax	       418	curl_sasl.c	FUNCTION_8	CALL_1
0x4000a82	        0x488b4590	             mov rax, qword [rbp - 0x70]	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000a86	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000a8c	          0x83f802	                              cmp eax, 2	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000a8f	            0x7544	                           jne 0x4000ad5	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000a91	        0x488b4590	             mov rax, qword [rbp - 0x70]	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000a95	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000a9b	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000a9e	           0xf95c0	                                setne al	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000aa1	           0xfb6c0	                           movzx eax, al	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000aa4	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000aa8	          0x4863d0	                         movsxd rdx, eax	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000aab	          0x4889d0	                            mov rax, rdx	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000aae	          0x4801c0	                            add rax, rax	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000ab1	          0x4801d0	                            add rax, rdx	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000ab4	        0x48c1e002	                              shl rax, 2	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000ab8	          0x4801c8	                            add rax, rcx	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000abb	    0x4805ac020000	                          add rax, 0x2ac	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000ac1	            0x8b00	                    mov eax, dword [rax]	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000ac3	          0x83f802	                              cmp eax, 2	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000ac6	            0x740d	                            je 0x4000ad5	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000ac8	        0x488b4590	             mov rax, qword [rbp - 0x70]	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000acc	    0x488b80900100	           mov rax, qword [rax + 0x190] 	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000ad3	            0xeb0c	                           jmp 0x4000ae1	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000ad5	        0x488b4590	             mov rax, qword [rbp - 0x70]	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000ad9	    0x8b8098010000	           mov eax, dword [rax + 0x198] 	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000adf	            0x4898	                                    cdqe	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000ae1	        0x488945e8	             mov qword [rbp - 0x18], rax	       420	curl_sasl.c	FUNCTION_8	CALL_2
0x4000ae5	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       422	curl_sasl.c	FUNCTION_8
0x4000aed	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       423	curl_sasl.c	FUNCTION_8
0x4000af5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       427	curl_sasl.c	FUNCTION_8
0x4000af9	    0x488b80880900	           mov rax, qword [rax + 0x988] 	       427	curl_sasl.c	FUNCTION_8
0x4000b00	          0x4885c0	                           test rax, rax	       428	curl_sasl.c	FUNCTION_8
0x4000b03	            0x740d	                            je 0x4000b12	       428	curl_sasl.c	FUNCTION_8
0x4000b05	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       428	curl_sasl.c	FUNCTION_8
0x4000b09	    0x488b80880900	           mov rax, qword [rax + 0x988] 	       428	curl_sasl.c	FUNCTION_8
0x4000b10	            0xeb0a	                           jmp 0x4000b1c	       428	curl_sasl.c	FUNCTION_8
0x4000b12	        0x488b4598	             mov rax, qword [rbp - 0x68]	       429	curl_sasl.c	FUNCTION_8
0x4000b16	          0x488b00	                    mov rax, qword [rax]	       429	curl_sasl.c	FUNCTION_8
0x4000b19	          0x488b00	                    mov rax, qword [rax]	       428	curl_sasl.c	FUNCTION_8
0x4000b1c	        0x488945f0	             mov qword [rbp - 0x10], rax	       427	curl_sasl.c	FUNCTION_8
0x4000b20	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       432	curl_sasl.c	FUNCTION_8
0x4000b28	        0x488b4580	             mov rax, qword [rbp - 0x80]	       434	curl_sasl.c	FUNCTION_8
0x4000b2c	    0xc70001000000	                      mov dword [rax], 1	       434	curl_sasl.c	FUNCTION_8
0x4000b32	        0x488b4598	             mov rax, qword [rbp - 0x68]	       436	curl_sasl.c	FUNCTION_8	IF_1
0x4000b36	          0x8b4008	                mov eax, dword [rax + 8]	       436	curl_sasl.c	FUNCTION_8	IF_1
0x4000b39	          0x83f810	                           cmp eax, 0x10	       436	curl_sasl.c	FUNCTION_8	IF_1
0x4000b3c	            0x7540	                           jne 0x4000b7e	       436	curl_sasl.c	FUNCTION_8	IF_1
0x4000b3e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       437	curl_sasl.c	FUNCTION_8	IF_1	IF_2
0x4000b42	          0x488b00	                    mov rax, qword [rax]	       437	curl_sasl.c	FUNCTION_8	IF_1	IF_2
0x4000b45	          0x8b400c	              mov eax, dword [rax + 0xc]	       437	curl_sasl.c	FUNCTION_8	IF_1	IF_2
0x4000b48	          0x3b458c	             cmp eax, dword [rbp - 0x74]	       437	curl_sasl.c	FUNCTION_8	IF_1	IF_2
0x4000b4b	            0x7407	                            je 0x4000b54	       437	curl_sasl.c	FUNCTION_8	IF_1	IF_2
0x4000b4d	    0xc745a8430000	           mov dword [rbp - 0x58], 0x43 	       438	curl_sasl.c	FUNCTION_8	IF_1	IF_2
0x4000b54	        0x488b4580	             mov rax, qword [rbp - 0x80]	       439	curl_sasl.c	FUNCTION_8	IF_1
0x4000b58	    0xc70002000000	                      mov dword [rax], 2	       439	curl_sasl.c	FUNCTION_8	IF_1
0x4000b5e	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	       440	curl_sasl.c	FUNCTION_8	IF_1	CALL_3
0x4000b62	        0x488b4598	             mov rax, qword [rbp - 0x68]	       440	curl_sasl.c	FUNCTION_8	IF_1	CALL_3
0x4000b66	      0xba00000000	                              mov edx, 0	       440	curl_sasl.c	FUNCTION_8	IF_1	CALL_3
0x4000b6b	          0x4889ce	                            mov rsi, rcx	       440	curl_sasl.c	FUNCTION_8	IF_1	CALL_3
0x4000b6e	          0x4889c7	                            mov rdi, rax	       440	curl_sasl.c	FUNCTION_8	IF_1	CALL_3
0x4000b71	      0xe8a5f8ffff	                          call sym.state	       440	curl_sasl.c	FUNCTION_8	IF_1	CALL_3
0x4000b76	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       441	curl_sasl.c	FUNCTION_8	IF_1
0x4000b79	      0xe9c3040000	                           jmp 0x4001041	       441	curl_sasl.c	FUNCTION_8	IF_1
0x4000b7e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       444	curl_sasl.c	FUNCTION_8	IF_3
0x4000b82	          0x8b4008	                mov eax, dword [rax + 8]	       444	curl_sasl.c	FUNCTION_8	IF_3
0x4000b85	          0x83f80f	                            cmp eax, 0xf	       444	curl_sasl.c	FUNCTION_8	IF_3
0x4000b88	            0x7447	                            je 0x4000bd1	       444	curl_sasl.c	FUNCTION_8	IF_3
0x4000b8a	        0x488b4598	             mov rax, qword [rbp - 0x68]	       444	curl_sasl.c	FUNCTION_8	IF_3
0x4000b8e	          0x8b4008	                mov eax, dword [rax + 8]	       444	curl_sasl.c	FUNCTION_8	IF_3
0x4000b91	          0x83f80e	                            cmp eax, 0xe	       444	curl_sasl.c	FUNCTION_8	IF_3
0x4000b94	            0x743b	                            je 0x4000bd1	       444	curl_sasl.c	FUNCTION_8	IF_3
0x4000b96	        0x488b4598	             mov rax, qword [rbp - 0x68]	       445	curl_sasl.c	FUNCTION_8	IF_3
0x4000b9a	          0x488b00	                    mov rax, qword [rax]	       445	curl_sasl.c	FUNCTION_8	IF_3
0x4000b9d	          0x8b4008	                mov eax, dword [rax + 8]	       445	curl_sasl.c	FUNCTION_8	IF_3
0x4000ba0	          0x3b458c	             cmp eax, dword [rbp - 0x74]	       444	curl_sasl.c	FUNCTION_8	IF_3
0x4000ba3	            0x742c	                            je 0x4000bd1	       444	curl_sasl.c	FUNCTION_8	IF_3
0x4000ba5	        0x488b4580	             mov rax, qword [rbp - 0x80]	       446	curl_sasl.c	FUNCTION_8	IF_3
0x4000ba9	    0xc70002000000	                      mov dword [rax], 2	       446	curl_sasl.c	FUNCTION_8	IF_3
0x4000baf	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	       447	curl_sasl.c	FUNCTION_8	IF_3	CALL_4
0x4000bb3	        0x488b4598	             mov rax, qword [rbp - 0x68]	       447	curl_sasl.c	FUNCTION_8	IF_3	CALL_4
0x4000bb7	      0xba00000000	                              mov edx, 0	       447	curl_sasl.c	FUNCTION_8	IF_3	CALL_4
0x4000bbc	          0x4889ce	                            mov rsi, rcx	       447	curl_sasl.c	FUNCTION_8	IF_3	CALL_4
0x4000bbf	          0x4889c7	                            mov rdi, rax	       447	curl_sasl.c	FUNCTION_8	IF_3	CALL_4
0x4000bc2	      0xe854f8ffff	                          call sym.state	       447	curl_sasl.c	FUNCTION_8	IF_3	CALL_4
0x4000bc7	      0xb843000000	                           mov eax, 0x43	       448	curl_sasl.c	FUNCTION_8	IF_3
0x4000bcc	      0xe970040000	                           jmp 0x4001041	       448	curl_sasl.c	FUNCTION_8	IF_3
0x4000bd1	        0x488b4598	             mov rax, qword [rbp - 0x68]	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000bd5	          0x8b4008	                mov eax, dword [rax + 8]	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000bd8	          0x83f80f	                            cmp eax, 0xf	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000bdb	     0xf879f030000	                            ja 0x4000f80	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000be1	            0x89c0	                            mov eax, eax	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000be3	    0x488d14850000	                        lea rdx, [rax*4]	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000beb	    0x488d05000000	                   lea rax, [0x04000bf2]	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000bf2	          0x8b0402	              mov eax, dword [rdx + rax]	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000bf5	          0x4863d0	                         movsxd rdx, eax	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000bf8	    0x488d05000000	                   lea rax, [0x04000bff]	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000bff	          0x4801d0	                            add rax, rdx	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000c02	            0xffe0	                                 jmp rax	       451	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000c04	        0x488b4580	             mov rax, qword [rbp - 0x80]	       453	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000c08	    0xc70002000000	                      mov dword [rax], 2	       453	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000c0e	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       454	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000c11	      0xe92b040000	                           jmp 0x4001041	       454	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000c16	        0x488b4590	             mov rax, qword [rbp - 0x70]	       456	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000c1a	    0x488b90180200	           mov rdx, qword [rax + 0x218] 	       456	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000c21	        0x488b4590	             mov rax, qword [rbp - 0x70]	       456	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000c25	    0x488bb0100200	           mov rsi, qword [rax + 0x210] 	       456	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000c2c	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	       456	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000c30	        0x488d4db0	                   lea rcx, [rbp - 0x50]	       456	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000c34	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       456	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000c38	          0x4989f8	                             mov r8, rdi	       456	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000c3b	          0x4889c7	                            mov rdi, rax	       456	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000c3e	      0xe800000000	                          call 0x4000c43	       456	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000c43	          0x8945a8	             mov dword [rbp - 0x58], eax	       456	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_5
0x4000c46	      0xe95a030000	                           jmp 0x4000fa5	       459	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000c4b	        0x488b4590	             mov rax, qword [rbp - 0x70]	       461	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_6
0x4000c4f	    0x488bb0100200	           mov rsi, qword [rax + 0x210] 	       461	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_6
0x4000c56	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       461	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_6
0x4000c5a	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       461	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_6
0x4000c5e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       461	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_6
0x4000c62	          0x4889c7	                            mov rdi, rax	       461	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_6
0x4000c65	      0xe800000000	                          call 0x4000c6a	       461	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_6
0x4000c6a	          0x8945a8	             mov dword [rbp - 0x58], eax	       461	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_6
0x4000c6d	    0xc745ac030000	               mov dword [rbp - 0x54], 3	       462	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000c74	      0xe92c030000	                           jmp 0x4000fa5	       463	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000c79	        0x488b4590	             mov rax, qword [rbp - 0x70]	       465	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_7
0x4000c7d	    0x488bb0180200	           mov rsi, qword [rax + 0x218] 	       465	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_7
0x4000c84	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       465	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_7
0x4000c88	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       465	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_7
0x4000c8c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       465	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_7
0x4000c90	          0x4889c7	                            mov rdi, rax	       465	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_7
0x4000c93	      0xe800000000	                          call 0x4000c98	       465	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_7
0x4000c98	          0x8945a8	             mov dword [rbp - 0x58], eax	       465	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_7
0x4000c9b	      0xe905030000	                           jmp 0x4000fa5	       466	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000ca0	        0x488b4590	             mov rax, qword [rbp - 0x70]	       468	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_8
0x4000ca4	    0x488bb0100200	           mov rsi, qword [rax + 0x210] 	       468	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_8
0x4000cab	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       468	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_8
0x4000caf	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       468	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_8
0x4000cb3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       468	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_8
0x4000cb7	          0x4889c7	                            mov rdi, rax	       468	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_8
0x4000cba	      0xe800000000	                          call 0x4000cbf	       468	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_8
0x4000cbf	          0x8945a8	             mov dword [rbp - 0x58], eax	       468	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_8
0x4000cc2	      0xe9de020000	                           jmp 0x4000fa5	       469	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000cc7	        0x488b4598	             mov rax, qword [rbp - 0x68]	       473	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_9
0x4000ccb	          0x488b00	                    mov rax, qword [rax]	       473	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_9
0x4000cce	        0x488b4028	            mov rax, qword [rax + 0x28] 	       473	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_9
0x4000cd2	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       473	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_9
0x4000cd6	    0x488b92a80c00	           mov rdx, qword [rdx + 0xca8] 	       473	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_9
0x4000cdd	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	       473	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_9
0x4000ce1	          0x4889ce	                            mov rsi, rcx	       473	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_9
0x4000ce4	          0x4889d7	                            mov rdi, rdx	       473	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_9
0x4000ce7	            0xffd0	                                call rax	       473	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_9
0x4000ce9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       474	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_10
0x4000ced	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       474	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_10
0x4000cf1	        0x488d4db8	                   lea rcx, [rbp - 0x48]	       474	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_10
0x4000cf5	          0x4889ce	                            mov rsi, rcx	       474	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_10
0x4000cf8	          0x4889c7	                            mov rdi, rax	       474	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_10
0x4000cfb	      0xe800000000	                          call 0x4000d00	       474	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_10
0x4000d00	          0x8945a8	             mov dword [rbp - 0x58], eax	       474	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_10
0x4000d03	        0x837da800	               cmp dword [rbp - 0x58], 0	       475	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4
0x4000d07	            0x7537	                           jne 0x4000d40	       475	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4
0x4000d09	        0x488b4590	             mov rax, qword [rbp - 0x70]	       477	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4
0x4000d0d	    0x488b88180200	           mov rcx, qword [rax + 0x218] 	       477	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4
0x4000d14	        0x488b4590	             mov rax, qword [rbp - 0x70]	       476	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4	CALL_11
0x4000d18	    0x488b90100200	           mov rdx, qword [rax + 0x210] 	       476	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4	CALL_11
0x4000d1f	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       476	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4	CALL_11
0x4000d23	        0x4c8d45d0	                    lea r8, [rbp - 0x30]	       476	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4	CALL_11
0x4000d27	        0x488d7db0	                   lea rdi, [rbp - 0x50]	       476	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4	CALL_11
0x4000d2b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       476	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4	CALL_11
0x4000d2f	          0x4d89c1	                              mov r9, r8	       476	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4	CALL_11
0x4000d32	          0x4989f8	                             mov r8, rdi	       476	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4	CALL_11
0x4000d35	          0x4889c7	                            mov rdi, rax	       476	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4	CALL_11
0x4000d38	      0xe800000000	                          call 0x4000d3d	       476	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4	CALL_11
0x4000d3d	          0x8945a8	             mov dword [rbp - 0x58], eax	       476	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_4	CALL_11
0x4000d40	    0x488b05000000	            mov rax, qword [0x04000d47] 	       478	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_12
0x4000d47	          0x488b00	                    mov rax, qword [rax]	       478	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_12
0x4000d4a	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       478	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_12
0x4000d4e	          0x4889d7	                            mov rdi, rdx	       478	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_12
0x4000d51	            0xffd0	                                call rax	       478	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_12
0x4000d53	      0xe94d020000	                           jmp 0x4000fa5	       479	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000d58	        0x488b4598	             mov rax, qword [rbp - 0x68]	       481	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_13
0x4000d5c	          0x488b00	                    mov rax, qword [rax]	       481	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_13
0x4000d5f	        0x488b4028	            mov rax, qword [rax + 0x28] 	       481	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_13
0x4000d63	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       481	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_13
0x4000d67	    0x488b92a80c00	           mov rdx, qword [rdx + 0xca8] 	       481	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_13
0x4000d6e	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	       481	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_13
0x4000d72	          0x4889ce	                            mov rsi, rcx	       481	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_13
0x4000d75	          0x4889d7	                            mov rdi, rdx	       481	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_13
0x4000d78	            0xffd0	                                call rax	       481	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_13
0x4000d7a	        0x488b4590	             mov rax, qword [rbp - 0x70]	       483	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000d7e	    0x488b88180200	           mov rcx, qword [rax + 0x218] 	       483	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000d85	        0x488b4590	             mov rax, qword [rbp - 0x70]	       483	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000d89	    0x488b90100200	           mov rdx, qword [rax + 0x210] 	       483	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000d90	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       482	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000d94	        0x4c8d4db0	                    lea r9, [rbp - 0x50]	       482	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000d98	        0x4c8b45f0	              mov r8, qword [rbp - 0x10]	       482	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000d9c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       482	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000da0	        0x4883ec08	                              sub rsp, 8	       482	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000da4	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	       482	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000da8	              0x57	                                push rdi	       482	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000da9	          0x4889c7	                            mov rdi, rax	       482	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000dac	      0xe800000000	                          call 0x4000db1	       482	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000db1	        0x4883c410	                           add rsp, 0x10	       482	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000db5	          0x8945a8	             mov dword [rbp - 0x58], eax	       482	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_14
0x4000db8	    0xc745ac070000	               mov dword [rbp - 0x54], 7	       486	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000dbf	      0xe9e1010000	                           jmp 0x4000fa5	       487	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000dc4	    0x488b05000000	            mov rax, qword [0x04000dcb] 	       489	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_15
0x4000dcb	          0x488b00	                    mov rax, qword [rax]	       489	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_15
0x4000dce	    0x488d3d000000	                   lea rdi, [0x04000dd5]	       489	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_15
0x4000dd5	            0xffd0	                                call rax	       489	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_15
0x4000dd7	        0x488945b0	             mov qword [rbp - 0x50], rax	       489	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_15
0x4000ddb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       490	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_5
0x4000ddf	          0x4885c0	                           test rax, rax	       490	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_5
0x4000de2	     0xf85b9010000	                           jne 0x4000fa1	       490	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_5
0x4000de8	    0xc745a81b0000	           mov dword [rbp - 0x58], 0x1b 	       491	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_5
0x4000def	      0xe9ad010000	                           jmp 0x4000fa1	       492	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000df4	        0x488b4598	             mov rax, qword [rbp - 0x68]	       556	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8
0x4000df8	          0x8b4014	            mov eax, dword [rax + 0x14] 	       556	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8
0x4000dfb	      0x3d00010000	                          cmp eax, 0x100	       556	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8
0x4000e00	            0x754a	                           jne 0x4000e4c	       556	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8
0x4000e02	        0x488b4590	             mov rax, qword [rbp - 0x70]	       560	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8
0x4000e06	    0x4c8b80280200	            mov r8, qword [rax + 0x228] 	       560	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8
0x4000e0d	        0x488b4590	             mov rax, qword [rbp - 0x70]	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4000e11	    0x488bb0100200	           mov rsi, qword [rax + 0x210] 	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4000e18	        0x4c8d4db0	                    lea r9, [rbp - 0x50]	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4000e1c	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4000e20	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4000e24	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4000e28	        0x4883ec08	                              sub rsp, 8	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4000e2c	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4000e30	              0x57	                                push rdi	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4000e31	          0x4889c7	                            mov rdi, rax	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4000e34	      0xe800000000	                          call 0x4000e39	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4000e39	        0x4883c410	                           add rsp, 0x10	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4000e3d	          0x8945a8	             mov dword [rbp - 0x58], eax	       557	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8	CALL_26
0x4000e40	    0xc745ac0e0000	            mov dword [rbp - 0x54], 0xe 	       564	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_8
0x4000e47	      0xe959010000	                           jmp 0x4000fa5	       571	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000e4c	        0x488b4590	             mov rax, qword [rbp - 0x70]	       569	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2
0x4000e50	    0x488b88280200	           mov rcx, qword [rax + 0x228] 	       569	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2
0x4000e57	        0x488b4590	             mov rax, qword [rbp - 0x70]	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4000e5b	    0x488bb0100200	           mov rsi, qword [rax + 0x210] 	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4000e62	        0x488d7db0	                   lea rdi, [rbp - 0x50]	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4000e66	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4000e6a	        0x4883ec08	                              sub rsp, 8	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4000e6e	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4000e72	              0x52	                                push rdx	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4000e73	          0x4989f9	                             mov r9, rdi	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4000e76	          0x4989c8	                             mov r8, rcx	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4000e79	      0xb900000000	                              mov ecx, 0	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4000e7e	      0xba00000000	                              mov edx, 0	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4000e83	          0x4889c7	                            mov rdi, rax	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4000e86	      0xe800000000	                          call 0x4000e8b	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4000e8b	        0x4883c410	                           add rsp, 0x10	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4000e8f	          0x8945a8	             mov dword [rbp - 0x58], eax	       567	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_2	CALL_27
0x4000e92	      0xe90e010000	                           jmp 0x4000fa5	       571	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000e97	        0x488b4598	             mov rax, qword [rbp - 0x68]	       575	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9
0x4000e9b	          0x488b00	                    mov rax, qword [rax]	       575	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9
0x4000e9e	          0x8b400c	              mov eax, dword [rax + 0xc]	       575	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9
0x4000ea1	          0x3b458c	             cmp eax, dword [rbp - 0x74]	       575	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9
0x4000ea4	            0x752a	                           jne 0x4000ed0	       575	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9
0x4000ea6	        0x488b4580	             mov rax, qword [rbp - 0x80]	       577	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9
0x4000eaa	    0xc70002000000	                      mov dword [rax], 2	       577	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9
0x4000eb0	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	       578	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9	CALL_28
0x4000eb4	        0x488b4598	             mov rax, qword [rbp - 0x68]	       578	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9	CALL_28
0x4000eb8	      0xba00000000	                              mov edx, 0	       578	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9	CALL_28
0x4000ebd	          0x4889ce	                            mov rsi, rcx	       578	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9	CALL_28
0x4000ec0	          0x4889c7	                            mov rdi, rax	       578	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9	CALL_28
0x4000ec3	      0xe853f5ffff	                          call sym.state	       578	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9	CALL_28
0x4000ec8	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       579	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9
0x4000ecb	      0xe971010000	                           jmp 0x4001041	       579	curl_sasl.c	FUNCTION_8	SWITCH_1	IF_9
0x4000ed0	        0x488b4598	             mov rax, qword [rbp - 0x68]	       581	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10
0x4000ed4	          0x488b00	                    mov rax, qword [rax]	       581	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10
0x4000ed7	          0x8b4008	                mov eax, dword [rax + 8]	       581	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10
0x4000eda	          0x3b458c	             cmp eax, dword [rbp - 0x74]	       581	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10
0x4000edd	            0x7530	                           jne 0x4000f0f	       581	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10
0x4000edf	    0x488b05000000	            mov rax, qword [0x04000ee6] 	       584	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10	CALL_29
0x4000ee6	          0x488b00	                    mov rax, qword [rax]	       584	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10	CALL_29
0x4000ee9	    0x488d3d000000	                   lea rdi, [0x04000ef0]	       584	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10	CALL_29
0x4000ef0	            0xffd0	                                call rax	       584	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10	CALL_29
0x4000ef2	        0x488945b0	             mov qword [rbp - 0x50], rax	       584	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10	CALL_29
0x4000ef6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       585	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10	IF_11
0x4000efa	          0x4885c0	                           test rax, rax	       585	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10	IF_11
0x4000efd	     0xf85a1000000	                           jne 0x4000fa4	       585	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10	IF_11
0x4000f03	    0xc745a81b0000	           mov dword [rbp - 0x58], 0x1b 	       586	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10	IF_11
0x4000f0a	      0xe995000000	                           jmp 0x4000fa4	       587	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10
0x4000f0f	        0x488b4580	             mov rax, qword [rbp - 0x80]	       590	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_4
0x4000f13	    0xc70002000000	                      mov dword [rax], 2	       590	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_4
0x4000f19	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	       591	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_4	CALL_30
0x4000f1d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       591	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_4	CALL_30
0x4000f21	      0xba00000000	                              mov edx, 0	       591	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_4	CALL_30
0x4000f26	          0x4889ce	                            mov rsi, rcx	       591	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_4	CALL_30
0x4000f29	          0x4889c7	                            mov rdi, rax	       591	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_4	CALL_30
0x4000f2c	      0xe8eaf4ffff	                          call sym.state	       591	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_4	CALL_30
0x4000f31	      0xb843000000	                           mov eax, 0x43	       592	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_4
0x4000f36	      0xe906010000	                           jmp 0x4001041	       592	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_4
0x4000f3b	        0x488b4598	             mov rax, qword [rbp - 0x68]	       597	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000f3f	          0x8b500c	              mov edx, dword [rax + 0xc]	       597	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000f42	        0x488b4598	             mov rax, qword [rbp - 0x68]	       597	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000f46	          0x8b4014	            mov eax, dword [rax + 0x14] 	       597	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000f49	            0x31c2	                            xor edx, eax	       597	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000f4b	        0x488b4598	             mov rax, qword [rbp - 0x68]	       597	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000f4f	          0x89500c	              mov dword [rax + 0xc], edx	       597	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000f52	        0x488b4598	             mov rax, qword [rbp - 0x68]	       600	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_31
0x4000f56	         0xfb6401a	           movzx eax, byte [rax + 0x1a] 	       600	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_31
0x4000f5a	           0xfb6d0	                           movzx edx, al	       600	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_31
0x4000f5d	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	       600	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_31
0x4000f61	        0x488b7590	             mov rsi, qword [rbp - 0x70]	       600	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_31
0x4000f65	        0x488b4598	             mov rax, qword [rbp - 0x68]	       600	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_31
0x4000f69	          0x4889c7	                            mov rdi, rax	       600	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_31
0x4000f6c	      0xe800000000	                          call 0x4000f71	       600	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_31
0x4000f71	          0x8945a8	             mov dword [rbp - 0x58], eax	       600	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_31
0x4000f74	        0x488b4598	             mov rax, qword [rbp - 0x68]	       601	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000f78	          0x8b4008	                mov eax, dword [rax + 8]	       601	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000f7b	          0x8945ac	             mov dword [rbp - 0x54], eax	       601	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000f7e	            0xeb25	                           jmp 0x4000fa5	       602	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000f80	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       604	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_32
0x4000f84	    0x488d35000000	                   lea rsi, [0x04000f8b]	       604	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_32
0x4000f8b	          0x4889c7	                            mov rdi, rax	       604	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_32
0x4000f8e	      0xb800000000	                              mov eax, 0	       604	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_32
0x4000f93	      0xe800000000	                          call 0x4000f98	       604	curl_sasl.c	FUNCTION_8	SWITCH_1	CALL_32
0x4000f98	    0xc745a8010000	               mov dword [rbp - 0x58], 1	       605	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000f9f	            0xeb04	                           jmp 0x4000fa5	       606	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000fa1	              0x90	                                     nop	       492	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000fa2	            0xeb01	                           jmp 0x4000fa5	       492	curl_sasl.c	FUNCTION_8	SWITCH_1
0x4000fa4	              0x90	                                     nop	       587	curl_sasl.c	FUNCTION_8	SWITCH_1	ELSE_3	IF_10
0x4000fa5	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       609	curl_sasl.c	FUNCTION_8	SWITCH_2
0x4000fa8	            0x85c0	                           test eax, eax	       609	curl_sasl.c	FUNCTION_8	SWITCH_2
0x4000faa	            0x742c	                            je 0x4000fd8	       609	curl_sasl.c	FUNCTION_8	SWITCH_2
0x4000fac	          0x83f83d	                           cmp eax, 0x3d	       609	curl_sasl.c	FUNCTION_8	SWITCH_2
0x4000faf	            0x7550	                           jne 0x4001001	       609	curl_sasl.c	FUNCTION_8	SWITCH_2
0x4000fb1	        0x488b4598	             mov rax, qword [rbp - 0x68]	       612	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_33
0x4000fb5	          0x488b00	                    mov rax, qword [rax]	       612	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_33
0x4000fb8	        0x488b4020	            mov rax, qword [rax + 0x20] 	       612	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_33
0x4000fbc	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       612	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_33
0x4000fc0	    0x488d35000000	                   lea rsi, [0x04000fc7]	       612	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_33
0x4000fc7	          0x4889d7	                            mov rdi, rdx	       612	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_33
0x4000fca	            0xffd0	                                call rax	       612	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_33
0x4000fcc	          0x8945a8	             mov dword [rbp - 0x58], eax	       612	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_33
0x4000fcf	    0xc745ac0f0000	            mov dword [rbp - 0x54], 0xf 	       613	curl_sasl.c	FUNCTION_8	SWITCH_2
0x4000fd6	            0xeb3d	                           jmp 0x4001015	       614	curl_sasl.c	FUNCTION_8	SWITCH_2
0x4000fd8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       616	curl_sasl.c	FUNCTION_8	SWITCH_2	IF_12
0x4000fdc	          0x4885c0	                           test rax, rax	       616	curl_sasl.c	FUNCTION_8	SWITCH_2	IF_12
0x4000fdf	            0x7433	                            je 0x4001014	       616	curl_sasl.c	FUNCTION_8	SWITCH_2	IF_12
0x4000fe1	        0x488b4598	             mov rax, qword [rbp - 0x68]	       617	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_34
0x4000fe5	          0x488b00	                    mov rax, qword [rax]	       617	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_34
0x4000fe8	        0x488b4020	            mov rax, qword [rax + 0x20] 	       617	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_34
0x4000fec	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       617	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_34
0x4000ff0	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       617	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_34
0x4000ff4	          0x4889ce	                            mov rsi, rcx	       617	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_34
0x4000ff7	          0x4889d7	                            mov rdi, rdx	       617	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_34
0x4000ffa	            0xffd0	                                call rax	       617	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_34
0x4000ffc	          0x8945a8	             mov dword [rbp - 0x58], eax	       617	curl_sasl.c	FUNCTION_8	SWITCH_2	CALL_34
0x4000fff	            0xeb13	                           jmp 0x4001014	       618	curl_sasl.c	FUNCTION_8	SWITCH_2
0x4001001	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       620	curl_sasl.c	FUNCTION_8	SWITCH_2
0x4001008	        0x488b4580	             mov rax, qword [rbp - 0x80]	       621	curl_sasl.c	FUNCTION_8	SWITCH_2
0x400100c	    0xc70002000000	                      mov dword [rax], 2	       621	curl_sasl.c	FUNCTION_8	SWITCH_2
0x4001012	            0xeb01	                           jmp 0x4001015	       622	curl_sasl.c	FUNCTION_8	SWITCH_2
0x4001014	              0x90	                                     nop	       618	curl_sasl.c	FUNCTION_8	SWITCH_2
0x4001015	    0x488b05000000	            mov rax, qword [0x0400101c] 	       625	curl_sasl.c	FUNCTION_8	CALL_35
0x400101c	          0x488b00	                    mov rax, qword [rax]	       625	curl_sasl.c	FUNCTION_8	CALL_35
0x400101f	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       625	curl_sasl.c	FUNCTION_8	CALL_35
0x4001023	          0x4889d7	                            mov rdi, rdx	       625	curl_sasl.c	FUNCTION_8	CALL_35
0x4001026	            0xffd0	                                call rax	       625	curl_sasl.c	FUNCTION_8	CALL_35
0x4001028	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       627	curl_sasl.c	FUNCTION_8	CALL_36
0x400102b	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	       627	curl_sasl.c	FUNCTION_8	CALL_36
0x400102f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       627	curl_sasl.c	FUNCTION_8	CALL_36
0x4001033	          0x4889ce	                            mov rsi, rcx	       627	curl_sasl.c	FUNCTION_8	CALL_36
0x4001036	          0x4889c7	                            mov rdi, rax	       627	curl_sasl.c	FUNCTION_8	CALL_36
0x4001039	      0xe8ddf3ffff	                          call sym.state	       627	curl_sasl.c	FUNCTION_8	CALL_36
0x400103e	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       629	curl_sasl.c	FUNCTION_8
0x4001041	        0x488b7df8	                mov rdi, qword [rbp - 8]	       630	curl_sasl.c	FUNCTION_8
0x4001045	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       630	curl_sasl.c	FUNCTION_8
0x400104e	            0x7405	                            je 0x4001055	       630	curl_sasl.c	FUNCTION_8
0x4001050	      0xe800000000	                          call 0x4001055	       630	curl_sasl.c	FUNCTION_8
0x4001055	              0xc9	                                   leave	       630	curl_sasl.c	FUNCTION_8
0x4001056	              0xc3	                                     ret	       630	curl_sasl.c	FUNCTION_8
Curl_sasl_can_authenticate	ELSE,0:CALL,0:SWITCH,0:WHILE,0:FOR,0:functions,0:DO,0:IF,2	23
0x4000437	              0x55	                                push rbp	       237	curl_sasl.c	FUNCTION_6
0x4000438	          0x4889e5	                            mov rbp, rsp	       237	curl_sasl.c	FUNCTION_6
0x400043b	        0x48897df8	                mov qword [rbp - 8], rdi	       237	curl_sasl.c	FUNCTION_6
0x400043f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       237	curl_sasl.c	FUNCTION_6
0x4000443	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       239	curl_sasl.c	FUNCTION_6	IF_1
0x4000447	     0xfb680580300	          movzx eax, byte [rax + 0x358] 	       239	curl_sasl.c	FUNCTION_6	IF_1
0x400044e	            0x84c0	                             test al, al	       239	curl_sasl.c	FUNCTION_6	IF_1
0x4000450	            0x7407	                            je 0x4000459	       239	curl_sasl.c	FUNCTION_6	IF_1
0x4000452	      0xb801000000	                              mov eax, 1	       240	curl_sasl.c	FUNCTION_6	IF_1
0x4000457	            0xeb23	                           jmp 0x400047c	       240	curl_sasl.c	FUNCTION_6	IF_1
0x4000459	        0x488b45f8	                mov rax, qword [rbp - 8]	       243	curl_sasl.c	FUNCTION_6	IF_2
0x400045d	          0x8b500c	              mov edx, dword [rax + 0xc]	       243	curl_sasl.c	FUNCTION_6	IF_2
0x4000460	        0x488b45f8	                mov rax, qword [rbp - 8]	       243	curl_sasl.c	FUNCTION_6	IF_2
0x4000464	          0x8b4010	            mov eax, dword [rax + 0x10] 	       243	curl_sasl.c	FUNCTION_6	IF_2
0x4000467	            0x21d0	                            and eax, edx	       243	curl_sasl.c	FUNCTION_6	IF_2
0x4000469	          0x83e020	                           and eax, 0x20	       243	curl_sasl.c	FUNCTION_6	IF_2
0x400046c	            0x85c0	                           test eax, eax	       243	curl_sasl.c	FUNCTION_6	IF_2
0x400046e	            0x7407	                            je 0x4000477	       243	curl_sasl.c	FUNCTION_6	IF_2
0x4000470	      0xb801000000	                              mov eax, 1	       244	curl_sasl.c	FUNCTION_6	IF_2
0x4000475	            0xeb05	                           jmp 0x400047c	       244	curl_sasl.c	FUNCTION_6	IF_2
0x4000477	      0xb800000000	                              mov eax, 0	       246	curl_sasl.c	FUNCTION_6
0x400047c	              0x5d	                                 pop rbp	       247	curl_sasl.c	FUNCTION_6
0x400047d	              0xc3	                                     ret	       247	curl_sasl.c	FUNCTION_6
