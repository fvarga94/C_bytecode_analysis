slist_wc_free_all	IF,1:ELSE,0:FOR,0:functions,0:CALL,2:DO,0:WHILE,0:SWITCH,0	10
0x40000ac	          0x4885ff	                           test rdi, rdi	        65	slist_wc.c	FUNCTION_2	IF_1
0x40000af	            0x7415	                            je 0x40000c6	        65	slist_wc.c	FUNCTION_2	IF_1
0x40000b1	              0x53	                                push rbx	        64	slist_wc.c	FUNCTION_2
0x40000b2	          0x4889fb	                            mov rbx, rdi	        64	slist_wc.c	FUNCTION_2
0x40000b5	          0x488b3f	                    mov rdi, qword [rdi]	        68	slist_wc.c	FUNCTION_2	CALL_1
0x40000b8	      0xe800000000	                          call 0x40000bd	        68	slist_wc.c	FUNCTION_2	CALL_1
0x40000bd	          0x4889df	                            mov rdi, rbx	        69	slist_wc.c	FUNCTION_2	CALL_2
0x40000c0	      0xe800000000	                          call 0x40000c5	        69	slist_wc.c	FUNCTION_2	CALL_2
0x40000c5	              0x5b	                                 pop rbx	        70	slist_wc.c	FUNCTION_2
0x40000c6	            0xf3c3	                                     ret	        70	slist_wc.c	FUNCTION_2
slist_wc_append	IF,3:ELSE,0:FOR,0:functions,0:CALL,3:DO,0:WHILE,0:SWITCH,0	34
0x4000040	              0x55	                                push rbp	        38	slist_wc.c	FUNCTION_1
0x4000041	              0x53	                                push rbx	        38	slist_wc.c	FUNCTION_1
0x4000042	        0x4883ec08	                              sub rsp, 8	        38	slist_wc.c	FUNCTION_1
0x4000046	          0x4889fb	                            mov rbx, rdi	        38	slist_wc.c	FUNCTION_1
0x4000049	      0xbf00000000	                              mov edi, 0	        39	slist_wc.c	FUNCTION_1	CALL_1
0x400004e	      0xe800000000	                          call 0x4000053	        39	slist_wc.c	FUNCTION_1	CALL_1
0x4000053	          0x4885c0	                           test rax, rax	        41	slist_wc.c	FUNCTION_1	IF_1
0x4000056	            0x7448	                            je 0x40000a0	        41	slist_wc.c	FUNCTION_1	IF_1
0x4000058	          0x4889c5	                            mov rbp, rax	        41	slist_wc.c	FUNCTION_1	IF_1
0x400005b	          0x4885db	                           test rbx, rbx	        44	slist_wc.c	FUNCTION_1	IF_2
0x400005e	            0x7527	                           jne 0x4000087	        44	slist_wc.c	FUNCTION_1	IF_2
0x4000060	      0xbf10000000	                           mov edi, 0x10	        45	slist_wc.c	FUNCTION_1	IF_2	CALL_2
0x4000065	      0xe800000000	                          call 0x400006a	        45	slist_wc.c	FUNCTION_1	IF_2	CALL_2
0x400006a	          0x4885c0	                           test rax, rax	        47	slist_wc.c	FUNCTION_1	IF_2	IF_3
0x400006d	            0x750f	                           jne 0x400007e	        47	slist_wc.c	FUNCTION_1	IF_2	IF_3
0x400006f	          0x4889ef	                            mov rdi, rbp	        48	slist_wc.c	FUNCTION_1	IF_2	IF_3	CALL_3
0x4000072	      0xe800000000	                          call 0x4000077	        48	slist_wc.c	FUNCTION_1	IF_2	IF_3	CALL_3
0x4000077	      0xb800000000	                              mov eax, 0	        49	slist_wc.c	FUNCTION_1	IF_2	IF_3
0x400007c	            0xeb27	                           jmp 0x40000a5	        49	slist_wc.c	FUNCTION_1	IF_2	IF_3
0x400007e	          0x488928	                    mov qword [rax], rbp	        52	slist_wc.c	FUNCTION_1	IF_2
0x4000081	        0x48896808	                mov qword [rax + 8], rbp	        53	slist_wc.c	FUNCTION_1	IF_2
0x4000085	            0xeb1e	                           jmp 0x40000a5	        54	slist_wc.c	FUNCTION_1	IF_2
0x4000087	        0x488b4308	                mov rax, qword [rbx + 8]	        57	slist_wc.c	FUNCTION_1
0x400008b	        0x48896808	                mov qword [rax + 8], rbp	        57	slist_wc.c	FUNCTION_1
0x400008f	        0x488b4308	                mov rax, qword [rbx + 8]	        58	slist_wc.c	FUNCTION_1
0x4000093	        0x488b4008	                mov rax, qword [rax + 8]	        58	slist_wc.c	FUNCTION_1
0x4000097	        0x48894308	                mov qword [rbx + 8], rax	        58	slist_wc.c	FUNCTION_1
0x400009b	          0x4889d8	                            mov rax, rbx	        59	slist_wc.c	FUNCTION_1
0x400009e	            0xeb05	                           jmp 0x40000a5	        59	slist_wc.c	FUNCTION_1
0x40000a0	      0xb800000000	                              mov eax, 0	        42	slist_wc.c	FUNCTION_1	IF_1
0x40000a5	        0x4883c408	                              add rsp, 8	        60	slist_wc.c	FUNCTION_1
0x40000a9	              0x5b	                                 pop rbx	        60	slist_wc.c	FUNCTION_1
0x40000aa	              0x5d	                                 pop rbp	        60	slist_wc.c	FUNCTION_1
0x40000ab	              0xc3	                                     ret	        60	slist_wc.c	FUNCTION_1
