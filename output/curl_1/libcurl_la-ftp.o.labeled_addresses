ftp_state_stor_resp	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,6:IF,4:WHILE,0	73
0x400446e	              0x55	                                push rbp	      2339	ftp.c	FUNCTION_39
0x400446f	          0x4889e5	                            mov rbp, rsp	      2339	ftp.c	FUNCTION_39
0x4004472	        0x4883ec30	                           sub rsp, 0x30	      2339	ftp.c	FUNCTION_39
0x4004476	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2339	ftp.c	FUNCTION_39
0x400447a	          0x8975d4	             mov dword [rbp - 0x2c], esi	      2339	ftp.c	FUNCTION_39
0x400447d	          0x8955d0	             mov dword [rbp - 0x30], edx	      2339	ftp.c	FUNCTION_39
0x4004480	    0x64488b042528	                mov rax, qword fs:[0x28]	      2339	ftp.c	FUNCTION_39
0x4004489	        0x488945f8	                mov qword [rbp - 8], rax	      2339	ftp.c	FUNCTION_39
0x400448d	            0x31c0	                            xor eax, eax	      2339	ftp.c	FUNCTION_39
0x400448f	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      2340	ftp.c	FUNCTION_39
0x4004496	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2341	ftp.c	FUNCTION_39
0x400449a	          0x488b00	                    mov rax, qword [rax]	      2341	ftp.c	FUNCTION_39
0x400449d	        0x488945e8	             mov qword [rbp - 0x18], rax	      2341	ftp.c	FUNCTION_39
0x40044a1	    0x817dd48f0100	          cmp dword [rbp - 0x2c], 0x18f 	      2343	ftp.c	FUNCTION_39	IF_1
0x40044a8	            0x7e36	                           jle 0x40044e0	      2343	ftp.c	FUNCTION_39	IF_1
0x40044aa	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2344	ftp.c	FUNCTION_39	IF_1	CALL_1
0x40044ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2344	ftp.c	FUNCTION_39	IF_1	CALL_1
0x40044b1	    0x488d35000000	                   lea rsi, [0x040044b8]	      2344	ftp.c	FUNCTION_39	IF_1	CALL_1
0x40044b8	          0x4889c7	                            mov rdi, rax	      2344	ftp.c	FUNCTION_39	IF_1	CALL_1
0x40044bb	      0xb800000000	                              mov eax, 0	      2344	ftp.c	FUNCTION_39	IF_1	CALL_1
0x40044c0	      0xe800000000	                          call 0x40044c5	      2344	ftp.c	FUNCTION_39	IF_1	CALL_1
0x40044c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2345	ftp.c	FUNCTION_39	IF_1	CALL_2
0x40044c9	      0xbe00000000	                              mov esi, 0	      2345	ftp.c	FUNCTION_39	IF_1	CALL_2
0x40044ce	          0x4889c7	                            mov rdi, rax	      2345	ftp.c	FUNCTION_39	IF_1	CALL_2
0x40044d1	      0xe8a1c8ffff	                         call sym._state	      2345	ftp.c	FUNCTION_39	IF_1	CALL_2
0x40044d6	      0xb819000000	                           mov eax, 0x19	      2347	ftp.c	FUNCTION_39	IF_1
0x40044db	      0xe99d000000	                           jmp 0x400457d	      2347	ftp.c	FUNCTION_39	IF_1
0x40044e0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2350	ftp.c	FUNCTION_39
0x40044e4	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      2350	ftp.c	FUNCTION_39
0x40044e7	    0x899070060000	            mov dword [rax + 0x670], edx	      2350	ftp.c	FUNCTION_39
0x40044ed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2353	ftp.c	FUNCTION_39	IF_2
0x40044f1	     0xfb680970700	          movzx eax, byte [rax + 0x797] 	      2353	ftp.c	FUNCTION_39	IF_2
0x40044f8	            0x84c0	                             test al, al	      2353	ftp.c	FUNCTION_39	IF_2
0x40044fa	            0x7475	                            je 0x4004571	      2353	ftp.c	FUNCTION_39	IF_2
0x40044fc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2356	ftp.c	FUNCTION_39	IF_2	CALL_3
0x4004500	      0xbe00000000	                              mov esi, 0	      2356	ftp.c	FUNCTION_39	IF_2	CALL_3
0x4004505	          0x4889c7	                            mov rdi, rax	      2356	ftp.c	FUNCTION_39	IF_2	CALL_3
0x4004508	      0xe86ac8ffff	                         call sym._state	      2356	ftp.c	FUNCTION_39	IF_2	CALL_3
0x400450d	        0x488d55e3	                   lea rdx, [rbp - 0x1d]	      2358	ftp.c	FUNCTION_39	IF_2	CALL_4
0x4004511	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2358	ftp.c	FUNCTION_39	IF_2	CALL_4
0x4004515	          0x4889d6	                            mov rsi, rdx	      2358	ftp.c	FUNCTION_39	IF_2	CALL_4
0x4004518	          0x4889c7	                            mov rdi, rax	      2358	ftp.c	FUNCTION_39	IF_2	CALL_4
0x400451b	      0xe898c3ffff	             call sym.AllowServerConnect	      2358	ftp.c	FUNCTION_39	IF_2	CALL_4
0x4004520	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2358	ftp.c	FUNCTION_39	IF_2	CALL_4
0x4004523	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2359	ftp.c	FUNCTION_39	IF_2	IF_3
0x4004527	            0x7405	                            je 0x400452e	      2359	ftp.c	FUNCTION_39	IF_2	IF_3
0x4004529	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2360	ftp.c	FUNCTION_39	IF_2	IF_3
0x400452c	            0xeb4f	                           jmp 0x400457d	      2360	ftp.c	FUNCTION_39	IF_2	IF_3
0x400452e	         0xfb645e3	            movzx eax, byte [rbp - 0x1d]	      2362	ftp.c	FUNCTION_39	IF_2	IF_4
0x4004532	          0x83f001	                              xor eax, 1	      2362	ftp.c	FUNCTION_39	IF_2	IF_4
0x4004535	            0x84c0	                             test al, al	      2362	ftp.c	FUNCTION_39	IF_2	IF_4
0x4004537	            0x7431	                            je 0x400456a	      2362	ftp.c	FUNCTION_39	IF_2	IF_4
0x4004539	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2363	ftp.c	FUNCTION_39	IF_2	IF_4
0x400453d	    0x4805b0050000	                          add rax, 0x5b0	      2363	ftp.c	FUNCTION_39	IF_2	IF_4
0x4004543	        0x488945f0	             mov qword [rbp - 0x10], rax	      2363	ftp.c	FUNCTION_39	IF_2	IF_4
0x4004547	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2364	ftp.c	FUNCTION_39	IF_2	IF_4	CALL_5
0x400454b	    0x488d35000000	                   lea rsi, [0x04004552]	      2364	ftp.c	FUNCTION_39	IF_2	IF_4	CALL_5
0x4004552	          0x4889c7	                            mov rdi, rax	      2364	ftp.c	FUNCTION_39	IF_2	IF_4	CALL_5
0x4004555	      0xb800000000	                              mov eax, 0	      2364	ftp.c	FUNCTION_39	IF_2	IF_4	CALL_5
0x400455a	      0xe800000000	                          call 0x400455f	      2364	ftp.c	FUNCTION_39	IF_2	IF_4	CALL_5
0x400455f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2365	ftp.c	FUNCTION_39	IF_2	IF_4
0x4004563	    0xc68099000000	                mov byte [rax + 0x99], 1	      2365	ftp.c	FUNCTION_39	IF_2	IF_4
0x400456a	      0xb800000000	                              mov eax, 0	      2368	ftp.c	FUNCTION_39	IF_2
0x400456f	            0xeb0c	                           jmp 0x400457d	      2368	ftp.c	FUNCTION_39	IF_2
0x4004571	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2370	ftp.c	FUNCTION_39	CALL_6
0x4004575	          0x4889c7	                            mov rdi, rax	      2370	ftp.c	FUNCTION_39	CALL_6
0x4004578	      0xe802c2ffff	               call sym.InitiateTransfer	      2370	ftp.c	FUNCTION_39	CALL_6
0x400457d	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2371	ftp.c	FUNCTION_39
0x4004581	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2371	ftp.c	FUNCTION_39
0x400458a	            0x7405	                            je 0x4004591	      2371	ftp.c	FUNCTION_39
0x400458c	      0xe800000000	                          call 0x4004591	      2371	ftp.c	FUNCTION_39
0x4004591	              0xc9	                                   leave	      2371	ftp.c	FUNCTION_39
0x4004592	              0xc3	                                     ret	      2371	ftp.c	FUNCTION_39
ftp_nb_type	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,4:IF,1:WHILE,0	53
0x4006408	              0x55	                                push rbp	      3432	ftp.c	FUNCTION_51
0x4006409	          0x4889e5	                            mov rbp, rsp	      3432	ftp.c	FUNCTION_51
0x400640c	        0x4883ec20	                           sub rsp, 0x20	      3432	ftp.c	FUNCTION_51
0x4006410	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3432	ftp.c	FUNCTION_51
0x4006414	            0x89f0	                            mov eax, esi	      3432	ftp.c	FUNCTION_51
0x4006416	          0x8955e0	             mov dword [rbp - 0x20], edx	      3432	ftp.c	FUNCTION_51
0x4006419	          0x8845e4	               mov byte [rbp - 0x1c], al	      3432	ftp.c	FUNCTION_51
0x400641c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3433	ftp.c	FUNCTION_51
0x4006420	    0x4805b0050000	                          add rax, 0x5b0	      3433	ftp.c	FUNCTION_51
0x4006426	        0x488945f8	                mov qword [rbp - 8], rax	      3433	ftp.c	FUNCTION_51
0x400642a	        0x807de400	                cmp byte [rbp - 0x1c], 0	      3435	ftp.c	FUNCTION_51
0x400642e	            0x7407	                            je 0x4006437	      3435	ftp.c	FUNCTION_51
0x4006430	      0xb841000000	                           mov eax, 0x41	      3435	ftp.c	FUNCTION_51
0x4006435	            0xeb05	                           jmp 0x400643c	      3435	ftp.c	FUNCTION_51
0x4006437	      0xb849000000	                           mov eax, 0x49	      3435	ftp.c	FUNCTION_51
0x400643c	          0x8845f3	                mov byte [rbp - 0xd], al	      3435	ftp.c	FUNCTION_51
0x400643f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3437	ftp.c	FUNCTION_51	IF_1
0x4006443	     0xfb680ac0000	           movzx eax, byte [rax + 0xac] 	      3437	ftp.c	FUNCTION_51	IF_1
0x400644a	          0x3a45f3	                cmp al, byte [rbp - 0xd]	      3437	ftp.c	FUNCTION_51	IF_1
0x400644d	            0x7527	                           jne 0x4006476	      3437	ftp.c	FUNCTION_51	IF_1
0x400644f	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      3438	ftp.c	FUNCTION_51	IF_1	CALL_1
0x4006452	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3438	ftp.c	FUNCTION_51	IF_1	CALL_1
0x4006456	            0x89d6	                            mov esi, edx	      3438	ftp.c	FUNCTION_51	IF_1	CALL_1
0x4006458	          0x4889c7	                            mov rdi, rax	      3438	ftp.c	FUNCTION_51	IF_1	CALL_1
0x400645b	      0xe817a9ffff	                         call sym._state	      3438	ftp.c	FUNCTION_51	IF_1	CALL_1
0x4006460	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      3439	ftp.c	FUNCTION_51	IF_1	CALL_2
0x4006463	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3439	ftp.c	FUNCTION_51	IF_1	CALL_2
0x4006467	      0xbec8000000	                           mov esi, 0xc8	      3439	ftp.c	FUNCTION_51	IF_1	CALL_2
0x400646c	          0x4889c7	                            mov rdi, rax	      3439	ftp.c	FUNCTION_51	IF_1	CALL_2
0x400646f	      0xe839d9ffff	            call sym.ftp_state_type_resp	      3439	ftp.c	FUNCTION_51	IF_1	CALL_2
0x4006474	            0xeb4e	                           jmp 0x40064c4	      3439	ftp.c	FUNCTION_51	IF_1	CALL_2
0x4006476	         0xfbe55f3	             movsx edx, byte [rbp - 0xd]	      3442	ftp.c	FUNCTION_51	CALL_3
0x400647a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3442	ftp.c	FUNCTION_51	CALL_3
0x400647e	    0x488d35000000	                   lea rsi, [0x04006485]	      3442	ftp.c	FUNCTION_51	CALL_3
0x4006485	          0x4889c7	                            mov rdi, rax	      3442	ftp.c	FUNCTION_51	CALL_3
0x4006488	      0xb800000000	                              mov eax, 0	      3442	ftp.c	FUNCTION_51	CALL_3
0x400648d	      0xe800000000	                          call 0x4006492	      3442	ftp.c	FUNCTION_51	CALL_3
0x4006492	          0x8945f4	              mov dword [rbp - 0xc], eax	      3442	ftp.c	FUNCTION_51	CALL_3
0x4006495	        0x837df400	                cmp dword [rbp - 0xc], 0	      3442	ftp.c	FUNCTION_51	CALL_3
0x4006499	            0x7405	                            je 0x40064a0	      3442	ftp.c	FUNCTION_51	CALL_3
0x400649b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3442	ftp.c	FUNCTION_51	CALL_3
0x400649e	            0xeb24	                           jmp 0x40064c4	      3442	ftp.c	FUNCTION_51	CALL_3
0x40064a0	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      3443	ftp.c	FUNCTION_51	CALL_4
0x40064a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3443	ftp.c	FUNCTION_51	CALL_4
0x40064a7	            0x89d6	                            mov esi, edx	      3443	ftp.c	FUNCTION_51	CALL_4
0x40064a9	          0x4889c7	                            mov rdi, rax	      3443	ftp.c	FUNCTION_51	CALL_4
0x40064ac	      0xe8c6a8ffff	                         call sym._state	      3443	ftp.c	FUNCTION_51	CALL_4
0x40064b1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3446	ftp.c	FUNCTION_51
0x40064b5	         0xfb655f3	             movzx edx, byte [rbp - 0xd]	      3446	ftp.c	FUNCTION_51
0x40064b9	    0x8890ac000000	               mov byte [rax + 0xac], dl	      3446	ftp.c	FUNCTION_51
0x40064bf	      0xb800000000	                              mov eax, 0	      3447	ftp.c	FUNCTION_51
0x40064c4	              0xc9	                                   leave	      3448	ftp.c	FUNCTION_51
0x40064c5	              0xc3	                                     ret	      3448	ftp.c	FUNCTION_51
Curl_ftpsend	DO,0:FOR,1:functions,0:ELSE,1:SWITCH,0:CALL,6:IF,5:WHILE,0	78
0x400734c	              0x55	                                push rbp	      3956	ftp.c	FUNCTION_59
0x400734d	          0x4889e5	                            mov rbp, rsp	      3956	ftp.c	FUNCTION_59
0x4007350	    0x4881ec400400	                          sub rsp, 0x440	      3956	ftp.c	FUNCTION_59
0x4007357	    0x4889bdc8fbff	            mov qword [rbp - 0x438], rdi	      3956	ftp.c	FUNCTION_59
0x400735e	    0x4889b5c0fbff	            mov qword [rbp - 0x440], rsi	      3956	ftp.c	FUNCTION_59
0x4007365	    0x64488b042528	                mov rax, qword fs:[0x28]	      3956	ftp.c	FUNCTION_59
0x400736e	        0x488945f8	                mov qword [rbp - 8], rax	      3956	ftp.c	FUNCTION_59
0x4007372	            0x31c0	                            xor eax, eax	      3956	ftp.c	FUNCTION_59
0x4007374	    0x488d85f0fbff	                  lea rax, [rbp - 0x410]	      3961	ftp.c	FUNCTION_59
0x400737b	    0x488985e8fbff	            mov qword [rbp - 0x418], rax	      3961	ftp.c	FUNCTION_59
0x4007382	    0xc785d4fbffff	              mov dword [rbp - 0x42c], 0	      3962	ftp.c	FUNCTION_59
0x400738c	    0x488b85c0fbff	            mov rax, qword [rbp - 0x440]	      3967	ftp.c	FUNCTION_59	CALL_1
0x4007393	          0x4889c7	                            mov rdi, rax	      3967	ftp.c	FUNCTION_59	CALL_1
0x4007396	      0xe800000000	                          call 0x400739b	      3967	ftp.c	FUNCTION_59	CALL_1
0x400739b	    0x488985e0fbff	            mov qword [rbp - 0x420], rax	      3967	ftp.c	FUNCTION_59	CALL_1
0x40073a2	    0x4881bde0fbff	         cmp qword [rbp - 0x420], 0x3fd 	      3968	ftp.c	FUNCTION_59	IF_1
0x40073ad	            0x760a	                           jbe 0x40073b9	      3968	ftp.c	FUNCTION_59	IF_1
0x40073af	      0xb82b000000	                           mov eax, 0x2b	      3969	ftp.c	FUNCTION_59	IF_1
0x40073b4	      0xe916010000	                           jmp 0x40074cf	      3969	ftp.c	FUNCTION_59	IF_1
0x40073b9	    0x488d95f0fbff	                  lea rdx, [rbp - 0x410]	      3971	ftp.c	FUNCTION_59	CALL_2
0x40073c0	    0x488b85e0fbff	            mov rax, qword [rbp - 0x420]	      3971	ftp.c	FUNCTION_59	CALL_2
0x40073c7	          0x4801d0	                            add rax, rdx	      3971	ftp.c	FUNCTION_59	CALL_2
0x40073ca	      0x66c7000d0a	                   mov word [rax], 0xa0d	      3971	ftp.c	FUNCTION_59	CALL_2
0x40073cf	        0xc6400200	                   mov byte [rax + 2], 0	      3971	ftp.c	FUNCTION_59	CALL_2
0x40073d3	    0x488385e0fbff	              add qword [rbp - 0x420], 2	      3972	ftp.c	FUNCTION_59
0x40073db	    0x48c785d8fbff	              mov qword [rbp - 0x428], 0	      3973	ftp.c	FUNCTION_59
0x40073e6	    0xc785d4fbffff	              mov dword [rbp - 0x42c], 0	      3975	ftp.c	FUNCTION_59	CALL_3
0x40073f0	    0x83bdd4fbffff	              cmp dword [rbp - 0x42c], 0	      3977	ftp.c	FUNCTION_59	IF_2
0x40073f7	            0x740b	                            je 0x4007404	      3977	ftp.c	FUNCTION_59	IF_2
0x40073f9	    0x8b85d4fbffff	            mov eax, dword [rbp - 0x42c]	      3978	ftp.c	FUNCTION_59	IF_2
0x40073ff	      0xe9cb000000	                           jmp 0x40074cf	      3978	ftp.c	FUNCTION_59	IF_2
0x4007404	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      3984	ftp.c	FUNCTION_59	FOR_1	CALL_4
0x400740b	    0x8bb058020000	           mov esi, dword [rax + 0x258] 	      3984	ftp.c	FUNCTION_59	FOR_1	CALL_4
0x4007411	    0x488dbdd8fbff	                  lea rdi, [rbp - 0x428]	      3984	ftp.c	FUNCTION_59	FOR_1	CALL_4
0x4007418	    0x488b8de0fbff	            mov rcx, qword [rbp - 0x420]	      3984	ftp.c	FUNCTION_59	FOR_1	CALL_4
0x400741f	    0x488b95e8fbff	            mov rdx, qword [rbp - 0x418]	      3984	ftp.c	FUNCTION_59	FOR_1	CALL_4
0x4007426	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      3984	ftp.c	FUNCTION_59	FOR_1	CALL_4
0x400742d	          0x4989f8	                             mov r8, rdi	      3984	ftp.c	FUNCTION_59	FOR_1	CALL_4
0x4007430	          0x4889c7	                            mov rdi, rax	      3984	ftp.c	FUNCTION_59	FOR_1	CALL_4
0x4007433	      0xe800000000	                          call 0x4007438	      3984	ftp.c	FUNCTION_59	FOR_1	CALL_4
0x4007438	    0x8985d4fbffff	            mov dword [rbp - 0x42c], eax	      3984	ftp.c	FUNCTION_59	FOR_1	CALL_4
0x400743e	    0x83bdd4fbffff	              cmp dword [rbp - 0x42c], 0	      3991	ftp.c	FUNCTION_59	FOR_1	IF_3
0x4007445	            0x757e	                           jne 0x40074c5	      3991	ftp.c	FUNCTION_59	FOR_1	IF_3
0x4007447	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      3994	ftp.c	FUNCTION_59	FOR_1	IF_4
0x400744e	          0x488b00	                    mov rax, qword [rax]	      3994	ftp.c	FUNCTION_59	FOR_1	IF_4
0x4007451	     0xfb680a80700	          movzx eax, byte [rax + 0x7a8] 	      3994	ftp.c	FUNCTION_59	FOR_1	IF_4
0x4007458	            0x84c0	                             test al, al	      3994	ftp.c	FUNCTION_59	FOR_1	IF_4
0x400745a	            0x7435	                            je 0x4007491	      3994	ftp.c	FUNCTION_59	FOR_1	IF_4
0x400745c	    0x488b85d8fbff	            mov rax, qword [rbp - 0x428]	      3995	ftp.c	FUNCTION_59	FOR_1	IF_4	CALL_6
0x4007463	          0x4889c6	                            mov rsi, rax	      3995	ftp.c	FUNCTION_59	FOR_1	IF_4	CALL_6
0x4007466	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      3995	ftp.c	FUNCTION_59	FOR_1	IF_4	CALL_6
0x400746d	          0x488b00	                    mov rax, qword [rax]	      3995	ftp.c	FUNCTION_59	FOR_1	IF_4	CALL_6
0x4007470	    0x488b8dc8fbff	            mov rcx, qword [rbp - 0x438]	      3995	ftp.c	FUNCTION_59	FOR_1	IF_4	CALL_6
0x4007477	    0x488b95e8fbff	            mov rdx, qword [rbp - 0x418]	      3995	ftp.c	FUNCTION_59	FOR_1	IF_4	CALL_6
0x400747e	          0x4989c8	                             mov r8, rcx	      3995	ftp.c	FUNCTION_59	FOR_1	IF_4	CALL_6
0x4007481	          0x4889f1	                            mov rcx, rsi	      3995	ftp.c	FUNCTION_59	FOR_1	IF_4	CALL_6
0x4007484	      0xbe02000000	                              mov esi, 2	      3995	ftp.c	FUNCTION_59	FOR_1	IF_4	CALL_6
0x4007489	          0x4889c7	                            mov rdi, rax	      3995	ftp.c	FUNCTION_59	FOR_1	IF_4	CALL_6
0x400748c	      0xe800000000	                          call 0x4007491	      3995	ftp.c	FUNCTION_59	FOR_1	IF_4	CALL_6
0x4007491	    0x488b95d8fbff	            mov rdx, qword [rbp - 0x428]	      3998	ftp.c	FUNCTION_59	FOR_1	IF_5
0x4007498	    0x488b85e0fbff	            mov rax, qword [rbp - 0x420]	      3998	ftp.c	FUNCTION_59	FOR_1	IF_5
0x400749f	          0x4839c2	                            cmp rdx, rax	      3998	ftp.c	FUNCTION_59	FOR_1	IF_5
0x40074a2	            0x7424	                            je 0x40074c8	      3998	ftp.c	FUNCTION_59	FOR_1	IF_5
0x40074a4	    0x488b85d8fbff	            mov rax, qword [rbp - 0x428]	      3999	ftp.c	FUNCTION_59	FOR_1	IF_5
0x40074ab	    0x482985e0fbff	            sub qword [rbp - 0x420], rax	      3999	ftp.c	FUNCTION_59	FOR_1	IF_5
0x40074b2	    0x488b85d8fbff	            mov rax, qword [rbp - 0x428]	      4000	ftp.c	FUNCTION_59	FOR_1	IF_5
0x40074b9	    0x480185e8fbff	           add qword [rbp - 0x418], rax 	      4000	ftp.c	FUNCTION_59	FOR_1	IF_5
0x40074c0	      0xe93fffffff	                           jmp 0x4007404	      4004	ftp.c	FUNCTION_59	FOR_1	ELSE_1
0x40074c5	              0x90	                                     nop	      3992	ftp.c	FUNCTION_59	FOR_1	IF_3
0x40074c6	            0xeb01	                           jmp 0x40074c9	      3992	ftp.c	FUNCTION_59	FOR_1	IF_3
0x40074c8	              0x90	                                     nop	      4003	ftp.c	FUNCTION_59	FOR_1	ELSE_1
0x40074c9	    0x8b85d4fbffff	            mov eax, dword [rbp - 0x42c]	      4006	ftp.c	FUNCTION_59	ELSE_1
0x40074cf	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4007	ftp.c	FUNCTION_59	ELSE_1
0x40074d3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4007	ftp.c	FUNCTION_59	ELSE_1
0x40074dc	            0x7405	                            je 0x40074e3	      4007	ftp.c	FUNCTION_59	ELSE_1
0x40074de	      0xe800000000	                          call 0x40074e3	      4007	ftp.c	FUNCTION_59	ELSE_1
0x40074e3	              0xc9	                                   leave	      4007	ftp.c	FUNCTION_59	ELSE_1
0x40074e4	              0xc3	                                     ret	      4007	ftp.c	FUNCTION_59	ELSE_1
ftp_do	DO,0:FOR,0:functions,0:ELSE,1:SWITCH,0:CALL,3:IF,4:WHILE,0	55
0x4007289	              0x55	                                push rbp	      3926	ftp.c	FUNCTION_58
0x400728a	          0x4889e5	                            mov rbp, rsp	      3926	ftp.c	FUNCTION_58
0x400728d	        0x4883ec20	                           sub rsp, 0x20	      3926	ftp.c	FUNCTION_58
0x4007291	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3926	ftp.c	FUNCTION_58
0x4007295	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3926	ftp.c	FUNCTION_58
0x4007299	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      3927	ftp.c	FUNCTION_58
0x40072a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3928	ftp.c	FUNCTION_58
0x40072a4	    0x4805b0050000	                          add rax, 0x5b0	      3928	ftp.c	FUNCTION_58
0x40072aa	        0x488945f8	                mov qword [rbp - 8], rax	      3928	ftp.c	FUNCTION_58
0x40072ae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3930	ftp.c	FUNCTION_58
0x40072b2	          0xc60000	                       mov byte [rax], 0	      3930	ftp.c	FUNCTION_58
0x40072b5	        0x488b45f8	                mov rax, qword [rbp - 8]	      3931	ftp.c	FUNCTION_58
0x40072b9	    0xc68099000000	                mov byte [rax + 0x99], 0	      3931	ftp.c	FUNCTION_58
0x40072c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3933	ftp.c	FUNCTION_58	IF_1
0x40072c4	          0x488b00	                    mov rax, qword [rax]	      3933	ftp.c	FUNCTION_58	IF_1
0x40072c7	     0xfb680795000	         movzx eax, byte [rax + 0x5079] 	      3933	ftp.c	FUNCTION_58	IF_1
0x40072ce	            0x84c0	                             test al, al	      3933	ftp.c	FUNCTION_58	IF_1
0x40072d0	            0x7445	                            je 0x4007317	      3933	ftp.c	FUNCTION_58	IF_1
0x40072d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3934	ftp.c	FUNCTION_58	IF_1	CALL_1
0x40072d6	          0x4889c7	                            mov rdi, rax	      3934	ftp.c	FUNCTION_58	IF_1	CALL_1
0x40072d9	      0xe809fbffff	                   call sym.wc_statemach	      3934	ftp.c	FUNCTION_58	IF_1	CALL_1
0x40072de	          0x8945f4	              mov dword [rbp - 0xc], eax	      3934	ftp.c	FUNCTION_58	IF_1	CALL_1
0x40072e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3935	ftp.c	FUNCTION_58	IF_1	IF_2
0x40072e5	          0x488b00	                    mov rax, qword [rax]	      3935	ftp.c	FUNCTION_58	IF_1	IF_2
0x40072e8	    0x8b8008510000	          mov eax, dword [rax + 0x5108] 	      3935	ftp.c	FUNCTION_58	IF_1	IF_2
0x40072ee	          0x83f805	                              cmp eax, 5	      3935	ftp.c	FUNCTION_58	IF_1	IF_2
0x40072f1	            0x7412	                            je 0x4007305	      3935	ftp.c	FUNCTION_58	IF_1	IF_2
0x40072f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3936	ftp.c	FUNCTION_58	IF_1	IF_2
0x40072f7	          0x488b00	                    mov rax, qword [rax]	      3936	ftp.c	FUNCTION_58	IF_1	IF_2
0x40072fa	    0x8b8008510000	          mov eax, dword [rax + 0x5108] 	      3936	ftp.c	FUNCTION_58	IF_1	IF_2
0x4007300	          0x83f807	                              cmp eax, 7	      3935	ftp.c	FUNCTION_58	IF_1	IF_2
0x4007303	            0x7507	                           jne 0x400730c	      3935	ftp.c	FUNCTION_58	IF_1	IF_2
0x4007305	      0xb800000000	                              mov eax, 0	      3938	ftp.c	FUNCTION_58	IF_1	IF_2
0x400730a	            0xeb3e	                           jmp 0x400734a	      3938	ftp.c	FUNCTION_58	IF_1	IF_2
0x400730c	        0x837df400	                cmp dword [rbp - 0xc], 0	      3940	ftp.c	FUNCTION_58	IF_1	IF_3
0x4007310	            0x741f	                            je 0x4007331	      3940	ftp.c	FUNCTION_58	IF_1	IF_3
0x4007312	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3941	ftp.c	FUNCTION_58	IF_1	IF_3
0x4007315	            0xeb33	                           jmp 0x400734a	      3941	ftp.c	FUNCTION_58	IF_1	IF_3
0x4007317	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3944	ftp.c	FUNCTION_58	ELSE_1	CALL_2
0x400731b	          0x4889c7	                            mov rdi, rax	      3944	ftp.c	FUNCTION_58	ELSE_1	CALL_2
0x400731e	      0xe8ac030000	             call sym.ftp_parse_url_path	      3944	ftp.c	FUNCTION_58	ELSE_1	CALL_2
0x4007323	          0x8945f4	              mov dword [rbp - 0xc], eax	      3944	ftp.c	FUNCTION_58	ELSE_1	CALL_2
0x4007326	        0x837df400	                cmp dword [rbp - 0xc], 0	      3945	ftp.c	FUNCTION_58	ELSE_1	IF_4
0x400732a	            0x7405	                            je 0x4007331	      3945	ftp.c	FUNCTION_58	ELSE_1	IF_4
0x400732c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3946	ftp.c	FUNCTION_58	ELSE_1	IF_4
0x400732f	            0xeb19	                           jmp 0x400734a	      3946	ftp.c	FUNCTION_58	ELSE_1	IF_4
0x4007331	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3949	ftp.c	FUNCTION_58	CALL_3
0x4007335	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3949	ftp.c	FUNCTION_58	CALL_3
0x4007339	          0x4889d6	                            mov rsi, rdx	      3949	ftp.c	FUNCTION_58	CALL_3
0x400733c	          0x4889c7	                            mov rdi, rax	      3949	ftp.c	FUNCTION_58	CALL_3
0x400733f	      0xe8400c0000	           call sym.ftp_regular_transfer	      3949	ftp.c	FUNCTION_58	CALL_3
0x4007344	          0x8945f4	              mov dword [rbp - 0xc], eax	      3949	ftp.c	FUNCTION_58	CALL_3
0x4007347	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3951	ftp.c	FUNCTION_58
0x400734a	              0xc9	                                   leave	      3952	ftp.c	FUNCTION_58
0x400734b	              0xc3	                                     ret	      3952	ftp.c	FUNCTION_58
ftp_state_loggedin	DO,0:FOR,0:functions,0:ELSE,1:SWITCH,0:CALL,3:IF,1:WHILE,0	33
0x40048d1	              0x55	                                push rbp	      2503	ftp.c	FUNCTION_41
0x40048d2	          0x4889e5	                            mov rbp, rsp	      2503	ftp.c	FUNCTION_41
0x40048d5	        0x4883ec20	                           sub rsp, 0x20	      2503	ftp.c	FUNCTION_41
0x40048d9	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2503	ftp.c	FUNCTION_41
0x40048dd	    0xc745fc000000	                  mov dword [rbp - 4], 0	      2504	ftp.c	FUNCTION_41
0x40048e4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2506	ftp.c	FUNCTION_41	IF_1
0x40048e8	     0xfb680900200	          movzx eax, byte [rax + 0x290] 	      2506	ftp.c	FUNCTION_41	IF_1
0x40048ef	            0x84c0	                             test al, al	      2506	ftp.c	FUNCTION_41	IF_1
0x40048f1	            0x7444	                            je 0x4004937	      2506	ftp.c	FUNCTION_41	IF_1
0x40048f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2521	ftp.c	FUNCTION_41	IF_1	CALL_1
0x40048f7	    0x4805b0050000	                          add rax, 0x5b0	      2521	ftp.c	FUNCTION_41	IF_1	CALL_1
0x40048fd	      0xba00000000	                              mov edx, 0	      2521	ftp.c	FUNCTION_41	IF_1	CALL_1
0x4004902	    0x488d35000000	                   lea rsi, [0x04004909]	      2521	ftp.c	FUNCTION_41	IF_1	CALL_1
0x4004909	          0x4889c7	                            mov rdi, rax	      2521	ftp.c	FUNCTION_41	IF_1	CALL_1
0x400490c	      0xb800000000	                              mov eax, 0	      2521	ftp.c	FUNCTION_41	IF_1	CALL_1
0x4004911	      0xe800000000	                          call 0x4004916	      2521	ftp.c	FUNCTION_41	IF_1	CALL_1
0x4004916	          0x8945fc	                mov dword [rbp - 4], eax	      2521	ftp.c	FUNCTION_41	IF_1	CALL_1
0x4004919	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2521	ftp.c	FUNCTION_41	IF_1	CALL_1
0x400491d	            0x7405	                            je 0x4004924	      2521	ftp.c	FUNCTION_41	IF_1	CALL_1
0x400491f	          0x8b45fc	                mov eax, dword [rbp - 4]	      2521	ftp.c	FUNCTION_41	IF_1	CALL_1
0x4004922	            0xeb25	                           jmp 0x4004949	      2521	ftp.c	FUNCTION_41	IF_1	CALL_1
0x4004924	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2522	ftp.c	FUNCTION_41	IF_1	CALL_2
0x4004928	      0xbe06000000	                              mov esi, 6	      2522	ftp.c	FUNCTION_41	IF_1	CALL_2
0x400492d	          0x4889c7	                            mov rdi, rax	      2522	ftp.c	FUNCTION_41	IF_1	CALL_2
0x4004930	      0xe842c4ffff	                         call sym._state	      2522	ftp.c	FUNCTION_41	IF_1	CALL_2
0x4004935	            0xeb0f	                           jmp 0x4004946	      2522	ftp.c	FUNCTION_41	IF_1	CALL_2
0x4004937	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2525	ftp.c	FUNCTION_41	ELSE_1	CALL_3
0x400493b	          0x4889c7	                            mov rdi, rax	      2525	ftp.c	FUNCTION_41	ELSE_1	CALL_3
0x400493e	      0xe8efc4ffff	                  call sym.ftp_state_pwd	      2525	ftp.c	FUNCTION_41	ELSE_1	CALL_3
0x4004943	          0x8945fc	                mov dword [rbp - 4], eax	      2525	ftp.c	FUNCTION_41	ELSE_1	CALL_3
0x4004946	          0x8b45fc	                mov eax, dword [rbp - 4]	      2527	ftp.c	FUNCTION_41
0x4004949	              0xc9	                                   leave	      2528	ftp.c	FUNCTION_41
0x400494a	              0xc3	                                     ret	      2528	ftp.c	FUNCTION_41
ftp_done	DO,0:FOR,0:functions,0:ELSE,6:SWITCH,1:CALL,32:IF,26:WHILE,0	455
0x4005b02	              0x55	                                push rbp	      3136	ftp.c	FUNCTION_48
0x4005b03	          0x4889e5	                            mov rbp, rsp	      3136	ftp.c	FUNCTION_48
0x4005b06	              0x53	                                push rbx	      3136	ftp.c	FUNCTION_48
0x4005b07	        0x4883ec78	                           sub rsp, 0x78	      3136	ftp.c	FUNCTION_48
0x4005b0b	        0x48897d88	             mov qword [rbp - 0x78], rdi	      3136	ftp.c	FUNCTION_48
0x4005b0f	          0x897584	             mov dword [rbp - 0x7c], esi	      3136	ftp.c	FUNCTION_48
0x4005b12	            0x89d0	                            mov eax, edx	      3136	ftp.c	FUNCTION_48
0x4005b14	          0x884580	               mov byte [rbp - 0x80], al	      3136	ftp.c	FUNCTION_48
0x4005b17	    0x64488b042528	                mov rax, qword fs:[0x28]	      3136	ftp.c	FUNCTION_48
0x4005b20	        0x488945e8	             mov qword [rbp - 0x18], rax	      3136	ftp.c	FUNCTION_48
0x4005b24	            0x31c0	                            xor eax, eax	      3136	ftp.c	FUNCTION_48
0x4005b26	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3137	ftp.c	FUNCTION_48
0x4005b2a	          0x488b00	                    mov rax, qword [rax]	      3137	ftp.c	FUNCTION_48
0x4005b2d	        0x488945a8	             mov qword [rbp - 0x58], rax	      3137	ftp.c	FUNCTION_48
0x4005b31	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3138	ftp.c	FUNCTION_48
0x4005b35	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      3138	ftp.c	FUNCTION_48
0x4005b3c	        0x488945b0	             mov qword [rbp - 0x50], rax	      3138	ftp.c	FUNCTION_48
0x4005b40	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3139	ftp.c	FUNCTION_48
0x4005b44	    0x4805b0050000	                          add rax, 0x5b0	      3139	ftp.c	FUNCTION_48
0x4005b4a	        0x488945b8	             mov qword [rbp - 0x48], rax	      3139	ftp.c	FUNCTION_48
0x4005b4e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3140	ftp.c	FUNCTION_48
0x4005b52	        0x488945c0	             mov qword [rbp - 0x40], rax	      3140	ftp.c	FUNCTION_48
0x4005b56	    0xc74594000000	               mov dword [rbp - 0x6c], 0	      3143	ftp.c	FUNCTION_48
0x4005b5d	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      3144	ftp.c	FUNCTION_48
0x4005b65	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3145	ftp.c	FUNCTION_48
0x4005b69	    0x488b80985000	          mov rax, qword [rax + 0x5098] 	      3145	ftp.c	FUNCTION_48
0x4005b70	        0x488945c8	             mov qword [rbp - 0x38], rax	      3145	ftp.c	FUNCTION_48
0x4005b74	      0x48837db000	               cmp qword [rbp - 0x50], 0	      3147	ftp.c	FUNCTION_48	IF_1
0x4005b79	            0x750a	                           jne 0x4005b85	      3147	ftp.c	FUNCTION_48	IF_1
0x4005b7b	      0xb800000000	                              mov eax, 0	      3148	ftp.c	FUNCTION_48	IF_1
0x4005b80	      0xe9dc060000	                           jmp 0x4006261	      3148	ftp.c	FUNCTION_48	IF_1
0x4005b85	        0x837d844e	           cmp dword [rbp - 0x7c], 0x4e 	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4005b89	            0x772f	                            ja 0x4005bba	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4005b8b	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4005b8e	    0x488d14850000	                        lea rdx, [rax*4]	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4005b96	    0x488d05000000	                   lea rax, [0x04005b9d]	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4005b9d	          0x8b0402	              mov eax, dword [rdx + rax]	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4005ba0	          0x4863d0	                         movsxd rdx, eax	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4005ba3	    0x488d05000000	                   lea rax, [0x04005baa]	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4005baa	          0x4801d0	                            add rax, rdx	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4005bad	            0xffe0	                                 jmp rax	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4005baf	         0xfb64580	            movzx eax, byte [rbp - 0x80]	      3167	ftp.c	FUNCTION_48	SWITCH_1	IF_2
0x4005bb3	          0x83f001	                              xor eax, 1	      3167	ftp.c	FUNCTION_48	SWITCH_1	IF_2
0x4005bb6	            0x84c0	                             test al, al	      3167	ftp.c	FUNCTION_48	SWITCH_1	IF_2
0x4005bb8	            0x752f	                           jne 0x4005be9	      3167	ftp.c	FUNCTION_48	SWITCH_1	IF_2
0x4005bba	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3175	ftp.c	FUNCTION_48	SWITCH_1
0x4005bbe	    0xc68091000000	                mov byte [rax + 0x91], 0	      3175	ftp.c	FUNCTION_48	SWITCH_1
0x4005bc5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3176	ftp.c	FUNCTION_48	SWITCH_1
0x4005bc9	    0xc68098000000	                mov byte [rax + 0x98], 1	      3176	ftp.c	FUNCTION_48	SWITCH_1
0x4005bd0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3178	ftp.c	FUNCTION_48	SWITCH_1	CALL_1
0x4005bd4	      0xbe01000000	                              mov esi, 1	      3178	ftp.c	FUNCTION_48	SWITCH_1	CALL_1
0x4005bd9	          0x4889c7	                            mov rdi, rax	      3178	ftp.c	FUNCTION_48	SWITCH_1	CALL_1
0x4005bdc	      0xe800000000	                          call 0x4005be1	      3178	ftp.c	FUNCTION_48	SWITCH_1	CALL_1
0x4005be1	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      3179	ftp.c	FUNCTION_48	SWITCH_1
0x4005be4	          0x894594	             mov dword [rbp - 0x6c], eax	      3179	ftp.c	FUNCTION_48	SWITCH_1
0x4005be7	            0xeb01	                           jmp 0x4005bea	      3180	ftp.c	FUNCTION_48	SWITCH_1
0x4005be9	              0x90	                                     nop	      3168	ftp.c	FUNCTION_48	SWITCH_1	IF_2
0x4005bea	    0x488b05000000	            mov rax, qword [0x04005bf1] 	      3184	ftp.c	FUNCTION_48	CALL_2
0x4005bf1	          0x488b00	                    mov rax, qword [rax]	      3184	ftp.c	FUNCTION_48	CALL_2
0x4005bf4	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3184	ftp.c	FUNCTION_48	CALL_2
0x4005bf8	    0x488b92a00000	            mov rdx, qword [rdx + 0xa0] 	      3184	ftp.c	FUNCTION_48	CALL_2
0x4005bff	          0x4889d7	                            mov rdi, rdx	      3184	ftp.c	FUNCTION_48	CALL_2
0x4005c02	            0xffd0	                                call rax	      3184	ftp.c	FUNCTION_48	CALL_2
0x4005c04	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3186	ftp.c	FUNCTION_48	IF_3
0x4005c08	     0xfb680795000	         movzx eax, byte [rax + 0x5079] 	      3186	ftp.c	FUNCTION_48	IF_3
0x4005c0f	            0x84c0	                             test al, al	      3186	ftp.c	FUNCTION_48	IF_3
0x4005c11	            0x746c	                            je 0x4005c7f	      3186	ftp.c	FUNCTION_48	IF_3
0x4005c13	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3187	ftp.c	FUNCTION_48	IF_3	IF_4
0x4005c17	    0x488b80080a00	           mov rax, qword [rax + 0xa08] 	      3187	ftp.c	FUNCTION_48	IF_3	IF_4
0x4005c1e	          0x4885c0	                           test rax, rax	      3187	ftp.c	FUNCTION_48	IF_3	IF_4
0x4005c21	            0x744d	                            je 0x4005c70	      3187	ftp.c	FUNCTION_48	IF_3	IF_4
0x4005c23	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3187	ftp.c	FUNCTION_48	IF_3	IF_4
0x4005c27	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      3187	ftp.c	FUNCTION_48	IF_3	IF_4
0x4005c2e	          0x4885c0	                           test rax, rax	      3187	ftp.c	FUNCTION_48	IF_3	IF_4
0x4005c31	            0x743d	                            je 0x4005c70	      3187	ftp.c	FUNCTION_48	IF_3	IF_4
0x4005c33	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3188	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_3
0x4005c37	      0xbe01000000	                              mov esi, 1	      3188	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_3
0x4005c3c	          0x4889c7	                            mov rdi, rax	      3188	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_3
0x4005c3f	      0xe800000000	                          call 0x4005c44	      3188	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_3
0x4005c44	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3189	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_4
0x4005c48	    0x488b80080a00	           mov rax, qword [rax + 0xa08] 	      3189	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_4
0x4005c4f	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      3189	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_4
0x4005c53	    0x488b92505100	          mov rdx, qword [rdx + 0x5150] 	      3189	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_4
0x4005c5a	          0x4889d7	                            mov rdi, rdx	      3189	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_4
0x4005c5d	            0xffd0	                                call rax	      3189	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_4
0x4005c5f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3190	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_5
0x4005c63	      0xbe00000000	                              mov esi, 0	      3190	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_5
0x4005c68	          0x4889c7	                            mov rdi, rax	      3190	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_5
0x4005c6b	      0xe800000000	                          call 0x4005c70	      3190	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_5
0x4005c70	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3192	ftp.c	FUNCTION_48	IF_3
0x4005c74	    0x48c780d80000	mov qword [rax + 0xd8], 0xffffffffffffffff	      3192	ftp.c	FUNCTION_48	IF_3
0x4005c7f	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      3195	ftp.c	FUNCTION_48	IF_5
0x4005c83	            0x752b	                           jne 0x4005cb0	      3195	ftp.c	FUNCTION_48	IF_5
0x4005c85	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      3197	ftp.c	FUNCTION_48	CALL_6
0x4005c89	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      3197	ftp.c	FUNCTION_48	CALL_6
0x4005c8d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3197	ftp.c	FUNCTION_48	CALL_6
0x4005c91	    0x41b901000000	                              mov r9d, 1	      3197	ftp.c	FUNCTION_48	CALL_6
0x4005c97	    0x41b800000000	                              mov r8d, 0	      3197	ftp.c	FUNCTION_48	CALL_6
0x4005c9d	          0x4889d1	                            mov rcx, rdx	      3197	ftp.c	FUNCTION_48	CALL_6
0x4005ca0	      0xba00000000	                              mov edx, 0	      3197	ftp.c	FUNCTION_48	CALL_6
0x4005ca5	          0x4889c7	                            mov rdi, rax	      3197	ftp.c	FUNCTION_48	CALL_6
0x4005ca8	      0xe800000000	                          call 0x4005cad	      3197	ftp.c	FUNCTION_48	CALL_6
0x4005cad	          0x894594	             mov dword [rbp - 0x6c], eax	      3197	ftp.c	FUNCTION_48	CALL_6
0x4005cb0	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      3198	ftp.c	FUNCTION_48	IF_6
0x4005cb4	            0x7430	                            je 0x4005ce6	      3198	ftp.c	FUNCTION_48	IF_6
0x4005cb6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3201	ftp.c	FUNCTION_48	IF_6
0x4005cba	    0xc68091000000	                mov byte [rax + 0x91], 0	      3201	ftp.c	FUNCTION_48	IF_6
0x4005cc1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3202	ftp.c	FUNCTION_48	IF_6	CALL_7
0x4005cc5	      0xbe01000000	                              mov esi, 1	      3202	ftp.c	FUNCTION_48	IF_6	CALL_7
0x4005cca	          0x4889c7	                            mov rdi, rax	      3202	ftp.c	FUNCTION_48	IF_6	CALL_7
0x4005ccd	      0xe800000000	                          call 0x4005cd2	      3202	ftp.c	FUNCTION_48	IF_6	CALL_7
0x4005cd2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3203	ftp.c	FUNCTION_48	IF_6
0x4005cd6	    0x48c780a00000	               mov qword [rax + 0xa0], 0	      3203	ftp.c	FUNCTION_48	IF_6
0x4005ce1	      0xe93a010000	                           jmp 0x4005e20	      3203	ftp.c	FUNCTION_48	IF_6
0x4005ce6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4005cea	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4005cf1	          0x4885c0	                           test rax, rax	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4005cf4	            0x7415	                            je 0x4005d0b	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4005cf6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4005cfa	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4005d01	          0x4889c7	                            mov rdi, rax	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4005d04	      0xe800000000	                          call 0x4005d09	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4005d09	            0xeb05	                           jmp 0x4005d10	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4005d0b	      0xb800000000	                              mov eax, 0	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4005d10	        0x488945d0	             mov qword [rbp - 0x30], rax	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4005d14	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3207	ftp.c	FUNCTION_48	ELSE_1	CALL_9
0x4005d18	          0x4889c7	                            mov rdi, rax	      3207	ftp.c	FUNCTION_48	ELSE_1	CALL_9
0x4005d1b	      0xe800000000	                          call 0x4005d20	      3207	ftp.c	FUNCTION_48	ELSE_1	CALL_9
0x4005d20	        0x482b45d0	             sub rax, qword [rbp - 0x30]	      3207	ftp.c	FUNCTION_48	ELSE_1	CALL_9
0x4005d24	        0x488945d8	             mov qword [rbp - 0x28], rax	      3207	ftp.c	FUNCTION_48	ELSE_1	CALL_9
0x4005d28	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3208	ftp.c	FUNCTION_48	ELSE_1	IF_7
0x4005d2c	     0xfb680980000	           movzx eax, byte [rax + 0x98] 	      3208	ftp.c	FUNCTION_48	ELSE_1	IF_7
0x4005d33	          0x83f001	                              xor eax, 1	      3208	ftp.c	FUNCTION_48	ELSE_1	IF_7
0x4005d36	            0x84c0	                             test al, al	      3208	ftp.c	FUNCTION_48	ELSE_1	IF_7
0x4005d38	     0xf84c0000000	                            je 0x4005dfe	      3208	ftp.c	FUNCTION_48	ELSE_1	IF_7
0x4005d3e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3209	ftp.c	FUNCTION_48	ELSE_1	IF_7
0x4005d42	    0x8b9078070000	           mov edx, dword [rax + 0x778] 	      3209	ftp.c	FUNCTION_48	ELSE_1	IF_7
0x4005d48	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3209	ftp.c	FUNCTION_48	ELSE_1	IF_7
0x4005d4c	    0x8990a8000000	             mov dword [rax + 0xa8], edx	      3209	ftp.c	FUNCTION_48	ELSE_1	IF_7
0x4005d52	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      3210	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4005d57	            0x743c	                            je 0x4005d95	      3210	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4005d59	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3210	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4005d5d	    0x8b8078070000	           mov eax, dword [rax + 0x778] 	      3210	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4005d63	          0x83f802	                              cmp eax, 2	      3210	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4005d66	            0x742d	                            je 0x4005d95	      3210	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4005d68	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3211	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4005d6c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3211	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4005d70	    0x488990a00000	             mov qword [rax + 0xa0], rdx	      3211	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4005d77	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      3212	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8	IF_9
0x4005d7c	            0x744b	                            je 0x4005dc9	      3212	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8	IF_9
0x4005d7e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3214	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8	IF_9
0x4005d82	    0x488b90a00000	            mov rdx, qword [rax + 0xa0] 	      3214	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8	IF_9
0x4005d89	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3214	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8	IF_9
0x4005d8d	          0x4801d0	                            add rax, rdx	      3214	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8	IF_9
0x4005d90	          0xc60000	                       mov byte [rax], 0	      3214	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8	IF_9
0x4005d93	            0xeb34	                           jmp 0x4005dc9	      3212	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8	IF_9
0x4005d95	    0x488b05000000	            mov rax, qword [0x04005d9c] 	      3218	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_10
0x4005d9c	          0x488b00	                    mov rax, qword [rax]	      3218	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_10
0x4005d9f	    0x488d3d000000	                   lea rdi, [0x04005da6]	      3218	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_10
0x4005da6	            0xffd0	                                call rax	      3218	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_10
0x4005da8	          0x4889c2	                            mov rdx, rax	      3218	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_10
0x4005dab	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3218	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_10
0x4005daf	    0x488990a00000	             mov qword [rax + 0xa0], rdx	      3218	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_10
0x4005db6	    0x488b05000000	            mov rax, qword [0x04005dbd] 	      3219	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_11
0x4005dbd	          0x488b00	                    mov rax, qword [rax]	      3219	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_11
0x4005dc0	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3219	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_11
0x4005dc4	          0x4889d7	                            mov rdi, rdx	      3219	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_11
0x4005dc7	            0xffd0	                                call rax	      3219	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_11
0x4005dc9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3221	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_10
0x4005dcd	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      3221	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_10
0x4005dd4	          0x4885c0	                           test rax, rax	      3221	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_10
0x4005dd7	            0x7447	                            je 0x4005e20	      3221	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_10
0x4005dd9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3222	ftp.c	FUNCTION_48	ELSE_1	IF_7	CALL_12
0x4005ddd	    0x488b90a00000	            mov rdx, qword [rax + 0xa0] 	      3222	ftp.c	FUNCTION_48	ELSE_1	IF_7	CALL_12
0x4005de4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3222	ftp.c	FUNCTION_48	ELSE_1	IF_7	CALL_12
0x4005de8	    0x488d35000000	                   lea rsi, [0x04005def]	      3222	ftp.c	FUNCTION_48	ELSE_1	IF_7	CALL_12
0x4005def	          0x4889c7	                            mov rdi, rax	      3222	ftp.c	FUNCTION_48	ELSE_1	IF_7	CALL_12
0x4005df2	      0xb800000000	                              mov eax, 0	      3222	ftp.c	FUNCTION_48	ELSE_1	IF_7	CALL_12
0x4005df7	      0xe800000000	                          call 0x4005dfc	      3222	ftp.c	FUNCTION_48	ELSE_1	IF_7	CALL_12
0x4005dfc	            0xeb22	                           jmp 0x4005e20	      3222	ftp.c	FUNCTION_48	ELSE_1	IF_7	CALL_12
0x4005dfe	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3225	ftp.c	FUNCTION_48	ELSE_1	ELSE_3
0x4005e02	    0x48c780a00000	               mov qword [rax + 0xa0], 0	      3225	ftp.c	FUNCTION_48	ELSE_1	ELSE_3
0x4005e0d	    0x488b05000000	            mov rax, qword [0x04005e14] 	      3226	ftp.c	FUNCTION_48	ELSE_1	ELSE_3	CALL_13
0x4005e14	          0x488b00	                    mov rax, qword [rax]	      3226	ftp.c	FUNCTION_48	ELSE_1	ELSE_3	CALL_13
0x4005e17	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3226	ftp.c	FUNCTION_48	ELSE_1	ELSE_3	CALL_13
0x4005e1b	          0x4889d7	                            mov rdi, rdx	      3226	ftp.c	FUNCTION_48	ELSE_1	ELSE_3	CALL_13
0x4005e1e	            0xffd0	                                call rax	      3226	ftp.c	FUNCTION_48	ELSE_1	ELSE_3	CALL_13
0x4005e20	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3230	ftp.c	FUNCTION_48	CALL_14
0x4005e24	          0x4889c7	                            mov rdi, rax	      3230	ftp.c	FUNCTION_48	CALL_14
0x4005e27	      0xe835a3ffff	                       call sym.freedirs	      3230	ftp.c	FUNCTION_48	CALL_14
0x4005e2c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3238	ftp.c	FUNCTION_48	IF_11
0x4005e30	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	      3238	ftp.c	FUNCTION_48	IF_11
0x4005e36	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3238	ftp.c	FUNCTION_48	IF_11
0x4005e39	     0xf849e000000	                            je 0x4005edd	      3238	ftp.c	FUNCTION_48	IF_11
0x4005e3f	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4005e43	     0xf8588000000	                           jne 0x4005ed1	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4005e49	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4005e4d	     0xfb680900000	           movzx eax, byte [rax + 0x90] 	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4005e54	            0x84c0	                             test al, al	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4005e56	            0x7479	                            je 0x4005ed1	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4005e58	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4005e5c	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4005e63	          0x4885c0	                           test rax, rax	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4005e66	            0x7e69	                           jle 0x4005ed1	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4005e68	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3241	ftp.c	FUNCTION_48	IF_11	IF_12	CALL_16
0x4005e6c	    0x488d15000000	                   lea rdx, [0x04005e73]	      3241	ftp.c	FUNCTION_48	IF_11	IF_12	CALL_16
0x4005e73	    0x488d35000000	                   lea rsi, [0x04005e7a]	      3241	ftp.c	FUNCTION_48	IF_11	IF_12	CALL_16
0x4005e7a	          0x4889c7	                            mov rdi, rax	      3241	ftp.c	FUNCTION_48	IF_11	IF_12	CALL_16
0x4005e7d	      0xb800000000	                              mov eax, 0	      3241	ftp.c	FUNCTION_48	IF_11	IF_12	CALL_16
0x4005e82	      0xe800000000	                          call 0x4005e87	      3241	ftp.c	FUNCTION_48	IF_11	IF_12	CALL_16
0x4005e87	          0x894594	             mov dword [rbp - 0x6c], eax	      3241	ftp.c	FUNCTION_48	IF_11	IF_12	CALL_16
0x4005e8a	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      3242	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13
0x4005e8e	            0x7441	                            je 0x4005ed1	      3242	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13
0x4005e90	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x4005e93	            0x89c7	                            mov edi, eax	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x4005e95	      0xe800000000	                          call 0x4005e9a	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x4005e9a	          0x4889c2	                            mov rdx, rax	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x4005e9d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x4005ea1	    0x488d35000000	                   lea rsi, [0x04005ea8]	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x4005ea8	          0x4889c7	                            mov rdi, rax	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x4005eab	      0xb800000000	                              mov eax, 0	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x4005eb0	      0xe800000000	                          call 0x4005eb5	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x4005eb5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3245	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13
0x4005eb9	    0xc68091000000	                mov byte [rax + 0x91], 0	      3245	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13
0x4005ec0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3246	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_19
0x4005ec4	      0xbe01000000	                              mov esi, 1	      3246	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_19
0x4005ec9	          0x4889c7	                            mov rdi, rax	      3246	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_19
0x4005ecc	      0xe800000000	                          call 0x4005ed1	      3246	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_19
0x4005ed1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3258	ftp.c	FUNCTION_48	IF_11	CALL_21
0x4005ed5	          0x4889c7	                            mov rdi, rax	      3258	ftp.c	FUNCTION_48	IF_11	CALL_21
0x4005ed8	      0xe835a2ffff	          call sym.close_secondarysocket	      3258	ftp.c	FUNCTION_48	IF_11	CALL_21
0x4005edd	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      3261	ftp.c	FUNCTION_48	IF_15
0x4005ee1	     0xf8579010000	                           jne 0x4006060	      3261	ftp.c	FUNCTION_48	IF_15
0x4005ee7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3261	ftp.c	FUNCTION_48	IF_15
0x4005eeb	          0x8b4018	            mov eax, dword [rax + 0x18] 	      3261	ftp.c	FUNCTION_48	IF_15
0x4005eee	            0x85c0	                           test eax, eax	      3261	ftp.c	FUNCTION_48	IF_15
0x4005ef0	     0xf856a010000	                           jne 0x4006060	      3261	ftp.c	FUNCTION_48	IF_15
0x4005ef6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3261	ftp.c	FUNCTION_48	IF_15
0x4005efa	     0xfb680910000	           movzx eax, byte [rax + 0x91] 	      3261	ftp.c	FUNCTION_48	IF_15
0x4005f01	            0x84c0	                             test al, al	      3261	ftp.c	FUNCTION_48	IF_15
0x4005f03	     0xf8457010000	                            je 0x4006060	      3261	ftp.c	FUNCTION_48	IF_15
0x4005f09	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3262	ftp.c	FUNCTION_48	IF_15
0x4005f0d	         0xfb64020	           movzx eax, byte [rax + 0x20] 	      3262	ftp.c	FUNCTION_48	IF_15
0x4005f11	            0x84c0	                             test al, al	      3261	ftp.c	FUNCTION_48	IF_15
0x4005f13	     0xf8447010000	                            je 0x4006060	      3261	ftp.c	FUNCTION_48	IF_15
0x4005f19	         0xfb64580	            movzx eax, byte [rbp - 0x80]	      3262	ftp.c	FUNCTION_48	IF_15
0x4005f1d	          0x83f001	                              xor eax, 1	      3262	ftp.c	FUNCTION_48	IF_15
0x4005f20	            0x84c0	                             test al, al	      3262	ftp.c	FUNCTION_48	IF_15
0x4005f22	     0xf8438010000	                            je 0x4006060	      3262	ftp.c	FUNCTION_48	IF_15
0x4005f28	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3269	ftp.c	FUNCTION_48	IF_15
0x4005f2c	        0x488b4050	            mov rax, qword [rax + 0x50] 	      3269	ftp.c	FUNCTION_48	IF_15
0x4005f30	        0x488945e0	             mov qword [rbp - 0x20], rax	      3269	ftp.c	FUNCTION_48	IF_15
0x4005f34	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3271	ftp.c	FUNCTION_48	IF_15
0x4005f38	    0x48c7405060ea	         mov qword [rax + 0x50], 0xea60 	      3271	ftp.c	FUNCTION_48	IF_15
0x4005f40	        0x488b5dc0	             mov rbx, qword [rbp - 0x40]	      3272	ftp.c	FUNCTION_48	IF_15	CALL_22
0x4005f44	      0xe800000000	                          call 0x4005f49	      3272	ftp.c	FUNCTION_48	IF_15	CALL_22
0x4005f49	        0x48894340	             mov qword [rbx + 0x40], rax	      3272	ftp.c	FUNCTION_48	IF_15	CALL_22
0x4005f4d	        0x48895348	             mov qword [rbx + 0x48], rdx	      3272	ftp.c	FUNCTION_48	IF_15	CALL_22
0x4005f51	        0x488d5590	                   lea rdx, [rbp - 0x70]	      3274	ftp.c	FUNCTION_48	IF_15	CALL_23
0x4005f55	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      3274	ftp.c	FUNCTION_48	IF_15	CALL_23
0x4005f59	        0x488d4598	                   lea rax, [rbp - 0x68]	      3274	ftp.c	FUNCTION_48	IF_15	CALL_23
0x4005f5d	          0x4889ce	                            mov rsi, rcx	      3274	ftp.c	FUNCTION_48	IF_15	CALL_23
0x4005f60	          0x4889c7	                            mov rdi, rax	      3274	ftp.c	FUNCTION_48	IF_15	CALL_23
0x4005f63	      0xe800000000	                          call 0x4005f68	      3274	ftp.c	FUNCTION_48	IF_15	CALL_23
0x4005f68	          0x894594	             mov dword [rbp - 0x6c], eax	      3274	ftp.c	FUNCTION_48	IF_15	CALL_23
0x4005f6b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3276	ftp.c	FUNCTION_48	IF_15
0x4005f6f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3276	ftp.c	FUNCTION_48	IF_15
0x4005f73	        0x48895050	             mov qword [rax + 0x50], rdx	      3276	ftp.c	FUNCTION_48	IF_15
0x4005f77	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3278	ftp.c	FUNCTION_48	IF_15	IF_16
0x4005f7b	          0x4885c0	                           test rax, rax	      3278	ftp.c	FUNCTION_48	IF_15	IF_16
0x4005f7e	            0x753a	                           jne 0x4005fba	      3278	ftp.c	FUNCTION_48	IF_15	IF_16
0x4005f80	        0x837d941c	           cmp dword [rbp - 0x6c], 0x1c 	      3278	ftp.c	FUNCTION_48	IF_15	IF_16
0x4005f84	            0x7534	                           jne 0x4005fba	      3278	ftp.c	FUNCTION_48	IF_15	IF_16
0x4005f86	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3279	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_24
0x4005f8a	    0x488d35000000	                   lea rsi, [0x04005f91]	      3279	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_24
0x4005f91	          0x4889c7	                            mov rdi, rax	      3279	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_24
0x4005f94	      0xb800000000	                              mov eax, 0	      3279	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_24
0x4005f99	      0xe800000000	                          call 0x4005f9e	      3279	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_24
0x4005f9e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3280	ftp.c	FUNCTION_48	IF_15	IF_16
0x4005fa2	    0xc68091000000	                mov byte [rax + 0x91], 0	      3280	ftp.c	FUNCTION_48	IF_15	IF_16
0x4005fa9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3281	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_25
0x4005fad	      0xbe01000000	                              mov esi, 1	      3281	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_25
0x4005fb2	          0x4889c7	                            mov rdi, rax	      3281	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_25
0x4005fb5	      0xe800000000	                          call 0x4005fba	      3281	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_25
0x4005fba	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      3284	ftp.c	FUNCTION_48	IF_15	IF_17
0x4005fbe	            0x7408	                            je 0x4005fc8	      3284	ftp.c	FUNCTION_48	IF_15	IF_17
0x4005fc0	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      3285	ftp.c	FUNCTION_48	IF_15	IF_17
0x4005fc3	      0xe999020000	                           jmp 0x4006261	      3285	ftp.c	FUNCTION_48	IF_15	IF_17
0x4005fc8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3287	ftp.c	FUNCTION_48	IF_15	IF_18
0x4005fcc	     0xfb680900000	           movzx eax, byte [rax + 0x90] 	      3287	ftp.c	FUNCTION_48	IF_15	IF_18
0x4005fd3	            0x84c0	                             test al, al	      3287	ftp.c	FUNCTION_48	IF_15	IF_18
0x4005fd5	            0x7441	                            je 0x4006018	      3287	ftp.c	FUNCTION_48	IF_15	IF_18
0x4005fd7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3287	ftp.c	FUNCTION_48	IF_15	IF_18
0x4005fdb	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      3287	ftp.c	FUNCTION_48	IF_15	IF_18
0x4005fe2	          0x4885c0	                           test rax, rax	      3287	ftp.c	FUNCTION_48	IF_15	IF_18
0x4005fe5	            0x7e31	                           jle 0x4006018	      3287	ftp.c	FUNCTION_48	IF_15	IF_18
0x4005fe7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3290	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_26
0x4005feb	    0x488d35000000	                   lea rsi, [0x04005ff2]	      3290	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_26
0x4005ff2	          0x4889c7	                            mov rdi, rax	      3290	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_26
0x4005ff5	      0xb800000000	                              mov eax, 0	      3290	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_26
0x4005ffa	      0xe800000000	                          call 0x4005fff	      3290	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_26
0x4005fff	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3291	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_27
0x4006003	      0xbe01000000	                              mov esi, 1	      3291	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_27
0x4006008	          0x4889c7	                            mov rdi, rax	      3291	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_27
0x400600b	      0xe800000000	                          call 0x4006010	      3291	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_27
0x4006010	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      3292	ftp.c	FUNCTION_48	IF_15	IF_18
0x4006013	      0xe949020000	                           jmp 0x4006261	      3292	ftp.c	FUNCTION_48	IF_15	IF_18
0x4006018	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3295	ftp.c	FUNCTION_48	IF_15	IF_19
0x400601c	     0xfb680900000	           movzx eax, byte [rax + 0x90] 	      3295	ftp.c	FUNCTION_48	IF_15	IF_19
0x4006023	          0x83f001	                              xor eax, 1	      3295	ftp.c	FUNCTION_48	IF_15	IF_19
0x4006026	            0x84c0	                             test al, al	      3295	ftp.c	FUNCTION_48	IF_15	IF_19
0x4006028	            0x7436	                            je 0x4006060	      3295	ftp.c	FUNCTION_48	IF_15	IF_19
0x400602a	          0x8b4590	             mov eax, dword [rbp - 0x70]	      3297	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20
0x400602d	      0x3de2000000	                           cmp eax, 0xe2	      3297	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20
0x4006032	            0x742c	                            je 0x4006060	      3297	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20
0x4006034	          0x8b4590	             mov eax, dword [rbp - 0x70]	      3297	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20
0x4006037	      0x3dfa000000	                           cmp eax, 0xfa	      3297	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20
0x400603c	            0x7422	                            je 0x4006060	      3297	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20
0x400603e	          0x8b5590	             mov edx, dword [rbp - 0x70]	      3298	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20	CALL_28
0x4006041	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3298	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20	CALL_28
0x4006045	    0x488d35000000	                   lea rsi, [0x0400604c]	      3298	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20	CALL_28
0x400604c	          0x4889c7	                            mov rdi, rax	      3298	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20	CALL_28
0x400604f	      0xb800000000	                              mov eax, 0	      3298	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20	CALL_28
0x4006054	      0xe800000000	                          call 0x4006059	      3298	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20	CALL_28
0x4006059	    0xc74594120000	           mov dword [rbp - 0x6c], 0x12 	      3299	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20
0x4006060	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      3304	ftp.c	FUNCTION_48	IF_21
0x4006064	     0xf859a010000	                           jne 0x4006204	      3304	ftp.c	FUNCTION_48	IF_21
0x400606a	        0x807d8000	                cmp byte [rbp - 0x80], 0	      3304	ftp.c	FUNCTION_48	IF_21
0x400606e	     0xf8590010000	                           jne 0x4006204	      3304	ftp.c	FUNCTION_48	IF_21
0x4006074	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3308	ftp.c	FUNCTION_48	ELSE_4	IF_22
0x4006078	     0xfb680a20700	          movzx eax, byte [rax + 0x7a2] 	      3308	ftp.c	FUNCTION_48	ELSE_4	IF_22
0x400607f	            0x84c0	                             test al, al	      3308	ftp.c	FUNCTION_48	ELSE_4	IF_22
0x4006081	     0xf8491000000	                            je 0x4006118	      3308	ftp.c	FUNCTION_48	ELSE_4	IF_22
0x4006087	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3309	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x400608b	    0x488b80d05000	          mov rax, qword [rax + 0x50d0] 	      3309	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x4006092	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      3309	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x4006096	     0xf8468010000	                            je 0x4006204	      3309	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x400609c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3310	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060a0	    0x488b90d05000	          mov rdx, qword [rax + 0x50d0] 	      3310	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060a7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3310	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060ab	          0x488b00	                    mov rax, qword [rax]	      3310	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060ae	          0x488b00	                    mov rax, qword [rax]	      3310	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060b1	          0x4839c2	                            cmp rdx, rax	      3309	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060b4	     0xf844a010000	                            je 0x4006204	      3309	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060ba	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3311	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060be	     0xfb680720500	          movzx eax, byte [rax + 0x572] 	      3311	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060c5	          0x83f001	                              xor eax, 1	      3311	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060c8	            0x84c0	                             test al, al	      3310	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060ca	     0xf8434010000	                            je 0x4006204	      3310	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060d0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3312	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060d4	          0x8b4018	            mov eax, dword [rax + 0x18] 	      3312	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060d7	            0x85c0	                           test eax, eax	      3311	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060d9	     0xf8525010000	                           jne 0x4006204	      3311	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060df	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3313	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23	CALL_29
0x40060e3	    0x488b88d05000	          mov rcx, qword [rax + 0x50d0] 	      3313	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23	CALL_29
0x40060ea	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3315	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060ee	          0x488b00	                    mov rax, qword [rax]	      3315	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060f1	          0x488b10	                    mov rdx, qword [rax]	      3313	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23	CALL_29
0x40060f4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3313	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23	CALL_29
0x40060f8	    0x488d35000000	                   lea rsi, [0x040060ff]	      3313	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23	CALL_29
0x40060ff	          0x4889c7	                            mov rdi, rax	      3313	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23	CALL_29
0x4006102	      0xb800000000	                              mov eax, 0	      3313	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23	CALL_29
0x4006107	      0xe800000000	                          call 0x400610c	      3313	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23	CALL_29
0x400610c	    0xc74594120000	           mov dword [rbp - 0x6c], 0x12 	      3316	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x4006113	      0xe9ec000000	                           jmp 0x4006204	      3316	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x4006118	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3320	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x400611c	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      3320	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006123	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      3320	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006127	     0xf8487000000	                            je 0x40061b4	      3320	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x400612d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3321	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006131	    0x488b90c00000	            mov rdx, qword [rax + 0xc0] 	      3321	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006138	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3321	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x400613c	          0x488b00	                    mov rax, qword [rax]	      3321	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x400613f	          0x488b00	                    mov rax, qword [rax]	      3321	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006142	          0x4839c2	                            cmp rdx, rax	      3320	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006145	            0x746d	                            je 0x40061b4	      3320	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006147	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3327	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x400614b	    0x488b90c00000	            mov rdx, qword [rax + 0xc0] 	      3327	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006152	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3327	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006156	    0x488b80885000	          mov rax, qword [rax + 0x5088] 	      3327	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x400615d	          0x4801c2	                            add rdx, rax	      3327	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006160	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3328	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006164	          0x488b00	                    mov rax, qword [rax]	      3328	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006167	          0x488b00	                    mov rax, qword [rax]	      3328	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x400616a	          0x4839c2	                            cmp rdx, rax	      3321	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x400616d	            0x7445	                            je 0x40061b4	      3321	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x400616f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3330	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006173	    0x488b90d00000	            mov rdx, qword [rax + 0xd0] 	      3330	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x400617a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3330	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x400617e	          0x488b00	                    mov rax, qword [rax]	      3330	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006181	          0x488b00	                    mov rax, qword [rax]	      3330	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006184	          0x4839c2	                            cmp rdx, rax	      3328	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006187	            0x742b	                            je 0x40061b4	      3328	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006189	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3332	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x400618d	          0x488b00	                    mov rax, qword [rax]	      3332	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006190	          0x488b10	                    mov rdx, qword [rax]	      3331	ftp.c	FUNCTION_48	ELSE_5	IF_24	CALL_30
0x4006193	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3331	ftp.c	FUNCTION_48	ELSE_5	IF_24	CALL_30
0x4006197	    0x488d35000000	                   lea rsi, [0x0400619e]	      3331	ftp.c	FUNCTION_48	ELSE_5	IF_24	CALL_30
0x400619e	          0x4889c7	                            mov rdi, rax	      3331	ftp.c	FUNCTION_48	ELSE_5	IF_24	CALL_30
0x40061a1	      0xb800000000	                              mov eax, 0	      3331	ftp.c	FUNCTION_48	ELSE_5	IF_24	CALL_30
0x40061a6	      0xe800000000	                          call 0x40061ab	      3331	ftp.c	FUNCTION_48	ELSE_5	IF_24	CALL_30
0x40061ab	    0xc74594120000	           mov dword [rbp - 0x6c], 0x12 	      3333	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x40061b2	            0xeb50	                           jmp 0x4006204	      3333	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x40061b4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3335	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x40061b8	     0xfb680900000	           movzx eax, byte [rax + 0x90] 	      3335	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x40061bf	          0x83f001	                              xor eax, 1	      3335	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x40061c2	            0x84c0	                             test al, al	      3335	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x40061c4	            0x743e	                            je 0x4006204	      3335	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x40061c6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3336	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x40061ca	          0x488b00	                    mov rax, qword [rax]	      3336	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x40061cd	          0x488b00	                    mov rax, qword [rax]	      3336	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x40061d0	          0x4885c0	                           test rax, rax	      3335	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x40061d3	            0x752f	                           jne 0x4006204	      3335	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x40061d5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3337	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x40061d9	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      3337	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x40061e0	          0x4885c0	                           test rax, rax	      3336	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x40061e3	            0x7e1f	                           jle 0x4006204	      3336	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x40061e5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3338	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25	CALL_31
0x40061e9	    0x488d35000000	                   lea rsi, [0x040061f0]	      3338	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25	CALL_31
0x40061f0	          0x4889c7	                            mov rdi, rax	      3338	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25	CALL_31
0x40061f3	      0xb800000000	                              mov eax, 0	      3338	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25	CALL_31
0x40061f8	      0xe800000000	                          call 0x40061fd	      3338	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25	CALL_31
0x40061fd	    0xc74594130000	           mov dword [rbp - 0x6c], 0x13 	      3339	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x4006204	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3344	ftp.c	FUNCTION_48
0x4006208	    0xc74018000000	               mov dword [rax + 0x18], 0	      3344	ftp.c	FUNCTION_48
0x400620f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3345	ftp.c	FUNCTION_48
0x4006213	    0xc68090000000	                mov byte [rax + 0x90], 0	      3345	ftp.c	FUNCTION_48
0x400621a	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      3348	ftp.c	FUNCTION_48	IF_26
0x400621e	            0x753e	                           jne 0x400625e	      3348	ftp.c	FUNCTION_48	IF_26
0x4006220	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      3348	ftp.c	FUNCTION_48	IF_26
0x4006224	            0x7538	                           jne 0x400625e	      3348	ftp.c	FUNCTION_48	IF_26
0x4006226	         0xfb64580	            movzx eax, byte [rbp - 0x80]	      3348	ftp.c	FUNCTION_48	IF_26
0x400622a	          0x83f001	                              xor eax, 1	      3348	ftp.c	FUNCTION_48	IF_26
0x400622d	            0x84c0	                             test al, al	      3348	ftp.c	FUNCTION_48	IF_26
0x400622f	            0x742d	                            je 0x400625e	      3348	ftp.c	FUNCTION_48	IF_26
0x4006231	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3348	ftp.c	FUNCTION_48	IF_26
0x4006235	    0x488b80800500	           mov rax, qword [rax + 0x580] 	      3348	ftp.c	FUNCTION_48	IF_26
0x400623c	          0x4885c0	                           test rax, rax	      3348	ftp.c	FUNCTION_48	IF_26
0x400623f	            0x741d	                            je 0x400625e	      3348	ftp.c	FUNCTION_48	IF_26
0x4006241	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3349	ftp.c	FUNCTION_48	CALL_32
0x4006245	    0x488b90800500	           mov rdx, qword [rax + 0x580] 	      3349	ftp.c	FUNCTION_48	CALL_32
0x400624c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3349	ftp.c	FUNCTION_48	CALL_32
0x4006250	          0x4889d6	                            mov rsi, rdx	      3349	ftp.c	FUNCTION_48	CALL_32
0x4006253	          0x4889c7	                            mov rdi, rax	      3349	ftp.c	FUNCTION_48	CALL_32
0x4006256	      0xe821000000	                  call sym.ftp_sendquote	      3349	ftp.c	FUNCTION_48	CALL_32
0x400625b	          0x894594	             mov dword [rbp - 0x6c], eax	      3349	ftp.c	FUNCTION_48	CALL_32
0x400625e	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      3351	ftp.c	FUNCTION_48
0x4006261	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      3352	ftp.c	FUNCTION_48
0x4006265	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3352	ftp.c	FUNCTION_48
0x400626e	            0x7405	                            je 0x4006275	      3352	ftp.c	FUNCTION_48
0x4006270	      0xe800000000	                          call 0x4006275	      3352	ftp.c	FUNCTION_48
0x4006275	        0x4883c478	                           add rsp, 0x78	      3352	ftp.c	FUNCTION_48
0x4006279	              0x5b	                                 pop rbx	      3352	ftp.c	FUNCTION_48
0x400627a	              0x5d	                                 pop rbp	      3352	ftp.c	FUNCTION_48
0x400627b	              0xc3	                                     ret	      3352	ftp.c	FUNCTION_48
ftp_disconnect	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,7:IF,3:WHILE,0	66
0x40075b8	              0x55	                                push rbp	      4050	ftp.c	FUNCTION_61
0x40075b9	          0x4889e5	                            mov rbp, rsp	      4050	ftp.c	FUNCTION_61
0x40075bc	        0x4883ec30	                           sub rsp, 0x30	      4050	ftp.c	FUNCTION_61
0x40075c0	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4050	ftp.c	FUNCTION_61
0x40075c4	            0x89f0	                            mov eax, esi	      4050	ftp.c	FUNCTION_61
0x40075c6	          0x8845d4	               mov byte [rbp - 0x2c], al	      4050	ftp.c	FUNCTION_61
0x40075c9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4051	ftp.c	FUNCTION_61
0x40075cd	    0x4805b0050000	                          add rax, 0x5b0	      4051	ftp.c	FUNCTION_61
0x40075d3	        0x488945e8	             mov qword [rbp - 0x18], rax	      4051	ftp.c	FUNCTION_61
0x40075d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4052	ftp.c	FUNCTION_61
0x40075db	        0x488945f0	             mov qword [rbp - 0x10], rax	      4052	ftp.c	FUNCTION_61
0x40075df	        0x807dd400	                cmp byte [rbp - 0x2c], 0	      4061	ftp.c	FUNCTION_61	IF_1
0x40075e3	            0x740b	                            je 0x40075f0	      4061	ftp.c	FUNCTION_61	IF_1
0x40075e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4062	ftp.c	FUNCTION_61	IF_1
0x40075e9	    0xc68091000000	                mov byte [rax + 0x91], 0	      4062	ftp.c	FUNCTION_61	IF_1
0x40075f0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4065	ftp.c	FUNCTION_61	CALL_1
0x40075f4	          0x4889c7	                            mov rdi, rax	      4065	ftp.c	FUNCTION_61	CALL_1
0x40075f7	      0xe8e9feffff	                       call sym.ftp_quit	      4065	ftp.c	FUNCTION_61	CALL_1
0x40075fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4067	ftp.c	FUNCTION_61	IF_2
0x4007600	        0x488b4070	            mov rax, qword [rax + 0x70] 	      4067	ftp.c	FUNCTION_61	IF_2
0x4007604	          0x4885c0	                           test rax, rax	      4067	ftp.c	FUNCTION_61	IF_2
0x4007607	            0x7455	                            je 0x400765e	      4067	ftp.c	FUNCTION_61	IF_2
0x4007609	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4068	ftp.c	FUNCTION_61	IF_2
0x400760d	          0x488b00	                    mov rax, qword [rax]	      4068	ftp.c	FUNCTION_61	IF_2
0x4007610	        0x488945f8	                mov qword [rbp - 8], rax	      4068	ftp.c	FUNCTION_61	IF_2
0x4007614	        0x488b45f8	                mov rax, qword [rbp - 8]	      4069	ftp.c	FUNCTION_61	IF_2	IF_3
0x4007618	    0x488b90705000	          mov rdx, qword [rax + 0x5070] 	      4069	ftp.c	FUNCTION_61	IF_2	IF_3
0x400761f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4069	ftp.c	FUNCTION_61	IF_2	IF_3
0x4007623	        0x488b4070	            mov rax, qword [rax + 0x70] 	      4069	ftp.c	FUNCTION_61	IF_2	IF_3
0x4007627	          0x4839c2	                            cmp rdx, rax	      4069	ftp.c	FUNCTION_61	IF_2	IF_3
0x400762a	            0x750f	                           jne 0x400763b	      4069	ftp.c	FUNCTION_61	IF_2	IF_3
0x400762c	        0x488b45f8	                mov rax, qword [rbp - 8]	      4070	ftp.c	FUNCTION_61	IF_2	IF_3
0x4007630	    0x48c780705000	            mov qword [rax + 0x5070], 0 	      4070	ftp.c	FUNCTION_61	IF_2	IF_3
0x400763b	    0x488b05000000	            mov rax, qword [0x04007642] 	      4072	ftp.c	FUNCTION_61	IF_2	CALL_2
0x4007642	          0x488b00	                    mov rax, qword [rax]	      4072	ftp.c	FUNCTION_61	IF_2	CALL_2
0x4007645	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4072	ftp.c	FUNCTION_61	IF_2	CALL_2
0x4007649	        0x488b5270	            mov rdx, qword [rdx + 0x70] 	      4072	ftp.c	FUNCTION_61	IF_2	CALL_2
0x400764d	          0x4889d7	                            mov rdi, rdx	      4072	ftp.c	FUNCTION_61	IF_2	CALL_2
0x4007650	            0xffd0	                                call rax	      4072	ftp.c	FUNCTION_61	IF_2	CALL_2
0x4007652	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4073	ftp.c	FUNCTION_61	IF_2
0x4007656	    0x48c740700000	               mov qword [rax + 0x70], 0	      4073	ftp.c	FUNCTION_61	IF_2
0x400765e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4076	ftp.c	FUNCTION_61	CALL_3
0x4007662	          0x4889c7	                            mov rdi, rax	      4076	ftp.c	FUNCTION_61	CALL_3
0x4007665	      0xe8f78affff	                       call sym.freedirs	      4076	ftp.c	FUNCTION_61	CALL_3
0x400766a	    0x488b05000000	            mov rax, qword [0x04007671] 	      4077	ftp.c	FUNCTION_61	CALL_4
0x4007671	          0x488b00	                    mov rax, qword [rax]	      4077	ftp.c	FUNCTION_61	CALL_4
0x4007674	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4077	ftp.c	FUNCTION_61	CALL_4
0x4007678	    0x488b92a00000	            mov rdx, qword [rdx + 0xa0] 	      4077	ftp.c	FUNCTION_61	CALL_4
0x400767f	          0x4889d7	                            mov rdi, rdx	      4077	ftp.c	FUNCTION_61	CALL_4
0x4007682	            0xffd0	                                call rax	      4077	ftp.c	FUNCTION_61	CALL_4
0x4007684	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4078	ftp.c	FUNCTION_61
0x4007688	    0x48c780a00000	               mov qword [rax + 0xa0], 0	      4078	ftp.c	FUNCTION_61
0x4007693	    0x488b05000000	            mov rax, qword [0x0400769a] 	      4079	ftp.c	FUNCTION_61	CALL_5
0x400769a	          0x488b00	                    mov rax, qword [rax]	      4079	ftp.c	FUNCTION_61	CALL_5
0x400769d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4079	ftp.c	FUNCTION_61	CALL_5
0x40076a1	    0x488b92d00000	            mov rdx, qword [rdx + 0xd0] 	      4079	ftp.c	FUNCTION_61	CALL_5
0x40076a8	          0x4889d7	                            mov rdi, rdx	      4079	ftp.c	FUNCTION_61	CALL_5
0x40076ab	            0xffd0	                                call rax	      4079	ftp.c	FUNCTION_61	CALL_5
0x40076ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4080	ftp.c	FUNCTION_61
0x40076b1	    0x48c780d00000	               mov qword [rax + 0xd0], 0	      4080	ftp.c	FUNCTION_61
0x40076bc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4082	ftp.c	FUNCTION_61	CALL_6
0x40076c0	          0x4889c7	                            mov rdi, rax	      4082	ftp.c	FUNCTION_61	CALL_6
0x40076c3	      0xe800000000	                          call 0x40076c8	      4082	ftp.c	FUNCTION_61	CALL_6
0x40076c8	      0xb800000000	                              mov eax, 0	      4088	ftp.c	FUNCTION_61
0x40076cd	              0xc9	                                   leave	      4089	ftp.c	FUNCTION_61
0x40076ce	              0xc3	                                     ret	      4089	ftp.c	FUNCTION_61
ftp_state_use_pasv	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,3:IF,1:WHILE,0	60
0x40020e3	              0x55	                                push rbp	      1315	ftp.c	FUNCTION_19
0x40020e4	          0x4889e5	                            mov rbp, rsp	      1315	ftp.c	FUNCTION_19
0x40020e7	        0x4883ec20	                           sub rsp, 0x20	      1315	ftp.c	FUNCTION_19
0x40020eb	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1315	ftp.c	FUNCTION_19
0x40020ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1316	ftp.c	FUNCTION_19
0x40020f3	    0x4805b0050000	                          add rax, 0x5b0	      1316	ftp.c	FUNCTION_19
0x40020f9	        0x488945f8	                mov qword [rbp - 8], rax	      1316	ftp.c	FUNCTION_19
0x40020fd	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      1317	ftp.c	FUNCTION_19
0x4002104	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1336	ftp.c	FUNCTION_19	IF_1
0x4002108	     0xfb680640300	          movzx eax, byte [rax + 0x364] 	      1336	ftp.c	FUNCTION_19	IF_1
0x400210f	          0x83f001	                              xor eax, 1	      1336	ftp.c	FUNCTION_19	IF_1
0x4002112	            0x84c0	                             test al, al	      1336	ftp.c	FUNCTION_19	IF_1
0x4002114	            0x741a	                            je 0x4002130	      1336	ftp.c	FUNCTION_19	IF_1
0x4002116	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1336	ftp.c	FUNCTION_19	IF_1
0x400211a	     0xfb6805b0300	          movzx eax, byte [rax + 0x35b] 	      1336	ftp.c	FUNCTION_19	IF_1
0x4002121	            0x84c0	                             test al, al	      1336	ftp.c	FUNCTION_19	IF_1
0x4002123	            0x740b	                            je 0x4002130	      1336	ftp.c	FUNCTION_19	IF_1
0x4002125	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1339	ftp.c	FUNCTION_19	IF_1
0x4002129	    0xc68064030000	               mov byte [rax + 0x364], 1	      1339	ftp.c	FUNCTION_19	IF_1
0x4002130	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1342	ftp.c	FUNCTION_19
0x4002134	     0xfb680640300	          movzx eax, byte [rax + 0x364] 	      1342	ftp.c	FUNCTION_19
0x400213b	            0x84c0	                             test al, al	      1342	ftp.c	FUNCTION_19
0x400213d	            0x7407	                            je 0x4002146	      1342	ftp.c	FUNCTION_19
0x400213f	      0xb800000000	                              mov eax, 0	      1342	ftp.c	FUNCTION_19
0x4002144	            0xeb05	                           jmp 0x400214b	      1342	ftp.c	FUNCTION_19
0x4002146	      0xb801000000	                              mov eax, 1	      1342	ftp.c	FUNCTION_19
0x400214b	          0x8945f4	              mov dword [rbp - 0xc], eax	      1342	ftp.c	FUNCTION_19
0x400214e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1344	ftp.c	FUNCTION_19	CALL_1
0x4002151	          0x4863d0	                         movsxd rdx, eax	      1344	ftp.c	FUNCTION_19	CALL_1
0x4002154	          0x4889d0	                            mov rax, rdx	      1344	ftp.c	FUNCTION_19	CALL_1
0x4002157	        0x48c1e002	                              shl rax, 2	      1344	ftp.c	FUNCTION_19	CALL_1
0x400215b	          0x4801d0	                            add rax, rdx	      1344	ftp.c	FUNCTION_19	CALL_1
0x400215e	    0x488d15000000	                   lea rdx, [0x04002165]	      1344	ftp.c	FUNCTION_19	CALL_1
0x4002165	          0x4801c2	                            add rdx, rax	      1344	ftp.c	FUNCTION_19	CALL_1
0x4002168	        0x488b45f8	                mov rax, qword [rbp - 8]	      1344	ftp.c	FUNCTION_19	CALL_1
0x400216c	    0x488d35000000	                   lea rsi, [0x04002173]	      1344	ftp.c	FUNCTION_19	CALL_1
0x4002173	          0x4889c7	                            mov rdi, rax	      1344	ftp.c	FUNCTION_19	CALL_1
0x4002176	      0xb800000000	                              mov eax, 0	      1344	ftp.c	FUNCTION_19	CALL_1
0x400217b	      0xe800000000	                          call 0x4002180	      1344	ftp.c	FUNCTION_19	CALL_1
0x4002180	          0x8945f0	             mov dword [rbp - 0x10], eax	      1344	ftp.c	FUNCTION_19	CALL_1
0x4002183	        0x837df000	               cmp dword [rbp - 0x10], 0	      1344	ftp.c	FUNCTION_19	CALL_1
0x4002187	            0x7405	                            je 0x400218e	      1344	ftp.c	FUNCTION_19	CALL_1
0x4002189	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1344	ftp.c	FUNCTION_19	CALL_1
0x400218c	            0xeb3c	                           jmp 0x40021ca	      1344	ftp.c	FUNCTION_19	CALL_1
0x400218e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1346	ftp.c	FUNCTION_19
0x4002192	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1346	ftp.c	FUNCTION_19
0x4002195	    0x8990b0000000	             mov dword [rax + 0xb0], edx	      1346	ftp.c	FUNCTION_19
0x400219b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1347	ftp.c	FUNCTION_19	CALL_2
0x400219f	      0xbe1e000000	                           mov esi, 0x1e	      1347	ftp.c	FUNCTION_19	CALL_2
0x40021a4	          0x4889c7	                            mov rdi, rax	      1347	ftp.c	FUNCTION_19	CALL_2
0x40021a7	      0xe8cbebffff	                         call sym._state	      1347	ftp.c	FUNCTION_19	CALL_2
0x40021ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1348	ftp.c	FUNCTION_19	CALL_3
0x40021b0	          0x488b00	                    mov rax, qword [rax]	      1348	ftp.c	FUNCTION_19	CALL_3
0x40021b3	    0x488d35000000	                   lea rsi, [0x040021ba]	      1348	ftp.c	FUNCTION_19	CALL_3
0x40021ba	          0x4889c7	                            mov rdi, rax	      1348	ftp.c	FUNCTION_19	CALL_3
0x40021bd	      0xb800000000	                              mov eax, 0	      1348	ftp.c	FUNCTION_19	CALL_3
0x40021c2	      0xe800000000	                          call 0x40021c7	      1348	ftp.c	FUNCTION_19	CALL_3
0x40021c7	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1350	ftp.c	FUNCTION_19
0x40021ca	              0xc9	                                   leave	      1351	ftp.c	FUNCTION_19
0x40021cb	              0xc3	                                     ret	      1351	ftp.c	FUNCTION_19
ftp_pasv_verbose	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,2:IF,0:WHILE,0	33
0x40064c6	              0x55	                                push rbp	      3465	ftp.c	FUNCTION_52
0x40064c7	          0x4889e5	                            mov rbp, rsp	      3465	ftp.c	FUNCTION_52
0x40064ca	    0x4881ec300100	                          sub rsp, 0x130	      3465	ftp.c	FUNCTION_52
0x40064d1	    0x4889bde8feff	            mov qword [rbp - 0x118], rdi	      3465	ftp.c	FUNCTION_52
0x40064d8	    0x4889b5e0feff	            mov qword [rbp - 0x120], rsi	      3465	ftp.c	FUNCTION_52
0x40064df	    0x488995d8feff	            mov qword [rbp - 0x128], rdx	      3465	ftp.c	FUNCTION_52
0x40064e6	    0x898dd4feffff	            mov dword [rbp - 0x12c], ecx	      3465	ftp.c	FUNCTION_52
0x40064ec	    0x64488b042528	                mov rax, qword fs:[0x28]	      3465	ftp.c	FUNCTION_52
0x40064f5	        0x488945f8	                mov qword [rbp - 8], rax	      3465	ftp.c	FUNCTION_52
0x40064f9	            0x31c0	                            xor eax, eax	      3465	ftp.c	FUNCTION_52
0x40064fb	    0x488d8df0feff	                  lea rcx, [rbp - 0x110]	      3467	ftp.c	FUNCTION_52	CALL_1
0x4006502	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      3467	ftp.c	FUNCTION_52	CALL_1
0x4006509	      0xba00010000	                          mov edx, 0x100	      3467	ftp.c	FUNCTION_52	CALL_1
0x400650e	          0x4889ce	                            mov rsi, rcx	      3467	ftp.c	FUNCTION_52	CALL_1
0x4006511	          0x4889c7	                            mov rdi, rax	      3467	ftp.c	FUNCTION_52	CALL_1
0x4006514	      0xe800000000	                          call 0x4006519	      3467	ftp.c	FUNCTION_52	CALL_1
0x4006519	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      3468	ftp.c	FUNCTION_52	CALL_2
0x4006520	          0x488b00	                    mov rax, qword [rax]	      3468	ftp.c	FUNCTION_52	CALL_2
0x4006523	    0x8bb5d4feffff	            mov esi, dword [rbp - 0x12c]	      3468	ftp.c	FUNCTION_52	CALL_2
0x4006529	    0x488d8df0feff	                  lea rcx, [rbp - 0x110]	      3468	ftp.c	FUNCTION_52	CALL_2
0x4006530	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      3468	ftp.c	FUNCTION_52	CALL_2
0x4006537	          0x4189f0	                            mov r8d, esi	      3468	ftp.c	FUNCTION_52	CALL_2
0x400653a	    0x488d35000000	                   lea rsi, [0x04006541]	      3468	ftp.c	FUNCTION_52	CALL_2
0x4006541	          0x4889c7	                            mov rdi, rax	      3468	ftp.c	FUNCTION_52	CALL_2
0x4006544	      0xb800000000	                              mov eax, 0	      3468	ftp.c	FUNCTION_52	CALL_2
0x4006549	      0xe800000000	                          call 0x400654e	      3468	ftp.c	FUNCTION_52	CALL_2
0x400654e	              0x90	                                     nop	      3469	ftp.c	FUNCTION_52
0x400654f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3469	ftp.c	FUNCTION_52
0x4006553	    0x644833042528	                xor rax, qword fs:[0x28]	      3469	ftp.c	FUNCTION_52
0x400655c	            0x7405	                            je 0x4006563	      3469	ftp.c	FUNCTION_52
0x400655e	      0xe800000000	                          call 0x4006563	      3469	ftp.c	FUNCTION_52
0x4006563	              0xc9	                                   leave	      3469	ftp.c	FUNCTION_52
0x4006564	              0xc3	                                     ret	      3469	ftp.c	FUNCTION_52
ftp_regular_transfer	DO,0:FOR,0:functions,0:ELSE,1:SWITCH,0:CALL,7:IF,3:WHILE,0	73
0x4007f84	              0x55	                                push rbp	      4348	ftp.c	FUNCTION_65
0x4007f85	          0x4889e5	                            mov rbp, rsp	      4348	ftp.c	FUNCTION_65
0x4007f88	        0x4883ec30	                           sub rsp, 0x30	      4348	ftp.c	FUNCTION_65
0x4007f8c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4348	ftp.c	FUNCTION_65
0x4007f90	        0x488975d0	             mov qword [rbp - 0x30], rsi	      4348	ftp.c	FUNCTION_65
0x4007f94	    0x64488b042528	                mov rax, qword fs:[0x28]	      4348	ftp.c	FUNCTION_65
0x4007f9d	        0x488945f8	                mov qword [rbp - 8], rax	      4348	ftp.c	FUNCTION_65
0x4007fa1	            0x31c0	                            xor eax, eax	      4348	ftp.c	FUNCTION_65
0x4007fa3	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      4349	ftp.c	FUNCTION_65
0x4007faa	        0xc645e300	                mov byte [rbp - 0x1d], 0	      4350	ftp.c	FUNCTION_65
0x4007fae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4351	ftp.c	FUNCTION_65
0x4007fb2	          0x488b00	                    mov rax, qword [rax]	      4351	ftp.c	FUNCTION_65
0x4007fb5	        0x488945e8	             mov qword [rbp - 0x18], rax	      4351	ftp.c	FUNCTION_65
0x4007fb9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4352	ftp.c	FUNCTION_65
0x4007fbd	    0x4805b0050000	                          add rax, 0x5b0	      4352	ftp.c	FUNCTION_65
0x4007fc3	        0x488945f0	             mov qword [rbp - 0x10], rax	      4352	ftp.c	FUNCTION_65
0x4007fc7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4353	ftp.c	FUNCTION_65
0x4007fcb	    0x48c780c00000	mov qword [rax + 0xc0], 0xffffffffffffffff	      4353	ftp.c	FUNCTION_65
0x4007fd6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4355	ftp.c	FUNCTION_65	CALL_1
0x4007fda	      0xbe00000000	                              mov esi, 0	      4355	ftp.c	FUNCTION_65	CALL_1
0x4007fdf	          0x4889c7	                            mov rdi, rax	      4355	ftp.c	FUNCTION_65	CALL_1
0x4007fe2	      0xe800000000	                          call 0x4007fe7	      4355	ftp.c	FUNCTION_65	CALL_1
0x4007fe7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4356	ftp.c	FUNCTION_65	CALL_2
0x4007feb	      0xbe00000000	                              mov esi, 0	      4356	ftp.c	FUNCTION_65	CALL_2
0x4007ff0	          0x4889c7	                            mov rdi, rax	      4356	ftp.c	FUNCTION_65	CALL_2
0x4007ff3	      0xe800000000	                          call 0x4007ff8	      4356	ftp.c	FUNCTION_65	CALL_2
0x4007ff8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4357	ftp.c	FUNCTION_65	CALL_3
0x4007ffc	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      4357	ftp.c	FUNCTION_65	CALL_3
0x4008003	          0x4889c7	                            mov rdi, rax	      4357	ftp.c	FUNCTION_65	CALL_3
0x4008006	      0xe800000000	                          call 0x400800b	      4357	ftp.c	FUNCTION_65	CALL_3
0x400800b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4358	ftp.c	FUNCTION_65	CALL_4
0x400800f	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      4358	ftp.c	FUNCTION_65	CALL_4
0x4008016	          0x4889c7	                            mov rdi, rax	      4358	ftp.c	FUNCTION_65	CALL_4
0x4008019	      0xe800000000	                          call 0x400801e	      4358	ftp.c	FUNCTION_65	CALL_4
0x400801e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4360	ftp.c	FUNCTION_65
0x4008022	    0xc68091000000	                mov byte [rax + 0x91], 1	      4360	ftp.c	FUNCTION_65
0x4008029	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      4362	ftp.c	FUNCTION_65	CALL_5
0x400802d	        0x488d4de3	                   lea rcx, [rbp - 0x1d]	      4362	ftp.c	FUNCTION_65	CALL_5
0x4008031	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4362	ftp.c	FUNCTION_65	CALL_5
0x4008035	          0x4889ce	                            mov rsi, rcx	      4362	ftp.c	FUNCTION_65	CALL_5
0x4008038	          0x4889c7	                            mov rdi, rax	      4362	ftp.c	FUNCTION_65	CALL_5
0x400803b	      0xe896e9ffff	                    call sym.ftp_perform	      4362	ftp.c	FUNCTION_65	CALL_5
0x4008040	          0x8945e4	             mov dword [rbp - 0x1c], eax	      4362	ftp.c	FUNCTION_65	CALL_5
0x4008043	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4366	ftp.c	FUNCTION_65	IF_1
0x4008047	            0x7538	                           jne 0x4008081	      4366	ftp.c	FUNCTION_65	IF_1
0x4008049	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4368	ftp.c	FUNCTION_65	IF_1	IF_2
0x400804d	           0xfb600	                   movzx eax, byte [rax]	      4368	ftp.c	FUNCTION_65	IF_1	IF_2
0x4008050	          0x83f001	                              xor eax, 1	      4368	ftp.c	FUNCTION_65	IF_1	IF_2
0x4008053	            0x84c0	                             test al, al	      4368	ftp.c	FUNCTION_65	IF_1	IF_2
0x4008055	            0x7407	                            je 0x400805e	      4368	ftp.c	FUNCTION_65	IF_1	IF_2
0x4008057	      0xb800000000	                              mov eax, 0	      4370	ftp.c	FUNCTION_65	IF_1	IF_2
0x400805c	            0xeb32	                           jmp 0x4008090	      4370	ftp.c	FUNCTION_65	IF_1	IF_2
0x400805e	         0xfb645e3	            movzx eax, byte [rbp - 0x1d]	      4372	ftp.c	FUNCTION_65	IF_1	CALL_6
0x4008062	           0xfb6d0	                           movzx edx, al	      4372	ftp.c	FUNCTION_65	IF_1	CALL_6
0x4008065	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4372	ftp.c	FUNCTION_65	IF_1	CALL_6
0x4008069	            0x89d6	                            mov esi, edx	      4372	ftp.c	FUNCTION_65	IF_1	CALL_6
0x400806b	          0x4889c7	                            mov rdi, rax	      4372	ftp.c	FUNCTION_65	IF_1	CALL_6
0x400806e	      0xe8d2fdffff	               call sym.ftp_dophase_done	      4372	ftp.c	FUNCTION_65	IF_1	CALL_6
0x4008073	          0x8945e4	             mov dword [rbp - 0x1c], eax	      4372	ftp.c	FUNCTION_65	IF_1	CALL_6
0x4008076	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4374	ftp.c	FUNCTION_65	IF_1	IF_3
0x400807a	            0x7411	                            je 0x400808d	      4374	ftp.c	FUNCTION_65	IF_1	IF_3
0x400807c	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4375	ftp.c	FUNCTION_65	IF_1	IF_3
0x400807f	            0xeb0f	                           jmp 0x4008090	      4375	ftp.c	FUNCTION_65	IF_1	IF_3
0x4008081	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4378	ftp.c	FUNCTION_65	CALL_7
0x4008085	          0x4889c7	                            mov rdi, rax	      4378	ftp.c	FUNCTION_65	CALL_7
0x4008088	      0xe8d480ffff	                       call sym.freedirs	      4378	ftp.c	FUNCTION_65	CALL_7
0x400808d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4380	ftp.c	FUNCTION_65
0x4008090	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4381	ftp.c	FUNCTION_65
0x4008094	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4381	ftp.c	FUNCTION_65
0x400809d	            0x7405	                            je 0x40080a4	      4381	ftp.c	FUNCTION_65
0x400809f	      0xe800000000	                          call 0x40080a4	      4381	ftp.c	FUNCTION_65
0x40080a4	              0xc9	                                   leave	      4381	ftp.c	FUNCTION_65
0x40080a5	              0xc3	                                     ret	      4381	ftp.c	FUNCTION_65
ftp_state_cwd	DO,0:FOR,0:functions,0:ELSE,4:SWITCH,0:CALL,7:IF,4:WHILE,0	109
0x4000fe2	              0x55	                                push rbp	       879	ftp.c	FUNCTION_17
0x4000fe3	          0x4889e5	                            mov rbp, rsp	       879	ftp.c	FUNCTION_17
0x4000fe6	        0x4883ec20	                           sub rsp, 0x20	       879	ftp.c	FUNCTION_17
0x4000fea	        0x48897de8	             mov qword [rbp - 0x18], rdi	       879	ftp.c	FUNCTION_17
0x4000fee	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       880	ftp.c	FUNCTION_17
0x4000ff5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       881	ftp.c	FUNCTION_17
0x4000ff9	    0x4805b0050000	                          add rax, 0x5b0	       881	ftp.c	FUNCTION_17
0x4000fff	        0x488945f8	                mov qword [rbp - 8], rax	       881	ftp.c	FUNCTION_17
0x4001003	        0x488b45f8	                mov rax, qword [rbp - 8]	       883	ftp.c	FUNCTION_17	IF_1
0x4001007	     0xfb680920000	           movzx eax, byte [rax + 0x92] 	       883	ftp.c	FUNCTION_17	IF_1
0x400100e	            0x84c0	                             test al, al	       883	ftp.c	FUNCTION_17	IF_1
0x4001010	            0x7414	                            je 0x4001026	       883	ftp.c	FUNCTION_17	IF_1
0x4001012	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       885	ftp.c	FUNCTION_17	CALL_1
0x4001016	          0x4889c7	                            mov rdi, rax	       885	ftp.c	FUNCTION_17	CALL_1
0x4001019	      0xe831180000	                 call sym.ftp_state_mdtm	       885	ftp.c	FUNCTION_17	CALL_1
0x400101e	          0x8945f4	              mov dword [rbp - 0xc], eax	       885	ftp.c	FUNCTION_17	CALL_1
0x4001021	      0xe96d010000	                           jmp 0x4001193	       885	ftp.c	FUNCTION_17	CALL_1
0x4001026	        0x488b45f8	                mov rax, qword [rbp - 8]	       887	ftp.c	FUNCTION_17	ELSE_1
0x400102a	    0xc780b4000000	               mov dword [rax + 0xb4], 0	       887	ftp.c	FUNCTION_17	ELSE_1
0x4001034	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       892	ftp.c	FUNCTION_17	ELSE_1
0x4001038	          0x488b00	                    mov rax, qword [rax]	       892	ftp.c	FUNCTION_17	ELSE_1
0x400103b	    0x8b807c070000	           mov eax, dword [rax + 0x77c] 	       892	ftp.c	FUNCTION_17	ELSE_1
0x4001041	          0x83f802	                              cmp eax, 2	       892	ftp.c	FUNCTION_17	ELSE_1
0x4001044	           0xf94c0	                                 sete al	       892	ftp.c	FUNCTION_17	ELSE_1
0x4001047	           0xfb6d0	                           movzx edx, al	       892	ftp.c	FUNCTION_17	ELSE_1
0x400104a	        0x488b45f8	                mov rax, qword [rbp - 8]	       892	ftp.c	FUNCTION_17	ELSE_1
0x400104e	    0x8990b8000000	             mov dword [rax + 0xb8], edx	       892	ftp.c	FUNCTION_17	ELSE_1
0x4001054	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       894	ftp.c	FUNCTION_17	ELSE_1	IF_2
0x4001058	          0x488b00	                    mov rax, qword [rax]	       894	ftp.c	FUNCTION_17	ELSE_1	IF_2
0x400105b	    0x8b8078070000	           mov eax, dword [rax + 0x778] 	       894	ftp.c	FUNCTION_17	ELSE_1	IF_2
0x4001061	          0x83f802	                              cmp eax, 2	       894	ftp.c	FUNCTION_17	ELSE_1	IF_2
0x4001064	            0x7522	                           jne 0x4001088	       894	ftp.c	FUNCTION_17	ELSE_1	IF_2
0x4001066	        0x488b45f8	                mov rax, qword [rbp - 8]	       894	ftp.c	FUNCTION_17	ELSE_1	IF_2
0x400106a	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	       894	ftp.c	FUNCTION_17	ELSE_1	IF_2
0x4001070	            0x85c0	                           test eax, eax	       894	ftp.c	FUNCTION_17	ELSE_1	IF_2
0x4001072	            0x7514	                           jne 0x4001088	       894	ftp.c	FUNCTION_17	ELSE_1	IF_2
0x4001074	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       896	ftp.c	FUNCTION_17	ELSE_1	CALL_2
0x4001078	          0x4889c7	                            mov rdi, rax	       896	ftp.c	FUNCTION_17	ELSE_1	CALL_2
0x400107b	      0xe8cf170000	                 call sym.ftp_state_mdtm	       896	ftp.c	FUNCTION_17	ELSE_1	CALL_2
0x4001080	          0x8945f4	              mov dword [rbp - 0xc], eax	       896	ftp.c	FUNCTION_17	ELSE_1	CALL_2
0x4001083	      0xe90b010000	                           jmp 0x4001193	       896	ftp.c	FUNCTION_17	ELSE_1	CALL_2
0x4001088	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       897	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x400108c	     0xfb680520300	          movzx eax, byte [rax + 0x352] 	       897	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x4001093	            0x84c0	                             test al, al	       897	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x4001095	            0x746c	                            je 0x4001103	       897	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x4001097	        0x488b45f8	                mov rax, qword [rbp - 8]	       897	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x400109b	        0x488b4070	            mov rax, qword [rax + 0x70] 	       897	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x400109f	          0x4885c0	                           test rax, rax	       897	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010a2	            0x745f	                            je 0x4001103	       897	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010a4	        0x488b45f8	                mov rax, qword [rbp - 8]	       901	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010a8	    0xc78094000000	               mov dword [rax + 0x94], 0	       901	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010b2	        0x488b45f8	                mov rax, qword [rbp - 8]	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3	CALL_3
0x40010b6	        0x488b4070	            mov rax, qword [rax + 0x70] 	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3	CALL_3
0x40010ba	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3	CALL_3
0x40010be	    0x488d8ab00500	                  lea rcx, [rdx + 0x5b0]	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3	CALL_3
0x40010c5	          0x4889c2	                            mov rdx, rax	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3	CALL_3
0x40010c8	    0x488d35000000	                   lea rsi, [0x040010cf]	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3	CALL_3
0x40010cf	          0x4889cf	                            mov rdi, rcx	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3	CALL_3
0x40010d2	      0xb800000000	                              mov eax, 0	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3	CALL_3
0x40010d7	      0xe800000000	                          call 0x40010dc	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3	CALL_3
0x40010dc	          0x8945f4	              mov dword [rbp - 0xc], eax	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3	CALL_3
0x40010df	        0x837df400	                cmp dword [rbp - 0xc], 0	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3	CALL_3
0x40010e3	            0x7408	                            je 0x40010ed	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3	CALL_3
0x40010e5	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3	CALL_3
0x40010e8	      0xe9a9000000	                           jmp 0x4001196	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3	CALL_3
0x40010ed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       904	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3	CALL_4
0x40010f1	      0xbe10000000	                           mov esi, 0x10	       904	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3	CALL_4
0x40010f6	          0x4889c7	                            mov rdi, rax	       904	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3	CALL_4
0x40010f9	      0xe879fcffff	                         call sym._state	       904	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3	CALL_4
0x40010fe	      0xe990000000	                           jmp 0x4001193	       904	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3	CALL_4
0x4001103	        0x488b45f8	                mov rax, qword [rbp - 8]	       907	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4001107	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       907	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x400110d	            0x85c0	                           test eax, eax	       907	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x400110f	            0x7473	                            je 0x4001184	       907	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4001111	        0x488b45f8	                mov rax, qword [rbp - 8]	       908	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4001115	    0xc78094000000	               mov dword [rax + 0x94], 1	       908	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x400111f	        0x488b45f8	                mov rax, qword [rbp - 8]	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_5
0x4001123	        0x488b5078	            mov rdx, qword [rax + 0x78] 	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_5
0x4001127	        0x488b45f8	                mov rax, qword [rbp - 8]	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_5
0x400112b	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_5
0x4001131	            0x4898	                                    cdqe	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_5
0x4001133	        0x48c1e003	                              shl rax, 3	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_5
0x4001137	        0x4883e808	                              sub rax, 8	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_5
0x400113b	          0x4801d0	                            add rax, rdx	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_5
0x400113e	          0x488b00	                    mov rax, qword [rax]	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_5
0x4001141	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_5
0x4001145	    0x488d8ab00500	                  lea rcx, [rdx + 0x5b0]	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_5
0x400114c	          0x4889c2	                            mov rdx, rax	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_5
0x400114f	    0x488d35000000	                   lea rsi, [0x04001156]	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_5
0x4001156	          0x4889cf	                            mov rdi, rcx	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_5
0x4001159	      0xb800000000	                              mov eax, 0	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_5
0x400115e	      0xe800000000	                          call 0x4001163	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_5
0x4001163	          0x8945f4	              mov dword [rbp - 0xc], eax	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_5
0x4001166	        0x837df400	                cmp dword [rbp - 0xc], 0	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_5
0x400116a	            0x7405	                            je 0x4001171	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_5
0x400116c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_5
0x400116f	            0xeb25	                           jmp 0x4001196	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_5
0x4001171	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       912	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_6
0x4001175	      0xbe10000000	                           mov esi, 0x10	       912	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_6
0x400117a	          0x4889c7	                            mov rdi, rax	       912	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_6
0x400117d	      0xe8f5fbffff	                         call sym._state	       912	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_6
0x4001182	            0xeb0f	                           jmp 0x4001193	       912	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4	CALL_6
0x4001184	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       916	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	ELSE_4	CALL_7
0x4001188	          0x4889c7	                            mov rdi, rax	       916	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	ELSE_4	CALL_7
0x400118b	      0xe8bf160000	                 call sym.ftp_state_mdtm	       916	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	ELSE_4	CALL_7
0x4001190	          0x8945f4	              mov dword [rbp - 0xc], eax	       916	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	ELSE_4	CALL_7
0x4001193	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       920	ftp.c	FUNCTION_17
0x4001196	              0xc9	                                   leave	       921	ftp.c	FUNCTION_17
0x4001197	              0xc3	                                     ret	       921	ftp.c	FUNCTION_17
ftp_getsock	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,1:IF,0:WHILE,0	15
0x4000e89	              0x55	                                push rbp	       825	ftp.c	FUNCTION_15
0x4000e8a	          0x4889e5	                            mov rbp, rsp	       825	ftp.c	FUNCTION_15
0x4000e8d	        0x4883ec20	                           sub rsp, 0x20	       825	ftp.c	FUNCTION_15
0x4000e91	        0x48897df8	                mov qword [rbp - 8], rdi	       825	ftp.c	FUNCTION_15
0x4000e95	        0x488975f0	             mov qword [rbp - 0x10], rsi	       825	ftp.c	FUNCTION_15
0x4000e99	          0x8955ec	             mov dword [rbp - 0x14], edx	       825	ftp.c	FUNCTION_15
0x4000e9c	        0x488b45f8	                mov rax, qword [rbp - 8]	       826	ftp.c	FUNCTION_15	CALL_1
0x4000ea0	    0x488d88b00500	                  lea rcx, [rax + 0x5b0]	       826	ftp.c	FUNCTION_15	CALL_1
0x4000ea7	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       826	ftp.c	FUNCTION_15	CALL_1
0x4000eaa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       826	ftp.c	FUNCTION_15	CALL_1
0x4000eae	          0x4889c6	                            mov rsi, rax	       826	ftp.c	FUNCTION_15	CALL_1
0x4000eb1	          0x4889cf	                            mov rdi, rcx	       826	ftp.c	FUNCTION_15	CALL_1
0x4000eb4	      0xe800000000	                          call 0x4000eb9	       826	ftp.c	FUNCTION_15	CALL_1
0x4000eb9	              0xc9	                                   leave	       827	ftp.c	FUNCTION_15
0x4000eba	              0xc3	                                     ret	       827	ftp.c	FUNCTION_15
ftp_parse_url_path	DO,0:FOR,0:functions,0:ELSE,4:SWITCH,1:CALL,26:IF,20:WHILE,1	450
0x40076cf	              0x55	                                push rbp	      4100	ftp.c	FUNCTION_62
0x40076d0	          0x4889e5	                            mov rbp, rsp	      4100	ftp.c	FUNCTION_62
0x40076d3	              0x53	                                push rbx	      4100	ftp.c	FUNCTION_62
0x40076d4	    0x4881ec980000	                           sub rsp, 0x98	      4100	ftp.c	FUNCTION_62
0x40076db	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      4100	ftp.c	FUNCTION_62
0x40076e2	    0x64488b042528	                mov rax, qword fs:[0x28]	      4100	ftp.c	FUNCTION_62
0x40076eb	        0x488945e8	             mov qword [rbp - 0x18], rax	      4100	ftp.c	FUNCTION_62
0x40076ef	            0x31c0	                            xor eax, eax	      4100	ftp.c	FUNCTION_62
0x40076f1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4101	ftp.c	FUNCTION_62
0x40076f8	          0x488b00	                    mov rax, qword [rax]	      4101	ftp.c	FUNCTION_62
0x40076fb	        0x488945a8	             mov qword [rbp - 0x58], rax	      4101	ftp.c	FUNCTION_62
0x40076ff	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4103	ftp.c	FUNCTION_62
0x4007703	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      4103	ftp.c	FUNCTION_62
0x400770a	        0x488945b0	             mov qword [rbp - 0x50], rax	      4103	ftp.c	FUNCTION_62
0x400770e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4104	ftp.c	FUNCTION_62
0x4007715	    0x4805b0050000	                          add rax, 0x5b0	      4104	ftp.c	FUNCTION_62
0x400771b	        0x488945b8	             mov qword [rbp - 0x48], rax	      4104	ftp.c	FUNCTION_62
0x400771f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4106	ftp.c	FUNCTION_62
0x4007723	    0x488b80985000	          mov rax, qword [rax + 0x5098] 	      4106	ftp.c	FUNCTION_62
0x400772a	        0x488945c0	             mov qword [rbp - 0x40], rax	      4106	ftp.c	FUNCTION_62
0x400772e	    0x48c745980000	               mov qword [rbp - 0x68], 0	      4108	ftp.c	FUNCTION_62
0x4007736	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4110	ftp.c	FUNCTION_62
0x400773a	        0x48894590	             mov qword [rbp - 0x70], rax	      4110	ftp.c	FUNCTION_62
0x400773e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4113	ftp.c	FUNCTION_62
0x4007742	    0xc68091000000	                mov byte [rax + 0x91], 0	      4113	ftp.c	FUNCTION_62
0x4007749	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4114	ftp.c	FUNCTION_62
0x400774d	    0xc68098000000	                mov byte [rax + 0x98], 0	      4114	ftp.c	FUNCTION_62
0x4007754	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4116	ftp.c	FUNCTION_62	SWITCH_1
0x4007758	    0x8b8078070000	           mov eax, dword [rax + 0x778] 	      4116	ftp.c	FUNCTION_62	SWITCH_1
0x400775e	          0x83f802	                              cmp eax, 2	      4116	ftp.c	FUNCTION_62	SWITCH_1
0x4007761	            0x740a	                            je 0x400776d	      4116	ftp.c	FUNCTION_62	SWITCH_1
0x4007763	          0x83f803	                              cmp eax, 3	      4116	ftp.c	FUNCTION_62	SWITCH_1
0x4007766	            0x7443	                            je 0x40077ab	      4116	ftp.c	FUNCTION_62	SWITCH_1
0x4007768	      0xe989010000	                           jmp 0x40078f6	      4116	ftp.c	FUNCTION_62	SWITCH_1
0x400776d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4127	ftp.c	FUNCTION_62	SWITCH_1	IF_1
0x4007771	           0xfb600	                   movzx eax, byte [rax]	      4127	ftp.c	FUNCTION_62	SWITCH_1	IF_1
0x4007774	            0x84c0	                             test al, al	      4127	ftp.c	FUNCTION_62	SWITCH_1	IF_1
0x4007776	     0xf8498040000	                            je 0x4007c14	      4127	ftp.c	FUNCTION_62	SWITCH_1	IF_1
0x400777c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4128	ftp.c	FUNCTION_62	SWITCH_1	IF_1	CALL_1
0x4007780	          0x4889c7	                            mov rdi, rax	      4128	ftp.c	FUNCTION_62	SWITCH_1	IF_1	CALL_1
0x4007783	      0xe800000000	                          call 0x4007788	      4128	ftp.c	FUNCTION_62	SWITCH_1	IF_1	CALL_1
0x4007788	        0x488d50ff	                      lea rdx, [rax - 1]	      4128	ftp.c	FUNCTION_62	SWITCH_1	IF_1	CALL_1
0x400778c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4128	ftp.c	FUNCTION_62	SWITCH_1	IF_1	CALL_1
0x4007790	          0x4801d0	                            add rax, rdx	      4128	ftp.c	FUNCTION_62	SWITCH_1	IF_1	CALL_1
0x4007793	           0xfb600	                   movzx eax, byte [rax]	      4128	ftp.c	FUNCTION_62	SWITCH_1	IF_1	CALL_1
0x4007796	            0x3c2f	                            cmp al, 0x2f	      4127	ftp.c	FUNCTION_62	SWITCH_1	IF_1
0x4007798	     0xf8476040000	                            je 0x4007c14	      4127	ftp.c	FUNCTION_62	SWITCH_1	IF_1
0x400779e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4129	ftp.c	FUNCTION_62	SWITCH_1	IF_1
0x40077a2	        0x48894598	             mov qword [rbp - 0x68], rax	      4129	ftp.c	FUNCTION_62	SWITCH_1	IF_1
0x40077a6	      0xe969040000	                           jmp 0x4007c14	      4138	ftp.c	FUNCTION_62	SWITCH_1
0x40077ab	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4142	ftp.c	FUNCTION_62	SWITCH_1	IF_2
0x40077af	           0xfb600	                   movzx eax, byte [rax]	      4142	ftp.c	FUNCTION_62	SWITCH_1	IF_2
0x40077b2	            0x84c0	                             test al, al	      4142	ftp.c	FUNCTION_62	SWITCH_1	IF_2
0x40077b4	            0x7513	                           jne 0x40077c9	      4142	ftp.c	FUNCTION_62	SWITCH_1	IF_2
0x40077b6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4144	ftp.c	FUNCTION_62	SWITCH_1	IF_2
0x40077ba	    0xc78080000000	               mov dword [rax + 0x80], 0	      4144	ftp.c	FUNCTION_62	SWITCH_1	IF_2
0x40077c4	      0xe94c040000	                           jmp 0x4007c15	      4145	ftp.c	FUNCTION_62	SWITCH_1	IF_2
0x40077c9	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4147	ftp.c	FUNCTION_62	SWITCH_1	CALL_2
0x40077cd	      0xbe2f000000	                           mov esi, 0x2f	      4147	ftp.c	FUNCTION_62	SWITCH_1	CALL_2
0x40077d2	          0x4889c7	                            mov rdi, rax	      4147	ftp.c	FUNCTION_62	SWITCH_1	CALL_2
0x40077d5	      0xe800000000	                          call 0x40077da	      4147	ftp.c	FUNCTION_62	SWITCH_1	CALL_2
0x40077da	        0x488945c8	             mov qword [rbp - 0x38], rax	      4147	ftp.c	FUNCTION_62	SWITCH_1	CALL_2
0x40077de	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4148	ftp.c	FUNCTION_62	SWITCH_1	IF_3
0x40077e3	            0x750f	                           jne 0x40077f4	      4148	ftp.c	FUNCTION_62	SWITCH_1	IF_3
0x40077e5	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4148	ftp.c	FUNCTION_62	SWITCH_1	IF_3
0x40077e9	           0xfb600	                   movzx eax, byte [rax]	      4148	ftp.c	FUNCTION_62	SWITCH_1	IF_3
0x40077ec	            0x84c0	                             test al, al	      4148	ftp.c	FUNCTION_62	SWITCH_1	IF_3
0x40077ee	     0xf85f5000000	                           jne 0x40078e9	      4148	ftp.c	FUNCTION_62	SWITCH_1	IF_3
0x40077f4	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4149	ftp.c	FUNCTION_62	SWITCH_1	IF_3
0x40077f8	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4149	ftp.c	FUNCTION_62	SWITCH_1	IF_3
0x40077fc	          0x4829c2	                            sub rdx, rax	      4149	ftp.c	FUNCTION_62	SWITCH_1	IF_3
0x40077ff	          0x4889d0	                            mov rax, rdx	      4149	ftp.c	FUNCTION_62	SWITCH_1	IF_3
0x4007802	        0x488945a0	             mov qword [rbp - 0x60], rax	      4149	ftp.c	FUNCTION_62	SWITCH_1	IF_3
0x4007806	    0x488b05000000	            mov rax, qword [0x0400780d] 	      4152	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_3
0x400780d	          0x488b00	                    mov rax, qword [rax]	      4152	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_3
0x4007810	      0xbe08000000	                              mov esi, 8	      4152	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_3
0x4007815	      0xbf01000000	                              mov edi, 1	      4152	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_3
0x400781a	            0xffd0	                                call rax	      4152	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_3
0x400781c	          0x4889c2	                            mov rdx, rax	      4152	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_3
0x400781f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4152	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_3
0x4007823	        0x48895078	             mov qword [rax + 0x78], rdx	      4152	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_3
0x4007827	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4153	ftp.c	FUNCTION_62	SWITCH_1	IF_3	IF_4
0x400782b	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4153	ftp.c	FUNCTION_62	SWITCH_1	IF_3	IF_4
0x400782f	          0x4885c0	                           test rax, rax	      4153	ftp.c	FUNCTION_62	SWITCH_1	IF_3	IF_4
0x4007832	            0x750a	                           jne 0x400783e	      4153	ftp.c	FUNCTION_62	SWITCH_1	IF_3	IF_4
0x4007834	      0xb81b000000	                           mov eax, 0x1b	      4154	ftp.c	FUNCTION_62	SWITCH_1	IF_3	IF_4
0x4007839	      0xe9e9050000	                           jmp 0x4007e27	      4154	ftp.c	FUNCTION_62	SWITCH_1	IF_3	IF_4
0x400783e	      0x48837da000	               cmp qword [rbp - 0x60], 0	      4156	ftp.c	FUNCTION_62	SWITCH_1	IF_3	IF_5
0x4007843	            0x7505	                           jne 0x400784a	      4156	ftp.c	FUNCTION_62	SWITCH_1	IF_3	IF_5
0x4007845	      0x488345a001	               add qword [rbp - 0x60], 1	      4157	ftp.c	FUNCTION_62	SWITCH_1	IF_3	IF_5
0x400784a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4159	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_4
0x400784e	        0x488b4878	            mov rcx, qword [rax + 0x78] 	      4159	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_4
0x4007852	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4159	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_4
0x4007857	            0x7406	                            je 0x400785f	      4159	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_4
0x4007859	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4159	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_4
0x400785d	            0xeb05	                           jmp 0x4007864	      4159	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_4
0x400785f	      0xba01000000	                              mov edx, 1	      4159	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_4
0x4007864	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4159	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_4
0x4007869	            0x7406	                            je 0x4007871	      4159	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_4
0x400786b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4159	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_4
0x400786f	            0xeb07	                           jmp 0x4007878	      4159	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_4
0x4007871	    0x488d05000000	                   lea rax, [0x04007878]	      4159	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_4
0x4007878	    0x488bb568ffff	             mov rsi, qword [rbp - 0x98]	      4159	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_4
0x400787f	          0x488b3e	                    mov rdi, qword [rsi]	      4159	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_4
0x4007882	    0x41b901000000	                              mov r9d, 1	      4159	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_4
0x4007888	    0x41b800000000	                              mov r8d, 0	      4159	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_4
0x400788e	          0x4889c6	                            mov rsi, rax	      4159	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_4
0x4007891	      0xe800000000	                          call 0x4007896	      4159	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_4
0x4007896	    0x898570ffffff	             mov dword [rbp - 0x90], eax	      4159	ftp.c	FUNCTION_62	SWITCH_1	IF_3	CALL_4
0x400789c	    0x83bd70ffffff	               cmp dword [rbp - 0x90], 0	      4163	ftp.c	FUNCTION_62	SWITCH_1	IF_3	IF_6
0x40078a3	            0x7417	                            je 0x40078bc	      4163	ftp.c	FUNCTION_62	SWITCH_1	IF_3	IF_6
0x40078a5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4164	ftp.c	FUNCTION_62	SWITCH_1	IF_3	IF_6	CALL_5
0x40078a9	          0x4889c7	                            mov rdi, rax	      4164	ftp.c	FUNCTION_62	SWITCH_1	IF_3	IF_6	CALL_5
0x40078ac	      0xe8b088ffff	                       call sym.freedirs	      4164	ftp.c	FUNCTION_62	SWITCH_1	IF_3	IF_6	CALL_5
0x40078b1	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      4165	ftp.c	FUNCTION_62	SWITCH_1	IF_3	IF_6
0x40078b7	      0xe96b050000	                           jmp 0x4007e27	      4165	ftp.c	FUNCTION_62	SWITCH_1	IF_3	IF_6
0x40078bc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4167	ftp.c	FUNCTION_62	SWITCH_1	IF_3
0x40078c0	    0xc78080000000	               mov dword [rax + 0x80], 1	      4167	ftp.c	FUNCTION_62	SWITCH_1	IF_3
0x40078ca	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4168	ftp.c	FUNCTION_62	SWITCH_1	IF_3
0x40078cf	            0x740a	                            je 0x40078db	      4168	ftp.c	FUNCTION_62	SWITCH_1	IF_3
0x40078d1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4168	ftp.c	FUNCTION_62	SWITCH_1	IF_3
0x40078d5	        0x4883c001	                              add rax, 1	      4168	ftp.c	FUNCTION_62	SWITCH_1	IF_3
0x40078d9	            0xeb04	                           jmp 0x40078df	      4168	ftp.c	FUNCTION_62	SWITCH_1	IF_3
0x40078db	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4168	ftp.c	FUNCTION_62	SWITCH_1	IF_3
0x40078df	        0x48894598	             mov qword [rbp - 0x68], rax	      4168	ftp.c	FUNCTION_62	SWITCH_1	IF_3
0x40078e3	              0x90	                                     nop	      4148	ftp.c	FUNCTION_62	SWITCH_1	IF_3
0x40078e4	      0xe92c030000	                           jmp 0x4007c15	      4172	ftp.c	FUNCTION_62	SWITCH_1
0x40078e9	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4171	ftp.c	FUNCTION_62	SWITCH_1	ELSE_1
0x40078ed	        0x48894598	             mov qword [rbp - 0x68], rax	      4171	ftp.c	FUNCTION_62	SWITCH_1	ELSE_1
0x40078f1	      0xe91f030000	                           jmp 0x4007c15	      4172	ftp.c	FUNCTION_62	SWITCH_1
0x40078f6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4176	ftp.c	FUNCTION_62	SWITCH_1
0x40078fa	    0xc78080000000	               mov dword [rax + 0x80], 0	      4176	ftp.c	FUNCTION_62	SWITCH_1
0x4007904	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4177	ftp.c	FUNCTION_62	SWITCH_1
0x4007908	    0xc78084000000	               mov dword [rax + 0x84], 5	      4177	ftp.c	FUNCTION_62	SWITCH_1
0x4007912	    0x488b05000000	            mov rax, qword [0x04007919] 	      4178	ftp.c	FUNCTION_62	SWITCH_1	CALL_6
0x4007919	          0x488b00	                    mov rax, qword [rax]	      4178	ftp.c	FUNCTION_62	SWITCH_1	CALL_6
0x400791c	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4178	ftp.c	FUNCTION_62	SWITCH_1	CALL_6
0x4007920	    0x8b9284000000	            mov edx, dword [rdx + 0x84] 	      4178	ftp.c	FUNCTION_62	SWITCH_1	CALL_6
0x4007926	          0x4863d2	                         movsxd rdx, edx	      4178	ftp.c	FUNCTION_62	SWITCH_1	CALL_6
0x4007929	      0xbe08000000	                              mov esi, 8	      4178	ftp.c	FUNCTION_62	SWITCH_1	CALL_6
0x400792e	          0x4889d7	                            mov rdi, rdx	      4178	ftp.c	FUNCTION_62	SWITCH_1	CALL_6
0x4007931	            0xffd0	                                call rax	      4178	ftp.c	FUNCTION_62	SWITCH_1	CALL_6
0x4007933	          0x4889c2	                            mov rdx, rax	      4178	ftp.c	FUNCTION_62	SWITCH_1	CALL_6
0x4007936	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4178	ftp.c	FUNCTION_62	SWITCH_1	CALL_6
0x400793a	        0x48895078	             mov qword [rax + 0x78], rdx	      4178	ftp.c	FUNCTION_62	SWITCH_1	CALL_6
0x400793e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4179	ftp.c	FUNCTION_62	SWITCH_1	IF_7
0x4007942	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4179	ftp.c	FUNCTION_62	SWITCH_1	IF_7
0x4007946	          0x4885c0	                           test rax, rax	      4179	ftp.c	FUNCTION_62	SWITCH_1	IF_7
0x4007949	            0x750a	                           jne 0x4007955	      4179	ftp.c	FUNCTION_62	SWITCH_1	IF_7
0x400794b	      0xb81b000000	                           mov eax, 0x1b	      4180	ftp.c	FUNCTION_62	SWITCH_1	IF_7
0x4007950	      0xe9d2040000	                           jmp 0x4007e27	      4180	ftp.c	FUNCTION_62	SWITCH_1	IF_7
0x4007955	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4183	ftp.c	FUNCTION_62	SWITCH_1	IF_8	CALL_7
0x4007959	    0x488d35000000	                   lea rsi, [0x04007960]	      4183	ftp.c	FUNCTION_62	SWITCH_1	IF_8	CALL_7
0x4007960	          0x4889c7	                            mov rdi, rax	      4183	ftp.c	FUNCTION_62	SWITCH_1	IF_8	CALL_7
0x4007963	      0xe800000000	                          call 0x4007968	      4183	ftp.c	FUNCTION_62	SWITCH_1	IF_8	CALL_7
0x4007968	            0x85c0	                           test eax, eax	      4183	ftp.c	FUNCTION_62	SWITCH_1	IF_8	CALL_7
0x400796a	     0xf857a020000	                           jne 0x4007bea	      4183	ftp.c	FUNCTION_62	SWITCH_1	IF_8	CALL_7
0x4007970	      0x4883459001	               add qword [rbp - 0x70], 1	      4184	ftp.c	FUNCTION_62	SWITCH_1	IF_8
0x4007975	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4185	ftp.c	FUNCTION_62	SWITCH_1	IF_8	CALL_8
0x4007979	        0x488b5878	            mov rbx, qword [rax + 0x78] 	      4185	ftp.c	FUNCTION_62	SWITCH_1	IF_8	CALL_8
0x400797d	    0x488b05000000	            mov rax, qword [0x04007984] 	      4185	ftp.c	FUNCTION_62	SWITCH_1	IF_8	CALL_8
0x4007984	          0x488b00	                    mov rax, qword [rax]	      4185	ftp.c	FUNCTION_62	SWITCH_1	IF_8	CALL_8
0x4007987	    0x488d3d000000	                   lea rdi, [0x0400798e]	      4185	ftp.c	FUNCTION_62	SWITCH_1	IF_8	CALL_8
0x400798e	            0xffd0	                                call rax	      4185	ftp.c	FUNCTION_62	SWITCH_1	IF_8	CALL_8
0x4007990	          0x488903	                    mov qword [rbx], rax	      4185	ftp.c	FUNCTION_62	SWITCH_1	IF_8	CALL_8
0x4007993	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4186	ftp.c	FUNCTION_62	SWITCH_1	IF_8
0x4007997	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      4186	ftp.c	FUNCTION_62	SWITCH_1	IF_8
0x400799d	          0x8d5001	                      lea edx, [rax + 1]	      4186	ftp.c	FUNCTION_62	SWITCH_1	IF_8
0x40079a0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4186	ftp.c	FUNCTION_62	SWITCH_1	IF_8
0x40079a4	    0x899080000000	             mov dword [rax + 0x80], edx	      4186	ftp.c	FUNCTION_62	SWITCH_1	IF_8
0x40079aa	      0xe95b020000	                           jmp 0x4007c0a	      4186	ftp.c	FUNCTION_62	SWITCH_1	IF_8
0x40079af	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      4192	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1
0x40079b3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4192	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1
0x40079b7	    0x488b80985000	          mov rax, qword [rax + 0x5098] 	      4192	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1
0x40079be	          0x4829c2	                            sub rdx, rax	      4192	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1
0x40079c1	          0x4889d0	                            mov rax, rdx	      4192	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1
0x40079c4	          0x4885c0	                           test rax, rax	      4193	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1
0x40079c7	            0x7e15	                           jle 0x40079de	      4193	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1
0x40079c9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4193	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1
0x40079cd	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      4193	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1
0x40079d3	            0x85c0	                           test eax, eax	      4193	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1
0x40079d5	            0x7507	                           jne 0x40079de	      4193	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1
0x40079d7	      0xb801000000	                              mov eax, 1	      4193	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1
0x40079dc	            0xeb05	                           jmp 0x40079e3	      4193	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1
0x40079de	      0xb800000000	                              mov eax, 0	      4193	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1
0x40079e3	            0x4898	                                    cdqe	      4192	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1
0x40079e5	        0x488945d0	             mov qword [rbp - 0x30], rax	      4192	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1
0x40079e9	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4196	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x40079ed	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4196	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x40079f1	          0x4839c2	                            cmp rdx, rax	      4196	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x40079f4	     0xf8490000000	                            je 0x4007a8a	      4196	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x40079fa	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4200	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x40079fe	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4200	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a02	          0x4829c2	                            sub rdx, rax	      4200	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a05	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4200	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a09	          0x4801d0	                            add rax, rdx	      4200	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a0c	        0x488945d8	             mov qword [rbp - 0x28], rax	      4200	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a10	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4203	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a14	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      4203	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a18	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4203	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a1c	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      4203	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a22	            0x4898	                                    cdqe	      4202	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9	CALL_10
0x4007a24	        0x48c1e003	                              shl rax, 3	      4203	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a28	        0x488d0c02	                    lea rcx, [rdx + rax]	      4202	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9	CALL_10
0x4007a2c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4202	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9	CALL_10
0x4007a30	          0x48f7d8	                                 neg rax	      4202	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9	CALL_10
0x4007a33	          0x4889c2	                            mov rdx, rax	      4202	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9	CALL_10
0x4007a36	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4202	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9	CALL_10
0x4007a3a	        0x488d3402	                    lea rsi, [rdx + rax]	      4202	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9	CALL_10
0x4007a3e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4202	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9	CALL_10
0x4007a45	          0x488b00	                    mov rax, qword [rax]	      4202	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9	CALL_10
0x4007a48	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4201	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a4c	    0x41b901000000	                              mov r9d, 1	      4201	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a52	    0x41b800000000	                              mov r8d, 0	      4201	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a58	          0x4889c7	                            mov rdi, rax	      4201	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a5b	      0xe800000000	                          call 0x4007a60	      4201	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a60	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      4201	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a66	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      4205	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9	IF_10
0x4007a6d	     0xf84c9000000	                            je 0x4007b3c	      4205	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9	IF_10
0x4007a73	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4206	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9	IF_10	CALL_11
0x4007a77	          0x4889c7	                            mov rdi, rax	      4206	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9	IF_10	CALL_11
0x4007a7a	      0xe8e286ffff	                       call sym.freedirs	      4206	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9	IF_10	CALL_11
0x4007a7f	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      4207	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9	IF_10
0x4007a85	      0xe99d030000	                           jmp 0x4007e27	      4207	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_9	IF_10
0x4007a8a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4211	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3
0x4007a8e	        0x4883c001	                              add rax, 1	      4211	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3
0x4007a92	        0x48894590	             mov qword [rbp - 0x70], rax	      4211	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3
0x4007a96	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4212	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11
0x4007a9a	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      4212	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11
0x4007aa0	            0x85c0	                           test eax, eax	      4212	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11
0x4007aa2	     0xf8542010000	                           jne 0x4007bea	      4212	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11
0x4007aa8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4214	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007aac	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      4214	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007ab0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4214	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007ab4	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      4214	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007aba	            0x4898	                                    cdqe	      4214	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007abc	        0x48c1e003	                              shl rax, 3	      4214	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007ac0	        0x488d1c02	                    lea rbx, [rdx + rax]	      4214	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007ac4	    0x488b05000000	            mov rax, qword [0x04007acb] 	      4214	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007acb	          0x488b00	                    mov rax, qword [rax]	      4214	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007ace	    0x488d3d000000	                   lea rdi, [0x04007ad5]	      4214	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007ad5	            0xffd0	                                call rax	      4214	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007ad7	          0x488903	                    mov qword [rbx], rax	      4214	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007ada	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4215	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007ade	        0x488b7078	            mov rsi, qword [rax + 0x78] 	      4215	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007ae2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4215	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007ae6	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      4215	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007aec	          0x8d4801	                      lea ecx, [rax + 1]	      4215	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007aef	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4215	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007af3	    0x898a80000000	             mov dword [rdx + 0x80], ecx	      4215	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007af9	            0x4898	                                    cdqe	      4215	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007afb	        0x48c1e003	                              shl rax, 3	      4215	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007aff	          0x4801f0	                            add rax, rsi	      4215	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007b02	          0x488b00	                    mov rax, qword [rax]	      4215	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007b05	          0x4885c0	                           test rax, rax	      4215	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007b08	     0xf85dc000000	                           jne 0x4007bea	      4215	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007b0e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4216	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12	CALL_13
0x4007b12	    0x488d35000000	                   lea rsi, [0x04007b19]	      4216	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12	CALL_13
0x4007b19	          0x4889c7	                            mov rdi, rax	      4216	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12	CALL_13
0x4007b1c	      0xb800000000	                              mov eax, 0	      4216	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12	CALL_13
0x4007b21	      0xe800000000	                          call 0x4007b26	      4216	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12	CALL_13
0x4007b26	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4217	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12	CALL_14
0x4007b2a	          0x4889c7	                            mov rdi, rax	      4217	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12	CALL_14
0x4007b2d	      0xe82f86ffff	                       call sym.freedirs	      4217	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12	CALL_14
0x4007b32	      0xb81b000000	                           mov eax, 0x1b	      4218	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007b37	      0xe9eb020000	                           jmp 0x4007e27	      4218	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007b3c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4224	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1
0x4007b40	        0x4883c001	                              add rax, 1	      4224	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1
0x4007b44	        0x48894590	             mov qword [rbp - 0x70], rax	      4224	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1
0x4007b48	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4225	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007b4c	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      4225	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007b52	          0x8d5001	                      lea edx, [rax + 1]	      4225	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007b55	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4225	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007b59	    0x899080000000	             mov dword [rax + 0x80], edx	      4225	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007b5f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4225	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007b63	    0x8b9080000000	            mov edx, dword [rax + 0x80] 	      4225	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007b69	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4225	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007b6d	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      4225	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007b73	            0x39c2	                            cmp edx, eax	      4225	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007b75	            0x7c73	                            jl 0x4007bea	      4225	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007b77	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4228	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007b7b	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      4228	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007b81	          0x8d1400	                    lea edx, [rax + rax]	      4228	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007b84	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4228	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007b88	    0x899084000000	             mov dword [rax + 0x84], edx	      4228	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007b8e	    0x488b05000000	            mov rax, qword [0x04007b95] 	      4229	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007b95	          0x488b00	                    mov rax, qword [rax]	      4229	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007b98	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4229	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007b9c	    0x8b9284000000	            mov edx, dword [rdx + 0x84] 	      4229	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007ba2	          0x4863d2	                         movsxd rdx, edx	      4229	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007ba5	    0x488d0cd50000	                        lea rcx, [rdx*8]	      4229	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007bad	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4229	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007bb1	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	      4229	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007bb5	          0x4889ce	                            mov rsi, rcx	      4229	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007bb8	          0x4889d7	                            mov rdi, rdx	      4229	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007bbb	            0xffd0	                                call rax	      4229	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007bbd	        0x488945e0	             mov qword [rbp - 0x20], rax	      4229	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007bc1	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4230	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13	IF_14
0x4007bc6	            0x7516	                           jne 0x4007bde	      4230	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13	IF_14
0x4007bc8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4231	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13	IF_14	CALL_16
0x4007bcc	          0x4889c7	                            mov rdi, rax	      4231	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13	IF_14	CALL_16
0x4007bcf	      0xe88d85ffff	                       call sym.freedirs	      4231	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13	IF_14	CALL_16
0x4007bd4	      0xb81b000000	                           mov eax, 0x1b	      4232	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13	IF_14
0x4007bd9	      0xe949020000	                           jmp 0x4007e27	      4232	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13	IF_14
0x4007bde	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4234	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007be2	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4234	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007be6	        0x48895078	             mov qword [rax + 0x78], rdx	      4234	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007bea	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4190	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	CALL_9
0x4007bee	      0xbe2f000000	                           mov esi, 0x2f	      4190	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	CALL_9
0x4007bf3	          0x4889c7	                            mov rdi, rax	      4190	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	CALL_9
0x4007bf6	      0xe800000000	                          call 0x4007bfb	      4190	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	CALL_9
0x4007bfb	        0x488945c8	             mov qword [rbp - 0x38], rax	      4190	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	CALL_9
0x4007bff	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4190	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	CALL_9
0x4007c04	     0xf85a5fdffff	                           jne 0x40079af	      4190	ftp.c	FUNCTION_62	SWITCH_1	ELSE_2	WHILE_1	CALL_9
0x4007c0a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4238	ftp.c	FUNCTION_62	SWITCH_1
0x4007c0e	        0x48894598	             mov qword [rbp - 0x68], rax	      4238	ftp.c	FUNCTION_62	SWITCH_1
0x4007c12	            0xeb01	                           jmp 0x4007c15	      4239	ftp.c	FUNCTION_62	SWITCH_1
0x4007c14	              0x90	                                     nop	      4138	ftp.c	FUNCTION_62	SWITCH_1
0x4007c15	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      4242	ftp.c	FUNCTION_62	IF_15
0x4007c1a	            0x7466	                            je 0x4007c82	      4242	ftp.c	FUNCTION_62	IF_15
0x4007c1c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4242	ftp.c	FUNCTION_62	IF_15
0x4007c20	           0xfb600	                   movzx eax, byte [rax]	      4242	ftp.c	FUNCTION_62	IF_15
0x4007c23	            0x84c0	                             test al, al	      4242	ftp.c	FUNCTION_62	IF_15
0x4007c25	            0x745b	                            je 0x4007c82	      4242	ftp.c	FUNCTION_62	IF_15
0x4007c27	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4244	ftp.c	FUNCTION_62	IF_15	CALL_17
0x4007c2b	    0x488d90880000	                   lea rdx, [rax + 0x88]	      4244	ftp.c	FUNCTION_62	IF_15	CALL_17
0x4007c32	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4244	ftp.c	FUNCTION_62	IF_15	CALL_17
0x4007c39	          0x488b00	                    mov rax, qword [rax]	      4244	ftp.c	FUNCTION_62	IF_15	CALL_17
0x4007c3c	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      4243	ftp.c	FUNCTION_62	IF_15
0x4007c40	    0x41b901000000	                              mov r9d, 1	      4243	ftp.c	FUNCTION_62	IF_15
0x4007c46	    0x41b800000000	                              mov r8d, 0	      4243	ftp.c	FUNCTION_62	IF_15
0x4007c4c	          0x4889d1	                            mov rcx, rdx	      4243	ftp.c	FUNCTION_62	IF_15
0x4007c4f	      0xba00000000	                              mov edx, 0	      4243	ftp.c	FUNCTION_62	IF_15
0x4007c54	          0x4889c7	                            mov rdi, rax	      4243	ftp.c	FUNCTION_62	IF_15
0x4007c57	      0xe800000000	                          call 0x4007c5c	      4243	ftp.c	FUNCTION_62	IF_15
0x4007c5c	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      4243	ftp.c	FUNCTION_62	IF_15
0x4007c62	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      4246	ftp.c	FUNCTION_62	IF_15	IF_16
0x4007c69	            0x7428	                            je 0x4007c93	      4246	ftp.c	FUNCTION_62	IF_15	IF_16
0x4007c6b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4247	ftp.c	FUNCTION_62	IF_15	IF_16	CALL_18
0x4007c6f	          0x4889c7	                            mov rdi, rax	      4247	ftp.c	FUNCTION_62	IF_15	IF_16	CALL_18
0x4007c72	      0xe8ea84ffff	                       call sym.freedirs	      4247	ftp.c	FUNCTION_62	IF_15	IF_16	CALL_18
0x4007c77	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      4248	ftp.c	FUNCTION_62	IF_15	IF_16
0x4007c7d	      0xe9a5010000	                           jmp 0x4007e27	      4248	ftp.c	FUNCTION_62	IF_15	IF_16
0x4007c82	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4252	ftp.c	FUNCTION_62	ELSE_4
0x4007c86	    0x48c780880000	               mov qword [rax + 0x88], 0	      4252	ftp.c	FUNCTION_62	ELSE_4
0x4007c91	            0xeb01	                           jmp 0x4007c94	      4252	ftp.c	FUNCTION_62	ELSE_4
0x4007c93	              0x90	                                     nop	      4242	ftp.c	FUNCTION_62	IF_15
0x4007c94	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4255	ftp.c	FUNCTION_62	ELSE_4	IF_17
0x4007c98	     0xfb680a20700	          movzx eax, byte [rax + 0x7a2] 	      4255	ftp.c	FUNCTION_62	ELSE_4	IF_17
0x4007c9f	            0x84c0	                             test al, al	      4255	ftp.c	FUNCTION_62	ELSE_4	IF_17
0x4007ca1	            0x743d	                            je 0x4007ce0	      4255	ftp.c	FUNCTION_62	ELSE_4	IF_17
0x4007ca3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4255	ftp.c	FUNCTION_62	ELSE_4	IF_17
0x4007ca7	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      4255	ftp.c	FUNCTION_62	ELSE_4	IF_17
0x4007cae	          0x4885c0	                           test rax, rax	      4255	ftp.c	FUNCTION_62	ELSE_4	IF_17
0x4007cb1	            0x752d	                           jne 0x4007ce0	      4255	ftp.c	FUNCTION_62	ELSE_4	IF_17
0x4007cb3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4255	ftp.c	FUNCTION_62	ELSE_4	IF_17
0x4007cb7	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4255	ftp.c	FUNCTION_62	ELSE_4	IF_17
0x4007cba	            0x85c0	                           test eax, eax	      4255	ftp.c	FUNCTION_62	ELSE_4	IF_17
0x4007cbc	            0x7522	                           jne 0x4007ce0	      4255	ftp.c	FUNCTION_62	ELSE_4	IF_17
0x4007cbe	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4257	ftp.c	FUNCTION_62	ELSE_4	IF_17	CALL_19
0x4007cc2	    0x488d35000000	                   lea rsi, [0x04007cc9]	      4257	ftp.c	FUNCTION_62	ELSE_4	IF_17	CALL_19
0x4007cc9	          0x4889c7	                            mov rdi, rax	      4257	ftp.c	FUNCTION_62	ELSE_4	IF_17	CALL_19
0x4007ccc	      0xb800000000	                              mov eax, 0	      4257	ftp.c	FUNCTION_62	ELSE_4	IF_17	CALL_19
0x4007cd1	      0xe800000000	                          call 0x4007cd6	      4257	ftp.c	FUNCTION_62	ELSE_4	IF_17	CALL_19
0x4007cd6	      0xb803000000	                              mov eax, 3	      4258	ftp.c	FUNCTION_62	ELSE_4	IF_17
0x4007cdb	      0xe947010000	                           jmp 0x4007e27	      4258	ftp.c	FUNCTION_62	ELSE_4	IF_17
0x4007ce0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4261	ftp.c	FUNCTION_62
0x4007ce4	    0xc68092000000	                mov byte [rax + 0x92], 0	      4261	ftp.c	FUNCTION_62
0x4007ceb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4263	ftp.c	FUNCTION_62	IF_18
0x4007cef	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      4263	ftp.c	FUNCTION_62	IF_18
0x4007cf6	          0x4885c0	                           test rax, rax	      4263	ftp.c	FUNCTION_62	IF_18
0x4007cf9	     0xf8423010000	                            je 0x4007e22	      4263	ftp.c	FUNCTION_62	IF_18
0x4007cff	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4269	ftp.c	FUNCTION_62	IF_18	CALL_20
0x4007d03	    0x488bb0985000	          mov rsi, qword [rax + 0x5098] 	      4269	ftp.c	FUNCTION_62	IF_18	CALL_20
0x4007d0a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4269	ftp.c	FUNCTION_62	IF_18	CALL_20
0x4007d11	          0x488b00	                    mov rax, qword [rax]	      4269	ftp.c	FUNCTION_62	IF_18	CALL_20
0x4007d14	        0x488d4d80	                   lea rcx, [rbp - 0x80]	      4268	ftp.c	FUNCTION_62	IF_18
0x4007d18	        0x488d5588	                   lea rdx, [rbp - 0x78]	      4268	ftp.c	FUNCTION_62	IF_18
0x4007d1c	    0x41b901000000	                              mov r9d, 1	      4268	ftp.c	FUNCTION_62	IF_18
0x4007d22	          0x4989c8	                             mov r8, rcx	      4268	ftp.c	FUNCTION_62	IF_18
0x4007d25	          0x4889d1	                            mov rcx, rdx	      4268	ftp.c	FUNCTION_62	IF_18
0x4007d28	      0xba00000000	                              mov edx, 0	      4268	ftp.c	FUNCTION_62	IF_18
0x4007d2d	          0x4889c7	                            mov rdi, rax	      4268	ftp.c	FUNCTION_62	IF_18
0x4007d30	      0xe800000000	                          call 0x4007d35	      4268	ftp.c	FUNCTION_62	IF_18
0x4007d35	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      4268	ftp.c	FUNCTION_62	IF_18
0x4007d3b	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      4270	ftp.c	FUNCTION_62	IF_18	IF_19
0x4007d42	            0x7417	                            je 0x4007d5b	      4270	ftp.c	FUNCTION_62	IF_18	IF_19
0x4007d44	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4271	ftp.c	FUNCTION_62	IF_18	IF_19	CALL_21
0x4007d48	          0x4889c7	                            mov rdi, rax	      4271	ftp.c	FUNCTION_62	IF_18	IF_19	CALL_21
0x4007d4b	      0xe81184ffff	                       call sym.freedirs	      4271	ftp.c	FUNCTION_62	IF_18	IF_19	CALL_21
0x4007d50	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      4272	ftp.c	FUNCTION_62	IF_18	IF_19
0x4007d56	      0xe9cc000000	                           jmp 0x4007e27	      4272	ftp.c	FUNCTION_62	IF_18	IF_19
0x4007d5b	        0x488b5d80	             mov rbx, qword [rbp - 0x80]	      4275	ftp.c	FUNCTION_62	IF_18	CALL_22
0x4007d5f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4275	ftp.c	FUNCTION_62	IF_18	CALL_22
0x4007d63	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      4275	ftp.c	FUNCTION_62	IF_18	CALL_22
0x4007d6a	          0x4885c0	                           test rax, rax	      4275	ftp.c	FUNCTION_62	IF_18	CALL_22
0x4007d6d	            0x7415	                            je 0x4007d84	      4275	ftp.c	FUNCTION_62	IF_18	CALL_22
0x4007d6f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4275	ftp.c	FUNCTION_62	IF_18	CALL_22
0x4007d73	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      4275	ftp.c	FUNCTION_62	IF_18	CALL_22
0x4007d7a	          0x4889c7	                            mov rdi, rax	      4275	ftp.c	FUNCTION_62	IF_18	CALL_22
0x4007d7d	      0xe800000000	                          call 0x4007d82	      4275	ftp.c	FUNCTION_62	IF_18	CALL_22
0x4007d82	            0xeb05	                           jmp 0x4007d89	      4275	ftp.c	FUNCTION_62	IF_18	CALL_22
0x4007d84	      0xb800000000	                              mov eax, 0	      4275	ftp.c	FUNCTION_62	IF_18	CALL_22
0x4007d89	          0x4829c3	                            sub rbx, rax	      4275	ftp.c	FUNCTION_62	IF_18	CALL_22
0x4007d8c	          0x4889d8	                            mov rax, rbx	      4275	ftp.c	FUNCTION_62	IF_18	CALL_22
0x4007d8f	        0x48894580	             mov qword [rbp - 0x80], rax	      4275	ftp.c	FUNCTION_62	IF_18	CALL_22
0x4007d93	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4276	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_23
0x4007d97	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      4276	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_23
0x4007d9e	          0x4889c7	                            mov rdi, rax	      4276	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_23
0x4007da1	      0xe800000000	                          call 0x4007da6	      4276	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_23
0x4007da6	          0x4889c2	                            mov rdx, rax	      4276	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_23
0x4007da9	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4276	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_23
0x4007dad	          0x4839c2	                            cmp rdx, rax	      4276	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_23
0x4007db0	            0x755d	                           jne 0x4007e0f	      4276	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_23
0x4007db2	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      4277	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_24
0x4007db6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4277	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_24
0x4007dba	    0x488b88a00000	            mov rcx, qword [rax + 0xa0] 	      4277	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_24
0x4007dc1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4277	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_24
0x4007dc5	          0x4889ce	                            mov rsi, rcx	      4277	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_24
0x4007dc8	          0x4889c7	                            mov rdi, rax	      4277	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_24
0x4007dcb	      0xe800000000	                          call 0x4007dd0	      4277	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_24
0x4007dd0	            0x85c0	                           test eax, eax	      4276	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_23
0x4007dd2	            0x753b	                           jne 0x4007e0f	      4276	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_23
0x4007dd4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4278	ftp.c	FUNCTION_62	IF_18	IF_20
0x4007dd8	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	      4278	ftp.c	FUNCTION_62	IF_18	IF_20
0x4007dde	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4278	ftp.c	FUNCTION_62	IF_18	IF_20
0x4007de2	    0x8b8078070000	           mov eax, dword [rax + 0x778] 	      4278	ftp.c	FUNCTION_62	IF_18	IF_20
0x4007de8	            0x39c2	                            cmp edx, eax	      4277	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_24
0x4007dea	            0x7523	                           jne 0x4007e0f	      4277	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_24
0x4007dec	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4279	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_25
0x4007df0	    0x488d35000000	                   lea rsi, [0x04007df7]	      4279	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_25
0x4007df7	          0x4889c7	                            mov rdi, rax	      4279	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_25
0x4007dfa	      0xb800000000	                              mov eax, 0	      4279	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_25
0x4007dff	      0xe800000000	                          call 0x4007e04	      4279	ftp.c	FUNCTION_62	IF_18	IF_20	CALL_25
0x4007e04	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4280	ftp.c	FUNCTION_62	IF_18	IF_20
0x4007e08	    0xc68092000000	                mov byte [rax + 0x92], 1	      4280	ftp.c	FUNCTION_62	IF_18	IF_20
0x4007e0f	    0x488b05000000	            mov rax, qword [0x04007e16] 	      4282	ftp.c	FUNCTION_62	IF_18	CALL_26
0x4007e16	          0x488b00	                    mov rax, qword [rax]	      4282	ftp.c	FUNCTION_62	IF_18	CALL_26
0x4007e19	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      4282	ftp.c	FUNCTION_62	IF_18	CALL_26
0x4007e1d	          0x4889d7	                            mov rdi, rdx	      4282	ftp.c	FUNCTION_62	IF_18	CALL_26
0x4007e20	            0xffd0	                                call rax	      4282	ftp.c	FUNCTION_62	IF_18	CALL_26
0x4007e22	      0xb800000000	                              mov eax, 0	      4285	ftp.c	FUNCTION_62
0x4007e27	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      4286	ftp.c	FUNCTION_62
0x4007e2b	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4286	ftp.c	FUNCTION_62
0x4007e34	            0x7405	                            je 0x4007e3b	      4286	ftp.c	FUNCTION_62
0x4007e36	      0xe800000000	                          call 0x4007e3b	      4286	ftp.c	FUNCTION_62
0x4007e3b	    0x4881c4980000	                           add rsp, 0x98	      4286	ftp.c	FUNCTION_62
0x4007e42	              0x5b	                                 pop rbx	      4286	ftp.c	FUNCTION_62
0x4007e43	              0x5d	                                 pop rbp	      4286	ftp.c	FUNCTION_62
0x4007e44	              0xc3	                                     ret	      4286	ftp.c	FUNCTION_62
ftp_state_pwd	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,2:IF,0:WHILE,0	23
0x4000e32	              0x55	                                push rbp	       811	ftp.c	FUNCTION_14
0x4000e33	          0x4889e5	                            mov rbp, rsp	       811	ftp.c	FUNCTION_14
0x4000e36	        0x4883ec20	                           sub rsp, 0x20	       811	ftp.c	FUNCTION_14
0x4000e3a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       811	ftp.c	FUNCTION_14
0x4000e3e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       815	ftp.c	FUNCTION_14	CALL_1
0x4000e42	    0x4805b0050000	                          add rax, 0x5b0	       815	ftp.c	FUNCTION_14	CALL_1
0x4000e48	    0x488d15000000	                   lea rdx, [0x04000e4f]	       815	ftp.c	FUNCTION_14	CALL_1
0x4000e4f	    0x488d35000000	                   lea rsi, [0x04000e56]	       815	ftp.c	FUNCTION_14	CALL_1
0x4000e56	          0x4889c7	                            mov rdi, rax	       815	ftp.c	FUNCTION_14	CALL_1
0x4000e59	      0xb800000000	                              mov eax, 0	       815	ftp.c	FUNCTION_14	CALL_1
0x4000e5e	      0xe800000000	                          call 0x4000e63	       815	ftp.c	FUNCTION_14	CALL_1
0x4000e63	          0x8945fc	                mov dword [rbp - 4], eax	       815	ftp.c	FUNCTION_14	CALL_1
0x4000e66	        0x837dfc00	                  cmp dword [rbp - 4], 0	       815	ftp.c	FUNCTION_14	CALL_1
0x4000e6a	            0x7405	                            je 0x4000e71	       815	ftp.c	FUNCTION_14	CALL_1
0x4000e6c	          0x8b45fc	                mov eax, dword [rbp - 4]	       815	ftp.c	FUNCTION_14	CALL_1
0x4000e6f	            0xeb16	                           jmp 0x4000e87	       815	ftp.c	FUNCTION_14	CALL_1
0x4000e71	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       816	ftp.c	FUNCTION_14	CALL_2
0x4000e75	      0xbe09000000	                              mov esi, 9	       816	ftp.c	FUNCTION_14	CALL_2
0x4000e7a	          0x4889c7	                            mov rdi, rax	       816	ftp.c	FUNCTION_14	CALL_2
0x4000e7d	      0xe8f5feffff	                         call sym._state	       816	ftp.c	FUNCTION_14	CALL_2
0x4000e82	      0xb800000000	                              mov eax, 0	       818	ftp.c	FUNCTION_14
0x4000e87	              0xc9	                                   leave	       819	ftp.c	FUNCTION_14
0x4000e88	              0xc3	                                     ret	       819	ftp.c	FUNCTION_14
ftp_state_type	DO,0:FOR,0:functions,0:ELSE,1:SWITCH,0:CALL,3:IF,2:WHILE,0	54
0x4002784	              0x55	                                push rbp	      1530	ftp.c	FUNCTION_26
0x4002785	          0x4889e5	                            mov rbp, rsp	      1530	ftp.c	FUNCTION_26
0x4002788	        0x4883ec30	                           sub rsp, 0x30	      1530	ftp.c	FUNCTION_26
0x400278c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1530	ftp.c	FUNCTION_26
0x4002790	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1531	ftp.c	FUNCTION_26
0x4002797	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1532	ftp.c	FUNCTION_26
0x400279b	          0x488b00	                    mov rax, qword [rax]	      1532	ftp.c	FUNCTION_26
0x400279e	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1532	ftp.c	FUNCTION_26
0x40027a5	        0x488945e8	             mov qword [rbp - 0x18], rax	      1532	ftp.c	FUNCTION_26
0x40027a9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1533	ftp.c	FUNCTION_26
0x40027ad	          0x488b00	                    mov rax, qword [rax]	      1533	ftp.c	FUNCTION_26
0x40027b0	        0x488945f0	             mov qword [rbp - 0x10], rax	      1533	ftp.c	FUNCTION_26
0x40027b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1534	ftp.c	FUNCTION_26
0x40027b8	    0x4805b0050000	                          add rax, 0x5b0	      1534	ftp.c	FUNCTION_26
0x40027be	        0x488945f8	                mov qword [rbp - 8], rax	      1534	ftp.c	FUNCTION_26
0x40027c2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1539	ftp.c	FUNCTION_26	IF_1
0x40027c6	     0xfb680a10700	          movzx eax, byte [rax + 0x7a1] 	      1539	ftp.c	FUNCTION_26	IF_1
0x40027cd	            0x84c0	                             test al, al	      1539	ftp.c	FUNCTION_26	IF_1
0x40027cf	            0x746a	                            je 0x400283b	      1539	ftp.c	FUNCTION_26	IF_1
0x40027d1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1539	ftp.c	FUNCTION_26	IF_1
0x40027d5	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1539	ftp.c	FUNCTION_26	IF_1
0x40027dc	          0x4885c0	                           test rax, rax	      1539	ftp.c	FUNCTION_26	IF_1
0x40027df	            0x745a	                            je 0x400283b	      1539	ftp.c	FUNCTION_26	IF_1
0x40027e1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1540	ftp.c	FUNCTION_26	IF_1	CALL_1
0x40027e5	     0xfb680940700	          movzx eax, byte [rax + 0x794] 	      1540	ftp.c	FUNCTION_26	IF_1	CALL_1
0x40027ec	           0xfb6d0	                           movzx edx, al	      1540	ftp.c	FUNCTION_26	IF_1	CALL_1
0x40027ef	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1540	ftp.c	FUNCTION_26	IF_1	CALL_1
0x40027f3	            0x89d6	                            mov esi, edx	      1540	ftp.c	FUNCTION_26	IF_1	CALL_1
0x40027f5	          0x4889c7	                            mov rdi, rax	      1540	ftp.c	FUNCTION_26	IF_1	CALL_1
0x40027f8	      0xe8d43b0000	                  call sym.ftp_need_type	      1540	ftp.c	FUNCTION_26	IF_1	CALL_1
0x40027fd	            0x85c0	                           test eax, eax	      1539	ftp.c	FUNCTION_26	IF_1
0x40027ff	            0x743a	                            je 0x400283b	      1539	ftp.c	FUNCTION_26	IF_1
0x4002801	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1545	ftp.c	FUNCTION_26	IF_1
0x4002805	    0xc74018010000	               mov dword [rax + 0x18], 1	      1545	ftp.c	FUNCTION_26	IF_1
0x400280c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1550	ftp.c	FUNCTION_26	IF_1	CALL_2
0x4002810	     0xfb680940700	          movzx eax, byte [rax + 0x794] 	      1550	ftp.c	FUNCTION_26	IF_1	CALL_2
0x4002817	           0xfb6c8	                           movzx ecx, al	      1550	ftp.c	FUNCTION_26	IF_1	CALL_2
0x400281a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1550	ftp.c	FUNCTION_26	IF_1	CALL_2
0x400281e	      0xba13000000	                           mov edx, 0x13	      1550	ftp.c	FUNCTION_26	IF_1	CALL_2
0x4002823	            0x89ce	                            mov esi, ecx	      1550	ftp.c	FUNCTION_26	IF_1	CALL_2
0x4002825	          0x4889c7	                            mov rdi, rax	      1550	ftp.c	FUNCTION_26	IF_1	CALL_2
0x4002828	      0xe8db3b0000	                    call sym.ftp_nb_type	      1550	ftp.c	FUNCTION_26	IF_1	CALL_2
0x400282d	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1550	ftp.c	FUNCTION_26	IF_1	CALL_2
0x4002830	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1551	ftp.c	FUNCTION_26	IF_1	IF_2
0x4002834	            0x7414	                            je 0x400284a	      1551	ftp.c	FUNCTION_26	IF_1	IF_2
0x4002836	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1552	ftp.c	FUNCTION_26	IF_1	IF_2
0x4002839	            0xeb12	                           jmp 0x400284d	      1552	ftp.c	FUNCTION_26	IF_1	IF_2
0x400283b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1555	ftp.c	FUNCTION_26	CALL_3
0x400283f	          0x4889c7	                            mov rdi, rax	      1555	ftp.c	FUNCTION_26	CALL_3
0x4002842	      0xe8fffbffff	                 call sym.ftp_state_size	      1555	ftp.c	FUNCTION_26	CALL_3
0x4002847	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1555	ftp.c	FUNCTION_26	CALL_3
0x400284a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1557	ftp.c	FUNCTION_26
0x400284d	              0xc9	                                   leave	      1558	ftp.c	FUNCTION_26
0x400284e	              0xc3	                                     ret	      1558	ftp.c	FUNCTION_26
ftp_state_user	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,2:IF,0:WHILE,0	38
0x4000da0	              0x55	                                push rbp	       798	ftp.c	FUNCTION_13
0x4000da1	          0x4889e5	                            mov rbp, rsp	       798	ftp.c	FUNCTION_13
0x4000da4	        0x4883ec20	                           sub rsp, 0x20	       798	ftp.c	FUNCTION_13
0x4000da8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       798	ftp.c	FUNCTION_13
0x4000dac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       800	ftp.c	FUNCTION_13
0x4000db0	          0x488b00	                    mov rax, qword [rax]	       800	ftp.c	FUNCTION_13
0x4000db3	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	       800	ftp.c	FUNCTION_13
0x4000dba	        0x488945f8	                mov qword [rbp - 8], rax	       800	ftp.c	FUNCTION_13
0x4000dbe	        0x488b45f8	                mov rax, qword [rbp - 8]	       802	ftp.c	FUNCTION_13	CALL_1
0x4000dc2	        0x488b4008	                mov rax, qword [rax + 8]	       802	ftp.c	FUNCTION_13	CALL_1
0x4000dc6	          0x4885c0	                           test rax, rax	       802	ftp.c	FUNCTION_13	CALL_1
0x4000dc9	            0x740a	                            je 0x4000dd5	       802	ftp.c	FUNCTION_13	CALL_1
0x4000dcb	        0x488b45f8	                mov rax, qword [rbp - 8]	       802	ftp.c	FUNCTION_13	CALL_1
0x4000dcf	        0x488b4008	                mov rax, qword [rax + 8]	       802	ftp.c	FUNCTION_13	CALL_1
0x4000dd3	            0xeb07	                           jmp 0x4000ddc	       802	ftp.c	FUNCTION_13	CALL_1
0x4000dd5	    0x488d05000000	                   lea rax, [0x04000ddc]	       802	ftp.c	FUNCTION_13	CALL_1
0x4000ddc	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       802	ftp.c	FUNCTION_13	CALL_1
0x4000de0	    0x488d8ab00500	                  lea rcx, [rdx + 0x5b0]	       802	ftp.c	FUNCTION_13	CALL_1
0x4000de7	          0x4889c2	                            mov rdx, rax	       802	ftp.c	FUNCTION_13	CALL_1
0x4000dea	    0x488d35000000	                   lea rsi, [0x04000df1]	       802	ftp.c	FUNCTION_13	CALL_1
0x4000df1	          0x4889cf	                            mov rdi, rcx	       802	ftp.c	FUNCTION_13	CALL_1
0x4000df4	      0xb800000000	                              mov eax, 0	       802	ftp.c	FUNCTION_13	CALL_1
0x4000df9	      0xe800000000	                          call 0x4000dfe	       802	ftp.c	FUNCTION_13	CALL_1
0x4000dfe	          0x8945f4	              mov dword [rbp - 0xc], eax	       802	ftp.c	FUNCTION_13	CALL_1
0x4000e01	        0x837df400	                cmp dword [rbp - 0xc], 0	       802	ftp.c	FUNCTION_13	CALL_1
0x4000e05	            0x7405	                            je 0x4000e0c	       802	ftp.c	FUNCTION_13	CALL_1
0x4000e07	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       802	ftp.c	FUNCTION_13	CALL_1
0x4000e0a	            0xeb24	                           jmp 0x4000e30	       802	ftp.c	FUNCTION_13	CALL_1
0x4000e0c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       804	ftp.c	FUNCTION_13	CALL_2
0x4000e10	      0xbe03000000	                              mov esi, 3	       804	ftp.c	FUNCTION_13	CALL_2
0x4000e15	          0x4889c7	                            mov rdi, rax	       804	ftp.c	FUNCTION_13	CALL_2
0x4000e18	      0xe85affffff	                         call sym._state	       804	ftp.c	FUNCTION_13	CALL_2
0x4000e1d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       805	ftp.c	FUNCTION_13
0x4000e21	          0x488b00	                    mov rax, qword [rax]	       805	ftp.c	FUNCTION_13
0x4000e24	    0xc68078500000	              mov byte [rax + 0x5078], 0	       805	ftp.c	FUNCTION_13
0x4000e2b	      0xb800000000	                              mov eax, 0	       807	ftp.c	FUNCTION_13
0x4000e30	              0xc9	                                   leave	       808	ftp.c	FUNCTION_13
0x4000e31	              0xc3	                                     ret	       808	ftp.c	FUNCTION_13
ftp_state_use_port	DO,0:FOR,3:functions,0:ELSE,10:SWITCH,3:CALL,75:IF,35:WHILE,1	784
0x4001198	              0x55	                                push rbp	       932	ftp.c	FUNCTION_18
0x4001199	          0x4889e5	                            mov rbp, rsp	       932	ftp.c	FUNCTION_18
0x400119c	              0x53	                                push rbx	       932	ftp.c	FUNCTION_18
0x400119d	    0x4881ec580a00	                          sub rsp, 0xa58	       932	ftp.c	FUNCTION_18
0x40011a4	    0x4889bda8f5ff	            mov qword [rbp - 0xa58], rdi	       932	ftp.c	FUNCTION_18
0x40011ab	    0x89b5a4f5ffff	            mov dword [rbp - 0xa5c], esi	       932	ftp.c	FUNCTION_18
0x40011b1	    0x64488b042528	                mov rax, qword fs:[0x28]	       932	ftp.c	FUNCTION_18
0x40011ba	        0x488945e8	             mov qword [rbp - 0x18], rax	       932	ftp.c	FUNCTION_18
0x40011be	            0x31c0	                            xor eax, eax	       932	ftp.c	FUNCTION_18
0x40011c0	    0xc785c4f5ffff	              mov dword [rbp - 0xa3c], 0	       933	ftp.c	FUNCTION_18
0x40011ca	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	       934	ftp.c	FUNCTION_18
0x40011d1	    0x4805b0050000	                          add rax, 0x5b0	       934	ftp.c	FUNCTION_18
0x40011d7	    0x48898510f6ff	            mov qword [rbp - 0x9f0], rax	       934	ftp.c	FUNCTION_18
0x40011de	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	       935	ftp.c	FUNCTION_18
0x40011e5	          0x488b00	                    mov rax, qword [rax]	       935	ftp.c	FUNCTION_18
0x40011e8	    0x48898518f6ff	            mov qword [rbp - 0x9e8], rax	       935	ftp.c	FUNCTION_18
0x40011ef	    0xc785bcf5ffff	    mov dword [rbp - 0xa44], 0xffffffff 	       936	ftp.c	FUNCTION_18
0x40011f9	    0x48c785e0f6ff	              mov qword [rbp - 0x920], 0	       937	ftp.c	FUNCTION_18
0x4001204	    0x488d95e8f6ff	                  lea rdx, [rbp - 0x918]	       937	ftp.c	FUNCTION_18
0x400120b	      0xb800000000	                              mov eax, 0	       937	ftp.c	FUNCTION_18
0x4001210	      0xb91f000000	                           mov ecx, 0x1f	       937	ftp.c	FUNCTION_18
0x4001215	          0x4889d7	                            mov rdi, rdx	       937	ftp.c	FUNCTION_18
0x4001218	          0xf348ab	              rep stosq qword [rdi], rax	       937	ftp.c	FUNCTION_18
0x400121b	    0x488d8560f6ff	                  lea rax, [rbp - 0x9a0]	       943	ftp.c	FUNCTION_18
0x4001222	    0x48898520f6ff	            mov qword [rbp - 0x9e0], rax	       943	ftp.c	FUNCTION_18
0x4001229	    0x488b8520f6ff	            mov rax, qword [rbp - 0x9e0]	       944	ftp.c	FUNCTION_18
0x4001230	    0x48898528f6ff	            mov qword [rbp - 0x9d8], rax	       944	ftp.c	FUNCTION_18
0x4001237	    0x488b8520f6ff	            mov rax, qword [rbp - 0x9e0]	       946	ftp.c	FUNCTION_18
0x400123e	    0x48898530f6ff	            mov qword [rbp - 0x9d0], rax	       946	ftp.c	FUNCTION_18
0x4001245	    0x48c785e8f5ff	              mov qword [rbp - 0xa18], 0	       952	ftp.c	FUNCTION_18
0x4001250	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       953	ftp.c	FUNCTION_18
0x4001257	    0x488b80500800	           mov rax, qword [rax + 0x850] 	       953	ftp.c	FUNCTION_18
0x400125e	    0x48898538f6ff	            mov qword [rbp - 0x9c8], rax	       953	ftp.c	FUNCTION_18
0x4001265	    0x48c785d0f5ff	              mov qword [rbp - 0xa30], 0	       954	ftp.c	FUNCTION_18
0x4001270	    0x66c785b6f5ff	               mov word [rbp - 0xa4a], 0	       955	ftp.c	FUNCTION_18
0x4001279	    0x66c785b8f5ff	               mov word [rbp - 0xa48], 0	       956	ftp.c	FUNCTION_18
0x4001282	    0xc685b5f5ffff	               mov byte [rbp - 0xa4b], 1	       958	ftp.c	FUNCTION_18
0x4001289	    0x48c785f0f5ff	              mov qword [rbp - 0xa10], 0	       960	ftp.c	FUNCTION_18
0x4001294	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       967	ftp.c	FUNCTION_18	IF_1
0x400129b	    0x488b80500800	           mov rax, qword [rax + 0x850] 	       967	ftp.c	FUNCTION_18	IF_1
0x40012a2	          0x4885c0	                           test rax, rax	       967	ftp.c	FUNCTION_18	IF_1
0x40012a5	     0xf84c5030000	                            je 0x4001670	       967	ftp.c	FUNCTION_18	IF_1
0x40012ab	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       968	ftp.c	FUNCTION_18	IF_1	CALL_1
0x40012b2	    0x488b80500800	           mov rax, qword [rax + 0x850] 	       968	ftp.c	FUNCTION_18	IF_1	CALL_1
0x40012b9	          0x4889c7	                            mov rdi, rax	       968	ftp.c	FUNCTION_18	IF_1	CALL_1
0x40012bc	      0xe800000000	                          call 0x40012c1	       968	ftp.c	FUNCTION_18	IF_1	CALL_1
0x40012c1	        0x4883f801	                              cmp rax, 1	       967	ftp.c	FUNCTION_18	IF_1
0x40012c5	     0xf86a5030000	                           jbe 0x4001670	       967	ftp.c	FUNCTION_18	IF_1
0x40012cb	    0x488b8538f6ff	            mov rax, qword [rbp - 0x9c8]	       971	ftp.c	FUNCTION_18	IF_1	CALL_2
0x40012d2	          0x4889c7	                            mov rdi, rax	       971	ftp.c	FUNCTION_18	IF_1	CALL_2
0x40012d5	      0xe800000000	                          call 0x40012da	       971	ftp.c	FUNCTION_18	IF_1	CALL_2
0x40012da	        0x4883f82d	                           cmp rax, 0x2d	       972	ftp.c	FUNCTION_18	IF_1	CALL_3
0x40012de	            0x7611	                           jbe 0x40012f1	       972	ftp.c	FUNCTION_18	IF_1	CALL_3
0x40012e0	    0x488b8538f6ff	            mov rax, qword [rbp - 0x9c8]	       972	ftp.c	FUNCTION_18	IF_1	CALL_3
0x40012e7	          0x4889c7	                            mov rdi, rax	       972	ftp.c	FUNCTION_18	IF_1	CALL_3
0x40012ea	      0xe800000000	                          call 0x40012ef	       972	ftp.c	FUNCTION_18	IF_1	CALL_3
0x40012ef	            0xeb05	                           jmp 0x40012f6	       972	ftp.c	FUNCTION_18	IF_1	CALL_3
0x40012f1	      0xb82e000000	                           mov eax, 0x2e	       972	ftp.c	FUNCTION_18	IF_1	CALL_3
0x40012f6	    0x48898540f6ff	            mov qword [rbp - 0x9c0], rax	       971	ftp.c	FUNCTION_18	IF_1	CALL_2
0x40012fd	    0x488b8538f6ff	            mov rax, qword [rbp - 0x9c8]	       977	ftp.c	FUNCTION_18	IF_1
0x4001304	    0x48898548f6ff	            mov qword [rbp - 0x9b8], rax	       977	ftp.c	FUNCTION_18	IF_1
0x400130b	    0x48c785f8f5ff	              mov qword [rbp - 0xa08], 0	       978	ftp.c	FUNCTION_18	IF_1
0x4001316	    0x48c78550f6ff	              mov qword [rbp - 0x9b0], 0	       979	ftp.c	FUNCTION_18	IF_1
0x4001321	    0x48c78558f6ff	              mov qword [rbp - 0x9a8], 0	       980	ftp.c	FUNCTION_18	IF_1
0x400132c	    0x488b05000000	            mov rax, qword [0x04001333] 	       982	ftp.c	FUNCTION_18	IF_1	CALL_6
0x4001333	          0x488b00	                    mov rax, qword [rax]	       982	ftp.c	FUNCTION_18	IF_1	CALL_6
0x4001336	    0x488b9540f6ff	            mov rdx, qword [rbp - 0x9c0]	       982	ftp.c	FUNCTION_18	IF_1	CALL_6
0x400133d	        0x4883c201	                              add rdx, 1	       982	ftp.c	FUNCTION_18	IF_1	CALL_6
0x4001341	      0xbe01000000	                              mov esi, 1	       982	ftp.c	FUNCTION_18	IF_1	CALL_6
0x4001346	          0x4889d7	                            mov rdi, rdx	       982	ftp.c	FUNCTION_18	IF_1	CALL_6
0x4001349	            0xffd0	                                call rax	       982	ftp.c	FUNCTION_18	IF_1	CALL_6
0x400134b	    0x488985f0f5ff	            mov qword [rbp - 0xa10], rax	       982	ftp.c	FUNCTION_18	IF_1	CALL_6
0x4001352	    0x4883bdf0f5ff	              cmp qword [rbp - 0xa10], 0	       983	ftp.c	FUNCTION_18	IF_1	IF_2
0x400135a	            0x750a	                           jne 0x4001366	       983	ftp.c	FUNCTION_18	IF_1	IF_2
0x400135c	      0xb81b000000	                           mov eax, 0x1b	       984	ftp.c	FUNCTION_18	IF_1	IF_2
0x4001361	      0xe95f0d0000	                           jmp 0x40020c5	       984	ftp.c	FUNCTION_18	IF_1	IF_2
0x4001366	    0x488b8538f6ff	            mov rax, qword [rbp - 0x9c8]	       987	ftp.c	FUNCTION_18	IF_1	IF_3
0x400136d	           0xfb600	                   movzx eax, byte [rax]	       987	ftp.c	FUNCTION_18	IF_1	IF_3
0x4001370	            0x3c5b	                            cmp al, 0x5b	       987	ftp.c	FUNCTION_18	IF_1	IF_3
0x4001372	            0x7570	                           jne 0x40013e4	       987	ftp.c	FUNCTION_18	IF_1	IF_3
0x4001374	    0x488b8538f6ff	            mov rax, qword [rbp - 0x9c8]	       989	ftp.c	FUNCTION_18	IF_1	IF_3
0x400137b	        0x4883c001	                              add rax, 1	       989	ftp.c	FUNCTION_18	IF_1	IF_3
0x400137f	    0x48898548f6ff	            mov qword [rbp - 0x9b8], rax	       989	ftp.c	FUNCTION_18	IF_1	IF_3
0x4001386	    0x488b8538f6ff	            mov rax, qword [rbp - 0x9c8]	       990	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_7
0x400138d	      0xbe5d000000	                           mov esi, 0x5d	       990	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_7
0x4001392	          0x4889c7	                            mov rdi, rax	       990	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_7
0x4001395	      0xe800000000	                          call 0x400139a	       990	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_7
0x400139a	    0x488985f8f5ff	            mov qword [rbp - 0xa08], rax	       990	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_7
0x40013a1	    0x4883bdf8f5ff	              cmp qword [rbp - 0xa08], 0	       991	ftp.c	FUNCTION_18	IF_1	IF_3	IF_4
0x40013a9	     0xf8427010000	                            je 0x40014d6	       991	ftp.c	FUNCTION_18	IF_1	IF_3	IF_4
0x40013af	    0x488b95f8f5ff	            mov rdx, qword [rbp - 0xa08]	       992	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_8
0x40013b6	    0x488b8548f6ff	            mov rax, qword [rbp - 0x9b8]	       992	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_8
0x40013bd	          0x4829c2	                            sub rdx, rax	       992	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_8
0x40013c0	          0x4889d0	                            mov rax, rdx	       992	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_8
0x40013c3	          0x4889c2	                            mov rdx, rax	       992	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_8
0x40013c6	    0x488b8d48f6ff	            mov rcx, qword [rbp - 0x9b8]	       992	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_8
0x40013cd	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	       992	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_8
0x40013d4	          0x4889ce	                            mov rsi, rcx	       992	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_8
0x40013d7	          0x4889c7	                            mov rdi, rax	       992	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_8
0x40013da	      0xe800000000	                          call 0x40013df	       992	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_8
0x40013df	      0xe9f2000000	                           jmp 0x40014d6	       992	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_8
0x40013e4	    0x488b8538f6ff	            mov rax, qword [rbp - 0x9c8]	       996	ftp.c	FUNCTION_18	IF_1	ELSE_1	IF_5
0x40013eb	           0xfb600	                   movzx eax, byte [rax]	       996	ftp.c	FUNCTION_18	IF_1	ELSE_1	IF_5
0x40013ee	            0x3c3a	                            cmp al, 0x3a	       996	ftp.c	FUNCTION_18	IF_1	ELSE_1	IF_5
0x40013f0	            0x7513	                           jne 0x4001405	       996	ftp.c	FUNCTION_18	IF_1	ELSE_1	IF_5
0x40013f2	    0x488b8538f6ff	            mov rax, qword [rbp - 0x9c8]	       998	ftp.c	FUNCTION_18	IF_1	ELSE_1	IF_5
0x40013f9	    0x488985f8f5ff	            mov qword [rbp - 0xa08], rax	       998	ftp.c	FUNCTION_18	IF_1	ELSE_1	IF_5
0x4001400	      0xe9d1000000	                           jmp 0x40014d6	       998	ftp.c	FUNCTION_18	IF_1	ELSE_1	IF_5
0x4001405	    0x488b8538f6ff	            mov rax, qword [rbp - 0x9c8]	      1001	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_9
0x400140c	      0xbe3a000000	                           mov esi, 0x3a	      1001	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_9
0x4001411	          0x4889c7	                            mov rdi, rax	      1001	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_9
0x4001414	      0xe800000000	                          call 0x4001419	      1001	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_9
0x4001419	    0x488985f8f5ff	            mov qword [rbp - 0xa08], rax	      1001	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_9
0x4001420	    0x4883bdf8f5ff	              cmp qword [rbp - 0xa08], 0	      1002	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6
0x4001428	     0xf848f000000	                            je 0x40014bd	      1002	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6
0x400142e	    0x488b9530f6ff	            mov rdx, qword [rbp - 0x9d0]	      1005	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_10
0x4001435	    0x488b8538f6ff	            mov rax, qword [rbp - 0x9c8]	      1005	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_10
0x400143c	          0x4889c6	                            mov rsi, rax	      1005	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_10
0x400143f	      0xbf0a000000	                            mov edi, 0xa	      1005	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_10
0x4001444	      0xe800000000	                          call 0x4001449	      1005	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_10
0x4001449	          0x83f801	                              cmp eax, 1	      1005	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_10
0x400144c	            0x753d	                           jne 0x400148b	      1005	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_10
0x400144e	    0x66c785b8f5ff	               mov word [rbp - 0xa48], 0	      1007	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7
0x4001457	     0xfb785b8f5ff	           movzx eax, word [rbp - 0xa48]	      1007	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7
0x400145e	    0x668985b6f5ff	              mov word [rbp - 0xa4a], ax	      1007	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7
0x4001465	    0x488b9538f6ff	            mov rdx, qword [rbp - 0x9c8]	      1008	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_11
0x400146c	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      1008	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_11
0x4001473	          0x4889d6	                            mov rsi, rdx	      1008	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_11
0x4001476	          0x4889c7	                            mov rdi, rax	      1008	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_11
0x4001479	      0xe800000000	                          call 0x400147e	      1008	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_11
0x400147e	    0x48c785f8f5ff	              mov qword [rbp - 0xa08], 0	      1009	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7
0x4001489	            0xeb4b	                           jmp 0x40014d6	      1009	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7
0x400148b	    0x488b95f8f5ff	            mov rdx, qword [rbp - 0xa08]	      1014	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	CALL_12
0x4001492	    0x488b8548f6ff	            mov rax, qword [rbp - 0x9b8]	      1014	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	CALL_12
0x4001499	          0x4829c2	                            sub rdx, rax	      1014	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	CALL_12
0x400149c	          0x4889d0	                            mov rax, rdx	      1014	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	CALL_12
0x400149f	          0x4889c2	                            mov rdx, rax	      1014	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	CALL_12
0x40014a2	    0x488b8d38f6ff	            mov rcx, qword [rbp - 0x9c8]	      1014	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	CALL_12
0x40014a9	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      1014	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	CALL_12
0x40014b0	          0x4889ce	                            mov rsi, rcx	      1014	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	CALL_12
0x40014b3	          0x4889c7	                            mov rdi, rax	      1014	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	CALL_12
0x40014b6	      0xe800000000	                          call 0x40014bb	      1014	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	CALL_12
0x40014bb	            0xeb19	                           jmp 0x40014d6	      1014	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	CALL_12
0x40014bd	    0x488b9538f6ff	            mov rdx, qword [rbp - 0x9c8]	      1018	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_13
0x40014c4	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      1018	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_13
0x40014cb	          0x4889d6	                            mov rsi, rdx	      1018	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_13
0x40014ce	          0x4889c7	                            mov rdi, rax	      1018	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_13
0x40014d1	      0xe800000000	                          call 0x40014d6	      1018	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_13
0x40014d6	    0x4883bdf8f5ff	              cmp qword [rbp - 0xa08], 0	      1022	ftp.c	FUNCTION_18	IF_1	IF_8
0x40014de	     0xf84b6000000	                            je 0x400159a	      1022	ftp.c	FUNCTION_18	IF_1	IF_8
0x40014e4	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      1023	ftp.c	FUNCTION_18	IF_1	IF_8	CALL_14
0x40014eb	      0xbe3a000000	                           mov esi, 0x3a	      1023	ftp.c	FUNCTION_18	IF_1	IF_8	CALL_14
0x40014f0	          0x4889c7	                            mov rdi, rax	      1023	ftp.c	FUNCTION_18	IF_1	IF_8	CALL_14
0x40014f3	      0xe800000000	                          call 0x40014f8	      1023	ftp.c	FUNCTION_18	IF_1	IF_8	CALL_14
0x40014f8	    0x48898550f6ff	            mov qword [rbp - 0x9b0], rax	      1023	ftp.c	FUNCTION_18	IF_1	IF_8	CALL_14
0x40014ff	    0x4883bd50f6ff	              cmp qword [rbp - 0x9b0], 0	      1024	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9
0x4001507	     0xf848d000000	                            je 0x400159a	      1024	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9
0x400150d	    0x488b8550f6ff	            mov rax, qword [rbp - 0x9b0]	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x4001514	        0x4883c001	                              add rax, 1	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x4001518	      0xba0a000000	                            mov edx, 0xa	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x400151d	      0xbe00000000	                              mov esi, 0	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x4001522	          0x4889c7	                            mov rdi, rax	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x4001525	      0xe800000000	                          call 0x400152a	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x400152a	          0x4889c7	                            mov rdi, rax	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x400152d	      0xe800000000	                          call 0x4001532	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x4001532	    0x668985b6f5ff	              mov word [rbp - 0xa4a], ax	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x4001539	    0x488b8550f6ff	            mov rax, qword [rbp - 0x9b0]	      1026	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_17
0x4001540	      0xbe2d000000	                           mov esi, 0x2d	      1026	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_17
0x4001545	          0x4889c7	                            mov rdi, rax	      1026	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_17
0x4001548	      0xe800000000	                          call 0x400154d	      1026	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_17
0x400154d	    0x48898558f6ff	            mov qword [rbp - 0x9a8], rax	      1026	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_17
0x4001554	    0x4883bd58f6ff	              cmp qword [rbp - 0x9a8], 0	      1027	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10
0x400155c	            0x742e	                            je 0x400158c	      1027	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10
0x400155e	    0x488b8558f6ff	            mov rax, qword [rbp - 0x9a8]	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x4001565	        0x4883c001	                              add rax, 1	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x4001569	      0xba0a000000	                            mov edx, 0xa	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x400156e	      0xbe00000000	                              mov esi, 0	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x4001573	          0x4889c7	                            mov rdi, rax	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x4001576	      0xe800000000	                          call 0x400157b	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x400157b	          0x4889c7	                            mov rdi, rax	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x400157e	      0xe800000000	                          call 0x4001583	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x4001583	    0x668985b8f5ff	              mov word [rbp - 0xa48], ax	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x400158a	            0xeb0e	                           jmp 0x400159a	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x400158c	     0xfb785b6f5ff	           movzx eax, word [rbp - 0xa4a]	      1031	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	ELSE_5
0x4001593	    0x668985b8f5ff	              mov word [rbp - 0xa48], ax	      1031	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	ELSE_5
0x400159a	     0xfb785b6f5ff	           movzx eax, word [rbp - 0xa4a]	      1041	ftp.c	FUNCTION_18	IF_1	IF_11
0x40015a1	    0x663b85b8f5ff	              cmp ax, word [rbp - 0xa48]	      1041	ftp.c	FUNCTION_18	IF_1	IF_11
0x40015a8	            0x7617	                           jbe 0x40015c1	      1041	ftp.c	FUNCTION_18	IF_1	IF_11
0x40015aa	    0x66c785b8f5ff	               mov word [rbp - 0xa48], 0	      1042	ftp.c	FUNCTION_18	IF_1	IF_11
0x40015b3	     0xfb785b8f5ff	           movzx eax, word [rbp - 0xa48]	      1042	ftp.c	FUNCTION_18	IF_1	IF_11
0x40015ba	    0x668985b6f5ff	              mov word [rbp - 0xa4a], ax	      1042	ftp.c	FUNCTION_18	IF_1	IF_11
0x40015c1	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      1045	ftp.c	FUNCTION_18	IF_1	IF_12
0x40015c8	           0xfb600	                   movzx eax, byte [rax]	      1045	ftp.c	FUNCTION_18	IF_1	IF_12
0x40015cb	            0x84c0	                             test al, al	      1045	ftp.c	FUNCTION_18	IF_1	IF_12
0x40015cd	     0xf8492000000	                            je 0x4001665	      1045	ftp.c	FUNCTION_18	IF_1	IF_12
0x40015d3	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x40015da	    0x8b98c0000000	            mov ebx, dword [rax + 0xc0] 	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x40015e0	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1048	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_21
0x40015e7	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1048	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_21
0x40015eb	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1048	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_21
0x40015ef	          0x4889c7	                            mov rdi, rax	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x40015f2	      0xe800000000	                          call 0x40015f7	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x40015f7	            0x89c6	                            mov esi, eax	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x40015f9	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001600	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001604	          0x8b4004	                mov eax, dword [rax + 4]	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001607	    0x488d8de0fbff	                  lea rcx, [rbp - 0x420]	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x400160e	    0x488b95f0f5ff	            mov rdx, qword [rbp - 0xa10]	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001615	    0x41b901040000	                          mov r9d, 0x401	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x400161b	          0x4989c8	                             mov r8, rcx	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x400161e	          0x4889d1	                            mov rcx, rdx	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001621	            0x89da	                            mov edx, ebx	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001623	            0x89c7	                            mov edi, eax	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001625	      0xe800000000	                          call 0x400162a	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x400162a	          0x83f801	                              cmp eax, 1	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x400162d	            0x741c	                            je 0x400164b	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x400162f	          0x83f801	                              cmp eax, 1	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001632	            0x7207	                            jb 0x400163b	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001634	          0x83f802	                              cmp eax, 2	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001637	            0x741c	                            je 0x4001655	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001639	            0xeb35	                           jmp 0x4001670	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x400163b	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      1052	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1
0x4001642	    0x488985e8f5ff	            mov qword [rbp - 0xa18], rax	      1052	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1
0x4001649	            0xeb25	                           jmp 0x4001670	      1053	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1
0x400164b	      0xb81e000000	                           mov eax, 0x1e	      1055	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1
0x4001650	      0xe9700a0000	                           jmp 0x40020c5	      1055	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1
0x4001655	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      1057	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1
0x400165c	    0x488985e8f5ff	            mov qword [rbp - 0xa18], rax	      1057	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1
0x4001663	            0xeb0b	                           jmp 0x4001670	      1057	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1
0x4001665	    0x48c785e8f5ff	              mov qword [rbp - 0xa18], 0	      1062	ftp.c	FUNCTION_18	IF_1	ELSE_6
0x4001670	    0x4883bde8f5ff	              cmp qword [rbp - 0xa18], 0	      1065	ftp.c	FUNCTION_18	ELSE_6	IF_13
0x4001678	     0xf8509010000	                           jne 0x4001787	      1065	ftp.c	FUNCTION_18	ELSE_6	IF_13
0x400167e	    0xc785c0f5ffff	          mov dword [rbp - 0xa40], 0x80 	      1069	ftp.c	FUNCTION_18	ELSE_6	IF_13
0x4001688	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x400168f	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x4001695	    0x488d95c0f5ff	                  lea rdx, [rbp - 0xa40]	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x400169c	    0x488b8d20f6ff	            mov rcx, qword [rbp - 0x9e0]	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x40016a3	          0x4889ce	                            mov rsi, rcx	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x40016a6	            0x89c7	                            mov edi, eax	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x40016a8	      0xe800000000	                          call 0x40016ad	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x40016ad	            0x85c0	                           test eax, eax	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x40016af	            0x7456	                            je 0x4001707	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x40016b1	      0xe800000000	                          call 0x40016b6	      1072	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_24
0x40016b6	            0x8b10	                    mov edx, dword [rax]	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x40016b8	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x40016bf	            0x89d6	                            mov esi, edx	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x40016c1	          0x4889c7	                            mov rdi, rax	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x40016c4	      0xe800000000	                          call 0x40016c9	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x40016c9	          0x4889c2	                            mov rdx, rax	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x40016cc	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x40016d3	    0x488d35000000	                   lea rsi, [0x040016da]	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x40016da	          0x4889c7	                            mov rdi, rax	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x40016dd	      0xb800000000	                              mov eax, 0	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x40016e2	      0xe800000000	                          call 0x40016e7	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x40016e7	    0x488b05000000	            mov rax, qword [0x040016ee] 	      1073	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_25
0x40016ee	          0x488b00	                    mov rax, qword [rax]	      1073	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_25
0x40016f1	    0x488b95f0f5ff	            mov rdx, qword [rbp - 0xa10]	      1073	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_25
0x40016f8	          0x4889d7	                            mov rdi, rdx	      1073	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_25
0x40016fb	            0xffd0	                                call rax	      1073	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_25
0x40016fd	      0xb81e000000	                           mov eax, 0x1e	      1074	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14
0x4001702	      0xe9be090000	                           jmp 0x40020c5	      1074	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14
0x4001707	    0x488b8520f6ff	            mov rax, qword [rbp - 0x9e0]	      1076	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x400170e	           0xfb700	                   movzx eax, word [rax]	      1076	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x4001711	           0xfb7c0	                           movzx eax, ax	      1076	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x4001714	          0x83f80a	                            cmp eax, 0xa	      1076	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x4001717	            0x752d	                           jne 0x4001746	      1076	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x4001719	    0x488b8530f6ff	            mov rax, qword [rbp - 0x9d0]	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x4001720	        0x488d7008	                      lea rsi, [rax + 8]	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x4001724	    0x488b8520f6ff	            mov rax, qword [rbp - 0x9e0]	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x400172b	           0xfb700	                   movzx eax, word [rax]	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x400172e	           0xfb7c0	                           movzx eax, ax	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x4001731	    0x488d95e0fbff	                  lea rdx, [rbp - 0x420]	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x4001738	      0xb901040000	                          mov ecx, 0x401	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x400173d	            0x89c7	                            mov edi, eax	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x400173f	      0xe800000000	                          call 0x4001744	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x4001744	            0xeb2c	                           jmp 0x4001772	      1080	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x4001746	    0x488b8528f6ff	            mov rax, qword [rbp - 0x9d8]	      1083	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_27
0x400174d	        0x488d7004	                      lea rsi, [rax + 4]	      1083	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_27
0x4001751	    0x488b8520f6ff	            mov rax, qword [rbp - 0x9e0]	      1083	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_27
0x4001758	           0xfb700	                   movzx eax, word [rax]	      1083	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_27
0x400175b	           0xfb7c0	                           movzx eax, ax	      1083	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_27
0x400175e	    0x488d95e0fbff	                  lea rdx, [rbp - 0x420]	      1083	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_27
0x4001765	      0xb901040000	                          mov ecx, 0x401	      1083	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_27
0x400176a	            0x89c7	                            mov edi, eax	      1083	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_27
0x400176c	      0xe800000000	                          call 0x4001771	      1083	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_27
0x4001771	              0x90	                                     nop	      1084	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x4001772	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      1086	ftp.c	FUNCTION_18	ELSE_6	IF_13
0x4001779	    0x488985e8f5ff	            mov qword [rbp - 0xa18], rax	      1086	ftp.c	FUNCTION_18	ELSE_6	IF_13
0x4001780	    0xc685b5f5ffff	               mov byte [rbp - 0xa4b], 0	      1087	ftp.c	FUNCTION_18	ELSE_6	IF_13
0x4001787	    0x488d95d0f5ff	                  lea rdx, [rbp - 0xa30]	      1091	ftp.c	FUNCTION_18	CALL_28
0x400178e	    0x488bb5e8f5ff	            mov rsi, qword [rbp - 0xa18]	      1091	ftp.c	FUNCTION_18	CALL_28
0x4001795	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1091	ftp.c	FUNCTION_18	CALL_28
0x400179c	          0x4889d1	                            mov rcx, rdx	      1091	ftp.c	FUNCTION_18	CALL_28
0x400179f	      0xba00000000	                              mov edx, 0	      1091	ftp.c	FUNCTION_18	CALL_28
0x40017a4	          0x4889c7	                            mov rdi, rax	      1091	ftp.c	FUNCTION_18	CALL_28
0x40017a7	      0xe800000000	                          call 0x40017ac	      1091	ftp.c	FUNCTION_18	CALL_28
0x40017ac	    0x8985ccf5ffff	            mov dword [rbp - 0xa34], eax	      1091	ftp.c	FUNCTION_18	CALL_28
0x40017b2	    0x83bdccf5ffff	              cmp dword [rbp - 0xa34], 1	      1092	ftp.c	FUNCTION_18	IF_15
0x40017b9	            0x7519	                           jne 0x40017d4	      1092	ftp.c	FUNCTION_18	IF_15
0x40017bb	    0x488d95d0f5ff	                  lea rdx, [rbp - 0xa30]	      1093	ftp.c	FUNCTION_18	CALL_29
0x40017c2	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1093	ftp.c	FUNCTION_18	CALL_29
0x40017c9	          0x4889d6	                            mov rsi, rdx	      1093	ftp.c	FUNCTION_18	CALL_29
0x40017cc	          0x4889c7	                            mov rdi, rax	      1093	ftp.c	FUNCTION_18	CALL_29
0x40017cf	      0xe800000000	                          call 0x40017d4	      1093	ftp.c	FUNCTION_18	CALL_29
0x40017d4	    0x488b85d0f5ff	            mov rax, qword [rbp - 0xa30]	      1094	ftp.c	FUNCTION_18	IF_16
0x40017db	          0x4885c0	                           test rax, rax	      1094	ftp.c	FUNCTION_18	IF_16
0x40017de	            0x742c	                            je 0x400180c	      1094	ftp.c	FUNCTION_18	IF_16
0x40017e0	    0x488b85d0f5ff	            mov rax, qword [rbp - 0xa30]	      1095	ftp.c	FUNCTION_18	IF_16
0x40017e7	          0x488b00	                    mov rax, qword [rax]	      1095	ftp.c	FUNCTION_18	IF_16
0x40017ea	    0x488985d8f5ff	            mov qword [rbp - 0xa28], rax	      1095	ftp.c	FUNCTION_18	IF_16
0x40017f1	    0x488b95d0f5ff	            mov rdx, qword [rbp - 0xa30]	      1098	ftp.c	FUNCTION_18	IF_16	CALL_30
0x40017f8	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1098	ftp.c	FUNCTION_18	IF_16	CALL_30
0x40017ff	          0x4889d6	                            mov rsi, rdx	      1098	ftp.c	FUNCTION_18	IF_16	CALL_30
0x4001802	          0x4889c7	                            mov rdi, rax	      1098	ftp.c	FUNCTION_18	IF_16	CALL_30
0x4001805	      0xe800000000	                          call 0x400180a	      1098	ftp.c	FUNCTION_18	IF_16	CALL_30
0x400180a	            0xeb0b	                           jmp 0x4001817	      1098	ftp.c	FUNCTION_18	IF_16	CALL_30
0x400180c	    0x48c785d8f5ff	              mov qword [rbp - 0xa28], 0	      1101	ftp.c	FUNCTION_18	ELSE_7
0x4001817	    0x4883bdd8f5ff	              cmp qword [rbp - 0xa28], 0	      1103	ftp.c	FUNCTION_18	ELSE_7	IF_17
0x400181f	            0x7542	                           jne 0x4001863	      1103	ftp.c	FUNCTION_18	ELSE_7	IF_17
0x4001821	    0x488b95e8f5ff	            mov rdx, qword [rbp - 0xa18]	      1104	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_31
0x4001828	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1104	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_31
0x400182f	    0x488d35000000	                   lea rsi, [0x04001836]	      1104	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_31
0x4001836	          0x4889c7	                            mov rdi, rax	      1104	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_31
0x4001839	      0xb800000000	                              mov eax, 0	      1104	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_31
0x400183e	      0xe800000000	                          call 0x4001843	      1104	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_31
0x4001843	    0x488b05000000	            mov rax, qword [0x0400184a] 	      1105	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_32
0x400184a	          0x488b00	                    mov rax, qword [rax]	      1105	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_32
0x400184d	    0x488b95f0f5ff	            mov rdx, qword [rbp - 0xa10]	      1105	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_32
0x4001854	          0x4889d7	                            mov rdi, rdx	      1105	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_32
0x4001857	            0xffd0	                                call rax	      1105	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_32
0x4001859	      0xb81e000000	                           mov eax, 0x1e	      1106	ftp.c	FUNCTION_18	ELSE_7	IF_17
0x400185e	      0xe962080000	                           jmp 0x40020c5	      1106	ftp.c	FUNCTION_18	ELSE_7	IF_17
0x4001863	    0x488b05000000	            mov rax, qword [0x0400186a] 	      1109	ftp.c	FUNCTION_18	CALL_33
0x400186a	          0x488b00	                    mov rax, qword [rax]	      1109	ftp.c	FUNCTION_18	CALL_33
0x400186d	    0x488b95f0f5ff	            mov rdx, qword [rbp - 0xa10]	      1109	ftp.c	FUNCTION_18	CALL_33
0x4001874	          0x4889d7	                            mov rdi, rdx	      1109	ftp.c	FUNCTION_18	CALL_33
0x4001877	            0xffd0	                                call rax	      1109	ftp.c	FUNCTION_18	CALL_33
0x4001879	    0x48c785e8f5ff	              mov qword [rbp - 0xa18], 0	      1110	ftp.c	FUNCTION_18
0x4001884	    0xc785bcf5ffff	    mov dword [rbp - 0xa44], 0xffffffff 	      1114	ftp.c	FUNCTION_18
0x400188e	    0xc785c8f5ffff	              mov dword [rbp - 0xa38], 0	      1115	ftp.c	FUNCTION_18
0x4001898	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1116	ftp.c	FUNCTION_18	FOR_1
0x400189f	    0x488985e0f5ff	            mov qword [rbp - 0xa20], rax	      1116	ftp.c	FUNCTION_18	FOR_1
0x40018a6	            0xeb53	                           jmp 0x40018fb	      1116	ftp.c	FUNCTION_18	FOR_1
0x40018a8	    0x488d95bcf5ff	                  lea rdx, [rbp - 0xa44]	      1117	ftp.c	FUNCTION_18	FOR_1	CALL_34
0x40018af	    0x488bb5e0f5ff	            mov rsi, qword [rbp - 0xa20]	      1117	ftp.c	FUNCTION_18	FOR_1	CALL_34
0x40018b6	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1117	ftp.c	FUNCTION_18	FOR_1	CALL_34
0x40018bd	          0x4889d1	                            mov rcx, rdx	      1117	ftp.c	FUNCTION_18	FOR_1	CALL_34
0x40018c0	      0xba00000000	                              mov edx, 0	      1117	ftp.c	FUNCTION_18	FOR_1	CALL_34
0x40018c5	          0x4889c7	                            mov rdi, rax	      1117	ftp.c	FUNCTION_18	FOR_1	CALL_34
0x40018c8	      0xe800000000	                          call 0x40018cd	      1117	ftp.c	FUNCTION_18	FOR_1	CALL_34
0x40018cd	    0x8985c4f5ffff	            mov dword [rbp - 0xa3c], eax	      1117	ftp.c	FUNCTION_18	FOR_1	CALL_34
0x40018d3	    0x83bdc4f5ffff	              cmp dword [rbp - 0xa3c], 0	      1118	ftp.c	FUNCTION_18	FOR_1	IF_18
0x40018da	            0x742b	                            je 0x4001907	      1118	ftp.c	FUNCTION_18	FOR_1	IF_18
0x40018dc	      0xe800000000	                          call 0x40018e1	      1119	ftp.c	FUNCTION_18	FOR_1	IF_18
0x40018e1	            0x8b00	                    mov eax, dword [rax]	      1119	ftp.c	FUNCTION_18	FOR_1	IF_18
0x40018e3	    0x8985c8f5ffff	            mov dword [rbp - 0xa38], eax	      1119	ftp.c	FUNCTION_18	FOR_1	IF_18
0x40018e9	    0x488b85e0f5ff	            mov rax, qword [rbp - 0xa20]	      1116	ftp.c	FUNCTION_18	FOR_1
0x40018f0	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1116	ftp.c	FUNCTION_18	FOR_1
0x40018f4	    0x488985e0f5ff	            mov qword [rbp - 0xa20], rax	      1116	ftp.c	FUNCTION_18	FOR_1
0x40018fb	    0x4883bde0f5ff	              cmp qword [rbp - 0xa20], 0	      1116	ftp.c	FUNCTION_18	FOR_1
0x4001903	            0x75a3	                           jne 0x40018a8	      1116	ftp.c	FUNCTION_18	FOR_1
0x4001905	            0xeb01	                           jmp 0x4001908	      1116	ftp.c	FUNCTION_18	FOR_1
0x4001907	              0x90	                                     nop	      1122	ftp.c	FUNCTION_18	FOR_1
0x4001908	    0x4883bde0f5ff	              cmp qword [rbp - 0xa20], 0	      1124	ftp.c	FUNCTION_18	IF_19
0x4001910	            0x753f	                           jne 0x4001951	      1124	ftp.c	FUNCTION_18	IF_19
0x4001912	    0x8b95c8f5ffff	            mov edx, dword [rbp - 0xa38]	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x4001918	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x400191f	            0x89d6	                            mov esi, edx	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x4001921	          0x4889c7	                            mov rdi, rax	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x4001924	      0xe800000000	                          call 0x4001929	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x4001929	          0x4889c2	                            mov rdx, rax	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x400192c	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x4001933	    0x488d35000000	                   lea rsi, [0x0400193a]	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x400193a	          0x4889c7	                            mov rdi, rax	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x400193d	      0xb800000000	                              mov eax, 0	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x4001942	      0xe800000000	                          call 0x4001947	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x4001947	      0xb81e000000	                           mov eax, 0x1e	      1126	ftp.c	FUNCTION_18	IF_19
0x400194c	      0xe974070000	                           jmp 0x40020c5	      1126	ftp.c	FUNCTION_18	IF_19
0x4001951	    0x488b85e0f5ff	            mov rax, qword [rbp - 0xa20]	      1131	ftp.c	FUNCTION_18	CALL_37
0x4001958	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1131	ftp.c	FUNCTION_18	CALL_37
0x400195b	            0x89c2	                            mov edx, eax	      1131	ftp.c	FUNCTION_18	CALL_37
0x400195d	    0x488b85e0f5ff	            mov rax, qword [rbp - 0xa20]	      1131	ftp.c	FUNCTION_18	CALL_37
0x4001964	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      1131	ftp.c	FUNCTION_18	CALL_37
0x4001968	    0x488b8520f6ff	            mov rax, qword [rbp - 0x9e0]	      1131	ftp.c	FUNCTION_18	CALL_37
0x400196f	          0x4889ce	                            mov rsi, rcx	      1131	ftp.c	FUNCTION_18	CALL_37
0x4001972	          0x4889c7	                            mov rdi, rax	      1131	ftp.c	FUNCTION_18	CALL_37
0x4001975	      0xe800000000	                          call 0x400197a	      1131	ftp.c	FUNCTION_18	CALL_37
0x400197a	    0x488b85e0f5ff	            mov rax, qword [rbp - 0xa20]	      1132	ftp.c	FUNCTION_18
0x4001981	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1132	ftp.c	FUNCTION_18
0x4001984	    0x8985c0f5ffff	            mov dword [rbp - 0xa40], eax	      1132	ftp.c	FUNCTION_18
0x400198a	     0xfb785b6f5ff	           movzx eax, word [rbp - 0xa4a]	      1134	ftp.c	FUNCTION_18	FOR_2
0x4001991	    0x668985baf5ff	              mov word [rbp - 0xa46], ax	      1134	ftp.c	FUNCTION_18	FOR_2
0x4001998	      0xe9f4010000	                           jmp 0x4001b91	      1134	ftp.c	FUNCTION_18	FOR_2
0x400199d	    0x488b8520f6ff	            mov rax, qword [rbp - 0x9e0]	      1135	ftp.c	FUNCTION_18	FOR_2	IF_20
0x40019a4	           0xfb700	                   movzx eax, word [rax]	      1135	ftp.c	FUNCTION_18	FOR_2	IF_20
0x40019a7	        0x6683f802	                               cmp ax, 2	      1135	ftp.c	FUNCTION_18	FOR_2	IF_20
0x40019ab	            0x751d	                           jne 0x40019ca	      1135	ftp.c	FUNCTION_18	FOR_2	IF_20
0x40019ad	     0xfb785baf5ff	           movzx eax, word [rbp - 0xa46]	      1136	ftp.c	FUNCTION_18	FOR_2	CALL_38
0x40019b4	            0x89c7	                            mov edi, eax	      1136	ftp.c	FUNCTION_18	FOR_2	CALL_38
0x40019b6	      0xe800000000	                          call 0x40019bb	      1136	ftp.c	FUNCTION_18	FOR_2	CALL_38
0x40019bb	            0x89c2	                            mov edx, eax	      1136	ftp.c	FUNCTION_18	FOR_2	CALL_38
0x40019bd	    0x488b8528f6ff	            mov rax, qword [rbp - 0x9d8]	      1136	ftp.c	FUNCTION_18	FOR_2	CALL_38
0x40019c4	        0x66895002	                  mov word [rax + 2], dx	      1136	ftp.c	FUNCTION_18	FOR_2	CALL_38
0x40019c8	            0xeb1b	                           jmp 0x40019e5	      1136	ftp.c	FUNCTION_18	FOR_2	CALL_38
0x40019ca	     0xfb785baf5ff	           movzx eax, word [rbp - 0xa46]	      1139	ftp.c	FUNCTION_18	FOR_2	CALL_39
0x40019d1	            0x89c7	                            mov edi, eax	      1139	ftp.c	FUNCTION_18	FOR_2	CALL_39
0x40019d3	      0xe800000000	                          call 0x40019d8	      1139	ftp.c	FUNCTION_18	FOR_2	CALL_39
0x40019d8	            0x89c2	                            mov edx, eax	      1139	ftp.c	FUNCTION_18	FOR_2	CALL_39
0x40019da	    0x488b8530f6ff	            mov rax, qword [rbp - 0x9d0]	      1139	ftp.c	FUNCTION_18	FOR_2	CALL_39
0x40019e1	        0x66895002	                  mov word [rax + 2], dx	      1139	ftp.c	FUNCTION_18	FOR_2	CALL_39
0x40019e5	    0x8b95c0f5ffff	            mov edx, dword [rbp - 0xa40]	      1142	ftp.c	FUNCTION_18	FOR_2	IF_21	CALL_40
0x40019eb	    0x8b85bcf5ffff	            mov eax, dword [rbp - 0xa44]	      1142	ftp.c	FUNCTION_18	FOR_2	IF_21	CALL_40
0x40019f1	    0x488b8d20f6ff	            mov rcx, qword [rbp - 0x9e0]	      1142	ftp.c	FUNCTION_18	FOR_2	IF_21	CALL_40
0x40019f8	          0x4889ce	                            mov rsi, rcx	      1142	ftp.c	FUNCTION_18	FOR_2	IF_21	CALL_40
0x40019fb	            0x89c7	                            mov edi, eax	      1142	ftp.c	FUNCTION_18	FOR_2	IF_21	CALL_40
0x40019fd	      0xe800000000	                          call 0x4001a02	      1142	ftp.c	FUNCTION_18	FOR_2	IF_21	CALL_40
0x4001a02	            0x85c0	                           test eax, eax	      1142	ftp.c	FUNCTION_18	FOR_2	IF_21	CALL_40
0x4001a04	     0xf849d010000	                            je 0x4001ba7	      1142	ftp.c	FUNCTION_18	FOR_2	IF_21	CALL_40
0x4001a0a	      0xe800000000	                          call 0x4001a0f	      1144	ftp.c	FUNCTION_18	FOR_2	IF_21
0x4001a0f	            0x8b00	                    mov eax, dword [rax]	      1144	ftp.c	FUNCTION_18	FOR_2	IF_21
0x4001a11	    0x8985c8f5ffff	            mov dword [rbp - 0xa38], eax	      1144	ftp.c	FUNCTION_18	FOR_2	IF_21
0x4001a17	    0x80bdb5f5ffff	               cmp byte [rbp - 0xa4b], 0	      1145	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4001a1e	     0xf84ed000000	                            je 0x4001b11	      1145	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4001a24	    0x83bdc8f5ffff	          cmp dword [rbp - 0xa38], 0x63 	      1145	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4001a2b	     0xf85e0000000	                           jne 0x4001b11	      1145	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4001a31	    0x8b95c8f5ffff	            mov edx, dword [rbp - 0xa38]	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a37	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a3e	            0x89d6	                            mov esi, edx	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a40	          0x4889c7	                            mov rdi, rax	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a43	      0xe800000000	                          call 0x4001a48	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a48	          0x4889c1	                            mov rcx, rax	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a4b	     0xfb795baf5ff	           movzx edx, word [rbp - 0xa46]	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a52	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a59	    0x488d35000000	                   lea rsi, [0x04001a60]	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a60	          0x4889c7	                            mov rdi, rax	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a63	      0xb800000000	                              mov eax, 0	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a68	      0xe800000000	                          call 0x4001a6d	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a6d	    0xc785c0f5ffff	          mov dword [rbp - 0xa40], 0x80 	      1153	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4001a77	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4001a7e	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4001a84	    0x488d95c0f5ff	                  lea rdx, [rbp - 0xa40]	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4001a8b	    0x488b8d20f6ff	            mov rcx, qword [rbp - 0x9e0]	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4001a92	          0x4889ce	                            mov rsi, rcx	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4001a95	            0x89c7	                            mov edi, eax	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4001a97	      0xe800000000	                          call 0x4001a9c	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4001a9c	            0x85c0	                           test eax, eax	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4001a9e	            0x7457	                            je 0x4001af7	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4001aa0	      0xe800000000	                          call 0x4001aa5	      1156	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_45
0x4001aa5	            0x8b10	                    mov edx, dword [rax]	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4001aa7	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4001aae	            0x89d6	                            mov esi, edx	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4001ab0	          0x4889c7	                            mov rdi, rax	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4001ab3	      0xe800000000	                          call 0x4001ab8	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4001ab8	          0x4889c2	                            mov rdx, rax	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4001abb	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4001ac2	    0x488d35000000	                   lea rsi, [0x04001ac9]	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4001ac9	          0x4889c7	                            mov rdi, rax	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4001acc	      0xb800000000	                              mov eax, 0	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4001ad1	      0xe800000000	                          call 0x4001ad6	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4001ad6	    0x8b95bcf5ffff	            mov edx, dword [rbp - 0xa44]	      1157	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_46
0x4001adc	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1157	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_46
0x4001ae3	            0x89d6	                            mov esi, edx	      1157	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_46
0x4001ae5	          0x4889c7	                            mov rdi, rax	      1157	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_46
0x4001ae8	      0xe800000000	                          call 0x4001aed	      1157	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_46
0x4001aed	      0xb81e000000	                           mov eax, 0x1e	      1158	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23
0x4001af2	      0xe9ce050000	                           jmp 0x40020c5	      1158	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23
0x4001af7	     0xfb785b6f5ff	           movzx eax, word [rbp - 0xa4a]	      1160	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4001afe	    0x668985baf5ff	              mov word [rbp - 0xa46], ax	      1160	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4001b05	    0xc685b5f5ffff	               mov byte [rbp - 0xa4b], 0	      1161	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4001b0c	      0xe980000000	                           jmp 0x4001b91	      1162	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4001b11	    0x83bdc8f5ffff	          cmp dword [rbp - 0xa38], 0x62 	      1164	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24
0x4001b18	            0x7466	                            je 0x4001b80	      1164	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24
0x4001b1a	    0x83bdc8f5ffff	           cmp dword [rbp - 0xa38], 0xd 	      1164	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24
0x4001b21	            0x745d	                            je 0x4001b80	      1164	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24
0x4001b23	    0x8b95c8f5ffff	            mov edx, dword [rbp - 0xa38]	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b29	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b30	            0x89d6	                            mov esi, edx	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b32	          0x4889c7	                            mov rdi, rax	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b35	      0xe800000000	                          call 0x4001b3a	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b3a	          0x4889c1	                            mov rcx, rax	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b3d	     0xfb795baf5ff	           movzx edx, word [rbp - 0xa46]	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b44	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b4b	    0x488d35000000	                   lea rsi, [0x04001b52]	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b52	          0x4889c7	                            mov rdi, rax	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b55	      0xb800000000	                              mov eax, 0	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b5a	      0xe800000000	                          call 0x4001b5f	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b5f	    0x8b95bcf5ffff	            mov edx, dword [rbp - 0xa44]	      1167	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_49
0x4001b65	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1167	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_49
0x4001b6c	            0x89d6	                            mov esi, edx	      1167	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_49
0x4001b6e	          0x4889c7	                            mov rdi, rax	      1167	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_49
0x4001b71	      0xe800000000	                          call 0x4001b76	      1167	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_49
0x4001b76	      0xb81e000000	                           mov eax, 0x1e	      1168	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24
0x4001b7b	      0xe945050000	                           jmp 0x40020c5	      1168	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24
0x4001b80	     0xfb785baf5ff	           movzx eax, word [rbp - 0xa46]	      1174	ftp.c	FUNCTION_18	FOR_2	ELSE_9
0x4001b87	          0x83c001	                              add eax, 1	      1174	ftp.c	FUNCTION_18	FOR_2	ELSE_9
0x4001b8a	    0x668985baf5ff	              mov word [rbp - 0xa46], ax	      1174	ftp.c	FUNCTION_18	FOR_2	ELSE_9
0x4001b91	     0xfb785baf5ff	           movzx eax, word [rbp - 0xa46]	      1134	ftp.c	FUNCTION_18	FOR_2
0x4001b98	    0x663b85b8f5ff	              cmp ax, word [rbp - 0xa48]	      1134	ftp.c	FUNCTION_18	FOR_2
0x4001b9f	     0xf86f8fdffff	                           jbe 0x400199d	      1134	ftp.c	FUNCTION_18	FOR_2
0x4001ba5	            0xeb01	                           jmp 0x4001ba8	      1134	ftp.c	FUNCTION_18	FOR_2
0x4001ba7	              0x90	                                     nop	      1172	ftp.c	FUNCTION_18	FOR_2	ELSE_9
0x4001ba8	     0xfb785baf5ff	           movzx eax, word [rbp - 0xa46]	      1178	ftp.c	FUNCTION_18	ELSE_9	IF_25
0x4001baf	    0x663b85b8f5ff	              cmp ax, word [rbp - 0xa48]	      1178	ftp.c	FUNCTION_18	ELSE_9	IF_25
0x4001bb6	            0x763c	                           jbe 0x4001bf4	      1178	ftp.c	FUNCTION_18	ELSE_9	IF_25
0x4001bb8	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1179	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_50
0x4001bbf	    0x488d35000000	                   lea rsi, [0x04001bc6]	      1179	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_50
0x4001bc6	          0x4889c7	                            mov rdi, rax	      1179	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_50
0x4001bc9	      0xb800000000	                              mov eax, 0	      1179	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_50
0x4001bce	      0xe800000000	                          call 0x4001bd3	      1179	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_50
0x4001bd3	    0x8b95bcf5ffff	            mov edx, dword [rbp - 0xa44]	      1180	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_51
0x4001bd9	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1180	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_51
0x4001be0	            0x89d6	                            mov esi, edx	      1180	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_51
0x4001be2	          0x4889c7	                            mov rdi, rax	      1180	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_51
0x4001be5	      0xe800000000	                          call 0x4001bea	      1180	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_51
0x4001bea	      0xb81e000000	                           mov eax, 0x1e	      1181	ftp.c	FUNCTION_18	ELSE_9	IF_25
0x4001bef	      0xe9d1040000	                           jmp 0x40020c5	      1181	ftp.c	FUNCTION_18	ELSE_9	IF_25
0x4001bf4	    0xc785c0f5ffff	          mov dword [rbp - 0xa40], 0x80 	      1186	ftp.c	FUNCTION_18
0x4001bfe	    0x8b85bcf5ffff	            mov eax, dword [rbp - 0xa44]	      1187	ftp.c	FUNCTION_18	IF_26	CALL_52
0x4001c04	    0x488d95c0f5ff	                  lea rdx, [rbp - 0xa40]	      1187	ftp.c	FUNCTION_18	IF_26	CALL_52
0x4001c0b	    0x488b8d20f6ff	            mov rcx, qword [rbp - 0x9e0]	      1187	ftp.c	FUNCTION_18	IF_26	CALL_52
0x4001c12	          0x4889ce	                            mov rsi, rcx	      1187	ftp.c	FUNCTION_18	IF_26	CALL_52
0x4001c15	            0x89c7	                            mov edi, eax	      1187	ftp.c	FUNCTION_18	IF_26	CALL_52
0x4001c17	      0xe800000000	                          call 0x4001c1c	      1187	ftp.c	FUNCTION_18	IF_26	CALL_52
0x4001c1c	            0x85c0	                           test eax, eax	      1187	ftp.c	FUNCTION_18	IF_26	CALL_52
0x4001c1e	            0x7457	                            je 0x4001c77	      1187	ftp.c	FUNCTION_18	IF_26	CALL_52
0x4001c20	      0xe800000000	                          call 0x4001c25	      1189	ftp.c	FUNCTION_18	IF_26	CALL_54
0x4001c25	            0x8b10	                    mov edx, dword [rax]	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4001c27	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4001c2e	            0x89d6	                            mov esi, edx	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4001c30	          0x4889c7	                            mov rdi, rax	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4001c33	      0xe800000000	                          call 0x4001c38	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4001c38	          0x4889c2	                            mov rdx, rax	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4001c3b	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4001c42	    0x488d35000000	                   lea rsi, [0x04001c49]	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4001c49	          0x4889c7	                            mov rdi, rax	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4001c4c	      0xb800000000	                              mov eax, 0	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4001c51	      0xe800000000	                          call 0x4001c56	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4001c56	    0x8b95bcf5ffff	            mov edx, dword [rbp - 0xa44]	      1190	ftp.c	FUNCTION_18	IF_26	CALL_55
0x4001c5c	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1190	ftp.c	FUNCTION_18	IF_26	CALL_55
0x4001c63	            0x89d6	                            mov esi, edx	      1190	ftp.c	FUNCTION_18	IF_26	CALL_55
0x4001c65	          0x4889c7	                            mov rdi, rax	      1190	ftp.c	FUNCTION_18	IF_26	CALL_55
0x4001c68	      0xe800000000	                          call 0x4001c6d	      1190	ftp.c	FUNCTION_18	IF_26	CALL_55
0x4001c6d	      0xb81e000000	                           mov eax, 0x1e	      1191	ftp.c	FUNCTION_18	IF_26
0x4001c72	      0xe94e040000	                           jmp 0x40020c5	      1191	ftp.c	FUNCTION_18	IF_26
0x4001c77	    0x8b85bcf5ffff	            mov eax, dword [rbp - 0xa44]	      1196	ftp.c	FUNCTION_18	IF_27	CALL_56
0x4001c7d	      0xbe01000000	                              mov esi, 1	      1196	ftp.c	FUNCTION_18	IF_27	CALL_56
0x4001c82	            0x89c7	                            mov edi, eax	      1196	ftp.c	FUNCTION_18	IF_27	CALL_56
0x4001c84	      0xe800000000	                          call 0x4001c89	      1196	ftp.c	FUNCTION_18	IF_27	CALL_56
0x4001c89	            0x85c0	                           test eax, eax	      1196	ftp.c	FUNCTION_18	IF_27	CALL_56
0x4001c8b	            0x7457	                            je 0x4001ce4	      1196	ftp.c	FUNCTION_18	IF_27	CALL_56
0x4001c8d	      0xe800000000	                          call 0x4001c92	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001c92	            0x8b10	                    mov edx, dword [rax]	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001c94	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001c9b	            0x89d6	                            mov esi, edx	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001c9d	          0x4889c7	                            mov rdi, rax	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001ca0	      0xe800000000	                          call 0x4001ca5	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001ca5	          0x4889c2	                            mov rdx, rax	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001ca8	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001caf	    0x488d35000000	                   lea rsi, [0x04001cb6]	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001cb6	          0x4889c7	                            mov rdi, rax	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001cb9	      0xb800000000	                              mov eax, 0	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001cbe	      0xe800000000	                          call 0x4001cc3	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001cc3	    0x8b95bcf5ffff	            mov edx, dword [rbp - 0xa44]	      1198	ftp.c	FUNCTION_18	IF_27	CALL_59
0x4001cc9	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1198	ftp.c	FUNCTION_18	IF_27	CALL_59
0x4001cd0	            0x89d6	                            mov esi, edx	      1198	ftp.c	FUNCTION_18	IF_27	CALL_59
0x4001cd2	          0x4889c7	                            mov rdi, rax	      1198	ftp.c	FUNCTION_18	IF_27	CALL_59
0x4001cd5	      0xe800000000	                          call 0x4001cda	      1198	ftp.c	FUNCTION_18	IF_27	CALL_59
0x4001cda	      0xb81e000000	                           mov eax, 0x1e	      1199	ftp.c	FUNCTION_18	IF_27
0x4001cdf	      0xe9e1030000	                           jmp 0x40020c5	      1199	ftp.c	FUNCTION_18	IF_27
0x4001ce4	    0x488d8de0f6ff	                  lea rcx, [rbp - 0x920]	      1206	ftp.c	FUNCTION_18	CALL_60
0x4001ceb	    0x488b85e0f5ff	            mov rax, qword [rbp - 0xa20]	      1206	ftp.c	FUNCTION_18	CALL_60
0x4001cf2	      0xba00010000	                          mov edx, 0x100	      1206	ftp.c	FUNCTION_18	CALL_60
0x4001cf7	          0x4889ce	                            mov rsi, rcx	      1206	ftp.c	FUNCTION_18	CALL_60
0x4001cfa	          0x4889c7	                            mov rdi, rax	      1206	ftp.c	FUNCTION_18	CALL_60
0x4001cfd	      0xe800000000	                          call 0x4001d02	      1206	ftp.c	FUNCTION_18	CALL_60
0x4001d02	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1209	ftp.c	FUNCTION_18	IF_28
0x4001d09	     0xfb680650300	          movzx eax, byte [rax + 0x365] 	      1209	ftp.c	FUNCTION_18	IF_28
0x4001d10	          0x83f001	                              xor eax, 1	      1209	ftp.c	FUNCTION_18	IF_28
0x4001d13	            0x84c0	                             test al, al	      1209	ftp.c	FUNCTION_18	IF_28
0x4001d15	     0xf843a030000	                            je 0x4002055	      1209	ftp.c	FUNCTION_18	IF_28
0x4001d1b	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1209	ftp.c	FUNCTION_18	IF_28
0x4001d22	     0xfb6805b0300	          movzx eax, byte [rax + 0x35b] 	      1209	ftp.c	FUNCTION_18	IF_28
0x4001d29	            0x84c0	                             test al, al	      1209	ftp.c	FUNCTION_18	IF_28
0x4001d2b	     0xf8424030000	                            je 0x4002055	      1209	ftp.c	FUNCTION_18	IF_28
0x4001d31	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1212	ftp.c	FUNCTION_18	IF_28
0x4001d38	    0xc68065030000	               mov byte [rax + 0x365], 1	      1212	ftp.c	FUNCTION_18	IF_28
0x4001d3f	      0xe911030000	                           jmp 0x4002055	      1215	ftp.c	FUNCTION_18	FOR_3
0x4001d44	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1217	ftp.c	FUNCTION_18	FOR_3	IF_29
0x4001d4b	     0xfb680650300	          movzx eax, byte [rax + 0x365] 	      1217	ftp.c	FUNCTION_18	FOR_3	IF_29
0x4001d52	          0x83f001	                              xor eax, 1	      1217	ftp.c	FUNCTION_18	FOR_3	IF_29
0x4001d55	            0x84c0	                             test al, al	      1217	ftp.c	FUNCTION_18	FOR_3	IF_29
0x4001d57	            0x740d	                            je 0x4001d66	      1217	ftp.c	FUNCTION_18	FOR_3	IF_29
0x4001d59	    0x83bda4f5ffff	              cmp dword [rbp - 0xa5c], 0	      1217	ftp.c	FUNCTION_18	FOR_3	IF_29
0x4001d60	     0xf84e4020000	                            je 0x400204a	      1217	ftp.c	FUNCTION_18	FOR_3	IF_29
0x4001d66	    0x83bda4f5ffff	              cmp dword [rbp - 0xa5c], 1	      1221	ftp.c	FUNCTION_18	FOR_3	IF_30
0x4001d6d	            0x7514	                           jne 0x4001d83	      1221	ftp.c	FUNCTION_18	FOR_3	IF_30
0x4001d6f	    0x488b8520f6ff	            mov rax, qword [rbp - 0x9e0]	      1221	ftp.c	FUNCTION_18	FOR_3	IF_30
0x4001d76	           0xfb700	                   movzx eax, word [rax]	      1221	ftp.c	FUNCTION_18	FOR_3	IF_30
0x4001d79	        0x6683f802	                               cmp ax, 2	      1221	ftp.c	FUNCTION_18	FOR_3	IF_30
0x4001d7d	     0xf85ca020000	                           jne 0x400204d	      1221	ftp.c	FUNCTION_18	FOR_3	IF_30
0x4001d83	    0x488b8520f6ff	            mov rax, qword [rbp - 0x9e0]	      1225	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4001d8a	           0xfb700	                   movzx eax, word [rax]	      1225	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4001d8d	           0xfb7c0	                           movzx eax, ax	      1225	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4001d90	          0x83f802	                              cmp eax, 2	      1225	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4001d93	            0x740a	                            je 0x4001d9f	      1225	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4001d95	          0x83f80a	                            cmp eax, 0xa	      1225	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4001d98	            0x7423	                            je 0x4001dbd	      1225	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4001d9a	      0xe9af020000	                           jmp 0x400204e	      1235	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4001d9f	    0x488b8528f6ff	            mov rax, qword [rbp - 0x9d8]	      1227	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_61
0x4001da6	         0xfb74002	               movzx eax, word [rax + 2]	      1227	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_61
0x4001daa	           0xfb7c0	                           movzx eax, ax	      1227	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_61
0x4001dad	            0x89c7	                            mov edi, eax	      1227	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_61
0x4001daf	      0xe800000000	                          call 0x4001db4	      1227	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_61
0x4001db4	    0x668985baf5ff	              mov word [rbp - 0xa46], ax	      1227	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_61
0x4001dbb	            0xeb1d	                           jmp 0x4001dda	      1228	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4001dbd	    0x488b8530f6ff	            mov rax, qword [rbp - 0x9d0]	      1231	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_62
0x4001dc4	         0xfb74002	               movzx eax, word [rax + 2]	      1231	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_62
0x4001dc8	           0xfb7c0	                           movzx eax, ax	      1231	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_62
0x4001dcb	            0x89c7	                            mov edi, eax	      1231	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_62
0x4001dcd	      0xe800000000	                          call 0x4001dd2	      1231	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_62
0x4001dd2	    0x668985baf5ff	              mov word [rbp - 0xa46], ax	      1231	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_62
0x4001dd9	              0x90	                                     nop	      1232	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4001dda	    0x83bda4f5ffff	              cmp dword [rbp - 0xa5c], 0	      1238	ftp.c	FUNCTION_18	FOR_3	IF_31
0x4001de1	     0xf85ec000000	                           jne 0x4001ed3	      1238	ftp.c	FUNCTION_18	FOR_3	IF_31
0x4001de7	     0xfb7b5baf5ff	           movzx esi, word [rbp - 0xa46]	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001dee	    0x488b8520f6ff	            mov rax, qword [rbp - 0x9e0]	      1248	ftp.c	FUNCTION_18	FOR_3	IF_31
0x4001df5	           0xfb700	                   movzx eax, word [rax]	      1248	ftp.c	FUNCTION_18	FOR_3	IF_31
0x4001df8	        0x6683f802	                               cmp ax, 2	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001dfc	            0x7507	                           jne 0x4001e05	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001dfe	      0xbf01000000	                              mov edi, 1	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e03	            0xeb05	                           jmp 0x4001e0a	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e05	      0xbf02000000	                              mov edi, 2	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e0a	    0x8b95a4f5ffff	            mov edx, dword [rbp - 0xa5c]	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e10	          0x4889d0	                            mov rax, rdx	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e13	        0x48c1e002	                              shl rax, 2	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e17	          0x4801d0	                            add rax, rdx	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e1a	    0x488d15000000	                   lea rdx, [0x04001e21]	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e21	          0x4801c2	                            add rdx, rax	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e24	    0x488b8510f6ff	            mov rax, qword [rbp - 0x9f0]	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e2b	    0x488d8de0f6ff	                  lea rcx, [rbp - 0x920]	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e32	          0x4189f1	                            mov r9d, esi	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e35	          0x4989c8	                             mov r8, rcx	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e38	            0x89f9	                            mov ecx, edi	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e3a	    0x488d35000000	                   lea rsi, [0x04001e41]	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e41	          0x4889c7	                            mov rdi, rax	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e44	      0xb800000000	                              mov eax, 0	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e49	      0xe800000000	                          call 0x4001e4e	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e4e	    0x8985c4f5ffff	            mov dword [rbp - 0xa3c], eax	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e54	    0x83bdc4f5ffff	              cmp dword [rbp - 0xa3c], 0	      1250	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32
0x4001e5b	     0xf8403020000	                            je 0x4002064	      1250	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32
0x4001e61	    0x8b85c4f5ffff	            mov eax, dword [rbp - 0xa3c]	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x4001e67	            0x89c7	                            mov edi, eax	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x4001e69	      0xe800000000	                          call 0x4001e6e	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x4001e6e	          0x4889c2	                            mov rdx, rax	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x4001e71	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x4001e78	    0x488d35000000	                   lea rsi, [0x04001e7f]	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x4001e7f	          0x4889c7	                            mov rdi, rax	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x4001e82	      0xb800000000	                              mov eax, 0	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x4001e87	      0xe800000000	                          call 0x4001e8c	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x4001e8c	    0x8b95bcf5ffff	            mov edx, dword [rbp - 0xa44]	      1253	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_66
0x4001e92	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1253	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_66
0x4001e99	            0x89d6	                            mov esi, edx	      1253	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_66
0x4001e9b	          0x4889c7	                            mov rdi, rax	      1253	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_66
0x4001e9e	      0xe800000000	                          call 0x4001ea3	      1253	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_66
0x4001ea3	    0x488b8510f6ff	            mov rax, qword [rbp - 0x9f0]	      1255	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32
0x4001eaa	    0xc780b0000000	               mov dword [rax + 0xb0], 1	      1255	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32
0x4001eb4	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1257	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_67
0x4001ebb	      0xbe00000000	                              mov esi, 0	      1257	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_67
0x4001ec0	          0x4889c7	                            mov rdi, rax	      1257	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_67
0x4001ec3	      0xe8afeeffff	                         call sym._state	      1257	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_67
0x4001ec8	    0x8b85c4f5ffff	            mov eax, dword [rbp - 0xa3c]	      1258	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32
0x4001ece	      0xe9f2010000	                           jmp 0x40020c5	      1258	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32
0x4001ed3	    0x83bda4f5ffff	              cmp dword [rbp - 0xa5c], 1	      1262	ftp.c	FUNCTION_18	FOR_3	IF_33
0x4001eda	     0xf856e010000	                           jne 0x400204e	      1262	ftp.c	FUNCTION_18	FOR_3	IF_33
0x4001ee0	    0x488d85e0f6ff	                  lea rax, [rbp - 0x920]	      1263	ftp.c	FUNCTION_18	FOR_3	IF_33
0x4001ee7	    0x48898500f6ff	            mov qword [rbp - 0xa00], rax	      1263	ftp.c	FUNCTION_18	FOR_3	IF_33
0x4001eee	    0x488d85e0f7ff	                  lea rax, [rbp - 0x820]	      1264	ftp.c	FUNCTION_18	FOR_3	IF_33
0x4001ef5	    0x48898508f6ff	            mov qword [rbp - 0x9f8], rax	      1264	ftp.c	FUNCTION_18	FOR_3	IF_33
0x4001efc	            0xeb3d	                           jmp 0x4001f3b	      1267	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4001efe	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      1268	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	IF_34
0x4001f05	           0xfb600	                   movzx eax, byte [rax]	      1268	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	IF_34
0x4001f08	            0x3c2e	                            cmp al, 0x2e	      1268	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	IF_34
0x4001f0a	            0x750c	                           jne 0x4001f18	      1268	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	IF_34
0x4001f0c	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      1269	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	IF_34
0x4001f13	          0xc6002c	                    mov byte [rax], 0x2c	      1269	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	IF_34
0x4001f16	            0xeb13	                           jmp 0x4001f2b	      1269	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	IF_34
0x4001f18	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      1271	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	ELSE_10
0x4001f1f	           0xfb610	                   movzx edx, byte [rax]	      1271	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	ELSE_10
0x4001f22	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      1271	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	ELSE_10
0x4001f29	            0x8810	                      mov byte [rax], dl	      1271	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	ELSE_10
0x4001f2b	    0x48838508f6ff	              add qword [rbp - 0x9f8], 1	      1272	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4001f33	    0x48838500f6ff	              add qword [rbp - 0xa00], 1	      1273	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4001f3b	    0x4883bd00f6ff	              cmp qword [rbp - 0xa00], 0	      1267	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4001f43	            0x740e	                            je 0x4001f53	      1267	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4001f45	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      1267	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4001f4c	           0xfb600	                   movzx eax, byte [rax]	      1267	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4001f4f	            0x84c0	                             test al, al	      1267	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4001f51	            0x75ab	                           jne 0x4001efe	      1267	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4001f53	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      1275	ftp.c	FUNCTION_18	FOR_3	IF_33
0x4001f5a	          0xc60000	                       mov byte [rax], 0	      1275	ftp.c	FUNCTION_18	FOR_3	IF_33
0x4001f5d	     0xfb785baf5ff	           movzx eax, word [rbp - 0xa46]	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001f64	           0xfb6c8	                           movzx ecx, al	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001f67	     0xfb785baf5ff	           movzx eax, word [rbp - 0xa46]	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001f6e	        0x66c1e808	                               shr ax, 8	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001f72	           0xfb7d0	                           movzx edx, ax	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001f75	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001f7c	          0x4189c8	                            mov r8d, ecx	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001f7f	            0x89d1	                            mov ecx, edx	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001f81	    0x488d15000000	                   lea rdx, [0x04001f88]	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001f88	      0xbe14000000	                           mov esi, 0x14	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001f8d	          0x4889c7	                            mov rdi, rax	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001f90	      0xb800000000	                              mov eax, 0	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001f95	      0xe800000000	                          call 0x4001f9a	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001f9a	    0x8b95a4f5ffff	            mov edx, dword [rbp - 0xa5c]	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_69
0x4001fa0	          0x4889d0	                            mov rax, rdx	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_69
0x4001fa3	        0x48c1e002	                              shl rax, 2	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_69
0x4001fa7	          0x4801d0	                            add rax, rdx	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_69
0x4001faa	    0x488d15000000	                   lea rdx, [0x04001fb1]	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_69
0x4001fb1	        0x488d3410	                    lea rsi, [rax + rdx]	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_69
0x4001fb5	    0x488b8510f6ff	            mov rax, qword [rbp - 0x9f0]	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_69
0x4001fbc	    0x488d95e0f7ff	                  lea rdx, [rbp - 0x820]	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_69
0x4001fc3	          0x4889d1	                            mov rcx, rdx	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_69
0x4001fc6	          0x4889f2	                            mov rdx, rsi	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_69
0x4001fc9	    0x488d35000000	                   lea rsi, [0x04001fd0]	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_69
0x4001fd0	          0x4889c7	                            mov rdi, rax	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_69
0x4001fd3	      0xb800000000	                              mov eax, 0	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_69
0x4001fd8	      0xe800000000	                          call 0x4001fdd	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_69
0x4001fdd	    0x8985c4f5ffff	            mov dword [rbp - 0xa3c], eax	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_69
0x4001fe3	    0x83bdc4f5ffff	              cmp dword [rbp - 0xa3c], 0	      1279	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35
0x4001fea	            0x747b	                            je 0x4002067	      1279	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35
0x4001fec	    0x8b85c4f5ffff	            mov eax, dword [rbp - 0xa3c]	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_70
0x4001ff2	            0x89c7	                            mov edi, eax	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_70
0x4001ff4	      0xe800000000	                          call 0x4001ff9	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_70
0x4001ff9	          0x4889c2	                            mov rdx, rax	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_70
0x4001ffc	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_70
0x4002003	    0x488d35000000	                   lea rsi, [0x0400200a]	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_70
0x400200a	          0x4889c7	                            mov rdi, rax	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_70
0x400200d	      0xb800000000	                              mov eax, 0	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_70
0x4002012	      0xe800000000	                          call 0x4002017	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_70
0x4002017	    0x8b95bcf5ffff	            mov edx, dword [rbp - 0xa44]	      1282	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_72
0x400201d	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1282	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_72
0x4002024	            0x89d6	                            mov esi, edx	      1282	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_72
0x4002026	          0x4889c7	                            mov rdi, rax	      1282	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_72
0x4002029	      0xe800000000	                          call 0x400202e	      1282	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_72
0x400202e	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1284	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_73
0x4002035	      0xbe00000000	                              mov esi, 0	      1284	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_73
0x400203a	          0x4889c7	                            mov rdi, rax	      1284	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_73
0x400203d	      0xe835edffff	                         call sym._state	      1284	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_73
0x4002042	    0x8b85c4f5ffff	            mov eax, dword [rbp - 0xa3c]	      1285	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35
0x4002048	            0xeb7b	                           jmp 0x40020c5	      1285	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35
0x400204a	              0x90	                                     nop	      1219	ftp.c	FUNCTION_18	FOR_3	IF_29
0x400204b	            0xeb01	                           jmp 0x400204e	      1219	ftp.c	FUNCTION_18	FOR_3	IF_29
0x400204d	              0x90	                                     nop	      1223	ftp.c	FUNCTION_18	FOR_3	IF_30
0x400204e	    0x8385a4f5ffff	              add dword [rbp - 0xa5c], 1	      1215	ftp.c	FUNCTION_18	FOR_3
0x4002055	    0x83bda4f5ffff	              cmp dword [rbp - 0xa5c], 2	      1215	ftp.c	FUNCTION_18	FOR_3
0x400205c	     0xf85e2fcffff	                           jne 0x4001d44	      1215	ftp.c	FUNCTION_18	FOR_3
0x4002062	            0xeb04	                           jmp 0x4002068	      1215	ftp.c	FUNCTION_18	FOR_3
0x4002064	              0x90	                                     nop	      1260	ftp.c	FUNCTION_18	FOR_3	IF_31
0x4002065	            0xeb01	                           jmp 0x4002068	      1260	ftp.c	FUNCTION_18	FOR_3	IF_31
0x4002067	              0x90	                                     nop	      1287	ftp.c	FUNCTION_18	FOR_3	IF_33
0x4002068	    0x8b95a4f5ffff	            mov edx, dword [rbp - 0xa5c]	      1292	ftp.c	FUNCTION_18
0x400206e	    0x488b8510f6ff	            mov rax, qword [rbp - 0x9f0]	      1292	ftp.c	FUNCTION_18
0x4002075	    0x8990b0000000	             mov dword [rax + 0xb0], edx	      1292	ftp.c	FUNCTION_18
0x400207b	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1294	ftp.c	FUNCTION_18	CALL_74
0x4002082	          0x4889c7	                            mov rdi, rax	      1294	ftp.c	FUNCTION_18	CALL_74
0x4002085	      0xe888e0ffff	          call sym.close_secondarysocket	      1294	ftp.c	FUNCTION_18	CALL_74
0x400208a	    0x8b95bcf5ffff	            mov edx, dword [rbp - 0xa44]	      1299	ftp.c	FUNCTION_18
0x4002090	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1299	ftp.c	FUNCTION_18
0x4002097	    0x89905c020000	            mov dword [rax + 0x25c], edx	      1299	ftp.c	FUNCTION_18
0x400209d	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1308	ftp.c	FUNCTION_18
0x40020a4	    0xc6805e030000	               mov byte [rax + 0x35e], 1	      1308	ftp.c	FUNCTION_18
0x40020ab	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1310	ftp.c	FUNCTION_18	CALL_75
0x40020b2	      0xbe1c000000	                           mov esi, 0x1c	      1310	ftp.c	FUNCTION_18	CALL_75
0x40020b7	          0x4889c7	                            mov rdi, rax	      1310	ftp.c	FUNCTION_18	CALL_75
0x40020ba	      0xe8b8ecffff	                         call sym._state	      1310	ftp.c	FUNCTION_18	CALL_75
0x40020bf	    0x8b85c4f5ffff	            mov eax, dword [rbp - 0xa3c]	      1311	ftp.c	FUNCTION_18
0x40020c5	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1312	ftp.c	FUNCTION_18
0x40020c9	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1312	ftp.c	FUNCTION_18
0x40020d2	            0x7405	                            je 0x40020d9	      1312	ftp.c	FUNCTION_18
0x40020d4	      0xe800000000	                          call 0x40020d9	      1312	ftp.c	FUNCTION_18
0x40020d9	    0x4881c4580a00	                          add rsp, 0xa58	      1312	ftp.c	FUNCTION_18
0x40020e0	              0x5b	                                 pop rbx	      1312	ftp.c	FUNCTION_18
0x40020e1	              0x5d	                                 pop rbp	      1312	ftp.c	FUNCTION_18
0x40020e2	              0xc3	                                     ret	      1312	ftp.c	FUNCTION_18
ftp_do_more	DO,0:FOR,0:functions,0:ELSE,6:SWITCH,0:CALL,22:IF,27:WHILE,0	296
0x4006565	              0x55	                                push rbp	      3484	ftp.c	FUNCTION_53
0x4006566	          0x4889e5	                            mov rbp, rsp	      3484	ftp.c	FUNCTION_53
0x4006569	        0x4883ec40	                           sub rsp, 0x40	      3484	ftp.c	FUNCTION_53
0x400656d	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      3484	ftp.c	FUNCTION_53
0x4006571	        0x488975c0	             mov qword [rbp - 0x40], rsi	      3484	ftp.c	FUNCTION_53
0x4006575	    0x64488b042528	                mov rax, qword fs:[0x28]	      3484	ftp.c	FUNCTION_53
0x400657e	        0x488945f8	                mov qword [rbp - 8], rax	      3484	ftp.c	FUNCTION_53
0x4006582	            0x31c0	                            xor eax, eax	      3484	ftp.c	FUNCTION_53
0x4006584	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3485	ftp.c	FUNCTION_53
0x4006588	          0x488b00	                    mov rax, qword [rax]	      3485	ftp.c	FUNCTION_53
0x400658b	        0x488945e0	             mov qword [rbp - 0x20], rax	      3485	ftp.c	FUNCTION_53
0x400658f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3486	ftp.c	FUNCTION_53
0x4006593	    0x4805b0050000	                          add rax, 0x5b0	      3486	ftp.c	FUNCTION_53
0x4006599	        0x488945e8	             mov qword [rbp - 0x18], rax	      3486	ftp.c	FUNCTION_53
0x400659d	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      3487	ftp.c	FUNCTION_53
0x40065a4	        0xc645d900	                mov byte [rbp - 0x27], 0	      3488	ftp.c	FUNCTION_53
0x40065a8	        0xc645da00	                mov byte [rbp - 0x26], 0	      3489	ftp.c	FUNCTION_53
0x40065ac	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3492	ftp.c	FUNCTION_53
0x40065b0	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      3492	ftp.c	FUNCTION_53
0x40065b7	        0x488945f0	             mov qword [rbp - 0x10], rax	      3492	ftp.c	FUNCTION_53
0x40065bb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3495	ftp.c	FUNCTION_53	IF_1
0x40065bf	     0xfb6805e0300	          movzx eax, byte [rax + 0x35e] 	      3495	ftp.c	FUNCTION_53	IF_1
0x40065c6	          0x83f001	                              xor eax, 1	      3495	ftp.c	FUNCTION_53	IF_1
0x40065c9	            0x84c0	                             test al, al	      3495	ftp.c	FUNCTION_53	IF_1
0x40065cb	     0xf848d000000	                            je 0x400665e	      3495	ftp.c	FUNCTION_53	IF_1
0x40065d1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3496	ftp.c	FUNCTION_53	IF_1	IF_2	CALL_1
0x40065d5	          0x4889c7	                            mov rdi, rax	      3496	ftp.c	FUNCTION_53	IF_1	IF_2	CALL_1
0x40065d8	      0xe800000000	                          call 0x40065dd	      3496	ftp.c	FUNCTION_53	IF_1	IF_2	CALL_1
0x40065dd	            0x84c0	                             test al, al	      3496	ftp.c	FUNCTION_53	IF_1	IF_2	CALL_1
0x40065df	            0x7426	                            je 0x4006607	      3496	ftp.c	FUNCTION_53	IF_1	IF_2	CALL_1
0x40065e1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3499	ftp.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x40065e5	      0xb900000000	                              mov ecx, 0	      3499	ftp.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x40065ea	      0xba00000000	                              mov edx, 0	      3499	ftp.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x40065ef	      0xbe01000000	                              mov esi, 1	      3499	ftp.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x40065f4	          0x4889c7	                            mov rdi, rax	      3499	ftp.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x40065f7	      0xe800000000	                          call 0x40065fc	      3499	ftp.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x40065fc	          0x8945dc	             mov dword [rbp - 0x24], eax	      3499	ftp.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x40065ff	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3501	ftp.c	FUNCTION_53	IF_1	IF_2
0x4006602	      0xe9b9030000	                           jmp 0x40069c0	      3501	ftp.c	FUNCTION_53	IF_1	IF_2
0x4006607	        0x488d55d9	                   lea rdx, [rbp - 0x27]	      3504	ftp.c	FUNCTION_53	IF_1	CALL_3
0x400660b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3504	ftp.c	FUNCTION_53	IF_1	CALL_3
0x400660f	      0xbe01000000	                              mov esi, 1	      3504	ftp.c	FUNCTION_53	IF_1	CALL_3
0x4006614	          0x4889c7	                            mov rdi, rax	      3504	ftp.c	FUNCTION_53	IF_1	CALL_3
0x4006617	      0xe800000000	                          call 0x400661c	      3504	ftp.c	FUNCTION_53	IF_1	CALL_3
0x400661c	          0x8945dc	             mov dword [rbp - 0x24], eax	      3504	ftp.c	FUNCTION_53	IF_1	CALL_3
0x400661f	         0xfb645d9	            movzx eax, byte [rbp - 0x27]	      3507	ftp.c	FUNCTION_53	IF_1	IF_3
0x4006623	            0x84c0	                             test al, al	      3507	ftp.c	FUNCTION_53	IF_1	IF_3
0x4006625	            0x7537	                           jne 0x400665e	      3507	ftp.c	FUNCTION_53	IF_1	IF_3
0x4006627	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3511	ftp.c	FUNCTION_53	IF_1	ELSE_1	IF_4
0x400662b	            0x7429	                            je 0x4006656	      3511	ftp.c	FUNCTION_53	IF_1	ELSE_1	IF_4
0x400662d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3511	ftp.c	FUNCTION_53	IF_1	ELSE_1	IF_4
0x4006631	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      3511	ftp.c	FUNCTION_53	IF_1	ELSE_1	IF_4
0x4006637	            0x85c0	                           test eax, eax	      3511	ftp.c	FUNCTION_53	IF_1	ELSE_1	IF_4
0x4006639	            0x751b	                           jne 0x4006656	      3511	ftp.c	FUNCTION_53	IF_1	ELSE_1	IF_4
0x400663b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3512	ftp.c	FUNCTION_53	IF_1	ELSE_1	IF_4
0x400663f	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	      3512	ftp.c	FUNCTION_53	IF_1	ELSE_1	IF_4
0x4006645	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3514	ftp.c	FUNCTION_53	IF_1	ELSE_1	IF_4	CALL_6
0x4006649	          0x4889c7	                            mov rdi, rax	      3514	ftp.c	FUNCTION_53	IF_1	ELSE_1	IF_4	CALL_6
0x400664c	      0xe8efc8ffff	               call sym.ftp_epsv_disable	      3514	ftp.c	FUNCTION_53	IF_1	ELSE_1	IF_4	CALL_6
0x4006651	      0xe96a030000	                           jmp 0x40069c0	      3514	ftp.c	FUNCTION_53	IF_1	ELSE_1	IF_4	CALL_6
0x4006656	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3516	ftp.c	FUNCTION_53	IF_1	ELSE_1
0x4006659	      0xe962030000	                           jmp 0x40069c0	      3516	ftp.c	FUNCTION_53	IF_1	ELSE_1
0x400665e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3520	ftp.c	FUNCTION_53	CALL_7
0x4006662	      0xbe01000000	                              mov esi, 1	      3520	ftp.c	FUNCTION_53	CALL_7
0x4006667	          0x4889c7	                            mov rdi, rax	      3520	ftp.c	FUNCTION_53	CALL_7
0x400666a	      0xe800000000	                          call 0x400666f	      3520	ftp.c	FUNCTION_53	CALL_7
0x400666f	          0x8945dc	             mov dword [rbp - 0x24], eax	      3520	ftp.c	FUNCTION_53	CALL_7
0x4006672	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3521	ftp.c	FUNCTION_53	IF_5
0x4006676	            0x7408	                            je 0x4006680	      3521	ftp.c	FUNCTION_53	IF_5
0x4006678	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3522	ftp.c	FUNCTION_53	IF_5
0x400667b	      0xe940030000	                           jmp 0x40069c0	      3522	ftp.c	FUNCTION_53	IF_5
0x4006680	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3524	ftp.c	FUNCTION_53	IF_6	CALL_8
0x4006684	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	      3524	ftp.c	FUNCTION_53	IF_6	CALL_8
0x400668a	          0x83f802	                              cmp eax, 2	      3524	ftp.c	FUNCTION_53	IF_6	CALL_8
0x400668d	            0x751a	                           jne 0x40066a9	      3524	ftp.c	FUNCTION_53	IF_6	CALL_8
0x400668f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3524	ftp.c	FUNCTION_53	IF_6	CALL_8
0x4006693	     0xfb680720300	          movzx eax, byte [rax + 0x372] 	      3524	ftp.c	FUNCTION_53	IF_6	CALL_8
0x400669a	          0x83f001	                              xor eax, 1	      3524	ftp.c	FUNCTION_53	IF_6	CALL_8
0x400669d	            0x84c0	                             test al, al	      3524	ftp.c	FUNCTION_53	IF_6	CALL_8
0x400669f	            0x7408	                            je 0x40066a9	      3524	ftp.c	FUNCTION_53	IF_6	CALL_8
0x40066a1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3525	ftp.c	FUNCTION_53	IF_6
0x40066a4	      0xe917030000	                           jmp 0x40069c0	      3525	ftp.c	FUNCTION_53	IF_6
0x40066a9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3527	ftp.c	FUNCTION_53	IF_7
0x40066ad	     0xfb680610300	          movzx eax, byte [rax + 0x361] 	      3527	ftp.c	FUNCTION_53	IF_7
0x40066b4	            0x84c0	                             test al, al	      3527	ftp.c	FUNCTION_53	IF_7
0x40066b6	            0x7427	                            je 0x40066df	      3527	ftp.c	FUNCTION_53	IF_7
0x40066b8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3527	ftp.c	FUNCTION_53	IF_7
0x40066bc	     0xfb680560300	          movzx eax, byte [rax + 0x356] 	      3527	ftp.c	FUNCTION_53	IF_7
0x40066c3	            0x84c0	                             test al, al	      3527	ftp.c	FUNCTION_53	IF_7
0x40066c5	            0x7418	                            je 0x40066df	      3527	ftp.c	FUNCTION_53	IF_7
0x40066c7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3528	ftp.c	FUNCTION_53	IF_7	CALL_9
0x40066cb	          0x4889c7	                            mov rdi, rax	      3528	ftp.c	FUNCTION_53	IF_7	CALL_9
0x40066ce	      0xe800000000	                          call 0x40066d3	      3528	ftp.c	FUNCTION_53	IF_7	CALL_9
0x40066d3	            0x84c0	                             test al, al	      3527	ftp.c	FUNCTION_53	IF_7
0x40066d5	            0x7408	                            je 0x40066df	      3527	ftp.c	FUNCTION_53	IF_7
0x40066d7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3529	ftp.c	FUNCTION_53	IF_7
0x40066da	      0xe9e1020000	                           jmp 0x40069c0	      3529	ftp.c	FUNCTION_53	IF_7
0x40066df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3532	ftp.c	FUNCTION_53	IF_8
0x40066e3	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      3532	ftp.c	FUNCTION_53	IF_8
0x40066e9	            0x85c0	                           test eax, eax	      3532	ftp.c	FUNCTION_53	IF_8
0x40066eb	            0x745c	                            je 0x4006749	      3532	ftp.c	FUNCTION_53	IF_8
0x40066ed	        0x488d55da	                   lea rdx, [rbp - 0x26]	      3535	ftp.c	FUNCTION_53	IF_8	CALL_10
0x40066f1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3535	ftp.c	FUNCTION_53	IF_8	CALL_10
0x40066f5	          0x4889d6	                            mov rsi, rdx	      3535	ftp.c	FUNCTION_53	IF_8	CALL_10
0x40066f8	          0x4889c7	                            mov rdi, rax	      3535	ftp.c	FUNCTION_53	IF_8	CALL_10
0x40066fb	      0xe885f2ffff	            call sym.ftp_multi_statemach	      3535	ftp.c	FUNCTION_53	IF_8	CALL_10
0x4006700	          0x8945dc	             mov dword [rbp - 0x24], eax	      3535	ftp.c	FUNCTION_53	IF_8	CALL_10
0x4006703	         0xfb645da	            movzx eax, byte [rbp - 0x26]	      3537	ftp.c	FUNCTION_53	IF_8
0x4006707	           0xfb6d0	                           movzx edx, al	      3537	ftp.c	FUNCTION_53	IF_8
0x400670a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3537	ftp.c	FUNCTION_53	IF_8
0x400670e	            0x8910	                    mov dword [rax], edx	      3537	ftp.c	FUNCTION_53	IF_8
0x4006710	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3541	ftp.c	FUNCTION_53	IF_8	IF_9
0x4006714	            0x7512	                           jne 0x4006728	      3541	ftp.c	FUNCTION_53	IF_8	IF_9
0x4006716	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3541	ftp.c	FUNCTION_53	IF_8	IF_9
0x400671a	     0xfb680990000	           movzx eax, byte [rax + 0x99] 	      3541	ftp.c	FUNCTION_53	IF_8	IF_9
0x4006721	          0x83f001	                              xor eax, 1	      3541	ftp.c	FUNCTION_53	IF_8	IF_9
0x4006724	            0x84c0	                             test al, al	      3541	ftp.c	FUNCTION_53	IF_8	IF_9
0x4006726	            0x7408	                            je 0x4006730	      3541	ftp.c	FUNCTION_53	IF_8	IF_9
0x4006728	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3542	ftp.c	FUNCTION_53	IF_8	IF_9
0x400672b	      0xe990020000	                           jmp 0x40069c0	      3542	ftp.c	FUNCTION_53	IF_8	IF_9
0x4006730	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3544	ftp.c	FUNCTION_53	IF_8	IF_10
0x4006734	     0xfb680990000	           movzx eax, byte [rax + 0x99] 	      3544	ftp.c	FUNCTION_53	IF_8	IF_10
0x400673b	            0x84c0	                             test al, al	      3544	ftp.c	FUNCTION_53	IF_8	IF_10
0x400673d	            0x740a	                            je 0x4006749	      3544	ftp.c	FUNCTION_53	IF_8	IF_10
0x400673f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3548	ftp.c	FUNCTION_53	IF_8	IF_10
0x4006743	    0xc70000000000	                      mov dword [rax], 0	      3548	ftp.c	FUNCTION_53	IF_8	IF_10
0x4006749	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3551	ftp.c	FUNCTION_53	IF_11
0x400674d	          0x8b4018	            mov eax, dword [rax + 0x18] 	      3551	ftp.c	FUNCTION_53	IF_11
0x4006750	          0x83f801	                              cmp eax, 1	      3551	ftp.c	FUNCTION_53	IF_11
0x4006753	     0xf8704020000	                            ja 0x400695d	      3551	ftp.c	FUNCTION_53	IF_11
0x4006759	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3555	ftp.c	FUNCTION_53	IF_11	IF_12
0x400675d	     0xfb680990000	           movzx eax, byte [rax + 0x99] 	      3555	ftp.c	FUNCTION_53	IF_11	IF_12
0x4006764	            0x84c0	                             test al, al	      3555	ftp.c	FUNCTION_53	IF_11	IF_12
0x4006766	            0x747c	                            je 0x40067e4	      3555	ftp.c	FUNCTION_53	IF_11	IF_12
0x4006768	        0x488d55db	                   lea rdx, [rbp - 0x25]	      3558	ftp.c	FUNCTION_53	IF_11	IF_12	CALL_11
0x400676c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3558	ftp.c	FUNCTION_53	IF_11	IF_12	CALL_11
0x4006770	          0x4889d6	                            mov rsi, rdx	      3558	ftp.c	FUNCTION_53	IF_11	IF_12	CALL_11
0x4006773	          0x4889c7	                            mov rdi, rax	      3558	ftp.c	FUNCTION_53	IF_11	IF_12	CALL_11
0x4006776	      0xe8099effff	          call sym.ReceivedServerConnect	      3558	ftp.c	FUNCTION_53	IF_11	IF_12	CALL_11
0x400677b	          0x8945dc	             mov dword [rbp - 0x24], eax	      3558	ftp.c	FUNCTION_53	IF_11	IF_12	CALL_11
0x400677e	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3559	ftp.c	FUNCTION_53	IF_11	IF_12	IF_13
0x4006782	            0x7408	                            je 0x400678c	      3559	ftp.c	FUNCTION_53	IF_11	IF_12	IF_13
0x4006784	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3560	ftp.c	FUNCTION_53	IF_11	IF_12	IF_13
0x4006787	      0xe934020000	                           jmp 0x40069c0	      3560	ftp.c	FUNCTION_53	IF_11	IF_12	IF_13
0x400678c	         0xfb645db	            movzx eax, byte [rbp - 0x25]	      3562	ftp.c	FUNCTION_53	IF_11	IF_12	IF_14
0x4006790	            0x84c0	                             test al, al	      3562	ftp.c	FUNCTION_53	IF_11	IF_12	IF_14
0x4006792	     0xf84c0010000	                            je 0x4006958	      3562	ftp.c	FUNCTION_53	IF_11	IF_12	IF_14
0x4006798	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3564	ftp.c	FUNCTION_53	IF_11	IF_12	IF_14	CALL_12
0x400679c	          0x4889c7	                            mov rdi, rax	      3564	ftp.c	FUNCTION_53	IF_11	IF_12	IF_14	CALL_12
0x400679f	      0xe8089bffff	            call sym.AcceptServerConnect	      3564	ftp.c	FUNCTION_53	IF_11	IF_12	IF_14	CALL_12
0x40067a4	          0x8945dc	             mov dword [rbp - 0x24], eax	      3564	ftp.c	FUNCTION_53	IF_11	IF_12	IF_14	CALL_12
0x40067a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3565	ftp.c	FUNCTION_53	IF_11	IF_12	IF_14
0x40067ab	    0xc68099000000	                mov byte [rax + 0x99], 0	      3565	ftp.c	FUNCTION_53	IF_11	IF_12	IF_14
0x40067b2	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3566	ftp.c	FUNCTION_53	IF_11	IF_12	IF_14	IF_15
0x40067b6	            0x750f	                           jne 0x40067c7	      3566	ftp.c	FUNCTION_53	IF_11	IF_12	IF_14	IF_15
0x40067b8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3567	ftp.c	FUNCTION_53	IF_11	IF_12	IF_14	CALL_13
0x40067bc	          0x4889c7	                            mov rdi, rax	      3567	ftp.c	FUNCTION_53	IF_11	IF_12	IF_14	CALL_13
0x40067bf	      0xe8bb9fffff	               call sym.InitiateTransfer	      3567	ftp.c	FUNCTION_53	IF_11	IF_12	IF_14	CALL_13
0x40067c4	          0x8945dc	             mov dword [rbp - 0x24], eax	      3567	ftp.c	FUNCTION_53	IF_11	IF_12	IF_14	CALL_13
0x40067c7	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3569	ftp.c	FUNCTION_53	IF_11	IF_12	IF_14	IF_16
0x40067cb	            0x7408	                            je 0x40067d5	      3569	ftp.c	FUNCTION_53	IF_11	IF_12	IF_14	IF_16
0x40067cd	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3570	ftp.c	FUNCTION_53	IF_11	IF_12	IF_14	IF_16
0x40067d0	      0xe9eb010000	                           jmp 0x40069c0	      3570	ftp.c	FUNCTION_53	IF_11	IF_12	IF_14	IF_16
0x40067d5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3572	ftp.c	FUNCTION_53	IF_11	IF_12	IF_14
0x40067d9	    0xc70001000000	                      mov dword [rax], 1	      3572	ftp.c	FUNCTION_53	IF_11	IF_12	IF_14
0x40067df	      0xe974010000	                           jmp 0x4006958	      3572	ftp.c	FUNCTION_53	IF_11	IF_12	IF_14
0x40067e4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3576	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17
0x40067e8	     0xfb680a20700	          movzx eax, byte [rax + 0x7a2] 	      3576	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17
0x40067ef	            0x84c0	                             test al, al	      3576	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17
0x40067f1	            0x7478	                            je 0x400686b	      3576	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17
0x40067f3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3577	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	CALL_14
0x40067f7	     0xfb680940700	          movzx eax, byte [rax + 0x794] 	      3577	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	CALL_14
0x40067fe	           0xfb6c8	                           movzx ecx, al	      3577	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	CALL_14
0x4006801	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3577	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	CALL_14
0x4006805	      0xba16000000	                           mov edx, 0x16	      3577	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	CALL_14
0x400680a	            0x89ce	                            mov esi, ecx	      3577	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	CALL_14
0x400680c	          0x4889c7	                            mov rdi, rax	      3577	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	CALL_14
0x400680f	      0xe8f4fbffff	                    call sym.ftp_nb_type	      3577	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	CALL_14
0x4006814	          0x8945dc	             mov dword [rbp - 0x24], eax	      3577	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	CALL_14
0x4006817	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3578	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	IF_18
0x400681b	            0x7408	                            je 0x4006825	      3578	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	IF_18
0x400681d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3579	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	IF_18
0x4006820	      0xe99b010000	                           jmp 0x40069c0	      3579	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	IF_18
0x4006825	        0x488d55da	                   lea rdx, [rbp - 0x26]	      3581	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	CALL_15
0x4006829	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3581	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	CALL_15
0x400682d	          0x4889d6	                            mov rsi, rdx	      3581	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	CALL_15
0x4006830	          0x4889c7	                            mov rdi, rax	      3581	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	CALL_15
0x4006833	      0xe84df1ffff	            call sym.ftp_multi_statemach	      3581	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	CALL_15
0x4006838	          0x8945dc	             mov dword [rbp - 0x24], eax	      3581	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	CALL_15
0x400683b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3582	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	IF_19
0x400683f	     0xfb680990000	           movzx eax, byte [rax + 0x99] 	      3582	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	IF_19
0x4006846	            0x84c0	                             test al, al	      3582	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	IF_19
0x4006848	            0x740f	                            je 0x4006859	      3582	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	IF_19
0x400684a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3586	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	IF_19
0x400684e	    0xc70000000000	                      mov dword [rax], 0	      3586	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	IF_19
0x4006854	      0xe9ff000000	                           jmp 0x4006958	      3586	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	IF_19
0x4006859	         0xfb645da	            movzx eax, byte [rbp - 0x26]	      3588	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	ELSE_3
0x400685d	           0xfb6d0	                           movzx edx, al	      3588	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	ELSE_3
0x4006860	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3588	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	ELSE_3
0x4006864	            0x8910	                    mov dword [rax], edx	      3588	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	ELSE_3
0x4006866	      0xe9ed000000	                           jmp 0x4006958	      3588	ftp.c	FUNCTION_53	IF_11	ELSE_2	IF_17	ELSE_3
0x400686b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3592	ftp.c	FUNCTION_53	IF_11	ELSE_4
0x400686f	    0x48c74020ffff	mov qword [rax + 0x20], 0xffffffffffffffff	      3592	ftp.c	FUNCTION_53	IF_11	ELSE_4
0x4006877	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3594	ftp.c	FUNCTION_53	IF_11	ELSE_4	CALL_16
0x400687b	          0x4889c7	                            mov rdi, rax	      3594	ftp.c	FUNCTION_53	IF_11	ELSE_4	CALL_16
0x400687e	      0xe800000000	                          call 0x4006883	      3594	ftp.c	FUNCTION_53	IF_11	ELSE_4	CALL_16
0x4006883	          0x8945dc	             mov dword [rbp - 0x24], eax	      3594	ftp.c	FUNCTION_53	IF_11	ELSE_4	CALL_16
0x4006886	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3596	ftp.c	FUNCTION_53	IF_11	ELSE_4	IF_20
0x400688a	            0x751b	                           jne 0x40068a7	      3596	ftp.c	FUNCTION_53	IF_11	ELSE_4	IF_20
0x400688c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3596	ftp.c	FUNCTION_53	IF_11	ELSE_4	IF_20
0x4006890	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      3596	ftp.c	FUNCTION_53	IF_11	ELSE_4	IF_20
0x4006897	          0x4885c0	                           test rax, rax	      3596	ftp.c	FUNCTION_53	IF_11	ELSE_4	IF_20
0x400689a	            0x780b	                            js 0x40068a7	      3596	ftp.c	FUNCTION_53	IF_11	ELSE_4	IF_20
0x400689c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3598	ftp.c	FUNCTION_53	IF_11	ELSE_4	IF_20
0x40068a0	    0xc68090000000	                mov byte [rax + 0x90], 1	      3598	ftp.c	FUNCTION_53	IF_11	ELSE_4	IF_20
0x40068a7	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3601	ftp.c	FUNCTION_53	IF_11	ELSE_4	IF_21
0x40068ab	     0xf8584000000	                           jne 0x4006935	      3601	ftp.c	FUNCTION_53	IF_11	ELSE_4	IF_21
0x40068b1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3603	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_5	IF_22
0x40068b5	     0xfb680960700	          movzx eax, byte [rax + 0x796] 	      3603	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_5	IF_22
0x40068bc	            0x84c0	                             test al, al	      3603	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_5	IF_22
0x40068be	            0x7510	                           jne 0x40068d0	      3603	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_5	IF_22
0x40068c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3603	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_5	IF_22
0x40068c4	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      3603	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_5	IF_22
0x40068cb	          0x4885c0	                           test rax, rax	      3603	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_5	IF_22
0x40068ce	            0x7532	                           jne 0x4006902	      3603	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_5	IF_22
0x40068d0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3609	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_5	IF_22	IF_23
0x40068d4	          0x8b4018	            mov eax, dword [rax + 0x18] 	      3609	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_5	IF_22	IF_23
0x40068d7	            0x85c0	                           test eax, eax	      3609	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_5	IF_22	IF_23
0x40068d9	            0x7559	                           jne 0x4006934	      3609	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_5	IF_22	IF_23
0x40068db	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3610	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	CALL_17
0x40068df	      0xba14000000	                           mov edx, 0x14	      3610	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	CALL_17
0x40068e4	      0xbe01000000	                              mov esi, 1	      3610	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	CALL_17
0x40068e9	          0x4889c7	                            mov rdi, rax	      3610	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	CALL_17
0x40068ec	      0xe817fbffff	                    call sym.ftp_nb_type	      3610	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	CALL_17
0x40068f1	          0x8945dc	             mov dword [rbp - 0x24], eax	      3610	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	CALL_17
0x40068f4	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3611	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	IF_24
0x40068f8	            0x743a	                            je 0x4006934	      3611	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	IF_24
0x40068fa	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3612	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	IF_24
0x40068fd	      0xe9be000000	                           jmp 0x40069c0	      3612	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	IF_24
0x4006902	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3617	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_6	CALL_18
0x4006906	     0xfb680940700	          movzx eax, byte [rax + 0x794] 	      3617	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_6	CALL_18
0x400690d	           0xfb6c8	                           movzx ecx, al	      3617	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_6	CALL_18
0x4006910	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3617	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_6	CALL_18
0x4006914	      0xba15000000	                           mov edx, 0x15	      3617	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_6	CALL_18
0x4006919	            0x89ce	                            mov esi, ecx	      3617	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_6	CALL_18
0x400691b	          0x4889c7	                            mov rdi, rax	      3617	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_6	CALL_18
0x400691e	      0xe8e5faffff	                    call sym.ftp_nb_type	      3617	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_6	CALL_18
0x4006923	          0x8945dc	             mov dword [rbp - 0x24], eax	      3617	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_6	CALL_18
0x4006926	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3618	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_6	IF_25
0x400692a	            0x7409	                            je 0x4006935	      3618	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_6	IF_25
0x400692c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3619	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_6	IF_25
0x400692f	      0xe98c000000	                           jmp 0x40069c0	      3619	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_6	IF_25
0x4006934	              0x90	                                     nop	      3609	ftp.c	FUNCTION_53	IF_11	ELSE_4	ELSE_5	IF_22	IF_23
0x4006935	        0x488d55da	                   lea rdx, [rbp - 0x26]	      3622	ftp.c	FUNCTION_53	IF_11	ELSE_4	CALL_19
0x4006939	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3622	ftp.c	FUNCTION_53	IF_11	ELSE_4	CALL_19
0x400693d	          0x4889d6	                            mov rsi, rdx	      3622	ftp.c	FUNCTION_53	IF_11	ELSE_4	CALL_19
0x4006940	          0x4889c7	                            mov rdi, rax	      3622	ftp.c	FUNCTION_53	IF_11	ELSE_4	CALL_19
0x4006943	      0xe83df0ffff	            call sym.ftp_multi_statemach	      3622	ftp.c	FUNCTION_53	IF_11	ELSE_4	CALL_19
0x4006948	          0x8945dc	             mov dword [rbp - 0x24], eax	      3622	ftp.c	FUNCTION_53	IF_11	ELSE_4	CALL_19
0x400694b	         0xfb645da	            movzx eax, byte [rbp - 0x26]	      3623	ftp.c	FUNCTION_53	IF_11	ELSE_4
0x400694f	           0xfb6d0	                           movzx edx, al	      3623	ftp.c	FUNCTION_53	IF_11	ELSE_4
0x4006952	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3623	ftp.c	FUNCTION_53	IF_11	ELSE_4
0x4006956	            0x8910	                    mov dword [rax], edx	      3623	ftp.c	FUNCTION_53	IF_11	ELSE_4
0x4006958	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3625	ftp.c	FUNCTION_53	IF_11
0x400695b	            0xeb63	                           jmp 0x40069c0	      3625	ftp.c	FUNCTION_53	IF_11
0x400695d	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3628	ftp.c	FUNCTION_53	IF_26
0x4006961	            0x753e	                           jne 0x40069a1	      3628	ftp.c	FUNCTION_53	IF_26
0x4006963	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3628	ftp.c	FUNCTION_53	IF_26
0x4006967	          0x8b4018	            mov eax, dword [rax + 0x18] 	      3628	ftp.c	FUNCTION_53	IF_26
0x400696a	            0x85c0	                           test eax, eax	      3628	ftp.c	FUNCTION_53	IF_26
0x400696c	            0x7433	                            je 0x40069a1	      3628	ftp.c	FUNCTION_53	IF_26
0x400696e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3631	ftp.c	FUNCTION_53	CALL_20
0x4006972	        0x4883ec08	                              sub rsp, 8	      3631	ftp.c	FUNCTION_53	CALL_20
0x4006976	            0x6a00	                                  push 0	      3631	ftp.c	FUNCTION_53	CALL_20
0x4006978	    0x41b9ffffffff	                     mov r9d, 0xffffffff	      3631	ftp.c	FUNCTION_53	CALL_20
0x400697e	    0x41b800000000	                              mov r8d, 0	      3631	ftp.c	FUNCTION_53	CALL_20
0x4006984	      0xb900000000	                              mov ecx, 0	      3631	ftp.c	FUNCTION_53	CALL_20
0x4006989	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      3631	ftp.c	FUNCTION_53	CALL_20
0x4006990	      0xbeffffffff	                     mov esi, 0xffffffff	      3631	ftp.c	FUNCTION_53	CALL_20
0x4006995	          0x4889c7	                            mov rdi, rax	      3631	ftp.c	FUNCTION_53	CALL_20
0x4006998	      0xe800000000	                          call 0x400699d	      3631	ftp.c	FUNCTION_53	CALL_20
0x400699d	        0x4883c410	                           add rsp, 0x10	      3631	ftp.c	FUNCTION_53	CALL_20
0x40069a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3633	ftp.c	FUNCTION_53	IF_27
0x40069a5	     0xfb680990000	           movzx eax, byte [rax + 0x99] 	      3633	ftp.c	FUNCTION_53	IF_27
0x40069ac	          0x83f001	                              xor eax, 1	      3633	ftp.c	FUNCTION_53	IF_27
0x40069af	            0x84c0	                             test al, al	      3633	ftp.c	FUNCTION_53	IF_27
0x40069b1	            0x740a	                            je 0x40069bd	      3633	ftp.c	FUNCTION_53	IF_27
0x40069b3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3635	ftp.c	FUNCTION_53	IF_27
0x40069b7	    0xc70001000000	                      mov dword [rax], 1	      3635	ftp.c	FUNCTION_53	IF_27
0x40069bd	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3639	ftp.c	FUNCTION_53
0x40069c0	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3640	ftp.c	FUNCTION_53
0x40069c4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3640	ftp.c	FUNCTION_53
0x40069cd	            0x7405	                            je 0x40069d4	      3640	ftp.c	FUNCTION_53
0x40069cf	      0xe800000000	                          call 0x40069d4	      3640	ftp.c	FUNCTION_53
0x40069d4	              0xc9	                                   leave	      3640	ftp.c	FUNCTION_53
0x40069d5	              0xc3	                                     ret	      3640	ftp.c	FUNCTION_53
ftp_quit	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,7:IF,2:WHILE,0	52
0x40074e5	              0x55	                                push rbp	      4020	ftp.c	ELSE_1	FUNCTION_60
0x40074e6	          0x4889e5	                            mov rbp, rsp	      4020	ftp.c	ELSE_1	FUNCTION_60
0x40074e9	        0x4883ec20	                           sub rsp, 0x20	      4020	ftp.c	ELSE_1	FUNCTION_60
0x40074ed	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4020	ftp.c	ELSE_1	FUNCTION_60
0x40074f1	    0xc745fc000000	                  mov dword [rbp - 4], 0	      4021	ftp.c	ELSE_1	FUNCTION_60
0x40074f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4023	ftp.c	ELSE_1	FUNCTION_60	IF_1
0x40074fc	     0xfb680410600	          movzx eax, byte [rax + 0x641] 	      4023	ftp.c	ELSE_1	FUNCTION_60	IF_1
0x4007503	            0x84c0	                             test al, al	      4023	ftp.c	ELSE_1	FUNCTION_60	IF_1
0x4007505	     0xf84a8000000	                            je 0x40075b3	      4023	ftp.c	ELSE_1	FUNCTION_60	IF_1
0x400750b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4024	ftp.c	ELSE_1	FUNCTION_60	IF_1	CALL_1
0x400750f	    0x4805b0050000	                          add rax, 0x5b0	      4024	ftp.c	ELSE_1	FUNCTION_60	IF_1	CALL_1
0x4007515	    0x488d15000000	                   lea rdx, [0x0400751c]	      4024	ftp.c	ELSE_1	FUNCTION_60	IF_1	CALL_1
0x400751c	    0x488d35000000	                   lea rsi, [0x04007523]	      4024	ftp.c	ELSE_1	FUNCTION_60	IF_1	CALL_1
0x4007523	          0x4889c7	                            mov rdi, rax	      4024	ftp.c	ELSE_1	FUNCTION_60	IF_1	CALL_1
0x4007526	      0xb800000000	                              mov eax, 0	      4024	ftp.c	ELSE_1	FUNCTION_60	IF_1	CALL_1
0x400752b	      0xe800000000	                          call 0x4007530	      4024	ftp.c	ELSE_1	FUNCTION_60	IF_1	CALL_1
0x4007530	          0x8945fc	                mov dword [rbp - 4], eax	      4024	ftp.c	ELSE_1	FUNCTION_60	IF_1	CALL_1
0x4007533	        0x837dfc00	                  cmp dword [rbp - 4], 0	      4025	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2
0x4007537	            0x745a	                            je 0x4007593	      4025	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2
0x4007539	          0x8b45fc	                mov eax, dword [rbp - 4]	      4026	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2	CALL_2
0x400753c	            0x89c7	                            mov edi, eax	      4026	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2	CALL_2
0x400753e	      0xe800000000	                          call 0x4007543	      4026	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2	CALL_2
0x4007543	          0x4889c2	                            mov rdx, rax	      4026	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2	CALL_2
0x4007546	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4026	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2	CALL_2
0x400754a	          0x488b00	                    mov rax, qword [rax]	      4026	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2	CALL_2
0x400754d	    0x488d35000000	                   lea rsi, [0x04007554]	      4026	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2	CALL_2
0x4007554	          0x4889c7	                            mov rdi, rax	      4026	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2	CALL_2
0x4007557	      0xb800000000	                              mov eax, 0	      4026	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2	CALL_2
0x400755c	      0xe800000000	                          call 0x4007561	      4026	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2	CALL_2
0x4007561	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4028	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2
0x4007565	    0xc68041060000	               mov byte [rax + 0x641], 0	      4028	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2
0x400756c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4029	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2	CALL_4
0x4007570	      0xbe01000000	                              mov esi, 1	      4029	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2	CALL_4
0x4007575	          0x4889c7	                            mov rdi, rax	      4029	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2	CALL_4
0x4007578	      0xe800000000	                          call 0x400757d	      4029	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2	CALL_4
0x400757d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4030	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2	CALL_5
0x4007581	      0xbe00000000	                              mov esi, 0	      4030	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2	CALL_5
0x4007586	          0x4889c7	                            mov rdi, rax	      4030	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2	CALL_5
0x4007589	      0xe8e997ffff	                         call sym._state	      4030	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2	CALL_5
0x400758e	          0x8b45fc	                mov eax, dword [rbp - 4]	      4031	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2
0x4007591	            0xeb23	                           jmp 0x40075b6	      4031	ftp.c	ELSE_1	FUNCTION_60	IF_1	IF_2
0x4007593	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4034	ftp.c	ELSE_1	FUNCTION_60	IF_1	CALL_6
0x4007597	      0xbe22000000	                           mov esi, 0x22	      4034	ftp.c	ELSE_1	FUNCTION_60	IF_1	CALL_6
0x400759c	          0x4889c7	                            mov rdi, rax	      4034	ftp.c	ELSE_1	FUNCTION_60	IF_1	CALL_6
0x400759f	      0xe8d397ffff	                         call sym._state	      4034	ftp.c	ELSE_1	FUNCTION_60	IF_1	CALL_6
0x40075a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4036	ftp.c	ELSE_1	FUNCTION_60	IF_1	CALL_7
0x40075a8	          0x4889c7	                            mov rdi, rax	      4036	ftp.c	ELSE_1	FUNCTION_60	IF_1	CALL_7
0x40075ab	      0xe821e4ffff	            call sym.ftp_block_statemach	      4036	ftp.c	ELSE_1	FUNCTION_60	IF_1	CALL_7
0x40075b0	          0x8945fc	                mov dword [rbp - 4], eax	      4036	ftp.c	ELSE_1	FUNCTION_60	IF_1	CALL_7
0x40075b3	          0x8b45fc	                mov eax, dword [rbp - 4]	      4039	ftp.c	ELSE_1	FUNCTION_60
0x40075b6	              0xc9	                                   leave	      4040	ftp.c	ELSE_1	FUNCTION_60
0x40075b7	              0xc3	                                     ret	      4040	ftp.c	ELSE_1	FUNCTION_60
_state	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,1:IF,1:WHILE,0	13
0x4000d77	              0x55	                                push rbp	       779	ftp.c	ELSE_3	FUNCTION_12
0x4000d78	          0x4889e5	                            mov rbp, rsp	       779	ftp.c	ELSE_3	FUNCTION_12
0x4000d7b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       779	ftp.c	ELSE_3	FUNCTION_12
0x4000d7f	          0x8975e4	             mov dword [rbp - 0x1c], esi	       779	ftp.c	ELSE_3	FUNCTION_12
0x4000d82	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       780	ftp.c	ELSE_3	FUNCTION_12
0x4000d86	    0x4805b0050000	                          add rax, 0x5b0	       780	ftp.c	ELSE_3	FUNCTION_12
0x4000d8c	        0x488945f8	                mov qword [rbp - 8], rax	       780	ftp.c	ELSE_3	FUNCTION_12
0x4000d90	        0x488b45f8	                mov rax, qword [rbp - 8]	       794	ftp.c	ELSE_3	FUNCTION_12
0x4000d94	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       794	ftp.c	ELSE_3	FUNCTION_12
0x4000d97	    0x8990bc000000	             mov dword [rax + 0xbc], edx	       794	ftp.c	ELSE_3	FUNCTION_12
0x4000d9d	              0x90	                                     nop	       795	ftp.c	ELSE_3	FUNCTION_12
0x4000d9e	              0x5d	                                 pop rbp	       795	ftp.c	ELSE_3	FUNCTION_12
0x4000d9f	              0xc3	                                     ret	       795	ftp.c	ELSE_3	FUNCTION_12
AllowServerConnect	DO,0:FOR,0:functions,0:ELSE,1:SWITCH,0:CALL,8:IF,6:WHILE,0	86
0x40008b8	              0x55	                                push rbp	       500	ftp.c	FUNCTION_8
0x40008b9	          0x4889e5	                            mov rbp, rsp	       500	ftp.c	FUNCTION_8
0x40008bc	        0x4883ec30	                           sub rsp, 0x30	       500	ftp.c	FUNCTION_8
0x40008c0	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       500	ftp.c	FUNCTION_8
0x40008c4	        0x488975d0	             mov qword [rbp - 0x30], rsi	       500	ftp.c	FUNCTION_8
0x40008c8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       501	ftp.c	FUNCTION_8
0x40008cc	          0x488b00	                    mov rax, qword [rax]	       501	ftp.c	FUNCTION_8
0x40008cf	        0x488945f0	             mov qword [rbp - 0x10], rax	       501	ftp.c	FUNCTION_8
0x40008d3	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       503	ftp.c	FUNCTION_8
0x40008da	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       505	ftp.c	FUNCTION_8
0x40008de	          0xc60000	                       mov byte [rax], 0	       505	ftp.c	FUNCTION_8
0x40008e1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       506	ftp.c	FUNCTION_8	CALL_1
0x40008e5	    0x488d35000000	                   lea rsi, [0x040008ec]	       506	ftp.c	FUNCTION_8	CALL_1
0x40008ec	          0x4889c7	                            mov rdi, rax	       506	ftp.c	FUNCTION_8	CALL_1
0x40008ef	      0xb800000000	                              mov eax, 0	       506	ftp.c	FUNCTION_8	CALL_1
0x40008f4	      0xe800000000	                          call 0x40008f9	       506	ftp.c	FUNCTION_8	CALL_1
0x40008f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       509	ftp.c	FUNCTION_8	CALL_2
0x40008fd	      0xbe09000000	                              mov esi, 9	       509	ftp.c	FUNCTION_8	CALL_2
0x4000902	          0x4889c7	                            mov rdi, rax	       509	ftp.c	FUNCTION_8	CALL_2
0x4000905	      0xe800000000	                          call 0x400090a	       509	ftp.c	FUNCTION_8	CALL_2
0x400090a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       511	ftp.c	FUNCTION_8	CALL_3
0x400090e	          0x4889c7	                            mov rdi, rax	       511	ftp.c	FUNCTION_8	CALL_3
0x4000911	      0xe895fbffff	            call sym.ftp_timeleft_accept	       511	ftp.c	FUNCTION_8	CALL_3
0x4000916	        0x488945f8	                mov qword [rbp - 8], rax	       511	ftp.c	FUNCTION_8	CALL_3
0x400091a	      0x48837df800	                  cmp qword [rbp - 8], 0	       512	ftp.c	FUNCTION_8	IF_1
0x400091f	            0x7922	                           jns 0x4000943	       512	ftp.c	FUNCTION_8	IF_1
0x4000921	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       514	ftp.c	FUNCTION_8	IF_1	CALL_4
0x4000925	    0x488d35000000	                   lea rsi, [0x0400092c]	       514	ftp.c	FUNCTION_8	IF_1	CALL_4
0x400092c	          0x4889c7	                            mov rdi, rax	       514	ftp.c	FUNCTION_8	IF_1	CALL_4
0x400092f	      0xb800000000	                              mov eax, 0	       514	ftp.c	FUNCTION_8	IF_1	CALL_4
0x4000934	      0xe800000000	                          call 0x4000939	       514	ftp.c	FUNCTION_8	IF_1	CALL_4
0x4000939	      0xb80c000000	                            mov eax, 0xc	       515	ftp.c	FUNCTION_8	IF_1
0x400093e	      0xe9b0000000	                           jmp 0x40009f3	       515	ftp.c	FUNCTION_8	IF_1
0x4000943	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       519	ftp.c	FUNCTION_8	CALL_5
0x4000947	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       519	ftp.c	FUNCTION_8	CALL_5
0x400094b	          0x4889d6	                            mov rsi, rdx	       519	ftp.c	FUNCTION_8	CALL_5
0x400094e	          0x4889c7	                            mov rdi, rax	       519	ftp.c	FUNCTION_8	CALL_5
0x4000951	      0xe82efcffff	          call sym.ReceivedServerConnect	       519	ftp.c	FUNCTION_8	CALL_5
0x4000956	          0x8945ec	             mov dword [rbp - 0x14], eax	       519	ftp.c	FUNCTION_8	CALL_5
0x4000959	        0x837dec00	               cmp dword [rbp - 0x14], 0	       520	ftp.c	FUNCTION_8	IF_2
0x400095d	            0x7408	                            je 0x4000967	       520	ftp.c	FUNCTION_8	IF_2
0x400095f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       521	ftp.c	FUNCTION_8	IF_2
0x4000962	      0xe98c000000	                           jmp 0x40009f3	       521	ftp.c	FUNCTION_8	IF_2
0x4000967	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       523	ftp.c	FUNCTION_8	IF_3
0x400096b	           0xfb600	                   movzx eax, byte [rax]	       523	ftp.c	FUNCTION_8	IF_3
0x400096e	            0x84c0	                             test al, al	       523	ftp.c	FUNCTION_8	IF_3
0x4000970	            0x7434	                            je 0x40009a6	       523	ftp.c	FUNCTION_8	IF_3
0x4000972	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       524	ftp.c	FUNCTION_8	IF_3	CALL_6
0x4000976	          0x4889c7	                            mov rdi, rax	       524	ftp.c	FUNCTION_8	IF_3	CALL_6
0x4000979	      0xe82ef9ffff	            call sym.AcceptServerConnect	       524	ftp.c	FUNCTION_8	IF_3	CALL_6
0x400097e	          0x8945ec	             mov dword [rbp - 0x14], eax	       524	ftp.c	FUNCTION_8	IF_3	CALL_6
0x4000981	        0x837dec00	               cmp dword [rbp - 0x14], 0	       525	ftp.c	FUNCTION_8	IF_3	IF_4
0x4000985	            0x7405	                            je 0x400098c	       525	ftp.c	FUNCTION_8	IF_3	IF_4
0x4000987	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       526	ftp.c	FUNCTION_8	IF_3	IF_4
0x400098a	            0xeb67	                           jmp 0x40009f3	       526	ftp.c	FUNCTION_8	IF_3	IF_4
0x400098c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       528	ftp.c	FUNCTION_8	IF_3	CALL_7
0x4000990	          0x4889c7	                            mov rdi, rax	       528	ftp.c	FUNCTION_8	IF_3	CALL_7
0x4000993	      0xe8e7fdffff	               call sym.InitiateTransfer	       528	ftp.c	FUNCTION_8	IF_3	CALL_7
0x4000998	          0x8945ec	             mov dword [rbp - 0x14], eax	       528	ftp.c	FUNCTION_8	IF_3	CALL_7
0x400099b	        0x837dec00	               cmp dword [rbp - 0x14], 0	       529	ftp.c	FUNCTION_8	IF_3	IF_5
0x400099f	            0x744f	                            je 0x40009f0	       529	ftp.c	FUNCTION_8	IF_3	IF_5
0x40009a1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       530	ftp.c	FUNCTION_8	IF_3	IF_5
0x40009a4	            0xeb4d	                           jmp 0x40009f3	       530	ftp.c	FUNCTION_8	IF_3	IF_5
0x40009a6	        0x837dec00	               cmp dword [rbp - 0x14], 0	       534	ftp.c	FUNCTION_8	ELSE_1	IF_6
0x40009aa	            0x7544	                           jne 0x40009f0	       534	ftp.c	FUNCTION_8	ELSE_1	IF_6
0x40009ac	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       534	ftp.c	FUNCTION_8	ELSE_1	IF_6
0x40009b0	           0xfb600	                   movzx eax, byte [rax]	       534	ftp.c	FUNCTION_8	ELSE_1	IF_6
0x40009b3	          0x83f001	                              xor eax, 1	       534	ftp.c	FUNCTION_8	ELSE_1	IF_6
0x40009b6	            0x84c0	                             test al, al	       534	ftp.c	FUNCTION_8	ELSE_1	IF_6
0x40009b8	            0x7436	                            je 0x40009f0	       534	ftp.c	FUNCTION_8	ELSE_1	IF_6
0x40009ba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009be	    0x488b80400300	           mov rax, qword [rax + 0x340] 	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009c5	          0x4885c0	                           test rax, rax	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009c8	            0x7e0d	                           jle 0x40009d7	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009ca	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009ce	    0x488b80400300	           mov rax, qword [rax + 0x340] 	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009d5	            0xeb05	                           jmp 0x40009dc	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009d7	      0xb860ea0000	                         mov eax, 0xea60	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009dc	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009e0	      0xba00000000	                              mov edx, 0	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009e5	          0x4889c6	                            mov rsi, rax	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009e8	          0x4889cf	                            mov rdi, rcx	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009eb	      0xe800000000	                          call 0x40009f0	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009f0	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       540	ftp.c	FUNCTION_8
0x40009f3	              0xc9	                                   leave	       541	ftp.c	FUNCTION_8
0x40009f4	              0xc3	                                     ret	       541	ftp.c	FUNCTION_8
ftp_state_retr	DO,0:FOR,0:functions,0:ELSE,3:SWITCH,0:CALL,12:IF,7:WHILE,0	168
0x4003e83	              0x55	                                push rbp	      2181	ftp.c	FUNCTION_36
0x4003e84	          0x4889e5	                            mov rbp, rsp	      2181	ftp.c	FUNCTION_36
0x4003e87	        0x4883ec30	                           sub rsp, 0x30	      2181	ftp.c	FUNCTION_36
0x4003e8b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2181	ftp.c	FUNCTION_36
0x4003e8f	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2181	ftp.c	FUNCTION_36
0x4003e93	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      2182	ftp.c	FUNCTION_36
0x4003e9a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2183	ftp.c	FUNCTION_36
0x4003e9e	          0x488b00	                    mov rax, qword [rax]	      2183	ftp.c	FUNCTION_36
0x4003ea1	        0x488945e8	             mov qword [rbp - 0x18], rax	      2183	ftp.c	FUNCTION_36
0x4003ea5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2184	ftp.c	FUNCTION_36
0x4003ea9	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      2184	ftp.c	FUNCTION_36
0x4003eb0	        0x488945f0	             mov qword [rbp - 0x10], rax	      2184	ftp.c	FUNCTION_36
0x4003eb4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2185	ftp.c	FUNCTION_36
0x4003eb8	    0x4805b0050000	                          add rax, 0x5b0	      2185	ftp.c	FUNCTION_36
0x4003ebe	        0x488945f8	                mov qword [rbp - 8], rax	      2185	ftp.c	FUNCTION_36
0x4003ec2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2187	ftp.c	FUNCTION_36	IF_1
0x4003ec6	    0x488b80700700	           mov rax, qword [rax + 0x770] 	      2187	ftp.c	FUNCTION_36	IF_1
0x4003ecd	          0x4885c0	                           test rax, rax	      2187	ftp.c	FUNCTION_36	IF_1
0x4003ed0	            0x7433	                            je 0x4003f05	      2187	ftp.c	FUNCTION_36	IF_1
0x4003ed2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2187	ftp.c	FUNCTION_36	IF_1
0x4003ed6	    0x488b80700700	           mov rax, qword [rax + 0x770] 	      2187	ftp.c	FUNCTION_36	IF_1
0x4003edd	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2187	ftp.c	FUNCTION_36	IF_1
0x4003ee1	            0x7d22	                           jge 0x4003f05	      2187	ftp.c	FUNCTION_36	IF_1
0x4003ee3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2188	ftp.c	FUNCTION_36	IF_1	CALL_1
0x4003ee7	    0x488d35000000	                   lea rsi, [0x04003eee]	      2188	ftp.c	FUNCTION_36	IF_1	CALL_1
0x4003eee	          0x4889c7	                            mov rdi, rax	      2188	ftp.c	FUNCTION_36	IF_1	CALL_1
0x4003ef1	      0xb800000000	                              mov eax, 0	      2188	ftp.c	FUNCTION_36	IF_1	CALL_1
0x4003ef6	      0xe800000000	                          call 0x4003efb	      2188	ftp.c	FUNCTION_36	IF_1	CALL_1
0x4003efb	      0xb83f000000	                           mov eax, 0x3f	      2189	ftp.c	FUNCTION_36	IF_1
0x4003f00	      0xe954020000	                           jmp 0x4004159	      2189	ftp.c	FUNCTION_36	IF_1
0x4003f05	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2191	ftp.c	FUNCTION_36
0x4003f09	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2191	ftp.c	FUNCTION_36
0x4003f0d	        0x48895020	             mov qword [rax + 0x20], rdx	      2191	ftp.c	FUNCTION_36
0x4003f11	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2193	ftp.c	FUNCTION_36	IF_2
0x4003f15	    0x488b80b05000	          mov rax, qword [rax + 0x50b0] 	      2193	ftp.c	FUNCTION_36	IF_2
0x4003f1c	          0x4885c0	                           test rax, rax	      2193	ftp.c	FUNCTION_36	IF_2
0x4003f1f	     0xf84ef010000	                            je 0x4004114	      2193	ftp.c	FUNCTION_36	IF_2
0x4003f25	      0x48837dd0ff	cmp qword [rbp - 0x30], 0xffffffffffffffff	      2196	ftp.c	FUNCTION_36	IF_2	IF_3
0x4003f2a	            0x751d	                           jne 0x4003f49	      2196	ftp.c	FUNCTION_36	IF_2	IF_3
0x4003f2c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2197	ftp.c	FUNCTION_36	IF_2	IF_3	CALL_2
0x4003f30	    0x488d35000000	                   lea rsi, [0x04003f37]	      2197	ftp.c	FUNCTION_36	IF_2	IF_3	CALL_2
0x4003f37	          0x4889c7	                            mov rdi, rax	      2197	ftp.c	FUNCTION_36	IF_2	IF_3	CALL_2
0x4003f3a	      0xb800000000	                              mov eax, 0	      2197	ftp.c	FUNCTION_36	IF_2	IF_3	CALL_2
0x4003f3f	      0xe800000000	                          call 0x4003f44	      2197	ftp.c	FUNCTION_36	IF_2	IF_3	CALL_2
0x4003f44	      0xe9e6000000	                           jmp 0x400402f	      2197	ftp.c	FUNCTION_36	IF_2	IF_3	CALL_2
0x4003f49	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2206	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003f4d	    0x488b80b05000	          mov rax, qword [rax + 0x50b0] 	      2206	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003f54	          0x4885c0	                           test rax, rax	      2206	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003f57	            0x797a	                           jns 0x4003fd3	      2206	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003f59	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2208	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5
0x4003f5d	    0x488b80b05000	          mov rax, qword [rax + 0x50b0] 	      2208	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5
0x4003f64	          0x48f7d8	                                 neg rax	      2208	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5
0x4003f67	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2208	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5
0x4003f6b	            0x7e31	                           jle 0x4003f9e	      2208	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5
0x4003f6d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2209	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5	CALL_3
0x4003f71	    0x488b90b05000	          mov rdx, qword [rax + 0x50b0] 	      2209	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5	CALL_3
0x4003f78	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      2209	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5	CALL_3
0x4003f7c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2209	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5	CALL_3
0x4003f80	    0x488d35000000	                   lea rsi, [0x04003f87]	      2209	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5	CALL_3
0x4003f87	          0x4889c7	                            mov rdi, rax	      2209	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5	CALL_3
0x4003f8a	      0xb800000000	                              mov eax, 0	      2209	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5	CALL_3
0x4003f8f	      0xe800000000	                          call 0x4003f94	      2209	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5	CALL_3
0x4003f94	      0xb824000000	                           mov eax, 0x24	      2212	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5
0x4003f99	      0xe9bb010000	                           jmp 0x4004159	      2212	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5
0x4003f9e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2215	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fa2	    0x488b80b05000	          mov rax, qword [rax + 0x50b0] 	      2215	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fa9	          0x48f7d8	                                 neg rax	      2215	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fac	          0x4889c2	                            mov rdx, rax	      2215	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003faf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2215	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fb3	        0x48895020	             mov qword [rax + 0x20], rdx	      2215	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fb7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2217	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fbb	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2217	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fbf	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2217	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fc3	          0x4829c2	                            sub rdx, rax	      2217	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fc6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2217	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fca	    0x488990b05000	          mov qword [rax + 0x50b0], rdx 	      2217	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fd1	            0xeb5c	                           jmp 0x400402f	      2217	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fd3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2220	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6
0x4003fd7	    0x488b80b05000	          mov rax, qword [rax + 0x50b0] 	      2220	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6
0x4003fde	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2220	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6
0x4003fe2	            0x7e31	                           jle 0x4004015	      2220	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6
0x4003fe4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2221	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6	CALL_4
0x4003fe8	    0x488b90b05000	          mov rdx, qword [rax + 0x50b0] 	      2221	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6	CALL_4
0x4003fef	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      2221	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6	CALL_4
0x4003ff3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2221	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6	CALL_4
0x4003ff7	    0x488d35000000	                   lea rsi, [0x04003ffe]	      2221	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6	CALL_4
0x4003ffe	          0x4889c7	                            mov rdi, rax	      2221	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6	CALL_4
0x4004001	      0xb800000000	                              mov eax, 0	      2221	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6	CALL_4
0x4004006	      0xe800000000	                          call 0x400400b	      2221	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6	CALL_4
0x400400b	      0xb824000000	                           mov eax, 0x24	      2224	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6
0x4004010	      0xe944010000	                           jmp 0x4004159	      2224	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6
0x4004015	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2227	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2
0x4004019	    0x488b80b05000	          mov rax, qword [rax + 0x50b0] 	      2227	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2
0x4004020	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2227	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2
0x4004024	          0x4829c2	                            sub rdx, rax	      2227	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2
0x4004027	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2227	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2
0x400402b	        0x48895020	             mov qword [rax + 0x20], rdx	      2227	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2
0x400402f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2231	ftp.c	FUNCTION_36	IF_2	IF_7
0x4004033	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2231	ftp.c	FUNCTION_36	IF_2	IF_7
0x4004037	          0x4885c0	                           test rax, rax	      2231	ftp.c	FUNCTION_36	IF_2	IF_7
0x400403a	            0x7571	                           jne 0x40040ad	      2231	ftp.c	FUNCTION_36	IF_2	IF_7
0x400403c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x4004040	        0x4883ec08	                              sub rsp, 8	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x4004044	            0x6a00	                                  push 0	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x4004046	    0x41b9ffffffff	                     mov r9d, 0xffffffff	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x400404c	    0x41b800000000	                              mov r8d, 0	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x4004052	      0xb900000000	                              mov ecx, 0	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x4004057	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x400405e	      0xbeffffffff	                     mov esi, 0xffffffff	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x4004063	          0x4889c7	                            mov rdi, rax	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x4004066	      0xe800000000	                          call 0x400406b	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x400406b	        0x4883c410	                           add rsp, 0x10	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x400406f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2234	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_6
0x4004073	    0x488d35000000	                   lea rsi, [0x0400407a]	      2234	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_6
0x400407a	          0x4889c7	                            mov rdi, rax	      2234	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_6
0x400407d	      0xb800000000	                              mov eax, 0	      2234	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_6
0x4004082	      0xe800000000	                          call 0x4004087	      2234	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_6
0x4004087	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2238	ftp.c	FUNCTION_36	IF_2	IF_7
0x400408b	    0xc74018020000	               mov dword [rax + 0x18], 2	      2238	ftp.c	FUNCTION_36	IF_2	IF_7
0x4004092	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2239	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_7
0x4004096	      0xbe00000000	                              mov esi, 0	      2239	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_7
0x400409b	          0x4889c7	                            mov rdi, rax	      2239	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_7
0x400409e	      0xe8d4ccffff	                         call sym._state	      2239	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_7
0x40040a3	      0xb800000000	                              mov eax, 0	      2240	ftp.c	FUNCTION_36	IF_2	IF_7
0x40040a8	      0xe9ac000000	                           jmp 0x4004159	      2240	ftp.c	FUNCTION_36	IF_2	IF_7
0x40040ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2244	ftp.c	FUNCTION_36	IF_2	CALL_8
0x40040b1	    0x488b90b05000	          mov rdx, qword [rax + 0x50b0] 	      2244	ftp.c	FUNCTION_36	IF_2	CALL_8
0x40040b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2244	ftp.c	FUNCTION_36	IF_2	CALL_8
0x40040bc	    0x488d35000000	                   lea rsi, [0x040040c3]	      2244	ftp.c	FUNCTION_36	IF_2	CALL_8
0x40040c3	          0x4889c7	                            mov rdi, rax	      2244	ftp.c	FUNCTION_36	IF_2	CALL_8
0x40040c6	      0xb800000000	                              mov eax, 0	      2244	ftp.c	FUNCTION_36	IF_2	CALL_8
0x40040cb	      0xe800000000	                          call 0x40040d0	      2244	ftp.c	FUNCTION_36	IF_2	CALL_8
0x40040d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2247	ftp.c	FUNCTION_36	IF_2	CALL_9
0x40040d4	    0x488b90b05000	          mov rdx, qword [rax + 0x50b0] 	      2247	ftp.c	FUNCTION_36	IF_2	CALL_9
0x40040db	        0x488b45f8	                mov rax, qword [rbp - 8]	      2247	ftp.c	FUNCTION_36	IF_2	CALL_9
0x40040df	    0x488d35000000	                   lea rsi, [0x040040e6]	      2247	ftp.c	FUNCTION_36	IF_2	CALL_9
0x40040e6	          0x4889c7	                            mov rdi, rax	      2247	ftp.c	FUNCTION_36	IF_2	CALL_9
0x40040e9	      0xb800000000	                              mov eax, 0	      2247	ftp.c	FUNCTION_36	IF_2	CALL_9
0x40040ee	      0xe800000000	                          call 0x40040f3	      2247	ftp.c	FUNCTION_36	IF_2	CALL_9
0x40040f3	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2247	ftp.c	FUNCTION_36	IF_2	CALL_9
0x40040f6	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2247	ftp.c	FUNCTION_36	IF_2	CALL_9
0x40040fa	            0x7405	                            je 0x4004101	      2247	ftp.c	FUNCTION_36	IF_2	CALL_9
0x40040fc	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2247	ftp.c	FUNCTION_36	IF_2	CALL_9
0x40040ff	            0xeb58	                           jmp 0x4004159	      2247	ftp.c	FUNCTION_36	IF_2	CALL_9
0x4004101	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2250	ftp.c	FUNCTION_36	IF_2	CALL_10
0x4004105	      0xbe1b000000	                           mov esi, 0x1b	      2250	ftp.c	FUNCTION_36	IF_2	CALL_10
0x400410a	          0x4889c7	                            mov rdi, rax	      2250	ftp.c	FUNCTION_36	IF_2	CALL_10
0x400410d	      0xe865ccffff	                         call sym._state	      2250	ftp.c	FUNCTION_36	IF_2	CALL_10
0x4004112	            0xeb42	                           jmp 0x4004156	      2250	ftp.c	FUNCTION_36	IF_2	CALL_10
0x4004114	        0x488b45f8	                mov rax, qword [rbp - 8]	      2254	ftp.c	FUNCTION_36	ELSE_3	CALL_11
0x4004118	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      2254	ftp.c	FUNCTION_36	ELSE_3	CALL_11
0x400411f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2254	ftp.c	FUNCTION_36	ELSE_3	CALL_11
0x4004123	    0x488d35000000	                   lea rsi, [0x0400412a]	      2254	ftp.c	FUNCTION_36	ELSE_3	CALL_11
0x400412a	          0x4889c7	                            mov rdi, rax	      2254	ftp.c	FUNCTION_36	ELSE_3	CALL_11
0x400412d	      0xb800000000	                              mov eax, 0	      2254	ftp.c	FUNCTION_36	ELSE_3	CALL_11
0x4004132	      0xe800000000	                          call 0x4004137	      2254	ftp.c	FUNCTION_36	ELSE_3	CALL_11
0x4004137	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2254	ftp.c	FUNCTION_36	ELSE_3	CALL_11
0x400413a	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2254	ftp.c	FUNCTION_36	ELSE_3	CALL_11
0x400413e	            0x7405	                            je 0x4004145	      2254	ftp.c	FUNCTION_36	ELSE_3	CALL_11
0x4004140	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2254	ftp.c	FUNCTION_36	ELSE_3	CALL_11
0x4004143	            0xeb14	                           jmp 0x4004159	      2254	ftp.c	FUNCTION_36	ELSE_3	CALL_11
0x4004145	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2255	ftp.c	FUNCTION_36	ELSE_3	CALL_12
0x4004149	      0xbe20000000	                           mov esi, 0x20	      2255	ftp.c	FUNCTION_36	ELSE_3	CALL_12
0x400414e	          0x4889c7	                            mov rdi, rax	      2255	ftp.c	FUNCTION_36	ELSE_3	CALL_12
0x4004151	      0xe821ccffff	                         call sym._state	      2255	ftp.c	FUNCTION_36	ELSE_3	CALL_12
0x4004156	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2258	ftp.c	FUNCTION_36
0x4004159	              0xc9	                                   leave	      2259	ftp.c	FUNCTION_36
0x400415a	              0xc3	                                     ret	      2259	ftp.c	FUNCTION_36
ftp_state_pasv_resp	DO,0:FOR,1:functions,0:ELSE,6:SWITCH,0:CALL,29:IF,23:WHILE,1	422
0x400307e	              0x55	                                push rbp	      1824	ftp.c	FUNCTION_32
0x400307f	          0x4889e5	                            mov rbp, rsp	      1824	ftp.c	FUNCTION_32
0x4003082	              0x53	                                push rbx	      1824	ftp.c	FUNCTION_32
0x4003083	    0x4881ec980000	                           sub rsp, 0x98	      1824	ftp.c	FUNCTION_32
0x400308a	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      1824	ftp.c	FUNCTION_32
0x4003091	    0x89b564ffffff	             mov dword [rbp - 0x9c], esi	      1824	ftp.c	FUNCTION_32
0x4003097	    0x64488b042528	                mov rax, qword fs:[0x28]	      1824	ftp.c	FUNCTION_32
0x40030a0	        0x488945e8	             mov qword [rbp - 0x18], rax	      1824	ftp.c	FUNCTION_32
0x40030a4	            0x31c0	                            xor eax, eax	      1824	ftp.c	FUNCTION_32
0x40030a6	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1825	ftp.c	FUNCTION_32
0x40030ad	    0x4805b0050000	                          add rax, 0x5b0	      1825	ftp.c	FUNCTION_32
0x40030b3	        0x488945a8	             mov qword [rbp - 0x58], rax	      1825	ftp.c	FUNCTION_32
0x40030b7	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1827	ftp.c	FUNCTION_32
0x40030be	          0x488b00	                    mov rax, qword [rax]	      1827	ftp.c	FUNCTION_32
0x40030c1	        0x488945b0	             mov qword [rbp - 0x50], rax	      1827	ftp.c	FUNCTION_32
0x40030c5	    0x48c745900000	               mov qword [rbp - 0x70], 0	      1828	ftp.c	FUNCTION_32
0x40030cd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1831	ftp.c	FUNCTION_32
0x40030d1	    0x488b80a80c00	           mov rax, qword [rax + 0xca8] 	      1831	ftp.c	FUNCTION_32
0x40030d8	        0x4883c004	                              add rax, 4	      1831	ftp.c	FUNCTION_32
0x40030dc	        0x48894598	             mov qword [rbp - 0x68], rax	      1831	ftp.c	FUNCTION_32
0x40030e0	    0x488b05000000	            mov rax, qword [0x040030e7] 	      1834	ftp.c	FUNCTION_32	CALL_1
0x40030e7	          0x488b00	                    mov rax, qword [rax]	      1834	ftp.c	FUNCTION_32	CALL_1
0x40030ea	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1834	ftp.c	FUNCTION_32	CALL_1
0x40030ee	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	      1834	ftp.c	FUNCTION_32	CALL_1
0x40030f5	          0x4889d7	                            mov rdi, rdx	      1834	ftp.c	FUNCTION_32	CALL_1
0x40030f8	            0xffd0	                                call rax	      1834	ftp.c	FUNCTION_32	CALL_1
0x40030fa	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1834	ftp.c	FUNCTION_32	CALL_1
0x40030fe	    0x48c780e00000	               mov qword [rax + 0xe0], 0	      1834	ftp.c	FUNCTION_32	CALL_1
0x4003109	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1836	ftp.c	FUNCTION_32	IF_1
0x400310d	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      1836	ftp.c	FUNCTION_32	IF_1
0x4003113	            0x85c0	                           test eax, eax	      1836	ftp.c	FUNCTION_32	IF_1
0x4003115	     0xf8579010000	                           jne 0x4003294	      1836	ftp.c	FUNCTION_32	IF_1
0x400311b	    0x81bd64ffffff	           cmp dword [rbp - 0x9c], 0xe5 	      1836	ftp.c	FUNCTION_32	IF_1
0x4003125	     0xf8569010000	                           jne 0x4003294	      1836	ftp.c	FUNCTION_32	IF_1
0x400312b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1839	ftp.c	FUNCTION_32	IF_1	CALL_2
0x400312f	      0xbe28000000	                           mov esi, 0x28	      1839	ftp.c	FUNCTION_32	IF_1	CALL_2
0x4003134	          0x4889c7	                            mov rdi, rax	      1839	ftp.c	FUNCTION_32	IF_1	CALL_2
0x4003137	      0xe800000000	                          call 0x400313c	      1839	ftp.c	FUNCTION_32	IF_1	CALL_2
0x400313c	        0x488945a0	             mov qword [rbp - 0x60], rax	      1839	ftp.c	FUNCTION_32	IF_1	CALL_2
0x4003140	      0x48837da000	               cmp qword [rbp - 0x60], 0	      1840	ftp.c	FUNCTION_32	IF_1	IF_2
0x4003145	     0xf841c010000	                            je 0x4003267	      1840	ftp.c	FUNCTION_32	IF_1	IF_2
0x400314b	      0x488345a001	               add qword [rbp - 0x60], 1	      1843	ftp.c	FUNCTION_32	IF_1	IF_2
0x4003150	        0x488d7580	                   lea rsi, [rbp - 0x80]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003154	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003158	        0x4c8d4002	                       lea r8, [rax + 2]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x400315c	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003160	        0x488d4801	                      lea rcx, [rax + 1]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003164	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003168	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x400316c	        0x4883ec08	                              sub rsp, 8	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003170	        0x488d7de0	                   lea rdi, [rbp - 0x20]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003174	        0x4883c703	                              add rdi, 3	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003178	              0x57	                                push rdi	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003179	          0x4989f1	                             mov r9, rsi	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x400317c	    0x488d35000000	                   lea rsi, [0x04003183]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003183	          0x4889c7	                            mov rdi, rax	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003186	      0xb800000000	                              mov eax, 0	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x400318b	      0xe800000000	                          call 0x4003190	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003190	        0x4883c410	                           add rsp, 0x10	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003194	          0x83f805	                              cmp eax, 5	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003197	     0xf85c2000000	                           jne 0x400325f	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x400319d	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	      1850	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3
0x40031a1	    0x88857dffffff	               mov byte [rbp - 0x83], al	      1850	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3
0x40031a7	    0xc74584010000	               mov dword [rbp - 0x7c], 1	      1855	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1
0x40031ae	            0xeb20	                           jmp 0x40031d0	      1855	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1
0x40031b0	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1856	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1	IF_4
0x40031b3	            0x4898	                                    cdqe	      1856	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1	IF_4
0x40031b5	       0xfb64405e0	      movzx eax, byte [rbp + rax - 0x20]	      1856	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1	IF_4
0x40031ba	    0x3a857dffffff	               cmp al, byte [rbp - 0x83]	      1856	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1	IF_4
0x40031c0	            0x740a	                            je 0x40031cc	      1856	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1	IF_4
0x40031c2	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1857	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1	IF_4
0x40031ca	            0xeb0a	                           jmp 0x40031d6	      1858	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1	IF_4
0x40031cc	        0x83458401	               add dword [rbp - 0x7c], 1	      1855	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1
0x40031d0	        0x837d8403	               cmp dword [rbp - 0x7c], 3	      1855	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1
0x40031d4	            0x7eda	                           jle 0x40031b0	      1855	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1
0x40031d6	          0x8b4580	             mov eax, dword [rbp - 0x80]	      1861	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5
0x40031d9	      0x3dffff0000	                         cmp eax, 0xffff	      1861	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5
0x40031de	            0x7622	                           jbe 0x4003202	      1861	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5
0x40031e0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1862	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5	CALL_4
0x40031e4	    0x488d35000000	                   lea rsi, [0x040031eb]	      1862	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5	CALL_4
0x40031eb	          0x4889c7	                            mov rdi, rax	      1862	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5	CALL_4
0x40031ee	      0xb800000000	                              mov eax, 0	      1862	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5	CALL_4
0x40031f3	      0xe800000000	                          call 0x40031f8	      1862	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5	CALL_4
0x40031f8	      0xb80d000000	                            mov eax, 0xd	      1863	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5
0x40031fd	      0xe9a5050000	                           jmp 0x40037a7	      1863	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5
0x4003202	      0x48837da000	               cmp qword [rbp - 0x60], 0	      1865	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6
0x4003207	            0x745e	                            je 0x4003267	      1865	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6
0x4003209	          0x8b4580	             mov eax, dword [rbp - 0x80]	      1866	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6
0x400320c	            0x89c2	                            mov edx, eax	      1866	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6
0x400320e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1866	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6
0x4003212	    0x668990e80000	               mov word [rax + 0xe8], dx	      1866	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6
0x4003219	    0x488b05000000	            mov rax, qword [0x04003220] 	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x4003220	          0x488b18	                    mov rbx, qword [rax]	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x4003223	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x400322a	          0x4889c7	                            mov rdi, rax	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x400322d	      0xe80dfeffff	                call sym.control_address	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x4003232	          0x4889c7	                            mov rdi, rax	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x4003235	            0xffd3	                                call rbx	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x4003237	          0x4889c2	                            mov rdx, rax	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x400323a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x400323e	    0x488990e00000	             mov qword [rax + 0xe0], rdx	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x4003245	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1868	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	IF_7
0x4003249	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1868	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	IF_7
0x4003250	          0x4885c0	                           test rax, rax	      1868	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	IF_7
0x4003253	            0x7512	                           jne 0x4003267	      1868	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	IF_7
0x4003255	      0xb81b000000	                           mov eax, 0x1b	      1869	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	IF_7
0x400325a	      0xe948050000	                           jmp 0x40037a7	      1869	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	IF_7
0x400325f	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1873	ftp.c	FUNCTION_32	IF_1	IF_2	ELSE_1
0x4003267	      0x48837da000	               cmp qword [rbp - 0x60], 0	      1875	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8
0x400326c	     0xf8544020000	                           jne 0x40034b6	      1875	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8
0x4003272	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1876	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8	CALL_7
0x4003276	    0x488d35000000	                   lea rsi, [0x0400327d]	      1876	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8	CALL_7
0x400327d	          0x4889c7	                            mov rdi, rax	      1876	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8	CALL_7
0x4003280	      0xb800000000	                              mov eax, 0	      1876	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8	CALL_7
0x4003285	      0xe800000000	                          call 0x400328a	      1876	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8	CALL_7
0x400328a	      0xb80d000000	                            mov eax, 0xd	      1877	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8
0x400328f	      0xe913050000	                           jmp 0x40037a7	      1877	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8
0x4003294	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1880	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x4003298	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      1880	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x400329e	          0x83f801	                              cmp eax, 1	      1880	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x40032a1	     0xf85c5010000	                           jne 0x400346c	      1880	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x40032a7	    0x81bd64ffffff	           cmp dword [rbp - 0x9c], 0xe3 	      1880	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x40032b1	     0xf85b5010000	                           jne 0x400346c	      1880	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x40032b7	            0xeb59	                           jmp 0x4003312	      1895	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1
0x40032b9	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032bd	        0x4c8d400c	                     lea r8, [rax + 0xc]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032c1	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032c5	        0x488d7808	                      lea rdi, [rax + 8]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032c9	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032cd	        0x488d7004	                      lea rsi, [rax + 4]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032d1	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032d5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032d9	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032dd	        0x4883c104	                              add rcx, 4	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032e1	              0x51	                                push rcx	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032e2	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032e6	              0x51	                                push rcx	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032e7	          0x4d89c1	                              mov r9, r8	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032ea	          0x4989f8	                             mov r8, rdi	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032ed	          0x4889f1	                            mov rcx, rsi	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032f0	    0x488d35000000	                   lea rsi, [0x040032f7]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032f7	          0x4889c7	                            mov rdi, rax	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032fa	      0xb800000000	                              mov eax, 0	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032ff	      0xe800000000	                          call 0x4003304	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4003304	        0x4883c410	                           add rsp, 0x10	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4003308	          0x83f806	                              cmp eax, 6	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x400330b	            0x7412	                            je 0x400331f	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x400330d	      0x4883459801	               add qword [rbp - 0x68], 1	      1900	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1
0x4003312	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1895	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1
0x4003316	           0xfb600	                   movzx eax, byte [rax]	      1895	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1
0x4003319	            0x84c0	                             test al, al	      1895	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1
0x400331b	            0x759c	                           jne 0x40032b9	      1895	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1
0x400331d	            0xeb01	                           jmp 0x4003320	      1895	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1
0x400331f	              0x90	                                     nop	      1899	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10
0x4003320	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003324	           0xfb600	                   movzx eax, byte [rax]	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003327	            0x84c0	                             test al, al	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003329	            0x743c	                            je 0x4003367	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x400332b	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x400332e	      0x3dff000000	                           cmp eax, 0xff	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003333	            0x7732	                            ja 0x4003367	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003335	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003338	      0x3dff000000	                           cmp eax, 0xff	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x400333d	            0x7728	                            ja 0x4003367	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x400333f	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003342	      0x3dff000000	                           cmp eax, 0xff	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003347	            0x771e	                            ja 0x4003367	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003349	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1904	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x400334c	      0x3dff000000	                           cmp eax, 0xff	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003351	            0x7714	                            ja 0x4003367	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003353	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1904	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003356	      0x3dff000000	                           cmp eax, 0xff	      1904	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x400335b	            0x770a	                            ja 0x4003367	      1904	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x400335d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1904	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003360	      0x3dff000000	                           cmp eax, 0xff	      1904	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003365	            0x7622	                           jbe 0x4003389	      1904	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003367	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1905	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11	CALL_9
0x400336b	    0x488d35000000	                   lea rsi, [0x04003372]	      1905	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11	CALL_9
0x4003372	          0x4889c7	                            mov rdi, rax	      1905	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11	CALL_9
0x4003375	      0xb800000000	                              mov eax, 0	      1905	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11	CALL_9
0x400337a	      0xe800000000	                          call 0x400337f	      1905	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11	CALL_9
0x400337f	      0xb80e000000	                            mov eax, 0xe	      1906	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003384	      0xe91e040000	                           jmp 0x40037a7	      1906	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003389	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1910	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12
0x400338d	     0xfb680c00700	          movzx eax, byte [rax + 0x7c0] 	      1910	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12
0x4003394	            0x84c0	                             test al, al	      1910	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12
0x4003396	            0x7470	                            je 0x4003408	      1910	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12
0x4003398	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x400339f	    0x488bb0d80000	            mov rsi, qword [rax + 0xd8] 	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033a6	        0x448b45dc	             mov r8d, dword [rbp - 0x24]	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033aa	          0x8b7dd8	             mov edi, dword [rbp - 0x28]	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033ad	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033b0	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033b3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033b7	        0x4883ec08	                              sub rsp, 8	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033bb	              0x56	                                push rsi	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033bc	          0x4589c1	                            mov r9d, r8d	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033bf	          0x4189f8	                            mov r8d, edi	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033c2	    0x488d35000000	                   lea rsi, [0x040033c9]	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033c9	          0x4889c7	                            mov rdi, rax	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033cc	      0xb800000000	                              mov eax, 0	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033d1	      0xe800000000	                          call 0x40033d6	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033d6	        0x4883c410	                           add rsp, 0x10	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033da	    0x488b05000000	            mov rax, qword [0x040033e1] 	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x40033e1	          0x488b18	                    mov rbx, qword [rax]	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x40033e4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x40033eb	          0x4889c7	                            mov rdi, rax	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x40033ee	      0xe84cfcffff	                call sym.control_address	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x40033f3	          0x4889c7	                            mov rdi, rax	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x40033f6	            0xffd3	                                call rbx	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x40033f8	          0x4889c2	                            mov rdx, rax	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x40033fb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x40033ff	    0x488990e00000	             mov qword [rax + 0xe0], rdx	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x4003406	            0xeb30	                           jmp 0x4003438	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x4003408	          0x8b75dc	             mov esi, dword [rbp - 0x24]	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x400340b	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x400340e	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x4003411	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x4003414	          0x4189f0	                            mov r8d, esi	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x4003417	            0x89c6	                            mov esi, eax	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x4003419	    0x488d3d000000	                   lea rdi, [0x04003420]	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x4003420	      0xb800000000	                              mov eax, 0	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x4003425	      0xe800000000	                          call 0x400342a	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x400342a	          0x4889c2	                            mov rdx, rax	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x400342d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x4003431	    0x488990e00000	             mov qword [rax + 0xe0], rdx	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x4003438	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1921	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_13
0x400343c	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1921	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_13
0x4003443	          0x4885c0	                           test rax, rax	      1921	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_13
0x4003446	            0x750a	                           jne 0x4003452	      1921	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_13
0x4003448	      0xb81b000000	                           mov eax, 0x1b	      1922	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_13
0x400344d	      0xe955030000	                           jmp 0x40037a7	      1922	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_13
0x4003452	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1924	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x4003455	          0xc1e008	                              shl eax, 8	      1924	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x4003458	            0x89c2	                            mov edx, eax	      1924	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x400345a	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1924	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x400345d	             0x1c2	                            add edx, eax	      1924	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x400345f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1924	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x4003463	    0x668990e80000	               mov word [rax + 0xe8], dx	      1924	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x400346a	            0xeb4b	                           jmp 0x40034b7	      1881	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x400346c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1926	ftp.c	FUNCTION_32	ELSE_4	IF_14
0x4003470	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      1926	ftp.c	FUNCTION_32	ELSE_4	IF_14
0x4003476	            0x85c0	                           test eax, eax	      1926	ftp.c	FUNCTION_32	ELSE_4	IF_14
0x4003478	            0x7514	                           jne 0x400348e	      1926	ftp.c	FUNCTION_32	ELSE_4	IF_14
0x400347a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1928	ftp.c	FUNCTION_32	ELSE_4	IF_14	CALL_14
0x4003481	          0x4889c7	                            mov rdi, rax	      1928	ftp.c	FUNCTION_32	ELSE_4	IF_14	CALL_14
0x4003484	      0xe8b7faffff	               call sym.ftp_epsv_disable	      1928	ftp.c	FUNCTION_32	ELSE_4	IF_14	CALL_14
0x4003489	      0xe919030000	                           jmp 0x40037a7	      1928	ftp.c	FUNCTION_32	ELSE_4	IF_14	CALL_14
0x400348e	    0x8b9564ffffff	             mov edx, dword [rbp - 0x9c]	      1931	ftp.c	FUNCTION_32	ELSE_5	CALL_15
0x4003494	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1931	ftp.c	FUNCTION_32	ELSE_5	CALL_15
0x4003498	    0x488d35000000	                   lea rsi, [0x0400349f]	      1931	ftp.c	FUNCTION_32	ELSE_5	CALL_15
0x400349f	          0x4889c7	                            mov rdi, rax	      1931	ftp.c	FUNCTION_32	ELSE_5	CALL_15
0x40034a2	      0xb800000000	                              mov eax, 0	      1931	ftp.c	FUNCTION_32	ELSE_5	CALL_15
0x40034a7	      0xe800000000	                          call 0x40034ac	      1931	ftp.c	FUNCTION_32	ELSE_5	CALL_15
0x40034ac	      0xb80d000000	                            mov eax, 0xd	      1932	ftp.c	FUNCTION_32	ELSE_5
0x40034b1	      0xe9f1020000	                           jmp 0x40037a7	      1932	ftp.c	FUNCTION_32	ELSE_5
0x40034b6	              0x90	                                     nop	      1837	ftp.c	FUNCTION_32	IF_1
0x40034b7	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1935	ftp.c	FUNCTION_32	IF_15
0x40034be	     0xfb680550300	          movzx eax, byte [rax + 0x355] 	      1935	ftp.c	FUNCTION_32	IF_15
0x40034c5	            0x84c0	                             test al, al	      1935	ftp.c	FUNCTION_32	IF_15
0x40034c7	     0xf84ce000000	                            je 0x400359b	      1935	ftp.c	FUNCTION_32	IF_15
0x40034cd	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1941	ftp.c	FUNCTION_32	IF_15
0x40034d4	     0xfb680570300	          movzx eax, byte [rax + 0x357] 	      1941	ftp.c	FUNCTION_32	IF_15
0x40034db	            0x84c0	                             test al, al	      1941	ftp.c	FUNCTION_32	IF_15
0x40034dd	            0x7410	                            je 0x40034ef	      1941	ftp.c	FUNCTION_32	IF_15
0x40034df	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1941	ftp.c	FUNCTION_32	IF_15
0x40034e6	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      1941	ftp.c	FUNCTION_32	IF_15
0x40034ed	            0xeb0e	                           jmp 0x40034fd	      1941	ftp.c	FUNCTION_32	IF_15
0x40034ef	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1941	ftp.c	FUNCTION_32	IF_15
0x40034f6	    0x488b80600100	           mov rax, qword [rax + 0x160] 	      1941	ftp.c	FUNCTION_32	IF_15
0x40034fd	        0x488945b8	             mov qword [rbp - 0x48], rax	      1941	ftp.c	FUNCTION_32	IF_15
0x4003501	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x4003508	    0x488b80900100	           mov rax, qword [rax + 0x190] 	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x400350f	            0x89c7	                            mov edi, eax	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x4003511	        0x488d5590	                   lea rdx, [rbp - 0x70]	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x4003515	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x4003519	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x4003520	          0x4889d1	                            mov rcx, rdx	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x4003523	            0x89fa	                            mov edx, edi	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x4003525	          0x4889c7	                            mov rdi, rax	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x4003528	      0xe800000000	                          call 0x400352d	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x400352d	          0x894588	             mov dword [rbp - 0x78], eax	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x4003530	        0x837d8801	               cmp dword [rbp - 0x78], 1	      1944	ftp.c	FUNCTION_32	IF_15	IF_16
0x4003534	            0x7516	                           jne 0x400354c	      1944	ftp.c	FUNCTION_32	IF_15	IF_16
0x4003536	        0x488d5590	                   lea rdx, [rbp - 0x70]	      1947	ftp.c	FUNCTION_32	IF_15	CALL_17
0x400353a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1947	ftp.c	FUNCTION_32	IF_15	CALL_17
0x4003541	          0x4889d6	                            mov rsi, rdx	      1947	ftp.c	FUNCTION_32	IF_15	CALL_17
0x4003544	          0x4889c7	                            mov rdi, rax	      1947	ftp.c	FUNCTION_32	IF_15	CALL_17
0x4003547	      0xe800000000	                          call 0x400354c	      1947	ftp.c	FUNCTION_32	IF_15	CALL_17
0x400354c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1950	ftp.c	FUNCTION_32	IF_15
0x4003553	    0x488b80900100	           mov rax, qword [rax + 0x190] 	      1950	ftp.c	FUNCTION_32	IF_15
0x400355a	    0x6689857effff	               mov word [rbp - 0x82], ax	      1949	ftp.c	FUNCTION_32	IF_15
0x4003561	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1952	ftp.c	FUNCTION_32	IF_15	IF_17
0x4003565	          0x4885c0	                           test rax, rax	      1952	ftp.c	FUNCTION_32	IF_15	IF_17
0x4003568	     0xf85c7000000	                           jne 0x4003635	      1952	ftp.c	FUNCTION_32	IF_15	IF_17
0x400356e	     0xfb78d7effff	            movzx ecx, word [rbp - 0x82]	      1953	ftp.c	FUNCTION_32	IF_15	IF_17	CALL_18
0x4003575	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1953	ftp.c	FUNCTION_32	IF_15	IF_17	CALL_18
0x4003579	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1953	ftp.c	FUNCTION_32	IF_15	IF_17	CALL_18
0x400357d	    0x488d35000000	                   lea rsi, [0x04003584]	      1953	ftp.c	FUNCTION_32	IF_15	IF_17	CALL_18
0x4003584	          0x4889c7	                            mov rdi, rax	      1953	ftp.c	FUNCTION_32	IF_15	IF_17	CALL_18
0x4003587	      0xb800000000	                              mov eax, 0	      1953	ftp.c	FUNCTION_32	IF_15	IF_17	CALL_18
0x400358c	      0xe800000000	                          call 0x4003591	      1953	ftp.c	FUNCTION_32	IF_15	IF_17	CALL_18
0x4003591	      0xb805000000	                              mov eax, 5	      1954	ftp.c	FUNCTION_32	IF_15	IF_17
0x4003596	      0xe90c020000	                           jmp 0x40037a7	      1954	ftp.c	FUNCTION_32	IF_15	IF_17
0x400359b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x400359f	     0xfb780e80000	           movzx eax, word [rax + 0xe8] 	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40035a6	           0xfb7d0	                           movzx edx, ax	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40035a9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40035ad	    0x488bb0e00000	            mov rsi, qword [rax + 0xe0] 	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40035b4	        0x488d4d90	                   lea rcx, [rbp - 0x70]	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40035b8	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40035bf	          0x4889c7	                            mov rdi, rax	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40035c2	      0xe800000000	                          call 0x40035c7	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40035c7	          0x894588	             mov dword [rbp - 0x78], eax	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40035ca	        0x837d8801	               cmp dword [rbp - 0x78], 1	      1960	ftp.c	FUNCTION_32	ELSE_6	IF_18
0x40035ce	            0x7516	                           jne 0x40035e6	      1960	ftp.c	FUNCTION_32	ELSE_6	IF_18
0x40035d0	        0x488d5590	                   lea rdx, [rbp - 0x70]	      1962	ftp.c	FUNCTION_32	ELSE_6	CALL_20
0x40035d4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1962	ftp.c	FUNCTION_32	ELSE_6	CALL_20
0x40035db	          0x4889d6	                            mov rsi, rdx	      1962	ftp.c	FUNCTION_32	ELSE_6	CALL_20
0x40035de	          0x4889c7	                            mov rdi, rax	      1962	ftp.c	FUNCTION_32	ELSE_6	CALL_20
0x40035e1	      0xe800000000	                          call 0x40035e6	      1962	ftp.c	FUNCTION_32	ELSE_6	CALL_20
0x40035e6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1964	ftp.c	FUNCTION_32	ELSE_6
0x40035ea	     0xfb780e80000	           movzx eax, word [rax + 0xe8] 	      1964	ftp.c	FUNCTION_32	ELSE_6
0x40035f1	    0x6689857effff	               mov word [rbp - 0x82], ax	      1964	ftp.c	FUNCTION_32	ELSE_6
0x40035f8	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1966	ftp.c	FUNCTION_32	ELSE_6	IF_19
0x40035fc	          0x4885c0	                           test rax, rax	      1966	ftp.c	FUNCTION_32	ELSE_6	IF_19
0x40035ff	            0x7534	                           jne 0x4003635	      1966	ftp.c	FUNCTION_32	ELSE_6	IF_19
0x4003601	     0xfb78d7effff	            movzx ecx, word [rbp - 0x82]	      1967	ftp.c	FUNCTION_32	ELSE_6	IF_19	CALL_21
0x4003608	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1967	ftp.c	FUNCTION_32	ELSE_6	IF_19	CALL_21
0x400360c	    0x488b90e00000	            mov rdx, qword [rax + 0xe0] 	      1967	ftp.c	FUNCTION_32	ELSE_6	IF_19	CALL_21
0x4003613	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1967	ftp.c	FUNCTION_32	ELSE_6	IF_19	CALL_21
0x4003617	    0x488d35000000	                   lea rsi, [0x0400361e]	      1967	ftp.c	FUNCTION_32	ELSE_6	IF_19	CALL_21
0x400361e	          0x4889c7	                            mov rdi, rax	      1967	ftp.c	FUNCTION_32	ELSE_6	IF_19	CALL_21
0x4003621	      0xb800000000	                              mov eax, 0	      1967	ftp.c	FUNCTION_32	ELSE_6	IF_19	CALL_21
0x4003626	      0xe800000000	                          call 0x400362b	      1967	ftp.c	FUNCTION_32	ELSE_6	IF_19	CALL_21
0x400362b	      0xb80f000000	                            mov eax, 0xf	      1968	ftp.c	FUNCTION_32	ELSE_6	IF_19
0x4003630	      0xe972010000	                           jmp 0x40037a7	      1968	ftp.c	FUNCTION_32	ELSE_6	IF_19
0x4003635	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1972	ftp.c	FUNCTION_32
0x400363c	    0xc6805e030000	               mov byte [rax + 0x35e], 0	      1972	ftp.c	FUNCTION_32
0x4003643	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1973	ftp.c	FUNCTION_32	CALL_22
0x4003647	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1973	ftp.c	FUNCTION_32	CALL_22
0x400364e	          0x4889d6	                            mov rsi, rdx	      1973	ftp.c	FUNCTION_32	CALL_22
0x4003651	          0x4889c7	                            mov rdi, rax	      1973	ftp.c	FUNCTION_32	CALL_22
0x4003654	      0xe800000000	                          call 0x4003659	      1973	ftp.c	FUNCTION_32	CALL_22
0x4003659	          0x89458c	             mov dword [rbp - 0x74], eax	      1973	ftp.c	FUNCTION_32	CALL_22
0x400365c	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      1975	ftp.c	FUNCTION_32	IF_20
0x4003660	            0x7449	                            je 0x40036ab	      1975	ftp.c	FUNCTION_32	IF_20
0x4003662	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1976	ftp.c	FUNCTION_32	IF_20	CALL_23
0x4003666	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1976	ftp.c	FUNCTION_32	IF_20	CALL_23
0x400366a	          0x4889d6	                            mov rsi, rdx	      1976	ftp.c	FUNCTION_32	IF_20	CALL_23
0x400366d	          0x4889c7	                            mov rdi, rax	      1976	ftp.c	FUNCTION_32	IF_20	CALL_23
0x4003670	      0xe800000000	                          call 0x4003675	      1976	ftp.c	FUNCTION_32	IF_20	CALL_23
0x4003675	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1977	ftp.c	FUNCTION_32	IF_20	IF_21
0x4003679	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      1977	ftp.c	FUNCTION_32	IF_20	IF_21
0x400367f	            0x85c0	                           test eax, eax	      1977	ftp.c	FUNCTION_32	IF_20	IF_21
0x4003681	            0x7520	                           jne 0x40036a3	      1977	ftp.c	FUNCTION_32	IF_20	IF_21
0x4003683	    0x81bd64ffffff	           cmp dword [rbp - 0x9c], 0xe5 	      1977	ftp.c	FUNCTION_32	IF_20	IF_21
0x400368d	            0x7514	                           jne 0x40036a3	      1977	ftp.c	FUNCTION_32	IF_20	IF_21
0x400368f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1978	ftp.c	FUNCTION_32	IF_20	CALL_24
0x4003696	          0x4889c7	                            mov rdi, rax	      1978	ftp.c	FUNCTION_32	IF_20	CALL_24
0x4003699	      0xe8a2f8ffff	               call sym.ftp_epsv_disable	      1978	ftp.c	FUNCTION_32	IF_20	CALL_24
0x400369e	      0xe904010000	                           jmp 0x40037a7	      1978	ftp.c	FUNCTION_32	IF_20	CALL_24
0x40036a3	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1980	ftp.c	FUNCTION_32	IF_20
0x40036a6	      0xe9fc000000	                           jmp 0x40037a7	      1980	ftp.c	FUNCTION_32	IF_20
0x40036ab	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1990	ftp.c	FUNCTION_32	IF_22
0x40036af	     0xfb680a80700	          movzx eax, byte [rax + 0x7a8] 	      1990	ftp.c	FUNCTION_32	IF_22
0x40036b6	            0x84c0	                             test al, al	      1990	ftp.c	FUNCTION_32	IF_22
0x40036b8	            0x7428	                            je 0x40036e2	      1990	ftp.c	FUNCTION_32	IF_22
0x40036ba	     0xfb78d7effff	            movzx ecx, word [rbp - 0x82]	      1992	ftp.c	FUNCTION_32	CALL_25
0x40036c1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1992	ftp.c	FUNCTION_32	CALL_25
0x40036c5	    0x488b90e00000	            mov rdx, qword [rax + 0xe0] 	      1992	ftp.c	FUNCTION_32	CALL_25
0x40036cc	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1992	ftp.c	FUNCTION_32	CALL_25
0x40036d0	          0x488b30	                    mov rsi, qword [rax]	      1992	ftp.c	FUNCTION_32	CALL_25
0x40036d3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1992	ftp.c	FUNCTION_32	CALL_25
0x40036da	          0x4889c7	                            mov rdi, rax	      1992	ftp.c	FUNCTION_32	CALL_25
0x40036dd	      0xe8e42d0000	               call sym.ftp_pasv_verbose	      1992	ftp.c	FUNCTION_32	CALL_25
0x40036e2	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1994	ftp.c	FUNCTION_32	CALL_26
0x40036e6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1994	ftp.c	FUNCTION_32	CALL_26
0x40036ea	          0x4889d6	                            mov rsi, rdx	      1994	ftp.c	FUNCTION_32	CALL_26
0x40036ed	          0x4889c7	                            mov rdi, rax	      1994	ftp.c	FUNCTION_32	CALL_26
0x40036f0	      0xe800000000	                          call 0x40036f5	      1994	ftp.c	FUNCTION_32	CALL_26
0x40036f5	    0x488b05000000	            mov rax, qword [0x040036fc] 	      1996	ftp.c	FUNCTION_32	CALL_27
0x40036fc	          0x488b00	                    mov rax, qword [rax]	      1996	ftp.c	FUNCTION_32	CALL_27
0x40036ff	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      1996	ftp.c	FUNCTION_32	CALL_27
0x4003706	    0x488b92e80000	            mov rdx, qword [rdx + 0xe8] 	      1996	ftp.c	FUNCTION_32	CALL_27
0x400370d	          0x4889d7	                            mov rdi, rdx	      1996	ftp.c	FUNCTION_32	CALL_27
0x4003710	            0xffd0	                                call rax	      1996	ftp.c	FUNCTION_32	CALL_27
0x4003712	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1996	ftp.c	FUNCTION_32	CALL_27
0x4003719	    0x48c780e80000	               mov qword [rax + 0xe8], 0	      1996	ftp.c	FUNCTION_32	CALL_27
0x4003724	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1997	ftp.c	FUNCTION_32
0x4003728	     0xfb790e80000	           movzx edx, word [rax + 0xe8] 	      1997	ftp.c	FUNCTION_32
0x400372f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1997	ftp.c	FUNCTION_32
0x4003736	    0x668990a00100	              mov word [rax + 0x1a0], dx	      1997	ftp.c	FUNCTION_32
0x400373d	    0x488b05000000	            mov rax, qword [0x04003744] 	      1998	ftp.c	FUNCTION_32	CALL_28
0x4003744	          0x488b00	                    mov rax, qword [rax]	      1998	ftp.c	FUNCTION_32	CALL_28
0x4003747	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1998	ftp.c	FUNCTION_32	CALL_28
0x400374b	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	      1998	ftp.c	FUNCTION_32	CALL_28
0x4003752	          0x4889d7	                            mov rdi, rdx	      1998	ftp.c	FUNCTION_32	CALL_28
0x4003755	            0xffd0	                                call rax	      1998	ftp.c	FUNCTION_32	CALL_28
0x4003757	          0x4889c2	                            mov rdx, rax	      1998	ftp.c	FUNCTION_32	CALL_28
0x400375a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1998	ftp.c	FUNCTION_32	CALL_28
0x4003761	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      1998	ftp.c	FUNCTION_32	CALL_28
0x4003768	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1999	ftp.c	FUNCTION_32	IF_23
0x400376f	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1999	ftp.c	FUNCTION_32	IF_23
0x4003776	          0x4885c0	                           test rax, rax	      1999	ftp.c	FUNCTION_32	IF_23
0x4003779	            0x7507	                           jne 0x4003782	      1999	ftp.c	FUNCTION_32	IF_23
0x400377b	      0xb81b000000	                           mov eax, 0x1b	      2000	ftp.c	FUNCTION_32	IF_23
0x4003780	            0xeb25	                           jmp 0x40037a7	      2000	ftp.c	FUNCTION_32	IF_23
0x4003782	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2002	ftp.c	FUNCTION_32
0x4003789	    0xc6805c030000	               mov byte [rax + 0x35c], 1	      2002	ftp.c	FUNCTION_32
0x4003790	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2003	ftp.c	FUNCTION_32	CALL_29
0x4003797	      0xbe00000000	                              mov esi, 0	      2003	ftp.c	FUNCTION_32	CALL_29
0x400379c	          0x4889c7	                            mov rdi, rax	      2003	ftp.c	FUNCTION_32	CALL_29
0x400379f	      0xe8d3d5ffff	                         call sym._state	      2003	ftp.c	FUNCTION_32	CALL_29
0x40037a4	          0x8b458c	             mov eax, dword [rbp - 0x74]	      2005	ftp.c	FUNCTION_32
0x40037a7	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2006	ftp.c	FUNCTION_32
0x40037ab	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2006	ftp.c	FUNCTION_32
0x40037b4	            0x7405	                            je 0x40037bb	      2006	ftp.c	FUNCTION_32
0x40037b6	      0xe800000000	                          call 0x40037bb	      2006	ftp.c	FUNCTION_32
0x40037bb	        0x488b5df8	                mov rbx, qword [rbp - 8]	      2006	ftp.c	FUNCTION_32
0x40037bf	              0xc9	                                   leave	      2006	ftp.c	FUNCTION_32
0x40037c0	              0xc3	                                     ret	      2006	ftp.c	FUNCTION_32
ftp_perform	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,7:IF,3:WHILE,0	52
0x40069d6	              0x55	                                push rbp	      3656	ftp.c	FUNCTION_54
0x40069d7	          0x4889e5	                            mov rbp, rsp	      3656	ftp.c	FUNCTION_54
0x40069da	        0x4883ec30	                           sub rsp, 0x30	      3656	ftp.c	FUNCTION_54
0x40069de	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3656	ftp.c	FUNCTION_54
0x40069e2	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3656	ftp.c	FUNCTION_54
0x40069e6	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3656	ftp.c	FUNCTION_54
0x40069ea	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      3658	ftp.c	FUNCTION_54
0x40069f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3662	ftp.c	FUNCTION_54	IF_1
0x40069f5	          0x488b00	                    mov rax, qword [rax]	      3662	ftp.c	FUNCTION_54	IF_1
0x40069f8	     0xfb680a10700	          movzx eax, byte [rax + 0x7a1] 	      3662	ftp.c	FUNCTION_54	IF_1
0x40069ff	            0x84c0	                             test al, al	      3662	ftp.c	FUNCTION_54	IF_1
0x4006a01	            0x741d	                            je 0x4006a20	      3662	ftp.c	FUNCTION_54	IF_1
0x4006a03	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3664	ftp.c	FUNCTION_54	IF_1
0x4006a07	          0x488b00	                    mov rax, qword [rax]	      3664	ftp.c	FUNCTION_54	IF_1
0x4006a0a	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      3664	ftp.c	FUNCTION_54	IF_1
0x4006a11	        0x488945f8	                mov qword [rbp - 8], rax	      3664	ftp.c	FUNCTION_54	IF_1
0x4006a15	        0x488b45f8	                mov rax, qword [rbp - 8]	      3665	ftp.c	FUNCTION_54	IF_1
0x4006a19	    0xc74018010000	               mov dword [rax + 0x18], 1	      3665	ftp.c	FUNCTION_54	IF_1
0x4006a20	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3668	ftp.c	FUNCTION_54
0x4006a24	          0xc60000	                       mov byte [rax], 0	      3668	ftp.c	FUNCTION_54
0x4006a27	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3671	ftp.c	FUNCTION_54	CALL_3
0x4006a2b	      0xba0c000000	                            mov edx, 0xc	      3671	ftp.c	FUNCTION_54	CALL_3
0x4006a30	      0xbe01000000	                              mov esi, 1	      3671	ftp.c	FUNCTION_54	CALL_3
0x4006a35	          0x4889c7	                            mov rdi, rax	      3671	ftp.c	FUNCTION_54	CALL_3
0x4006a38	      0xe831c2ffff	                call sym.ftp_state_quote	      3671	ftp.c	FUNCTION_54	CALL_3
0x4006a3d	          0x8945f4	              mov dword [rbp - 0xc], eax	      3671	ftp.c	FUNCTION_54	CALL_3
0x4006a40	        0x837df400	                cmp dword [rbp - 0xc], 0	      3672	ftp.c	FUNCTION_54	IF_2
0x4006a44	            0x7405	                            je 0x4006a4b	      3672	ftp.c	FUNCTION_54	IF_2
0x4006a46	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3673	ftp.c	FUNCTION_54	IF_2
0x4006a49	            0xeb4f	                           jmp 0x4006a9a	      3673	ftp.c	FUNCTION_54	IF_2
0x4006a4b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3676	ftp.c	FUNCTION_54	CALL_4
0x4006a4f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3676	ftp.c	FUNCTION_54	CALL_4
0x4006a53	          0x4889d6	                            mov rsi, rdx	      3676	ftp.c	FUNCTION_54	CALL_4
0x4006a56	          0x4889c7	                            mov rdi, rax	      3676	ftp.c	FUNCTION_54	CALL_4
0x4006a59	      0xe827efffff	            call sym.ftp_multi_statemach	      3676	ftp.c	FUNCTION_54	CALL_4
0x4006a5e	          0x8945f4	              mov dword [rbp - 0xc], eax	      3676	ftp.c	FUNCTION_54	CALL_4
0x4006a61	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3678	ftp.c	FUNCTION_54
0x4006a65	     0xfb6905e0300	          movzx edx, byte [rax + 0x35e] 	      3678	ftp.c	FUNCTION_54
0x4006a6c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3678	ftp.c	FUNCTION_54
0x4006a70	            0x8810	                      mov byte [rax], dl	      3678	ftp.c	FUNCTION_54
0x4006a72	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3680	ftp.c	FUNCTION_54	CALL_5
0x4006a76	           0xfb600	                   movzx eax, byte [rax]	      3680	ftp.c	FUNCTION_54	CALL_5
0x4006a79	           0xfb6d0	                           movzx edx, al	      3680	ftp.c	FUNCTION_54	CALL_5
0x4006a7c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3680	ftp.c	FUNCTION_54	CALL_5
0x4006a80	          0x488b00	                    mov rax, qword [rax]	      3680	ftp.c	FUNCTION_54	CALL_5
0x4006a83	    0x488d35000000	                   lea rsi, [0x04006a8a]	      3680	ftp.c	FUNCTION_54	CALL_5
0x4006a8a	          0x4889c7	                            mov rdi, rax	      3680	ftp.c	FUNCTION_54	CALL_5
0x4006a8d	      0xb800000000	                              mov eax, 0	      3680	ftp.c	FUNCTION_54	CALL_5
0x4006a92	      0xe800000000	                          call 0x4006a97	      3680	ftp.c	FUNCTION_54	CALL_5
0x4006a97	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3685	ftp.c	FUNCTION_54
0x4006a9a	              0xc9	                                   leave	      3686	ftp.c	FUNCTION_54
0x4006a9b	              0xc3	                                     ret	      3686	ftp.c	FUNCTION_54
ftp_statemach_act	DO,0:FOR,2:functions,0:ELSE,15:SWITCH,2:CALL,75:IF,42:WHILE,2	865
0x4004bc3	              0x55	                                push rbp	      2604	ftp.c	FUNCTION_44
0x4004bc4	          0x4889e5	                            mov rbp, rsp	      2604	ftp.c	FUNCTION_44
0x4004bc7	        0x4883c480	             add rsp, 0xffffffffffffff80	      2604	ftp.c	FUNCTION_44
0x4004bcb	        0x48897d88	             mov qword [rbp - 0x78], rdi	      2604	ftp.c	FUNCTION_44
0x4004bcf	    0x64488b042528	                mov rax, qword fs:[0x28]	      2604	ftp.c	FUNCTION_44
0x4004bd8	        0x488945f8	                mov qword [rbp - 8], rax	      2604	ftp.c	FUNCTION_44
0x4004bdc	            0x31c0	                            xor eax, eax	      2604	ftp.c	FUNCTION_44
0x4004bde	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2606	ftp.c	FUNCTION_44
0x4004be2	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	      2606	ftp.c	FUNCTION_44
0x4004be8	          0x89459c	             mov dword [rbp - 0x64], eax	      2606	ftp.c	FUNCTION_44
0x4004beb	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2607	ftp.c	FUNCTION_44
0x4004bef	          0x488b00	                    mov rax, qword [rax]	      2607	ftp.c	FUNCTION_44
0x4004bf2	        0x488945c8	             mov qword [rbp - 0x38], rax	      2607	ftp.c	FUNCTION_44
0x4004bf6	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2609	ftp.c	FUNCTION_44
0x4004bfa	    0x4805b0050000	                          add rax, 0x5b0	      2609	ftp.c	FUNCTION_44
0x4004c00	        0x488945d0	             mov qword [rbp - 0x30], rax	      2609	ftp.c	FUNCTION_44
0x4004c04	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2610	ftp.c	FUNCTION_44
0x4004c08	        0x488945d8	             mov qword [rbp - 0x28], rax	      2610	ftp.c	FUNCTION_44
0x4004c0c	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      2612	ftp.c	FUNCTION_44
0x4004c14	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2614	ftp.c	FUNCTION_44	IF_1
0x4004c18	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2614	ftp.c	FUNCTION_44	IF_1
0x4004c1c	          0x4885c0	                           test rax, rax	      2614	ftp.c	FUNCTION_44	IF_1
0x4004c1f	            0x7411	                            je 0x4004c32	      2614	ftp.c	FUNCTION_44	IF_1
0x4004c21	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2615	ftp.c	FUNCTION_44	CALL_1
0x4004c25	          0x4889c7	                            mov rdi, rax	      2615	ftp.c	FUNCTION_44	CALL_1
0x4004c28	      0xe800000000	                          call 0x4004c2d	      2615	ftp.c	FUNCTION_44	CALL_1
0x4004c2d	      0xe93d0d0000	                           jmp 0x400596f	      2615	ftp.c	FUNCTION_44	CALL_1
0x4004c32	        0x488d4da0	                   lea rcx, [rbp - 0x60]	      2617	ftp.c	FUNCTION_44	CALL_2
0x4004c36	        0x488d5594	                   lea rdx, [rbp - 0x6c]	      2617	ftp.c	FUNCTION_44	CALL_2
0x4004c3a	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      2617	ftp.c	FUNCTION_44	CALL_2
0x4004c3e	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2617	ftp.c	FUNCTION_44	CALL_2
0x4004c41	            0x89c7	                            mov edi, eax	      2617	ftp.c	FUNCTION_44	CALL_2
0x4004c43	      0xe85abeffff	                   call sym.ftp_readresp	      2617	ftp.c	FUNCTION_44	CALL_2
0x4004c48	          0x894598	             mov dword [rbp - 0x68], eax	      2617	ftp.c	FUNCTION_44	CALL_2
0x4004c4b	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2618	ftp.c	FUNCTION_44	IF_2
0x4004c4f	            0x7408	                            je 0x4004c59	      2618	ftp.c	FUNCTION_44	IF_2
0x4004c51	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2619	ftp.c	FUNCTION_44	IF_2
0x4004c54	      0xe9160d0000	                           jmp 0x400596f	      2619	ftp.c	FUNCTION_44	IF_2
0x4004c59	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2621	ftp.c	FUNCTION_44	IF_3
0x4004c5c	            0x85c0	                           test eax, eax	      2621	ftp.c	FUNCTION_44	IF_3
0x4004c5e	     0xf84080d0000	                            je 0x400596c	      2621	ftp.c	FUNCTION_44	IF_3
0x4004c64	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004c68	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004c6e	          0x83f821	                           cmp eax, 0x21	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004c71	     0xf87cf0c0000	                            ja 0x4005946	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004c77	            0x89c0	                            mov eax, eax	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004c79	    0x488d14850000	                        lea rdx, [rax*4]	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004c81	    0x488d05000000	                   lea rax, [0x04004c88]	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004c88	          0x8b0402	              mov eax, dword [rdx + rax]	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004c8b	          0x4863d0	                         movsxd rdx, eax	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004c8e	    0x488d05000000	                   lea rax, [0x04004c95]	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004c95	          0x4801d0	                            add rax, rdx	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004c98	            0xffe0	                                 jmp rax	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004c9a	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2625	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_4
0x4004c9d	      0x3de6000000	                           cmp eax, 0xe6	      2625	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_4
0x4004ca2	            0x7520	                           jne 0x4004cc4	      2625	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_4
0x4004ca4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2627	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_3
0x4004ca8	    0x8b90bc000000	            mov edx, dword [rax + 0xbc] 	      2627	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_3
0x4004cae	          0x8b4d94	             mov ecx, dword [rbp - 0x6c]	      2627	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_3
0x4004cb1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2627	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_3
0x4004cb5	            0x89ce	                            mov esi, ecx	      2627	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_3
0x4004cb7	          0x4889c7	                            mov rdi, rax	      2627	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_3
0x4004cba	      0xe88cfcffff	            call sym.ftp_state_user_resp	      2627	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_3
0x4004cbf	      0xe9ab0c0000	                           jmp 0x400596f	      2627	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_3
0x4004cc4	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2628	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5
0x4004cc7	      0x3ddc000000	                           cmp eax, 0xdc	      2628	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5
0x4004ccc	            0x7425	                            je 0x4004cf3	      2628	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5
0x4004cce	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      2629	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5	CALL_4
0x4004cd1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2629	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5	CALL_4
0x4004cd5	    0x488d35000000	                   lea rsi, [0x04004cdc]	      2629	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5	CALL_4
0x4004cdc	          0x4889c7	                            mov rdi, rax	      2629	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5	CALL_4
0x4004cdf	      0xb800000000	                              mov eax, 0	      2629	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5	CALL_4
0x4004ce4	      0xe800000000	                          call 0x4004ce9	      2629	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5	CALL_4
0x4004ce9	      0xb808000000	                              mov eax, 8	      2631	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5
0x4004cee	      0xe97c0c0000	                           jmp 0x400596f	      2631	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5
0x4004cf3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2652	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004cf7	    0x8b80b0070000	           mov eax, dword [rax + 0x7b0] 	      2652	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004cfd	            0x85c0	                           test eax, eax	      2652	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004cff	     0xf8426010000	                            je 0x4004e2b	      2652	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d05	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2653	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d09	     0xfb680900200	          movzx eax, byte [rax + 0x290] 	      2653	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d10	          0x83f001	                              xor eax, 1	      2653	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d13	            0x84c0	                             test al, al	      2652	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d15	            0x7529	                           jne 0x4004d40	      2652	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d17	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2654	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d1b	     0xfb680710300	          movzx eax, byte [rax + 0x371] 	      2654	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d22	            0x84c0	                             test al, al	      2653	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d24	     0xf8401010000	                            je 0x4004e2b	      2653	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d2a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2655	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d2e	     0xfb680a80200	          movzx eax, byte [rax + 0x2a8] 	      2655	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d35	          0x83f001	                              xor eax, 1	      2655	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d38	            0x84c0	                             test al, al	      2654	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d3a	     0xf84eb000000	                            je 0x4004e2b	      2654	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d40	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2659	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d44	    0xc780b8000000	               mov dword [rax + 0xb8], 0	      2659	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d4e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2660	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d52	    0x8b80b4070000	           mov eax, dword [rax + 0x7b4] 	      2660	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d58	          0x83f801	                              cmp eax, 1	      2660	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d5b	            0x7607	                           jbe 0x4004d64	      2660	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d5d	          0x83f802	                              cmp eax, 2	      2660	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d60	            0x7420	                            je 0x4004d82	      2660	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d62	            0xeb3c	                           jmp 0x4004da0	      2660	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d64	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2663	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d68	    0xc780b4000000	               mov dword [rax + 0xb4], 1	      2663	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d72	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2664	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d76	    0xc780b0000000	               mov dword [rax + 0xb0], 0	      2664	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d80	            0xeb4c	                           jmp 0x4004dce	      2665	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d82	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2667	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d86	    0xc780b4000000	     mov dword [rax + 0xb4], 0xffffffff 	      2667	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d90	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2668	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d94	    0xc780b0000000	               mov dword [rax + 0xb0], 1	      2668	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d9e	            0xeb2e	                           jmp 0x4004dce	      2669	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004da0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2672	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004da4	    0x8b80b4070000	           mov eax, dword [rax + 0x7b4] 	      2672	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004daa	            0x89c2	                            mov edx, eax	      2671	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2	CALL_10
0x4004dac	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2671	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2	CALL_10
0x4004db0	    0x488d35000000	                   lea rsi, [0x04004db7]	      2671	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2	CALL_10
0x4004db7	          0x4889c7	                            mov rdi, rax	      2671	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2	CALL_10
0x4004dba	      0xb800000000	                              mov eax, 0	      2671	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2	CALL_10
0x4004dbf	      0xe800000000	                          call 0x4004dc4	      2671	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2	CALL_10
0x4004dc4	      0xb830000000	                           mov eax, 0x30	      2673	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004dc9	      0xe9a10b0000	                           jmp 0x400596f	      2673	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004dce	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	CALL_11
0x4004dd2	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	CALL_11
0x4004dd8	            0x4898	                                    cdqe	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	CALL_11
0x4004dda	    0x488d14850000	                        lea rdx, [rax*4]	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	CALL_11
0x4004de2	    0x488d05000000	                   lea rax, [0x04004de9]	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	CALL_11
0x4004de9	          0x4801c2	                            add rdx, rax	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	CALL_11
0x4004dec	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	CALL_11
0x4004df0	    0x488d35000000	                   lea rsi, [0x04004df7]	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	CALL_11
0x4004df7	          0x4889c7	                            mov rdi, rax	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	CALL_11
0x4004dfa	      0xb800000000	                              mov eax, 0	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	CALL_11
0x4004dff	      0xe800000000	                          call 0x4004e04	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	CALL_11
0x4004e04	          0x894598	             mov dword [rbp - 0x68], eax	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	CALL_11
0x4004e07	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	CALL_11
0x4004e0b	            0x7408	                            je 0x4004e15	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	CALL_11
0x4004e0d	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	CALL_11
0x4004e10	      0xe95a0b0000	                           jmp 0x400596f	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	CALL_11
0x4004e15	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2676	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	CALL_12
0x4004e19	      0xbe02000000	                              mov esi, 2	      2676	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	CALL_12
0x4004e1e	          0x4889c7	                            mov rdi, rax	      2676	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	CALL_12
0x4004e21	      0xe851bfffff	                         call sym._state	      2676	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	CALL_12
0x4004e26	      0xe92e0b0000	                           jmp 0x4005959	      2684	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004e2b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2679	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_3	CALL_13
0x4004e2f	          0x4889c7	                            mov rdi, rax	      2679	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_3	CALL_13
0x4004e32	      0xe869bfffff	                 call sym.ftp_state_user	      2679	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_3	CALL_13
0x4004e37	          0x894598	             mov dword [rbp - 0x68], eax	      2679	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_3	CALL_13
0x4004e3a	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2680	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_3	IF_9
0x4004e3e	     0xf84150b0000	                            je 0x4005959	      2680	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_3	IF_9
0x4004e44	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2681	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_3	IF_9
0x4004e47	      0xe9230b0000	                           jmp 0x400596f	      2681	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_3	IF_9
0x4004e4c	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2696	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10
0x4004e4f	      0x3dea000000	                           cmp eax, 0xea	      2696	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10
0x4004e54	            0x740a	                            je 0x4004e60	      2696	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10
0x4004e56	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2696	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10
0x4004e59	      0x3d4e010000	                          cmp eax, 0x14e	      2696	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10
0x4004e5e	            0x7530	                           jne 0x4004e90	      2696	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10
0x4004e60	    0xc74598040000	               mov dword [rbp - 0x68], 4	      2698	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	CALL_14
0x4004e67	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2699	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11
0x4004e6b	     0xf85c6000000	                           jne 0x4004f37	      2699	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11
0x4004e71	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2700	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11
0x4004e75	    0xc68066030000	               mov byte [rax + 0x366], 0	      2700	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11
0x4004e7c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2701	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11	CALL_15
0x4004e80	          0x4889c7	                            mov rdi, rax	      2701	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11	CALL_15
0x4004e83	      0xe818bfffff	                 call sym.ftp_state_user	      2701	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11	CALL_15
0x4004e88	          0x894598	             mov dword [rbp - 0x68], eax	      2701	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11	CALL_15
0x4004e8b	      0xe9a7000000	                           jmp 0x4004f37	      2699	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11
0x4004e90	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2704	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004e94	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      2704	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004e9a	            0x85c0	                           test eax, eax	      2704	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004e9c	            0x7f72	                            jg 0x4004f10	      2704	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004e9e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2705	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004ea2	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      2705	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004ea8	          0x8d5001	                      lea edx, [rax + 1]	      2705	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004eab	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2705	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004eaf	    0x8990b8000000	             mov dword [rax + 0xb8], edx	      2705	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004eb5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2706	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004eb9	    0x8b90b0000000	            mov edx, dword [rax + 0xb0] 	      2706	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004ebf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2706	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004ec3	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      2706	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004ec9	             0x1c2	                            add edx, eax	      2706	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004ecb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2706	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004ecf	    0x8990b0000000	             mov dword [rax + 0xb0], edx	      2706	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004ed5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_16
0x4004ed9	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_16
0x4004edf	            0x4898	                                    cdqe	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_16
0x4004ee1	    0x488d14850000	                        lea rdx, [rax*4]	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_16
0x4004ee9	    0x488d05000000	                   lea rax, [0x04004ef0]	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_16
0x4004ef0	          0x4801c2	                            add rdx, rax	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_16
0x4004ef3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_16
0x4004ef7	    0x488d35000000	                   lea rsi, [0x04004efe]	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_16
0x4004efe	          0x4889c7	                            mov rdi, rax	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_16
0x4004f01	      0xb800000000	                              mov eax, 0	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_16
0x4004f06	      0xe800000000	                          call 0x4004f0b	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_16
0x4004f0b	          0x894598	             mov dword [rbp - 0x68], eax	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_16
0x4004f0e	            0xeb27	                           jmp 0x4004f37	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_16
0x4004f10	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2711	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	IF_13
0x4004f14	    0x8b80b0070000	           mov eax, dword [rax + 0x7b0] 	      2711	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	IF_13
0x4004f1a	          0x83f801	                              cmp eax, 1	      2711	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	IF_13
0x4004f1d	            0x7609	                           jbe 0x4004f28	      2711	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	IF_13
0x4004f1f	    0xc74598400000	           mov dword [rbp - 0x68], 0x40 	      2713	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	IF_13
0x4004f26	            0xeb0f	                           jmp 0x4004f37	      2713	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	IF_13
0x4004f28	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2716	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	CALL_17
0x4004f2c	          0x4889c7	                            mov rdi, rax	      2716	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	CALL_17
0x4004f2f	      0xe86cbeffff	                 call sym.ftp_state_user	      2716	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	CALL_17
0x4004f34	          0x894598	             mov dword [rbp - 0x68], eax	      2716	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	CALL_17
0x4004f37	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2719	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_14
0x4004f3b	     0xf841b0a0000	                            je 0x400595c	      2719	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_14
0x4004f41	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2720	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_14
0x4004f44	      0xe9260a0000	                           jmp 0x400596f	      2720	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_14
0x4004f49	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2725	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_18
0x4004f4d	    0x8b90bc000000	            mov edx, dword [rax + 0xbc] 	      2725	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_18
0x4004f53	          0x8b4d94	             mov ecx, dword [rbp - 0x6c]	      2725	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_18
0x4004f56	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2725	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_18
0x4004f5a	            0x89ce	                            mov esi, ecx	      2725	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_18
0x4004f5c	          0x4889c7	                            mov rdi, rax	      2725	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_18
0x4004f5f	      0xe8e7f9ffff	            call sym.ftp_state_user_resp	      2725	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_18
0x4004f64	          0x894598	             mov dword [rbp - 0x68], eax	      2725	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_18
0x4004f67	      0xe9000a0000	                           jmp 0x400596c	      2726	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004f6c	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      2729	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_19
0x4004f6f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2729	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_19
0x4004f73	            0x89d6	                            mov esi, edx	      2729	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_19
0x4004f75	          0x4889c7	                            mov rdi, rax	      2729	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_19
0x4004f78	      0xe8e4fbffff	            call sym.ftp_state_acct_resp	      2729	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_19
0x4004f7d	          0x894598	             mov dword [rbp - 0x68], eax	      2729	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_19
0x4004f80	      0xe9e7090000	                           jmp 0x400596c	      2730	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004f85	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_20
0x4004f89	    0x8b80b0070000	           mov eax, dword [rax + 0x7b0] 	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_20
0x4004f8f	          0x83f802	                              cmp eax, 2	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_20
0x4004f92	            0x7507	                           jne 0x4004f9b	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_20
0x4004f94	      0xba43000000	                           mov edx, 0x43	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_20
0x4004f99	            0xeb05	                           jmp 0x4004fa0	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_20
0x4004f9b	      0xba50000000	                           mov edx, 0x50	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_20
0x4004fa0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_20
0x4004fa4	    0x488d35000000	                   lea rsi, [0x04004fab]	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_20
0x4004fab	          0x4889c7	                            mov rdi, rax	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_20
0x4004fae	      0xb800000000	                              mov eax, 0	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_20
0x4004fb3	      0xe800000000	                          call 0x4004fb8	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_20
0x4004fb8	          0x894598	             mov dword [rbp - 0x68], eax	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_20
0x4004fbb	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_20
0x4004fbf	            0x7408	                            je 0x4004fc9	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_20
0x4004fc1	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_20
0x4004fc4	      0xe9a6090000	                           jmp 0x400596f	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_20
0x4004fc9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2735	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_21
0x4004fcd	      0xbe07000000	                              mov esi, 7	      2735	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_21
0x4004fd2	          0x4889c7	                            mov rdi, rax	      2735	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_21
0x4004fd5	      0xe89dbdffff	                         call sym._state	      2735	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_21
0x4004fda	      0xe98d090000	                           jmp 0x400596c	      2737	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004fdf	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2740	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4004fe2	      0x2dc8000000	                           sub eax, 0xc8	      2740	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4004fe7	          0x83f863	                           cmp eax, 0x63	      2740	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4004fea	            0x771c	                            ja 0x4005008	      2740	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4004fec	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2743	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4004ff0	    0x8b80b0070000	           mov eax, dword [rax + 0x7b0] 	      2743	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4004ff6	          0x83f802	                              cmp eax, 2	      2743	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4004ff9	           0xf95c2	                                setne dl	      2743	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4004ffc	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2742	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4005000	    0x889066030000	              mov byte [rax + 0x366], dl	      2742	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4005006	            0xeb19	                           jmp 0x4005021	      2742	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4005008	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2746	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_7	IF_16
0x400500c	    0x8b80b0070000	           mov eax, dword [rax + 0x7b0] 	      2746	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_7	IF_16
0x4005012	          0x83f802	                              cmp eax, 2	      2746	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_7	IF_16
0x4005015	            0x760a	                           jbe 0x4005021	      2746	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_7	IF_16
0x4005017	      0xb840000000	                           mov eax, 0x40	      2748	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_7	IF_16
0x400501c	      0xe94e090000	                           jmp 0x400596f	      2748	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_7	IF_16
0x4005021	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2750	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x4005025	    0x8b80b8070000	           mov eax, dword [rax + 0x7b8] 	      2750	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x400502b	            0x85c0	                           test eax, eax	      2750	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x400502d	            0x7446	                            je 0x4005075	      2750	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x400502f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17	CALL_22
0x4005033	    0x488d15000000	                   lea rdx, [0x0400503a]	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17	CALL_22
0x400503a	    0x488d35000000	                   lea rsi, [0x04005041]	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17	CALL_22
0x4005041	          0x4889c7	                            mov rdi, rax	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17	CALL_22
0x4005044	      0xb800000000	                              mov eax, 0	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17	CALL_22
0x4005049	      0xe800000000	                          call 0x400504e	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17	CALL_22
0x400504e	          0x894598	             mov dword [rbp - 0x68], eax	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17	CALL_22
0x4005051	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17	CALL_22
0x4005055	            0x7408	                            je 0x400505f	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17	CALL_22
0x4005057	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17	CALL_22
0x400505a	      0xe910090000	                           jmp 0x400596f	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17	CALL_22
0x400505f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2754	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17	CALL_23
0x4005063	      0xbe08000000	                              mov esi, 8	      2754	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17	CALL_23
0x4005068	          0x4889c7	                            mov rdi, rax	      2754	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17	CALL_23
0x400506b	      0xe807bdffff	                         call sym._state	      2754	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17	CALL_23
0x4005070	      0xe9ea080000	                           jmp 0x400595f	      2761	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005075	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2757	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_8	CALL_24
0x4005079	          0x4889c7	                            mov rdi, rax	      2757	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_8	CALL_24
0x400507c	      0xe8b1bdffff	                  call sym.ftp_state_pwd	      2757	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_8	CALL_24
0x4005081	          0x894598	             mov dword [rbp - 0x68], eax	      2757	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_8	CALL_24
0x4005084	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2758	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_8	IF_18
0x4005088	     0xf84d1080000	                            je 0x400595f	      2758	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_8	IF_18
0x400508e	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2759	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_8	IF_18
0x4005091	      0xe9d9080000	                           jmp 0x400596f	      2759	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_8	IF_18
0x4005096	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2764	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19
0x4005099	      0x3df3010000	                          cmp eax, 0x1f3	      2764	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19
0x400509e	            0x7f30	                            jg 0x40050d0	      2764	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19
0x40050a0	    0xc74598040000	               mov dword [rbp - 0x68], 4	      2766	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	CALL_25
0x40050a7	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2768	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20
0x40050ab	            0x7423	                            je 0x40050d0	      2768	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20
0x40050ad	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2769	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20	CALL_26
0x40050b1	          0x488b00	                    mov rax, qword [rax]	      2769	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20	CALL_26
0x40050b4	    0x488d35000000	                   lea rsi, [0x040050bb]	      2769	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20	CALL_26
0x40050bb	          0x4889c7	                            mov rdi, rax	      2769	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20	CALL_26
0x40050be	      0xb800000000	                              mov eax, 0	      2769	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20	CALL_26
0x40050c3	      0xe800000000	                          call 0x40050c8	      2769	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20	CALL_26
0x40050c8	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2770	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20
0x40050cb	      0xe99f080000	                           jmp 0x400596f	      2770	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20
0x40050d0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2775	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_27
0x40050d4	          0x4889c7	                            mov rdi, rax	      2775	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_27
0x40050d7	      0xe856bdffff	                  call sym.ftp_state_pwd	      2775	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_27
0x40050dc	          0x894598	             mov dword [rbp - 0x68], eax	      2775	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_27
0x40050df	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2776	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_21
0x40050e3	     0xf8479080000	                            je 0x4005962	      2776	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_21
0x40050e9	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2777	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_21
0x40050ec	      0xe97e080000	                           jmp 0x400596f	      2777	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_21
0x40050f1	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2781	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x40050f4	      0x3d01010000	                          cmp eax, 0x101	      2781	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x40050f9	     0xf857f020000	                           jne 0x400537e	      2781	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x40050ff	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2782	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x4005103	    0x488b80a80c00	           mov rax, qword [rax + 0xca8] 	      2782	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x400510a	        0x4883c004	                              add rax, 4	      2782	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x400510e	        0x488945a8	             mov qword [rbp - 0x58], rax	      2782	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x4005112	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2783	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x4005116	    0x488b80500700	           mov rax, qword [rax + 0x750] 	      2783	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x400511d	        0x488945e0	             mov qword [rbp - 0x20], rax	      2783	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x4005121	        0xc6459300	                mov byte [rbp - 0x6d], 0	      2786	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x4005125	    0x488b05000000	            mov rax, qword [0x0400512c] 	      2788	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	CALL_28
0x400512c	          0x488b00	                    mov rax, qword [rax]	      2788	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	CALL_28
0x400512f	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      2788	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	CALL_28
0x4005133	        0x4883c201	                              add rdx, 1	      2788	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	CALL_28
0x4005137	          0x4889d7	                            mov rdi, rdx	      2788	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	CALL_28
0x400513a	            0xffd0	                                call rax	      2788	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	CALL_28
0x400513c	        0x488945e8	             mov qword [rbp - 0x18], rax	      2788	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	CALL_28
0x4005140	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2789	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_23
0x4005145	            0x750f	                           jne 0x4005156	      2789	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_23
0x4005147	      0xb81b000000	                           mov eax, 0x1b	      2790	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_23
0x400514c	      0xe91e080000	                           jmp 0x400596f	      2790	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_23
0x4005151	      0x488345a801	               add qword [rbp - 0x58], 1	      2804	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4005156	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2802	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x400515a	    0x488b90a80c00	           mov rdx, qword [rax + 0xca8] 	      2802	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4005161	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2802	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4005165	          0x4801d0	                            add rax, rdx	      2802	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4005168	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      2802	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x400516c	            0x7621	                           jbe 0x400518f	      2802	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x400516e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4005172	           0xfb600	                   movzx eax, byte [rax]	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4005175	            0x3c0a	                             cmp al, 0xa	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4005177	            0x7416	                            je 0x400518f	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4005179	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x400517d	           0xfb600	                   movzx eax, byte [rax]	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4005180	            0x84c0	                             test al, al	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4005182	            0x740b	                            je 0x400518f	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4005184	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4005188	           0xfb600	                   movzx eax, byte [rax]	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x400518b	            0x3c22	                            cmp al, 0x22	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x400518d	            0x75c2	                           jne 0x4005151	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x400518f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2806	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24
0x4005193	           0xfb600	                   movzx eax, byte [rax]	      2806	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24
0x4005196	            0x3c22	                            cmp al, 0x22	      2806	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24
0x4005198	            0x756d	                           jne 0x4005207	      2806	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24
0x400519a	      0x488345a801	               add qword [rbp - 0x58], 1	      2808	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24
0x400519f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2809	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1
0x40051a3	        0x488945b0	             mov qword [rbp - 0x50], rax	      2809	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1
0x40051a7	            0xeb4c	                           jmp 0x40051f5	      2809	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1
0x40051a9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2810	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25
0x40051ad	           0xfb600	                   movzx eax, byte [rax]	      2810	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25
0x40051b0	            0x3c22	                            cmp al, 0x22	      2810	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25
0x40051b2	            0x752a	                           jne 0x40051de	      2810	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25
0x40051b4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2811	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40051b8	        0x4883c001	                              add rax, 1	      2811	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40051bc	           0xfb600	                   movzx eax, byte [rax]	      2811	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40051bf	            0x3c22	                            cmp al, 0x22	      2811	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40051c1	            0x7515	                           jne 0x40051d8	      2811	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40051c3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2813	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40051c7	         0xfb65001	               movzx edx, byte [rax + 1]	      2813	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40051cb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2813	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40051cf	            0x8810	                      mov byte [rax], dl	      2813	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40051d1	      0x488345a801	               add qword [rbp - 0x58], 1	      2814	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40051d6	            0xeb13	                           jmp 0x40051eb	      2814	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40051d8	        0xc6459301	                mov byte [rbp - 0x6d], 1	      2818	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	ELSE_9
0x40051dc	            0xeb22	                           jmp 0x4005200	      2819	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	ELSE_9
0x40051de	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2823	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	ELSE_10
0x40051e2	           0xfb610	                   movzx edx, byte [rax]	      2823	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	ELSE_10
0x40051e5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2823	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	ELSE_10
0x40051e9	            0x8810	                      mov byte [rax], dl	      2823	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	ELSE_10
0x40051eb	      0x488345b001	               add qword [rbp - 0x50], 1	      2824	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	ELSE_10
0x40051f0	      0x488345a801	               add qword [rbp - 0x58], 1	      2825	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	ELSE_10
0x40051f5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2809	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1
0x40051f9	           0xfb600	                   movzx eax, byte [rax]	      2809	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1
0x40051fc	            0x84c0	                             test al, al	      2809	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1
0x40051fe	            0x75a9	                           jne 0x40051a9	      2809	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1
0x4005200	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2827	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	ELSE_10
0x4005204	          0xc60000	                       mov byte [rax], 0	      2827	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	ELSE_10
0x4005207	        0x807d9300	                cmp byte [rbp - 0x6d], 0	      2829	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x400520b	     0xf8442010000	                            je 0x4005353	      2829	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x4005211	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2842	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x4005215	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      2842	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x400521c	          0x4885c0	                           test rax, rax	      2842	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x400521f	     0xf85ca000000	                           jne 0x40052ef	      2842	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x4005225	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2842	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x4005229	           0xfb600	                   movzx eax, byte [rax]	      2842	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x400522c	            0x3c2f	                            cmp al, 0x2f	      2842	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x400522e	     0xf84bb000000	                            je 0x40052ef	      2842	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x4005234	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2844	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_29
0x4005238	    0x488d15000000	                   lea rdx, [0x0400523f]	      2844	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_29
0x400523f	    0x488d35000000	                   lea rsi, [0x04005246]	      2844	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_29
0x4005246	          0x4889c7	                            mov rdi, rax	      2844	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_29
0x4005249	      0xb800000000	                              mov eax, 0	      2844	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_29
0x400524e	      0xe800000000	                          call 0x4005253	      2844	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_29
0x4005253	          0x894598	             mov dword [rbp - 0x68], eax	      2844	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_29
0x4005256	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2845	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29
0x400525a	            0x741b	                            je 0x4005277	      2845	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29
0x400525c	    0x488b05000000	            mov rax, qword [0x04005263] 	      2846	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29	CALL_30
0x4005263	          0x488b00	                    mov rax, qword [rax]	      2846	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29	CALL_30
0x4005266	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2846	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29	CALL_30
0x400526a	          0x4889d7	                            mov rdi, rdx	      2846	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29	CALL_30
0x400526d	            0xffd0	                                call rax	      2846	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29	CALL_30
0x400526f	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2847	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29
0x4005272	      0xe9f8060000	                           jmp 0x400596f	      2847	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29
0x4005277	    0x488b05000000	            mov rax, qword [0x0400527e] 	      2849	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_31
0x400527e	          0x488b00	                    mov rax, qword [rax]	      2849	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_31
0x4005281	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2849	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_31
0x4005285	        0x488b5270	            mov rdx, qword [rdx + 0x70] 	      2849	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_31
0x4005289	          0x4889d7	                            mov rdi, rdx	      2849	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_31
0x400528c	            0xffd0	                                call rax	      2849	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_31
0x400528e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2849	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_31
0x4005292	    0x48c740700000	               mov qword [rax + 0x70], 0	      2849	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_31
0x400529a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2850	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x400529e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2850	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x40052a2	        0x48895070	             mov qword [rax + 0x70], rdx	      2850	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x40052a6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2851	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_32
0x40052aa	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      2851	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_32
0x40052ae	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2851	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_32
0x40052b2	    0x488d35000000	                   lea rsi, [0x040052b9]	      2851	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_32
0x40052b9	          0x4889c7	                            mov rdi, rax	      2851	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_32
0x40052bc	      0xb800000000	                              mov eax, 0	      2851	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_32
0x40052c1	      0xe800000000	                          call 0x40052c6	      2851	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_32
0x40052c6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2853	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x40052ca	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      2853	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x40052ce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2853	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x40052d2	    0x488990705000	          mov qword [rax + 0x5070], rdx 	      2853	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x40052d9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2854	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_33
0x40052dd	      0xbe0a000000	                            mov esi, 0xa	      2854	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_33
0x40052e2	          0x4889c7	                            mov rdi, rax	      2854	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_33
0x40052e5	      0xe88dbaffff	                         call sym._state	      2854	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_33
0x40052ea	      0xe97d060000	                           jmp 0x400596c	      2855	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x40052ef	    0x488b05000000	            mov rax, qword [0x040052f6] 	      2858	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_34
0x40052f6	          0x488b00	                    mov rax, qword [rax]	      2858	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_34
0x40052f9	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2858	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_34
0x40052fd	        0x488b5270	            mov rdx, qword [rdx + 0x70] 	      2858	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_34
0x4005301	          0x4889d7	                            mov rdi, rdx	      2858	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_34
0x4005304	            0xffd0	                                call rax	      2858	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_34
0x4005306	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2858	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_34
0x400530a	    0x48c740700000	               mov qword [rax + 0x70], 0	      2858	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_34
0x4005312	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2859	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x4005316	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2859	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x400531a	        0x48895070	             mov qword [rax + 0x70], rdx	      2859	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x400531e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2860	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_35
0x4005322	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      2860	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_35
0x4005326	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2860	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_35
0x400532a	    0x488d35000000	                   lea rsi, [0x04005331]	      2860	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_35
0x4005331	          0x4889c7	                            mov rdi, rax	      2860	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_35
0x4005334	      0xb800000000	                              mov eax, 0	      2860	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_35
0x4005339	      0xe800000000	                          call 0x400533e	      2860	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_35
0x400533e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2862	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x4005342	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      2862	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x4005346	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2862	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x400534a	    0x488990705000	          mov qword [rax + 0x5070], rdx 	      2862	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x4005351	            0xeb2b	                           jmp 0x400537e	      2862	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x4005353	    0x488b05000000	            mov rax, qword [0x0400535a] 	      2866	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_36
0x400535a	          0x488b00	                    mov rax, qword [rax]	      2866	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_36
0x400535d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2866	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_36
0x4005361	          0x4889d7	                            mov rdi, rdx	      2866	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_36
0x4005364	            0xffd0	                                call rax	      2866	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_36
0x4005366	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2867	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_37
0x400536a	    0x488d35000000	                   lea rsi, [0x04005371]	      2867	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_37
0x4005371	          0x4889c7	                            mov rdi, rax	      2867	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_37
0x4005374	      0xb800000000	                              mov eax, 0	      2867	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_37
0x4005379	      0xe800000000	                          call 0x400537e	      2867	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_37
0x400537e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2870	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_38
0x4005382	      0xbe00000000	                              mov esi, 0	      2870	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_38
0x4005387	          0x4889c7	                            mov rdi, rax	      2870	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_38
0x400538a	      0xe8e8b9ffff	                         call sym._state	      2870	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_38
0x400538f	      0xe9d8050000	                           jmp 0x400596c	      2872	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005394	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2875	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x4005397	      0x3dd7000000	                           cmp eax, 0xd7	      2875	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x400539c	     0xf8577010000	                           jne 0x4005519	      2875	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x40053a2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2876	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x40053a6	    0x488b80a80c00	           mov rax, qword [rax + 0xca8] 	      2876	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x40053ad	        0x4883c004	                              add rax, 4	      2876	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x40053b1	        0x488945b8	             mov qword [rbp - 0x48], rax	      2876	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x40053b5	    0x488b05000000	            mov rax, qword [0x040053bc] 	      2880	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_41
0x40053bc	          0x488b00	                    mov rax, qword [rax]	      2880	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_41
0x40053bf	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      2880	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_41
0x40053c3	        0x4883c201	                              add rdx, 1	      2880	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_41
0x40053c7	          0x4889d7	                            mov rdi, rdx	      2880	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_41
0x40053ca	            0xffd0	                                call rax	      2880	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_41
0x40053cc	        0x488945f0	             mov qword [rbp - 0x10], rax	      2880	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_41
0x40053d0	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2881	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_31
0x40053d5	            0x750f	                           jne 0x40053e6	      2881	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_31
0x40053d7	      0xb81b000000	                           mov eax, 0x1b	      2882	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_31
0x40053dc	      0xe98e050000	                           jmp 0x400596f	      2882	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_31
0x40053e1	      0x488345b801	               add qword [rbp - 0x48], 1	      2888	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	WHILE_2
0x40053e6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2887	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	WHILE_2
0x40053ea	           0xfb600	                   movzx eax, byte [rax]	      2887	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	WHILE_2
0x40053ed	            0x3c20	                            cmp al, 0x20	      2887	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	WHILE_2
0x40053ef	            0x74f0	                            je 0x40053e1	      2887	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	WHILE_2
0x40053f1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x40053f5	        0x488945c0	             mov qword [rbp - 0x40], rax	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x40053f9	            0xeb1d	                           jmp 0x4005418	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x40053fb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2890	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x40053ff	        0x488d5001	                      lea rdx, [rax + 1]	      2890	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4005403	        0x488955c0	             mov qword [rbp - 0x40], rdx	      2890	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4005407	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2890	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x400540b	        0x488d4a01	                      lea rcx, [rdx + 1]	      2890	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x400540f	        0x48894db8	             mov qword [rbp - 0x48], rcx	      2890	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4005413	           0xfb612	                   movzx edx, byte [rdx]	      2890	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4005416	            0x8810	                      mov byte [rax], dl	      2890	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4005418	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x400541c	           0xfb600	                   movzx eax, byte [rax]	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x400541f	            0x84c0	                             test al, al	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4005421	            0x740b	                            je 0x400542e	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4005423	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4005427	           0xfb600	                   movzx eax, byte [rax]	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x400542a	            0x3c20	                            cmp al, 0x20	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x400542c	            0x75cd	                           jne 0x40053fb	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x400542e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2891	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x4005432	          0xc60000	                       mov byte [rax], 0	      2891	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x4005435	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2895	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_42
0x4005439	    0x488d35000000	                   lea rsi, [0x04005440]	      2895	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_42
0x4005440	          0x4889c7	                            mov rdi, rax	      2895	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_42
0x4005443	      0xe800000000	                          call 0x4005448	      2895	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_42
0x4005448	            0x85c0	                           test eax, eax	      2895	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_42
0x400544a	     0xf8491000000	                            je 0x40054e1	      2895	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_42
0x4005450	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2897	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_43
0x4005454	    0x488d15000000	                   lea rdx, [0x0400545b]	      2897	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_43
0x400545b	    0x488d35000000	                   lea rsi, [0x04005462]	      2897	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_43
0x4005462	          0x4889c7	                            mov rdi, rax	      2897	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_43
0x4005465	      0xb800000000	                              mov eax, 0	      2897	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_43
0x400546a	      0xe800000000	                          call 0x400546f	      2897	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_43
0x400546f	          0x894598	             mov dword [rbp - 0x68], eax	      2897	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_43
0x4005472	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2898	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33
0x4005476	            0x741b	                            je 0x4005493	      2898	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33
0x4005478	    0x488b05000000	            mov rax, qword [0x0400547f] 	      2899	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33	CALL_44
0x400547f	          0x488b00	                    mov rax, qword [rax]	      2899	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33	CALL_44
0x4005482	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2899	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33	CALL_44
0x4005486	          0x4889d7	                            mov rdi, rdx	      2899	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33	CALL_44
0x4005489	            0xffd0	                                call rax	      2899	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33	CALL_44
0x400548b	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2900	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33
0x400548e	      0xe9dc040000	                           jmp 0x400596f	      2900	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33
0x4005493	    0x488b05000000	            mov rax, qword [0x0400549a] 	      2903	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_45
0x400549a	          0x488b00	                    mov rax, qword [rax]	      2903	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_45
0x400549d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2903	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_45
0x40054a1	    0x488b92d00000	            mov rdx, qword [rdx + 0xd0] 	      2903	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_45
0x40054a8	          0x4889d7	                            mov rdi, rdx	      2903	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_45
0x40054ab	            0xffd0	                                call rax	      2903	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_45
0x40054ad	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2903	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_45
0x40054b1	    0x48c780d00000	               mov qword [rax + 0xd0], 0	      2903	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_45
0x40054bc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2904	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32
0x40054c0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2904	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32
0x40054c4	    0x488990d00000	             mov qword [rax + 0xd0], rdx	      2904	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32
0x40054cb	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2905	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_46
0x40054cf	      0xbe0b000000	                            mov esi, 0xb	      2905	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_46
0x40054d4	          0x4889c7	                            mov rdi, rax	      2905	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_46
0x40054d7	      0xe89bb8ffff	                         call sym._state	      2905	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_46
0x40054dc	      0xe98b040000	                           jmp 0x400596c	      2906	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32
0x40054e1	    0x488b05000000	            mov rax, qword [0x040054e8] 	      2910	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_47
0x40054e8	          0x488b00	                    mov rax, qword [rax]	      2910	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_47
0x40054eb	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2910	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_47
0x40054ef	    0x488b92d00000	            mov rdx, qword [rdx + 0xd0] 	      2910	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_47
0x40054f6	          0x4889d7	                            mov rdi, rdx	      2910	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_47
0x40054f9	            0xffd0	                                call rax	      2910	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_47
0x40054fb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2910	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_47
0x40054ff	    0x48c780d00000	               mov qword [rax + 0xd0], 0	      2910	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_47
0x400550a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2911	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x400550e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2911	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x4005512	    0x488990d00000	             mov qword [rax + 0xd0], rdx	      2911	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x4005519	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2917	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_48
0x400551d	      0xbe00000000	                              mov esi, 0	      2917	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_48
0x4005522	          0x4889c7	                            mov rdi, rax	      2917	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_48
0x4005525	      0xe84db8ffff	                         call sym._state	      2917	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_48
0x400552a	      0xe93d040000	                           jmp 0x400596c	      2919	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400552f	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2922	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_34
0x4005532	      0x3dfa000000	                           cmp eax, 0xfa	      2922	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_34
0x4005537	            0x7511	                           jne 0x400554a	      2922	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_34
0x4005539	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2924	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_34	CALL_51
0x400553d	          0x4889c7	                            mov rdi, rax	      2924	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_34	CALL_51
0x4005540	      0xe8edb8ffff	                  call sym.ftp_state_pwd	      2924	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_34	CALL_51
0x4005545	      0xe922040000	                           jmp 0x400596c	      2925	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_34
0x400554a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2928	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_52
0x400554e	      0xbe00000000	                              mov esi, 0	      2928	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_52
0x4005553	          0x4889c7	                            mov rdi, rax	      2928	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_52
0x4005556	      0xe81cb8ffff	                         call sym._state	      2928	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_52
0x400555b	      0xe90c040000	                           jmp 0x400596c	      2930	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005560	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2936	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x4005563	      0x3d8f010000	                          cmp eax, 0x18f	      2936	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x4005568	            0x7e36	                           jle 0x40055a0	      2936	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x400556a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2936	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x400556e	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      2936	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x4005574	            0x85c0	                           test eax, eax	      2936	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x4005576	            0x7528	                           jne 0x40055a0	      2936	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x4005578	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      2938	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35	CALL_55
0x400557b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2938	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35	CALL_55
0x400557f	          0x488b00	                    mov rax, qword [rax]	      2938	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35	CALL_55
0x4005582	    0x488d35000000	                   lea rsi, [0x04005589]	      2938	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35	CALL_55
0x4005589	          0x4889c7	                            mov rdi, rax	      2938	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35	CALL_55
0x400558c	      0xb800000000	                              mov eax, 0	      2938	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35	CALL_55
0x4005591	      0xe800000000	                          call 0x4005596	      2938	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35	CALL_55
0x4005596	      0xb815000000	                           mov eax, 0x15	      2939	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x400559b	      0xe9cf030000	                           jmp 0x400596f	      2939	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x40055a0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2941	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_56
0x40055a4	    0x8b90bc000000	            mov edx, dword [rax + 0xbc] 	      2941	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_56
0x40055aa	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2941	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_56
0x40055ae	      0xbe00000000	                              mov esi, 0	      2941	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_56
0x40055b3	          0x4889c7	                            mov rdi, rax	      2941	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_56
0x40055b6	      0xe8b3d6ffff	                call sym.ftp_state_quote	      2941	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_56
0x40055bb	          0x894598	             mov dword [rbp - 0x68], eax	      2941	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_56
0x40055be	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2942	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_36
0x40055c2	     0xf849d030000	                            je 0x4005965	      2942	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_36
0x40055c8	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2943	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_36
0x40055cb	      0xe99f030000	                           jmp 0x400596f	      2943	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_36
0x40055d0	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2948	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37
0x40055d3	      0x2dc8000000	                           sub eax, 0xc8	      2948	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37
0x40055d8	          0x83f863	                           cmp eax, 0x63	      2948	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37
0x40055db	     0xf86da000000	                           jbe 0x40056bb	      2948	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37
0x40055e1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2950	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x40055e5	          0x488b00	                    mov rax, qword [rax]	      2950	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x40055e8	    0x8b807c070000	           mov eax, dword [rax + 0x77c] 	      2950	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x40055ee	            0x85c0	                           test eax, eax	      2950	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x40055f0	     0xf8498000000	                            je 0x400568e	      2950	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x40055f6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2951	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x40055fa	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      2951	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005600	            0x85c0	                           test eax, eax	      2950	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005602	     0xf8486000000	                            je 0x400568e	      2950	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005608	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2951	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x400560c	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      2951	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005612	            0x85c0	                           test eax, eax	      2951	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005614	            0x7578	                           jne 0x400568e	      2951	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005616	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2953	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x400561a	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      2953	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005620	          0x8d5001	                      lea edx, [rax + 1]	      2953	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005623	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2953	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005627	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2953	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x400562d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38	CALL_57
0x4005631	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38	CALL_57
0x4005635	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38	CALL_57
0x4005639	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38	CALL_57
0x400563f	            0x4898	                                    cdqe	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38	CALL_57
0x4005641	        0x48c1e003	                              shl rax, 3	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38	CALL_57
0x4005645	        0x4883e808	                              sub rax, 8	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38	CALL_57
0x4005649	          0x4801d0	                            add rax, rdx	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38	CALL_57
0x400564c	          0x488b10	                    mov rdx, qword [rax]	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38	CALL_57
0x400564f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38	CALL_57
0x4005653	    0x488d35000000	                   lea rsi, [0x0400565a]	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38	CALL_57
0x400565a	          0x4889c7	                            mov rdi, rax	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38	CALL_57
0x400565d	      0xb800000000	                              mov eax, 0	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38	CALL_57
0x4005662	      0xe800000000	                          call 0x4005667	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38	CALL_57
0x4005667	          0x894598	             mov dword [rbp - 0x68], eax	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38	CALL_57
0x400566a	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38	CALL_57
0x400566e	            0x7408	                            je 0x4005678	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38	CALL_57
0x4005670	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38	CALL_57
0x4005673	      0xe9f7020000	                           jmp 0x400596f	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38	CALL_57
0x4005678	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2955	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38	CALL_58
0x400567c	      0xbe11000000	                           mov esi, 0x11	      2955	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38	CALL_58
0x4005681	          0x4889c7	                            mov rdi, rax	      2955	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38	CALL_58
0x4005684	      0xe8eeb6ffff	                         call sym._state	      2955	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38	CALL_58
0x4005689	      0xe9da020000	                           jmp 0x4005968	      2978	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400568e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2959	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13	CALL_59
0x4005692	    0x488d35000000	                   lea rsi, [0x04005699]	      2959	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13	CALL_59
0x4005699	          0x4889c7	                            mov rdi, rax	      2959	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13	CALL_59
0x400569c	      0xb800000000	                              mov eax, 0	      2959	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13	CALL_59
0x40056a1	      0xe800000000	                          call 0x40056a6	      2959	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13	CALL_59
0x40056a6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2960	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13
0x40056aa	    0xc68098000000	                mov byte [rax + 0x98], 1	      2960	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13
0x40056b1	      0xb809000000	                              mov eax, 9	      2962	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13
0x40056b6	      0xe9b4020000	                           jmp 0x400596f	      2962	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13
0x40056bb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2967	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14
0x40056bf	    0xc780b4000000	               mov dword [rax + 0xb4], 0	      2967	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14
0x40056c9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x40056cd	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x40056d3	          0x8d5001	                      lea edx, [rax + 1]	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x40056d6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x40056da	    0x899094000000	             mov dword [rax + 0x94], edx	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x40056e0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x40056e4	    0x8b9094000000	            mov edx, dword [rax + 0x94] 	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x40056ea	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x40056ee	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x40056f4	            0x39c2	                            cmp edx, eax	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x40056f6	            0x7f4f	                            jg 0x4005747	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x40056f8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39	CALL_60
0x40056fc	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39	CALL_60
0x4005700	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39	CALL_60
0x4005704	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39	CALL_60
0x400570a	            0x4898	                                    cdqe	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39	CALL_60
0x400570c	        0x48c1e003	                              shl rax, 3	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39	CALL_60
0x4005710	        0x4883e808	                              sub rax, 8	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39	CALL_60
0x4005714	          0x4801d0	                            add rax, rdx	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39	CALL_60
0x4005717	          0x488b10	                    mov rdx, qword [rax]	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39	CALL_60
0x400571a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39	CALL_60
0x400571e	    0x488d35000000	                   lea rsi, [0x04005725]	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39	CALL_60
0x4005725	          0x4889c7	                            mov rdi, rax	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39	CALL_60
0x4005728	      0xb800000000	                              mov eax, 0	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39	CALL_60
0x400572d	      0xe800000000	                          call 0x4005732	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39	CALL_60
0x4005732	          0x894598	             mov dword [rbp - 0x68], eax	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39	CALL_60
0x4005735	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39	CALL_60
0x4005739	     0xf8429020000	                            je 0x4005968	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39	CALL_60
0x400573f	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39	CALL_60
0x4005742	      0xe928020000	                           jmp 0x400596f	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39	CALL_60
0x4005747	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2973	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	ELSE_15	CALL_61
0x400574b	          0x4889c7	                            mov rdi, rax	      2973	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	ELSE_15	CALL_61
0x400574e	      0xe8fcd0ffff	                 call sym.ftp_state_mdtm	      2973	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	ELSE_15	CALL_61
0x4005753	          0x894598	             mov dword [rbp - 0x68], eax	      2973	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	ELSE_15	CALL_61
0x4005756	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2974	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	ELSE_15	IF_40
0x400575a	     0xf8408020000	                            je 0x4005968	      2974	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	ELSE_15	IF_40
0x4005760	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2975	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	ELSE_15	IF_40
0x4005763	      0xe907020000	                           jmp 0x400596f	      2975	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	ELSE_15	IF_40
0x4005768	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x400576b	      0x2dc8000000	                           sub eax, 0xc8	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x4005770	          0x83f863	                           cmp eax, 0x63	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x4005773	            0x7640	                           jbe 0x40057b5	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x4005775	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x4005779	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x400577f	          0x8d48ff	                      lea ecx, [rax - 1]	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x4005782	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x4005786	    0x898ab8000000	             mov dword [rdx + 0xb8], ecx	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x400578c	            0x85c0	                           test eax, eax	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x400578e	            0x7525	                           jne 0x40057b5	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x4005790	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      2983	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41	CALL_62
0x4005793	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2983	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41	CALL_62
0x4005797	    0x488d35000000	                   lea rsi, [0x0400579e]	      2983	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41	CALL_62
0x400579e	          0x4889c7	                            mov rdi, rax	      2983	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41	CALL_62
0x40057a1	      0xb800000000	                              mov eax, 0	      2983	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41	CALL_62
0x40057a6	      0xe800000000	                          call 0x40057ab	      2983	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41	CALL_62
0x40057ab	      0xb809000000	                              mov eax, 9	      2984	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x40057b0	      0xe9ba010000	                           jmp 0x400596f	      2984	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x40057b5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2986	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_63
0x40057b9	      0xbe10000000	                           mov esi, 0x10	      2986	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_63
0x40057be	          0x4889c7	                            mov rdi, rax	      2986	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_63
0x40057c1	      0xe8b1b5ffff	                         call sym._state	      2986	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_63
0x40057c6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_64
0x40057ca	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_64
0x40057ce	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_64
0x40057d2	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_64
0x40057d8	            0x4898	                                    cdqe	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_64
0x40057da	        0x48c1e003	                              shl rax, 3	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_64
0x40057de	        0x4883e808	                              sub rax, 8	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_64
0x40057e2	          0x4801d0	                            add rax, rdx	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_64
0x40057e5	          0x488b10	                    mov rdx, qword [rax]	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_64
0x40057e8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_64
0x40057ec	    0x488d35000000	                   lea rsi, [0x040057f3]	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_64
0x40057f3	          0x4889c7	                            mov rdi, rax	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_64
0x40057f6	      0xb800000000	                              mov eax, 0	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_64
0x40057fb	      0xe800000000	                          call 0x4005800	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_64
0x4005800	          0x894598	             mov dword [rbp - 0x68], eax	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_64
0x4005803	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_64
0x4005807	     0xf845e010000	                            je 0x400596b	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_64
0x400580d	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_64
0x4005810	      0xe95a010000	                           jmp 0x400596f	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_64
0x4005815	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      2992	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_65
0x4005818	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2992	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_65
0x400581c	            0x89d6	                            mov esi, edx	      2992	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_65
0x400581e	          0x4889c7	                            mov rdi, rax	      2992	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_65
0x4005821	      0xe890e0ffff	            call sym.ftp_state_mdtm_resp	      2992	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_65
0x4005826	          0x894598	             mov dword [rbp - 0x68], eax	      2992	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_65
0x4005829	      0xe93e010000	                           jmp 0x400596c	      2993	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400582e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2999	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_66
0x4005832	    0x8b90bc000000	            mov edx, dword [rax + 0xbc] 	      2999	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_66
0x4005838	          0x8b4d94	             mov ecx, dword [rbp - 0x6c]	      2999	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_66
0x400583b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2999	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_66
0x400583f	            0x89ce	                            mov esi, ecx	      2999	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_66
0x4005841	          0x4889c7	                            mov rdi, rax	      2999	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_66
0x4005844	      0xe864e5ffff	            call sym.ftp_state_type_resp	      2999	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_66
0x4005849	          0x894598	             mov dword [rbp - 0x68], eax	      2999	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_66
0x400584c	      0xe91b010000	                           jmp 0x400596c	      3000	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005851	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3005	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_67
0x4005855	    0x8b90bc000000	            mov edx, dword [rax + 0xbc] 	      3005	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_67
0x400585b	          0x8b4d94	             mov ecx, dword [rbp - 0x6c]	      3005	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_67
0x400585e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3005	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_67
0x4005862	            0x89ce	                            mov esi, ecx	      3005	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_67
0x4005864	          0x4889c7	                            mov rdi, rax	      3005	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_67
0x4005867	      0xe8efe8ffff	            call sym.ftp_state_size_resp	      3005	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_67
0x400586c	          0x894598	             mov dword [rbp - 0x68], eax	      3005	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_67
0x400586f	      0xe9f8000000	                           jmp 0x400596c	      3006	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005874	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3010	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_68
0x4005878	    0x8b90bc000000	            mov edx, dword [rax + 0xbc] 	      3010	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_68
0x400587e	          0x8b4d94	             mov ecx, dword [rbp - 0x6c]	      3010	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_68
0x4005881	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3010	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_68
0x4005885	            0x89ce	                            mov esi, ecx	      3010	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_68
0x4005887	          0x4889c7	                            mov rdi, rax	      3010	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_68
0x400588a	      0xe8a9eaffff	            call sym.ftp_state_rest_resp	      3010	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_68
0x400588f	          0x894598	             mov dword [rbp - 0x68], eax	      3010	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_68
0x4005892	      0xe9d5000000	                           jmp 0x400596c	      3011	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005897	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      3014	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42
0x400589a	      0x3dc8000000	                           cmp eax, 0xc8	      3014	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42
0x400589f	            0x7425	                            je 0x40058c6	      3014	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42
0x40058a1	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      3016	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42	CALL_69
0x40058a4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3016	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42	CALL_69
0x40058a8	    0x488d35000000	                   lea rsi, [0x040058af]	      3016	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42	CALL_69
0x40058af	          0x4889c7	                            mov rdi, rax	      3016	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42	CALL_69
0x40058b2	      0xb800000000	                              mov eax, 0	      3016	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42	CALL_69
0x40058b7	      0xe800000000	                          call 0x40058bc	      3016	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42	CALL_69
0x40058bc	      0xb854000000	                           mov eax, 0x54	      3017	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42
0x40058c1	      0xe9a9000000	                           jmp 0x400596f	      3017	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42
0x40058c6	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3019	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_70
0x40058ca	          0x4889c7	                            mov rdi, rax	      3019	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_70
0x40058cd	      0xe811c8ffff	             call sym.ftp_state_use_pasv	      3019	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_70
0x40058d2	          0x894598	             mov dword [rbp - 0x68], eax	      3019	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_70
0x40058d5	      0xe992000000	                           jmp 0x400596c	      3020	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40058da	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      3023	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_71
0x40058dd	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3023	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_71
0x40058e1	            0x89d6	                            mov esi, edx	      3023	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_71
0x40058e3	          0x4889c7	                            mov rdi, rax	      3023	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_71
0x40058e6	      0xe893d7ffff	            call sym.ftp_state_pasv_resp	      3023	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_71
0x40058eb	          0x894598	             mov dword [rbp - 0x68], eax	      3023	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_71
0x40058ee	            0xeb7c	                           jmp 0x400596c	      3024	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40058f0	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      3027	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_72
0x40058f3	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3027	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_72
0x40058f7	            0x89d6	                            mov esi, edx	      3027	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_72
0x40058f9	          0x4889c7	                            mov rdi, rax	      3027	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_72
0x40058fc	      0xe8c0deffff	            call sym.ftp_state_port_resp	      3027	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_72
0x4005901	          0x894598	             mov dword [rbp - 0x68], eax	      3027	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_72
0x4005904	            0xeb66	                           jmp 0x400596c	      3028	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005906	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3032	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_73
0x400590a	    0x8b90bc000000	            mov edx, dword [rax + 0xbc] 	      3032	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_73
0x4005910	          0x8b4d94	             mov ecx, dword [rbp - 0x6c]	      3032	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_73
0x4005913	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3032	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_73
0x4005917	            0x89ce	                            mov esi, ecx	      3032	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_73
0x4005919	          0x4889c7	                            mov rdi, rax	      3032	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_73
0x400591c	      0xe872ecffff	             call sym.ftp_state_get_resp	      3032	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_73
0x4005921	          0x894598	             mov dword [rbp - 0x68], eax	      3032	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_73
0x4005924	            0xeb46	                           jmp 0x400596c	      3033	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005926	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3036	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_74
0x400592a	    0x8b90bc000000	            mov edx, dword [rax + 0xbc] 	      3036	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_74
0x4005930	          0x8b4d94	             mov ecx, dword [rbp - 0x6c]	      3036	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_74
0x4005933	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3036	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_74
0x4005937	            0x89ce	                            mov esi, ecx	      3036	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_74
0x4005939	          0x4889c7	                            mov rdi, rax	      3036	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_74
0x400593c	      0xe82debffff	            call sym.ftp_state_stor_resp	      3036	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_74
0x4005941	          0x894598	             mov dword [rbp - 0x68], eax	      3036	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_74
0x4005944	            0xeb26	                           jmp 0x400596c	      3037	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005946	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3043	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_75
0x400594a	      0xbe00000000	                              mov esi, 0	      3043	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_75
0x400594f	          0x4889c7	                            mov rdi, rax	      3043	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_75
0x4005952	      0xe820b4ffff	                         call sym._state	      3043	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_75
0x4005957	            0xeb13	                           jmp 0x400596c	      3044	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005959	              0x90	                                     nop	      2684	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400595a	            0xeb10	                           jmp 0x400596c	      2684	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400595c	              0x90	                                     nop	      2721	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400595d	            0xeb0d	                           jmp 0x400596c	      2721	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400595f	              0x90	                                     nop	      2761	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005960	            0xeb0a	                           jmp 0x400596c	      2761	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005962	              0x90	                                     nop	      2778	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005963	            0xeb07	                           jmp 0x400596c	      2778	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005965	              0x90	                                     nop	      2945	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005966	            0xeb04	                           jmp 0x400596c	      2945	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005968	              0x90	                                     nop	      2978	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005969	            0xeb01	                           jmp 0x400596c	      2978	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400596b	              0x90	                                     nop	      2989	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400596c	          0x8b4598	             mov eax, dword [rbp - 0x68]	      3048	ftp.c	FUNCTION_44
0x400596f	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3049	ftp.c	FUNCTION_44
0x4005973	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3049	ftp.c	FUNCTION_44
0x400597c	            0x7405	                            je 0x4005983	      3049	ftp.c	FUNCTION_44
0x400597e	      0xe800000000	                          call 0x4005983	      3049	ftp.c	FUNCTION_44
0x4005983	              0xc9	                                   leave	      3049	ftp.c	FUNCTION_44
0x4005984	              0xc3	                                     ret	      3049	ftp.c	FUNCTION_44
ftp_block_statemach	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,1:IF,1:WHILE,1	27
0x40059d1	              0x55	                                push rbp	      3068	ftp.c	FUNCTION_46
0x40059d2	          0x4889e5	                            mov rbp, rsp	      3068	ftp.c	FUNCTION_46
0x40059d5	        0x4883ec30	                           sub rsp, 0x30	      3068	ftp.c	FUNCTION_46
0x40059d9	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3068	ftp.c	FUNCTION_46
0x40059dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3069	ftp.c	FUNCTION_46
0x40059e1	    0x4805b0050000	                          add rax, 0x5b0	      3069	ftp.c	FUNCTION_46
0x40059e7	        0x488945f0	             mov qword [rbp - 0x10], rax	      3069	ftp.c	FUNCTION_46
0x40059eb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3070	ftp.c	FUNCTION_46
0x40059ef	        0x488945f8	                mov qword [rbp - 8], rax	      3070	ftp.c	FUNCTION_46
0x40059f3	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      3071	ftp.c	FUNCTION_46
0x40059fa	            0xeb1a	                           jmp 0x4005a16	      3073	ftp.c	FUNCTION_46	WHILE_1
0x40059fc	        0x488b45f8	                mov rax, qword [rbp - 8]	      3074	ftp.c	FUNCTION_46	WHILE_1	CALL_1
0x4005a00	      0xbe01000000	                              mov esi, 1	      3074	ftp.c	FUNCTION_46	WHILE_1	CALL_1
0x4005a05	          0x4889c7	                            mov rdi, rax	      3074	ftp.c	FUNCTION_46	WHILE_1	CALL_1
0x4005a08	      0xe800000000	                          call 0x4005a0d	      3074	ftp.c	FUNCTION_46	WHILE_1	CALL_1
0x4005a0d	          0x8945ec	             mov dword [rbp - 0x14], eax	      3074	ftp.c	FUNCTION_46	WHILE_1	CALL_1
0x4005a10	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3075	ftp.c	FUNCTION_46	WHILE_1	IF_1
0x4005a14	            0x7510	                           jne 0x4005a26	      3075	ftp.c	FUNCTION_46	WHILE_1	IF_1
0x4005a16	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3073	ftp.c	FUNCTION_46	WHILE_1
0x4005a1a	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      3073	ftp.c	FUNCTION_46	WHILE_1
0x4005a20	            0x85c0	                           test eax, eax	      3073	ftp.c	FUNCTION_46	WHILE_1
0x4005a22	            0x75d8	                           jne 0x40059fc	      3073	ftp.c	FUNCTION_46	WHILE_1
0x4005a24	            0xeb01	                           jmp 0x4005a27	      3073	ftp.c	FUNCTION_46	WHILE_1
0x4005a26	              0x90	                                     nop	      3076	ftp.c	FUNCTION_46	WHILE_1	IF_1
0x4005a27	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3079	ftp.c	FUNCTION_46
0x4005a2a	              0xc9	                                   leave	      3080	ftp.c	FUNCTION_46
0x4005a2b	              0xc3	                                     ret	      3080	ftp.c	FUNCTION_46
ftp_doing	DO,0:FOR,0:functions,0:ELSE,1:SWITCH,0:CALL,6:IF,2:WHILE,0	25
0x4007f34	              0x55	                                push rbp	      4320	ftp.c	FUNCTION_64
0x4007f35	          0x4889e5	                            mov rbp, rsp	      4320	ftp.c	FUNCTION_64
0x4007f38	        0x4883ec20	                           sub rsp, 0x20	      4320	ftp.c	FUNCTION_64
0x4007f3c	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4320	ftp.c	FUNCTION_64
0x4007f40	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4320	ftp.c	FUNCTION_64
0x4007f44	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4321	ftp.c	FUNCTION_64	CALL_1
0x4007f48	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4321	ftp.c	FUNCTION_64	CALL_1
0x4007f4c	          0x4889d6	                            mov rsi, rdx	      4321	ftp.c	FUNCTION_64	CALL_1
0x4007f4f	          0x4889c7	                            mov rdi, rax	      4321	ftp.c	FUNCTION_64	CALL_1
0x4007f52	      0xe82edaffff	            call sym.ftp_multi_statemach	      4321	ftp.c	FUNCTION_64	CALL_1
0x4007f57	          0x8945fc	                mov dword [rbp - 4], eax	      4321	ftp.c	FUNCTION_64	CALL_1
0x4007f5a	        0x837dfc00	                  cmp dword [rbp - 4], 0	      4323	ftp.c	FUNCTION_64	IF_1
0x4007f5e	            0x751f	                           jne 0x4007f7f	      4323	ftp.c	FUNCTION_64	IF_1
0x4007f60	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4325	ftp.c	FUNCTION_64	ELSE_1	IF_2
0x4007f64	           0xfb600	                   movzx eax, byte [rax]	      4325	ftp.c	FUNCTION_64	ELSE_1	IF_2
0x4007f67	            0x84c0	                             test al, al	      4325	ftp.c	FUNCTION_64	ELSE_1	IF_2
0x4007f69	            0x7414	                            je 0x4007f7f	      4325	ftp.c	FUNCTION_64	ELSE_1	IF_2
0x4007f6b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4326	ftp.c	FUNCTION_64	ELSE_1	IF_2	CALL_4
0x4007f6f	      0xbe00000000	                              mov esi, 0	      4326	ftp.c	FUNCTION_64	ELSE_1	IF_2	CALL_4
0x4007f74	          0x4889c7	                            mov rdi, rax	      4326	ftp.c	FUNCTION_64	ELSE_1	IF_2	CALL_4
0x4007f77	      0xe8c9feffff	               call sym.ftp_dophase_done	      4326	ftp.c	FUNCTION_64	ELSE_1	IF_2	CALL_4
0x4007f7c	          0x8945fc	                mov dword [rbp - 4], eax	      4326	ftp.c	FUNCTION_64	ELSE_1	IF_2	CALL_4
0x4007f7f	          0x8b45fc	                mov eax, dword [rbp - 4]	      4330	ftp.c	FUNCTION_64
0x4007f82	              0xc9	                                   leave	      4331	ftp.c	FUNCTION_64
0x4007f83	              0xc3	                                     ret	      4331	ftp.c	FUNCTION_64
ReceivedServerConnect	DO,0:FOR,0:functions,0:ELSE,1:SWITCH,1:CALL,10:IF,5:WHILE,0	132
0x4000584	              0x55	                                push rbp	       378	ftp.c	FUNCTION_6
0x4000585	          0x4889e5	                            mov rbp, rsp	       378	ftp.c	FUNCTION_6
0x4000588	        0x4883ec50	                           sub rsp, 0x50	       378	ftp.c	FUNCTION_6
0x400058c	        0x48897db8	             mov qword [rbp - 0x48], rdi	       378	ftp.c	FUNCTION_6
0x4000590	        0x488975b0	             mov qword [rbp - 0x50], rsi	       378	ftp.c	FUNCTION_6
0x4000594	    0x64488b042528	                mov rax, qword fs:[0x28]	       378	ftp.c	FUNCTION_6
0x400059d	        0x488945f8	                mov qword [rbp - 8], rax	       378	ftp.c	FUNCTION_6
0x40005a1	            0x31c0	                            xor eax, eax	       378	ftp.c	FUNCTION_6
0x40005a3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       379	ftp.c	FUNCTION_6
0x40005a7	          0x488b00	                    mov rax, qword [rax]	       379	ftp.c	FUNCTION_6
0x40005aa	        0x488945d8	             mov qword [rbp - 0x28], rax	       379	ftp.c	FUNCTION_6
0x40005ae	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       380	ftp.c	FUNCTION_6
0x40005b2	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	       380	ftp.c	FUNCTION_6
0x40005b8	          0x8945c4	             mov dword [rbp - 0x3c], eax	       380	ftp.c	FUNCTION_6
0x40005bb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       381	ftp.c	FUNCTION_6
0x40005bf	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	       381	ftp.c	FUNCTION_6
0x40005c5	          0x8945c8	             mov dword [rbp - 0x38], eax	       381	ftp.c	FUNCTION_6
0x40005c8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       382	ftp.c	FUNCTION_6
0x40005cc	    0x4805b0050000	                          add rax, 0x5b0	       382	ftp.c	FUNCTION_6
0x40005d2	        0x488945e0	             mov qword [rbp - 0x20], rax	       382	ftp.c	FUNCTION_6
0x40005d6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       383	ftp.c	FUNCTION_6
0x40005da	        0x488945e8	             mov qword [rbp - 0x18], rax	       383	ftp.c	FUNCTION_6
0x40005de	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       389	ftp.c	FUNCTION_6
0x40005e2	          0xc60000	                       mov byte [rax], 0	       389	ftp.c	FUNCTION_6
0x40005e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       391	ftp.c	FUNCTION_6	CALL_1
0x40005e9	          0x4889c7	                            mov rdi, rax	       391	ftp.c	FUNCTION_6	CALL_1
0x40005ec	      0xe8bafeffff	            call sym.ftp_timeleft_accept	       391	ftp.c	FUNCTION_6	CALL_1
0x40005f1	        0x488945f0	             mov qword [rbp - 0x10], rax	       391	ftp.c	FUNCTION_6	CALL_1
0x40005f5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       392	ftp.c	FUNCTION_6	CALL_2
0x40005f9	    0x488d35000000	                   lea rsi, [0x04000600]	       392	ftp.c	FUNCTION_6	CALL_2
0x4000600	          0x4889c7	                            mov rdi, rax	       392	ftp.c	FUNCTION_6	CALL_2
0x4000603	      0xb800000000	                              mov eax, 0	       392	ftp.c	FUNCTION_6	CALL_2
0x4000608	      0xe800000000	                          call 0x400060d	       392	ftp.c	FUNCTION_6	CALL_2
0x400060d	      0x48837df000	               cmp qword [rbp - 0x10], 0	       393	ftp.c	FUNCTION_6	IF_1
0x4000612	            0x7922	                           jns 0x4000636	       393	ftp.c	FUNCTION_6	IF_1
0x4000614	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       395	ftp.c	FUNCTION_6	IF_1	CALL_3
0x4000618	    0x488d35000000	                   lea rsi, [0x0400061f]	       395	ftp.c	FUNCTION_6	IF_1	CALL_3
0x400061f	          0x4889c7	                            mov rdi, rax	       395	ftp.c	FUNCTION_6	IF_1	CALL_3
0x4000622	      0xb800000000	                              mov eax, 0	       395	ftp.c	FUNCTION_6	IF_1	CALL_3
0x4000627	      0xe800000000	                          call 0x400062c	       395	ftp.c	FUNCTION_6	IF_1	CALL_3
0x400062c	      0xb80c000000	                            mov eax, 0xc	       396	ftp.c	FUNCTION_6	IF_1
0x4000631	      0xe933010000	                           jmp 0x4000769	       396	ftp.c	FUNCTION_6	IF_1
0x4000636	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       400	ftp.c	FUNCTION_6	IF_2
0x400063a	        0x488b4008	                mov rax, qword [rax + 8]	       400	ftp.c	FUNCTION_6	IF_2
0x400063e	          0x4885c0	                           test rax, rax	       400	ftp.c	FUNCTION_6	IF_2
0x4000641	            0x7453	                            je 0x4000696	       400	ftp.c	FUNCTION_6	IF_2
0x4000643	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       400	ftp.c	FUNCTION_6	IF_2
0x4000647	          0x488b00	                    mov rax, qword [rax]	       400	ftp.c	FUNCTION_6	IF_2
0x400064a	          0x4885c0	                           test rax, rax	       400	ftp.c	FUNCTION_6	IF_2
0x400064d	            0x7447	                            je 0x4000696	       400	ftp.c	FUNCTION_6	IF_2
0x400064f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       400	ftp.c	FUNCTION_6	IF_2
0x4000653	          0x488b00	                    mov rax, qword [rax]	       400	ftp.c	FUNCTION_6	IF_2
0x4000656	           0xfb600	                   movzx eax, byte [rax]	       400	ftp.c	FUNCTION_6	IF_2
0x4000659	            0x3c33	                            cmp al, 0x33	       400	ftp.c	FUNCTION_6	IF_2
0x400065b	            0x7e39	                           jle 0x4000696	       400	ftp.c	FUNCTION_6	IF_2
0x400065d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       402	ftp.c	FUNCTION_6	IF_2	CALL_4
0x4000661	    0x488d35000000	                   lea rsi, [0x04000668]	       402	ftp.c	FUNCTION_6	IF_2	CALL_4
0x4000668	          0x4889c7	                            mov rdi, rax	       402	ftp.c	FUNCTION_6	IF_2	CALL_4
0x400066b	      0xb800000000	                              mov eax, 0	       402	ftp.c	FUNCTION_6	IF_2	CALL_4
0x4000670	      0xe800000000	                          call 0x4000675	       402	ftp.c	FUNCTION_6	IF_2	CALL_4
0x4000675	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       403	ftp.c	FUNCTION_6	IF_2	CALL_5
0x4000679	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       403	ftp.c	FUNCTION_6	IF_2	CALL_5
0x400067d	        0x488d45d0	                   lea rax, [rbp - 0x30]	       403	ftp.c	FUNCTION_6	IF_2	CALL_5
0x4000681	          0x4889ce	                            mov rsi, rcx	       403	ftp.c	FUNCTION_6	IF_2	CALL_5
0x4000684	          0x4889c7	                            mov rdi, rax	       403	ftp.c	FUNCTION_6	IF_2	CALL_5
0x4000687	      0xe800000000	                          call 0x400068c	       403	ftp.c	FUNCTION_6	IF_2	CALL_5
0x400068c	      0xb80a000000	                            mov eax, 0xa	       404	ftp.c	FUNCTION_6	IF_2
0x4000691	      0xe9d3000000	                           jmp 0x4000769	       404	ftp.c	FUNCTION_6	IF_2
0x4000696	          0x8b75c8	             mov esi, dword [rbp - 0x38]	       407	ftp.c	FUNCTION_6	CALL_6
0x4000699	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       407	ftp.c	FUNCTION_6	CALL_6
0x400069c	      0xb900000000	                              mov ecx, 0	       407	ftp.c	FUNCTION_6	CALL_6
0x40006a1	      0xbaffffffff	                     mov edx, 0xffffffff	       407	ftp.c	FUNCTION_6	CALL_6
0x40006a6	            0x89c7	                            mov edi, eax	       407	ftp.c	FUNCTION_6	CALL_6
0x40006a8	      0xe800000000	                          call 0x40006ad	       407	ftp.c	FUNCTION_6	CALL_6
0x40006ad	          0x8945cc	             mov dword [rbp - 0x34], eax	       407	ftp.c	FUNCTION_6	CALL_6
0x40006b0	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       410	ftp.c	FUNCTION_6	SWITCH_1
0x40006b3	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       410	ftp.c	FUNCTION_6	SWITCH_1
0x40006b6	            0x740a	                            je 0x40006c2	       410	ftp.c	FUNCTION_6	SWITCH_1
0x40006b8	            0x85c0	                           test eax, eax	       410	ftp.c	FUNCTION_6	SWITCH_1
0x40006ba	     0xf84a0000000	                            je 0x4000760	       410	ftp.c	FUNCTION_6	SWITCH_1
0x40006c0	            0xeb22	                           jmp 0x40006e4	       410	ftp.c	FUNCTION_6	SWITCH_1
0x40006c2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       413	ftp.c	FUNCTION_6	SWITCH_1	CALL_7
0x40006c6	    0x488d35000000	                   lea rsi, [0x040006cd]	       413	ftp.c	FUNCTION_6	SWITCH_1	CALL_7
0x40006cd	          0x4889c7	                            mov rdi, rax	       413	ftp.c	FUNCTION_6	SWITCH_1	CALL_7
0x40006d0	      0xb800000000	                              mov eax, 0	       413	ftp.c	FUNCTION_6	SWITCH_1	CALL_7
0x40006d5	      0xe800000000	                          call 0x40006da	       413	ftp.c	FUNCTION_6	SWITCH_1	CALL_7
0x40006da	      0xb80a000000	                            mov eax, 0xa	       414	ftp.c	FUNCTION_6	SWITCH_1
0x40006df	      0xe985000000	                           jmp 0x4000769	       414	ftp.c	FUNCTION_6	SWITCH_1
0x40006e4	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       419	ftp.c	FUNCTION_6	SWITCH_1	IF_3
0x40006e7	          0x83e008	                              and eax, 8	       419	ftp.c	FUNCTION_6	SWITCH_1	IF_3
0x40006ea	            0x85c0	                           test eax, eax	       419	ftp.c	FUNCTION_6	SWITCH_1	IF_3
0x40006ec	            0x7421	                            je 0x400070f	       419	ftp.c	FUNCTION_6	SWITCH_1	IF_3
0x40006ee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       420	ftp.c	FUNCTION_6	SWITCH_1	IF_3	CALL_8
0x40006f2	    0x488d35000000	                   lea rsi, [0x040006f9]	       420	ftp.c	FUNCTION_6	SWITCH_1	IF_3	CALL_8
0x40006f9	          0x4889c7	                            mov rdi, rax	       420	ftp.c	FUNCTION_6	SWITCH_1	IF_3	CALL_8
0x40006fc	      0xb800000000	                              mov eax, 0	       420	ftp.c	FUNCTION_6	SWITCH_1	IF_3	CALL_8
0x4000701	      0xe800000000	                          call 0x4000706	       420	ftp.c	FUNCTION_6	SWITCH_1	IF_3	CALL_8
0x4000706	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       421	ftp.c	FUNCTION_6	SWITCH_1	IF_3
0x400070a	          0xc60001	                       mov byte [rax], 1	       421	ftp.c	FUNCTION_6	SWITCH_1	IF_3
0x400070d	            0xeb54	                           jmp 0x4000763	       433	ftp.c	FUNCTION_6	SWITCH_1
0x400070f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       423	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4
0x4000712	          0x83e001	                              and eax, 1	       423	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4
0x4000715	            0x85c0	                           test eax, eax	       423	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4
0x4000717	            0x744a	                            je 0x4000763	       423	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4
0x4000719	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       424	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_9
0x400071d	    0x488d35000000	                   lea rsi, [0x04000724]	       424	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_9
0x4000724	          0x4889c7	                            mov rdi, rax	       424	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_9
0x4000727	      0xb800000000	                              mov eax, 0	       424	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_9
0x400072c	      0xe800000000	                          call 0x4000731	       424	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_9
0x4000731	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       425	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_10
0x4000735	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       425	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_10
0x4000739	        0x488d45d0	                   lea rax, [rbp - 0x30]	       425	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_10
0x400073d	          0x4889ce	                            mov rsi, rcx	       425	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_10
0x4000740	          0x4889c7	                            mov rdi, rax	       425	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_10
0x4000743	      0xe800000000	                          call 0x4000748	       425	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_10
0x4000748	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       427	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	IF_5
0x400074b	      0x3d8f010000	                          cmp eax, 0x18f	       427	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	IF_5
0x4000750	            0x7e07	                           jle 0x4000759	       427	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	IF_5
0x4000752	      0xb80a000000	                            mov eax, 0xa	       428	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	IF_5
0x4000757	            0xeb10	                           jmp 0x4000769	       428	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	IF_5
0x4000759	      0xb808000000	                              mov eax, 8	       430	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4
0x400075e	            0xeb09	                           jmp 0x4000769	       430	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4
0x4000760	              0x90	                                     nop	       416	ftp.c	FUNCTION_6	SWITCH_1
0x4000761	            0xeb01	                           jmp 0x4000764	       416	ftp.c	FUNCTION_6	SWITCH_1
0x4000763	              0x90	                                     nop	       433	ftp.c	FUNCTION_6	SWITCH_1
0x4000764	      0xb800000000	                              mov eax, 0	       436	ftp.c	FUNCTION_6
0x4000769	        0x488b4df8	                mov rcx, qword [rbp - 8]	       437	ftp.c	FUNCTION_6
0x400076d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       437	ftp.c	FUNCTION_6
0x4000776	            0x7405	                            je 0x400077d	       437	ftp.c	FUNCTION_6
0x4000778	      0xe800000000	                          call 0x400077d	       437	ftp.c	FUNCTION_6
0x400077d	              0xc9	                                   leave	       437	ftp.c	FUNCTION_6
0x400077e	              0xc3	                                     ret	       437	ftp.c	FUNCTION_6
ftp_connect	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,5:IF,2:WHILE,0	54
0x4005a2c	              0x55	                                push rbp	      3092	ftp.c	FUNCTION_47
0x4005a2d	          0x4889e5	                            mov rbp, rsp	      3092	ftp.c	FUNCTION_47
0x4005a30	        0x4883ec30	                           sub rsp, 0x30	      3092	ftp.c	FUNCTION_47
0x4005a34	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3092	ftp.c	FUNCTION_47
0x4005a38	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3092	ftp.c	FUNCTION_47
0x4005a3c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3094	ftp.c	FUNCTION_47
0x4005a40	    0x4805b0050000	                          add rax, 0x5b0	      3094	ftp.c	FUNCTION_47
0x4005a46	        0x488945f0	             mov qword [rbp - 0x10], rax	      3094	ftp.c	FUNCTION_47
0x4005a4a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3095	ftp.c	FUNCTION_47
0x4005a4e	        0x488945f8	                mov qword [rbp - 8], rax	      3095	ftp.c	FUNCTION_47
0x4005a52	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3097	ftp.c	FUNCTION_47
0x4005a56	          0xc60000	                       mov byte [rax], 0	      3097	ftp.c	FUNCTION_47
0x4005a59	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3100	ftp.c	FUNCTION_47	CALL_1
0x4005a5d	      0xbe00000000	                              mov esi, 0	      3100	ftp.c	FUNCTION_47	CALL_1
0x4005a62	          0x4889c7	                            mov rdi, rax	      3100	ftp.c	FUNCTION_47	CALL_1
0x4005a65	      0xe800000000	                          call 0x4005a6a	      3100	ftp.c	FUNCTION_47	CALL_1
0x4005a6a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3102	ftp.c	FUNCTION_47
0x4005a6e	    0x48c740504077	       mov qword [rax + 0x50], 0x1b7740 	      3102	ftp.c	FUNCTION_47
0x4005a76	        0x488b45f8	                mov rax, qword [rbp - 8]	      3103	ftp.c	FUNCTION_47
0x4005a7a	    0x488d1542f1ff	         lea rdx, sym.ftp_statemach_act 	      3103	ftp.c	FUNCTION_47
0x4005a81	        0x48895060	             mov qword [rax + 0x60], rdx	      3103	ftp.c	FUNCTION_47
0x4005a85	        0x488b45f8	                mov rax, qword [rbp - 8]	      3104	ftp.c	FUNCTION_47
0x4005a89	    0x488d1565afff	              lea rdx, sym.ftp_endofresp	      3104	ftp.c	FUNCTION_47
0x4005a90	        0x48895068	             mov qword [rax + 0x68], rdx	      3104	ftp.c	FUNCTION_47
0x4005a94	        0x488b45f8	                mov rax, qword [rbp - 8]	      3105	ftp.c	FUNCTION_47
0x4005a98	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3105	ftp.c	FUNCTION_47
0x4005a9c	        0x48895058	             mov qword [rax + 0x58], rdx	      3105	ftp.c	FUNCTION_47
0x4005aa0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3107	ftp.c	FUNCTION_47	IF_1
0x4005aa4	    0x488b80980300	           mov rax, qword [rax + 0x398] 	      3107	ftp.c	FUNCTION_47	IF_1
0x4005aab	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      3107	ftp.c	FUNCTION_47	IF_1
0x4005ab1	          0x83e001	                              and eax, 1	      3107	ftp.c	FUNCTION_47	IF_1
0x4005ab4	            0x85c0	                           test eax, eax	      3107	ftp.c	FUNCTION_47	IF_1
0x4005ab6	            0x7412	                            je 0x4005aca	      3107	ftp.c	FUNCTION_47	IF_1
0x4005ab8	    0xc745ec040000	               mov dword [rbp - 0x14], 4	      3109	ftp.c	FUNCTION_47	IF_1	CALL_2
0x4005abf	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3110	ftp.c	FUNCTION_47	IF_1	IF_2
0x4005ac3	            0x7405	                            je 0x4005aca	      3110	ftp.c	FUNCTION_47	IF_1	IF_2
0x4005ac5	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3111	ftp.c	FUNCTION_47	IF_1	IF_2
0x4005ac8	            0xeb36	                           jmp 0x4005b00	      3111	ftp.c	FUNCTION_47	IF_1	IF_2
0x4005aca	        0x488b45f8	                mov rax, qword [rbp - 8]	      3114	ftp.c	FUNCTION_47	CALL_3
0x4005ace	          0x4889c7	                            mov rdi, rax	      3114	ftp.c	FUNCTION_47	CALL_3
0x4005ad1	      0xe800000000	                          call 0x4005ad6	      3114	ftp.c	FUNCTION_47	CALL_3
0x4005ad6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3118	ftp.c	FUNCTION_47	CALL_4
0x4005ada	      0xbe01000000	                              mov esi, 1	      3118	ftp.c	FUNCTION_47	CALL_4
0x4005adf	          0x4889c7	                            mov rdi, rax	      3118	ftp.c	FUNCTION_47	CALL_4
0x4005ae2	      0xe890b2ffff	                         call sym._state	      3118	ftp.c	FUNCTION_47	CALL_4
0x4005ae7	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3120	ftp.c	FUNCTION_47	CALL_5
0x4005aeb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3120	ftp.c	FUNCTION_47	CALL_5
0x4005aef	          0x4889d6	                            mov rsi, rdx	      3120	ftp.c	FUNCTION_47	CALL_5
0x4005af2	          0x4889c7	                            mov rdi, rax	      3120	ftp.c	FUNCTION_47	CALL_5
0x4005af5	      0xe88bfeffff	            call sym.ftp_multi_statemach	      3120	ftp.c	FUNCTION_47	CALL_5
0x4005afa	          0x8945ec	             mov dword [rbp - 0x14], eax	      3120	ftp.c	FUNCTION_47	CALL_5
0x4005afd	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3122	ftp.c	FUNCTION_47
0x4005b00	              0xc9	                                   leave	      3123	ftp.c	FUNCTION_47
0x4005b01	              0xc3	                                     ret	      3123	ftp.c	FUNCTION_47
ftp_state_port_resp	DO,0:FOR,0:functions,0:ELSE,2:SWITCH,0:CALL,6:IF,3:WHILE,0	62
0x40037c1	              0x55	                                push rbp	      2010	ftp.c	FUNCTION_33
0x40037c2	          0x4889e5	                            mov rbp, rsp	      2010	ftp.c	FUNCTION_33
0x40037c5	        0x4883ec30	                           sub rsp, 0x30	      2010	ftp.c	FUNCTION_33
0x40037c9	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2010	ftp.c	FUNCTION_33
0x40037cd	          0x8975d4	             mov dword [rbp - 0x2c], esi	      2010	ftp.c	FUNCTION_33
0x40037d0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2011	ftp.c	FUNCTION_33
0x40037d4	          0x488b00	                    mov rax, qword [rax]	      2011	ftp.c	FUNCTION_33
0x40037d7	        0x488945f0	             mov qword [rbp - 0x10], rax	      2011	ftp.c	FUNCTION_33
0x40037db	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2012	ftp.c	FUNCTION_33
0x40037df	    0x4805b0050000	                          add rax, 0x5b0	      2012	ftp.c	FUNCTION_33
0x40037e5	        0x488945f8	                mov qword [rbp - 8], rax	      2012	ftp.c	FUNCTION_33
0x40037e9	        0x488b45f8	                mov rax, qword [rbp - 8]	      2013	ftp.c	FUNCTION_33
0x40037ed	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      2013	ftp.c	FUNCTION_33
0x40037f3	          0x8945ec	             mov dword [rbp - 0x14], eax	      2013	ftp.c	FUNCTION_33
0x40037f6	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      2014	ftp.c	FUNCTION_33
0x40037fd	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2018	ftp.c	FUNCTION_33	IF_1
0x4003800	      0x2dc8000000	                           sub eax, 0xc8	      2018	ftp.c	FUNCTION_33	IF_1
0x4003805	          0x83f863	                           cmp eax, 0x63	      2018	ftp.c	FUNCTION_33	IF_1
0x4003808	            0x766a	                           jbe 0x4003874	      2018	ftp.c	FUNCTION_33	IF_1
0x400380a	        0x837dec00	               cmp dword [rbp - 0x14], 0	      2021	ftp.c	FUNCTION_33	IF_1	IF_2
0x400380e	            0x7523	                           jne 0x4003833	      2021	ftp.c	FUNCTION_33	IF_1	IF_2
0x4003810	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2022	ftp.c	FUNCTION_33	IF_1	IF_2	CALL_1
0x4003814	    0x488d35000000	                   lea rsi, [0x0400381b]	      2022	ftp.c	FUNCTION_33	IF_1	IF_2	CALL_1
0x400381b	          0x4889c7	                            mov rdi, rax	      2022	ftp.c	FUNCTION_33	IF_1	IF_2	CALL_1
0x400381e	      0xb800000000	                              mov eax, 0	      2022	ftp.c	FUNCTION_33	IF_1	IF_2	CALL_1
0x4003823	      0xe800000000	                          call 0x4003828	      2022	ftp.c	FUNCTION_33	IF_1	IF_2	CALL_1
0x4003828	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2023	ftp.c	FUNCTION_33	IF_1	IF_2
0x400382c	    0xc68065030000	               mov byte [rax + 0x365], 0	      2023	ftp.c	FUNCTION_33	IF_1	IF_2
0x4003833	        0x8345ec01	               add dword [rbp - 0x14], 1	      2025	ftp.c	FUNCTION_33	IF_1
0x4003837	        0x837dec02	               cmp dword [rbp - 0x14], 2	      2027	ftp.c	FUNCTION_33	IF_1	IF_3
0x400383b	            0x7521	                           jne 0x400385e	      2027	ftp.c	FUNCTION_33	IF_1	IF_3
0x400383d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2028	ftp.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4003841	    0x488d35000000	                   lea rsi, [0x04003848]	      2028	ftp.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4003848	          0x4889c7	                            mov rdi, rax	      2028	ftp.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x400384b	      0xb800000000	                              mov eax, 0	      2028	ftp.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4003850	      0xe800000000	                          call 0x4003855	      2028	ftp.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4003855	    0xc745e81e0000	           mov dword [rbp - 0x18], 0x1e 	      2029	ftp.c	FUNCTION_33	IF_1	IF_3
0x400385c	            0xeb53	                           jmp 0x40038b1	      2029	ftp.c	FUNCTION_33	IF_1	IF_3
0x400385e	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2033	ftp.c	FUNCTION_33	IF_1	CALL_3
0x4003861	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2033	ftp.c	FUNCTION_33	IF_1	CALL_3
0x4003865	            0x89d6	                            mov esi, edx	      2033	ftp.c	FUNCTION_33	IF_1	CALL_3
0x4003867	          0x4889c7	                            mov rdi, rax	      2033	ftp.c	FUNCTION_33	IF_1	CALL_3
0x400386a	      0xe829d9ffff	             call sym.ftp_state_use_port	      2033	ftp.c	FUNCTION_33	IF_1	CALL_3
0x400386f	          0x8945e8	             mov dword [rbp - 0x18], eax	      2033	ftp.c	FUNCTION_33	IF_1	CALL_3
0x4003872	            0xeb3d	                           jmp 0x40038b1	      2033	ftp.c	FUNCTION_33	IF_1	CALL_3
0x4003874	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2036	ftp.c	FUNCTION_33	ELSE_2	CALL_4
0x4003878	    0x488d35000000	                   lea rsi, [0x0400387f]	      2036	ftp.c	FUNCTION_33	ELSE_2	CALL_4
0x400387f	          0x4889c7	                            mov rdi, rax	      2036	ftp.c	FUNCTION_33	ELSE_2	CALL_4
0x4003882	      0xb800000000	                              mov eax, 0	      2036	ftp.c	FUNCTION_33	ELSE_2	CALL_4
0x4003887	      0xe800000000	                          call 0x400388c	      2036	ftp.c	FUNCTION_33	ELSE_2	CALL_4
0x400388c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2037	ftp.c	FUNCTION_33	ELSE_2	CALL_5
0x4003890	      0xbe00000000	                              mov esi, 0	      2037	ftp.c	FUNCTION_33	ELSE_2	CALL_5
0x4003895	          0x4889c7	                            mov rdi, rax	      2037	ftp.c	FUNCTION_33	ELSE_2	CALL_5
0x4003898	      0xe8dad4ffff	                         call sym._state	      2037	ftp.c	FUNCTION_33	ELSE_2	CALL_5
0x400389d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2038	ftp.c	FUNCTION_33	ELSE_2	CALL_6
0x40038a1	      0xbe00000000	                              mov esi, 0	      2038	ftp.c	FUNCTION_33	ELSE_2	CALL_6
0x40038a6	          0x4889c7	                            mov rdi, rax	      2038	ftp.c	FUNCTION_33	ELSE_2	CALL_6
0x40038a9	      0xe897450000	               call sym.ftp_dophase_done	      2038	ftp.c	FUNCTION_33	ELSE_2	CALL_6
0x40038ae	          0x8945e8	             mov dword [rbp - 0x18], eax	      2038	ftp.c	FUNCTION_33	ELSE_2	CALL_6
0x40038b1	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      2041	ftp.c	FUNCTION_33
0x40038b4	              0xc9	                                   leave	      2042	ftp.c	FUNCTION_33
0x40038b5	              0xc3	                                     ret	      2042	ftp.c	FUNCTION_33
ftp_state_ul_setup	DO,1:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,14:IF,8:WHILE,0	202
0x4002900	              0x55	                                push rbp	      1587	ftp.c	FUNCTION_28
0x4002901	          0x4889e5	                            mov rbp, rsp	      1587	ftp.c	FUNCTION_28
0x4002904	        0x4883ec50	                           sub rsp, 0x50	      1587	ftp.c	FUNCTION_28
0x4002908	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1587	ftp.c	FUNCTION_28
0x400290c	            0x89f0	                            mov eax, esi	      1587	ftp.c	FUNCTION_28
0x400290e	          0x8845b4	               mov byte [rbp - 0x4c], al	      1587	ftp.c	FUNCTION_28
0x4002911	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1588	ftp.c	FUNCTION_28
0x4002918	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1589	ftp.c	FUNCTION_28
0x400291c	          0x488b00	                    mov rax, qword [rax]	      1589	ftp.c	FUNCTION_28
0x400291f	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1589	ftp.c	FUNCTION_28
0x4002926	        0x488945d8	             mov qword [rbp - 0x28], rax	      1589	ftp.c	FUNCTION_28
0x400292a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1590	ftp.c	FUNCTION_28
0x400292e	          0x488b00	                    mov rax, qword [rax]	      1590	ftp.c	FUNCTION_28
0x4002931	        0x488945e0	             mov qword [rbp - 0x20], rax	      1590	ftp.c	FUNCTION_28
0x4002935	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1591	ftp.c	FUNCTION_28
0x4002939	    0x4805b0050000	                          add rax, 0x5b0	      1591	ftp.c	FUNCTION_28
0x400293f	        0x488945e8	             mov qword [rbp - 0x18], rax	      1591	ftp.c	FUNCTION_28
0x4002943	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      1592	ftp.c	FUNCTION_28
0x400294a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1594	ftp.c	FUNCTION_28	IF_1
0x400294e	    0x488b80b05000	          mov rax, qword [rax + 0x50b0] 	      1594	ftp.c	FUNCTION_28	IF_1
0x4002955	          0x4885c0	                           test rax, rax	      1594	ftp.c	FUNCTION_28	IF_1
0x4002958	            0x740b	                            je 0x4002965	      1594	ftp.c	FUNCTION_28	IF_1
0x400295a	         0xfb645b4	            movzx eax, byte [rbp - 0x4c]	      1594	ftp.c	FUNCTION_28	IF_1
0x400295e	          0x83f001	                              xor eax, 1	      1594	ftp.c	FUNCTION_28	IF_1
0x4002961	            0x84c0	                             test al, al	      1594	ftp.c	FUNCTION_28	IF_1
0x4002963	            0x751e	                           jne 0x4002983	      1594	ftp.c	FUNCTION_28	IF_1
0x4002965	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1595	ftp.c	FUNCTION_28	IF_1
0x4002969	    0x488b80b05000	          mov rax, qword [rax + 0x50b0] 	      1595	ftp.c	FUNCTION_28	IF_1
0x4002970	          0x4885c0	                           test rax, rax	      1594	ftp.c	FUNCTION_28	IF_1
0x4002973	     0xf8e93020000	                           jle 0x4002c0c	      1594	ftp.c	FUNCTION_28	IF_1
0x4002979	        0x807db400	                cmp byte [rbp - 0x4c], 0	      1595	ftp.c	FUNCTION_28	IF_1
0x400297d	     0xf8489020000	                            je 0x4002c0c	      1595	ftp.c	FUNCTION_28	IF_1
0x4002983	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1609	ftp.c	FUNCTION_28	IF_1	IF_2
0x4002987	    0x488b80b05000	          mov rax, qword [rax + 0x50b0] 	      1609	ftp.c	FUNCTION_28	IF_1	IF_2
0x400298e	          0x4885c0	                           test rax, rax	      1609	ftp.c	FUNCTION_28	IF_1	IF_2
0x4002991	            0x794d	                           jns 0x40029e0	      1609	ftp.c	FUNCTION_28	IF_1	IF_2
0x4002993	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1611	ftp.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x4002997	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      1611	ftp.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x400299e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1611	ftp.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x40029a2	    0x488d35000000	                   lea rsi, [0x040029a9]	      1611	ftp.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x40029a9	          0x4889c7	                            mov rdi, rax	      1611	ftp.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x40029ac	      0xb800000000	                              mov eax, 0	      1611	ftp.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x40029b1	      0xe800000000	                          call 0x40029b6	      1611	ftp.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x40029b6	          0x8945cc	             mov dword [rbp - 0x34], eax	      1611	ftp.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x40029b9	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1611	ftp.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x40029bd	            0x7408	                            je 0x40029c7	      1611	ftp.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x40029bf	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1611	ftp.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x40029c2	      0xe9a5020000	                           jmp 0x4002c6c	      1611	ftp.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x40029c7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1612	ftp.c	FUNCTION_28	IF_1	IF_2	CALL_2
0x40029cb	      0xbe19000000	                           mov esi, 0x19	      1612	ftp.c	FUNCTION_28	IF_1	IF_2	CALL_2
0x40029d0	          0x4889c7	                            mov rdi, rax	      1612	ftp.c	FUNCTION_28	IF_1	IF_2	CALL_2
0x40029d3	      0xe89fe3ffff	                         call sym._state	      1612	ftp.c	FUNCTION_28	IF_1	IF_2	CALL_2
0x40029d8	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1613	ftp.c	FUNCTION_28	IF_1	IF_2
0x40029db	      0xe98c020000	                           jmp 0x4002c6c	      1613	ftp.c	FUNCTION_28	IF_1	IF_2
0x40029e0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1617	ftp.c	FUNCTION_28	IF_1
0x40029e4	    0xc68095070000	               mov byte [rax + 0x795], 1	      1617	ftp.c	FUNCTION_28	IF_1
0x40029eb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1620	ftp.c	FUNCTION_28	IF_1	IF_3
0x40029ef	    0x488b80680400	           mov rax, qword [rax + 0x468] 	      1620	ftp.c	FUNCTION_28	IF_1	IF_3
0x40029f6	          0x4885c0	                           test rax, rax	      1620	ftp.c	FUNCTION_28	IF_1	IF_3
0x40029f9	            0x7450	                            je 0x4002a4b	      1620	ftp.c	FUNCTION_28	IF_1	IF_3
0x40029fb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1621	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_3
0x40029ff	      0xbe01000000	                              mov esi, 1	      1621	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_3
0x4002a04	          0x4889c7	                            mov rdi, rax	      1621	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_3
0x4002a07	      0xe800000000	                          call 0x4002a0c	      1621	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_3
0x4002a0c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_4
0x4002a10	    0x488b80680400	           mov rax, qword [rax + 0x468] 	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_4
0x4002a17	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_4
0x4002a1b	    0x488bb2b05000	          mov rsi, qword [rdx + 0x50b0] 	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_4
0x4002a22	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_4
0x4002a26	    0x488b8a700400	           mov rcx, qword [rdx + 0x470] 	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_4
0x4002a2d	      0xba00000000	                              mov edx, 0	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_4
0x4002a32	          0x4889cf	                            mov rdi, rcx	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_4
0x4002a35	            0xffd0	                                call rax	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_4
0x4002a37	          0x8945c8	             mov dword [rbp - 0x38], eax	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_4
0x4002a3a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1624	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_5
0x4002a3e	      0xbe00000000	                              mov esi, 0	      1624	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_5
0x4002a43	          0x4889c7	                            mov rdi, rax	      1624	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_5
0x4002a46	      0xe800000000	                          call 0x4002a4b	      1624	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_5
0x4002a4b	        0x837dc800	               cmp dword [rbp - 0x38], 0	      1627	ftp.c	FUNCTION_28	IF_1	IF_4
0x4002a4f	     0xf8401010000	                            je 0x4002b56	      1627	ftp.c	FUNCTION_28	IF_1	IF_4
0x4002a55	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1628	ftp.c	FUNCTION_28	IF_1	IF_4
0x4002a5d	        0x837dc802	               cmp dword [rbp - 0x38], 2	      1629	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5
0x4002a61	            0x7422	                            je 0x4002a85	      1629	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5
0x4002a63	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1630	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5	CALL_6
0x4002a67	    0x488d35000000	                   lea rsi, [0x04002a6e]	      1630	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5	CALL_6
0x4002a6e	          0x4889c7	                            mov rdi, rax	      1630	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5	CALL_6
0x4002a71	      0xb800000000	                              mov eax, 0	      1630	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5	CALL_6
0x4002a76	      0xe800000000	                          call 0x4002a7b	      1630	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5	CALL_6
0x4002a7b	      0xb81f000000	                           mov eax, 0x1f	      1631	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5
0x4002a80	      0xe9e7010000	                           jmp 0x4002c6c	      1631	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5
0x4002a85	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1636	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002a89	    0x488b80b05000	          mov rax, qword [rax + 0x50b0] 	      1636	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002a90	        0x482b45d0	             sub rax, qword [rbp - 0x30]	      1636	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002a94	          0x4889c2	                            mov rdx, rax	      1636	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002a97	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1636	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002a9b	    0x488b80500700	           mov rax, qword [rax + 0x750] 	      1636	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002aa2	          0x4839c2	                            cmp rdx, rax	      1637	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002aa5	            0x7e0d	                           jle 0x4002ab4	      1637	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002aa7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1637	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002aab	    0x488b80500700	           mov rax, qword [rax + 0x750] 	      1637	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002ab2	            0xeb17	                           jmp 0x4002acb	      1637	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002ab4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1638	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	CALL_7
0x4002ab8	    0x488b80b05000	          mov rax, qword [rax + 0x50b0] 	      1638	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	CALL_7
0x4002abf	        0x482b45d0	             sub rax, qword [rbp - 0x30]	      1638	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	CALL_7
0x4002ac3	          0x4889c7	                            mov rdi, rax	      1637	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002ac6	      0xe800000000	                          call 0x4002acb	      1637	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002acb	        0x488945f0	             mov qword [rbp - 0x10], rax	      1635	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002acf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1641	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	CALL_8
0x4002ad3	    0x488b80e85000	          mov rax, qword [rax + 0x50e8] 	      1641	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	CALL_8
0x4002ada	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1641	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	CALL_8
0x4002ade	    0x488b8af05000	          mov rcx, qword [rdx + 0x50f0] 	      1641	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	CALL_8
0x4002ae5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1641	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	CALL_8
0x4002ae9	    0x488bbaa80c00	           mov rdi, qword [rdx + 0xca8] 	      1641	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	CALL_8
0x4002af0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1640	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002af4	      0xbe01000000	                              mov esi, 1	      1640	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002af9	            0xffd0	                                call rax	      1640	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002afb	        0x488945f8	                mov qword [rbp - 8], rax	      1640	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002aff	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1644	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002b03	        0x488b45f8	                mov rax, qword [rbp - 8]	      1644	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002b07	          0x4801d0	                            add rax, rdx	      1644	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002b0a	        0x488945d0	             mov qword [rbp - 0x30], rax	      1644	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002b0e	      0x48837df800	                  cmp qword [rbp - 8], 0	      1645	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6
0x4002b13	            0x740a	                            je 0x4002b1f	      1645	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6
0x4002b15	        0x488b45f8	                mov rax, qword [rbp - 8]	      1645	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6
0x4002b19	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1645	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6
0x4002b1d	            0x7622	                           jbe 0x4002b41	      1645	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6
0x4002b1f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1648	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6	CALL_9
0x4002b23	    0x488d35000000	                   lea rsi, [0x04002b2a]	      1648	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6	CALL_9
0x4002b2a	          0x4889c7	                            mov rdi, rax	      1648	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6	CALL_9
0x4002b2d	      0xb800000000	                              mov eax, 0	      1648	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6	CALL_9
0x4002b32	      0xe800000000	                          call 0x4002b37	      1648	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6	CALL_9
0x4002b37	      0xb81f000000	                           mov eax, 0x1f	      1649	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6
0x4002b3c	      0xe92b010000	                           jmp 0x4002c6c	      1649	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6
0x4002b41	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1651	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002b45	    0x488b80b05000	          mov rax, qword [rax + 0x50b0] 	      1651	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002b4c	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1651	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002b50	     0xf8f2fffffff	                            jg 0x4002a85	      1651	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002b56	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1654	ftp.c	FUNCTION_28	IF_1	IF_7
0x4002b5a	    0x488b80d05000	          mov rax, qword [rax + 0x50d0] 	      1654	ftp.c	FUNCTION_28	IF_1	IF_7
0x4002b61	          0x4885c0	                           test rax, rax	      1654	ftp.c	FUNCTION_28	IF_1	IF_7
0x4002b64	     0xf8ea2000000	                           jle 0x4002c0c	      1654	ftp.c	FUNCTION_28	IF_1	IF_7
0x4002b6a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1655	ftp.c	FUNCTION_28	IF_1	IF_7
0x4002b6e	    0x488b90d05000	          mov rdx, qword [rax + 0x50d0] 	      1655	ftp.c	FUNCTION_28	IF_1	IF_7
0x4002b75	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1655	ftp.c	FUNCTION_28	IF_1	IF_7
0x4002b79	    0x488b80b05000	          mov rax, qword [rax + 0x50b0] 	      1655	ftp.c	FUNCTION_28	IF_1	IF_7
0x4002b80	          0x4829c2	                            sub rdx, rax	      1655	ftp.c	FUNCTION_28	IF_1	IF_7
0x4002b83	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1655	ftp.c	FUNCTION_28	IF_1	IF_7
0x4002b87	    0x488990d05000	          mov qword [rax + 0x50d0], rdx 	      1655	ftp.c	FUNCTION_28	IF_1	IF_7
0x4002b8e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1657	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4002b92	    0x488b80d05000	          mov rax, qword [rax + 0x50d0] 	      1657	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4002b99	          0x4885c0	                           test rax, rax	      1657	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4002b9c	            0x7f6e	                            jg 0x4002c0c	      1657	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4002b9e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1658	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_10
0x4002ba2	    0x488d35000000	                   lea rsi, [0x04002ba9]	      1658	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_10
0x4002ba9	          0x4889c7	                            mov rdi, rax	      1658	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_10
0x4002bac	      0xb800000000	                              mov eax, 0	      1658	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_10
0x4002bb1	      0xe800000000	                          call 0x4002bb6	      1658	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_10
0x4002bb6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_11
0x4002bba	        0x4883ec08	                              sub rsp, 8	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_11
0x4002bbe	            0x6a00	                                  push 0	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_11
0x4002bc0	    0x41b9ffffffff	                     mov r9d, 0xffffffff	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_11
0x4002bc6	    0x41b800000000	                              mov r8d, 0	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_11
0x4002bcc	      0xb900000000	                              mov ecx, 0	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_11
0x4002bd1	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_11
0x4002bd8	      0xbeffffffff	                     mov esi, 0xffffffff	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_11
0x4002bdd	          0x4889c7	                            mov rdi, rax	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_11
0x4002be0	      0xe800000000	                          call 0x4002be5	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_11
0x4002be5	        0x4883c410	                           add rsp, 0x10	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_11
0x4002be9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1665	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4002bed	    0xc74018020000	               mov dword [rax + 0x18], 2	      1665	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4002bf4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1667	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_12
0x4002bf8	      0xbe00000000	                              mov esi, 0	      1667	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_12
0x4002bfd	          0x4889c7	                            mov rdi, rax	      1667	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_12
0x4002c00	      0xe872e1ffff	                         call sym._state	      1667	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_12
0x4002c05	      0xb800000000	                              mov eax, 0	      1668	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4002c0a	            0xeb60	                           jmp 0x4002c6c	      1668	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4002c0c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1674	ftp.c	FUNCTION_28	CALL_13
0x4002c10	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      1674	ftp.c	FUNCTION_28	CALL_13
0x4002c17	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1674	ftp.c	FUNCTION_28	CALL_13
0x4002c1b	     0xfb680950700	          movzx eax, byte [rax + 0x795] 	      1674	ftp.c	FUNCTION_28	CALL_13
0x4002c22	            0x84c0	                             test al, al	      1674	ftp.c	FUNCTION_28	CALL_13
0x4002c24	            0x7409	                            je 0x4002c2f	      1674	ftp.c	FUNCTION_28	CALL_13
0x4002c26	    0x488d05000000	                   lea rax, [0x04002c2d]	      1674	ftp.c	FUNCTION_28	CALL_13
0x4002c2d	            0xeb07	                           jmp 0x4002c36	      1674	ftp.c	FUNCTION_28	CALL_13
0x4002c2f	    0x488d05000000	                   lea rax, [0x04002c36]	      1674	ftp.c	FUNCTION_28	CALL_13
0x4002c36	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1674	ftp.c	FUNCTION_28	CALL_13
0x4002c3a	          0x4889c6	                            mov rsi, rax	      1674	ftp.c	FUNCTION_28	CALL_13
0x4002c3d	          0x4889cf	                            mov rdi, rcx	      1674	ftp.c	FUNCTION_28	CALL_13
0x4002c40	      0xb800000000	                              mov eax, 0	      1674	ftp.c	FUNCTION_28	CALL_13
0x4002c45	      0xe800000000	                          call 0x4002c4a	      1674	ftp.c	FUNCTION_28	CALL_13
0x4002c4a	          0x8945cc	             mov dword [rbp - 0x34], eax	      1674	ftp.c	FUNCTION_28	CALL_13
0x4002c4d	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1674	ftp.c	FUNCTION_28	CALL_13
0x4002c51	            0x7405	                            je 0x4002c58	      1674	ftp.c	FUNCTION_28	CALL_13
0x4002c53	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1674	ftp.c	FUNCTION_28	CALL_13
0x4002c56	            0xeb14	                           jmp 0x4002c6c	      1674	ftp.c	FUNCTION_28	CALL_13
0x4002c58	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1677	ftp.c	FUNCTION_28	CALL_14
0x4002c5c	      0xbe21000000	                           mov esi, 0x21	      1677	ftp.c	FUNCTION_28	CALL_14
0x4002c61	          0x4889c7	                            mov rdi, rax	      1677	ftp.c	FUNCTION_28	CALL_14
0x4002c64	      0xe80ee1ffff	                         call sym._state	      1677	ftp.c	FUNCTION_28	CALL_14
0x4002c69	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1679	ftp.c	FUNCTION_28
0x4002c6c	              0xc9	                                   leave	      1680	ftp.c	FUNCTION_28
0x4002c6d	              0xc3	                                     ret	      1680	ftp.c	FUNCTION_28
ftp_state_user_resp	DO,0:FOR,0:functions,0:ELSE,5:SWITCH,0:CALL,9:IF,5:WHILE,0	130
0x400494b	              0x55	                                push rbp	      2534	ftp.c	FUNCTION_42
0x400494c	          0x4889e5	                            mov rbp, rsp	      2534	ftp.c	FUNCTION_42
0x400494f	        0x4883ec30	                           sub rsp, 0x30	      2534	ftp.c	FUNCTION_42
0x4004953	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2534	ftp.c	FUNCTION_42
0x4004957	          0x8975d4	             mov dword [rbp - 0x2c], esi	      2534	ftp.c	FUNCTION_42
0x400495a	          0x8955d0	             mov dword [rbp - 0x30], edx	      2534	ftp.c	FUNCTION_42
0x400495d	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      2535	ftp.c	FUNCTION_42
0x4004964	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2536	ftp.c	FUNCTION_42
0x4004968	          0x488b00	                    mov rax, qword [rax]	      2536	ftp.c	FUNCTION_42
0x400496b	        0x488945e8	             mov qword [rbp - 0x18], rax	      2536	ftp.c	FUNCTION_42
0x400496f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2537	ftp.c	FUNCTION_42
0x4004973	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      2537	ftp.c	FUNCTION_42
0x400497a	        0x488945f0	             mov qword [rbp - 0x10], rax	      2537	ftp.c	FUNCTION_42
0x400497e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2538	ftp.c	FUNCTION_42
0x4004982	    0x4805b0050000	                          add rax, 0x5b0	      2538	ftp.c	FUNCTION_42
0x4004988	        0x488945f8	                mov qword [rbp - 8], rax	      2538	ftp.c	FUNCTION_42
0x400498c	    0x817dd44b0100	          cmp dword [rbp - 0x2c], 0x14b 	      2542	ftp.c	FUNCTION_42	IF_1
0x4004993	            0x756f	                           jne 0x4004a04	      2542	ftp.c	FUNCTION_42	IF_1
0x4004995	        0x488b45f8	                mov rax, qword [rbp - 8]	      2542	ftp.c	FUNCTION_42	IF_1
0x4004999	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      2542	ftp.c	FUNCTION_42	IF_1
0x400499f	          0x83f803	                              cmp eax, 3	      2542	ftp.c	FUNCTION_42	IF_1
0x40049a2	            0x7560	                           jne 0x4004a04	      2542	ftp.c	FUNCTION_42	IF_1
0x40049a4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2545	ftp.c	FUNCTION_42	IF_1	CALL_1
0x40049a8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2545	ftp.c	FUNCTION_42	IF_1	CALL_1
0x40049ac	          0x4885c0	                           test rax, rax	      2545	ftp.c	FUNCTION_42	IF_1	CALL_1
0x40049af	            0x740a	                            je 0x40049bb	      2545	ftp.c	FUNCTION_42	IF_1	CALL_1
0x40049b1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2545	ftp.c	FUNCTION_42	IF_1	CALL_1
0x40049b5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2545	ftp.c	FUNCTION_42	IF_1	CALL_1
0x40049b9	            0xeb07	                           jmp 0x40049c2	      2545	ftp.c	FUNCTION_42	IF_1	CALL_1
0x40049bb	    0x488d05000000	                   lea rax, [0x040049c2]	      2545	ftp.c	FUNCTION_42	IF_1	CALL_1
0x40049c2	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2545	ftp.c	FUNCTION_42	IF_1	CALL_1
0x40049c6	          0x4889c2	                            mov rdx, rax	      2545	ftp.c	FUNCTION_42	IF_1	CALL_1
0x40049c9	    0x488d35000000	                   lea rsi, [0x040049d0]	      2545	ftp.c	FUNCTION_42	IF_1	CALL_1
0x40049d0	          0x4889cf	                            mov rdi, rcx	      2545	ftp.c	FUNCTION_42	IF_1	CALL_1
0x40049d3	      0xb800000000	                              mov eax, 0	      2545	ftp.c	FUNCTION_42	IF_1	CALL_1
0x40049d8	      0xe800000000	                          call 0x40049dd	      2545	ftp.c	FUNCTION_42	IF_1	CALL_1
0x40049dd	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2545	ftp.c	FUNCTION_42	IF_1	CALL_1
0x40049e0	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2545	ftp.c	FUNCTION_42	IF_1	CALL_1
0x40049e4	            0x7408	                            je 0x40049ee	      2545	ftp.c	FUNCTION_42	IF_1	CALL_1
0x40049e6	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2545	ftp.c	FUNCTION_42	IF_1	CALL_1
0x40049e9	      0xe971010000	                           jmp 0x4004b5f	      2545	ftp.c	FUNCTION_42	IF_1	CALL_1
0x40049ee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2546	ftp.c	FUNCTION_42	IF_1	CALL_2
0x40049f2	      0xbe04000000	                              mov esi, 4	      2546	ftp.c	FUNCTION_42	IF_1	CALL_2
0x40049f7	          0x4889c7	                            mov rdi, rax	      2546	ftp.c	FUNCTION_42	IF_1	CALL_2
0x40049fa	      0xe878c3ffff	                         call sym._state	      2546	ftp.c	FUNCTION_42	IF_1	CALL_2
0x40049ff	      0xe958010000	                           jmp 0x4004b5c	      2546	ftp.c	FUNCTION_42	IF_1	CALL_2
0x4004a04	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2548	ftp.c	FUNCTION_42	ELSE_1	IF_2
0x4004a07	      0x2dc8000000	                           sub eax, 0xc8	      2548	ftp.c	FUNCTION_42	ELSE_1	IF_2
0x4004a0c	          0x83f863	                           cmp eax, 0x63	      2548	ftp.c	FUNCTION_42	ELSE_1	IF_2
0x4004a0f	            0x7714	                            ja 0x4004a25	      2548	ftp.c	FUNCTION_42	ELSE_1	IF_2
0x4004a11	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2551	ftp.c	FUNCTION_42	ELSE_1	IF_2	CALL_3
0x4004a15	          0x4889c7	                            mov rdi, rax	      2551	ftp.c	FUNCTION_42	ELSE_1	IF_2	CALL_3
0x4004a18	      0xe8b4feffff	             call sym.ftp_state_loggedin	      2551	ftp.c	FUNCTION_42	ELSE_1	IF_2	CALL_3
0x4004a1d	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2551	ftp.c	FUNCTION_42	ELSE_1	IF_2	CALL_3
0x4004a20	      0xe937010000	                           jmp 0x4004b5c	      2551	ftp.c	FUNCTION_42	ELSE_1	IF_2	CALL_3
0x4004a25	    0x817dd44c0100	          cmp dword [rbp - 0x2c], 0x14c 	      2553	ftp.c	FUNCTION_42	ELSE_2	IF_3
0x4004a2c	            0x757e	                           jne 0x4004aac	      2553	ftp.c	FUNCTION_42	ELSE_2	IF_3
0x4004a2e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2554	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a32	    0x488b80400800	           mov rax, qword [rax + 0x840] 	      2554	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a39	          0x4885c0	                           test rax, rax	      2554	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a3c	            0x744a	                            je 0x4004a88	      2554	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a3e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4	CALL_4
0x4004a42	    0x488b90400800	           mov rdx, qword [rax + 0x840] 	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4	CALL_4
0x4004a49	        0x488b45f8	                mov rax, qword [rbp - 8]	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4	CALL_4
0x4004a4d	    0x488d35000000	                   lea rsi, [0x04004a54]	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4	CALL_4
0x4004a54	          0x4889c7	                            mov rdi, rax	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4	CALL_4
0x4004a57	      0xb800000000	                              mov eax, 0	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4	CALL_4
0x4004a5c	      0xe800000000	                          call 0x4004a61	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4	CALL_4
0x4004a61	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4	CALL_4
0x4004a64	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4	CALL_4
0x4004a68	            0x7408	                            je 0x4004a72	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4	CALL_4
0x4004a6a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4	CALL_4
0x4004a6d	      0xe9ed000000	                           jmp 0x4004b5f	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4	CALL_4
0x4004a72	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2556	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4	CALL_5
0x4004a76	      0xbe05000000	                              mov esi, 5	      2556	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4	CALL_5
0x4004a7b	          0x4889c7	                            mov rdi, rax	      2556	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4	CALL_5
0x4004a7e	      0xe8f4c2ffff	                         call sym._state	      2556	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4	CALL_5
0x4004a83	      0xe9d4000000	                           jmp 0x4004b5c	      2556	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4	CALL_5
0x4004a88	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2559	ftp.c	FUNCTION_42	ELSE_2	IF_3	ELSE_3	CALL_6
0x4004a8c	    0x488d35000000	                   lea rsi, [0x04004a93]	      2559	ftp.c	FUNCTION_42	ELSE_2	IF_3	ELSE_3	CALL_6
0x4004a93	          0x4889c7	                            mov rdi, rax	      2559	ftp.c	FUNCTION_42	ELSE_2	IF_3	ELSE_3	CALL_6
0x4004a96	      0xb800000000	                              mov eax, 0	      2559	ftp.c	FUNCTION_42	ELSE_2	IF_3	ELSE_3	CALL_6
0x4004a9b	      0xe800000000	                          call 0x4004aa0	      2559	ftp.c	FUNCTION_42	ELSE_2	IF_3	ELSE_3	CALL_6
0x4004aa0	    0xc745e4430000	           mov dword [rbp - 0x1c], 0x43 	      2560	ftp.c	FUNCTION_42	ELSE_2	IF_3	ELSE_3
0x4004aa7	      0xe9b0000000	                           jmp 0x4004b5c	      2560	ftp.c	FUNCTION_42	ELSE_2	IF_3	ELSE_3
0x4004aac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2569	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004ab0	          0x488b00	                    mov rax, qword [rax]	      2569	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004ab3	    0x488b80480800	           mov rax, qword [rax + 0x848] 	      2569	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004aba	          0x4885c0	                           test rax, rax	      2569	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004abd	            0x747b	                            je 0x4004b3a	      2569	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004abf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2570	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004ac3	          0x488b00	                    mov rax, qword [rax]	      2570	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004ac6	     0xfb680785000	         movzx eax, byte [rax + 0x5078] 	      2570	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004acd	          0x83f001	                              xor eax, 1	      2570	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004ad0	            0x84c0	                             test al, al	      2569	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004ad2	            0x7466	                            je 0x4004b3a	      2569	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004ad4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5	CALL_7
0x4004ad8	          0x488b00	                    mov rax, qword [rax]	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5	CALL_7
0x4004adb	    0x488b80480800	           mov rax, qword [rax + 0x848] 	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5	CALL_7
0x4004ae2	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5	CALL_7
0x4004ae6	    0x488d8ab00500	                  lea rcx, [rdx + 0x5b0]	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5	CALL_7
0x4004aed	          0x4889c2	                            mov rdx, rax	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5	CALL_7
0x4004af0	    0x488d35000000	                   lea rsi, [0x04004af7]	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5	CALL_7
0x4004af7	          0x4889cf	                            mov rdi, rcx	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5	CALL_7
0x4004afa	      0xb800000000	                              mov eax, 0	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5	CALL_7
0x4004aff	      0xe800000000	                          call 0x4004b04	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5	CALL_7
0x4004b04	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5	CALL_7
0x4004b07	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5	CALL_7
0x4004b0b	            0x7405	                            je 0x4004b12	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5	CALL_7
0x4004b0d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5	CALL_7
0x4004b10	            0xeb4d	                           jmp 0x4004b5f	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5	CALL_7
0x4004b12	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2574	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004b16	          0x488b00	                    mov rax, qword [rax]	      2574	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004b19	    0xc68078500000	              mov byte [rax + 0x5078], 1	      2574	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004b20	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2575	ftp.c	FUNCTION_42	ELSE_4	IF_5	CALL_8
0x4004b24	      0xbe03000000	                              mov esi, 3	      2575	ftp.c	FUNCTION_42	ELSE_4	IF_5	CALL_8
0x4004b29	          0x4889c7	                            mov rdi, rax	      2575	ftp.c	FUNCTION_42	ELSE_4	IF_5	CALL_8
0x4004b2c	      0xe846c2ffff	                         call sym._state	      2575	ftp.c	FUNCTION_42	ELSE_4	IF_5	CALL_8
0x4004b31	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      2576	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004b38	            0xeb22	                           jmp 0x4004b5c	      2576	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004b3a	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2579	ftp.c	FUNCTION_42	ELSE_4	ELSE_5	CALL_9
0x4004b3d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2579	ftp.c	FUNCTION_42	ELSE_4	ELSE_5	CALL_9
0x4004b41	    0x488d35000000	                   lea rsi, [0x04004b48]	      2579	ftp.c	FUNCTION_42	ELSE_4	ELSE_5	CALL_9
0x4004b48	          0x4889c7	                            mov rdi, rax	      2579	ftp.c	FUNCTION_42	ELSE_4	ELSE_5	CALL_9
0x4004b4b	      0xb800000000	                              mov eax, 0	      2579	ftp.c	FUNCTION_42	ELSE_4	ELSE_5	CALL_9
0x4004b50	      0xe800000000	                          call 0x4004b55	      2579	ftp.c	FUNCTION_42	ELSE_4	ELSE_5	CALL_9
0x4004b55	    0xc745e4430000	           mov dword [rbp - 0x1c], 0x43 	      2580	ftp.c	FUNCTION_42	ELSE_4	ELSE_5
0x4004b5c	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2583	ftp.c	FUNCTION_42
0x4004b5f	              0xc9	                                   leave	      2584	ftp.c	FUNCTION_42
0x4004b60	              0xc3	                                     ret	      2584	ftp.c	FUNCTION_42
AcceptServerConnect	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,10:IF,4:WHILE,0	97
0x40002ac	              0x55	                                push rbp	       279	ftp.c	FUNCTION_4
0x40002ad	          0x4889e5	                            mov rbp, rsp	       279	ftp.c	FUNCTION_4
0x40002b0	    0x4881ecc00000	                           sub rsp, 0xc0	       279	ftp.c	FUNCTION_4
0x40002b7	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	       279	ftp.c	FUNCTION_4
0x40002be	    0x64488b042528	                mov rax, qword fs:[0x28]	       279	ftp.c	FUNCTION_4
0x40002c7	        0x488945f8	                mov qword [rbp - 8], rax	       279	ftp.c	FUNCTION_4
0x40002cb	            0x31c0	                            xor eax, eax	       279	ftp.c	FUNCTION_4
0x40002cd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       280	ftp.c	FUNCTION_4
0x40002d4	          0x488b00	                    mov rax, qword [rax]	       280	ftp.c	FUNCTION_4
0x40002d7	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       280	ftp.c	FUNCTION_4
0x40002de	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       281	ftp.c	FUNCTION_4
0x40002e5	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	       281	ftp.c	FUNCTION_4
0x40002eb	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	       281	ftp.c	FUNCTION_4
0x40002f1	    0xc7855cffffff	     mov dword [rbp - 0xa4], 0xffffffff 	       282	ftp.c	FUNCTION_4
0x40002fb	    0xc78558ffffff	           mov dword [rbp - 0xa8], 0x80 	       288	ftp.c	FUNCTION_4
0x4000305	    0x488d9558ffff	                   lea rdx, [rbp - 0xa8]	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x400030c	    0x488d8d70ffff	                   lea rcx, [rbp - 0x90]	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x4000313	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x4000319	          0x4889ce	                            mov rsi, rcx	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x400031c	            0x89c7	                            mov edi, eax	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x400031e	      0xe800000000	                          call 0x4000323	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x4000323	            0x85c0	                           test eax, eax	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x4000325	            0x752e	                           jne 0x4000355	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x4000327	    0xc78558ffffff	           mov dword [rbp - 0xa8], 0x80 	       291	ftp.c	FUNCTION_4	IF_1
0x4000331	    0x488d9558ffff	                   lea rdx, [rbp - 0xa8]	       293	ftp.c	FUNCTION_4	IF_1	CALL_2
0x4000338	    0x488d8d70ffff	                   lea rcx, [rbp - 0x90]	       293	ftp.c	FUNCTION_4	IF_1	CALL_2
0x400033f	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	       293	ftp.c	FUNCTION_4	IF_1	CALL_2
0x4000345	          0x4889ce	                            mov rsi, rcx	       293	ftp.c	FUNCTION_4	IF_1	CALL_2
0x4000348	            0x89c7	                            mov edi, eax	       293	ftp.c	FUNCTION_4	IF_1	CALL_2
0x400034a	      0xe800000000	                          call 0x400034f	       293	ftp.c	FUNCTION_4	IF_1	CALL_2
0x400034f	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	       293	ftp.c	FUNCTION_4	IF_1	CALL_2
0x4000355	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	       295	ftp.c	FUNCTION_4	CALL_3
0x400035b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       295	ftp.c	FUNCTION_4	CALL_3
0x4000362	            0x89d6	                            mov esi, edx	       295	ftp.c	FUNCTION_4	CALL_3
0x4000364	          0x4889c7	                            mov rdi, rax	       295	ftp.c	FUNCTION_4	CALL_3
0x4000367	      0xe800000000	                          call 0x400036c	       295	ftp.c	FUNCTION_4	CALL_3
0x400036c	    0x83bd5cffffff	cmp dword [rbp - 0xa4], 0xffffffffffffffff	       297	ftp.c	FUNCTION_4	IF_2
0x4000373	            0x7525	                           jne 0x400039a	       297	ftp.c	FUNCTION_4	IF_2
0x4000375	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       298	ftp.c	FUNCTION_4	IF_2	CALL_4
0x400037c	    0x488d35000000	                   lea rsi, [0x04000383]	       298	ftp.c	FUNCTION_4	IF_2	CALL_4
0x4000383	          0x4889c7	                            mov rdi, rax	       298	ftp.c	FUNCTION_4	IF_2	CALL_4
0x4000386	      0xb800000000	                              mov eax, 0	       298	ftp.c	FUNCTION_4	IF_2	CALL_4
0x400038b	      0xe800000000	                          call 0x4000390	       298	ftp.c	FUNCTION_4	IF_2	CALL_4
0x4000390	      0xb81e000000	                           mov eax, 0x1e	       299	ftp.c	FUNCTION_4	IF_2
0x4000395	      0xe9fb000000	                           jmp 0x4000495	       299	ftp.c	FUNCTION_4	IF_2
0x400039a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       301	ftp.c	FUNCTION_4	CALL_5
0x40003a1	    0x488d35000000	                   lea rsi, [0x040003a8]	       301	ftp.c	FUNCTION_4	CALL_5
0x40003a8	          0x4889c7	                            mov rdi, rax	       301	ftp.c	FUNCTION_4	CALL_5
0x40003ab	      0xb800000000	                              mov eax, 0	       301	ftp.c	FUNCTION_4	CALL_5
0x40003b0	      0xe800000000	                          call 0x40003b5	       301	ftp.c	FUNCTION_4	CALL_5
0x40003b5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       304	ftp.c	FUNCTION_4
0x40003bc	    0xc6805c030000	               mov byte [rax + 0x35c], 0	       304	ftp.c	FUNCTION_4
0x40003c3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       306	ftp.c	FUNCTION_4
0x40003ca	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	       306	ftp.c	FUNCTION_4
0x40003d0	    0x89905c020000	            mov dword [rax + 0x25c], edx	       306	ftp.c	FUNCTION_4
0x40003d6	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       307	ftp.c	FUNCTION_4	CALL_6
0x40003dc	      0xbe01000000	                              mov esi, 1	       307	ftp.c	FUNCTION_4	CALL_6
0x40003e1	            0x89c7	                            mov edi, eax	       307	ftp.c	FUNCTION_4	CALL_6
0x40003e3	      0xe800000000	                          call 0x40003e8	       307	ftp.c	FUNCTION_4	CALL_6
0x40003e8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       308	ftp.c	FUNCTION_4
0x40003ef	    0xc68069020000	               mov byte [rax + 0x269], 1	       308	ftp.c	FUNCTION_4
0x40003f6	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       310	ftp.c	FUNCTION_4	IF_3
0x40003fd	    0x488b80d00200	           mov rax, qword [rax + 0x2d0] 	       310	ftp.c	FUNCTION_4	IF_3
0x4000404	          0x4885c0	                           test rax, rax	       310	ftp.c	FUNCTION_4	IF_3
0x4000407	     0xf8483000000	                            je 0x4000490	       310	ftp.c	FUNCTION_4	IF_3
0x400040d	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	       311	ftp.c	FUNCTION_4	IF_3
0x4000417	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       314	ftp.c	FUNCTION_4	IF_3	CALL_7
0x400041e	      0xbe01000000	                              mov esi, 1	       314	ftp.c	FUNCTION_4	IF_3	CALL_7
0x4000423	          0x4889c7	                            mov rdi, rax	       314	ftp.c	FUNCTION_4	IF_3	CALL_7
0x4000426	      0xe800000000	                          call 0x400042b	       314	ftp.c	FUNCTION_4	IF_3	CALL_7
0x400042b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       315	ftp.c	FUNCTION_4	IF_3	CALL_8
0x4000432	    0x488b80d00200	           mov rax, qword [rax + 0x2d0] 	       315	ftp.c	FUNCTION_4	IF_3	CALL_8
0x4000439	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       315	ftp.c	FUNCTION_4	IF_3	CALL_8
0x4000440	    0x488b8ad80200	           mov rcx, qword [rdx + 0x2d8] 	       315	ftp.c	FUNCTION_4	IF_3	CALL_8
0x4000447	    0x8bb55cffffff	             mov esi, dword [rbp - 0xa4]	       315	ftp.c	FUNCTION_4	IF_3	CALL_8
0x400044d	      0xba01000000	                              mov edx, 1	       315	ftp.c	FUNCTION_4	IF_3	CALL_8
0x4000452	          0x4889cf	                            mov rdi, rcx	       315	ftp.c	FUNCTION_4	IF_3	CALL_8
0x4000455	            0xffd0	                                call rax	       315	ftp.c	FUNCTION_4	IF_3	CALL_8
0x4000457	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	       315	ftp.c	FUNCTION_4	IF_3	CALL_8
0x400045d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       318	ftp.c	FUNCTION_4	IF_3	CALL_9
0x4000464	      0xbe00000000	                              mov esi, 0	       318	ftp.c	FUNCTION_4	IF_3	CALL_9
0x4000469	          0x4889c7	                            mov rdi, rax	       318	ftp.c	FUNCTION_4	IF_3	CALL_9
0x400046c	      0xe800000000	                          call 0x4000471	       318	ftp.c	FUNCTION_4	IF_3	CALL_9
0x4000471	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	       320	ftp.c	FUNCTION_4	IF_3	IF_4
0x4000478	            0x7416	                            je 0x4000490	       320	ftp.c	FUNCTION_4	IF_3	IF_4
0x400047a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       321	ftp.c	FUNCTION_4	IF_3	IF_4	CALL_10
0x4000481	          0x4889c7	                            mov rdi, rax	       321	ftp.c	FUNCTION_4	IF_3	IF_4	CALL_10
0x4000484	      0xe889fcffff	          call sym.close_secondarysocket	       321	ftp.c	FUNCTION_4	IF_3	IF_4	CALL_10
0x4000489	      0xb82a000000	                           mov eax, 0x2a	       322	ftp.c	FUNCTION_4	IF_3	IF_4
0x400048e	            0xeb05	                           jmp 0x4000495	       322	ftp.c	FUNCTION_4	IF_3	IF_4
0x4000490	      0xb800000000	                              mov eax, 0	       326	ftp.c	FUNCTION_4
0x4000495	        0x488b4df8	                mov rcx, qword [rbp - 8]	       328	ftp.c	FUNCTION_4
0x4000499	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       328	ftp.c	FUNCTION_4
0x40004a2	            0x7405	                            je 0x40004a9	       328	ftp.c	FUNCTION_4
0x40004a4	      0xe800000000	                          call 0x40004a9	       328	ftp.c	FUNCTION_4
0x40004a9	              0xc9	                                   leave	       328	ftp.c	FUNCTION_4
0x40004aa	              0xc3	                                     ret	       328	ftp.c	FUNCTION_4
ftp_endofresp	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,3:IF,1:WHILE,0	52
0x40009f5	              0x55	                                push rbp	       553	ftp.c	FUNCTION_9
0x40009f6	          0x4889e5	                            mov rbp, rsp	       553	ftp.c	FUNCTION_9
0x40009f9	        0x4883ec20	                           sub rsp, 0x20	       553	ftp.c	FUNCTION_9
0x40009fd	        0x48897df8	                mov qword [rbp - 8], rdi	       553	ftp.c	FUNCTION_9
0x4000a01	        0x488975f0	             mov qword [rbp - 0x10], rsi	       553	ftp.c	FUNCTION_9
0x4000a05	        0x488955e8	             mov qword [rbp - 0x18], rdx	       553	ftp.c	FUNCTION_9
0x4000a09	        0x48894de0	             mov qword [rbp - 0x20], rcx	       553	ftp.c	FUNCTION_9
0x4000a0d	      0x48837de803	               cmp qword [rbp - 0x18], 3	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a12	     0xf8683000000	                           jbe 0x4000a9b	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a18	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a1c	           0xfb600	                   movzx eax, byte [rax]	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a1f	           0xfb6c0	                           movzx eax, al	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a22	            0x89c7	                            mov edi, eax	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a24	      0xe800000000	                          call 0x4000a29	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a29	            0x85c0	                           test eax, eax	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a2b	            0x746e	                            je 0x4000a9b	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a2d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a31	        0x4883c001	                              add rax, 1	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a35	           0xfb600	                   movzx eax, byte [rax]	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a38	           0xfb6c0	                           movzx eax, al	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a3b	            0x89c7	                            mov edi, eax	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a3d	      0xe800000000	                          call 0x4000a42	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a42	            0x85c0	                           test eax, eax	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a44	            0x7455	                            je 0x4000a9b	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a46	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a4a	        0x4883c002	                              add rax, 2	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a4e	           0xfb600	                   movzx eax, byte [rax]	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a51	           0xfb6c0	                           movzx eax, al	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a54	            0x89c7	                            mov edi, eax	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a56	      0xe800000000	                          call 0x4000a5b	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a5b	            0x85c0	                           test eax, eax	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a5d	            0x743c	                            je 0x4000a9b	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a5f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a63	        0x4883c003	                              add rax, 3	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a67	           0xfb600	                   movzx eax, byte [rax]	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a6a	            0x3c20	                            cmp al, 0x20	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a6c	            0x752d	                           jne 0x4000a9b	       556	ftp.c	FUNCTION_9	IF_1	CALL_1
0x4000a6e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       557	ftp.c	FUNCTION_9	IF_1	CALL_3
0x4000a72	      0xba0a000000	                            mov edx, 0xa	       557	ftp.c	FUNCTION_9	IF_1	CALL_3
0x4000a77	      0xbe00000000	                              mov esi, 0	       557	ftp.c	FUNCTION_9	IF_1	CALL_3
0x4000a7c	          0x4889c7	                            mov rdi, rax	       557	ftp.c	FUNCTION_9	IF_1	CALL_3
0x4000a7f	      0xe800000000	                          call 0x4000a84	       557	ftp.c	FUNCTION_9	IF_1	CALL_3
0x4000a84	          0x4889c7	                            mov rdi, rax	       557	ftp.c	FUNCTION_9	IF_1	CALL_3
0x4000a87	      0xe800000000	                          call 0x4000a8c	       557	ftp.c	FUNCTION_9	IF_1	CALL_3
0x4000a8c	            0x89c2	                            mov edx, eax	       557	ftp.c	FUNCTION_9	IF_1	CALL_3
0x4000a8e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       557	ftp.c	FUNCTION_9	IF_1	CALL_3
0x4000a92	            0x8910	                    mov dword [rax], edx	       557	ftp.c	FUNCTION_9	IF_1	CALL_3
0x4000a94	      0xb801000000	                              mov eax, 1	       558	ftp.c	FUNCTION_9	IF_1
0x4000a99	            0xeb05	                           jmp 0x4000aa0	       558	ftp.c	FUNCTION_9	IF_1
0x4000a9b	      0xb800000000	                              mov eax, 0	       561	ftp.c	FUNCTION_9
0x4000aa0	              0xc9	                                   leave	       562	ftp.c	FUNCTION_9
0x4000aa1	              0xc3	                                     ret	       562	ftp.c	FUNCTION_9
InitiateTransfer	DO,0:FOR,0:functions,0:ELSE,1:SWITCH,0:CALL,7:IF,3:WHILE,0	75
0x400077f	              0x55	                                push rbp	       449	ftp.c	FUNCTION_7
0x4000780	          0x4889e5	                            mov rbp, rsp	       449	ftp.c	FUNCTION_7
0x4000783	        0x4883ec30	                           sub rsp, 0x30	       449	ftp.c	FUNCTION_7
0x4000787	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       449	ftp.c	FUNCTION_7
0x400078b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       450	ftp.c	FUNCTION_7
0x400078f	          0x488b00	                    mov rax, qword [rax]	       450	ftp.c	FUNCTION_7
0x4000792	        0x488945f0	             mov qword [rbp - 0x10], rax	       450	ftp.c	FUNCTION_7
0x4000796	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       451	ftp.c	FUNCTION_7
0x400079a	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	       451	ftp.c	FUNCTION_7
0x40007a1	        0x488945f8	                mov qword [rbp - 8], rax	       451	ftp.c	FUNCTION_7
0x40007a5	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       452	ftp.c	FUNCTION_7
0x40007ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       454	ftp.c	FUNCTION_7	IF_1
0x40007b0	     0xfb680660300	          movzx eax, byte [rax + 0x366] 	       454	ftp.c	FUNCTION_7	IF_1
0x40007b7	            0x84c0	                             test al, al	       454	ftp.c	FUNCTION_7	IF_1
0x40007b9	            0x742d	                            je 0x40007e8	       454	ftp.c	FUNCTION_7	IF_1
0x40007bb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       457	ftp.c	FUNCTION_7	IF_1	CALL_1
0x40007bf	    0x488d35000000	                   lea rsi, [0x040007c6]	       457	ftp.c	FUNCTION_7	IF_1	CALL_1
0x40007c6	          0x4889c7	                            mov rdi, rax	       457	ftp.c	FUNCTION_7	IF_1	CALL_1
0x40007c9	      0xb800000000	                              mov eax, 0	       457	ftp.c	FUNCTION_7	IF_1	CALL_1
0x40007ce	      0xe800000000	                          call 0x40007d3	       457	ftp.c	FUNCTION_7	IF_1	CALL_1
0x40007d3	    0xc745ec040000	               mov dword [rbp - 0x14], 4	       458	ftp.c	FUNCTION_7	IF_1	CALL_2
0x40007da	        0x837dec00	               cmp dword [rbp - 0x14], 0	       459	ftp.c	FUNCTION_7	IF_1	IF_2
0x40007de	            0x7408	                            je 0x40007e8	       459	ftp.c	FUNCTION_7	IF_1	IF_2
0x40007e0	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       460	ftp.c	FUNCTION_7	IF_1	IF_2
0x40007e3	      0xe9ce000000	                           jmp 0x40008b6	       460	ftp.c	FUNCTION_7	IF_1	IF_2
0x40007e8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       463	ftp.c	FUNCTION_7	IF_3
0x40007ec	    0x8b8070060000	           mov eax, dword [rax + 0x670] 	       463	ftp.c	FUNCTION_7	IF_3
0x40007f2	          0x83f821	                           cmp eax, 0x21	       463	ftp.c	FUNCTION_7	IF_3
0x40007f5	            0x7563	                           jne 0x400085a	       463	ftp.c	FUNCTION_7	IF_3
0x40007f7	        0x488b45f8	                mov rax, qword [rbp - 8]	       464	ftp.c	FUNCTION_7	IF_3
0x40007fb	          0x488b00	                    mov rax, qword [rax]	       464	ftp.c	FUNCTION_7	IF_3
0x40007fe	    0x48c700000000	                      mov qword [rax], 0	       464	ftp.c	FUNCTION_7	IF_3
0x4000805	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       469	ftp.c	FUNCTION_7	IF_3	CALL_3
0x4000809	    0x488b90d05000	          mov rdx, qword [rax + 0x50d0] 	       469	ftp.c	FUNCTION_7	IF_3	CALL_3
0x4000810	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       469	ftp.c	FUNCTION_7	IF_3	CALL_3
0x4000814	          0x4889d6	                            mov rsi, rdx	       469	ftp.c	FUNCTION_7	IF_3	CALL_3
0x4000817	          0x4889c7	                            mov rdi, rax	       469	ftp.c	FUNCTION_7	IF_3	CALL_3
0x400081a	      0xe800000000	                          call 0x400081f	       469	ftp.c	FUNCTION_7	IF_3	CALL_3
0x400081f	        0x488b45f8	                mov rax, qword [rbp - 8]	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x4000823	          0x488b10	                    mov rdx, qword [rax]	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x4000826	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x400082a	        0x4883ec08	                              sub rsp, 8	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x400082e	              0x52	                                push rdx	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x400082f	    0x41b901000000	                              mov r9d, 1	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x4000835	    0x41b800000000	                              mov r8d, 0	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x400083b	      0xb900000000	                              mov ecx, 0	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x4000840	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x4000847	      0xbeffffffff	                     mov esi, 0xffffffff	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x400084c	          0x4889c7	                            mov rdi, rax	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x400084f	      0xe800000000	                          call 0x4000854	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x4000854	        0x4883c410	                           add rsp, 0x10	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x4000858	            0xeb3b	                           jmp 0x4000895	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x400085a	        0x488b45f8	                mov rax, qword [rbp - 8]	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x400085e	          0x488b08	                    mov rcx, qword [rax]	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x4000861	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x4000865	    0x488b90780600	           mov rdx, qword [rax + 0x678] 	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x400086c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x4000870	        0x4883ec08	                              sub rsp, 8	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x4000874	            0x6a00	                                  push 0	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x4000876	    0x41b9ffffffff	                     mov r9d, 0xffffffff	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x400087c	          0x4989c8	                             mov r8, rcx	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x400087f	      0xb900000000	                              mov ecx, 0	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x4000884	      0xbe01000000	                              mov esi, 1	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x4000889	          0x4889c7	                            mov rdi, rax	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x400088c	      0xe800000000	                          call 0x4000891	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x4000891	        0x4883c410	                           add rsp, 0x10	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x4000895	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       484	ftp.c	FUNCTION_7
0x4000899	    0xc680d0050000	               mov byte [rax + 0x5d0], 1	       484	ftp.c	FUNCTION_7
0x40008a0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       485	ftp.c	FUNCTION_7	CALL_7
0x40008a4	      0xbe00000000	                              mov esi, 0	       485	ftp.c	FUNCTION_7	CALL_7
0x40008a9	          0x4889c7	                            mov rdi, rax	       485	ftp.c	FUNCTION_7	CALL_7
0x40008ac	      0xe8c6040000	                         call sym._state	       485	ftp.c	FUNCTION_7	CALL_7
0x40008b1	      0xb800000000	                              mov eax, 0	       487	ftp.c	FUNCTION_7
0x40008b6	              0xc9	                                   leave	       488	ftp.c	FUNCTION_7
0x40008b7	              0xc3	                                     ret	       488	ftp.c	FUNCTION_7
init_wc_data	DO,0:FOR,0:functions,0:ELSE,2:SWITCH,0:CALL,13:IF,11:WHILE,0	190
0x4006ae5	              0x55	                                push rbp	      3697	ftp.c	FUNCTION_56
0x4006ae6	          0x4889e5	                            mov rbp, rsp	      3697	ftp.c	FUNCTION_56
0x4006ae9	        0x4883ec40	                           sub rsp, 0x40	      3697	ftp.c	FUNCTION_56
0x4006aed	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      3697	ftp.c	FUNCTION_56
0x4006af1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3699	ftp.c	FUNCTION_56
0x4006af5	          0x488b00	                    mov rax, qword [rax]	      3699	ftp.c	FUNCTION_56
0x4006af8	    0x488b80985000	          mov rax, qword [rax + 0x5098] 	      3699	ftp.c	FUNCTION_56
0x4006aff	        0x488945e0	             mov qword [rbp - 0x20], rax	      3699	ftp.c	FUNCTION_56
0x4006b03	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3700	ftp.c	FUNCTION_56
0x4006b07	          0x488b00	                    mov rax, qword [rax]	      3700	ftp.c	FUNCTION_56
0x4006b0a	    0x480508510000	                         add rax, 0x5108	      3700	ftp.c	FUNCTION_56
0x4006b10	        0x488945e8	             mov qword [rbp - 0x18], rax	      3700	ftp.c	FUNCTION_56
0x4006b14	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      3701	ftp.c	FUNCTION_56
0x4006b1b	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      3702	ftp.c	FUNCTION_56
0x4006b23	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3704	ftp.c	FUNCTION_56	CALL_1
0x4006b27	          0x488b00	                    mov rax, qword [rax]	      3704	ftp.c	FUNCTION_56	CALL_1
0x4006b2a	    0x488b80985000	          mov rax, qword [rax + 0x5098] 	      3704	ftp.c	FUNCTION_56	CALL_1
0x4006b31	      0xbe2f000000	                           mov esi, 0x2f	      3704	ftp.c	FUNCTION_56	CALL_1
0x4006b36	          0x4889c7	                            mov rdi, rax	      3704	ftp.c	FUNCTION_56	CALL_1
0x4006b39	      0xe800000000	                          call 0x4006b3e	      3704	ftp.c	FUNCTION_56	CALL_1
0x4006b3e	        0x488945f8	                mov qword [rbp - 8], rax	      3704	ftp.c	FUNCTION_56	CALL_1
0x4006b42	      0x48837df800	                  cmp qword [rbp - 8], 0	      3705	ftp.c	FUNCTION_56	IF_1
0x4006b47	            0x746f	                            je 0x4006bb8	      3705	ftp.c	FUNCTION_56	IF_1
0x4006b49	      0x488345f801	                  add qword [rbp - 8], 1	      3706	ftp.c	FUNCTION_56	IF_1
0x4006b4e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3707	ftp.c	FUNCTION_56	IF_1	IF_2
0x4006b52	           0xfb600	                   movzx eax, byte [rax]	      3707	ftp.c	FUNCTION_56	IF_1	IF_2
0x4006b55	            0x84c0	                             test al, al	      3707	ftp.c	FUNCTION_56	IF_1	IF_2
0x4006b57	            0x7521	                           jne 0x4006b7a	      3707	ftp.c	FUNCTION_56	IF_1	IF_2
0x4006b59	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3708	ftp.c	FUNCTION_56	IF_1	IF_2
0x4006b5d	    0xc70004000000	                      mov dword [rax], 4	      3708	ftp.c	FUNCTION_56	IF_1	IF_2
0x4006b63	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3709	ftp.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x4006b67	          0x4889c7	                            mov rdi, rax	      3709	ftp.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x4006b6a	      0xe8600b0000	             call sym.ftp_parse_url_path	      3709	ftp.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x4006b6f	          0x8945dc	             mov dword [rbp - 0x24], eax	      3709	ftp.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x4006b72	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3710	ftp.c	FUNCTION_56	IF_1	IF_2
0x4006b75	      0xe96b020000	                           jmp 0x4006de5	      3710	ftp.c	FUNCTION_56	IF_1	IF_2
0x4006b7a	    0x488b05000000	            mov rax, qword [0x04006b81] 	      3712	ftp.c	FUNCTION_56	IF_1	CALL_3
0x4006b81	          0x488b00	                    mov rax, qword [rax]	      3712	ftp.c	FUNCTION_56	IF_1	CALL_3
0x4006b84	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3712	ftp.c	FUNCTION_56	IF_1	CALL_3
0x4006b88	          0x4889d7	                            mov rdi, rdx	      3712	ftp.c	FUNCTION_56	IF_1	CALL_3
0x4006b8b	            0xffd0	                                call rax	      3712	ftp.c	FUNCTION_56	IF_1	CALL_3
0x4006b8d	          0x4889c2	                            mov rdx, rax	      3712	ftp.c	FUNCTION_56	IF_1	CALL_3
0x4006b90	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3712	ftp.c	FUNCTION_56	IF_1	CALL_3
0x4006b94	        0x48895010	             mov qword [rax + 0x10], rdx	      3712	ftp.c	FUNCTION_56	IF_1	CALL_3
0x4006b98	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3713	ftp.c	FUNCTION_56	IF_1	IF_3
0x4006b9c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3713	ftp.c	FUNCTION_56	IF_1	IF_3
0x4006ba0	          0x4885c0	                           test rax, rax	      3713	ftp.c	FUNCTION_56	IF_1	IF_3
0x4006ba3	            0x750a	                           jne 0x4006baf	      3713	ftp.c	FUNCTION_56	IF_1	IF_3
0x4006ba5	      0xb81b000000	                           mov eax, 0x1b	      3714	ftp.c	FUNCTION_56	IF_1	IF_3
0x4006baa	      0xe936020000	                           jmp 0x4006de5	      3714	ftp.c	FUNCTION_56	IF_1	IF_3
0x4006baf	        0x488b45f8	                mov rax, qword [rbp - 8]	      3715	ftp.c	FUNCTION_56	IF_1
0x4006bb3	          0xc60000	                       mov byte [rax], 0	      3715	ftp.c	FUNCTION_56	IF_1
0x4006bb6	            0xeb6a	                           jmp 0x4006c22	      3715	ftp.c	FUNCTION_56	IF_1
0x4006bb8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3718	ftp.c	FUNCTION_56	ELSE_1	IF_4
0x4006bbc	           0xfb600	                   movzx eax, byte [rax]	      3718	ftp.c	FUNCTION_56	ELSE_1	IF_4
0x4006bbf	            0x84c0	                             test al, al	      3718	ftp.c	FUNCTION_56	ELSE_1	IF_4
0x4006bc1	            0x743e	                            je 0x4006c01	      3718	ftp.c	FUNCTION_56	ELSE_1	IF_4
0x4006bc3	    0x488b05000000	            mov rax, qword [0x04006bca] 	      3719	ftp.c	FUNCTION_56	ELSE_1	IF_4	CALL_4
0x4006bca	          0x488b00	                    mov rax, qword [rax]	      3719	ftp.c	FUNCTION_56	ELSE_1	IF_4	CALL_4
0x4006bcd	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3719	ftp.c	FUNCTION_56	ELSE_1	IF_4	CALL_4
0x4006bd1	          0x4889d7	                            mov rdi, rdx	      3719	ftp.c	FUNCTION_56	ELSE_1	IF_4	CALL_4
0x4006bd4	            0xffd0	                                call rax	      3719	ftp.c	FUNCTION_56	ELSE_1	IF_4	CALL_4
0x4006bd6	          0x4889c2	                            mov rdx, rax	      3719	ftp.c	FUNCTION_56	ELSE_1	IF_4	CALL_4
0x4006bd9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3719	ftp.c	FUNCTION_56	ELSE_1	IF_4	CALL_4
0x4006bdd	        0x48895010	             mov qword [rax + 0x10], rdx	      3719	ftp.c	FUNCTION_56	ELSE_1	IF_4	CALL_4
0x4006be1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3720	ftp.c	FUNCTION_56	ELSE_1	IF_4	IF_5
0x4006be5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3720	ftp.c	FUNCTION_56	ELSE_1	IF_4	IF_5
0x4006be9	          0x4885c0	                           test rax, rax	      3720	ftp.c	FUNCTION_56	ELSE_1	IF_4	IF_5
0x4006bec	            0x750a	                           jne 0x4006bf8	      3720	ftp.c	FUNCTION_56	ELSE_1	IF_4	IF_5
0x4006bee	      0xb81b000000	                           mov eax, 0x1b	      3721	ftp.c	FUNCTION_56	ELSE_1	IF_4	IF_5
0x4006bf3	      0xe9ed010000	                           jmp 0x4006de5	      3721	ftp.c	FUNCTION_56	ELSE_1	IF_4	IF_5
0x4006bf8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3722	ftp.c	FUNCTION_56	ELSE_1	IF_4
0x4006bfc	          0xc60000	                       mov byte [rax], 0	      3722	ftp.c	FUNCTION_56	ELSE_1	IF_4
0x4006bff	            0xeb21	                           jmp 0x4006c22	      3722	ftp.c	FUNCTION_56	ELSE_1	IF_4
0x4006c01	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3725	ftp.c	FUNCTION_56	ELSE_1	ELSE_2
0x4006c05	    0xc70004000000	                      mov dword [rax], 4	      3725	ftp.c	FUNCTION_56	ELSE_1	ELSE_2
0x4006c0b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3726	ftp.c	FUNCTION_56	ELSE_1	ELSE_2	CALL_5
0x4006c0f	          0x4889c7	                            mov rdi, rax	      3726	ftp.c	FUNCTION_56	ELSE_1	ELSE_2	CALL_5
0x4006c12	      0xe8b80a0000	             call sym.ftp_parse_url_path	      3726	ftp.c	FUNCTION_56	ELSE_1	ELSE_2	CALL_5
0x4006c17	          0x8945dc	             mov dword [rbp - 0x24], eax	      3726	ftp.c	FUNCTION_56	ELSE_1	ELSE_2	CALL_5
0x4006c1a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3727	ftp.c	FUNCTION_56	ELSE_1	ELSE_2
0x4006c1d	      0xe9c3010000	                           jmp 0x4006de5	      3727	ftp.c	FUNCTION_56	ELSE_1	ELSE_2
0x4006c22	    0x488b05000000	            mov rax, qword [0x04006c29] 	      3735	ftp.c	FUNCTION_56	CALL_6
0x4006c29	          0x488b00	                    mov rax, qword [rax]	      3735	ftp.c	FUNCTION_56	CALL_6
0x4006c2c	      0xbe18000000	                           mov esi, 0x18	      3735	ftp.c	FUNCTION_56	CALL_6
0x4006c31	      0xbf01000000	                              mov edi, 1	      3735	ftp.c	FUNCTION_56	CALL_6
0x4006c36	            0xffd0	                                call rax	      3735	ftp.c	FUNCTION_56	CALL_6
0x4006c38	        0x488945f0	             mov qword [rbp - 0x10], rax	      3735	ftp.c	FUNCTION_56	CALL_6
0x4006c3c	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3736	ftp.c	FUNCTION_56	IF_6
0x4006c41	            0x750c	                           jne 0x4006c4f	      3736	ftp.c	FUNCTION_56	IF_6
0x4006c43	    0xc745dc1b0000	           mov dword [rbp - 0x24], 0x1b 	      3737	ftp.c	FUNCTION_56	IF_6
0x4006c4a	      0xe932010000	                           jmp 0x4006d81	      3738	ftp.c	FUNCTION_56	IF_6
0x4006c4f	      0xe800000000	                          call 0x4006c54	      3742	ftp.c	FUNCTION_56	CALL_7
0x4006c54	          0x4889c2	                            mov rdx, rax	      3742	ftp.c	FUNCTION_56	CALL_7
0x4006c57	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3742	ftp.c	FUNCTION_56	CALL_7
0x4006c5b	          0x488910	                    mov qword [rax], rdx	      3742	ftp.c	FUNCTION_56	CALL_7
0x4006c5e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3743	ftp.c	FUNCTION_56	IF_7
0x4006c62	          0x488b00	                    mov rax, qword [rax]	      3743	ftp.c	FUNCTION_56	IF_7
0x4006c65	          0x4885c0	                           test rax, rax	      3743	ftp.c	FUNCTION_56	IF_7
0x4006c68	            0x750c	                           jne 0x4006c76	      3743	ftp.c	FUNCTION_56	IF_7
0x4006c6a	    0xc745dc1b0000	           mov dword [rbp - 0x24], 0x1b 	      3744	ftp.c	FUNCTION_56	IF_7
0x4006c71	      0xe90b010000	                           jmp 0x4006d81	      3745	ftp.c	FUNCTION_56	IF_7
0x4006c76	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3748	ftp.c	FUNCTION_56
0x4006c7a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3748	ftp.c	FUNCTION_56
0x4006c7e	        0x48895038	             mov qword [rax + 0x38], rdx	      3748	ftp.c	FUNCTION_56
0x4006c82	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3749	ftp.c	FUNCTION_56
0x4006c86	    0x488d150ffeff	               lea rdx, sym.wc_data_dtor	      3749	ftp.c	FUNCTION_56
0x4006c8d	        0x48895040	             mov qword [rax + 0x40], rdx	      3749	ftp.c	FUNCTION_56
0x4006c91	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3752	ftp.c	FUNCTION_56	IF_8
0x4006c95	          0x488b00	                    mov rax, qword [rax]	      3752	ftp.c	FUNCTION_56	IF_8
0x4006c98	    0x8b8078070000	           mov eax, dword [rax + 0x778] 	      3752	ftp.c	FUNCTION_56	IF_8
0x4006c9e	          0x83f802	                              cmp eax, 2	      3752	ftp.c	FUNCTION_56	IF_8
0x4006ca1	            0x7511	                           jne 0x4006cb4	      3752	ftp.c	FUNCTION_56	IF_8
0x4006ca3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3753	ftp.c	FUNCTION_56	IF_8
0x4006ca7	          0x488b00	                    mov rax, qword [rax]	      3753	ftp.c	FUNCTION_56	IF_8
0x4006caa	    0xc78078070000	              mov dword [rax + 0x778], 1	      3753	ftp.c	FUNCTION_56	IF_8
0x4006cb4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3756	ftp.c	FUNCTION_56	CALL_8
0x4006cb8	          0x4889c7	                            mov rdi, rax	      3756	ftp.c	FUNCTION_56	CALL_8
0x4006cbb	      0xe80f0a0000	             call sym.ftp_parse_url_path	      3756	ftp.c	FUNCTION_56	CALL_8
0x4006cc0	          0x8945dc	             mov dword [rbp - 0x24], eax	      3756	ftp.c	FUNCTION_56	CALL_8
0x4006cc3	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3757	ftp.c	FUNCTION_56	IF_9
0x4006cc7	     0xf85b3000000	                           jne 0x4006d80	      3757	ftp.c	FUNCTION_56	IF_9
0x4006ccd	    0x488b05000000	            mov rax, qword [0x04006cd4] 	      3761	ftp.c	FUNCTION_56	CALL_9
0x4006cd4	          0x488b00	                    mov rax, qword [rax]	      3761	ftp.c	FUNCTION_56	CALL_9
0x4006cd7	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3761	ftp.c	FUNCTION_56	CALL_9
0x4006cdb	          0x488b12	                    mov rdx, qword [rdx]	      3761	ftp.c	FUNCTION_56	CALL_9
0x4006cde	    0x488b92985000	          mov rdx, qword [rdx + 0x5098] 	      3761	ftp.c	FUNCTION_56	CALL_9
0x4006ce5	          0x4889d7	                            mov rdi, rdx	      3761	ftp.c	FUNCTION_56	CALL_9
0x4006ce8	            0xffd0	                                call rax	      3761	ftp.c	FUNCTION_56	CALL_9
0x4006cea	          0x4889c2	                            mov rdx, rax	      3761	ftp.c	FUNCTION_56	CALL_9
0x4006ced	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3761	ftp.c	FUNCTION_56	CALL_9
0x4006cf1	        0x48895008	                mov qword [rax + 8], rdx	      3761	ftp.c	FUNCTION_56	CALL_9
0x4006cf5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3762	ftp.c	FUNCTION_56	IF_10
0x4006cf9	        0x488b4008	                mov rax, qword [rax + 8]	      3762	ftp.c	FUNCTION_56	IF_10
0x4006cfd	          0x4885c0	                           test rax, rax	      3762	ftp.c	FUNCTION_56	IF_10
0x4006d00	            0x7509	                           jne 0x4006d0b	      3762	ftp.c	FUNCTION_56	IF_10
0x4006d02	    0xc745dc1b0000	           mov dword [rbp - 0x24], 0x1b 	      3763	ftp.c	FUNCTION_56	IF_10
0x4006d09	            0xeb76	                           jmp 0x4006d81	      3764	ftp.c	FUNCTION_56	IF_10
0x4006d0b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3768	ftp.c	FUNCTION_56
0x4006d0f	          0x488b00	                    mov rax, qword [rax]	      3768	ftp.c	FUNCTION_56
0x4006d12	    0x488b90880200	           mov rdx, qword [rax + 0x288] 	      3768	ftp.c	FUNCTION_56
0x4006d19	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3768	ftp.c	FUNCTION_56
0x4006d1d	        0x48895008	                mov qword [rax + 8], rdx	      3768	ftp.c	FUNCTION_56
0x4006d21	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3770	ftp.c	FUNCTION_56
0x4006d25	          0x488b00	                    mov rax, qword [rax]	      3770	ftp.c	FUNCTION_56
0x4006d28	    0x488b15000000	            mov rdx, qword [0x04006d2f] 	      3770	ftp.c	FUNCTION_56
0x4006d2f	    0x488990880200	            mov qword [rax + 0x288], rdx	      3770	ftp.c	FUNCTION_56
0x4006d36	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3772	ftp.c	FUNCTION_56
0x4006d3a	          0x488b00	                    mov rax, qword [rax]	      3772	ftp.c	FUNCTION_56
0x4006d3d	    0x488b90100200	           mov rdx, qword [rax + 0x210] 	      3772	ftp.c	FUNCTION_56
0x4006d44	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3772	ftp.c	FUNCTION_56
0x4006d48	        0x48895010	             mov qword [rax + 0x10], rdx	      3772	ftp.c	FUNCTION_56
0x4006d4c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3774	ftp.c	FUNCTION_56
0x4006d50	          0x488b00	                    mov rax, qword [rax]	      3774	ftp.c	FUNCTION_56
0x4006d53	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3774	ftp.c	FUNCTION_56
0x4006d57	    0x488990100200	            mov qword [rax + 0x210], rdx	      3774	ftp.c	FUNCTION_56
0x4006d5e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3776	ftp.c	FUNCTION_56	CALL_10
0x4006d62	          0x488b00	                    mov rax, qword [rax]	      3776	ftp.c	FUNCTION_56	CALL_10
0x4006d65	    0x488d35000000	                   lea rsi, [0x04006d6c]	      3776	ftp.c	FUNCTION_56	CALL_10
0x4006d6c	          0x4889c7	                            mov rdi, rax	      3776	ftp.c	FUNCTION_56	CALL_10
0x4006d6f	      0xb800000000	                              mov eax, 0	      3776	ftp.c	FUNCTION_56	CALL_10
0x4006d74	      0xe800000000	                          call 0x4006d79	      3776	ftp.c	FUNCTION_56	CALL_10
0x4006d79	      0xb800000000	                              mov eax, 0	      3777	ftp.c	FUNCTION_56
0x4006d7e	            0xeb65	                           jmp 0x4006de5	      3777	ftp.c	FUNCTION_56
0x4006d80	              0x90	                                     nop	      3758	ftp.c	FUNCTION_56	IF_9
0x4006d81	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3780	ftp.c	FUNCTION_56	IF_11
0x4006d86	            0x741f	                            je 0x4006da7	      3780	ftp.c	FUNCTION_56	IF_11
0x4006d88	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3781	ftp.c	FUNCTION_56	IF_11	CALL_11
0x4006d8c	          0x4889c7	                            mov rdi, rax	      3781	ftp.c	FUNCTION_56	IF_11	CALL_11
0x4006d8f	      0xe800000000	                          call 0x4006d94	      3781	ftp.c	FUNCTION_56	IF_11	CALL_11
0x4006d94	    0x488b05000000	            mov rax, qword [0x04006d9b] 	      3782	ftp.c	FUNCTION_56	IF_11	CALL_12
0x4006d9b	          0x488b00	                    mov rax, qword [rax]	      3782	ftp.c	FUNCTION_56	IF_11	CALL_12
0x4006d9e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3782	ftp.c	FUNCTION_56	IF_11	CALL_12
0x4006da2	          0x4889d7	                            mov rdi, rdx	      3782	ftp.c	FUNCTION_56	IF_11	CALL_12
0x4006da5	            0xffd0	                                call rax	      3782	ftp.c	FUNCTION_56	IF_11	CALL_12
0x4006da7	    0x488b05000000	            mov rax, qword [0x04006dae] 	      3784	ftp.c	FUNCTION_56	CALL_13
0x4006dae	          0x488b00	                    mov rax, qword [rax]	      3784	ftp.c	FUNCTION_56	CALL_13
0x4006db1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3784	ftp.c	FUNCTION_56	CALL_13
0x4006db5	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      3784	ftp.c	FUNCTION_56	CALL_13
0x4006db9	          0x4889d7	                            mov rdi, rdx	      3784	ftp.c	FUNCTION_56	CALL_13
0x4006dbc	            0xffd0	                                call rax	      3784	ftp.c	FUNCTION_56	CALL_13
0x4006dbe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3784	ftp.c	FUNCTION_56	CALL_13
0x4006dc2	    0x48c740100000	               mov qword [rax + 0x10], 0	      3784	ftp.c	FUNCTION_56	CALL_13
0x4006dca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3785	ftp.c	FUNCTION_56
0x4006dce	    0x48c740400000	               mov qword [rax + 0x40], 0	      3785	ftp.c	FUNCTION_56
0x4006dd6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3786	ftp.c	FUNCTION_56
0x4006dda	    0x48c740380000	               mov qword [rax + 0x38], 0	      3786	ftp.c	FUNCTION_56
0x4006de2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3787	ftp.c	FUNCTION_56
0x4006de5	              0xc9	                                   leave	      3788	ftp.c	FUNCTION_56
0x4006de6	              0xc3	                                     ret	      3788	ftp.c	FUNCTION_56
ftp_timeleft_accept	DO,0:FOR,0:functions,0:ELSE,1:SWITCH,0:CALL,3:IF,3:WHILE,0	53
0x40004ab	              0x55	                                push rbp	       340	ftp.c	FUNCTION_5
0x40004ac	          0x4889e5	                            mov rbp, rsp	       340	ftp.c	FUNCTION_5
0x40004af	        0x4883ec40	                           sub rsp, 0x40	       340	ftp.c	FUNCTION_5
0x40004b3	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       340	ftp.c	FUNCTION_5
0x40004b7	    0x64488b042528	                mov rax, qword fs:[0x28]	       340	ftp.c	FUNCTION_5
0x40004c0	        0x488945f8	                mov qword [rbp - 8], rax	       340	ftp.c	FUNCTION_5
0x40004c4	            0x31c0	                            xor eax, eax	       340	ftp.c	FUNCTION_5
0x40004c6	    0x48c745d060ea	          mov qword [rbp - 0x30], 0xea60	       341	ftp.c	FUNCTION_5
0x40004ce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       345	ftp.c	FUNCTION_5	IF_1
0x40004d2	    0x488b80400300	           mov rax, qword [rax + 0x340] 	       345	ftp.c	FUNCTION_5	IF_1
0x40004d9	          0x4885c0	                           test rax, rax	       345	ftp.c	FUNCTION_5	IF_1
0x40004dc	            0x7e0f	                           jle 0x40004ed	       345	ftp.c	FUNCTION_5	IF_1
0x40004de	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       346	ftp.c	FUNCTION_5	IF_1
0x40004e2	    0x488b80400300	           mov rax, qword [rax + 0x340] 	       346	ftp.c	FUNCTION_5	IF_1
0x40004e9	        0x488945d0	             mov qword [rbp - 0x30], rax	       346	ftp.c	FUNCTION_5	IF_1
0x40004ed	      0xe800000000	                          call 0x40004f2	       348	ftp.c	FUNCTION_5	CALL_1
0x40004f2	        0x488945e0	             mov qword [rbp - 0x20], rax	       348	ftp.c	FUNCTION_5	CALL_1
0x40004f6	        0x488955e8	             mov qword [rbp - 0x18], rdx	       348	ftp.c	FUNCTION_5	CALL_1
0x40004fa	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       351	ftp.c	FUNCTION_5	CALL_2
0x40004fe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       351	ftp.c	FUNCTION_5	CALL_2
0x4000502	      0xba00000000	                              mov edx, 0	       351	ftp.c	FUNCTION_5	CALL_2
0x4000507	          0x4889ce	                            mov rsi, rcx	       351	ftp.c	FUNCTION_5	CALL_2
0x400050a	          0x4889c7	                            mov rdi, rax	       351	ftp.c	FUNCTION_5	CALL_2
0x400050d	      0xe800000000	                          call 0x4000512	       351	ftp.c	FUNCTION_5	CALL_2
0x4000512	        0x488945d8	             mov qword [rbp - 0x28], rax	       351	ftp.c	FUNCTION_5	CALL_2
0x4000516	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       352	ftp.c	FUNCTION_5	IF_2
0x400051b	            0x7414	                            je 0x4000531	       352	ftp.c	FUNCTION_5	IF_2
0x400051d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       352	ftp.c	FUNCTION_5	IF_2
0x4000521	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       352	ftp.c	FUNCTION_5	IF_2
0x4000525	            0x7d0a	                           jge 0x4000531	       352	ftp.c	FUNCTION_5	IF_2
0x4000527	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       355	ftp.c	FUNCTION_5	IF_2
0x400052b	        0x488945d0	             mov qword [rbp - 0x30], rax	       355	ftp.c	FUNCTION_5	IF_2
0x400052f	            0xeb39	                           jmp 0x400056a	       355	ftp.c	FUNCTION_5	IF_2
0x4000531	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       358	ftp.c	FUNCTION_5	ELSE_1	CALL_3
0x4000535	    0x488b90980b00	           mov rdx, qword [rax + 0xb98] 	       358	ftp.c	FUNCTION_5	ELSE_1	CALL_3
0x400053c	    0x488b80900b00	           mov rax, qword [rax + 0xb90] 	       358	ftp.c	FUNCTION_5	ELSE_1	CALL_3
0x4000543	        0x488b7de0	             mov rdi, qword [rbp - 0x20]	       358	ftp.c	FUNCTION_5	ELSE_1	CALL_3
0x4000547	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       358	ftp.c	FUNCTION_5	ELSE_1	CALL_3
0x400054b	          0x4889d1	                            mov rcx, rdx	       358	ftp.c	FUNCTION_5	ELSE_1	CALL_3
0x400054e	          0x4889c2	                            mov rdx, rax	       358	ftp.c	FUNCTION_5	ELSE_1	CALL_3
0x4000551	      0xe800000000	                          call 0x4000556	       358	ftp.c	FUNCTION_5	ELSE_1	CALL_3
0x4000556	        0x482945d0	             sub qword [rbp - 0x30], rax	       358	ftp.c	FUNCTION_5	ELSE_1	CALL_3
0x400055a	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       359	ftp.c	FUNCTION_5	ELSE_1	IF_3
0x400055f	            0x7509	                           jne 0x400056a	       359	ftp.c	FUNCTION_5	ELSE_1	IF_3
0x4000561	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       361	ftp.c	FUNCTION_5	ELSE_1	IF_3
0x4000568	            0xeb04	                           jmp 0x400056e	       361	ftp.c	FUNCTION_5	ELSE_1	IF_3
0x400056a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       364	ftp.c	FUNCTION_5
0x400056e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       365	ftp.c	FUNCTION_5
0x4000572	    0x644833142528	                xor rdx, qword fs:[0x28]	       365	ftp.c	FUNCTION_5
0x400057b	            0x7405	                            je 0x4000582	       365	ftp.c	FUNCTION_5
0x400057d	      0xe800000000	                          call 0x4000582	       365	ftp.c	FUNCTION_5
0x4000582	              0xc9	                                   leave	       365	ftp.c	FUNCTION_5
0x4000583	              0xc3	                                     ret	       365	ftp.c	FUNCTION_5
ftp_state_stor_prequote	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,1:IF,0:WHILE,0	14
0x4002753	              0x55	                                push rbp	      1519	ftp.c	FUNCTION_25
0x4002754	          0x4889e5	                            mov rbp, rsp	      1519	ftp.c	FUNCTION_25
0x4002757	        0x4883ec20	                           sub rsp, 0x20	      1519	ftp.c	FUNCTION_25
0x400275b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1519	ftp.c	FUNCTION_25
0x400275f	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1520	ftp.c	FUNCTION_25
0x4002766	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1524	ftp.c	FUNCTION_25	CALL_1
0x400276a	      0xba0e000000	                            mov edx, 0xe	      1524	ftp.c	FUNCTION_25	CALL_1
0x400276f	      0xbe01000000	                              mov esi, 1	      1524	ftp.c	FUNCTION_25	CALL_1
0x4002774	          0x4889c7	                            mov rdi, rax	      1524	ftp.c	FUNCTION_25	CALL_1
0x4002777	      0xe8f2040000	                call sym.ftp_state_quote	      1524	ftp.c	FUNCTION_25	CALL_1
0x400277c	          0x8945fc	                mov dword [rbp - 4], eax	      1524	ftp.c	FUNCTION_25	CALL_1
0x400277f	          0x8b45fc	                mov eax, dword [rbp - 4]	      1526	ftp.c	FUNCTION_25
0x4002782	              0xc9	                                   leave	      1527	ftp.c	FUNCTION_25
0x4002783	              0xc3	                                     ret	      1527	ftp.c	FUNCTION_25
ftp_state_retr_prequote	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,1:IF,0:WHILE,0	14
0x4002722	              0x55	                                push rbp	      1508	ftp.c	FUNCTION_24
0x4002723	          0x4889e5	                            mov rbp, rsp	      1508	ftp.c	FUNCTION_24
0x4002726	        0x4883ec20	                           sub rsp, 0x20	      1508	ftp.c	FUNCTION_24
0x400272a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1508	ftp.c	FUNCTION_24
0x400272e	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1509	ftp.c	FUNCTION_24
0x4002735	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1513	ftp.c	FUNCTION_24	CALL_1
0x4002739	      0xba0d000000	                            mov edx, 0xd	      1513	ftp.c	FUNCTION_24	CALL_1
0x400273e	      0xbe01000000	                              mov esi, 1	      1513	ftp.c	FUNCTION_24	CALL_1
0x4002743	          0x4889c7	                            mov rdi, rax	      1513	ftp.c	FUNCTION_24	CALL_1
0x4002746	      0xe823050000	                call sym.ftp_state_quote	      1513	ftp.c	FUNCTION_24	CALL_1
0x400274b	          0x8945fc	                mov dword [rbp - 4], eax	      1513	ftp.c	FUNCTION_24	CALL_1
0x400274e	          0x8b45fc	                mov eax, dword [rbp - 4]	      1515	ftp.c	FUNCTION_24
0x4002751	              0xc9	                                   leave	      1516	ftp.c	FUNCTION_24
0x4002752	              0xc3	                                     ret	      1516	ftp.c	FUNCTION_24
ftp_state_prepare_transfer	DO,0:FOR,0:functions,0:ELSE,5:SWITCH,0:CALL,8:IF,5:WHILE,0	115
0x40021cc	              0x55	                                push rbp	      1361	ftp.c	FUNCTION_20
0x40021cd	          0x4889e5	                            mov rbp, rsp	      1361	ftp.c	FUNCTION_20
0x40021d0	        0x4883ec30	                           sub rsp, 0x30	      1361	ftp.c	FUNCTION_20
0x40021d4	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1361	ftp.c	FUNCTION_20
0x40021d8	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1362	ftp.c	FUNCTION_20
0x40021df	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1363	ftp.c	FUNCTION_20
0x40021e3	          0x488b00	                    mov rax, qword [rax]	      1363	ftp.c	FUNCTION_20
0x40021e6	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1363	ftp.c	FUNCTION_20
0x40021ed	        0x488945f0	             mov qword [rbp - 0x10], rax	      1363	ftp.c	FUNCTION_20
0x40021f1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1364	ftp.c	FUNCTION_20
0x40021f5	          0x488b00	                    mov rax, qword [rax]	      1364	ftp.c	FUNCTION_20
0x40021f8	        0x488945f8	                mov qword [rbp - 8], rax	      1364	ftp.c	FUNCTION_20
0x40021fc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1366	ftp.c	FUNCTION_20	IF_1
0x4002200	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1366	ftp.c	FUNCTION_20	IF_1
0x4002203	            0x85c0	                           test eax, eax	      1366	ftp.c	FUNCTION_20	IF_1
0x4002205	            0x742f	                            je 0x4002236	      1366	ftp.c	FUNCTION_20	IF_1
0x4002207	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1370	ftp.c	FUNCTION_20	IF_1	CALL_1
0x400220b	      0xbe0d000000	                            mov esi, 0xd	      1370	ftp.c	FUNCTION_20	IF_1	CALL_1
0x4002210	          0x4889c7	                            mov rdi, rax	      1370	ftp.c	FUNCTION_20	IF_1	CALL_1
0x4002213	      0xe85febffff	                         call sym._state	      1370	ftp.c	FUNCTION_20	IF_1	CALL_1
0x4002218	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1371	ftp.c	FUNCTION_20	IF_1	CALL_2
0x400221c	      0xba0d000000	                            mov edx, 0xd	      1371	ftp.c	FUNCTION_20	IF_1	CALL_2
0x4002221	      0xbe01000000	                              mov esi, 1	      1371	ftp.c	FUNCTION_20	IF_1	CALL_2
0x4002226	          0x4889c7	                            mov rdi, rax	      1371	ftp.c	FUNCTION_20	IF_1	CALL_2
0x4002229	      0xe8400a0000	                call sym.ftp_state_quote	      1371	ftp.c	FUNCTION_20	IF_1	CALL_2
0x400222e	          0x8945ec	             mov dword [rbp - 0x14], eax	      1371	ftp.c	FUNCTION_20	IF_1	CALL_2
0x4002231	      0xe965010000	                           jmp 0x400239b	      1371	ftp.c	FUNCTION_20	IF_1	CALL_2
0x4002236	        0x488b45f8	                mov rax, qword [rbp - 8]	      1373	ftp.c	FUNCTION_20	ELSE_1	IF_2
0x400223a	     0xfb680970700	          movzx eax, byte [rax + 0x797] 	      1373	ftp.c	FUNCTION_20	ELSE_1	IF_2
0x4002241	            0x84c0	                             test al, al	      1373	ftp.c	FUNCTION_20	ELSE_1	IF_2
0x4002243	            0x7419	                            je 0x400225e	      1373	ftp.c	FUNCTION_20	ELSE_1	IF_2
0x4002245	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1375	ftp.c	FUNCTION_20	ELSE_1	IF_2	CALL_3
0x4002249	      0xbe00000000	                              mov esi, 0	      1375	ftp.c	FUNCTION_20	ELSE_1	IF_2	CALL_3
0x400224e	          0x4889c7	                            mov rdi, rax	      1375	ftp.c	FUNCTION_20	ELSE_1	IF_2	CALL_3
0x4002251	      0xe842efffff	             call sym.ftp_state_use_port	      1375	ftp.c	FUNCTION_20	ELSE_1	IF_2	CALL_3
0x4002256	          0x8945ec	             mov dword [rbp - 0x14], eax	      1375	ftp.c	FUNCTION_20	ELSE_1	IF_2	CALL_3
0x4002259	      0xe93d010000	                           jmp 0x400239b	      1375	ftp.c	FUNCTION_20	ELSE_1	IF_2	CALL_3
0x400225e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1379	ftp.c	FUNCTION_20	ELSE_2	IF_3
0x4002262	     0xfb680ae0700	          movzx eax, byte [rax + 0x7ae] 	      1379	ftp.c	FUNCTION_20	ELSE_2	IF_3
0x4002269	            0x84c0	                             test al, al	      1379	ftp.c	FUNCTION_20	ELSE_2	IF_3
0x400226b	     0xf841b010000	                            je 0x400238c	      1379	ftp.c	FUNCTION_20	ELSE_2	IF_3
0x4002271	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1382	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x4002275	    0x488b80380600	           mov rax, qword [rax + 0x638] 	      1382	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x400227c	          0x4885c0	                           test rax, rax	      1382	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x400227f	            0x7573	                           jne 0x40022f4	      1382	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x4002281	        0x488b45f8	                mov rax, qword [rbp - 8]	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x4002285	    0x488b80200800	           mov rax, qword [rax + 0x820] 	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x400228c	          0x4885c0	                           test rax, rax	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x400228f	            0x740d	                            je 0x400229e	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x4002291	        0x488b45f8	                mov rax, qword [rbp - 8]	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x4002295	    0x488b80200800	           mov rax, qword [rax + 0x820] 	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x400229c	            0xeb1f	                           jmp 0x40022bd	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x400229e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x40022a2	     0xfb680960700	          movzx eax, byte [rax + 0x796] 	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x40022a9	            0x84c0	                             test al, al	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x40022ab	            0x7409	                            je 0x40022b6	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x40022ad	    0x488d05000000	                   lea rax, [0x040022b4]	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x40022b4	            0xeb07	                           jmp 0x40022bd	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x40022b6	    0x488d05000000	                   lea rax, [0x040022bd]	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x40022bd	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x40022c1	    0x488d8ab00500	                  lea rcx, [rdx + 0x5b0]	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x40022c8	          0x4889c2	                            mov rdx, rax	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x40022cb	    0x488d35000000	                   lea rsi, [0x040022d2]	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x40022d2	          0x4889cf	                            mov rdi, rcx	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x40022d5	      0xb800000000	                              mov eax, 0	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x40022da	      0xe800000000	                          call 0x40022df	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x40022df	          0x8945ec	             mov dword [rbp - 0x14], eax	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x40022e2	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x40022e6	     0xf848d000000	                            je 0x4002379	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x40022ec	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x40022ef	      0xe9aa000000	                           jmp 0x400239e	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4	CALL_4
0x40022f4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1388	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x40022f8	     0xfb680a20700	          movzx eax, byte [rax + 0x7a2] 	      1388	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x40022ff	            0x84c0	                             test al, al	      1388	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x4002301	            0x743b	                            je 0x400233e	      1388	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x4002303	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5	CALL_5
0x4002307	    0x488b80380600	           mov rax, qword [rax + 0x638] 	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5	CALL_5
0x400230e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5	CALL_5
0x4002312	    0x488d8ab00500	                  lea rcx, [rdx + 0x5b0]	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5	CALL_5
0x4002319	          0x4889c2	                            mov rdx, rax	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5	CALL_5
0x400231c	    0x488d35000000	                   lea rsi, [0x04002323]	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5	CALL_5
0x4002323	          0x4889cf	                            mov rdi, rcx	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5	CALL_5
0x4002326	      0xb800000000	                              mov eax, 0	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5	CALL_5
0x400232b	      0xe800000000	                          call 0x4002330	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5	CALL_5
0x4002330	          0x8945ec	             mov dword [rbp - 0x14], eax	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5	CALL_5
0x4002333	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5	CALL_5
0x4002337	            0x7440	                            je 0x4002379	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5	CALL_5
0x4002339	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5	CALL_5
0x400233c	            0xeb60	                           jmp 0x400239e	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5	CALL_5
0x400233e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4	CALL_6
0x4002342	    0x488b80380600	           mov rax, qword [rax + 0x638] 	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4	CALL_6
0x4002349	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4	CALL_6
0x400234d	    0x488d8ab00500	                  lea rcx, [rdx + 0x5b0]	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4	CALL_6
0x4002354	          0x4889c2	                            mov rdx, rax	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4	CALL_6
0x4002357	    0x488d35000000	                   lea rsi, [0x0400235e]	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4	CALL_6
0x400235e	          0x4889cf	                            mov rdi, rcx	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4	CALL_6
0x4002361	      0xb800000000	                              mov eax, 0	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4	CALL_6
0x4002366	      0xe800000000	                          call 0x400236b	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4	CALL_6
0x400236b	          0x8945ec	             mov dword [rbp - 0x14], eax	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4	CALL_6
0x400236e	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4	CALL_6
0x4002372	            0x7405	                            je 0x4002379	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4	CALL_6
0x4002374	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4	CALL_6
0x4002377	            0xeb25	                           jmp 0x400239e	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4	CALL_6
0x4002379	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1394	ftp.c	FUNCTION_20	ELSE_2	IF_3	CALL_7
0x400237d	      0xbe1d000000	                           mov esi, 0x1d	      1394	ftp.c	FUNCTION_20	ELSE_2	IF_3	CALL_7
0x4002382	          0x4889c7	                            mov rdi, rax	      1394	ftp.c	FUNCTION_20	ELSE_2	IF_3	CALL_7
0x4002385	      0xe8ede9ffff	                         call sym._state	      1394	ftp.c	FUNCTION_20	ELSE_2	IF_3	CALL_7
0x400238a	            0xeb0f	                           jmp 0x400239b	      1394	ftp.c	FUNCTION_20	ELSE_2	IF_3	CALL_7
0x400238c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1397	ftp.c	FUNCTION_20	ELSE_2	ELSE_5	CALL_8
0x4002390	          0x4889c7	                            mov rdi, rax	      1397	ftp.c	FUNCTION_20	ELSE_2	ELSE_5	CALL_8
0x4002393	      0xe84bfdffff	             call sym.ftp_state_use_pasv	      1397	ftp.c	FUNCTION_20	ELSE_2	ELSE_5	CALL_8
0x4002398	          0x8945ec	             mov dword [rbp - 0x14], eax	      1397	ftp.c	FUNCTION_20	ELSE_2	ELSE_5	CALL_8
0x400239b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1400	ftp.c	FUNCTION_20
0x400239e	              0xc9	                                   leave	      1401	ftp.c	FUNCTION_20
0x400239f	              0xc3	                                     ret	      1401	ftp.c	FUNCTION_20
ftp_state_quote	DO,0:FOR,0:functions,0:ELSE,5:SWITCH,2:CALL,11:IF,8:WHILE,1	184
0x4002c6e	              0x55	                                push rbp	      1685	ftp.c	FUNCTION_29
0x4002c6f	          0x4889e5	                            mov rbp, rsp	      1685	ftp.c	FUNCTION_29
0x4002c72	        0x4883ec50	                           sub rsp, 0x50	      1685	ftp.c	FUNCTION_29
0x4002c76	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1685	ftp.c	FUNCTION_29
0x4002c7a	            0x89f0	                            mov eax, esi	      1685	ftp.c	FUNCTION_29
0x4002c7c	          0x8955b0	             mov dword [rbp - 0x50], edx	      1685	ftp.c	FUNCTION_29
0x4002c7f	          0x8845b4	               mov byte [rbp - 0x4c], al	      1685	ftp.c	FUNCTION_29
0x4002c82	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      1686	ftp.c	FUNCTION_29
0x4002c89	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1687	ftp.c	FUNCTION_29
0x4002c8d	          0x488b00	                    mov rax, qword [rax]	      1687	ftp.c	FUNCTION_29
0x4002c90	        0x488945e8	             mov qword [rbp - 0x18], rax	      1687	ftp.c	FUNCTION_29
0x4002c94	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1688	ftp.c	FUNCTION_29
0x4002c98	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1688	ftp.c	FUNCTION_29
0x4002c9f	        0x488945f0	             mov qword [rbp - 0x10], rax	      1688	ftp.c	FUNCTION_29
0x4002ca3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1689	ftp.c	FUNCTION_29
0x4002ca7	    0x4805b0050000	                          add rax, 0x5b0	      1689	ftp.c	FUNCTION_29
0x4002cad	        0x488945f8	                mov qword [rbp - 8], rax	      1689	ftp.c	FUNCTION_29
0x4002cb1	        0xc645cf00	                mov byte [rbp - 0x31], 0	      1690	ftp.c	FUNCTION_29
0x4002cb5	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1693	ftp.c	FUNCTION_29	SWITCH_1
0x4002cb8	          0x83f80d	                            cmp eax, 0xd	      1693	ftp.c	FUNCTION_29	SWITCH_1
0x4002cbb	            0x720a	                            jb 0x4002cc7	      1693	ftp.c	FUNCTION_29	SWITCH_1
0x4002cbd	          0x83f80e	                            cmp eax, 0xe	      1693	ftp.c	FUNCTION_29	SWITCH_1
0x4002cc0	            0x7616	                           jbe 0x4002cd8	      1693	ftp.c	FUNCTION_29	SWITCH_1
0x4002cc2	          0x83f80f	                            cmp eax, 0xf	      1693	ftp.c	FUNCTION_29	SWITCH_1
0x4002cc5	            0x7422	                            je 0x4002ce9	      1693	ftp.c	FUNCTION_29	SWITCH_1
0x4002cc7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1696	ftp.c	FUNCTION_29	SWITCH_1
0x4002ccb	    0x488b80780500	           mov rax, qword [rax + 0x578] 	      1696	ftp.c	FUNCTION_29	SWITCH_1
0x4002cd2	        0x488945d8	             mov qword [rbp - 0x28], rax	      1696	ftp.c	FUNCTION_29	SWITCH_1
0x4002cd6	            0xeb21	                           jmp 0x4002cf9	      1697	ftp.c	FUNCTION_29	SWITCH_1
0x4002cd8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1700	ftp.c	FUNCTION_29	SWITCH_1
0x4002cdc	    0x488b80880500	           mov rax, qword [rax + 0x588] 	      1700	ftp.c	FUNCTION_29	SWITCH_1
0x4002ce3	        0x488945d8	             mov qword [rbp - 0x28], rax	      1700	ftp.c	FUNCTION_29	SWITCH_1
0x4002ce7	            0xeb10	                           jmp 0x4002cf9	      1701	ftp.c	FUNCTION_29	SWITCH_1
0x4002ce9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1703	ftp.c	FUNCTION_29	SWITCH_1
0x4002ced	    0x488b80800500	           mov rax, qword [rax + 0x580] 	      1703	ftp.c	FUNCTION_29	SWITCH_1
0x4002cf4	        0x488945d8	             mov qword [rbp - 0x28], rax	      1703	ftp.c	FUNCTION_29	SWITCH_1
0x4002cf8	              0x90	                                     nop	      1704	ftp.c	FUNCTION_29	SWITCH_1
0x4002cf9	        0x807db400	                cmp byte [rbp - 0x4c], 0	      1713	ftp.c	FUNCTION_29	IF_1
0x4002cfd	            0x7410	                            je 0x4002d0f	      1713	ftp.c	FUNCTION_29	IF_1
0x4002cff	        0x488b45f8	                mov rax, qword [rbp - 8]	      1714	ftp.c	FUNCTION_29	IF_1
0x4002d03	    0xc780b0000000	               mov dword [rax + 0xb0], 0	      1714	ftp.c	FUNCTION_29	IF_1
0x4002d0d	            0xeb17	                           jmp 0x4002d26	      1714	ftp.c	FUNCTION_29	IF_1
0x4002d0f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1716	ftp.c	FUNCTION_29	ELSE_1
0x4002d13	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      1716	ftp.c	FUNCTION_29	ELSE_1
0x4002d19	          0x8d5001	                      lea edx, [rax + 1]	      1716	ftp.c	FUNCTION_29	ELSE_1
0x4002d1c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1716	ftp.c	FUNCTION_29	ELSE_1
0x4002d20	    0x8990b0000000	             mov dword [rax + 0xb0], edx	      1716	ftp.c	FUNCTION_29	ELSE_1
0x4002d26	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1718	ftp.c	FUNCTION_29	ELSE_1	IF_2
0x4002d2b	     0xf84b1000000	                            je 0x4002de2	      1718	ftp.c	FUNCTION_29	ELSE_1	IF_2
0x4002d31	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1719	ftp.c	FUNCTION_29	ELSE_1	IF_2
0x4002d38	            0xeb10	                           jmp 0x4002d4a	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002d3a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1723	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002d3e	        0x488b4008	                mov rax, qword [rax + 8]	      1723	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002d42	        0x488945d8	             mov qword [rbp - 0x28], rax	      1723	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002d46	        0x8345d401	               add dword [rbp - 0x2c], 1	      1724	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002d4a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002d4e	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002d54	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002d57	            0x7e07	                           jle 0x4002d60	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002d59	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002d5e	            0x75da	                           jne 0x4002d3a	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002d60	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1726	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002d65	            0x747b	                            je 0x4002de2	      1726	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002d67	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1727	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002d6b	          0x488b00	                    mov rax, qword [rax]	      1727	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002d6e	        0x488945e0	             mov qword [rbp - 0x20], rax	      1727	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002d72	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1728	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	IF_4
0x4002d76	           0xfb600	                   movzx eax, byte [rax]	      1728	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	IF_4
0x4002d79	            0x3c2a	                            cmp al, 0x2a	      1728	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	IF_4
0x4002d7b	            0x7515	                           jne 0x4002d92	      1728	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	IF_4
0x4002d7d	      0x488345e001	               add qword [rbp - 0x20], 1	      1729	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	IF_4
0x4002d82	        0x488b45f8	                mov rax, qword [rbp - 8]	      1730	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	IF_4
0x4002d86	    0xc780b4000000	               mov dword [rax + 0xb4], 1	      1730	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	IF_4
0x4002d90	            0xeb0e	                           jmp 0x4002da0	      1730	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	IF_4
0x4002d92	        0x488b45f8	                mov rax, qword [rbp - 8]	      1733	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	ELSE_2
0x4002d96	    0xc780b4000000	               mov dword [rax + 0xb4], 0	      1733	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	ELSE_2
0x4002da0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	CALL_1
0x4002da4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	CALL_1
0x4002da8	    0x488d35000000	                   lea rsi, [0x04002daf]	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	CALL_1
0x4002daf	          0x4889c7	                            mov rdi, rax	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	CALL_1
0x4002db2	      0xb800000000	                              mov eax, 0	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	CALL_1
0x4002db7	      0xe800000000	                          call 0x4002dbc	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	CALL_1
0x4002dbc	          0x8945d0	             mov dword [rbp - 0x30], eax	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	CALL_1
0x4002dbf	        0x837dd000	               cmp dword [rbp - 0x30], 0	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	CALL_1
0x4002dc3	            0x7408	                            je 0x4002dcd	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	CALL_1
0x4002dc5	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	CALL_1
0x4002dc8	      0xe971010000	                           jmp 0x4002f3e	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	CALL_1
0x4002dcd	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1736	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	CALL_2
0x4002dd0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1736	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	CALL_2
0x4002dd4	            0x89d6	                            mov esi, edx	      1736	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	CALL_2
0x4002dd6	          0x4889c7	                            mov rdi, rax	      1736	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	CALL_2
0x4002dd9	      0xe899dfffff	                         call sym._state	      1736	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	CALL_2
0x4002dde	        0xc645cf01	                mov byte [rbp - 0x31], 1	      1737	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002de2	         0xfb645cf	            movzx eax, byte [rbp - 0x31]	      1741	ftp.c	FUNCTION_29	IF_5
0x4002de6	          0x83f001	                              xor eax, 1	      1741	ftp.c	FUNCTION_29	IF_5
0x4002de9	            0x84c0	                             test al, al	      1741	ftp.c	FUNCTION_29	IF_5
0x4002deb	     0xf844a010000	                            je 0x4002f3b	      1741	ftp.c	FUNCTION_29	IF_5
0x4002df1	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1743	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002df4	          0x83f80e	                            cmp eax, 0xe	      1743	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002df7	     0xf8427010000	                            je 0x4002f24	      1743	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002dfd	          0x83f80f	                            cmp eax, 0xf	      1743	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002e00	     0xf8434010000	                            je 0x4002f3a	      1743	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002e06	          0x83f80d	                            cmp eax, 0xd	      1743	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002e09	            0x7414	                            je 0x4002e1f	      1743	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002e0b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1746	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_3
0x4002e0f	          0x4889c7	                            mov rdi, rax	      1746	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_3
0x4002e12	      0xe8cbe1ffff	                  call sym.ftp_state_cwd	      1746	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_3
0x4002e17	          0x8945d0	             mov dword [rbp - 0x30], eax	      1746	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_3
0x4002e1a	      0xe91c010000	                           jmp 0x4002f3b	      1747	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002e1f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1749	ftp.c	FUNCTION_29	IF_5	SWITCH_2	IF_6
0x4002e23	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1749	ftp.c	FUNCTION_29	IF_5	SWITCH_2	IF_6
0x4002e26	            0x85c0	                           test eax, eax	      1749	ftp.c	FUNCTION_29	IF_5	SWITCH_2	IF_6
0x4002e28	            0x7416	                            je 0x4002e40	      1749	ftp.c	FUNCTION_29	IF_5	SWITCH_2	IF_6
0x4002e2a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1750	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_4
0x4002e2e	      0xbe00000000	                              mov esi, 0	      1750	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_4
0x4002e33	          0x4889c7	                            mov rdi, rax	      1750	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_4
0x4002e36	      0xe83cdfffff	                         call sym._state	      1750	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_4
0x4002e3b	      0xe9fb000000	                           jmp 0x4002f3b	      1773	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002e40	        0x488b45f8	                mov rax, qword [rbp - 8]	      1752	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7
0x4002e44	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	      1752	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7
0x4002e4b	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      1752	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7
0x4002e4f	            0x743c	                            je 0x4002e8d	      1752	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7
0x4002e51	        0x488b45f8	                mov rax, qword [rbp - 8]	      1753	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_5
0x4002e55	    0x488b90d80000	            mov rdx, qword [rax + 0xd8] 	      1753	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_5
0x4002e5c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1753	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_5
0x4002e60	          0x4889d6	                            mov rsi, rdx	      1753	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_5
0x4002e63	          0x4889c7	                            mov rdi, rax	      1753	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_5
0x4002e66	      0xe800000000	                          call 0x4002e6b	      1753	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_5
0x4002e6b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1754	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_6
0x4002e6f	    0x488b90d80000	            mov rdx, qword [rax + 0xd8] 	      1754	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_6
0x4002e76	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1754	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_6
0x4002e7a	          0x4889d6	                            mov rsi, rdx	      1754	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_6
0x4002e7d	          0x4889c7	                            mov rdi, rax	      1754	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_6
0x4002e80	      0xe8fe0f0000	                 call sym.ftp_state_retr	      1754	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_6
0x4002e85	          0x8945d0	             mov dword [rbp - 0x30], eax	      1754	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_6
0x4002e88	      0xe9ae000000	                           jmp 0x4002f3b	      1773	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002e8d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1757	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002e91	     0xfb680bf0700	          movzx eax, byte [rax + 0x7bf] 	      1757	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002e98	            0x84c0	                             test al, al	      1757	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002e9a	            0x7444	                            je 0x4002ee0	      1757	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002e9c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8	CALL_7
0x4002ea0	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8	CALL_7
0x4002ea7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8	CALL_7
0x4002eab	    0x488d35000000	                   lea rsi, [0x04002eb2]	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8	CALL_7
0x4002eb2	          0x4889c7	                            mov rdi, rax	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8	CALL_7
0x4002eb5	      0xb800000000	                              mov eax, 0	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8	CALL_7
0x4002eba	      0xe800000000	                          call 0x4002ebf	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8	CALL_7
0x4002ebf	          0x8945d0	             mov dword [rbp - 0x30], eax	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8	CALL_7
0x4002ec2	        0x837dd000	               cmp dword [rbp - 0x30], 0	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8	CALL_7
0x4002ec6	            0x7405	                            je 0x4002ecd	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8	CALL_7
0x4002ec8	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8	CALL_7
0x4002ecb	            0xeb71	                           jmp 0x4002f3e	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8	CALL_7
0x4002ecd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1765	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8	CALL_8
0x4002ed1	      0xbe20000000	                           mov esi, 0x20	      1765	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8	CALL_8
0x4002ed6	          0x4889c7	                            mov rdi, rax	      1765	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8	CALL_8
0x4002ed9	      0xe899deffff	                         call sym._state	      1765	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8	CALL_8
0x4002ede	            0xeb5b	                           jmp 0x4002f3b	      1773	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002ee0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5	CALL_9
0x4002ee4	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5	CALL_9
0x4002eeb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5	CALL_9
0x4002eef	    0x488d35000000	                   lea rsi, [0x04002ef6]	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5	CALL_9
0x4002ef6	          0x4889c7	                            mov rdi, rax	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5	CALL_9
0x4002ef9	      0xb800000000	                              mov eax, 0	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5	CALL_9
0x4002efe	      0xe800000000	                          call 0x4002f03	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5	CALL_9
0x4002f03	          0x8945d0	             mov dword [rbp - 0x30], eax	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5	CALL_9
0x4002f06	        0x837dd000	               cmp dword [rbp - 0x30], 0	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5	CALL_9
0x4002f0a	            0x7405	                            je 0x4002f11	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5	CALL_9
0x4002f0c	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5	CALL_9
0x4002f0f	            0xeb2d	                           jmp 0x4002f3e	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5	CALL_9
0x4002f11	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1769	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5	CALL_10
0x4002f15	      0xbe18000000	                           mov esi, 0x18	      1769	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5	CALL_10
0x4002f1a	          0x4889c7	                            mov rdi, rax	      1769	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5	CALL_10
0x4002f1d	      0xe855deffff	                         call sym._state	      1769	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5	CALL_10
0x4002f22	            0xeb17	                           jmp 0x4002f3b	      1773	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002f24	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1775	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_11
0x4002f28	      0xbe00000000	                              mov esi, 0	      1775	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_11
0x4002f2d	          0x4889c7	                            mov rdi, rax	      1775	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_11
0x4002f30	      0xe8cbf9ffff	             call sym.ftp_state_ul_setup	      1775	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_11
0x4002f35	          0x8945d0	             mov dword [rbp - 0x30], eax	      1775	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_11
0x4002f38	            0xeb01	                           jmp 0x4002f3b	      1776	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002f3a	              0x90	                                     nop	      1778	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002f3b	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1782	ftp.c	FUNCTION_29
0x4002f3e	              0xc9	                                   leave	      1783	ftp.c	FUNCTION_29
0x4002f3f	              0xc3	                                     ret	      1783	ftp.c	FUNCTION_29
ftp_state_get_resp	DO,0:FOR,0:functions,0:ELSE,5:SWITCH,0:CALL,11:IF,14:WHILE,1	205
0x4004593	              0x55	                                push rbp	      2377	ftp.c	FUNCTION_40
0x4004594	          0x4889e5	                            mov rbp, rsp	      2377	ftp.c	FUNCTION_40
0x4004597	        0x4883ec60	                           sub rsp, 0x60	      2377	ftp.c	FUNCTION_40
0x400459b	        0x48897da8	             mov qword [rbp - 0x58], rdi	      2377	ftp.c	FUNCTION_40
0x400459f	          0x8975a4	             mov dword [rbp - 0x5c], esi	      2377	ftp.c	FUNCTION_40
0x40045a2	          0x8955a0	             mov dword [rbp - 0x60], edx	      2377	ftp.c	FUNCTION_40
0x40045a5	    0x64488b042528	                mov rax, qword fs:[0x28]	      2377	ftp.c	FUNCTION_40
0x40045ae	        0x488945f8	                mov qword [rbp - 8], rax	      2377	ftp.c	FUNCTION_40
0x40045b2	            0x31c0	                            xor eax, eax	      2377	ftp.c	FUNCTION_40
0x40045b4	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      2378	ftp.c	FUNCTION_40
0x40045bb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2379	ftp.c	FUNCTION_40
0x40045bf	          0x488b00	                    mov rax, qword [rax]	      2379	ftp.c	FUNCTION_40
0x40045c2	        0x488945d8	             mov qword [rbp - 0x28], rax	      2379	ftp.c	FUNCTION_40
0x40045c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2380	ftp.c	FUNCTION_40
0x40045ca	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      2380	ftp.c	FUNCTION_40
0x40045d1	        0x488945e0	             mov qword [rbp - 0x20], rax	      2380	ftp.c	FUNCTION_40
0x40045d5	    0x817da4960000	           cmp dword [rbp - 0x5c], 0x96 	      2382	ftp.c	FUNCTION_40	IF_1
0x40045dc	            0x740a	                            je 0x40045e8	      2382	ftp.c	FUNCTION_40	IF_1
0x40045de	        0x837da47d	           cmp dword [rbp - 0x5c], 0x7d 	      2382	ftp.c	FUNCTION_40	IF_1
0x40045e2	     0xf856a020000	                           jne 0x4004852	      2382	ftp.c	FUNCTION_40	IF_1
0x40045e8	    0x48c745c0ffff	mov qword [rbp - 0x40], 0xffffffffffffffff	      2401	ftp.c	FUNCTION_40	IF_1
0x40045f0	        0x837da01f	           cmp dword [rbp - 0x60], 0x1f 	      2413	ftp.c	FUNCTION_40	IF_1	IF_2
0x40045f4	     0xf84df000000	                            je 0x40046d9	      2413	ftp.c	FUNCTION_40	IF_1	IF_2
0x40045fa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2414	ftp.c	FUNCTION_40	IF_1	IF_2
0x40045fe	     0xfb680940700	          movzx eax, byte [rax + 0x794] 	      2414	ftp.c	FUNCTION_40	IF_1	IF_2
0x4004605	          0x83f001	                              xor eax, 1	      2414	ftp.c	FUNCTION_40	IF_1	IF_2
0x4004608	            0x84c0	                             test al, al	      2413	ftp.c	FUNCTION_40	IF_1	IF_2
0x400460a	     0xf84c9000000	                            je 0x40046d9	      2413	ftp.c	FUNCTION_40	IF_1	IF_2
0x4004610	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2415	ftp.c	FUNCTION_40	IF_1	IF_2
0x4004614	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2415	ftp.c	FUNCTION_40	IF_1	IF_2
0x4004618	          0x4885c0	                           test rax, rax	      2414	ftp.c	FUNCTION_40	IF_1	IF_2
0x400461b	     0xf8fb8000000	                            jg 0x40046d9	      2414	ftp.c	FUNCTION_40	IF_1	IF_2
0x4004621	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2424	ftp.c	FUNCTION_40	IF_1	IF_2
0x4004625	    0x488b80a80c00	           mov rax, qword [rax + 0xca8] 	      2424	ftp.c	FUNCTION_40	IF_1	IF_2
0x400462c	        0x488945e8	             mov qword [rbp - 0x18], rax	      2424	ftp.c	FUNCTION_40	IF_1	IF_2
0x4004630	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2425	ftp.c	FUNCTION_40	IF_1	IF_2	CALL_1
0x4004634	    0x488d35000000	                   lea rsi, [0x0400463b]	      2425	ftp.c	FUNCTION_40	IF_1	IF_2	CALL_1
0x400463b	          0x4889c7	                            mov rdi, rax	      2425	ftp.c	FUNCTION_40	IF_1	IF_2	CALL_1
0x400463e	      0xe800000000	                          call 0x4004643	      2425	ftp.c	FUNCTION_40	IF_1	IF_2	CALL_1
0x4004643	        0x488945c8	             mov qword [rbp - 0x38], rax	      2425	ftp.c	FUNCTION_40	IF_1	IF_2	CALL_1
0x4004647	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2426	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3
0x400464c	     0xf84a2000000	                            je 0x40046f4	      2426	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3
0x4004652	      0x48836dc801	               sub qword [rbp - 0x38], 1	      2427	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3
0x4004657	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2427	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3
0x400465b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2427	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3
0x400465f	          0x4829c2	                            sub rdx, rax	      2427	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3
0x4004662	          0x4889d0	                            mov rax, rdx	      2427	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3
0x4004665	        0x488945d0	             mov qword [rbp - 0x30], rax	      2427	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3
0x4004669	            0xeb2f	                           jmp 0x400469a	      2429	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1
0x400466b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2431	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_4
0x400466f	           0xfb600	                   movzx eax, byte [rax]	      2431	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_4
0x4004672	            0x3c28	                            cmp al, 0x28	      2431	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_4
0x4004674	            0x7432	                            je 0x40046a8	      2431	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_4
0x4004676	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2434	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_5	CALL_2
0x400467a	           0xfb600	                   movzx eax, byte [rax]	      2434	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_5	CALL_2
0x400467d	           0xfb6c0	                           movzx eax, al	      2434	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_5	CALL_2
0x4004680	            0x89c7	                            mov edi, eax	      2434	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_5	CALL_2
0x4004682	      0xe800000000	                          call 0x4004687	      2434	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_5	CALL_2
0x4004687	            0x85c0	                           test eax, eax	      2434	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_5	CALL_2
0x4004689	            0x750a	                           jne 0x4004695	      2434	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_5	CALL_2
0x400468b	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2435	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_5
0x4004693	            0xeb14	                           jmp 0x40046a9	      2436	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_5
0x4004695	      0x48836dc801	               sub qword [rbp - 0x38], 1	      2439	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1
0x400469a	      0x48836dd001	               sub qword [rbp - 0x30], 1	      2429	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1
0x400469f	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      2429	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1
0x40046a4	            0x75c5	                           jne 0x400466b	      2429	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1
0x40046a6	            0xeb01	                           jmp 0x40046a9	      2429	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1
0x40046a8	              0x90	                                     nop	      2432	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_4
0x40046a9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2442	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6
0x40046ad	        0x488d5001	                      lea rdx, [rax + 1]	      2442	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6
0x40046b1	        0x488955c8	             mov qword [rbp - 0x38], rdx	      2442	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6
0x40046b5	          0x4885c0	                           test rax, rax	      2442	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6
0x40046b8	            0x743a	                            je 0x40046f4	      2442	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6
0x40046ba	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      2444	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6	CALL_3
0x40046be	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2444	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6	CALL_3
0x40046c2	          0x4889d1	                            mov rcx, rdx	      2444	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6	CALL_3
0x40046c5	      0xba00000000	                              mov edx, 0	      2444	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6	CALL_3
0x40046ca	      0xbe00000000	                              mov esi, 0	      2444	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6	CALL_3
0x40046cf	          0x4889c7	                            mov rdi, rax	      2444	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6	CALL_3
0x40046d2	      0xe800000000	                          call 0x40046d7	      2444	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6	CALL_3
0x40046d7	            0xeb1b	                           jmp 0x40046f4	      2415	ftp.c	FUNCTION_40	IF_1	IF_2
0x40046d9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2448	ftp.c	FUNCTION_40	IF_1	ELSE_1	IF_7
0x40046dd	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2448	ftp.c	FUNCTION_40	IF_1	ELSE_1	IF_7
0x40046e1	          0x4885c0	                           test rax, rax	      2448	ftp.c	FUNCTION_40	IF_1	ELSE_1	IF_7
0x40046e4	            0x780f	                            js 0x40046f5	      2448	ftp.c	FUNCTION_40	IF_1	ELSE_1	IF_7
0x40046e6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2449	ftp.c	FUNCTION_40	IF_1	ELSE_1	IF_7
0x40046ea	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2449	ftp.c	FUNCTION_40	IF_1	ELSE_1	IF_7
0x40046ee	        0x488945c0	             mov qword [rbp - 0x40], rax	      2449	ftp.c	FUNCTION_40	IF_1	ELSE_1	IF_7
0x40046f2	            0xeb01	                           jmp 0x40046f5	      2449	ftp.c	FUNCTION_40	IF_1	ELSE_1	IF_7
0x40046f4	              0x90	                                     nop	      2415	ftp.c	FUNCTION_40	IF_1	IF_2
0x40046f5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x40046f9	    0x488b90d00000	            mov rdx, qword [rax + 0xd0] 	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x4004700	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x4004704	          0x4839c2	                            cmp rdx, rax	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x4004707	            0x7d37	                           jge 0x4004740	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x4004709	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x400470d	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x4004714	          0x4885c0	                           test rax, rax	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x4004717	            0x7e27	                           jle 0x4004740	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x4004719	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2452	ftp.c	FUNCTION_40	IF_1	IF_8
0x400471d	    0x488b90d00000	            mov rdx, qword [rax + 0xd0] 	      2452	ftp.c	FUNCTION_40	IF_1	IF_8
0x4004724	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2452	ftp.c	FUNCTION_40	IF_1	IF_8
0x4004728	    0x488990c00000	             mov qword [rax + 0xc0], rdx	      2452	ftp.c	FUNCTION_40	IF_1	IF_8
0x400472f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2452	ftp.c	FUNCTION_40	IF_1	IF_8
0x4004733	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      2452	ftp.c	FUNCTION_40	IF_1	IF_8
0x400473a	        0x488945c0	             mov qword [rbp - 0x40], rax	      2452	ftp.c	FUNCTION_40	IF_1	IF_8
0x400473e	            0xeb1d	                           jmp 0x400475d	      2452	ftp.c	FUNCTION_40	IF_1	IF_8
0x4004740	        0x837da01f	           cmp dword [rbp - 0x60], 0x1f 	      2453	ftp.c	FUNCTION_40	IF_1	ELSE_2	IF_9
0x4004744	            0x7417	                            je 0x400475d	      2453	ftp.c	FUNCTION_40	IF_1	ELSE_2	IF_9
0x4004746	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2453	ftp.c	FUNCTION_40	IF_1	ELSE_2	IF_9
0x400474a	     0xfb680940700	          movzx eax, byte [rax + 0x794] 	      2453	ftp.c	FUNCTION_40	IF_1	ELSE_2	IF_9
0x4004751	            0x84c0	                             test al, al	      2453	ftp.c	FUNCTION_40	IF_1	ELSE_2	IF_9
0x4004753	            0x7408	                            je 0x400475d	      2453	ftp.c	FUNCTION_40	IF_1	ELSE_2	IF_9
0x4004755	    0x48c745c0ffff	mov qword [rbp - 0x40], 0xffffffffffffffff	      2454	ftp.c	FUNCTION_40	IF_1	ELSE_2	IF_9
0x400475d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x4004761	    0x488b90d00000	            mov rdx, qword [rax + 0xd0] 	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x4004768	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x400476c	    0x488d35000000	                   lea rsi, [0x04004773]	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x4004773	          0x4889c7	                            mov rdi, rax	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x4004776	      0xb800000000	                              mov eax, 0	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x400477b	      0xe800000000	                          call 0x4004780	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x4004780	        0x837da01f	           cmp dword [rbp - 0x60], 0x1f 	      2459	ftp.c	FUNCTION_40	IF_1	IF_10
0x4004784	            0x741c	                            je 0x40047a2	      2459	ftp.c	FUNCTION_40	IF_1	IF_10
0x4004786	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2460	ftp.c	FUNCTION_40	IF_1	IF_10	CALL_5
0x400478a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2460	ftp.c	FUNCTION_40	IF_1	IF_10	CALL_5
0x400478e	    0x488d35000000	                   lea rsi, [0x04004795]	      2460	ftp.c	FUNCTION_40	IF_1	IF_10	CALL_5
0x4004795	          0x4889c7	                            mov rdi, rax	      2460	ftp.c	FUNCTION_40	IF_1	IF_10	CALL_5
0x4004798	      0xb800000000	                              mov eax, 0	      2460	ftp.c	FUNCTION_40	IF_1	IF_10	CALL_5
0x400479d	      0xe800000000	                          call 0x40047a2	      2460	ftp.c	FUNCTION_40	IF_1	IF_10	CALL_5
0x40047a2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2464	ftp.c	FUNCTION_40	IF_1
0x40047a6	          0x8b55a0	             mov edx, dword [rbp - 0x60]	      2464	ftp.c	FUNCTION_40	IF_1
0x40047a9	    0x899070060000	            mov dword [rax + 0x670], edx	      2464	ftp.c	FUNCTION_40	IF_1
0x40047af	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2465	ftp.c	FUNCTION_40	IF_1
0x40047b3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2465	ftp.c	FUNCTION_40	IF_1
0x40047b7	    0x488990780600	            mov qword [rax + 0x678], rdx	      2465	ftp.c	FUNCTION_40	IF_1
0x40047be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2467	ftp.c	FUNCTION_40	IF_1	IF_11
0x40047c2	     0xfb680970700	          movzx eax, byte [rax + 0x797] 	      2467	ftp.c	FUNCTION_40	IF_1	IF_11
0x40047c9	            0x84c0	                             test al, al	      2467	ftp.c	FUNCTION_40	IF_1	IF_11
0x40047cb	            0x7477	                            je 0x4004844	      2467	ftp.c	FUNCTION_40	IF_1	IF_11
0x40047cd	        0x488d55bb	                   lea rdx, [rbp - 0x45]	      2470	ftp.c	FUNCTION_40	IF_1	IF_11	CALL_6
0x40047d1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2470	ftp.c	FUNCTION_40	IF_1	IF_11	CALL_6
0x40047d5	          0x4889d6	                            mov rsi, rdx	      2470	ftp.c	FUNCTION_40	IF_1	IF_11	CALL_6
0x40047d8	          0x4889c7	                            mov rdi, rax	      2470	ftp.c	FUNCTION_40	IF_1	IF_11	CALL_6
0x40047db	      0xe8d8c0ffff	             call sym.AllowServerConnect	      2470	ftp.c	FUNCTION_40	IF_1	IF_11	CALL_6
0x40047e0	          0x8945bc	             mov dword [rbp - 0x44], eax	      2470	ftp.c	FUNCTION_40	IF_1	IF_11	CALL_6
0x40047e3	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      2471	ftp.c	FUNCTION_40	IF_1	IF_11	IF_12
0x40047e7	            0x7408	                            je 0x40047f1	      2471	ftp.c	FUNCTION_40	IF_1	IF_11	IF_12
0x40047e9	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2472	ftp.c	FUNCTION_40	IF_1	IF_11	IF_12
0x40047ec	      0xe9ca000000	                           jmp 0x40048bb	      2472	ftp.c	FUNCTION_40	IF_1	IF_11	IF_12
0x40047f1	         0xfb645bb	            movzx eax, byte [rbp - 0x45]	      2474	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x40047f5	          0x83f001	                              xor eax, 1	      2474	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x40047f8	            0x84c0	                             test al, al	      2474	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x40047fa	     0xf84b7000000	                            je 0x40048b7	      2474	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x4004800	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2475	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x4004804	    0x4805b0050000	                          add rax, 0x5b0	      2475	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x400480a	        0x488945f0	             mov qword [rbp - 0x10], rax	      2475	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x400480e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2476	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13	CALL_7
0x4004812	    0x488d35000000	                   lea rsi, [0x04004819]	      2476	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13	CALL_7
0x4004819	          0x4889c7	                            mov rdi, rax	      2476	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13	CALL_7
0x400481c	      0xb800000000	                              mov eax, 0	      2476	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13	CALL_7
0x4004821	      0xe800000000	                          call 0x4004826	      2476	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13	CALL_7
0x4004826	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2477	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13	CALL_8
0x400482a	      0xbe00000000	                              mov esi, 0	      2477	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13	CALL_8
0x400482f	          0x4889c7	                            mov rdi, rax	      2477	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13	CALL_8
0x4004832	      0xe840c5ffff	                         call sym._state	      2477	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13	CALL_8
0x4004837	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2478	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x400483b	    0xc68099000000	                mov byte [rax + 0x99], 1	      2478	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x4004842	            0xeb73	                           jmp 0x40048b7	      2382	ftp.c	FUNCTION_40	IF_1
0x4004844	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2482	ftp.c	FUNCTION_40	IF_1	CALL_9
0x4004848	          0x4889c7	                            mov rdi, rax	      2482	ftp.c	FUNCTION_40	IF_1	CALL_9
0x400484b	      0xe82fbfffff	               call sym.InitiateTransfer	      2482	ftp.c	FUNCTION_40	IF_1	CALL_9
0x4004850	            0xeb69	                           jmp 0x40048bb	      2482	ftp.c	FUNCTION_40	IF_1	CALL_9
0x4004852	        0x837da01f	           cmp dword [rbp - 0x60], 0x1f 	      2485	ftp.c	FUNCTION_40	ELSE_4	IF_14
0x4004856	            0x7527	                           jne 0x400487f	      2485	ftp.c	FUNCTION_40	ELSE_4	IF_14
0x4004858	    0x817da4c20100	          cmp dword [rbp - 0x5c], 0x1c2 	      2485	ftp.c	FUNCTION_40	ELSE_4	IF_14
0x400485f	            0x751e	                           jne 0x400487f	      2485	ftp.c	FUNCTION_40	ELSE_4	IF_14
0x4004861	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2487	ftp.c	FUNCTION_40	ELSE_4	IF_14
0x4004865	    0xc74018020000	               mov dword [rax + 0x18], 2	      2487	ftp.c	FUNCTION_40	ELSE_4	IF_14
0x400486c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2488	ftp.c	FUNCTION_40	ELSE_4	IF_14	CALL_10
0x4004870	      0xbe00000000	                              mov esi, 0	      2488	ftp.c	FUNCTION_40	ELSE_4	IF_14	CALL_10
0x4004875	          0x4889c7	                            mov rdi, rax	      2488	ftp.c	FUNCTION_40	ELSE_4	IF_14	CALL_10
0x4004878	      0xe8fac4ffff	                         call sym._state	      2488	ftp.c	FUNCTION_40	ELSE_4	IF_14	CALL_10
0x400487d	            0xeb39	                           jmp 0x40048b8	      2488	ftp.c	FUNCTION_40	ELSE_4	IF_14	CALL_10
0x400487f	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	      2491	ftp.c	FUNCTION_40	ELSE_4	ELSE_5	CALL_11
0x4004882	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2491	ftp.c	FUNCTION_40	ELSE_4	ELSE_5	CALL_11
0x4004886	    0x488d35000000	                   lea rsi, [0x0400488d]	      2491	ftp.c	FUNCTION_40	ELSE_4	ELSE_5	CALL_11
0x400488d	          0x4889c7	                            mov rdi, rax	      2491	ftp.c	FUNCTION_40	ELSE_4	ELSE_5	CALL_11
0x4004890	      0xb800000000	                              mov eax, 0	      2491	ftp.c	FUNCTION_40	ELSE_4	ELSE_5	CALL_11
0x4004895	      0xe800000000	                          call 0x400489a	      2491	ftp.c	FUNCTION_40	ELSE_4	ELSE_5	CALL_11
0x400489a	        0x837da020	           cmp dword [rbp - 0x60], 0x20 	      2492	ftp.c	FUNCTION_40	ELSE_4	ELSE_5
0x400489e	            0x7510	                           jne 0x40048b0	      2492	ftp.c	FUNCTION_40	ELSE_4	ELSE_5
0x40048a0	    0x817da4260200	          cmp dword [rbp - 0x5c], 0x226 	      2492	ftp.c	FUNCTION_40	ELSE_4	ELSE_5
0x40048a7	            0x7507	                           jne 0x40048b0	      2492	ftp.c	FUNCTION_40	ELSE_4	ELSE_5
0x40048a9	      0xb84e000000	                           mov eax, 0x4e	      2492	ftp.c	FUNCTION_40	ELSE_4	ELSE_5
0x40048ae	            0xeb0b	                           jmp 0x40048bb	      2492	ftp.c	FUNCTION_40	ELSE_4	ELSE_5
0x40048b0	      0xb813000000	                           mov eax, 0x13	      2492	ftp.c	FUNCTION_40	ELSE_4	ELSE_5
0x40048b5	            0xeb04	                           jmp 0x40048bb	      2492	ftp.c	FUNCTION_40	ELSE_4	ELSE_5
0x40048b7	              0x90	                                     nop	      2382	ftp.c	FUNCTION_40	IF_1
0x40048b8	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2498	ftp.c	FUNCTION_40
0x40048bb	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2499	ftp.c	FUNCTION_40
0x40048bf	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2499	ftp.c	FUNCTION_40
0x40048c8	            0x7405	                            je 0x40048cf	      2499	ftp.c	FUNCTION_40
0x40048ca	      0xe800000000	                          call 0x40048cf	      2499	ftp.c	FUNCTION_40
0x40048cf	              0xc9	                                   leave	      2499	ftp.c	FUNCTION_40
0x40048d0	              0xc3	                                     ret	      2499	ftp.c	FUNCTION_40
wc_statemach	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,2:CALL,22:IF,12:WHILE,0	300
0x4006de7	              0x55	                                push rbp	      3792	ftp.c	FUNCTION_57
0x4006de8	          0x4889e5	                            mov rbp, rsp	      3792	ftp.c	FUNCTION_57
0x4006deb	        0x4883ec50	                           sub rsp, 0x50	      3792	ftp.c	FUNCTION_57
0x4006def	        0x48897db8	             mov qword [rbp - 0x48], rdi	      3792	ftp.c	FUNCTION_57
0x4006df3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3793	ftp.c	FUNCTION_57
0x4006df7	          0x488b00	                    mov rax, qword [rax]	      3793	ftp.c	FUNCTION_57
0x4006dfa	    0x480508510000	                         add rax, 0x5108	      3793	ftp.c	FUNCTION_57
0x4006e00	        0x488945c8	             mov qword [rbp - 0x38], rax	      3793	ftp.c	FUNCTION_57
0x4006e04	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      3794	ftp.c	FUNCTION_57
0x4006e0b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3796	ftp.c	FUNCTION_57	SWITCH_1
0x4006e0f	            0x8b00	                    mov eax, dword [rax]	      3796	ftp.c	FUNCTION_57	SWITCH_1
0x4006e11	          0x83f807	                              cmp eax, 7	      3796	ftp.c	FUNCTION_57	SWITCH_1
0x4006e14	     0xf876a040000	                            ja 0x4007284	      3796	ftp.c	FUNCTION_57	SWITCH_1
0x4006e1a	            0x89c0	                            mov eax, eax	      3796	ftp.c	FUNCTION_57	SWITCH_1
0x4006e1c	    0x488d14850000	                        lea rdx, [rax*4]	      3796	ftp.c	FUNCTION_57	SWITCH_1
0x4006e24	    0x488d05000000	                   lea rax, [0x04006e2b]	      3796	ftp.c	FUNCTION_57	SWITCH_1
0x4006e2b	          0x8b0402	              mov eax, dword [rdx + rax]	      3796	ftp.c	FUNCTION_57	SWITCH_1
0x4006e2e	          0x4863d0	                         movsxd rdx, eax	      3796	ftp.c	FUNCTION_57	SWITCH_1
0x4006e31	    0x488d05000000	                   lea rax, [0x04006e38]	      3796	ftp.c	FUNCTION_57	SWITCH_1
0x4006e38	          0x4801d0	                            add rax, rdx	      3796	ftp.c	FUNCTION_57	SWITCH_1
0x4006e3b	            0xffe0	                                 jmp rax	      3796	ftp.c	FUNCTION_57	SWITCH_1
0x4006e3d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3798	ftp.c	FUNCTION_57	SWITCH_1	CALL_1
0x4006e41	          0x4889c7	                            mov rdi, rax	      3798	ftp.c	FUNCTION_57	SWITCH_1	CALL_1
0x4006e44	      0xe89cfcffff	                   call sym.init_wc_data	      3798	ftp.c	FUNCTION_57	SWITCH_1	CALL_1
0x4006e49	          0x8945c4	             mov dword [rbp - 0x3c], eax	      3798	ftp.c	FUNCTION_57	SWITCH_1	CALL_1
0x4006e4c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3799	ftp.c	FUNCTION_57	SWITCH_1	IF_1
0x4006e50	            0x8b00	                    mov eax, dword [rax]	      3799	ftp.c	FUNCTION_57	SWITCH_1	IF_1
0x4006e52	          0x83f804	                              cmp eax, 4	      3799	ftp.c	FUNCTION_57	SWITCH_1	IF_1
0x4006e55	     0xf8422040000	                            je 0x400727d	      3799	ftp.c	FUNCTION_57	SWITCH_1	IF_1
0x4006e5b	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      3802	ftp.c	FUNCTION_57	SWITCH_1
0x4006e5f	            0x7407	                            je 0x4006e68	      3802	ftp.c	FUNCTION_57	SWITCH_1
0x4006e61	      0xba06000000	                              mov edx, 6	      3802	ftp.c	FUNCTION_57	SWITCH_1
0x4006e66	            0xeb05	                           jmp 0x4006e6d	      3802	ftp.c	FUNCTION_57	SWITCH_1
0x4006e68	      0xba02000000	                              mov edx, 2	      3802	ftp.c	FUNCTION_57	SWITCH_1
0x4006e6d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3802	ftp.c	FUNCTION_57	SWITCH_1
0x4006e71	            0x8910	                    mov dword [rax], edx	      3802	ftp.c	FUNCTION_57	SWITCH_1
0x4006e73	      0xe90c040000	                           jmp 0x4007284	      3803	ftp.c	FUNCTION_57	SWITCH_1
0x4006e78	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3808	ftp.c	FUNCTION_57	SWITCH_1
0x4006e7c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3808	ftp.c	FUNCTION_57	SWITCH_1
0x4006e80	        0x488945d0	             mov qword [rbp - 0x30], rax	      3808	ftp.c	FUNCTION_57	SWITCH_1
0x4006e84	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3809	ftp.c	FUNCTION_57	SWITCH_1
0x4006e88	          0x488b00	                    mov rax, qword [rax]	      3809	ftp.c	FUNCTION_57	SWITCH_1
0x4006e8b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3809	ftp.c	FUNCTION_57	SWITCH_1
0x4006e8f	        0x488b5208	                mov rdx, qword [rdx + 8]	      3809	ftp.c	FUNCTION_57	SWITCH_1
0x4006e93	    0x488990880200	            mov qword [rax + 0x288], rdx	      3809	ftp.c	FUNCTION_57	SWITCH_1
0x4006e9a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3810	ftp.c	FUNCTION_57	SWITCH_1
0x4006e9e	          0x488b00	                    mov rax, qword [rax]	      3810	ftp.c	FUNCTION_57	SWITCH_1
0x4006ea1	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3810	ftp.c	FUNCTION_57	SWITCH_1
0x4006ea5	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      3810	ftp.c	FUNCTION_57	SWITCH_1
0x4006ea9	    0x488990100200	            mov qword [rax + 0x210], rdx	      3810	ftp.c	FUNCTION_57	SWITCH_1
0x4006eb0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3811	ftp.c	FUNCTION_57	SWITCH_1
0x4006eb4	    0x48c740080000	                  mov qword [rax + 8], 0	      3811	ftp.c	FUNCTION_57	SWITCH_1
0x4006ebc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3812	ftp.c	FUNCTION_57	SWITCH_1
0x4006ec0	    0x48c740100000	               mov qword [rax + 0x10], 0	      3812	ftp.c	FUNCTION_57	SWITCH_1
0x4006ec8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3813	ftp.c	FUNCTION_57	SWITCH_1
0x4006ecc	    0xc70003000000	                      mov dword [rax], 3	      3813	ftp.c	FUNCTION_57	SWITCH_1
0x4006ed2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3815	ftp.c	FUNCTION_57	SWITCH_1	IF_2	CALL_2
0x4006ed6	          0x488b00	                    mov rax, qword [rax]	      3815	ftp.c	FUNCTION_57	SWITCH_1	IF_2	CALL_2
0x4006ed9	          0x4889c7	                            mov rdi, rax	      3815	ftp.c	FUNCTION_57	SWITCH_1	IF_2	CALL_2
0x4006edc	      0xe800000000	                          call 0x4006ee1	      3815	ftp.c	FUNCTION_57	SWITCH_1	IF_2	CALL_2
0x4006ee1	            0x85c0	                           test eax, eax	      3815	ftp.c	FUNCTION_57	SWITCH_1	IF_2	CALL_2
0x4006ee3	            0x741b	                            je 0x4006f00	      3815	ftp.c	FUNCTION_57	SWITCH_1	IF_2	CALL_2
0x4006ee5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3817	ftp.c	FUNCTION_57	SWITCH_1	IF_2
0x4006ee9	    0xc70004000000	                      mov dword [rax], 4	      3817	ftp.c	FUNCTION_57	SWITCH_1	IF_2
0x4006eef	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3818	ftp.c	FUNCTION_57	SWITCH_1	IF_2	CALL_3
0x4006ef3	          0x4889c7	                            mov rdi, rax	      3818	ftp.c	FUNCTION_57	SWITCH_1	IF_2	CALL_3
0x4006ef6	      0xe8ecfeffff	                   call sym.wc_statemach	      3818	ftp.c	FUNCTION_57	SWITCH_1	IF_2	CALL_3
0x4006efb	      0xe987030000	                           jmp 0x4007287	      3818	ftp.c	FUNCTION_57	SWITCH_1	IF_2	CALL_3
0x4006f00	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3820	ftp.c	FUNCTION_57	SWITCH_1	IF_3
0x4006f04	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3820	ftp.c	FUNCTION_57	SWITCH_1	IF_3
0x4006f08	          0x4885c0	                           test rax, rax	      3820	ftp.c	FUNCTION_57	SWITCH_1	IF_3
0x4006f0b	            0x7514	                           jne 0x4006f21	      3820	ftp.c	FUNCTION_57	SWITCH_1	IF_3
0x4006f0d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3822	ftp.c	FUNCTION_57	SWITCH_1	IF_3
0x4006f11	    0xc70004000000	                      mov dword [rax], 4	      3822	ftp.c	FUNCTION_57	SWITCH_1	IF_3
0x4006f17	      0xb84e000000	                           mov eax, 0x4e	      3823	ftp.c	FUNCTION_57	SWITCH_1	IF_3
0x4006f1c	      0xe966030000	                           jmp 0x4007287	      3823	ftp.c	FUNCTION_57	SWITCH_1	IF_3
0x4006f21	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3825	ftp.c	FUNCTION_57	SWITCH_1	CALL_4
0x4006f25	          0x4889c7	                            mov rdi, rax	      3825	ftp.c	FUNCTION_57	SWITCH_1	CALL_4
0x4006f28	      0xe8bafeffff	                   call sym.wc_statemach	      3825	ftp.c	FUNCTION_57	SWITCH_1	CALL_4
0x4006f2d	      0xe955030000	                           jmp 0x4007287	      3825	ftp.c	FUNCTION_57	SWITCH_1	CALL_4
0x4006f32	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3830	ftp.c	FUNCTION_57	SWITCH_1
0x4006f36	    0x4805b0050000	                          add rax, 0x5b0	      3830	ftp.c	FUNCTION_57	SWITCH_1
0x4006f3c	        0x488945d8	             mov qword [rbp - 0x28], rax	      3830	ftp.c	FUNCTION_57	SWITCH_1
0x4006f40	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3831	ftp.c	FUNCTION_57	SWITCH_1
0x4006f44	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3831	ftp.c	FUNCTION_57	SWITCH_1
0x4006f48	          0x488b00	                    mov rax, qword [rax]	      3831	ftp.c	FUNCTION_57	SWITCH_1
0x4006f4b	        0x488945e0	             mov qword [rbp - 0x20], rax	      3831	ftp.c	FUNCTION_57	SWITCH_1
0x4006f4f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3833	ftp.c	FUNCTION_57	SWITCH_1	CALL_5
0x4006f53	          0x488b10	                    mov rdx, qword [rax]	      3833	ftp.c	FUNCTION_57	SWITCH_1	CALL_5
0x4006f56	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3833	ftp.c	FUNCTION_57	SWITCH_1	CALL_5
0x4006f5a	        0x488b4008	                mov rax, qword [rax + 8]	      3833	ftp.c	FUNCTION_57	SWITCH_1	CALL_5
0x4006f5e	          0x4889c6	                            mov rsi, rax	      3833	ftp.c	FUNCTION_57	SWITCH_1	CALL_5
0x4006f61	    0x488d3d000000	                   lea rdi, [0x04006f68]	      3833	ftp.c	FUNCTION_57	SWITCH_1	CALL_5
0x4006f68	      0xb800000000	                              mov eax, 0	      3833	ftp.c	FUNCTION_57	SWITCH_1	CALL_5
0x4006f6d	      0xe800000000	                          call 0x4006f72	      3833	ftp.c	FUNCTION_57	SWITCH_1	CALL_5
0x4006f72	        0x488945e8	             mov qword [rbp - 0x18], rax	      3833	ftp.c	FUNCTION_57	SWITCH_1	CALL_5
0x4006f76	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3834	ftp.c	FUNCTION_57	SWITCH_1	IF_4
0x4006f7b	            0x750a	                           jne 0x4006f87	      3834	ftp.c	FUNCTION_57	SWITCH_1	IF_4
0x4006f7d	      0xb81b000000	                           mov eax, 0x1b	      3835	ftp.c	FUNCTION_57	SWITCH_1	IF_4
0x4006f82	      0xe900030000	                           jmp 0x4007287	      3835	ftp.c	FUNCTION_57	SWITCH_1	IF_4
0x4006f87	    0x488b05000000	            mov rax, qword [0x04006f8e] 	      3839	ftp.c	FUNCTION_57	SWITCH_1	CALL_6
0x4006f8e	          0x488b00	                    mov rax, qword [rax]	      3839	ftp.c	FUNCTION_57	SWITCH_1	CALL_6
0x4006f91	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3839	ftp.c	FUNCTION_57	SWITCH_1	CALL_6
0x4006f95	          0x488b12	                    mov rdx, qword [rdx]	      3839	ftp.c	FUNCTION_57	SWITCH_1	CALL_6
0x4006f98	    0x488b92905000	          mov rdx, qword [rdx + 0x5090] 	      3839	ftp.c	FUNCTION_57	SWITCH_1	CALL_6
0x4006f9f	          0x4889d7	                            mov rdi, rdx	      3839	ftp.c	FUNCTION_57	SWITCH_1	CALL_6
0x4006fa2	            0xffd0	                                call rax	      3839	ftp.c	FUNCTION_57	SWITCH_1	CALL_6
0x4006fa4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3839	ftp.c	FUNCTION_57	SWITCH_1	CALL_6
0x4006fa8	          0x488b00	                    mov rax, qword [rax]	      3839	ftp.c	FUNCTION_57	SWITCH_1	CALL_6
0x4006fab	    0x48c780905000	            mov qword [rax + 0x5090], 0 	      3839	ftp.c	FUNCTION_57	SWITCH_1	CALL_6
0x4006fb6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3840	ftp.c	FUNCTION_57	SWITCH_1
0x4006fba	          0x488b00	                    mov rax, qword [rax]	      3840	ftp.c	FUNCTION_57	SWITCH_1
0x4006fbd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3840	ftp.c	FUNCTION_57	SWITCH_1
0x4006fc1	    0x488990905000	          mov qword [rax + 0x5090], rdx 	      3840	ftp.c	FUNCTION_57	SWITCH_1
0x4006fc8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3841	ftp.c	FUNCTION_57	SWITCH_1
0x4006fcc	          0x488b00	                    mov rax, qword [rax]	      3841	ftp.c	FUNCTION_57	SWITCH_1
0x4006fcf	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3841	ftp.c	FUNCTION_57	SWITCH_1
0x4006fd3	    0x488990985000	          mov qword [rax + 0x5098], rdx 	      3841	ftp.c	FUNCTION_57	SWITCH_1
0x4006fda	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3843	ftp.c	FUNCTION_57	SWITCH_1	CALL_7
0x4006fde	          0x488b10	                    mov rdx, qword [rax]	      3843	ftp.c	FUNCTION_57	SWITCH_1	CALL_7
0x4006fe1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3843	ftp.c	FUNCTION_57	SWITCH_1	CALL_7
0x4006fe5	          0x488b00	                    mov rax, qword [rax]	      3843	ftp.c	FUNCTION_57	SWITCH_1	CALL_7
0x4006fe8	    0x488d35000000	                   lea rsi, [0x04006fef]	      3843	ftp.c	FUNCTION_57	SWITCH_1	CALL_7
0x4006fef	          0x4889c7	                            mov rdi, rax	      3843	ftp.c	FUNCTION_57	SWITCH_1	CALL_7
0x4006ff2	      0xb800000000	                              mov eax, 0	      3843	ftp.c	FUNCTION_57	SWITCH_1	CALL_7
0x4006ff7	      0xe800000000	                          call 0x4006ffc	      3843	ftp.c	FUNCTION_57	SWITCH_1	CALL_7
0x4006ffc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3844	ftp.c	FUNCTION_57	SWITCH_1	IF_5
0x4007000	          0x488b00	                    mov rax, qword [rax]	      3844	ftp.c	FUNCTION_57	SWITCH_1	IF_5
0x4007003	    0x488b80000a00	           mov rax, qword [rax + 0xa00] 	      3844	ftp.c	FUNCTION_57	SWITCH_1	IF_5
0x400700a	          0x4885c0	                           test rax, rax	      3844	ftp.c	FUNCTION_57	SWITCH_1	IF_5
0x400700d	     0xf84ae000000	                            je 0x40070c1	      3844	ftp.c	FUNCTION_57	SWITCH_1	IF_5
0x4007013	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3846	ftp.c	FUNCTION_57	SWITCH_1	IF_5	CALL_8
0x4007017	          0x488b00	                    mov rax, qword [rax]	      3846	ftp.c	FUNCTION_57	SWITCH_1	IF_5	CALL_8
0x400701a	      0xbe01000000	                              mov esi, 1	      3846	ftp.c	FUNCTION_57	SWITCH_1	IF_5	CALL_8
0x400701f	          0x4889c7	                            mov rdi, rax	      3846	ftp.c	FUNCTION_57	SWITCH_1	IF_5	CALL_8
0x4007022	      0xe800000000	                          call 0x4007027	      3846	ftp.c	FUNCTION_57	SWITCH_1	IF_5	CALL_8
0x4007027	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3847	ftp.c	FUNCTION_57	SWITCH_1	IF_5	CALL_9
0x400702b	          0x488b00	                    mov rax, qword [rax]	      3847	ftp.c	FUNCTION_57	SWITCH_1	IF_5	CALL_9
0x400702e	    0x488b80000a00	           mov rax, qword [rax + 0xa00] 	      3847	ftp.c	FUNCTION_57	SWITCH_1	IF_5	CALL_9
0x4007035	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3848	ftp.c	FUNCTION_57	SWITCH_1	IF_5
0x4007039	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      3848	ftp.c	FUNCTION_57	SWITCH_1	IF_5
0x400703d	            0x89d7	                            mov edi, edx	      3847	ftp.c	FUNCTION_57	SWITCH_1	IF_5	CALL_9
0x400703f	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3847	ftp.c	FUNCTION_57	SWITCH_1	IF_5	CALL_9
0x4007043	        0x488b7248	            mov rsi, qword [rdx + 0x48] 	      3847	ftp.c	FUNCTION_57	SWITCH_1	IF_5	CALL_9
0x4007047	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      3847	ftp.c	FUNCTION_57	SWITCH_1	IF_5	CALL_9
0x400704b	            0x89fa	                            mov edx, edi	      3847	ftp.c	FUNCTION_57	SWITCH_1	IF_5	CALL_9
0x400704d	          0x4889cf	                            mov rdi, rcx	      3847	ftp.c	FUNCTION_57	SWITCH_1	IF_5	CALL_9
0x4007050	            0xffd0	                                call rax	      3847	ftp.c	FUNCTION_57	SWITCH_1	IF_5	CALL_9
0x4007052	        0x488945f0	             mov qword [rbp - 0x10], rax	      3847	ftp.c	FUNCTION_57	SWITCH_1	IF_5	CALL_9
0x4007056	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3849	ftp.c	FUNCTION_57	SWITCH_1	IF_5	CALL_10
0x400705a	          0x488b00	                    mov rax, qword [rax]	      3849	ftp.c	FUNCTION_57	SWITCH_1	IF_5	CALL_10
0x400705d	      0xbe00000000	                              mov esi, 0	      3849	ftp.c	FUNCTION_57	SWITCH_1	IF_5	CALL_10
0x4007062	          0x4889c7	                            mov rdi, rax	      3849	ftp.c	FUNCTION_57	SWITCH_1	IF_5	CALL_10
0x4007065	      0xe800000000	                          call 0x400706a	      3849	ftp.c	FUNCTION_57	SWITCH_1	IF_5	CALL_10
0x400706a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3850	ftp.c	FUNCTION_57	SWITCH_1	IF_5	SWITCH_2
0x400706e	        0x4883f801	                              cmp rax, 1	      3850	ftp.c	FUNCTION_57	SWITCH_1	IF_5	SWITCH_2
0x4007072	            0x7443	                            je 0x40070b7	      3850	ftp.c	FUNCTION_57	SWITCH_1	IF_5	SWITCH_2
0x4007074	        0x4883f802	                              cmp rax, 2	      3850	ftp.c	FUNCTION_57	SWITCH_1	IF_5	SWITCH_2
0x4007078	            0x7547	                           jne 0x40070c1	      3850	ftp.c	FUNCTION_57	SWITCH_1	IF_5	SWITCH_2
0x400707a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3852	ftp.c	FUNCTION_57	SWITCH_1	IF_5	SWITCH_2	CALL_11
0x400707e	          0x488b10	                    mov rdx, qword [rax]	      3852	ftp.c	FUNCTION_57	SWITCH_1	IF_5	SWITCH_2	CALL_11
0x4007081	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3852	ftp.c	FUNCTION_57	SWITCH_1	IF_5	SWITCH_2	CALL_11
0x4007085	          0x488b00	                    mov rax, qword [rax]	      3852	ftp.c	FUNCTION_57	SWITCH_1	IF_5	SWITCH_2	CALL_11
0x4007088	    0x488d35000000	                   lea rsi, [0x0400708f]	      3852	ftp.c	FUNCTION_57	SWITCH_1	IF_5	SWITCH_2	CALL_11
0x400708f	          0x4889c7	                            mov rdi, rax	      3852	ftp.c	FUNCTION_57	SWITCH_1	IF_5	SWITCH_2	CALL_11
0x4007092	      0xb800000000	                              mov eax, 0	      3852	ftp.c	FUNCTION_57	SWITCH_1	IF_5	SWITCH_2	CALL_11
0x4007097	      0xe800000000	                          call 0x400709c	      3852	ftp.c	FUNCTION_57	SWITCH_1	IF_5	SWITCH_2	CALL_11
0x400709c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3854	ftp.c	FUNCTION_57	SWITCH_1	IF_5	SWITCH_2
0x40070a0	    0xc70005000000	                      mov dword [rax], 5	      3854	ftp.c	FUNCTION_57	SWITCH_1	IF_5	SWITCH_2
0x40070a6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3855	ftp.c	FUNCTION_57	SWITCH_1	IF_5	SWITCH_2	CALL_12
0x40070aa	          0x4889c7	                            mov rdi, rax	      3855	ftp.c	FUNCTION_57	SWITCH_1	IF_5	SWITCH_2	CALL_12
0x40070ad	      0xe835fdffff	                   call sym.wc_statemach	      3855	ftp.c	FUNCTION_57	SWITCH_1	IF_5	SWITCH_2	CALL_12
0x40070b2	      0xe9d0010000	                           jmp 0x4007287	      3855	ftp.c	FUNCTION_57	SWITCH_1	IF_5	SWITCH_2	CALL_12
0x40070b7	      0xb858000000	                           mov eax, 0x58	      3857	ftp.c	FUNCTION_57	SWITCH_1	IF_5	SWITCH_2
0x40070bc	      0xe9c6010000	                           jmp 0x4007287	      3857	ftp.c	FUNCTION_57	SWITCH_1	IF_5	SWITCH_2
0x40070c1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3861	ftp.c	FUNCTION_57	SWITCH_1	IF_6
0x40070c5	          0x8b4008	                mov eax, dword [rax + 8]	      3861	ftp.c	FUNCTION_57	SWITCH_1	IF_6
0x40070c8	            0x85c0	                           test eax, eax	      3861	ftp.c	FUNCTION_57	SWITCH_1	IF_6
0x40070ca	            0x741b	                            je 0x40070e7	      3861	ftp.c	FUNCTION_57	SWITCH_1	IF_6
0x40070cc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3862	ftp.c	FUNCTION_57	SWITCH_1	IF_6
0x40070d0	    0xc70005000000	                      mov dword [rax], 5	      3862	ftp.c	FUNCTION_57	SWITCH_1	IF_6
0x40070d6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3863	ftp.c	FUNCTION_57	SWITCH_1	IF_6	CALL_13
0x40070da	          0x4889c7	                            mov rdi, rax	      3863	ftp.c	FUNCTION_57	SWITCH_1	IF_6	CALL_13
0x40070dd	      0xe805fdffff	                   call sym.wc_statemach	      3863	ftp.c	FUNCTION_57	SWITCH_1	IF_6	CALL_13
0x40070e2	      0xe9a0010000	                           jmp 0x4007287	      3863	ftp.c	FUNCTION_57	SWITCH_1	IF_6	CALL_13
0x40070e7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3866	ftp.c	FUNCTION_57	SWITCH_1	IF_7
0x40070eb	          0x8b4060	            mov eax, dword [rax + 0x60] 	      3866	ftp.c	FUNCTION_57	SWITCH_1	IF_7
0x40070ee	          0x83e040	                           and eax, 0x40	      3866	ftp.c	FUNCTION_57	SWITCH_1	IF_7
0x40070f1	            0x85c0	                           test eax, eax	      3866	ftp.c	FUNCTION_57	SWITCH_1	IF_7
0x40070f3	            0x7413	                            je 0x4007108	      3866	ftp.c	FUNCTION_57	SWITCH_1	IF_7
0x40070f5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3867	ftp.c	FUNCTION_57	SWITCH_1	IF_7
0x40070f9	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      3867	ftp.c	FUNCTION_57	SWITCH_1	IF_7
0x40070fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3867	ftp.c	FUNCTION_57	SWITCH_1	IF_7
0x4007101	    0x488990d80000	             mov qword [rax + 0xd8], rdx	      3867	ftp.c	FUNCTION_57	SWITCH_1	IF_7
0x4007108	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3869	ftp.c	FUNCTION_57	SWITCH_1	CALL_14
0x400710c	          0x4889c7	                            mov rdi, rax	      3869	ftp.c	FUNCTION_57	SWITCH_1	CALL_14
0x400710f	      0xe8bb050000	             call sym.ftp_parse_url_path	      3869	ftp.c	FUNCTION_57	SWITCH_1	CALL_14
0x4007114	          0x8945c4	             mov dword [rbp - 0x3c], eax	      3869	ftp.c	FUNCTION_57	SWITCH_1	CALL_14
0x4007117	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      3870	ftp.c	FUNCTION_57	SWITCH_1	IF_8
0x400711b	            0x7408	                            je 0x4007125	      3870	ftp.c	FUNCTION_57	SWITCH_1	IF_8
0x400711d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      3871	ftp.c	FUNCTION_57	SWITCH_1	IF_8
0x4007120	      0xe962010000	                           jmp 0x4007287	      3871	ftp.c	FUNCTION_57	SWITCH_1	IF_8
0x4007125	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3874	ftp.c	FUNCTION_57	SWITCH_1	CALL_15
0x4007129	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3874	ftp.c	FUNCTION_57	SWITCH_1	CALL_15
0x400712d	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3874	ftp.c	FUNCTION_57	SWITCH_1	CALL_15
0x4007131	        0x488d4a18	                   lea rcx, [rdx + 0x18]	      3874	ftp.c	FUNCTION_57	SWITCH_1	CALL_15
0x4007135	      0xba00000000	                              mov edx, 0	      3874	ftp.c	FUNCTION_57	SWITCH_1	CALL_15
0x400713a	          0x4889c6	                            mov rsi, rax	      3874	ftp.c	FUNCTION_57	SWITCH_1	CALL_15
0x400713d	          0x4889cf	                            mov rdi, rcx	      3874	ftp.c	FUNCTION_57	SWITCH_1	CALL_15
0x4007140	      0xe800000000	                          call 0x4007145	      3874	ftp.c	FUNCTION_57	SWITCH_1	CALL_15
0x4007145	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3876	ftp.c	FUNCTION_57	SWITCH_1	IF_9
0x4007149	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3876	ftp.c	FUNCTION_57	SWITCH_1	IF_9
0x400714d	          0x4885c0	                           test rax, rax	      3876	ftp.c	FUNCTION_57	SWITCH_1	IF_9
0x4007150	     0xf852a010000	                           jne 0x4007280	      3876	ftp.c	FUNCTION_57	SWITCH_1	IF_9
0x4007156	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3877	ftp.c	FUNCTION_57	SWITCH_1	IF_9
0x400715a	    0xc70004000000	                      mov dword [rax], 4	      3877	ftp.c	FUNCTION_57	SWITCH_1	IF_9
0x4007160	      0xb800000000	                              mov eax, 0	      3880	ftp.c	FUNCTION_57	SWITCH_1	IF_9
0x4007165	      0xe91d010000	                           jmp 0x4007287	      3880	ftp.c	FUNCTION_57	SWITCH_1	IF_9
0x400716a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3885	ftp.c	FUNCTION_57	SWITCH_1	IF_10
0x400716e	          0x488b00	                    mov rax, qword [rax]	      3885	ftp.c	FUNCTION_57	SWITCH_1	IF_10
0x4007171	    0x488b80080a00	           mov rax, qword [rax + 0xa08] 	      3885	ftp.c	FUNCTION_57	SWITCH_1	IF_10
0x4007178	          0x4885c0	                           test rax, rax	      3885	ftp.c	FUNCTION_57	SWITCH_1	IF_10
0x400717b	            0x7449	                            je 0x40071c6	      3885	ftp.c	FUNCTION_57	SWITCH_1	IF_10
0x400717d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3886	ftp.c	FUNCTION_57	SWITCH_1	IF_10	CALL_16
0x4007181	          0x488b00	                    mov rax, qword [rax]	      3886	ftp.c	FUNCTION_57	SWITCH_1	IF_10	CALL_16
0x4007184	      0xbe01000000	                              mov esi, 1	      3886	ftp.c	FUNCTION_57	SWITCH_1	IF_10	CALL_16
0x4007189	          0x4889c7	                            mov rdi, rax	      3886	ftp.c	FUNCTION_57	SWITCH_1	IF_10	CALL_16
0x400718c	      0xe800000000	                          call 0x4007191	      3886	ftp.c	FUNCTION_57	SWITCH_1	IF_10	CALL_16
0x4007191	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3887	ftp.c	FUNCTION_57	SWITCH_1	IF_10	CALL_17
0x4007195	          0x488b00	                    mov rax, qword [rax]	      3887	ftp.c	FUNCTION_57	SWITCH_1	IF_10	CALL_17
0x4007198	    0x488b80080a00	           mov rax, qword [rax + 0xa08] 	      3887	ftp.c	FUNCTION_57	SWITCH_1	IF_10	CALL_17
0x400719f	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3887	ftp.c	FUNCTION_57	SWITCH_1	IF_10	CALL_17
0x40071a3	          0x488b12	                    mov rdx, qword [rdx]	      3887	ftp.c	FUNCTION_57	SWITCH_1	IF_10	CALL_17
0x40071a6	    0x488b92505100	          mov rdx, qword [rdx + 0x5150] 	      3887	ftp.c	FUNCTION_57	SWITCH_1	IF_10	CALL_17
0x40071ad	          0x4889d7	                            mov rdi, rdx	      3887	ftp.c	FUNCTION_57	SWITCH_1	IF_10	CALL_17
0x40071b0	            0xffd0	                                call rax	      3887	ftp.c	FUNCTION_57	SWITCH_1	IF_10	CALL_17
0x40071b2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3888	ftp.c	FUNCTION_57	SWITCH_1	IF_10	CALL_18
0x40071b6	          0x488b00	                    mov rax, qword [rax]	      3888	ftp.c	FUNCTION_57	SWITCH_1	IF_10	CALL_18
0x40071b9	      0xbe00000000	                              mov esi, 0	      3888	ftp.c	FUNCTION_57	SWITCH_1	IF_10	CALL_18
0x40071be	          0x4889c7	                            mov rdi, rax	      3888	ftp.c	FUNCTION_57	SWITCH_1	IF_10	CALL_18
0x40071c1	      0xe800000000	                          call 0x40071c6	      3888	ftp.c	FUNCTION_57	SWITCH_1	IF_10	CALL_18
0x40071c6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3890	ftp.c	FUNCTION_57	SWITCH_1	CALL_19
0x40071ca	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3890	ftp.c	FUNCTION_57	SWITCH_1	CALL_19
0x40071ce	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3890	ftp.c	FUNCTION_57	SWITCH_1	CALL_19
0x40071d2	        0x488d4a18	                   lea rcx, [rdx + 0x18]	      3890	ftp.c	FUNCTION_57	SWITCH_1	CALL_19
0x40071d6	      0xba00000000	                              mov edx, 0	      3890	ftp.c	FUNCTION_57	SWITCH_1	CALL_19
0x40071db	          0x4889c6	                            mov rsi, rax	      3890	ftp.c	FUNCTION_57	SWITCH_1	CALL_19
0x40071de	          0x4889cf	                            mov rdi, rcx	      3890	ftp.c	FUNCTION_57	SWITCH_1	CALL_19
0x40071e1	      0xe800000000	                          call 0x40071e6	      3890	ftp.c	FUNCTION_57	SWITCH_1	CALL_19
0x40071e6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3891	ftp.c	FUNCTION_57	SWITCH_1
0x40071ea	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3891	ftp.c	FUNCTION_57	SWITCH_1
0x40071ee	          0x4885c0	                           test rax, rax	      3891	ftp.c	FUNCTION_57	SWITCH_1
0x40071f1	            0x7507	                           jne 0x40071fa	      3891	ftp.c	FUNCTION_57	SWITCH_1
0x40071f3	      0xba04000000	                              mov edx, 4	      3891	ftp.c	FUNCTION_57	SWITCH_1
0x40071f8	            0xeb05	                           jmp 0x40071ff	      3891	ftp.c	FUNCTION_57	SWITCH_1
0x40071fa	      0xba03000000	                              mov edx, 3	      3891	ftp.c	FUNCTION_57	SWITCH_1
0x40071ff	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3891	ftp.c	FUNCTION_57	SWITCH_1
0x4007203	            0x8910	                    mov dword [rax], edx	      3891	ftp.c	FUNCTION_57	SWITCH_1
0x4007205	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3893	ftp.c	FUNCTION_57	SWITCH_1	CALL_20
0x4007209	          0x4889c7	                            mov rdi, rax	      3893	ftp.c	FUNCTION_57	SWITCH_1	CALL_20
0x400720c	      0xe8d6fbffff	                   call sym.wc_statemach	      3893	ftp.c	FUNCTION_57	SWITCH_1	CALL_20
0x4007211	            0xeb74	                           jmp 0x4007287	      3893	ftp.c	FUNCTION_57	SWITCH_1	CALL_20
0x4007213	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3897	ftp.c	FUNCTION_57	SWITCH_1
0x4007217	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3897	ftp.c	FUNCTION_57	SWITCH_1
0x400721b	        0x488945f8	                mov qword [rbp - 8], rax	      3897	ftp.c	FUNCTION_57	SWITCH_1
0x400721f	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      3898	ftp.c	FUNCTION_57	SWITCH_1
0x4007226	      0x48837df800	                  cmp qword [rbp - 8], 0	      3899	ftp.c	FUNCTION_57	SWITCH_1	IF_11
0x400722b	            0x7412	                            je 0x400723f	      3899	ftp.c	FUNCTION_57	SWITCH_1	IF_11
0x400722d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3900	ftp.c	FUNCTION_57	SWITCH_1	CALL_21
0x4007231	          0x488b00	                    mov rax, qword [rax]	      3900	ftp.c	FUNCTION_57	SWITCH_1	CALL_21
0x4007234	          0x4889c7	                            mov rdi, rax	      3900	ftp.c	FUNCTION_57	SWITCH_1	CALL_21
0x4007237	      0xe800000000	                          call 0x400723c	      3900	ftp.c	FUNCTION_57	SWITCH_1	CALL_21
0x400723c	          0x8945c4	             mov dword [rbp - 0x3c], eax	      3900	ftp.c	FUNCTION_57	SWITCH_1	CALL_21
0x400723f	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      3902	ftp.c	FUNCTION_57	SWITCH_1
0x4007243	            0x7407	                            je 0x400724c	      3902	ftp.c	FUNCTION_57	SWITCH_1
0x4007245	      0xba06000000	                              mov edx, 6	      3902	ftp.c	FUNCTION_57	SWITCH_1
0x400724a	            0xeb05	                           jmp 0x4007251	      3902	ftp.c	FUNCTION_57	SWITCH_1
0x400724c	      0xba07000000	                              mov edx, 7	      3902	ftp.c	FUNCTION_57	SWITCH_1
0x4007251	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3902	ftp.c	FUNCTION_57	SWITCH_1
0x4007255	            0x8910	                    mov dword [rax], edx	      3902	ftp.c	FUNCTION_57	SWITCH_1
0x4007257	            0xeb2b	                           jmp 0x4007284	      3903	ftp.c	FUNCTION_57	SWITCH_1
0x4007259	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3908	ftp.c	FUNCTION_57	SWITCH_1	IF_12
0x400725d	        0x488b4040	            mov rax, qword [rax + 0x40] 	      3908	ftp.c	FUNCTION_57	SWITCH_1	IF_12
0x4007261	          0x4885c0	                           test rax, rax	      3908	ftp.c	FUNCTION_57	SWITCH_1	IF_12
0x4007264	            0x741d	                            je 0x4007283	      3908	ftp.c	FUNCTION_57	SWITCH_1	IF_12
0x4007266	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3909	ftp.c	FUNCTION_57	SWITCH_1	CALL_22
0x400726a	        0x488b4040	            mov rax, qword [rax + 0x40] 	      3909	ftp.c	FUNCTION_57	SWITCH_1	CALL_22
0x400726e	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3909	ftp.c	FUNCTION_57	SWITCH_1	CALL_22
0x4007272	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      3909	ftp.c	FUNCTION_57	SWITCH_1	CALL_22
0x4007276	          0x4889d7	                            mov rdi, rdx	      3909	ftp.c	FUNCTION_57	SWITCH_1	CALL_22
0x4007279	            0xffd0	                                call rax	      3909	ftp.c	FUNCTION_57	SWITCH_1	CALL_22
0x400727b	            0xeb06	                           jmp 0x4007283	      3910	ftp.c	FUNCTION_57	SWITCH_1
0x400727d	              0x90	                                     nop	      3801	ftp.c	FUNCTION_57	SWITCH_1	IF_1
0x400727e	            0xeb04	                           jmp 0x4007284	      3801	ftp.c	FUNCTION_57	SWITCH_1	IF_1
0x4007280	              0x90	                                     nop	      3882	ftp.c	FUNCTION_57	SWITCH_1
0x4007281	            0xeb01	                           jmp 0x4007284	      3882	ftp.c	FUNCTION_57	SWITCH_1
0x4007283	              0x90	                                     nop	      3910	ftp.c	FUNCTION_57	SWITCH_1
0x4007284	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      3913	ftp.c	FUNCTION_57
0x4007287	              0xc9	                                   leave	      3914	ftp.c	FUNCTION_57
0x4007288	              0xc3	                                     ret	      3914	ftp.c	FUNCTION_57
ftp_state_acct_resp	DO,0:FOR,0:functions,0:ELSE,1:SWITCH,0:CALL,2:IF,1:WHILE,0	26
0x4004b61	              0x55	                                push rbp	      2589	ftp.c	FUNCTION_43
0x4004b62	          0x4889e5	                            mov rbp, rsp	      2589	ftp.c	FUNCTION_43
0x4004b65	        0x4883ec20	                           sub rsp, 0x20	      2589	ftp.c	FUNCTION_43
0x4004b69	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2589	ftp.c	FUNCTION_43
0x4004b6d	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2589	ftp.c	FUNCTION_43
0x4004b70	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      2590	ftp.c	FUNCTION_43
0x4004b77	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2591	ftp.c	FUNCTION_43
0x4004b7b	          0x488b00	                    mov rax, qword [rax]	      2591	ftp.c	FUNCTION_43
0x4004b7e	        0x488945f8	                mov qword [rbp - 8], rax	      2591	ftp.c	FUNCTION_43
0x4004b82	    0x817de4e60000	           cmp dword [rbp - 0x1c], 0xe6 	      2592	ftp.c	FUNCTION_43	IF_1
0x4004b89	            0x7424	                            je 0x4004baf	      2592	ftp.c	FUNCTION_43	IF_1
0x4004b8b	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      2593	ftp.c	FUNCTION_43	IF_1	CALL_1
0x4004b8e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2593	ftp.c	FUNCTION_43	IF_1	CALL_1
0x4004b92	    0x488d35000000	                   lea rsi, [0x04004b99]	      2593	ftp.c	FUNCTION_43	IF_1	CALL_1
0x4004b99	          0x4889c7	                            mov rdi, rax	      2593	ftp.c	FUNCTION_43	IF_1	CALL_1
0x4004b9c	      0xb800000000	                              mov eax, 0	      2593	ftp.c	FUNCTION_43	IF_1	CALL_1
0x4004ba1	      0xe800000000	                          call 0x4004ba6	      2593	ftp.c	FUNCTION_43	IF_1	CALL_1
0x4004ba6	    0xc745f40b0000	              mov dword [rbp - 0xc], 0xb	      2594	ftp.c	FUNCTION_43	IF_1
0x4004bad	            0xeb0f	                           jmp 0x4004bbe	      2594	ftp.c	FUNCTION_43	IF_1
0x4004baf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2597	ftp.c	FUNCTION_43	CALL_2
0x4004bb3	          0x4889c7	                            mov rdi, rax	      2597	ftp.c	FUNCTION_43	CALL_2
0x4004bb6	      0xe816fdffff	             call sym.ftp_state_loggedin	      2597	ftp.c	FUNCTION_43	CALL_2
0x4004bbb	          0x8945f4	              mov dword [rbp - 0xc], eax	      2597	ftp.c	FUNCTION_43	CALL_2
0x4004bbe	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2599	ftp.c	FUNCTION_43
0x4004bc1	              0xc9	                                   leave	      2600	ftp.c	FUNCTION_43
0x4004bc2	              0xc3	                                     ret	      2600	ftp.c	FUNCTION_43
ftp_epsv_disable	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,4:IF,1:WHILE,0	62
0x4002f40	              0x55	                                push rbp	      1788	ftp.c	FUNCTION_30
0x4002f41	          0x4889e5	                            mov rbp, rsp	      1788	ftp.c	FUNCTION_30
0x4002f44	        0x4883ec20	                           sub rsp, 0x20	      1788	ftp.c	FUNCTION_30
0x4002f48	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1788	ftp.c	FUNCTION_30
0x4002f4c	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1789	ftp.c	FUNCTION_30
0x4002f53	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f57	     0xfb6805b0300	          movzx eax, byte [rax + 0x35b] 	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f5e	            0x84c0	                             test al, al	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f60	            0x7449	                            je 0x4002fab	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f62	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f66	     0xfb680610300	          movzx eax, byte [rax + 0x361] 	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f6d	          0x83f001	                              xor eax, 1	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f70	            0x84c0	                             test al, al	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f72	            0x7437	                            je 0x4002fab	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f74	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f78	     0xfb680570300	          movzx eax, byte [rax + 0x357] 	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f7f	          0x83f001	                              xor eax, 1	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f82	            0x84c0	                             test al, al	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f84	            0x7425	                            je 0x4002fab	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f86	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1793	ftp.c	FUNCTION_30	IF_1	CALL_1
0x4002f8a	          0x488b00	                    mov rax, qword [rax]	      1793	ftp.c	FUNCTION_30	IF_1	CALL_1
0x4002f8d	    0x488d35000000	                   lea rsi, [0x04002f94]	      1793	ftp.c	FUNCTION_30	IF_1	CALL_1
0x4002f94	          0x4889c7	                            mov rdi, rax	      1793	ftp.c	FUNCTION_30	IF_1	CALL_1
0x4002f97	      0xb800000000	                              mov eax, 0	      1793	ftp.c	FUNCTION_30	IF_1	CALL_1
0x4002f9c	      0xe800000000	                          call 0x4002fa1	      1793	ftp.c	FUNCTION_30	IF_1	CALL_1
0x4002fa1	      0xb808000000	                              mov eax, 8	      1794	ftp.c	FUNCTION_30	IF_1
0x4002fa6	      0xe992000000	                           jmp 0x400303d	      1794	ftp.c	FUNCTION_30	IF_1
0x4002fab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1797	ftp.c	FUNCTION_30	CALL_2
0x4002faf	          0x488b00	                    mov rax, qword [rax]	      1797	ftp.c	FUNCTION_30	CALL_2
0x4002fb2	    0x488d35000000	                   lea rsi, [0x04002fb9]	      1797	ftp.c	FUNCTION_30	CALL_2
0x4002fb9	          0x4889c7	                            mov rdi, rax	      1797	ftp.c	FUNCTION_30	CALL_2
0x4002fbc	      0xb800000000	                              mov eax, 0	      1797	ftp.c	FUNCTION_30	CALL_2
0x4002fc1	      0xe800000000	                          call 0x4002fc6	      1797	ftp.c	FUNCTION_30	CALL_2
0x4002fc6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1799	ftp.c	FUNCTION_30
0x4002fca	    0xc68064030000	               mov byte [rax + 0x364], 0	      1799	ftp.c	FUNCTION_30
0x4002fd1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1800	ftp.c	FUNCTION_30
0x4002fd5	          0x488b00	                    mov rax, qword [rax]	      1800	ftp.c	FUNCTION_30
0x4002fd8	    0xc680404d0000	              mov byte [rax + 0x4d40], 0	      1800	ftp.c	FUNCTION_30
0x4002fdf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1802	ftp.c	FUNCTION_30	CALL_3
0x4002fe3	    0x4805b0050000	                          add rax, 0x5b0	      1802	ftp.c	FUNCTION_30	CALL_3
0x4002fe9	    0x488d15000000	                   lea rdx, [0x04002ff0]	      1802	ftp.c	FUNCTION_30	CALL_3
0x4002ff0	    0x488d35000000	                   lea rsi, [0x04002ff7]	      1802	ftp.c	FUNCTION_30	CALL_3
0x4002ff7	          0x4889c7	                            mov rdi, rax	      1802	ftp.c	FUNCTION_30	CALL_3
0x4002ffa	      0xb800000000	                              mov eax, 0	      1802	ftp.c	FUNCTION_30	CALL_3
0x4002fff	      0xe800000000	                          call 0x4003004	      1802	ftp.c	FUNCTION_30	CALL_3
0x4003004	          0x8945fc	                mov dword [rbp - 4], eax	      1802	ftp.c	FUNCTION_30	CALL_3
0x4003007	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1802	ftp.c	FUNCTION_30	CALL_3
0x400300b	            0x7405	                            je 0x4003012	      1802	ftp.c	FUNCTION_30	CALL_3
0x400300d	          0x8b45fc	                mov eax, dword [rbp - 4]	      1802	ftp.c	FUNCTION_30	CALL_3
0x4003010	            0xeb2b	                           jmp 0x400303d	      1802	ftp.c	FUNCTION_30	CALL_3
0x4003012	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1803	ftp.c	FUNCTION_30
0x4003016	    0x8b8060060000	           mov eax, dword [rax + 0x660] 	      1803	ftp.c	FUNCTION_30
0x400301c	          0x8d5001	                      lea edx, [rax + 1]	      1803	ftp.c	FUNCTION_30
0x400301f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1803	ftp.c	FUNCTION_30
0x4003023	    0x899060060000	            mov dword [rax + 0x660], edx	      1803	ftp.c	FUNCTION_30
0x4003029	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1805	ftp.c	FUNCTION_30	CALL_4
0x400302d	      0xbe1e000000	                           mov esi, 0x1e	      1805	ftp.c	FUNCTION_30	CALL_4
0x4003032	          0x4889c7	                            mov rdi, rax	      1805	ftp.c	FUNCTION_30	CALL_4
0x4003035	      0xe83dddffff	                         call sym._state	      1805	ftp.c	FUNCTION_30	CALL_4
0x400303a	          0x8b45fc	                mov eax, dword [rbp - 4]	      1806	ftp.c	FUNCTION_30
0x400303d	              0xc9	                                   leave	      1807	ftp.c	FUNCTION_30
0x400303e	              0xc3	                                     ret	      1807	ftp.c	FUNCTION_30
freedirs	DO,0:FOR,1:functions,0:ELSE,0:SWITCH,0:CALL,4:IF,1:WHILE,0	62
0x4000161	              0x55	                                push rbp	       241	ftp.c	FUNCTION_2
0x4000162	          0x4889e5	                            mov rbp, rsp	       241	ftp.c	FUNCTION_2
0x4000165	        0x4883ec20	                           sub rsp, 0x20	       241	ftp.c	FUNCTION_2
0x4000169	        0x48897de8	             mov qword [rbp - 0x18], rdi	       241	ftp.c	FUNCTION_2
0x400016d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       243	ftp.c	FUNCTION_2	IF_1
0x4000171	        0x488b4078	            mov rax, qword [rax + 0x78] 	       243	ftp.c	FUNCTION_2	IF_1
0x4000175	          0x4885c0	                           test rax, rax	       243	ftp.c	FUNCTION_2	IF_1
0x4000178	     0xf8490000000	                            je 0x400020e	       243	ftp.c	FUNCTION_2	IF_1
0x400017e	    0xc745fc000000	                  mov dword [rbp - 4], 0	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x4000185	            0xeb47	                           jmp 0x40001ce	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x4000187	    0x488b05000000	            mov rax, qword [0x0400018e] 	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x400018e	          0x488b00	                    mov rax, qword [rax]	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x4000191	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x4000195	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x4000199	          0x8b4dfc	                mov ecx, dword [rbp - 4]	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x400019c	          0x4863c9	                         movsxd rcx, ecx	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x400019f	        0x48c1e103	                              shl rcx, 3	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x40001a3	          0x4801ca	                            add rdx, rcx	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x40001a6	          0x488b12	                    mov rdx, qword [rdx]	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x40001a9	          0x4889d7	                            mov rdi, rdx	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x40001ac	            0xffd0	                                call rax	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x40001ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       246	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001b2	        0x488b4078	            mov rax, qword [rax + 0x78] 	       246	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001b6	          0x8b55fc	                mov edx, dword [rbp - 4]	       246	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001b9	          0x4863d2	                         movsxd rdx, edx	       246	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001bc	        0x48c1e203	                              shl rdx, 3	       246	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001c0	          0x4801d0	                            add rax, rdx	       246	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001c3	    0x48c700000000	                      mov qword [rax], 0	       246	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001ca	        0x8345fc01	                  add dword [rbp - 4], 1	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001ce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001d2	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001d8	          0x3b45fc	                cmp eax, dword [rbp - 4]	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001db	            0x7faa	                            jg 0x4000187	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001dd	    0x488b05000000	            mov rax, qword [0x040001e4] 	       248	ftp.c	FUNCTION_2	IF_1	CALL_2
0x40001e4	          0x488b00	                    mov rax, qword [rax]	       248	ftp.c	FUNCTION_2	IF_1	CALL_2
0x40001e7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       248	ftp.c	FUNCTION_2	IF_1	CALL_2
0x40001eb	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	       248	ftp.c	FUNCTION_2	IF_1	CALL_2
0x40001ef	          0x4889d7	                            mov rdi, rdx	       248	ftp.c	FUNCTION_2	IF_1	CALL_2
0x40001f2	            0xffd0	                                call rax	       248	ftp.c	FUNCTION_2	IF_1	CALL_2
0x40001f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       249	ftp.c	FUNCTION_2	IF_1
0x40001f8	    0x48c740780000	               mov qword [rax + 0x78], 0	       249	ftp.c	FUNCTION_2	IF_1
0x4000200	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       250	ftp.c	FUNCTION_2	IF_1
0x4000204	    0xc78080000000	               mov dword [rax + 0x80], 0	       250	ftp.c	FUNCTION_2	IF_1
0x400020e	    0x488b05000000	            mov rax, qword [0x04000215] 	       252	ftp.c	FUNCTION_2	CALL_3
0x4000215	          0x488b00	                    mov rax, qword [rax]	       252	ftp.c	FUNCTION_2	CALL_3
0x4000218	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       252	ftp.c	FUNCTION_2	CALL_3
0x400021c	    0x488b92880000	            mov rdx, qword [rdx + 0x88] 	       252	ftp.c	FUNCTION_2	CALL_3
0x4000223	          0x4889d7	                            mov rdi, rdx	       252	ftp.c	FUNCTION_2	CALL_3
0x4000226	            0xffd0	                                call rax	       252	ftp.c	FUNCTION_2	CALL_3
0x4000228	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       252	ftp.c	FUNCTION_2	CALL_3
0x400022c	    0x48c780880000	               mov qword [rax + 0x88], 0	       252	ftp.c	FUNCTION_2	CALL_3
0x4000237	    0x488b05000000	            mov rax, qword [0x0400023e] 	       255	ftp.c	FUNCTION_2	CALL_4
0x400023e	          0x488b00	                    mov rax, qword [rax]	       255	ftp.c	FUNCTION_2	CALL_4
0x4000241	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       255	ftp.c	FUNCTION_2	CALL_4
0x4000245	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	       255	ftp.c	FUNCTION_2	CALL_4
0x400024c	          0x4889d7	                            mov rdi, rdx	       255	ftp.c	FUNCTION_2	CALL_4
0x400024f	            0xffd0	                                call rax	       255	ftp.c	FUNCTION_2	CALL_4
0x4000251	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       255	ftp.c	FUNCTION_2	CALL_4
0x4000255	    0x48c780e00000	               mov qword [rax + 0xe0], 0	       255	ftp.c	FUNCTION_2	CALL_4
0x4000260	              0x90	                                     nop	       256	ftp.c	FUNCTION_2
0x4000261	              0xc9	                                   leave	       256	ftp.c	FUNCTION_2
0x4000262	              0xc3	                                     ret	       256	ftp.c	FUNCTION_2
ftp_state_type_resp	DO,0:FOR,0:functions,0:ELSE,3:SWITCH,0:CALL,6:IF,6:WHILE,0	59
0x4003dad	              0x55	                                push rbp	      2152	ftp.c	FUNCTION_35
0x4003dae	          0x4889e5	                            mov rbp, rsp	      2152	ftp.c	FUNCTION_35
0x4003db1	        0x4883ec20	                           sub rsp, 0x20	      2152	ftp.c	FUNCTION_35
0x4003db5	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2152	ftp.c	FUNCTION_35
0x4003db9	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2152	ftp.c	FUNCTION_35
0x4003dbc	          0x8955e0	             mov dword [rbp - 0x20], edx	      2152	ftp.c	FUNCTION_35
0x4003dbf	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      2153	ftp.c	FUNCTION_35
0x4003dc6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2154	ftp.c	FUNCTION_35
0x4003dca	          0x488b00	                    mov rax, qword [rax]	      2154	ftp.c	FUNCTION_35
0x4003dcd	        0x488945f8	                mov qword [rbp - 8], rax	      2154	ftp.c	FUNCTION_35
0x4003dd1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2156	ftp.c	FUNCTION_35	IF_1
0x4003dd4	      0x2dc8000000	                           sub eax, 0xc8	      2156	ftp.c	FUNCTION_35	IF_1
0x4003dd9	          0x83f863	                           cmp eax, 0x63	      2156	ftp.c	FUNCTION_35	IF_1
0x4003ddc	            0x7622	                           jbe 0x4003e00	      2156	ftp.c	FUNCTION_35	IF_1
0x4003dde	        0x488b45f8	                mov rax, qword [rbp - 8]	      2160	ftp.c	FUNCTION_35	IF_1	CALL_1
0x4003de2	    0x488d35000000	                   lea rsi, [0x04003de9]	      2160	ftp.c	FUNCTION_35	IF_1	CALL_1
0x4003de9	          0x4889c7	                            mov rdi, rax	      2160	ftp.c	FUNCTION_35	IF_1	CALL_1
0x4003dec	      0xb800000000	                              mov eax, 0	      2160	ftp.c	FUNCTION_35	IF_1	CALL_1
0x4003df1	      0xe800000000	                          call 0x4003df6	      2160	ftp.c	FUNCTION_35	IF_1	CALL_1
0x4003df6	      0xb811000000	                           mov eax, 0x11	      2161	ftp.c	FUNCTION_35	IF_1
0x4003dfb	      0xe981000000	                           jmp 0x4003e81	      2161	ftp.c	FUNCTION_35	IF_1
0x4003e00	    0x817de4c80000	           cmp dword [rbp - 0x1c], 0xc8 	      2163	ftp.c	FUNCTION_35	IF_2
0x4003e07	            0x741b	                            je 0x4003e24	      2163	ftp.c	FUNCTION_35	IF_2
0x4003e09	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      2164	ftp.c	FUNCTION_35	IF_2	CALL_2
0x4003e0c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2164	ftp.c	FUNCTION_35	IF_2	CALL_2
0x4003e10	    0x488d35000000	                   lea rsi, [0x04003e17]	      2164	ftp.c	FUNCTION_35	IF_2	CALL_2
0x4003e17	          0x4889c7	                            mov rdi, rax	      2164	ftp.c	FUNCTION_35	IF_2	CALL_2
0x4003e1a	      0xb800000000	                              mov eax, 0	      2164	ftp.c	FUNCTION_35	IF_2	CALL_2
0x4003e1f	      0xe800000000	                          call 0x4003e24	      2164	ftp.c	FUNCTION_35	IF_2	CALL_2
0x4003e24	        0x837de013	           cmp dword [rbp - 0x20], 0x13 	      2167	ftp.c	FUNCTION_35	IF_3
0x4003e28	            0x7511	                           jne 0x4003e3b	      2167	ftp.c	FUNCTION_35	IF_3
0x4003e2a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2168	ftp.c	FUNCTION_35	CALL_3
0x4003e2e	          0x4889c7	                            mov rdi, rax	      2168	ftp.c	FUNCTION_35	CALL_3
0x4003e31	      0xe810e6ffff	                 call sym.ftp_state_size	      2168	ftp.c	FUNCTION_35	CALL_3
0x4003e36	          0x8945f4	              mov dword [rbp - 0xc], eax	      2168	ftp.c	FUNCTION_35	CALL_3
0x4003e39	            0xeb43	                           jmp 0x4003e7e	      2168	ftp.c	FUNCTION_35	CALL_3
0x4003e3b	        0x837de014	           cmp dword [rbp - 0x20], 0x14 	      2169	ftp.c	FUNCTION_35	ELSE_1	IF_4
0x4003e3f	            0x7511	                           jne 0x4003e52	      2169	ftp.c	FUNCTION_35	ELSE_1	IF_4
0x4003e41	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2170	ftp.c	FUNCTION_35	ELSE_1	IF_4
0x4003e45	          0x4889c7	                            mov rdi, rax	      2170	ftp.c	FUNCTION_35	ELSE_1	IF_4
0x4003e48	      0xe8a0e6ffff	                 call sym.ftp_state_list	      2170	ftp.c	FUNCTION_35	ELSE_1	IF_4
0x4003e4d	          0x8945f4	              mov dword [rbp - 0xc], eax	      2170	ftp.c	FUNCTION_35	ELSE_1	IF_4
0x4003e50	            0xeb2c	                           jmp 0x4003e7e	      2170	ftp.c	FUNCTION_35	ELSE_1	IF_4
0x4003e52	        0x837de015	           cmp dword [rbp - 0x20], 0x15 	      2171	ftp.c	FUNCTION_35	ELSE_2	IF_5
0x4003e56	            0x7511	                           jne 0x4003e69	      2171	ftp.c	FUNCTION_35	ELSE_2	IF_5
0x4003e58	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2172	ftp.c	FUNCTION_35	ELSE_2	IF_5
0x4003e5c	          0x4889c7	                            mov rdi, rax	      2172	ftp.c	FUNCTION_35	ELSE_2	IF_5
0x4003e5f	      0xe8bee8ffff	        call sym.ftp_state_retr_prequote	      2172	ftp.c	FUNCTION_35	ELSE_2	IF_5
0x4003e64	          0x8945f4	              mov dword [rbp - 0xc], eax	      2172	ftp.c	FUNCTION_35	ELSE_2	IF_5
0x4003e67	            0xeb15	                           jmp 0x4003e7e	      2172	ftp.c	FUNCTION_35	ELSE_2	IF_5
0x4003e69	        0x837de016	           cmp dword [rbp - 0x20], 0x16 	      2173	ftp.c	FUNCTION_35	ELSE_3	IF_6
0x4003e6d	            0x750f	                           jne 0x4003e7e	      2173	ftp.c	FUNCTION_35	ELSE_3	IF_6
0x4003e6f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2174	ftp.c	FUNCTION_35	ELSE_3	IF_6
0x4003e73	          0x4889c7	                            mov rdi, rax	      2174	ftp.c	FUNCTION_35	ELSE_3	IF_6
0x4003e76	      0xe8d8e8ffff	        call sym.ftp_state_stor_prequote	      2174	ftp.c	FUNCTION_35	ELSE_3	IF_6
0x4003e7b	          0x8945f4	              mov dword [rbp - 0xc], eax	      2174	ftp.c	FUNCTION_35	ELSE_3	IF_6
0x4003e7e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2176	ftp.c	FUNCTION_35
0x4003e81	              0xc9	                                   leave	      2177	ftp.c	FUNCTION_35
0x4003e82	              0xc3	                                     ret	      2177	ftp.c	FUNCTION_35
ftp_state_size	DO,0:FOR,0:functions,0:ELSE,1:SWITCH,0:CALL,3:IF,1:WHILE,0	44
0x4002446	              0x55	                                push rbp	      1425	ftp.c	FUNCTION_22
0x4002447	          0x4889e5	                            mov rbp, rsp	      1425	ftp.c	FUNCTION_22
0x400244a	        0x4883ec30	                           sub rsp, 0x30	      1425	ftp.c	FUNCTION_22
0x400244e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1425	ftp.c	FUNCTION_22
0x4002452	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1426	ftp.c	FUNCTION_22
0x4002459	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1427	ftp.c	FUNCTION_22
0x400245d	          0x488b00	                    mov rax, qword [rax]	      1427	ftp.c	FUNCTION_22
0x4002460	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1427	ftp.c	FUNCTION_22
0x4002467	        0x488945f0	             mov qword [rbp - 0x10], rax	      1427	ftp.c	FUNCTION_22
0x400246b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1428	ftp.c	FUNCTION_22
0x400246f	    0x4805b0050000	                          add rax, 0x5b0	      1428	ftp.c	FUNCTION_22
0x4002475	        0x488945f8	                mov qword [rbp - 8], rax	      1428	ftp.c	FUNCTION_22
0x4002479	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1430	ftp.c	FUNCTION_22	IF_1
0x400247d	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1430	ftp.c	FUNCTION_22	IF_1
0x4002480	          0x83f801	                              cmp eax, 1	      1430	ftp.c	FUNCTION_22	IF_1
0x4002483	            0x7554	                           jne 0x40024d9	      1430	ftp.c	FUNCTION_22	IF_1
0x4002485	        0x488b45f8	                mov rax, qword [rbp - 8]	      1430	ftp.c	FUNCTION_22	IF_1
0x4002489	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1430	ftp.c	FUNCTION_22	IF_1
0x4002490	          0x4885c0	                           test rax, rax	      1430	ftp.c	FUNCTION_22	IF_1
0x4002493	            0x7444	                            je 0x40024d9	      1430	ftp.c	FUNCTION_22	IF_1
0x4002495	        0x488b45f8	                mov rax, qword [rbp - 8]	      1434	ftp.c	FUNCTION_22	IF_1	CALL_1
0x4002499	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      1434	ftp.c	FUNCTION_22	IF_1	CALL_1
0x40024a0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1434	ftp.c	FUNCTION_22	IF_1	CALL_1
0x40024a4	    0x488d35000000	                   lea rsi, [0x040024ab]	      1434	ftp.c	FUNCTION_22	IF_1	CALL_1
0x40024ab	          0x4889c7	                            mov rdi, rax	      1434	ftp.c	FUNCTION_22	IF_1	CALL_1
0x40024ae	      0xb800000000	                              mov eax, 0	      1434	ftp.c	FUNCTION_22	IF_1	CALL_1
0x40024b3	      0xe800000000	                          call 0x40024b8	      1434	ftp.c	FUNCTION_22	IF_1	CALL_1
0x40024b8	          0x8945ec	             mov dword [rbp - 0x14], eax	      1434	ftp.c	FUNCTION_22	IF_1	CALL_1
0x40024bb	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1434	ftp.c	FUNCTION_22	IF_1	CALL_1
0x40024bf	            0x7405	                            je 0x40024c6	      1434	ftp.c	FUNCTION_22	IF_1	CALL_1
0x40024c1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1434	ftp.c	FUNCTION_22	IF_1	CALL_1
0x40024c4	            0xeb25	                           jmp 0x40024eb	      1434	ftp.c	FUNCTION_22	IF_1	CALL_1
0x40024c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1436	ftp.c	FUNCTION_22	IF_1	CALL_2
0x40024ca	      0xbe17000000	                           mov esi, 0x17	      1436	ftp.c	FUNCTION_22	IF_1	CALL_2
0x40024cf	          0x4889c7	                            mov rdi, rax	      1436	ftp.c	FUNCTION_22	IF_1	CALL_2
0x40024d2	      0xe8a0e8ffff	                         call sym._state	      1436	ftp.c	FUNCTION_22	IF_1	CALL_2
0x40024d7	            0xeb0f	                           jmp 0x40024e8	      1436	ftp.c	FUNCTION_22	IF_1	CALL_2
0x40024d9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1439	ftp.c	FUNCTION_22	CALL_3
0x40024dd	          0x4889c7	                            mov rdi, rax	      1439	ftp.c	FUNCTION_22	CALL_3
0x40024e0	      0xe8bbfeffff	                 call sym.ftp_state_rest	      1439	ftp.c	FUNCTION_22	CALL_3
0x40024e5	          0x8945ec	             mov dword [rbp - 0x14], eax	      1439	ftp.c	FUNCTION_22	CALL_3
0x40024e8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1441	ftp.c	FUNCTION_22
0x40024eb	              0xc9	                                   leave	      1442	ftp.c	FUNCTION_22
0x40024ec	              0xc3	                                     ret	      1442	ftp.c	FUNCTION_22
ftp_state_rest	DO,0:FOR,0:functions,0:ELSE,1:SWITCH,0:CALL,3:IF,1:WHILE,0	44
0x40023a0	              0x55	                                push rbp	      1404	ftp.c	FUNCTION_21
0x40023a1	          0x4889e5	                            mov rbp, rsp	      1404	ftp.c	FUNCTION_21
0x40023a4	        0x4883ec30	                           sub rsp, 0x30	      1404	ftp.c	FUNCTION_21
0x40023a8	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1404	ftp.c	FUNCTION_21
0x40023ac	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1405	ftp.c	FUNCTION_21
0x40023b3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1406	ftp.c	FUNCTION_21
0x40023b7	          0x488b00	                    mov rax, qword [rax]	      1406	ftp.c	FUNCTION_21
0x40023ba	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1406	ftp.c	FUNCTION_21
0x40023c1	        0x488945f0	             mov qword [rbp - 0x10], rax	      1406	ftp.c	FUNCTION_21
0x40023c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1407	ftp.c	FUNCTION_21
0x40023c9	    0x4805b0050000	                          add rax, 0x5b0	      1407	ftp.c	FUNCTION_21
0x40023cf	        0x488945f8	                mov qword [rbp - 8], rax	      1407	ftp.c	FUNCTION_21
0x40023d3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1409	ftp.c	FUNCTION_21	IF_1
0x40023d7	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1409	ftp.c	FUNCTION_21	IF_1
0x40023da	            0x85c0	                           test eax, eax	      1409	ftp.c	FUNCTION_21	IF_1
0x40023dc	            0x7454	                            je 0x4002432	      1409	ftp.c	FUNCTION_21	IF_1
0x40023de	        0x488b45f8	                mov rax, qword [rbp - 8]	      1409	ftp.c	FUNCTION_21	IF_1
0x40023e2	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1409	ftp.c	FUNCTION_21	IF_1
0x40023e9	          0x4885c0	                           test rax, rax	      1409	ftp.c	FUNCTION_21	IF_1
0x40023ec	            0x7444	                            je 0x4002432	      1409	ftp.c	FUNCTION_21	IF_1
0x40023ee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1414	ftp.c	FUNCTION_21	IF_1	CALL_1
0x40023f2	    0x4805b0050000	                          add rax, 0x5b0	      1414	ftp.c	FUNCTION_21	IF_1	CALL_1
0x40023f8	      0xba00000000	                              mov edx, 0	      1414	ftp.c	FUNCTION_21	IF_1	CALL_1
0x40023fd	    0x488d35000000	                   lea rsi, [0x04002404]	      1414	ftp.c	FUNCTION_21	IF_1	CALL_1
0x4002404	          0x4889c7	                            mov rdi, rax	      1414	ftp.c	FUNCTION_21	IF_1	CALL_1
0x4002407	      0xb800000000	                              mov eax, 0	      1414	ftp.c	FUNCTION_21	IF_1	CALL_1
0x400240c	      0xe800000000	                          call 0x4002411	      1414	ftp.c	FUNCTION_21	IF_1	CALL_1
0x4002411	          0x8945ec	             mov dword [rbp - 0x14], eax	      1414	ftp.c	FUNCTION_21	IF_1	CALL_1
0x4002414	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1414	ftp.c	FUNCTION_21	IF_1	CALL_1
0x4002418	            0x7405	                            je 0x400241f	      1414	ftp.c	FUNCTION_21	IF_1	CALL_1
0x400241a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1414	ftp.c	FUNCTION_21	IF_1	CALL_1
0x400241d	            0xeb25	                           jmp 0x4002444	      1414	ftp.c	FUNCTION_21	IF_1	CALL_1
0x400241f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1416	ftp.c	FUNCTION_21	IF_1	CALL_2
0x4002423	      0xbe1a000000	                           mov esi, 0x1a	      1416	ftp.c	FUNCTION_21	IF_1	CALL_2
0x4002428	          0x4889c7	                            mov rdi, rax	      1416	ftp.c	FUNCTION_21	IF_1	CALL_2
0x400242b	      0xe847e9ffff	                         call sym._state	      1416	ftp.c	FUNCTION_21	IF_1	CALL_2
0x4002430	            0xeb0f	                           jmp 0x4002441	      1416	ftp.c	FUNCTION_21	IF_1	CALL_2
0x4002432	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1419	ftp.c	FUNCTION_21	CALL_3
0x4002436	          0x4889c7	                            mov rdi, rax	      1419	ftp.c	FUNCTION_21	CALL_3
0x4002439	      0xe88efdffff	     call sym.ftp_state_prepare_transfer	      1419	ftp.c	FUNCTION_21	CALL_3
0x400243e	          0x8945ec	             mov dword [rbp - 0x14], eax	      1419	ftp.c	FUNCTION_21	CALL_3
0x4002441	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1421	ftp.c	FUNCTION_21
0x4002444	              0xc9	                                   leave	      1422	ftp.c	FUNCTION_21
0x4002445	              0xc3	                                     ret	      1422	ftp.c	FUNCTION_21
ftp_state_list	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,10:IF,5:WHILE,0	139
0x40024ed	              0x55	                                push rbp	      1445	ftp.c	FUNCTION_23
0x40024ee	          0x4889e5	                            mov rbp, rsp	      1445	ftp.c	FUNCTION_23
0x40024f1	        0x4883ec50	                           sub rsp, 0x50	      1445	ftp.c	FUNCTION_23
0x40024f5	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1445	ftp.c	FUNCTION_23
0x40024f9	    0x64488b042528	                mov rax, qword fs:[0x28]	      1445	ftp.c	FUNCTION_23
0x4002502	        0x488945f8	                mov qword [rbp - 8], rax	      1445	ftp.c	FUNCTION_23
0x4002506	            0x31c0	                            xor eax, eax	      1445	ftp.c	FUNCTION_23
0x4002508	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      1446	ftp.c	FUNCTION_23
0x400250f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1447	ftp.c	FUNCTION_23
0x4002513	          0x488b00	                    mov rax, qword [rax]	      1447	ftp.c	FUNCTION_23
0x4002516	        0x488945d8	             mov qword [rbp - 0x28], rax	      1447	ftp.c	FUNCTION_23
0x400251a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1464	ftp.c	FUNCTION_23
0x400251e	    0x488b80985000	          mov rax, qword [rax + 0x5098] 	      1464	ftp.c	FUNCTION_23
0x4002525	        0x488945e0	             mov qword [rbp - 0x20], rax	      1464	ftp.c	FUNCTION_23
0x4002529	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1466	ftp.c	FUNCTION_23
0x4002531	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1467	ftp.c	FUNCTION_23	IF_1
0x4002535	    0x8b8078070000	           mov eax, dword [rax + 0x778] 	      1467	ftp.c	FUNCTION_23	IF_1
0x400253b	          0x83f802	                              cmp eax, 2	      1467	ftp.c	FUNCTION_23	IF_1
0x400253e	     0xf85b6000000	                           jne 0x40025fa	      1467	ftp.c	FUNCTION_23	IF_1
0x4002544	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1467	ftp.c	FUNCTION_23	IF_1
0x4002549	     0xf84ab000000	                            je 0x40025fa	      1467	ftp.c	FUNCTION_23	IF_1
0x400254f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1468	ftp.c	FUNCTION_23	IF_1	CALL_1
0x4002553	           0xfb600	                   movzx eax, byte [rax]	      1468	ftp.c	FUNCTION_23	IF_1	CALL_1
0x4002556	            0x84c0	                             test al, al	      1468	ftp.c	FUNCTION_23	IF_1	CALL_1
0x4002558	     0xf849c000000	                            je 0x40025fa	      1468	ftp.c	FUNCTION_23	IF_1	CALL_1
0x400255e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1468	ftp.c	FUNCTION_23	IF_1	CALL_1
0x4002562	      0xbe2f000000	                           mov esi, 0x2f	      1468	ftp.c	FUNCTION_23	IF_1	CALL_1
0x4002567	          0x4889c7	                            mov rdi, rax	      1468	ftp.c	FUNCTION_23	IF_1	CALL_1
0x400256a	      0xe800000000	                          call 0x400256f	      1468	ftp.c	FUNCTION_23	IF_1	CALL_1
0x400256f	          0x4885c0	                           test rax, rax	      1468	ftp.c	FUNCTION_23	IF_1	CALL_1
0x4002572	     0xf8482000000	                            je 0x40025fa	      1468	ftp.c	FUNCTION_23	IF_1	CALL_1
0x4002578	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1469	ftp.c	FUNCTION_23	IF_1	CALL_2
0x400257c	          0x4889c7	                            mov rdi, rax	      1469	ftp.c	FUNCTION_23	IF_1	CALL_2
0x400257f	      0xe800000000	                          call 0x4002584	      1469	ftp.c	FUNCTION_23	IF_1	CALL_2
0x4002584	        0x488945d0	             mov qword [rbp - 0x30], rax	      1469	ftp.c	FUNCTION_23	IF_1	CALL_2
0x4002588	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1472	ftp.c	FUNCTION_23	IF_1	IF_2
0x400258c	        0x488d50ff	                      lea rdx, [rax - 1]	      1472	ftp.c	FUNCTION_23	IF_1	IF_2
0x4002590	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1472	ftp.c	FUNCTION_23	IF_1	IF_2
0x4002594	          0x4801d0	                            add rax, rdx	      1472	ftp.c	FUNCTION_23	IF_1	IF_2
0x4002597	           0xfb600	                   movzx eax, byte [rax]	      1472	ftp.c	FUNCTION_23	IF_1	IF_2
0x400259a	            0x3c2f	                            cmp al, 0x2f	      1472	ftp.c	FUNCTION_23	IF_1	IF_2
0x400259c	            0x7427	                            je 0x40025c5	      1472	ftp.c	FUNCTION_23	IF_1	IF_2
0x400259e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1474	ftp.c	FUNCTION_23	IF_1	IF_2	CALL_3
0x40025a2	      0xbe2f000000	                           mov esi, 0x2f	      1474	ftp.c	FUNCTION_23	IF_1	IF_2	CALL_3
0x40025a7	          0x4889c7	                            mov rdi, rax	      1474	ftp.c	FUNCTION_23	IF_1	IF_2	CALL_3
0x40025aa	      0xe800000000	                          call 0x40025af	      1474	ftp.c	FUNCTION_23	IF_1	IF_2	CALL_3
0x40025af	        0x488945e8	             mov qword [rbp - 0x18], rax	      1474	ftp.c	FUNCTION_23	IF_1	IF_2	CALL_3
0x40025b3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1475	ftp.c	FUNCTION_23	IF_1	IF_2
0x40025b7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1475	ftp.c	FUNCTION_23	IF_1	IF_2
0x40025bb	          0x4829c2	                            sub rdx, rax	      1475	ftp.c	FUNCTION_23	IF_1	IF_2
0x40025be	          0x4889d0	                            mov rax, rdx	      1475	ftp.c	FUNCTION_23	IF_1	IF_2
0x40025c1	        0x488945d0	             mov qword [rbp - 0x30], rax	      1475	ftp.c	FUNCTION_23	IF_1	IF_2
0x40025c5	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	      1477	ftp.c	FUNCTION_23	IF_1	CALL_4
0x40025c9	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1477	ftp.c	FUNCTION_23	IF_1	CALL_4
0x40025cd	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1477	ftp.c	FUNCTION_23	IF_1	CALL_4
0x40025d1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1477	ftp.c	FUNCTION_23	IF_1	CALL_4
0x40025d5	    0x41b901000000	                              mov r9d, 1	      1477	ftp.c	FUNCTION_23	IF_1	CALL_4
0x40025db	    0x41b800000000	                              mov r8d, 0	      1477	ftp.c	FUNCTION_23	IF_1	CALL_4
0x40025e1	          0x4889c7	                            mov rdi, rax	      1477	ftp.c	FUNCTION_23	IF_1	CALL_4
0x40025e4	      0xe800000000	                          call 0x40025e9	      1477	ftp.c	FUNCTION_23	IF_1	CALL_4
0x40025e9	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1477	ftp.c	FUNCTION_23	IF_1	CALL_4
0x40025ec	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1478	ftp.c	FUNCTION_23	IF_1	IF_3
0x40025f0	            0x7408	                            je 0x40025fa	      1478	ftp.c	FUNCTION_23	IF_1	IF_3
0x40025f2	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1479	ftp.c	FUNCTION_23	IF_1	IF_3
0x40025f5	      0xe912010000	                           jmp 0x400270c	      1479	ftp.c	FUNCTION_23	IF_1	IF_3
0x40025fa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1487	ftp.c	FUNCTION_23
0x40025fe	          0x4885c0	                           test rax, rax	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002601	            0x7406	                            je 0x4002609	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002603	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002607	            0xeb07	                           jmp 0x4002610	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002609	    0x488d0d000000	                   lea rcx, [0x04002610]	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002610	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1486	ftp.c	FUNCTION_23
0x4002614	          0x4885c0	                           test rax, rax	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002617	            0x7409	                            je 0x4002622	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002619	    0x488d15000000	                   lea rdx, [0x04002620]	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002620	            0xeb07	                           jmp 0x4002629	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002622	    0x488d15000000	                   lea rdx, [0x04002629]	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002629	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1483	ftp.c	FUNCTION_23
0x400262d	    0x488b80200800	           mov rax, qword [rax + 0x820] 	      1483	ftp.c	FUNCTION_23
0x4002634	          0x4885c0	                           test rax, rax	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002637	            0x740d	                            je 0x4002646	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002639	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1482	ftp.c	FUNCTION_23	CALL_5
0x400263d	    0x488b80200800	           mov rax, qword [rax + 0x820] 	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002644	            0xeb1f	                           jmp 0x4002665	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002646	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1485	ftp.c	FUNCTION_23
0x400264a	     0xfb680960700	          movzx eax, byte [rax + 0x796] 	      1485	ftp.c	FUNCTION_23
0x4002651	            0x84c0	                             test al, al	      1485	ftp.c	FUNCTION_23
0x4002653	            0x7409	                            je 0x400265e	      1485	ftp.c	FUNCTION_23
0x4002655	    0x488d05000000	                   lea rax, [0x0400265c]	      1485	ftp.c	FUNCTION_23
0x400265c	            0xeb07	                           jmp 0x4002665	      1485	ftp.c	FUNCTION_23
0x400265e	    0x488d05000000	                   lea rax, [0x04002665]	      1485	ftp.c	FUNCTION_23
0x4002665	          0x4889c6	                            mov rsi, rax	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002668	    0x488d3d000000	                   lea rdi, [0x0400266f]	      1482	ftp.c	FUNCTION_23	CALL_5
0x400266f	      0xb800000000	                              mov eax, 0	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002674	      0xe800000000	                          call 0x4002679	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002679	        0x488945f0	             mov qword [rbp - 0x10], rax	      1482	ftp.c	FUNCTION_23	CALL_5
0x400267d	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1489	ftp.c	FUNCTION_23	IF_4
0x4002682	            0x751a	                           jne 0x400269e	      1489	ftp.c	FUNCTION_23	IF_4
0x4002684	    0x488b05000000	            mov rax, qword [0x0400268b] 	      1490	ftp.c	FUNCTION_23	IF_4	CALL_6
0x400268b	          0x488b00	                    mov rax, qword [rax]	      1490	ftp.c	FUNCTION_23	IF_4	CALL_6
0x400268e	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1490	ftp.c	FUNCTION_23	IF_4	CALL_6
0x4002692	          0x4889d7	                            mov rdi, rdx	      1490	ftp.c	FUNCTION_23	IF_4	CALL_6
0x4002695	            0xffd0	                                call rax	      1490	ftp.c	FUNCTION_23	IF_4	CALL_6
0x4002697	      0xb81b000000	                           mov eax, 0x1b	      1491	ftp.c	FUNCTION_23	IF_4
0x400269c	            0xeb6e	                           jmp 0x400270c	      1491	ftp.c	FUNCTION_23	IF_4
0x400269e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1494	ftp.c	FUNCTION_23	CALL_7
0x40026a2	    0x488d88b00500	                  lea rcx, [rax + 0x5b0]	      1494	ftp.c	FUNCTION_23	CALL_7
0x40026a9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1494	ftp.c	FUNCTION_23	CALL_7
0x40026ad	          0x4889c2	                            mov rdx, rax	      1494	ftp.c	FUNCTION_23	CALL_7
0x40026b0	    0x488d35000000	                   lea rsi, [0x040026b7]	      1494	ftp.c	FUNCTION_23	CALL_7
0x40026b7	          0x4889cf	                            mov rdi, rcx	      1494	ftp.c	FUNCTION_23	CALL_7
0x40026ba	      0xb800000000	                              mov eax, 0	      1494	ftp.c	FUNCTION_23	CALL_7
0x40026bf	      0xe800000000	                          call 0x40026c4	      1494	ftp.c	FUNCTION_23	CALL_7
0x40026c4	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1494	ftp.c	FUNCTION_23	CALL_7
0x40026c7	    0x488b05000000	            mov rax, qword [0x040026ce] 	      1496	ftp.c	FUNCTION_23	CALL_8
0x40026ce	          0x488b00	                    mov rax, qword [rax]	      1496	ftp.c	FUNCTION_23	CALL_8
0x40026d1	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1496	ftp.c	FUNCTION_23	CALL_8
0x40026d5	          0x4889d7	                            mov rdi, rdx	      1496	ftp.c	FUNCTION_23	CALL_8
0x40026d8	            0xffd0	                                call rax	      1496	ftp.c	FUNCTION_23	CALL_8
0x40026da	    0x488b05000000	            mov rax, qword [0x040026e1] 	      1497	ftp.c	FUNCTION_23	CALL_9
0x40026e1	          0x488b00	                    mov rax, qword [rax]	      1497	ftp.c	FUNCTION_23	CALL_9
0x40026e4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1497	ftp.c	FUNCTION_23	CALL_9
0x40026e8	          0x4889d7	                            mov rdi, rdx	      1497	ftp.c	FUNCTION_23	CALL_9
0x40026eb	            0xffd0	                                call rax	      1497	ftp.c	FUNCTION_23	CALL_9
0x40026ed	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1499	ftp.c	FUNCTION_23	IF_5
0x40026f1	            0x7405	                            je 0x40026f8	      1499	ftp.c	FUNCTION_23	IF_5
0x40026f3	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1500	ftp.c	FUNCTION_23	IF_5
0x40026f6	            0xeb14	                           jmp 0x400270c	      1500	ftp.c	FUNCTION_23	IF_5
0x40026f8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1502	ftp.c	FUNCTION_23	CALL_10
0x40026fc	      0xbe1f000000	                           mov esi, 0x1f	      1502	ftp.c	FUNCTION_23	CALL_10
0x4002701	          0x4889c7	                            mov rdi, rax	      1502	ftp.c	FUNCTION_23	CALL_10
0x4002704	      0xe86ee6ffff	                         call sym._state	      1502	ftp.c	FUNCTION_23	CALL_10
0x4002709	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1504	ftp.c	FUNCTION_23
0x400270c	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1505	ftp.c	FUNCTION_23
0x4002710	    0x644833342528	                xor rsi, qword fs:[0x28]	      1505	ftp.c	FUNCTION_23
0x4002719	            0x7405	                            je 0x4002720	      1505	ftp.c	FUNCTION_23
0x400271b	      0xe800000000	                          call 0x4002720	      1505	ftp.c	FUNCTION_23
0x4002720	              0xc9	                                   leave	      1505	ftp.c	FUNCTION_23
0x4002721	              0xc3	                                     ret	      1505	ftp.c	FUNCTION_23
ftp_domore_getsock	DO,0:FOR,1:functions,0:ELSE,1:SWITCH,0:CALL,5:IF,4:WHILE,0	79
0x4000ebb	              0x55	                                push rbp	       832	ftp.c	FUNCTION_16
0x4000ebc	          0x4889e5	                            mov rbp, rsp	       832	ftp.c	FUNCTION_16
0x4000ebf	        0x4883ec40	                           sub rsp, 0x40	       832	ftp.c	FUNCTION_16
0x4000ec3	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       832	ftp.c	FUNCTION_16
0x4000ec7	        0x488975d0	             mov qword [rbp - 0x30], rsi	       832	ftp.c	FUNCTION_16
0x4000ecb	          0x8955cc	             mov dword [rbp - 0x34], edx	       832	ftp.c	FUNCTION_16
0x4000ece	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       833	ftp.c	FUNCTION_16
0x4000ed2	    0x4805b0050000	                          add rax, 0x5b0	       833	ftp.c	FUNCTION_16
0x4000ed8	        0x488945f8	                mov qword [rbp - 8], rax	       833	ftp.c	FUNCTION_16
0x4000edc	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       835	ftp.c	FUNCTION_16	IF_1
0x4000ee0	            0x750a	                           jne 0x4000eec	       835	ftp.c	FUNCTION_16	IF_1
0x4000ee2	      0xb800000000	                              mov eax, 0	       836	ftp.c	FUNCTION_16	IF_1
0x4000ee7	      0xe9f4000000	                           jmp 0x4000fe0	       836	ftp.c	FUNCTION_16	IF_1
0x4000eec	        0x488b45f8	                mov rax, qword [rbp - 8]	       843	ftp.c	FUNCTION_16	IF_2
0x4000ef0	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	       843	ftp.c	FUNCTION_16	IF_2
0x4000ef6	            0x85c0	                           test eax, eax	       843	ftp.c	FUNCTION_16	IF_2
0x4000ef8	     0xf85c5000000	                           jne 0x4000fc3	       843	ftp.c	FUNCTION_16	IF_2
0x4000efe	    0xc745ec010000	               mov dword [rbp - 0x14], 1	       844	ftp.c	FUNCTION_16	IF_2	CALL_1
0x4000f05	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       848	ftp.c	FUNCTION_16	IF_2
0x4000f09	    0x8b9058020000	           mov edx, dword [rax + 0x258] 	       848	ftp.c	FUNCTION_16	IF_2
0x4000f0f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       848	ftp.c	FUNCTION_16	IF_2
0x4000f13	            0x8910	                    mov dword [rax], edx	       848	ftp.c	FUNCTION_16	IF_2
0x4000f15	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       850	ftp.c	FUNCTION_16	IF_2	IF_3
0x4000f19	          0x488b00	                    mov rax, qword [rax]	       850	ftp.c	FUNCTION_16	IF_2	IF_3
0x4000f1c	     0xfb680970700	          movzx eax, byte [rax + 0x797] 	       850	ftp.c	FUNCTION_16	IF_2	IF_3
0x4000f23	          0x83f001	                              xor eax, 1	       850	ftp.c	FUNCTION_16	IF_2	IF_3
0x4000f26	            0x84c0	                             test al, al	       850	ftp.c	FUNCTION_16	IF_2	IF_3
0x4000f28	            0x7479	                            je 0x4000fa3	       850	ftp.c	FUNCTION_16	IF_2	IF_3
0x4000f2a	    0xc745f0010000	               mov dword [rbp - 0x10], 1	       855	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1
0x4000f31	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       855	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1
0x4000f38	            0xeb61	                           jmp 0x4000f9b	       855	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1
0x4000f3a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       856	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f3e	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       856	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f41	          0x4863d2	                         movsxd rdx, edx	       856	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f44	    0x4881c2980000	                           add rdx, 0x98	       856	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f4b	          0x8b0490	            mov eax, dword [rax + rdx*4]	       856	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f4e	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       856	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f51	            0x7444	                            je 0x4000f97	       856	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f53	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       857	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f56	            0x4898	                                    cdqe	       857	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f58	    0x488d14850000	                        lea rdx, [rax*4]	       857	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f60	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       857	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f64	          0x4801c2	                            add rdx, rax	       857	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f67	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       857	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f6b	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       857	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f6e	          0x4863c9	                         movsxd rcx, ecx	       857	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f71	    0x4881c1980000	                           add rcx, 0x98	       857	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f78	          0x8b0488	            mov eax, dword [rax + rcx*4]	       857	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f7b	            0x8902	                    mov dword [rdx], eax	       857	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f7d	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       858	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4000f80	          0x8d5001	                      lea edx, [rax + 1]	       858	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4000f83	          0x8955f0	             mov dword [rbp - 0x10], edx	       858	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4000f86	          0x83c010	                           add eax, 0x10	       858	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4000f89	      0xba01000000	                              mov edx, 1	       858	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4000f8e	            0x89c1	                            mov ecx, eax	       858	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4000f90	            0xd3e2	                             shl edx, cl	       858	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4000f92	            0x89d0	                            mov eax, edx	       858	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4000f94	           0x945ec	              or dword [rbp - 0x14], eax	       858	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4000f97	        0x8345f401	                add dword [rbp - 0xc], 1	       855	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1
0x4000f9b	        0x837df401	                cmp dword [rbp - 0xc], 1	       855	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1
0x4000f9f	            0x7e99	                           jle 0x4000f3a	       855	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1
0x4000fa1	            0xeb1b	                           jmp 0x4000fbe	       855	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1
0x4000fa3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       863	ftp.c	FUNCTION_16	IF_2	ELSE_1
0x4000fa7	        0x488d5004	                      lea rdx, [rax + 4]	       863	ftp.c	FUNCTION_16	IF_2	ELSE_1
0x4000fab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       863	ftp.c	FUNCTION_16	IF_2	ELSE_1
0x4000faf	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	       863	ftp.c	FUNCTION_16	IF_2	ELSE_1
0x4000fb5	            0x8902	                    mov dword [rdx], eax	       863	ftp.c	FUNCTION_16	IF_2	ELSE_1
0x4000fb7	    0x814dec020002	          or dword [rbp - 0x14], 0x20002	       864	ftp.c	FUNCTION_16	IF_2	ELSE_1	CALL_4
0x4000fbe	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       867	ftp.c	FUNCTION_16	IF_2
0x4000fc1	            0xeb1d	                           jmp 0x4000fe0	       867	ftp.c	FUNCTION_16	IF_2
0x4000fc3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       869	ftp.c	FUNCTION_16	CALL_5
0x4000fc7	    0x488d88b00500	                  lea rcx, [rax + 0x5b0]	       869	ftp.c	FUNCTION_16	CALL_5
0x4000fce	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       869	ftp.c	FUNCTION_16	CALL_5
0x4000fd1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       869	ftp.c	FUNCTION_16	CALL_5
0x4000fd5	          0x4889c6	                            mov rsi, rax	       869	ftp.c	FUNCTION_16	CALL_5
0x4000fd8	          0x4889cf	                            mov rdi, rcx	       869	ftp.c	FUNCTION_16	CALL_5
0x4000fdb	      0xe800000000	                          call 0x4000fe0	       869	ftp.c	FUNCTION_16	CALL_5
0x4000fe0	              0xc9	                                   leave	       870	ftp.c	FUNCTION_16
0x4000fe1	              0xc3	                                     ret	       870	ftp.c	FUNCTION_16
ftp_state_mdtm	DO,0:FOR,0:functions,0:ELSE,1:SWITCH,0:CALL,3:IF,1:WHILE,0	47
0x400284f	              0x55	                                push rbp	      1563	ftp.c	FUNCTION_27
0x4002850	          0x4889e5	                            mov rbp, rsp	      1563	ftp.c	FUNCTION_27
0x4002853	        0x4883ec30	                           sub rsp, 0x30	      1563	ftp.c	FUNCTION_27
0x4002857	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1563	ftp.c	FUNCTION_27
0x400285b	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1564	ftp.c	FUNCTION_27
0x4002862	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1565	ftp.c	FUNCTION_27
0x4002866	          0x488b00	                    mov rax, qword [rax]	      1565	ftp.c	FUNCTION_27
0x4002869	        0x488945f0	             mov qword [rbp - 0x10], rax	      1565	ftp.c	FUNCTION_27
0x400286d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1566	ftp.c	FUNCTION_27
0x4002871	    0x4805b0050000	                          add rax, 0x5b0	      1566	ftp.c	FUNCTION_27
0x4002877	        0x488945f8	                mov qword [rbp - 8], rax	      1566	ftp.c	FUNCTION_27
0x400287b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1569	ftp.c	FUNCTION_27	IF_1
0x400287f	     0xfb680920700	          movzx eax, byte [rax + 0x792] 	      1569	ftp.c	FUNCTION_27	IF_1
0x4002886	            0x84c0	                             test al, al	      1569	ftp.c	FUNCTION_27	IF_1
0x4002888	            0x750e	                           jne 0x4002898	      1569	ftp.c	FUNCTION_27	IF_1
0x400288a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1569	ftp.c	FUNCTION_27	IF_1
0x400288e	    0x8b80c0050000	           mov eax, dword [rax + 0x5c0] 	      1569	ftp.c	FUNCTION_27	IF_1
0x4002894	            0x85c0	                           test eax, eax	      1569	ftp.c	FUNCTION_27	IF_1
0x4002896	            0x7454	                            je 0x40028ec	      1569	ftp.c	FUNCTION_27	IF_1
0x4002898	        0x488b45f8	                mov rax, qword [rbp - 8]	      1569	ftp.c	FUNCTION_27	IF_1
0x400289c	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1569	ftp.c	FUNCTION_27	IF_1
0x40028a3	          0x4885c0	                           test rax, rax	      1569	ftp.c	FUNCTION_27	IF_1
0x40028a6	            0x7444	                            je 0x40028ec	      1569	ftp.c	FUNCTION_27	IF_1
0x40028a8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1573	ftp.c	FUNCTION_27	IF_1	CALL_1
0x40028ac	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      1573	ftp.c	FUNCTION_27	IF_1	CALL_1
0x40028b3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1573	ftp.c	FUNCTION_27	IF_1	CALL_1
0x40028b7	    0x488d35000000	                   lea rsi, [0x040028be]	      1573	ftp.c	FUNCTION_27	IF_1	CALL_1
0x40028be	          0x4889c7	                            mov rdi, rax	      1573	ftp.c	FUNCTION_27	IF_1	CALL_1
0x40028c1	      0xb800000000	                              mov eax, 0	      1573	ftp.c	FUNCTION_27	IF_1	CALL_1
0x40028c6	      0xe800000000	                          call 0x40028cb	      1573	ftp.c	FUNCTION_27	IF_1	CALL_1
0x40028cb	          0x8945ec	             mov dword [rbp - 0x14], eax	      1573	ftp.c	FUNCTION_27	IF_1	CALL_1
0x40028ce	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1573	ftp.c	FUNCTION_27	IF_1	CALL_1
0x40028d2	            0x7405	                            je 0x40028d9	      1573	ftp.c	FUNCTION_27	IF_1	CALL_1
0x40028d4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1573	ftp.c	FUNCTION_27	IF_1	CALL_1
0x40028d7	            0xeb25	                           jmp 0x40028fe	      1573	ftp.c	FUNCTION_27	IF_1	CALL_1
0x40028d9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1575	ftp.c	FUNCTION_27	IF_1	CALL_2
0x40028dd	      0xbe12000000	                           mov esi, 0x12	      1575	ftp.c	FUNCTION_27	IF_1	CALL_2
0x40028e2	          0x4889c7	                            mov rdi, rax	      1575	ftp.c	FUNCTION_27	IF_1	CALL_2
0x40028e5	      0xe88de4ffff	                         call sym._state	      1575	ftp.c	FUNCTION_27	IF_1	CALL_2
0x40028ea	            0xeb0f	                           jmp 0x40028fb	      1575	ftp.c	FUNCTION_27	IF_1	CALL_2
0x40028ec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1578	ftp.c	FUNCTION_27	CALL_3
0x40028f0	          0x4889c7	                            mov rdi, rax	      1578	ftp.c	FUNCTION_27	CALL_3
0x40028f3	      0xe88cfeffff	                 call sym.ftp_state_type	      1578	ftp.c	FUNCTION_27	CALL_3
0x40028f8	          0x8945ec	             mov dword [rbp - 0x14], eax	      1578	ftp.c	FUNCTION_27	CALL_3
0x40028fb	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1580	ftp.c	FUNCTION_27
0x40028fe	              0xc9	                                   leave	      1581	ftp.c	FUNCTION_27
0x40028ff	              0xc3	                                     ret	      1581	ftp.c	FUNCTION_27
ftp_state_size_resp	DO,0:FOR,0:functions,0:ELSE,2:SWITCH,0:CALL,8:IF,6:WHILE,0	91
0x400415b	              0x55	                                push rbp	      2264	ftp.c	FUNCTION_37
0x400415c	          0x4889e5	                            mov rbp, rsp	      2264	ftp.c	FUNCTION_37
0x400415f	    0x4881ecc00000	                           sub rsp, 0xc0	      2264	ftp.c	FUNCTION_37
0x4004166	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	      2264	ftp.c	FUNCTION_37
0x400416d	    0x89b544ffffff	             mov dword [rbp - 0xbc], esi	      2264	ftp.c	FUNCTION_37
0x4004173	    0x899540ffffff	             mov dword [rbp - 0xc0], edx	      2264	ftp.c	FUNCTION_37
0x4004179	    0x64488b042528	                mov rax, qword fs:[0x28]	      2264	ftp.c	FUNCTION_37
0x4004182	        0x488945f8	                mov qword [rbp - 8], rax	      2264	ftp.c	FUNCTION_37
0x4004186	            0x31c0	                            xor eax, eax	      2264	ftp.c	FUNCTION_37
0x4004188	    0xc78554ffffff	               mov dword [rbp - 0xac], 0	      2265	ftp.c	FUNCTION_37
0x4004192	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2266	ftp.c	FUNCTION_37
0x4004199	          0x488b00	                    mov rax, qword [rax]	      2266	ftp.c	FUNCTION_37
0x400419c	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2266	ftp.c	FUNCTION_37
0x40041a3	    0x48c78558ffff	mov qword [rbp - 0xa8], 0xffffffffffffffff	      2267	ftp.c	FUNCTION_37
0x40041ae	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2268	ftp.c	FUNCTION_37
0x40041b5	    0x488b80a80c00	           mov rax, qword [rax + 0xca8] 	      2268	ftp.c	FUNCTION_37
0x40041bc	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      2268	ftp.c	FUNCTION_37
0x40041c3	    0x81bd44ffffff	           cmp dword [rbp - 0xbc], 0xd5 	      2271	ftp.c	FUNCTION_37	IF_1
0x40041cd	            0x7524	                           jne 0x40041f3	      2271	ftp.c	FUNCTION_37	IF_1
0x40041cf	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2273	ftp.c	FUNCTION_37	CALL_1
0x40041d6	        0x488d7804	                      lea rdi, [rax + 4]	      2273	ftp.c	FUNCTION_37	CALL_1
0x40041da	    0x488d8558ffff	                   lea rax, [rbp - 0xa8]	      2273	ftp.c	FUNCTION_37	CALL_1
0x40041e1	          0x4889c1	                            mov rcx, rax	      2273	ftp.c	FUNCTION_37	CALL_1
0x40041e4	      0xba00000000	                              mov edx, 0	      2273	ftp.c	FUNCTION_37	CALL_1
0x40041e9	      0xbe00000000	                              mov esi, 0	      2273	ftp.c	FUNCTION_37	CALL_1
0x40041ee	      0xe800000000	                          call 0x40041f3	      2273	ftp.c	FUNCTION_37	CALL_1
0x40041f3	    0x83bd40ffffff	           cmp dword [rbp - 0xc0], 0x17 	      2275	ftp.c	FUNCTION_37	IF_2
0x40041fa	     0xf85a1000000	                           jne 0x40042a1	      2275	ftp.c	FUNCTION_37	IF_2
0x4004200	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2277	ftp.c	FUNCTION_37	IF_2	IF_3
0x4004207	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2277	ftp.c	FUNCTION_37	IF_2	IF_3
0x400420b	            0x7464	                            je 0x4004271	      2277	ftp.c	FUNCTION_37	IF_2	IF_3
0x400420d	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      2279	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_2
0x4004214	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      2279	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_2
0x400421b	          0x4889d1	                            mov rcx, rdx	      2279	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_2
0x400421e	    0x488d15000000	                   lea rdx, [0x04004225]	      2279	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_2
0x4004225	      0xbe80000000	                           mov esi, 0x80	      2279	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_2
0x400422a	          0x4889c7	                            mov rdi, rax	      2279	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_2
0x400422d	      0xb800000000	                              mov eax, 0	      2279	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_2
0x4004232	      0xe800000000	                          call 0x4004237	      2279	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_2
0x4004237	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      2281	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x400423e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2281	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x4004245	      0xb900000000	                              mov ecx, 0	      2281	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x400424a	      0xbe03000000	                              mov esi, 3	      2281	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x400424f	          0x4889c7	                            mov rdi, rax	      2281	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x4004252	      0xe800000000	                          call 0x4004257	      2281	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x4004257	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      2281	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x400425d	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	      2282	ftp.c	FUNCTION_37	IF_2	IF_3	IF_4
0x4004264	            0x740b	                            je 0x4004271	      2282	ftp.c	FUNCTION_37	IF_2	IF_3	IF_4
0x4004266	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2283	ftp.c	FUNCTION_37	IF_2	IF_3	IF_4
0x400426c	      0xe9b1000000	                           jmp 0x4004322	      2283	ftp.c	FUNCTION_37	IF_2	IF_3	IF_4
0x4004271	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      2286	ftp.c	FUNCTION_37	IF_2	CALL_4
0x4004278	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2286	ftp.c	FUNCTION_37	IF_2	CALL_4
0x400427f	          0x4889d6	                            mov rsi, rdx	      2286	ftp.c	FUNCTION_37	IF_2	CALL_4
0x4004282	          0x4889c7	                            mov rdi, rax	      2286	ftp.c	FUNCTION_37	IF_2	CALL_4
0x4004285	      0xe800000000	                          call 0x400428a	      2286	ftp.c	FUNCTION_37	IF_2	CALL_4
0x400428a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2287	ftp.c	FUNCTION_37	IF_2	CALL_5
0x4004291	          0x4889c7	                            mov rdi, rax	      2287	ftp.c	FUNCTION_37	IF_2	CALL_5
0x4004294	      0xe807e1ffff	                 call sym.ftp_state_rest	      2287	ftp.c	FUNCTION_37	IF_2	CALL_5
0x4004299	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      2287	ftp.c	FUNCTION_37	IF_2	CALL_5
0x400429f	            0xeb7b	                           jmp 0x400431c	      2287	ftp.c	FUNCTION_37	IF_2	CALL_5
0x40042a1	    0x83bd40ffffff	           cmp dword [rbp - 0xc0], 0x18 	      2289	ftp.c	FUNCTION_37	ELSE_1	IF_5
0x40042a8	            0x753a	                           jne 0x40042e4	      2289	ftp.c	FUNCTION_37	ELSE_1	IF_5
0x40042aa	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      2290	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_6
0x40042b1	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2290	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_6
0x40042b8	          0x4889d6	                            mov rsi, rdx	      2290	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_6
0x40042bb	          0x4889c7	                            mov rdi, rax	      2290	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_6
0x40042be	      0xe800000000	                          call 0x40042c3	      2290	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_6
0x40042c3	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      2291	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_7
0x40042ca	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2291	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_7
0x40042d1	          0x4889d6	                            mov rsi, rdx	      2291	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_7
0x40042d4	          0x4889c7	                            mov rdi, rax	      2291	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_7
0x40042d7	      0xe8a7fbffff	                 call sym.ftp_state_retr	      2291	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_7
0x40042dc	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      2291	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_7
0x40042e2	            0xeb38	                           jmp 0x400431c	      2291	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_7
0x40042e4	    0x83bd40ffffff	           cmp dword [rbp - 0xc0], 0x19 	      2293	ftp.c	FUNCTION_37	ELSE_2	IF_6
0x40042eb	            0x752f	                           jne 0x400431c	      2293	ftp.c	FUNCTION_37	ELSE_2	IF_6
0x40042ed	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      2294	ftp.c	FUNCTION_37	ELSE_2	IF_6
0x40042f4	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2294	ftp.c	FUNCTION_37	ELSE_2	IF_6
0x40042fb	    0x488990b05000	          mov qword [rax + 0x50b0], rdx 	      2294	ftp.c	FUNCTION_37	ELSE_2	IF_6
0x4004302	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2295	ftp.c	FUNCTION_37	ELSE_2	IF_6	CALL_8
0x4004309	      0xbe01000000	                              mov esi, 1	      2295	ftp.c	FUNCTION_37	ELSE_2	IF_6	CALL_8
0x400430e	          0x4889c7	                            mov rdi, rax	      2295	ftp.c	FUNCTION_37	ELSE_2	IF_6	CALL_8
0x4004311	      0xe8eae5ffff	             call sym.ftp_state_ul_setup	      2295	ftp.c	FUNCTION_37	ELSE_2	IF_6	CALL_8
0x4004316	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      2295	ftp.c	FUNCTION_37	ELSE_2	IF_6	CALL_8
0x400431c	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2298	ftp.c	FUNCTION_37
0x4004322	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2299	ftp.c	FUNCTION_37
0x4004326	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2299	ftp.c	FUNCTION_37
0x400432f	            0x7405	                            je 0x4004336	      2299	ftp.c	FUNCTION_37
0x4004331	      0xe800000000	                          call 0x4004336	      2299	ftp.c	FUNCTION_37
0x4004336	              0xc9	                                   leave	      2299	ftp.c	FUNCTION_37
0x4004337	              0xc3	                                     ret	      2299	ftp.c	FUNCTION_37
isBadFtpString	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,2:IF,0:WHILE,0	22
0x4000263	              0x55	                                push rbp	       265	ftp.c	FUNCTION_3
0x4000264	          0x4889e5	                            mov rbp, rsp	       265	ftp.c	FUNCTION_3
0x4000267	        0x4883ec10	                           sub rsp, 0x10	       265	ftp.c	FUNCTION_3
0x400026b	        0x48897df8	                mov qword [rbp - 8], rdi	       265	ftp.c	FUNCTION_3
0x400026f	        0x488b45f8	                mov rax, qword [rbp - 8]	       266	ftp.c	FUNCTION_3	CALL_1
0x4000273	      0xbe0d000000	                            mov esi, 0xd	       266	ftp.c	FUNCTION_3	CALL_1
0x4000278	          0x4889c7	                            mov rdi, rax	       266	ftp.c	FUNCTION_3	CALL_1
0x400027b	      0xe800000000	                          call 0x4000280	       266	ftp.c	FUNCTION_3	CALL_1
0x4000280	          0x4885c0	                           test rax, rax	       267	ftp.c	FUNCTION_3	CALL_2
0x4000283	            0x7516	                           jne 0x400029b	       267	ftp.c	FUNCTION_3	CALL_2
0x4000285	        0x488b45f8	                mov rax, qword [rbp - 8]	       267	ftp.c	FUNCTION_3	CALL_2
0x4000289	      0xbe0a000000	                            mov esi, 0xa	       267	ftp.c	FUNCTION_3	CALL_2
0x400028e	          0x4889c7	                            mov rdi, rax	       267	ftp.c	FUNCTION_3	CALL_2
0x4000291	      0xe800000000	                          call 0x4000296	       267	ftp.c	FUNCTION_3	CALL_2
0x4000296	          0x4885c0	                           test rax, rax	       267	ftp.c	FUNCTION_3	CALL_2
0x4000299	            0x7407	                            je 0x40002a2	       267	ftp.c	FUNCTION_3	CALL_2
0x400029b	      0xb801000000	                              mov eax, 1	       267	ftp.c	FUNCTION_3	CALL_2
0x40002a0	            0xeb05	                           jmp 0x40002a7	       267	ftp.c	FUNCTION_3	CALL_2
0x40002a2	      0xb800000000	                              mov eax, 0	       267	ftp.c	FUNCTION_3	CALL_2
0x40002a7	          0x83e001	                              and eax, 1	       266	ftp.c	FUNCTION_3	CALL_1
0x40002aa	              0xc9	                                   leave	       268	ftp.c	FUNCTION_3
0x40002ab	              0xc3	                                     ret	       268	ftp.c	FUNCTION_3
ftp_sendquote	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,4:IF,4:WHILE,1	89
0x400627c	              0x55	                                push rbp	      3366	ftp.c	FUNCTION_49
0x400627d	          0x4889e5	                            mov rbp, rsp	      3366	ftp.c	FUNCTION_49
0x4006280	              0x53	                                push rbx	      3366	ftp.c	FUNCTION_49
0x4006281	        0x4883ec58	                           sub rsp, 0x58	      3366	ftp.c	FUNCTION_49
0x4006285	        0x48897da8	             mov qword [rbp - 0x58], rdi	      3366	ftp.c	FUNCTION_49
0x4006289	        0x488975a0	             mov qword [rbp - 0x60], rsi	      3366	ftp.c	FUNCTION_49
0x400628d	    0x64488b042528	                mov rax, qword fs:[0x28]	      3366	ftp.c	FUNCTION_49
0x4006296	        0x488945e8	             mov qword [rbp - 0x18], rax	      3366	ftp.c	FUNCTION_49
0x400629a	            0x31c0	                            xor eax, eax	      3366	ftp.c	FUNCTION_49
0x400629c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3371	ftp.c	FUNCTION_49
0x40062a0	    0x4805b0050000	                          add rax, 0x5b0	      3371	ftp.c	FUNCTION_49
0x40062a6	        0x488945d8	             mov qword [rbp - 0x28], rax	      3371	ftp.c	FUNCTION_49
0x40062aa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3372	ftp.c	FUNCTION_49
0x40062ae	        0x488945e0	             mov qword [rbp - 0x20], rax	      3372	ftp.c	FUNCTION_49
0x40062b2	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3374	ftp.c	FUNCTION_49
0x40062b6	        0x488945c8	             mov qword [rbp - 0x38], rax	      3374	ftp.c	FUNCTION_49
0x40062ba	      0xe9e7000000	                           jmp 0x40063a6	      3375	ftp.c	FUNCTION_49	WHILE_1
0x40062bf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3376	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x40062c3	          0x488b00	                    mov rax, qword [rax]	      3376	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x40062c6	          0x4885c0	                           test rax, rax	      3376	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x40062c9	     0xf84cb000000	                            je 0x400639a	      3376	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x40062cf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3377	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x40062d3	          0x488b00	                    mov rax, qword [rax]	      3377	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x40062d6	        0x488945d0	             mov qword [rbp - 0x30], rax	      3377	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x40062da	        0xc645b700	                mov byte [rbp - 0x49], 0	      3378	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x40062de	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3385	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_2
0x40062e2	           0xfb600	                   movzx eax, byte [rax]	      3385	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_2
0x40062e5	            0x3c2a	                            cmp al, 0x2a	      3385	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_2
0x40062e7	            0x7509	                           jne 0x40062f2	      3385	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_2
0x40062e9	      0x488345d001	               add qword [rbp - 0x30], 1	      3386	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_2
0x40062ee	        0xc645b701	                mov byte [rbp - 0x49], 1	      3387	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_2
0x40062f2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_1
0x40062f6	    0x488d88b00500	                  lea rcx, [rax + 0x5b0]	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_1
0x40062fd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_1
0x4006301	          0x4889c2	                            mov rdx, rax	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_1
0x4006304	    0x488d35000000	                   lea rsi, [0x0400630b]	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_1
0x400630b	          0x4889cf	                            mov rdi, rcx	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_1
0x400630e	      0xb800000000	                              mov eax, 0	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_1
0x4006313	      0xe800000000	                          call 0x4006318	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_1
0x4006318	          0x8945bc	             mov dword [rbp - 0x44], eax	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_1
0x400631b	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_1
0x400631f	            0x7408	                            je 0x4006329	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_1
0x4006321	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_1
0x4006324	      0xe98d000000	                           jmp 0x40063b6	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_1
0x4006329	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	      3392	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_2
0x400632d	      0xe800000000	                          call 0x4006332	      3392	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_2
0x4006332	        0x48894340	             mov qword [rbx + 0x40], rax	      3392	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_2
0x4006336	        0x48895348	             mov qword [rbx + 0x48], rdx	      3392	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_2
0x400633a	        0x488d55b8	                   lea rdx, [rbp - 0x48]	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_3
0x400633e	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_3
0x4006342	        0x488d45c0	                   lea rax, [rbp - 0x40]	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_3
0x4006346	          0x4889ce	                            mov rsi, rcx	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_3
0x4006349	          0x4889c7	                            mov rdi, rax	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_3
0x400634c	      0xe800000000	                          call 0x4006351	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_3
0x4006351	          0x8945bc	             mov dword [rbp - 0x44], eax	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_3
0x4006354	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      3395	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_3
0x4006358	            0x7405	                            je 0x400635f	      3395	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_3
0x400635a	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      3396	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_3
0x400635d	            0xeb57	                           jmp 0x40063b6	      3396	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_3
0x400635f	         0xfb645b7	            movzx eax, byte [rbp - 0x49]	      3398	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4
0x4006363	          0x83f001	                              xor eax, 1	      3398	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4
0x4006366	            0x84c0	                             test al, al	      3398	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4
0x4006368	            0x7430	                            je 0x400639a	      3398	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4
0x400636a	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      3398	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4
0x400636d	      0x3d8f010000	                          cmp eax, 0x18f	      3398	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4
0x4006372	            0x7e26	                           jle 0x400639a	      3398	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4
0x4006374	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3399	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4	CALL_4
0x4006378	          0x488b00	                    mov rax, qword [rax]	      3399	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4	CALL_4
0x400637b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3399	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4	CALL_4
0x400637f	    0x488d35000000	                   lea rsi, [0x04006386]	      3399	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4	CALL_4
0x4006386	          0x4889c7	                            mov rdi, rax	      3399	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4	CALL_4
0x4006389	      0xb800000000	                              mov eax, 0	      3399	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4	CALL_4
0x400638e	      0xe800000000	                          call 0x4006393	      3399	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4	CALL_4
0x4006393	      0xb815000000	                           mov eax, 0x15	      3400	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4
0x4006398	            0xeb1c	                           jmp 0x40063b6	      3400	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4
0x400639a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3404	ftp.c	FUNCTION_49	WHILE_1
0x400639e	        0x488b4008	                mov rax, qword [rax + 8]	      3404	ftp.c	FUNCTION_49	WHILE_1
0x40063a2	        0x488945c8	             mov qword [rbp - 0x38], rax	      3404	ftp.c	FUNCTION_49	WHILE_1
0x40063a6	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      3375	ftp.c	FUNCTION_49	WHILE_1
0x40063ab	     0xf850effffff	                           jne 0x40062bf	      3375	ftp.c	FUNCTION_49	WHILE_1
0x40063b1	      0xb800000000	                              mov eax, 0	      3407	ftp.c	FUNCTION_49
0x40063b6	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      3408	ftp.c	FUNCTION_49
0x40063ba	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3408	ftp.c	FUNCTION_49
0x40063c3	            0x7405	                            je 0x40063ca	      3408	ftp.c	FUNCTION_49
0x40063c5	      0xe800000000	                          call 0x40063ca	      3408	ftp.c	FUNCTION_49
0x40063ca	        0x4883c458	                           add rsp, 0x58	      3408	ftp.c	FUNCTION_49
0x40063ce	              0x5b	                                 pop rbx	      3408	ftp.c	FUNCTION_49
0x40063cf	              0x5d	                                 pop rbp	      3408	ftp.c	FUNCTION_49
0x40063d0	              0xc3	                                     ret	      3408	ftp.c	FUNCTION_49
ftp_readresp	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,1:CALL,6:IF,2:WHILE,0	53
0x4000aa2	              0x55	                                push rbp	       568	ftp.c	FUNCTION_10
0x4000aa3	          0x4889e5	                            mov rbp, rsp	       568	ftp.c	FUNCTION_10
0x4000aa6	        0x4883ec40	                           sub rsp, 0x40	       568	ftp.c	FUNCTION_10
0x4000aaa	          0x897ddc	             mov dword [rbp - 0x24], edi	       568	ftp.c	FUNCTION_10
0x4000aad	        0x488975d0	             mov qword [rbp - 0x30], rsi	       568	ftp.c	FUNCTION_10
0x4000ab1	        0x488955c8	             mov qword [rbp - 0x38], rdx	       568	ftp.c	FUNCTION_10
0x4000ab5	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       568	ftp.c	FUNCTION_10
0x4000ab9	    0x64488b042528	                mov rax, qword fs:[0x28]	       568	ftp.c	FUNCTION_10
0x4000ac2	        0x488945f8	                mov qword [rbp - 8], rax	       568	ftp.c	FUNCTION_10
0x4000ac6	            0x31c0	                            xor eax, eax	       568	ftp.c	FUNCTION_10
0x4000ac8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       569	ftp.c	FUNCTION_10
0x4000acc	        0x488b4058	            mov rax, qword [rax + 0x58] 	       569	ftp.c	FUNCTION_10
0x4000ad0	        0x488945e8	             mov qword [rbp - 0x18], rax	       569	ftp.c	FUNCTION_10
0x4000ad4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       570	ftp.c	FUNCTION_10
0x4000ad8	          0x488b00	                    mov rax, qword [rax]	       570	ftp.c	FUNCTION_10
0x4000adb	        0x488945f0	             mov qword [rbp - 0x10], rax	       570	ftp.c	FUNCTION_10
0x4000adf	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       574	ftp.c	FUNCTION_10
0x4000ae6	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       577	ftp.c	FUNCTION_10	CALL_1
0x4000aea	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       577	ftp.c	FUNCTION_10	CALL_1
0x4000aee	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       577	ftp.c	FUNCTION_10	CALL_1
0x4000af2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       577	ftp.c	FUNCTION_10	CALL_1
0x4000af5	            0x89c7	                            mov edi, eax	       577	ftp.c	FUNCTION_10	CALL_1
0x4000af7	      0xe800000000	                          call 0x4000afc	       577	ftp.c	FUNCTION_10	CALL_1
0x4000afc	          0x8945e4	             mov dword [rbp - 0x1c], eax	       577	ftp.c	FUNCTION_10	CALL_1
0x4000aff	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       599	ftp.c	FUNCTION_10
0x4000b02	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       599	ftp.c	FUNCTION_10
0x4000b06	    0x899058510000	          mov dword [rax + 0x5158], edx 	       599	ftp.c	FUNCTION_10
0x4000b0c	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       601	ftp.c	FUNCTION_10	IF_1
0x4000b11	            0x7409	                            je 0x4000b1c	       601	ftp.c	FUNCTION_10	IF_1
0x4000b13	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       602	ftp.c	FUNCTION_10	IF_1
0x4000b16	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       602	ftp.c	FUNCTION_10	IF_1
0x4000b1a	            0x8910	                    mov dword [rax], edx	       602	ftp.c	FUNCTION_10	IF_1
0x4000b1c	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       604	ftp.c	FUNCTION_10	IF_2
0x4000b1f	      0x3da5010000	                          cmp eax, 0x1a5	       604	ftp.c	FUNCTION_10	IF_2
0x4000b24	            0x7530	                           jne 0x4000b56	       604	ftp.c	FUNCTION_10	IF_2
0x4000b26	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       612	ftp.c	FUNCTION_10	IF_2	CALL_5
0x4000b2a	    0x488d35000000	                   lea rsi, [0x04000b31]	       612	ftp.c	FUNCTION_10	IF_2	CALL_5
0x4000b31	          0x4889c7	                            mov rdi, rax	       612	ftp.c	FUNCTION_10	IF_2	CALL_5
0x4000b34	      0xb800000000	                              mov eax, 0	       612	ftp.c	FUNCTION_10	IF_2	CALL_5
0x4000b39	      0xe800000000	                          call 0x4000b3e	       612	ftp.c	FUNCTION_10	IF_2	CALL_5
0x4000b3e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       613	ftp.c	FUNCTION_10	IF_2	CALL_6
0x4000b42	      0xbe00000000	                              mov esi, 0	       613	ftp.c	FUNCTION_10	IF_2	CALL_6
0x4000b47	          0x4889c7	                            mov rdi, rax	       613	ftp.c	FUNCTION_10	IF_2	CALL_6
0x4000b4a	      0xe828020000	                         call sym._state	       613	ftp.c	FUNCTION_10	IF_2	CALL_6
0x4000b4f	      0xb81c000000	                           mov eax, 0x1c	       614	ftp.c	FUNCTION_10	IF_2
0x4000b54	            0xeb03	                           jmp 0x4000b59	       614	ftp.c	FUNCTION_10	IF_2
0x4000b56	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       617	ftp.c	FUNCTION_10
0x4000b59	        0x488b4df8	                mov rcx, qword [rbp - 8]	       618	ftp.c	FUNCTION_10
0x4000b5d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       618	ftp.c	FUNCTION_10
0x4000b66	            0x7405	                            je 0x4000b6d	       618	ftp.c	FUNCTION_10
0x4000b68	      0xe800000000	                          call 0x4000b6d	       618	ftp.c	FUNCTION_10
0x4000b6d	              0xc9	                                   leave	       618	ftp.c	FUNCTION_10
0x4000b6e	              0xc3	                                     ret	       618	ftp.c	FUNCTION_10
ftp_need_type	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,0:IF,0:WHILE,0	18
0x40063d1	              0x55	                                push rbp	      3418	ftp.c	FUNCTION_50
0x40063d2	          0x4889e5	                            mov rbp, rsp	      3418	ftp.c	FUNCTION_50
0x40063d5	        0x48897df8	                mov qword [rbp - 8], rdi	      3418	ftp.c	FUNCTION_50
0x40063d9	            0x89f0	                            mov eax, esi	      3418	ftp.c	FUNCTION_50
0x40063db	          0x8845f4	                mov byte [rbp - 0xc], al	      3418	ftp.c	FUNCTION_50
0x40063de	        0x488b45f8	                mov rax, qword [rbp - 8]	      3419	ftp.c	FUNCTION_50
0x40063e2	     0xfb6805c0600	          movzx eax, byte [rax + 0x65c] 	      3419	ftp.c	FUNCTION_50
0x40063e9	           0xfbec0	                           movsx eax, al	      3419	ftp.c	FUNCTION_50
0x40063ec	        0x807df400	                 cmp byte [rbp - 0xc], 0	      3419	ftp.c	FUNCTION_50
0x40063f0	            0x7407	                            je 0x40063f9	      3419	ftp.c	FUNCTION_50
0x40063f2	      0xba41000000	                           mov edx, 0x41	      3419	ftp.c	FUNCTION_50
0x40063f7	            0xeb05	                           jmp 0x40063fe	      3419	ftp.c	FUNCTION_50
0x40063f9	      0xba49000000	                           mov edx, 0x49	      3419	ftp.c	FUNCTION_50
0x40063fe	            0x39d0	                            cmp eax, edx	      3419	ftp.c	FUNCTION_50
0x4006400	           0xf95c0	                                setne al	      3419	ftp.c	FUNCTION_50
0x4006403	           0xfb6c0	                           movzx eax, al	      3419	ftp.c	FUNCTION_50
0x4006406	              0x5d	                                 pop rbp	      3420	ftp.c	FUNCTION_50
0x4006407	              0xc3	                                     ret	      3420	ftp.c	FUNCTION_50
ftp_state_rest_resp	DO,0:FOR,0:functions,0:ELSE,1:SWITCH,1:CALL,5:IF,3:WHILE,0	74
0x4004338	              0x55	                                push rbp	      2304	ftp.c	FUNCTION_38
0x4004339	          0x4889e5	                            mov rbp, rsp	      2304	ftp.c	FUNCTION_38
0x400433c	        0x4883ec40	                           sub rsp, 0x40	      2304	ftp.c	FUNCTION_38
0x4004340	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2304	ftp.c	FUNCTION_38
0x4004344	          0x8975c4	             mov dword [rbp - 0x3c], esi	      2304	ftp.c	FUNCTION_38
0x4004347	          0x8955c0	             mov dword [rbp - 0x40], edx	      2304	ftp.c	FUNCTION_38
0x400434a	    0x64488b042528	                mov rax, qword fs:[0x28]	      2304	ftp.c	FUNCTION_38
0x4004353	        0x488945f8	                mov qword [rbp - 8], rax	      2304	ftp.c	FUNCTION_38
0x4004357	            0x31c0	                            xor eax, eax	      2304	ftp.c	FUNCTION_38
0x4004359	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      2305	ftp.c	FUNCTION_38
0x4004360	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2306	ftp.c	FUNCTION_38
0x4004364	    0x4805b0050000	                          add rax, 0x5b0	      2306	ftp.c	FUNCTION_38
0x400436a	        0x488945d8	             mov qword [rbp - 0x28], rax	      2306	ftp.c	FUNCTION_38
0x400436e	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2308	ftp.c	FUNCTION_38	SWITCH_1
0x4004371	          0x83f81b	                           cmp eax, 0x1b	      2308	ftp.c	FUNCTION_38	SWITCH_1
0x4004374	            0x746f	                            je 0x40043e5	      2308	ftp.c	FUNCTION_38	SWITCH_1
0x4004376	    0x817dc45e0100	          cmp dword [rbp - 0x3c], 0x15e 	      2312	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x400437d	            0x7555	                           jne 0x40043d4	      2312	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x400437f	    0x48b841636365	          movabs rax, 0x722d747065636341	      2313	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x4004389	        0x488945e0	             mov qword [rbp - 0x20], rax	      2313	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x400438d	    0x48b8616e6765	          movabs rax, 0x62203a7365676e61	      2313	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x4004397	        0x488945e8	             mov qword [rbp - 0x18], rax	      2313	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x400439b	    0x48b879746573	               movabs rax, 0xa0d73657479	      2313	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x40043a5	        0x488945f0	             mov qword [rbp - 0x10], rax	      2313	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x40043a9	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2314	ftp.c	FUNCTION_38	SWITCH_1	IF_1	CALL_1
0x40043ad	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2314	ftp.c	FUNCTION_38	SWITCH_1	IF_1	CALL_1
0x40043b1	      0xb900000000	                              mov ecx, 0	      2314	ftp.c	FUNCTION_38	SWITCH_1	IF_1	CALL_1
0x40043b6	      0xbe03000000	                              mov esi, 3	      2314	ftp.c	FUNCTION_38	SWITCH_1	IF_1	CALL_1
0x40043bb	          0x4889c7	                            mov rdi, rax	      2314	ftp.c	FUNCTION_38	SWITCH_1	IF_1	CALL_1
0x40043be	      0xe800000000	                          call 0x40043c3	      2314	ftp.c	FUNCTION_38	SWITCH_1	IF_1	CALL_1
0x40043c3	          0x8945d4	             mov dword [rbp - 0x2c], eax	      2314	ftp.c	FUNCTION_38	SWITCH_1	IF_1	CALL_1
0x40043c6	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      2315	ftp.c	FUNCTION_38	SWITCH_1	IF_1	IF_2
0x40043ca	            0x7408	                            je 0x40043d4	      2315	ftp.c	FUNCTION_38	SWITCH_1	IF_1	IF_2
0x40043cc	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2316	ftp.c	FUNCTION_38	SWITCH_1	IF_1	IF_2
0x40043cf	      0xe984000000	                           jmp 0x4004458	      2316	ftp.c	FUNCTION_38	SWITCH_1	IF_1	IF_2
0x40043d4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2319	ftp.c	FUNCTION_38	SWITCH_1	CALL_2
0x40043d8	          0x4889c7	                            mov rdi, rax	      2319	ftp.c	FUNCTION_38	SWITCH_1	CALL_2
0x40043db	      0xe8ecddffff	     call sym.ftp_state_prepare_transfer	      2319	ftp.c	FUNCTION_38	SWITCH_1	CALL_2
0x40043e0	          0x8945d4	             mov dword [rbp - 0x2c], eax	      2319	ftp.c	FUNCTION_38	SWITCH_1	CALL_2
0x40043e3	            0xeb70	                           jmp 0x4004455	      2320	ftp.c	FUNCTION_38	SWITCH_1
0x40043e5	    0x817dc45e0100	          cmp dword [rbp - 0x3c], 0x15e 	      2323	ftp.c	FUNCTION_38	SWITCH_1	IF_3
0x40043ec	            0x7424	                            je 0x4004412	      2323	ftp.c	FUNCTION_38	SWITCH_1	IF_3
0x40043ee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2324	ftp.c	FUNCTION_38	SWITCH_1	IF_3	CALL_3
0x40043f2	          0x488b00	                    mov rax, qword [rax]	      2324	ftp.c	FUNCTION_38	SWITCH_1	IF_3	CALL_3
0x40043f5	    0x488d35000000	                   lea rsi, [0x040043fc]	      2324	ftp.c	FUNCTION_38	SWITCH_1	IF_3	CALL_3
0x40043fc	          0x4889c7	                            mov rdi, rax	      2324	ftp.c	FUNCTION_38	SWITCH_1	IF_3	CALL_3
0x40043ff	      0xb800000000	                              mov eax, 0	      2324	ftp.c	FUNCTION_38	SWITCH_1	IF_3	CALL_3
0x4004404	      0xe800000000	                          call 0x4004409	      2324	ftp.c	FUNCTION_38	SWITCH_1	IF_3	CALL_3
0x4004409	    0xc745d41f0000	           mov dword [rbp - 0x2c], 0x1f 	      2325	ftp.c	FUNCTION_38	SWITCH_1	IF_3
0x4004410	            0xeb42	                           jmp 0x4004454	      2331	ftp.c	FUNCTION_38	SWITCH_1
0x4004412	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_4
0x4004416	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_4
0x400441d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_4
0x4004421	    0x488d35000000	                   lea rsi, [0x04004428]	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_4
0x4004428	          0x4889c7	                            mov rdi, rax	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_4
0x400442b	      0xb800000000	                              mov eax, 0	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_4
0x4004430	      0xe800000000	                          call 0x4004435	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_4
0x4004435	          0x8945d4	             mov dword [rbp - 0x2c], eax	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_4
0x4004438	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_4
0x400443c	            0x7405	                            je 0x4004443	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_4
0x400443e	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_4
0x4004441	            0xeb15	                           jmp 0x4004458	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_4
0x4004443	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2329	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_5
0x4004447	      0xbe20000000	                           mov esi, 0x20	      2329	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_5
0x400444c	          0x4889c7	                            mov rdi, rax	      2329	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_5
0x400444f	      0xe823c9ffff	                         call sym._state	      2329	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1	CALL_5
0x4004454	              0x90	                                     nop	      2331	ftp.c	FUNCTION_38	SWITCH_1
0x4004455	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2334	ftp.c	FUNCTION_38
0x4004458	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2335	ftp.c	FUNCTION_38
0x400445c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2335	ftp.c	FUNCTION_38
0x4004465	            0x7405	                            je 0x400446c	      2335	ftp.c	FUNCTION_38
0x4004467	      0xe800000000	                          call 0x400446c	      2335	ftp.c	FUNCTION_38
0x400446c	              0xc9	                                   leave	      2335	ftp.c	FUNCTION_38
0x400446d	              0xc3	                                     ret	      2335	ftp.c	FUNCTION_38
ftp_setup_connection	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,1:CALL,6:IF,5:WHILE,0	110
0x40080a6	              0x55	                                push rbp	      4384	ftp.c	FUNCTION_66
0x40080a7	          0x4889e5	                            mov rbp, rsp	      4384	ftp.c	FUNCTION_66
0x40080aa	              0x53	                                push rbx	      4384	ftp.c	FUNCTION_66
0x40080ab	        0x4883ec38	                           sub rsp, 0x38	      4384	ftp.c	FUNCTION_66
0x40080af	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      4384	ftp.c	FUNCTION_66
0x40080b3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4385	ftp.c	FUNCTION_66
0x40080b7	          0x488b00	                    mov rax, qword [rax]	      4385	ftp.c	FUNCTION_66
0x40080ba	        0x488945e0	             mov qword [rbp - 0x20], rax	      4385	ftp.c	FUNCTION_66
0x40080be	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4390	ftp.c	FUNCTION_66	CALL_1
0x40080c2	          0x488b18	                    mov rbx, qword [rax]	      4390	ftp.c	FUNCTION_66	CALL_1
0x40080c5	    0x488b05000000	            mov rax, qword [0x040080cc] 	      4390	ftp.c	FUNCTION_66	CALL_1
0x40080cc	          0x488b00	                    mov rax, qword [rax]	      4390	ftp.c	FUNCTION_66	CALL_1
0x40080cf	      0xbf28000000	                           mov edi, 0x28	      4390	ftp.c	FUNCTION_66	CALL_1
0x40080d4	            0xffd0	                                call rax	      4390	ftp.c	FUNCTION_66	CALL_1
0x40080d6	        0x488945e8	             mov qword [rbp - 0x18], rax	      4390	ftp.c	FUNCTION_66	CALL_1
0x40080da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4390	ftp.c	FUNCTION_66	CALL_1
0x40080de	    0x488983e80100	            mov qword [rbx + 0x1e8], rax	      4390	ftp.c	FUNCTION_66	CALL_1
0x40080e5	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4391	ftp.c	FUNCTION_66	IF_1
0x40080ea	            0x750a	                           jne 0x40080f6	      4391	ftp.c	FUNCTION_66	IF_1
0x40080ec	      0xb81b000000	                           mov eax, 0x1b	      4392	ftp.c	FUNCTION_66	IF_1
0x40080f1	      0xe96b010000	                           jmp 0x4008261	      4392	ftp.c	FUNCTION_66	IF_1
0x40080f6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4394	ftp.c	FUNCTION_66
0x40080fa	    0x488b80985000	          mov rax, qword [rax + 0x5098] 	      4394	ftp.c	FUNCTION_66
0x4008101	        0x488d5001	                      lea rdx, [rax + 1]	      4394	ftp.c	FUNCTION_66
0x4008105	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4394	ftp.c	FUNCTION_66
0x4008109	    0x488990985000	          mov qword [rax + 0x5098], rdx 	      4394	ftp.c	FUNCTION_66
0x4008110	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4395	ftp.c	FUNCTION_66
0x4008114	    0xc680a0500000	              mov byte [rax + 0x50a0], 1	      4395	ftp.c	FUNCTION_66
0x400811b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4399	ftp.c	FUNCTION_66	CALL_2
0x400811f	    0x488b80985000	          mov rax, qword [rax + 0x5098] 	      4399	ftp.c	FUNCTION_66	CALL_2
0x4008126	    0x488d35000000	                   lea rsi, [0x0400812d]	      4399	ftp.c	FUNCTION_66	CALL_2
0x400812d	          0x4889c7	                            mov rdi, rax	      4399	ftp.c	FUNCTION_66	CALL_2
0x4008130	      0xe800000000	                          call 0x4008135	      4399	ftp.c	FUNCTION_66	CALL_2
0x4008135	        0x488945d8	             mov qword [rbp - 0x28], rax	      4399	ftp.c	FUNCTION_66	CALL_2
0x4008139	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4401	ftp.c	FUNCTION_66	IF_2
0x400813e	            0x751e	                           jne 0x400815e	      4401	ftp.c	FUNCTION_66	IF_2
0x4008140	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4402	ftp.c	FUNCTION_66	CALL_3
0x4008144	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	      4402	ftp.c	FUNCTION_66	CALL_3
0x400814b	    0x488d35000000	                   lea rsi, [0x04008152]	      4402	ftp.c	FUNCTION_66	CALL_3
0x4008152	          0x4889c7	                            mov rdi, rax	      4402	ftp.c	FUNCTION_66	CALL_3
0x4008155	      0xe800000000	                          call 0x400815a	      4402	ftp.c	FUNCTION_66	CALL_3
0x400815a	        0x488945d8	             mov qword [rbp - 0x28], rax	      4402	ftp.c	FUNCTION_66	CALL_3
0x400815e	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4404	ftp.c	FUNCTION_66	IF_3
0x4008163	            0x7460	                            je 0x40081c5	      4404	ftp.c	FUNCTION_66	IF_3
0x4008165	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4405	ftp.c	FUNCTION_66	IF_3
0x4008169	          0xc60000	                       mov byte [rax], 0	      4405	ftp.c	FUNCTION_66	IF_3
0x400816c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4406	ftp.c	FUNCTION_66	IF_3	CALL_4
0x4008170	        0x4883c006	                              add rax, 6	      4406	ftp.c	FUNCTION_66	IF_3	CALL_4
0x4008174	           0xfb600	                   movzx eax, byte [rax]	      4406	ftp.c	FUNCTION_66	IF_3	CALL_4
0x4008177	           0xfbec0	                           movsx eax, al	      4406	ftp.c	FUNCTION_66	IF_3	CALL_4
0x400817a	            0x89c7	                            mov edi, eax	      4406	ftp.c	FUNCTION_66	IF_3	CALL_4
0x400817c	      0xe800000000	                          call 0x4008181	      4406	ftp.c	FUNCTION_66	IF_3	CALL_4
0x4008181	          0x8845d7	               mov byte [rbp - 0x29], al	      4406	ftp.c	FUNCTION_66	IF_3	CALL_4
0x4008184	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4407	ftp.c	FUNCTION_66	IF_3
0x4008188	    0xc6806c030000	               mov byte [rax + 0x36c], 1	      4407	ftp.c	FUNCTION_66	IF_3
0x400818f	         0xfbe45d7	            movsx eax, byte [rbp - 0x29]	      4409	ftp.c	FUNCTION_66	IF_3	SWITCH_1
0x4008193	          0x83f841	                           cmp eax, 0x41	      4409	ftp.c	FUNCTION_66	IF_3	SWITCH_1
0x4008196	            0x7407	                            je 0x400819f	      4409	ftp.c	FUNCTION_66	IF_3	SWITCH_1
0x4008198	          0x83f844	                           cmp eax, 0x44	      4409	ftp.c	FUNCTION_66	IF_3	SWITCH_1
0x400819b	            0x740f	                            je 0x40081ac	      4409	ftp.c	FUNCTION_66	IF_3	SWITCH_1
0x400819d	            0xeb1a	                           jmp 0x40081b9	      4409	ftp.c	FUNCTION_66	IF_3	SWITCH_1
0x400819f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4411	ftp.c	FUNCTION_66	IF_3	SWITCH_1
0x40081a3	    0xc68094070000	               mov byte [rax + 0x794], 1	      4411	ftp.c	FUNCTION_66	IF_3	SWITCH_1
0x40081aa	            0xeb19	                           jmp 0x40081c5	      4412	ftp.c	FUNCTION_66	IF_3	SWITCH_1
0x40081ac	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4415	ftp.c	FUNCTION_66	IF_3	SWITCH_1
0x40081b0	    0xc68096070000	               mov byte [rax + 0x796], 1	      4415	ftp.c	FUNCTION_66	IF_3	SWITCH_1
0x40081b7	            0xeb0c	                           jmp 0x40081c5	      4416	ftp.c	FUNCTION_66	IF_3	SWITCH_1
0x40081b9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4421	ftp.c	FUNCTION_66	IF_3	SWITCH_1
0x40081bd	    0xc68094070000	               mov byte [rax + 0x794], 0	      4421	ftp.c	FUNCTION_66	IF_3	SWITCH_1
0x40081c4	              0x90	                                     nop	      4422	ftp.c	FUNCTION_66	IF_3	SWITCH_1
0x40081c5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4427	ftp.c	FUNCTION_66
0x40081c9	          0x488b00	                    mov rax, qword [rax]	      4427	ftp.c	FUNCTION_66
0x40081cc	    0x488d90e00000	                   lea rdx, [rax + 0xe0]	      4427	ftp.c	FUNCTION_66
0x40081d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4427	ftp.c	FUNCTION_66
0x40081d7	          0x488910	                    mov qword [rax], rdx	      4427	ftp.c	FUNCTION_66
0x40081da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4428	ftp.c	FUNCTION_66
0x40081de	    0xc74018000000	               mov dword [rax + 0x18], 0	      4428	ftp.c	FUNCTION_66
0x40081e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4429	ftp.c	FUNCTION_66
0x40081e9	    0x48c740200000	               mov qword [rax + 0x20], 0	      4429	ftp.c	FUNCTION_66
0x40081f1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4435	ftp.c	FUNCTION_66
0x40081f5	    0x488b90100200	           mov rdx, qword [rax + 0x210] 	      4435	ftp.c	FUNCTION_66
0x40081fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4435	ftp.c	FUNCTION_66
0x4008200	        0x48895008	                mov qword [rax + 8], rdx	      4435	ftp.c	FUNCTION_66
0x4008204	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4436	ftp.c	FUNCTION_66
0x4008208	    0x488b90180200	           mov rdx, qword [rax + 0x218] 	      4436	ftp.c	FUNCTION_66
0x400820f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4436	ftp.c	FUNCTION_66
0x4008213	        0x48895010	             mov qword [rax + 0x10], rdx	      4436	ftp.c	FUNCTION_66
0x4008217	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4437	ftp.c	FUNCTION_66	IF_4	CALL_5
0x400821b	        0x488b4008	                mov rax, qword [rax + 8]	      4437	ftp.c	FUNCTION_66	IF_4	CALL_5
0x400821f	          0x4889c7	                            mov rdi, rax	      4437	ftp.c	FUNCTION_66	IF_4	CALL_5
0x4008222	      0xe83c80ffff	                 call sym.isBadFtpString	      4437	ftp.c	FUNCTION_66	IF_4	CALL_5
0x4008227	            0x84c0	                             test al, al	      4437	ftp.c	FUNCTION_66	IF_4	CALL_5
0x4008229	            0x7407	                            je 0x4008232	      4437	ftp.c	FUNCTION_66	IF_4	CALL_5
0x400822b	      0xb803000000	                              mov eax, 3	      4438	ftp.c	FUNCTION_66	IF_4
0x4008230	            0xeb2f	                           jmp 0x4008261	      4438	ftp.c	FUNCTION_66	IF_4
0x4008232	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4439	ftp.c	FUNCTION_66	IF_5	CALL_6
0x4008236	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4439	ftp.c	FUNCTION_66	IF_5	CALL_6
0x400823a	          0x4889c7	                            mov rdi, rax	      4439	ftp.c	FUNCTION_66	IF_5	CALL_6
0x400823d	      0xe82180ffff	                 call sym.isBadFtpString	      4439	ftp.c	FUNCTION_66	IF_5	CALL_6
0x4008242	            0x84c0	                             test al, al	      4439	ftp.c	FUNCTION_66	IF_5	CALL_6
0x4008244	            0x7407	                            je 0x400824d	      4439	ftp.c	FUNCTION_66	IF_5	CALL_6
0x4008246	      0xb803000000	                              mov eax, 3	      4440	ftp.c	FUNCTION_66	IF_5
0x400824b	            0xeb14	                           jmp 0x4008261	      4440	ftp.c	FUNCTION_66	IF_5
0x400824d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4442	ftp.c	FUNCTION_66
0x4008251	    0x48c780880600	mov qword [rax + 0x688], 0xffffffffffffffff	      4442	ftp.c	FUNCTION_66
0x400825c	      0xb800000000	                              mov eax, 0	      4444	ftp.c	FUNCTION_66
0x4008261	        0x4883c438	                           add rsp, 0x38	      4445	ftp.c	FUNCTION_66
0x4008265	              0x5b	                                 pop rbx	      4445	ftp.c	FUNCTION_66
0x4008266	              0x5d	                                 pop rbp	      4445	ftp.c	FUNCTION_66
0x4008267	              0xc3	                                     ret	      4445	ftp.c	FUNCTION_66
wc_data_dtor	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,2:IF,1:WHILE,0	23
0x4006a9c	              0x55	                                push rbp	      3689	ftp.c	FUNCTION_55
0x4006a9d	          0x4889e5	                            mov rbp, rsp	      3689	ftp.c	FUNCTION_55
0x4006aa0	        0x4883ec20	                           sub rsp, 0x20	      3689	ftp.c	FUNCTION_55
0x4006aa4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3689	ftp.c	FUNCTION_55
0x4006aa8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3690	ftp.c	FUNCTION_55
0x4006aac	        0x488945f8	                mov qword [rbp - 8], rax	      3690	ftp.c	FUNCTION_55
0x4006ab0	      0x48837df800	                  cmp qword [rbp - 8], 0	      3691	ftp.c	FUNCTION_55	IF_1
0x4006ab5	            0x7418	                            je 0x4006acf	      3691	ftp.c	FUNCTION_55	IF_1
0x4006ab7	        0x488b45f8	                mov rax, qword [rbp - 8]	      3691	ftp.c	FUNCTION_55	IF_1
0x4006abb	          0x488b00	                    mov rax, qword [rax]	      3691	ftp.c	FUNCTION_55	IF_1
0x4006abe	          0x4885c0	                           test rax, rax	      3691	ftp.c	FUNCTION_55	IF_1
0x4006ac1	            0x740c	                            je 0x4006acf	      3691	ftp.c	FUNCTION_55	IF_1
0x4006ac3	        0x488b45f8	                mov rax, qword [rbp - 8]	      3692	ftp.c	FUNCTION_55	CALL_1
0x4006ac7	          0x4889c7	                            mov rdi, rax	      3692	ftp.c	FUNCTION_55	CALL_1
0x4006aca	      0xe800000000	                          call 0x4006acf	      3692	ftp.c	FUNCTION_55	CALL_1
0x4006acf	    0x488b05000000	            mov rax, qword [0x04006ad6] 	      3693	ftp.c	FUNCTION_55	CALL_2
0x4006ad6	          0x488b00	                    mov rax, qword [rax]	      3693	ftp.c	FUNCTION_55	CALL_2
0x4006ad9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3693	ftp.c	FUNCTION_55	CALL_2
0x4006add	          0x4889d7	                            mov rdi, rdx	      3693	ftp.c	FUNCTION_55	CALL_2
0x4006ae0	            0xffd0	                                call rax	      3693	ftp.c	FUNCTION_55	CALL_2
0x4006ae2	              0x90	                                     nop	      3694	ftp.c	FUNCTION_55
0x4006ae3	              0xc9	                                   leave	      3694	ftp.c	FUNCTION_55
0x4006ae4	              0xc3	                                     ret	      3694	ftp.c	FUNCTION_55
control_address	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,0:IF,1:WHILE,0	18
0x400303f	              0x55	                                push rbp	      1811	ftp.c	FUNCTION_31
0x4003040	          0x4889e5	                            mov rbp, rsp	      1811	ftp.c	FUNCTION_31
0x4003043	        0x48897df8	                mov qword [rbp - 8], rdi	      1811	ftp.c	FUNCTION_31
0x4003047	        0x488b45f8	                mov rax, qword [rbp - 8]	      1816	ftp.c	FUNCTION_31	IF_1
0x400304b	     0xfb680610300	          movzx eax, byte [rax + 0x361] 	      1816	ftp.c	FUNCTION_31	IF_1
0x4003052	            0x84c0	                             test al, al	      1816	ftp.c	FUNCTION_31	IF_1
0x4003054	            0x750f	                           jne 0x4003065	      1816	ftp.c	FUNCTION_31	IF_1
0x4003056	        0x488b45f8	                mov rax, qword [rbp - 8]	      1816	ftp.c	FUNCTION_31	IF_1
0x400305a	     0xfb680570300	          movzx eax, byte [rax + 0x357] 	      1816	ftp.c	FUNCTION_31	IF_1
0x4003061	            0x84c0	                             test al, al	      1816	ftp.c	FUNCTION_31	IF_1
0x4003063	            0x740d	                            je 0x4003072	      1816	ftp.c	FUNCTION_31	IF_1
0x4003065	        0x488b45f8	                mov rax, qword [rbp - 8]	      1817	ftp.c	FUNCTION_31	IF_1
0x4003069	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	      1817	ftp.c	FUNCTION_31	IF_1
0x4003070	            0xeb0a	                           jmp 0x400307c	      1817	ftp.c	FUNCTION_31	IF_1
0x4003072	        0x488b45f8	                mov rax, qword [rbp - 8]	      1819	ftp.c	FUNCTION_31
0x4003076	    0x480590000000	                           add rax, 0x90	      1819	ftp.c	FUNCTION_31
0x400307c	              0x5d	                                 pop rbp	      1820	ftp.c	FUNCTION_31
0x400307d	              0xc3	                                     ret	      1820	ftp.c	FUNCTION_31
Curl_GetFTPResponse	DO,0:FOR,0:functions,0:ELSE,3:SWITCH,1:CALL,7:IF,8:WHILE,1	137
0x4000b6f	              0x55	                                push rbp	       631	ftp.c	FUNCTION_11
0x4000b70	          0x4889e5	                            mov rbp, rsp	       631	ftp.c	FUNCTION_11
0x4000b73	        0x4883ec70	                           sub rsp, 0x70	       631	ftp.c	FUNCTION_11
0x4000b77	        0x48897da8	             mov qword [rbp - 0x58], rdi	       631	ftp.c	FUNCTION_11
0x4000b7b	        0x488975a0	             mov qword [rbp - 0x60], rsi	       631	ftp.c	FUNCTION_11
0x4000b7f	        0x48895598	             mov qword [rbp - 0x68], rdx	       631	ftp.c	FUNCTION_11
0x4000b83	    0x64488b042528	                mov rax, qword fs:[0x28]	       631	ftp.c	FUNCTION_11
0x4000b8c	        0x488945f8	                mov qword [rbp - 8], rax	       631	ftp.c	FUNCTION_11
0x4000b90	            0x31c0	                            xor eax, eax	       631	ftp.c	FUNCTION_11
0x4000b92	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       639	ftp.c	FUNCTION_11
0x4000b96	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	       639	ftp.c	FUNCTION_11
0x4000b9c	          0x8945c4	             mov dword [rbp - 0x3c], eax	       639	ftp.c	FUNCTION_11
0x4000b9f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       642	ftp.c	FUNCTION_11
0x4000ba3	          0x488b00	                    mov rax, qword [rax]	       642	ftp.c	FUNCTION_11
0x4000ba6	        0x488945d8	             mov qword [rbp - 0x28], rax	       642	ftp.c	FUNCTION_11
0x4000baa	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       643	ftp.c	FUNCTION_11
0x4000bb1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       644	ftp.c	FUNCTION_11
0x4000bb5	    0x4805b0050000	                          add rax, 0x5b0	       644	ftp.c	FUNCTION_11
0x4000bbb	        0x488945e0	             mov qword [rbp - 0x20], rax	       644	ftp.c	FUNCTION_11
0x4000bbf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       645	ftp.c	FUNCTION_11
0x4000bc3	        0x488945e8	             mov qword [rbp - 0x18], rax	       645	ftp.c	FUNCTION_11
0x4000bc7	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       647	ftp.c	FUNCTION_11
0x4000bce	    0xc745b8000000	               mov dword [rbp - 0x48], 0	       648	ftp.c	FUNCTION_11
0x4000bd5	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       650	ftp.c	FUNCTION_11	IF_1
0x4000bda	            0x740c	                            je 0x4000be8	       650	ftp.c	FUNCTION_11	IF_1
0x4000bdc	        0x488b4598	             mov rax, qword [rbp - 0x68]	       651	ftp.c	FUNCTION_11	IF_1
0x4000be0	    0xc70000000000	                      mov dword [rax], 0	       651	ftp.c	FUNCTION_11	IF_1
0x4000be6	            0xeb08	                           jmp 0x4000bf0	       651	ftp.c	FUNCTION_11	IF_1
0x4000be8	        0x488d45b8	                   lea rax, [rbp - 0x48]	       654	ftp.c	FUNCTION_11	ELSE_1
0x4000bec	        0x48894598	             mov qword [rbp - 0x68], rax	       654	ftp.c	FUNCTION_11	ELSE_1
0x4000bf0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       656	ftp.c	FUNCTION_11	ELSE_1
0x4000bf4	    0x48c700000000	                      mov qword [rax], 0	       656	ftp.c	FUNCTION_11	ELSE_1
0x4000bfb	      0xe93f010000	                           jmp 0x4000d3f	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000c00	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       660	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_1
0x4000c04	          0x4889c7	                            mov rdi, rax	       660	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_1
0x4000c07	      0xe800000000	                          call 0x4000c0c	       660	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_1
0x4000c0c	        0x488945f0	             mov qword [rbp - 0x10], rax	       660	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_1
0x4000c10	      0x48837df000	               cmp qword [rbp - 0x10], 0	       662	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2
0x4000c15	            0x7f22	                            jg 0x4000c39	       662	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2
0x4000c17	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       663	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2	CALL_2
0x4000c1b	    0x488d35000000	                   lea rsi, [0x04000c22]	       663	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2	CALL_2
0x4000c22	          0x4889c7	                            mov rdi, rax	       663	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2	CALL_2
0x4000c25	      0xb800000000	                              mov eax, 0	       663	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2	CALL_2
0x4000c2a	      0xe800000000	                          call 0x4000c2f	       663	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2	CALL_2
0x4000c2f	      0xb81c000000	                           mov eax, 0x1c	       664	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2
0x4000c34	      0xe928010000	                           jmp 0x4000d61	       664	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2
0x4000c39	    0x48c745d0e803	          mov qword [rbp - 0x30], 0x3e8 	       667	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000c41	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       668	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3
0x4000c45	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       668	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3
0x4000c49	            0x7d08	                           jge 0x4000c53	       668	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3
0x4000c4b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       669	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3
0x4000c4f	        0x488945d0	             mov qword [rbp - 0x30], rax	       669	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3
0x4000c53	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       685	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_4
0x4000c57	          0x488b00	                    mov rax, qword [rax]	       685	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_4
0x4000c5a	          0x4885c0	                           test rax, rax	       685	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_4
0x4000c5d	            0x7406	                            je 0x4000c65	       685	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_4
0x4000c5f	        0x837dc001	               cmp dword [rbp - 0x40], 1	       685	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_4
0x4000c63	            0x7e7e	                           jle 0x4000ce3	       685	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_4
0x4000c65	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       693	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	CALL_3
0x4000c69	      0xbe00000000	                              mov esi, 0	       693	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	CALL_3
0x4000c6e	          0x4889c7	                            mov rdi, rax	       693	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	CALL_3
0x4000c71	      0xe800000000	                          call 0x4000c76	       693	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	CALL_3
0x4000c76	          0x83f001	                              xor eax, 1	       693	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	CALL_3
0x4000c79	            0x84c0	                             test al, al	       693	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	CALL_3
0x4000c7b	            0x7466	                            je 0x4000ce3	       693	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	CALL_3
0x4000c7d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4000c81	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4000c84	          0x4889d1	                            mov rcx, rdx	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4000c87	      0xbaffffffff	                     mov edx, 0xffffffff	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4000c8c	      0xbeffffffff	                     mov esi, 0xffffffff	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4000c91	            0x89c7	                            mov edi, eax	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4000c93	      0xe800000000	                          call 0x4000c98	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4000c98	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4000c9b	            0x7406	                            je 0x4000ca3	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4000c9d	            0x85c0	                           test eax, eax	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4000c9f	            0x742b	                            je 0x4000ccc	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4000ca1	            0xeb40	                           jmp 0x4000ce3	       706	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1
0x4000ca3	      0xe800000000	                          call 0x4000ca8	       697	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1
0x4000ca8	            0x8b10	                    mov edx, dword [rax]	       696	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_5
0x4000caa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       696	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_5
0x4000cae	    0x488d35000000	                   lea rsi, [0x04000cb5]	       696	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_5
0x4000cb5	          0x4889c7	                            mov rdi, rax	       696	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_5
0x4000cb8	      0xb800000000	                              mov eax, 0	       696	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_5
0x4000cbd	      0xe800000000	                          call 0x4000cc2	       696	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_5
0x4000cc2	      0xb838000000	                           mov eax, 0x38	       698	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1
0x4000cc7	      0xe995000000	                           jmp 0x4000d61	       698	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1
0x4000ccc	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       701	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	IF_6	CALL_6
0x4000cd0	          0x4889c7	                            mov rdi, rax	       701	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	IF_6	CALL_6
0x4000cd3	      0xe800000000	                          call 0x4000cd8	       701	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	IF_6	CALL_6
0x4000cd8	            0x85c0	                           test eax, eax	       701	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	IF_6	CALL_6
0x4000cda	            0x7463	                            je 0x4000d3f	       701	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	IF_6	CALL_6
0x4000cdc	      0xb82a000000	                           mov eax, 0x2a	       702	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	IF_6
0x4000ce1	            0xeb7e	                           jmp 0x4000d61	       702	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	IF_6
0x4000ce3	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	       709	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_7
0x4000ce7	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       709	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_7
0x4000ceb	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       709	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_7
0x4000cef	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       709	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_7
0x4000cf2	            0x89c7	                            mov edi, eax	       709	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_7
0x4000cf4	      0xe8a9fdffff	                   call sym.ftp_readresp	       709	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_7
0x4000cf9	          0x8945bc	             mov dword [rbp - 0x44], eax	       709	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_7
0x4000cfc	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       710	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_7
0x4000d00	            0x7553	                           jne 0x4000d55	       710	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_7
0x4000d02	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       713	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4000d06	          0x4885c0	                           test rax, rax	       713	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4000d09	            0x7512	                           jne 0x4000d1d	       713	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4000d0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       713	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4000d0f	          0x488b00	                    mov rax, qword [rax]	       713	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4000d12	          0x4885c0	                           test rax, rax	       713	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4000d15	            0x7406	                            je 0x4000d1d	       713	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4000d17	        0x8345c001	               add dword [rbp - 0x40], 1	       716	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4000d1b	            0xeb07	                           jmp 0x4000d24	       716	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4000d1d	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       720	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_3
0x4000d24	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       722	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_3
0x4000d28	          0x488b00	                    mov rax, qword [rax]	       722	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_3
0x4000d2b	          0x4889c2	                            mov rdx, rax	       722	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_3
0x4000d2e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       722	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_3
0x4000d32	          0x4801d0	                            add rax, rdx	       722	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_3
0x4000d35	          0x4889c2	                            mov rdx, rax	       722	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_3
0x4000d38	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       722	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_3
0x4000d3c	          0x488910	                    mov qword [rax], rdx	       722	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_3
0x4000d3f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000d43	            0x8b00	                    mov eax, dword [rax]	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000d45	            0x85c0	                           test eax, eax	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000d47	            0x750d	                           jne 0x4000d56	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000d49	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000d4d	     0xf84adfeffff	                            je 0x4000c00	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000d53	            0xeb01	                           jmp 0x4000d56	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000d55	              0x90	                                     nop	       711	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_7
0x4000d56	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       726	ftp.c	FUNCTION_11	ELSE_3
0x4000d5a	        0xc6402000	                mov byte [rax + 0x20], 0	       726	ftp.c	FUNCTION_11	ELSE_3
0x4000d5e	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       728	ftp.c	FUNCTION_11	ELSE_3
0x4000d61	        0x488b4df8	                mov rcx, qword [rbp - 8]	       729	ftp.c	FUNCTION_11	ELSE_3
0x4000d65	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       729	ftp.c	FUNCTION_11	ELSE_3
0x4000d6e	            0x7405	                            je 0x4000d75	       729	ftp.c	FUNCTION_11	ELSE_3
0x4000d70	      0xe800000000	                          call 0x4000d75	       729	ftp.c	FUNCTION_11	ELSE_3
0x4000d75	              0xc9	                                   leave	       729	ftp.c	FUNCTION_11	ELSE_3
0x4000d76	              0xc3	                                     ret	       729	ftp.c	FUNCTION_11	ELSE_3
ftp_dophase_done	DO,0:FOR,0:functions,0:ELSE,1:SWITCH,0:CALL,3:IF,4:WHILE,0	62
0x4007e45	              0x55	                                push rbp	      4291	ftp.c	FUNCTION_63
0x4007e46	          0x4889e5	                            mov rbp, rsp	      4291	ftp.c	FUNCTION_63
0x4007e49	        0x4883ec30	                           sub rsp, 0x30	      4291	ftp.c	FUNCTION_63
0x4007e4d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4291	ftp.c	FUNCTION_63
0x4007e51	            0x89f0	                            mov eax, esi	      4291	ftp.c	FUNCTION_63
0x4007e53	          0x8845d4	               mov byte [rbp - 0x2c], al	      4291	ftp.c	FUNCTION_63
0x4007e56	    0x64488b042528	                mov rax, qword fs:[0x28]	      4291	ftp.c	FUNCTION_63
0x4007e5f	        0x488945f8	                mov qword [rbp - 8], rax	      4291	ftp.c	FUNCTION_63
0x4007e63	            0x31c0	                            xor eax, eax	      4291	ftp.c	FUNCTION_63
0x4007e65	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4292	ftp.c	FUNCTION_63
0x4007e69	          0x488b00	                    mov rax, qword [rax]	      4292	ftp.c	FUNCTION_63
0x4007e6c	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      4292	ftp.c	FUNCTION_63
0x4007e73	        0x488945e8	             mov qword [rbp - 0x18], rax	      4292	ftp.c	FUNCTION_63
0x4007e77	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4293	ftp.c	FUNCTION_63
0x4007e7b	    0x4805b0050000	                          add rax, 0x5b0	      4293	ftp.c	FUNCTION_63
0x4007e81	        0x488945f0	             mov qword [rbp - 0x10], rax	      4293	ftp.c	FUNCTION_63
0x4007e85	        0x807dd400	                cmp byte [rbp - 0x2c], 0	      4295	ftp.c	FUNCTION_63	IF_1
0x4007e89	            0x742d	                            je 0x4007eb8	      4295	ftp.c	FUNCTION_63	IF_1
0x4007e8b	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      4297	ftp.c	FUNCTION_63	IF_1	CALL_1
0x4007e8f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4297	ftp.c	FUNCTION_63	IF_1	CALL_1
0x4007e93	          0x4889d6	                            mov rsi, rdx	      4297	ftp.c	FUNCTION_63	IF_1	CALL_1
0x4007e96	          0x4889c7	                            mov rdi, rax	      4297	ftp.c	FUNCTION_63	IF_1	CALL_1
0x4007e99	      0xe8c7e6ffff	                    call sym.ftp_do_more	      4297	ftp.c	FUNCTION_63	IF_1	CALL_1
0x4007e9e	          0x8945e4	             mov dword [rbp - 0x1c], eax	      4297	ftp.c	FUNCTION_63	IF_1	CALL_1
0x4007ea1	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4299	ftp.c	FUNCTION_63	IF_1	IF_2
0x4007ea5	            0x7411	                            je 0x4007eb8	      4299	ftp.c	FUNCTION_63	IF_1	IF_2
0x4007ea7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4300	ftp.c	FUNCTION_63	IF_1	IF_2	CALL_2
0x4007eab	          0x4889c7	                            mov rdi, rax	      4300	ftp.c	FUNCTION_63	IF_1	IF_2	CALL_2
0x4007eae	      0xe85f82ffff	          call sym.close_secondarysocket	      4300	ftp.c	FUNCTION_63	IF_1	IF_2	CALL_2
0x4007eb3	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4301	ftp.c	FUNCTION_63	IF_1	IF_2
0x4007eb6	            0xeb66	                           jmp 0x4007f1e	      4301	ftp.c	FUNCTION_63	IF_1	IF_2
0x4007eb8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4305	ftp.c	FUNCTION_63	IF_3
0x4007ebc	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4305	ftp.c	FUNCTION_63	IF_3
0x4007ebf	            0x85c0	                           test eax, eax	      4305	ftp.c	FUNCTION_63	IF_3
0x4007ec1	            0x7435	                            je 0x4007ef8	      4305	ftp.c	FUNCTION_63	IF_3
0x4007ec3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4307	ftp.c	FUNCTION_63	CALL_3
0x4007ec7	        0x4883ec08	                              sub rsp, 8	      4307	ftp.c	FUNCTION_63	CALL_3
0x4007ecb	            0x6a00	                                  push 0	      4307	ftp.c	FUNCTION_63	CALL_3
0x4007ecd	    0x41b9ffffffff	                     mov r9d, 0xffffffff	      4307	ftp.c	FUNCTION_63	CALL_3
0x4007ed3	    0x41b800000000	                              mov r8d, 0	      4307	ftp.c	FUNCTION_63	CALL_3
0x4007ed9	      0xb900000000	                              mov ecx, 0	      4307	ftp.c	FUNCTION_63	CALL_3
0x4007ede	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      4307	ftp.c	FUNCTION_63	CALL_3
0x4007ee5	      0xbeffffffff	                     mov esi, 0xffffffff	      4307	ftp.c	FUNCTION_63	CALL_3
0x4007eea	          0x4889c7	                            mov rdi, rax	      4307	ftp.c	FUNCTION_63	CALL_3
0x4007eed	      0xe800000000	                          call 0x4007ef2	      4307	ftp.c	FUNCTION_63	CALL_3
0x4007ef2	        0x4883c410	                           add rsp, 0x10	      4307	ftp.c	FUNCTION_63	CALL_3
0x4007ef6	            0xeb16	                           jmp 0x4007f0e	      4307	ftp.c	FUNCTION_63	CALL_3
0x4007ef8	         0xfb645d4	            movzx eax, byte [rbp - 0x2c]	      4308	ftp.c	FUNCTION_63	ELSE_1	IF_4
0x4007efc	          0x83f001	                              xor eax, 1	      4308	ftp.c	FUNCTION_63	ELSE_1	IF_4
0x4007eff	            0x84c0	                             test al, al	      4308	ftp.c	FUNCTION_63	ELSE_1	IF_4
0x4007f01	            0x740b	                            je 0x4007f0e	      4308	ftp.c	FUNCTION_63	ELSE_1	IF_4
0x4007f03	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4310	ftp.c	FUNCTION_63	ELSE_1	IF_4
0x4007f07	    0xc6805c030000	               mov byte [rax + 0x35c], 1	      4310	ftp.c	FUNCTION_63	ELSE_1	IF_4
0x4007f0e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4312	ftp.c	FUNCTION_63
0x4007f12	    0xc68091000000	                mov byte [rax + 0x91], 1	      4312	ftp.c	FUNCTION_63
0x4007f19	      0xb800000000	                              mov eax, 0	      4314	ftp.c	FUNCTION_63
0x4007f1e	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4315	ftp.c	FUNCTION_63
0x4007f22	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4315	ftp.c	FUNCTION_63
0x4007f2b	            0x7405	                            je 0x4007f32	      4315	ftp.c	FUNCTION_63
0x4007f2d	      0xe800000000	                          call 0x4007f32	      4315	ftp.c	FUNCTION_63
0x4007f32	              0xc9	                                   leave	      4315	ftp.c	FUNCTION_63
0x4007f33	              0xc3	                                     ret	      4315	ftp.c	FUNCTION_63
ftp_state_mdtm_resp	DO,0:FOR,0:functions,0:ELSE,1:SWITCH,2:CALL,15:IF,9:WHILE,0	250
0x40038b6	              0x55	                                push rbp	      2046	ftp.c	FUNCTION_34
0x40038b7	          0x4889e5	                            mov rbp, rsp	      2046	ftp.c	FUNCTION_34
0x40038ba	    0x4881ec300100	                          sub rsp, 0x130	      2046	ftp.c	FUNCTION_34
0x40038c1	    0x4889bdd8feff	            mov qword [rbp - 0x128], rdi	      2046	ftp.c	FUNCTION_34
0x40038c8	    0x89b5d4feffff	            mov dword [rbp - 0x12c], esi	      2046	ftp.c	FUNCTION_34
0x40038ce	    0x64488b042528	                mov rax, qword fs:[0x28]	      2046	ftp.c	FUNCTION_34
0x40038d7	        0x488945f8	                mov qword [rbp - 8], rax	      2046	ftp.c	FUNCTION_34
0x40038db	            0x31c0	                            xor eax, eax	      2046	ftp.c	FUNCTION_34
0x40038dd	    0xc78504ffffff	               mov dword [rbp - 0xfc], 0	      2047	ftp.c	FUNCTION_34
0x40038e7	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2048	ftp.c	FUNCTION_34
0x40038ee	          0x488b00	                    mov rax, qword [rax]	      2048	ftp.c	FUNCTION_34
0x40038f1	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	      2048	ftp.c	FUNCTION_34
0x40038f8	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2049	ftp.c	FUNCTION_34
0x40038ff	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      2049	ftp.c	FUNCTION_34
0x4003906	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      2049	ftp.c	FUNCTION_34
0x400390d	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2050	ftp.c	FUNCTION_34
0x4003914	    0x4805b0050000	                          add rax, 0x5b0	      2050	ftp.c	FUNCTION_34
0x400391a	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      2050	ftp.c	FUNCTION_34
0x4003921	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      2052	ftp.c	FUNCTION_34	SWITCH_1
0x4003927	      0x3dd5000000	                           cmp eax, 0xd5	      2052	ftp.c	FUNCTION_34	SWITCH_1
0x400392c	            0x7410	                            je 0x400393e	      2052	ftp.c	FUNCTION_34	SWITCH_1
0x400392e	      0x3d26020000	                          cmp eax, 0x226	      2052	ftp.c	FUNCTION_34	SWITCH_1
0x4003933	     0xf84af020000	                            je 0x4003be8	      2052	ftp.c	FUNCTION_34	SWITCH_1
0x4003939	      0xe98d020000	                           jmp 0x4003bcb	      2052	ftp.c	FUNCTION_34	SWITCH_1
0x400393e	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003945	    0x488b80a80c00	           mov rax, qword [rax + 0xca8] 	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x400394c	        0x488d7804	                      lea rdi, [rax + 4]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003950	    0x4c8d85f8feff	                   lea r8, [rbp - 0x108]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003957	    0x488db5f4feff	                  lea rsi, [rbp - 0x10c]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x400395e	    0x488d95f0feff	                  lea rdx, [rbp - 0x110]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003965	    0x488d85ecfeff	                  lea rax, [rbp - 0x114]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x400396c	    0x488d8d00ffff	                  lea rcx, [rbp - 0x100]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003973	              0x51	                                push rcx	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003974	    0x488d8dfcfeff	                  lea rcx, [rbp - 0x104]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x400397b	              0x51	                                push rcx	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x400397c	          0x4d89c1	                              mov r9, r8	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x400397f	          0x4989f0	                             mov r8, rsi	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003982	          0x4889d1	                            mov rcx, rdx	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003985	          0x4889c2	                            mov rdx, rax	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003988	    0x488d35000000	                   lea rsi, [0x0400398f]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x400398f	      0xb800000000	                              mov eax, 0	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003994	      0xe800000000	                          call 0x4003999	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003999	        0x4883c410	                           add rsp, 0x10	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x400399d	          0x83f806	                              cmp eax, 6	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x40039a0	     0xf858e000000	                           jne 0x4003a34	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x40039a6	      0xbf00000000	                              mov edi, 0	      2062	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_2
0x40039ab	      0xe800000000	                          call 0x40039b0	      2062	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_2
0x40039b0	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      2062	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_2
0x40039b7	    0x8bbd00ffffff	            mov edi, dword [rbp - 0x100]	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039bd	    0x8bb5fcfeffff	            mov esi, dword [rbp - 0x104]	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039c3	    0x8b8df8feffff	            mov ecx, dword [rbp - 0x108]	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039c9	    0x448b8df4feff	            mov r9d, dword [rbp - 0x10c]	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039d0	    0x448b85f0feff	            mov r8d, dword [rbp - 0x110]	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039d7	    0x8b95ecfeffff	            mov edx, dword [rbp - 0x114]	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039dd	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039e4	        0x4883ec08	                              sub rsp, 8	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039e8	              0x57	                                push rdi	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039e9	              0x56	                                push rsi	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039ea	              0x51	                                push rcx	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039eb	            0x89d1	                            mov ecx, edx	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039ed	    0x488d15000000	                   lea rdx, [0x040039f4]	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039f4	      0xbe18000000	                           mov esi, 0x18	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039f9	          0x4889c7	                            mov rdi, rax	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039fc	      0xb800000000	                              mov eax, 0	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x4003a01	      0xe800000000	                          call 0x4003a06	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x4003a06	        0x4883c420	                           add rsp, 0x20	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x4003a0a	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	      2068	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_4
0x4003a11	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      2068	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_4
0x4003a18	          0x4889d6	                            mov rsi, rdx	      2068	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_4
0x4003a1b	          0x4889c7	                            mov rdi, rax	      2068	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_4
0x4003a1e	      0xe800000000	                          call 0x4003a23	      2068	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_4
0x4003a23	          0x4889c2	                            mov rdx, rax	      2068	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_4
0x4003a26	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2068	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_4
0x4003a2d	    0x488990685100	          mov qword [rax + 0x5168], rdx 	      2068	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_4
0x4003a34	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2075	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a3b	     0xfb680a10700	          movzx eax, byte [rax + 0x7a1] 	      2075	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a42	            0x84c0	                             test al, al	      2075	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a44	     0xf84c5010000	                            je 0x4003c0f	      2075	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a4a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2076	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a51	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2076	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a58	          0x4885c0	                           test rax, rax	      2075	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a5b	     0xf84ae010000	                            je 0x4003c0f	      2075	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a61	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2077	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a68	     0xfb680920700	          movzx eax, byte [rax + 0x792] 	      2077	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a6f	            0x84c0	                             test al, al	      2076	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a71	     0xf8498010000	                            je 0x4003c0f	      2076	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a77	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2078	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a7e	    0x488b80685100	          mov rax, qword [rax + 0x5168] 	      2078	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a85	          0x4885c0	                           test rax, rax	      2077	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a88	     0xf8881010000	                            js 0x4003c0f	      2077	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a8e	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2080	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a95	    0x488b80685100	          mov rax, qword [rax + 0x5168] 	      2080	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a9c	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      2080	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003aa3	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	      2082	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003aaa	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2082	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003ab1	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	      2084	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_5
0x4003ab8	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2084	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_5
0x4003abf	          0x4889d6	                            mov rsi, rdx	      2084	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_5
0x4003ac2	          0x4889c7	                            mov rdi, rax	      2084	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_5
0x4003ac5	      0xe800000000	                          call 0x4003aca	      2084	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_5
0x4003aca	    0x898504ffffff	             mov dword [rbp - 0xfc], eax	      2084	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_5
0x4003ad0	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      2085	ftp.c	FUNCTION_34	SWITCH_1	IF_2	IF_3
0x4003ad7	            0x740b	                            je 0x4003ae4	      2085	ftp.c	FUNCTION_34	SWITCH_1	IF_2	IF_3
0x4003ad9	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      2086	ftp.c	FUNCTION_34	SWITCH_1	IF_2	IF_3
0x4003adf	      0xe9b3020000	                           jmp 0x4003d97	      2086	ftp.c	FUNCTION_34	SWITCH_1	IF_2	IF_3
0x4003ae4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003aeb	            0x8b38	                    mov edi, dword [rax]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003aed	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003af4	          0x8b7004	                mov esi, dword [rax + 4]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003af7	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003afe	          0x8b4808	                mov ecx, dword [rax + 8]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b01	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2094	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b08	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2094	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b0b	    0x448d906c0700	                 lea r10d, [rax + 0x76c]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b12	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2093	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b19	          0x8b5010	            mov edx, dword [rax + 0x10] 	      2093	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b1c	    0x488b05000000	            mov rax, qword [0x04003b23] 	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b23	          0x4863d2	                         movsxd rdx, edx	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b26	        0x4c8b0cd0	             mov r9, qword [rax + rdx*8]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b2a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b31	        0x448b400c	              mov r8d, dword [rax + 0xc]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b35	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2091	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b3c	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2091	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b3f	            0x85c0	                           test eax, eax	      2091	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b41	            0x740f	                            je 0x4003b52	      2091	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b43	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2091	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b4a	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2091	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b4d	          0x8d50ff	                      lea edx, [rax - 1]	      2091	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b50	            0xeb05	                           jmp 0x4003b57	      2091	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b52	      0xba06000000	                              mov edx, 6	      2091	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b57	    0x488b05000000	            mov rax, qword [0x04003b5e] 	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b5e	          0x4863d2	                         movsxd rdx, edx	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b61	        0x488b14d0	            mov rdx, qword [rax + rdx*8]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b65	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b6c	              0x57	                                push rdi	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b6d	              0x56	                                push rsi	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b6e	              0x51	                                push rcx	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b6f	            0x4152	                                push r10	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b71	          0x4889d1	                            mov rcx, rdx	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b74	    0x488d15000000	                   lea rdx, [0x04003b7b]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b7b	      0xbe80000000	                           mov esi, 0x80	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b80	          0x4889c7	                            mov rdi, rax	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b83	      0xb800000000	                              mov eax, 0	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b88	      0xe800000000	                          call 0x4003b8d	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b8d	        0x4883c420	                           add rsp, 0x20	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b91	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      2098	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_7
0x4003b98	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2098	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_7
0x4003b9f	      0xb900000000	                              mov ecx, 0	      2098	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_7
0x4003ba4	      0xbe03000000	                              mov esi, 3	      2098	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_7
0x4003ba9	          0x4889c7	                            mov rdi, rax	      2098	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_7
0x4003bac	      0xe800000000	                          call 0x4003bb1	      2098	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_7
0x4003bb1	    0x898504ffffff	             mov dword [rbp - 0xfc], eax	      2098	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_7
0x4003bb7	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      2099	ftp.c	FUNCTION_34	SWITCH_1	IF_2	IF_4
0x4003bbe	            0x744f	                            je 0x4003c0f	      2099	ftp.c	FUNCTION_34	SWITCH_1	IF_2	IF_4
0x4003bc0	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      2100	ftp.c	FUNCTION_34	SWITCH_1	IF_2	IF_4
0x4003bc6	      0xe9cc010000	                           jmp 0x4003d97	      2100	ftp.c	FUNCTION_34	SWITCH_1	IF_2	IF_4
0x4003bcb	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2106	ftp.c	FUNCTION_34	SWITCH_1	CALL_8
0x4003bd2	    0x488d35000000	                   lea rsi, [0x04003bd9]	      2106	ftp.c	FUNCTION_34	SWITCH_1	CALL_8
0x4003bd9	          0x4889c7	                            mov rdi, rax	      2106	ftp.c	FUNCTION_34	SWITCH_1	CALL_8
0x4003bdc	      0xb800000000	                              mov eax, 0	      2106	ftp.c	FUNCTION_34	SWITCH_1	CALL_8
0x4003be1	      0xe800000000	                          call 0x4003be6	      2106	ftp.c	FUNCTION_34	SWITCH_1	CALL_8
0x4003be6	            0xeb28	                           jmp 0x4003c10	      2107	ftp.c	FUNCTION_34	SWITCH_1
0x4003be8	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2109	ftp.c	FUNCTION_34	SWITCH_1	CALL_9
0x4003bef	    0x488d35000000	                   lea rsi, [0x04003bf6]	      2109	ftp.c	FUNCTION_34	SWITCH_1	CALL_9
0x4003bf6	          0x4889c7	                            mov rdi, rax	      2109	ftp.c	FUNCTION_34	SWITCH_1	CALL_9
0x4003bf9	      0xb800000000	                              mov eax, 0	      2109	ftp.c	FUNCTION_34	SWITCH_1	CALL_9
0x4003bfe	      0xe800000000	                          call 0x4003c03	      2109	ftp.c	FUNCTION_34	SWITCH_1	CALL_9
0x4003c03	    0xc78504ffffff	           mov dword [rbp - 0xfc], 0x13 	      2110	ftp.c	FUNCTION_34	SWITCH_1
0x4003c0d	            0xeb01	                           jmp 0x4003c10	      2111	ftp.c	FUNCTION_34	SWITCH_1
0x4003c0f	              0x90	                                     nop	      2104	ftp.c	FUNCTION_34	SWITCH_1
0x4003c10	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2114	ftp.c	FUNCTION_34	IF_5
0x4003c17	    0x8b80c0050000	           mov eax, dword [rax + 0x5c0] 	      2114	ftp.c	FUNCTION_34	IF_5
0x4003c1d	            0x85c0	                           test eax, eax	      2114	ftp.c	FUNCTION_34	IF_5
0x4003c1f	     0xf844e010000	                            je 0x4003d73	      2114	ftp.c	FUNCTION_34	IF_5
0x4003c25	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2115	ftp.c	FUNCTION_34	IF_5	IF_6
0x4003c2c	    0x488b80685100	          mov rax, qword [rax + 0x5168] 	      2115	ftp.c	FUNCTION_34	IF_5	IF_6
0x4003c33	          0x4885c0	                           test rax, rax	      2115	ftp.c	FUNCTION_34	IF_5	IF_6
0x4003c36	     0xf8e1c010000	                           jle 0x4003d58	      2115	ftp.c	FUNCTION_34	IF_5	IF_6
0x4003c3c	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2115	ftp.c	FUNCTION_34	IF_5	IF_6
0x4003c43	    0x488b80c80500	           mov rax, qword [rax + 0x5c8] 	      2115	ftp.c	FUNCTION_34	IF_5	IF_6
0x4003c4a	          0x4885c0	                           test rax, rax	      2115	ftp.c	FUNCTION_34	IF_5	IF_6
0x4003c4d	     0xf8e05010000	                           jle 0x4003d58	      2115	ftp.c	FUNCTION_34	IF_5	IF_6
0x4003c53	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2116	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2
0x4003c5a	    0x8b80c0050000	           mov eax, dword [rax + 0x5c0] 	      2116	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2
0x4003c60	          0x83f802	                              cmp eax, 2	      2116	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2
0x4003c63	            0x747a	                            je 0x4003cdf	      2116	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2
0x4003c65	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2119	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003c6c	    0x488b90685100	          mov rdx, qword [rax + 0x5168] 	      2119	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003c73	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2119	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003c7a	    0x488b80c80500	           mov rax, qword [rax + 0x5c8] 	      2119	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003c81	          0x4839c2	                            cmp rdx, rax	      2119	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003c84	     0xf8fc8000000	                            jg 0x4003d52	      2119	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003c8a	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2120	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7	CALL_10
0x4003c91	    0x488d35000000	                   lea rsi, [0x04003c98]	      2120	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7	CALL_10
0x4003c98	          0x4889c7	                            mov rdi, rax	      2120	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7	CALL_10
0x4003c9b	      0xb800000000	                              mov eax, 0	      2120	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7	CALL_10
0x4003ca0	      0xe800000000	                          call 0x4003ca5	      2120	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7	CALL_10
0x4003ca5	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2121	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003cac	    0xc74018020000	               mov dword [rax + 0x18], 2	      2121	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003cb3	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2122	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003cba	    0xc68070510000	              mov byte [rax + 0x5170], 1	      2122	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003cc1	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2123	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7	CALL_11
0x4003cc8	      0xbe00000000	                              mov esi, 0	      2123	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7	CALL_11
0x4003ccd	          0x4889c7	                            mov rdi, rax	      2123	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7	CALL_11
0x4003cd0	      0xe8a2d0ffff	                         call sym._state	      2123	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7	CALL_11
0x4003cd5	      0xb800000000	                              mov eax, 0	      2124	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003cda	      0xe9b8000000	                           jmp 0x4003d97	      2124	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003cdf	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2128	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003ce6	    0x488b90685100	          mov rdx, qword [rax + 0x5168] 	      2128	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003ced	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2128	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003cf4	    0x488b80c80500	           mov rax, qword [rax + 0x5c8] 	      2128	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003cfb	          0x4839c2	                            cmp rdx, rax	      2128	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003cfe	            0x7e55	                           jle 0x4003d55	      2128	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003d00	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2129	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8	CALL_12
0x4003d07	    0x488d35000000	                   lea rsi, [0x04003d0e]	      2129	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8	CALL_12
0x4003d0e	          0x4889c7	                            mov rdi, rax	      2129	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8	CALL_12
0x4003d11	      0xb800000000	                              mov eax, 0	      2129	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8	CALL_12
0x4003d16	      0xe800000000	                          call 0x4003d1b	      2129	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8	CALL_12
0x4003d1b	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2130	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003d22	    0xc74018020000	               mov dword [rax + 0x18], 2	      2130	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003d29	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2131	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003d30	    0xc68070510000	              mov byte [rax + 0x5170], 1	      2131	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003d37	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2132	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8	CALL_13
0x4003d3e	      0xbe00000000	                              mov esi, 0	      2132	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8	CALL_13
0x4003d43	          0x4889c7	                            mov rdi, rax	      2132	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8	CALL_13
0x4003d46	      0xe82cd0ffff	                         call sym._state	      2132	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8	CALL_13
0x4003d4b	      0xb800000000	                              mov eax, 0	      2133	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003d50	            0xeb45	                           jmp 0x4003d97	      2133	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003d52	              0x90	                                     nop	      2126	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2
0x4003d53	            0xeb1e	                           jmp 0x4003d73	      2126	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2
0x4003d55	              0x90	                                     nop	      2135	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2
0x4003d56	            0xeb1b	                           jmp 0x4003d73	      2137	ftp.c	FUNCTION_34	IF_5	IF_6
0x4003d58	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2139	ftp.c	FUNCTION_34	IF_5	ELSE_1	CALL_14
0x4003d5f	    0x488d35000000	                   lea rsi, [0x04003d66]	      2139	ftp.c	FUNCTION_34	IF_5	ELSE_1	CALL_14
0x4003d66	          0x4889c7	                            mov rdi, rax	      2139	ftp.c	FUNCTION_34	IF_5	ELSE_1	CALL_14
0x4003d69	      0xb800000000	                              mov eax, 0	      2139	ftp.c	FUNCTION_34	IF_5	ELSE_1	CALL_14
0x4003d6e	      0xe800000000	                          call 0x4003d73	      2139	ftp.c	FUNCTION_34	IF_5	ELSE_1	CALL_14
0x4003d73	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      2143	ftp.c	FUNCTION_34	IF_9
0x4003d7a	            0x7515	                           jne 0x4003d91	      2143	ftp.c	FUNCTION_34	IF_9
0x4003d7c	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2144	ftp.c	FUNCTION_34	CALL_15
0x4003d83	          0x4889c7	                            mov rdi, rax	      2144	ftp.c	FUNCTION_34	CALL_15
0x4003d86	      0xe8f9e9ffff	                 call sym.ftp_state_type	      2144	ftp.c	FUNCTION_34	CALL_15
0x4003d8b	    0x898504ffffff	             mov dword [rbp - 0xfc], eax	      2144	ftp.c	FUNCTION_34	CALL_15
0x4003d91	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      2146	ftp.c	FUNCTION_34
0x4003d97	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2147	ftp.c	FUNCTION_34
0x4003d9b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2147	ftp.c	FUNCTION_34
0x4003da4	            0x7405	                            je 0x4003dab	      2147	ftp.c	FUNCTION_34
0x4003da6	      0xe800000000	                          call 0x4003dab	      2147	ftp.c	FUNCTION_34
0x4003dab	              0xc9	                                   leave	      2147	ftp.c	FUNCTION_34
0x4003dac	              0xc3	                                     ret	      2147	ftp.c	FUNCTION_34
close_secondarysocket	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,1:IF,1:WHILE,0	21
0x4000112	              0x55	                                push rbp	       220	ftp.c	FUNCTION_1
0x4000113	          0x4889e5	                            mov rbp, rsp	       220	ftp.c	FUNCTION_1
0x4000116	        0x4883ec10	                           sub rsp, 0x10	       220	ftp.c	FUNCTION_1
0x400011a	        0x48897df8	                mov qword [rbp - 8], rdi	       220	ftp.c	FUNCTION_1
0x400011e	        0x488b45f8	                mov rax, qword [rbp - 8]	       221	ftp.c	FUNCTION_1	IF_1
0x4000122	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	       221	ftp.c	FUNCTION_1	IF_1
0x4000128	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       221	ftp.c	FUNCTION_1	IF_1
0x400012b	            0x7426	                            je 0x4000153	       221	ftp.c	FUNCTION_1	IF_1
0x400012d	        0x488b45f8	                mov rax, qword [rbp - 8]	       222	ftp.c	FUNCTION_1	IF_1	CALL_1
0x4000131	    0x8b905c020000	           mov edx, dword [rax + 0x25c] 	       222	ftp.c	FUNCTION_1	IF_1	CALL_1
0x4000137	        0x488b45f8	                mov rax, qword [rbp - 8]	       222	ftp.c	FUNCTION_1	IF_1	CALL_1
0x400013b	            0x89d6	                            mov esi, edx	       222	ftp.c	FUNCTION_1	IF_1	CALL_1
0x400013d	          0x4889c7	                            mov rdi, rax	       222	ftp.c	FUNCTION_1	IF_1	CALL_1
0x4000140	      0xe800000000	                          call 0x4000145	       222	ftp.c	FUNCTION_1	IF_1	CALL_1
0x4000145	        0x488b45f8	                mov rax, qword [rbp - 8]	       223	ftp.c	FUNCTION_1	IF_1
0x4000149	    0xc7805c020000	    mov dword [rax + 0x25c], 0xffffffff 	       223	ftp.c	FUNCTION_1	IF_1
0x4000153	        0x488b45f8	                mov rax, qword [rbp - 8]	       225	ftp.c	FUNCTION_1
0x4000157	    0xc6805e030000	               mov byte [rax + 0x35e], 0	       225	ftp.c	FUNCTION_1
0x400015e	              0x90	                                     nop	       226	ftp.c	FUNCTION_1
0x400015f	              0xc9	                                   leave	       226	ftp.c	FUNCTION_1
0x4000160	              0xc3	                                     ret	       226	ftp.c	FUNCTION_1
ftp_multi_statemach	DO,0:FOR,0:functions,0:ELSE,0:SWITCH,0:CALL,1:IF,0:WHILE,0	22
0x4005985	              0x55	                                push rbp	      3055	ftp.c	FUNCTION_45
0x4005986	          0x4889e5	                            mov rbp, rsp	      3055	ftp.c	FUNCTION_45
0x4005989	        0x4883ec20	                           sub rsp, 0x20	      3055	ftp.c	FUNCTION_45
0x400598d	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3055	ftp.c	FUNCTION_45
0x4005991	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3055	ftp.c	FUNCTION_45
0x4005995	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3056	ftp.c	FUNCTION_45
0x4005999	    0x4805b0050000	                          add rax, 0x5b0	      3056	ftp.c	FUNCTION_45
0x400599f	        0x488945f8	                mov qword [rbp - 8], rax	      3056	ftp.c	FUNCTION_45
0x40059a3	        0x488b45f8	                mov rax, qword [rbp - 8]	      3057	ftp.c	FUNCTION_45	CALL_1
0x40059a7	      0xbe00000000	                              mov esi, 0	      3057	ftp.c	FUNCTION_45	CALL_1
0x40059ac	          0x4889c7	                            mov rdi, rax	      3057	ftp.c	FUNCTION_45	CALL_1
0x40059af	      0xe800000000	                          call 0x40059b4	      3057	ftp.c	FUNCTION_45	CALL_1
0x40059b4	          0x8945f4	              mov dword [rbp - 0xc], eax	      3057	ftp.c	FUNCTION_45	CALL_1
0x40059b7	        0x488b45f8	                mov rax, qword [rbp - 8]	      3062	ftp.c	FUNCTION_45
0x40059bb	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      3062	ftp.c	FUNCTION_45
0x40059c1	            0x85c0	                           test eax, eax	      3062	ftp.c	FUNCTION_45
0x40059c3	           0xf94c2	                                 sete dl	      3062	ftp.c	FUNCTION_45
0x40059c6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3062	ftp.c	FUNCTION_45
0x40059ca	            0x8810	                      mov byte [rax], dl	      3062	ftp.c	FUNCTION_45
0x40059cc	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3064	ftp.c	FUNCTION_45
0x40059cf	              0xc9	                                   leave	      3065	ftp.c	FUNCTION_45
0x40059d0	              0xc3	                                     ret	      3065	ftp.c	FUNCTION_45
