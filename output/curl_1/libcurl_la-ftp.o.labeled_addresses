ftp_getsock	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,0:DO,0:WHILE,0:CALL,1	15
0x4000e96	              0x55	                                push rbp	       825	ftp.c	FUNCTION_15
0x4000e97	          0x4889e5	                            mov rbp, rsp	       825	ftp.c	FUNCTION_15
0x4000e9a	        0x4883ec20	                           sub rsp, 0x20	       825	ftp.c	FUNCTION_15
0x4000e9e	        0x48897df8	                mov qword [rbp - 8], rdi	       825	ftp.c	FUNCTION_15
0x4000ea2	        0x488975f0	             mov qword [rbp - 0x10], rsi	       825	ftp.c	FUNCTION_15
0x4000ea6	          0x8955ec	             mov dword [rbp - 0x14], edx	       825	ftp.c	FUNCTION_15
0x4000ea9	        0x488b45f8	                mov rax, qword [rbp - 8]	       826	ftp.c	FUNCTION_15	CALL_1
0x4000ead	    0x488d88500600	                  lea rcx, [rax + 0x650]	       826	ftp.c	FUNCTION_15	CALL_1
0x4000eb4	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       826	ftp.c	FUNCTION_15	CALL_1
0x4000eb7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       826	ftp.c	FUNCTION_15	CALL_1
0x4000ebb	          0x4889c6	                            mov rsi, rax	       826	ftp.c	FUNCTION_15	CALL_1
0x4000ebe	          0x4889cf	                            mov rdi, rcx	       826	ftp.c	FUNCTION_15	CALL_1
0x4000ec1	      0xe800000000	                          call 0x4000ec6	       826	ftp.c	FUNCTION_15	CALL_1
0x4000ec6	              0xc9	                                   leave	       827	ftp.c	FUNCTION_15
0x4000ec7	              0xc3	                                     ret	       827	ftp.c	FUNCTION_15
ftp_state_prepare_transfer	FOR,0:functions,0:SWITCH,0:ELSE,5:IF,5:DO,0:WHILE,0:CALL,3	115
0x40021d9	              0x55	                                push rbp	      1361	ftp.c	FUNCTION_20
0x40021da	          0x4889e5	                            mov rbp, rsp	      1361	ftp.c	FUNCTION_20
0x40021dd	        0x4883ec30	                           sub rsp, 0x30	      1361	ftp.c	FUNCTION_20
0x40021e1	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1361	ftp.c	FUNCTION_20
0x40021e5	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1362	ftp.c	FUNCTION_20
0x40021ec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1363	ftp.c	FUNCTION_20
0x40021f0	          0x488b00	                    mov rax, qword [rax]	      1363	ftp.c	FUNCTION_20
0x40021f3	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1363	ftp.c	FUNCTION_20
0x40021fa	        0x488945f0	             mov qword [rbp - 0x10], rax	      1363	ftp.c	FUNCTION_20
0x40021fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1364	ftp.c	FUNCTION_20
0x4002202	          0x488b00	                    mov rax, qword [rax]	      1364	ftp.c	FUNCTION_20
0x4002205	        0x488945f8	                mov qword [rbp - 8], rax	      1364	ftp.c	FUNCTION_20
0x4002209	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1366	ftp.c	FUNCTION_20	IF_1
0x400220d	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1366	ftp.c	FUNCTION_20	IF_1
0x4002210	            0x85c0	                           test eax, eax	      1366	ftp.c	FUNCTION_20	IF_1
0x4002212	            0x742f	                            je 0x4002243	      1366	ftp.c	FUNCTION_20	IF_1
0x4002214	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1370	ftp.c	FUNCTION_20	IF_1
0x4002218	      0xbe0d000000	                            mov esi, 0xd	      1370	ftp.c	FUNCTION_20	IF_1
0x400221d	          0x4889c7	                            mov rdi, rax	      1370	ftp.c	FUNCTION_20	IF_1
0x4002220	      0xe85febffff	                         call sym._state	      1370	ftp.c	FUNCTION_20	IF_1
0x4002225	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1371	ftp.c	FUNCTION_20	IF_1	CALL_1
0x4002229	      0xba0d000000	                            mov edx, 0xd	      1371	ftp.c	FUNCTION_20	IF_1	CALL_1
0x400222e	      0xbe01000000	                              mov esi, 1	      1371	ftp.c	FUNCTION_20	IF_1	CALL_1
0x4002233	          0x4889c7	                            mov rdi, rax	      1371	ftp.c	FUNCTION_20	IF_1	CALL_1
0x4002236	      0xe8400a0000	                call sym.ftp_state_quote	      1371	ftp.c	FUNCTION_20	IF_1	CALL_1
0x400223b	          0x8945ec	             mov dword [rbp - 0x14], eax	      1371	ftp.c	FUNCTION_20	IF_1	CALL_1
0x400223e	      0xe965010000	                           jmp 0x40023a8	      1371	ftp.c	FUNCTION_20	IF_1	CALL_1
0x4002243	        0x488b45f8	                mov rax, qword [rbp - 8]	      1373	ftp.c	FUNCTION_20	ELSE_1	IF_2
0x4002247	     0xfb680d70700	          movzx eax, byte [rax + 0x7d7] 	      1373	ftp.c	FUNCTION_20	ELSE_1	IF_2
0x400224e	            0x84c0	                             test al, al	      1373	ftp.c	FUNCTION_20	ELSE_1	IF_2
0x4002250	            0x7419	                            je 0x400226b	      1373	ftp.c	FUNCTION_20	ELSE_1	IF_2
0x4002252	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1375	ftp.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x4002256	      0xbe00000000	                              mov esi, 0	      1375	ftp.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x400225b	          0x4889c7	                            mov rdi, rax	      1375	ftp.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x400225e	      0xe842efffff	             call sym.ftp_state_use_port	      1375	ftp.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x4002263	          0x8945ec	             mov dword [rbp - 0x14], eax	      1375	ftp.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x4002266	      0xe93d010000	                           jmp 0x40023a8	      1375	ftp.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x400226b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1379	ftp.c	FUNCTION_20	ELSE_2	IF_3
0x400226f	     0xfb680ee0700	          movzx eax, byte [rax + 0x7ee] 	      1379	ftp.c	FUNCTION_20	ELSE_2	IF_3
0x4002276	            0x84c0	                             test al, al	      1379	ftp.c	FUNCTION_20	ELSE_2	IF_3
0x4002278	     0xf841b010000	                            je 0x4002399	      1379	ftp.c	FUNCTION_20	ELSE_2	IF_3
0x400227e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1382	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x4002282	    0x488b80d80600	           mov rax, qword [rax + 0x6d8] 	      1382	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x4002289	          0x4885c0	                           test rax, rax	      1382	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x400228c	            0x7573	                           jne 0x4002301	      1382	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x400228e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x4002292	    0x488b80600800	           mov rax, qword [rax + 0x860] 	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x4002299	          0x4885c0	                           test rax, rax	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x400229c	            0x740d	                            je 0x40022ab	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x400229e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40022a2	    0x488b80600800	           mov rax, qword [rax + 0x860] 	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40022a9	            0xeb1f	                           jmp 0x40022ca	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40022ab	        0x488b45f8	                mov rax, qword [rbp - 8]	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40022af	     0xfb680d60700	          movzx eax, byte [rax + 0x7d6] 	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40022b6	            0x84c0	                             test al, al	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40022b8	            0x7409	                            je 0x40022c3	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40022ba	    0x488d05000000	                   lea rax, [0x040022c1]	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40022c1	            0xeb07	                           jmp 0x40022ca	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40022c3	    0x488d05000000	                   lea rax, [0x040022ca]	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40022ca	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40022ce	    0x488d8a500600	                  lea rcx, [rdx + 0x650]	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40022d5	          0x4889c2	                            mov rdx, rax	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40022d8	    0x488d35000000	                   lea rsi, [0x040022df]	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40022df	          0x4889cf	                            mov rdi, rcx	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40022e2	      0xb800000000	                              mov eax, 0	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40022e7	      0xe800000000	                          call 0x40022ec	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40022ec	          0x8945ec	             mov dword [rbp - 0x14], eax	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40022ef	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40022f3	     0xf848d000000	                            je 0x4002386	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40022f9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40022fc	      0xe9aa000000	                           jmp 0x40023ab	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x4002301	        0x488b45f8	                mov rax, qword [rbp - 8]	      1388	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x4002305	     0xfb680e20700	          movzx eax, byte [rax + 0x7e2] 	      1388	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x400230c	            0x84c0	                             test al, al	      1388	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x400230e	            0x743b	                            je 0x400234b	      1388	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x4002310	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x4002314	    0x488b80d80600	           mov rax, qword [rax + 0x6d8] 	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x400231b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x400231f	    0x488d8a500600	                  lea rcx, [rdx + 0x650]	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x4002326	          0x4889c2	                            mov rdx, rax	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x4002329	    0x488d35000000	                   lea rsi, [0x04002330]	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x4002330	          0x4889cf	                            mov rdi, rcx	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x4002333	      0xb800000000	                              mov eax, 0	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x4002338	      0xe800000000	                          call 0x400233d	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x400233d	          0x8945ec	             mov dword [rbp - 0x14], eax	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x4002340	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x4002344	            0x7440	                            je 0x4002386	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x4002346	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x4002349	            0xeb60	                           jmp 0x40023ab	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x400234b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4
0x400234f	    0x488b80d80600	           mov rax, qword [rax + 0x6d8] 	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4
0x4002356	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4
0x400235a	    0x488d8a500600	                  lea rcx, [rdx + 0x650]	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4
0x4002361	          0x4889c2	                            mov rdx, rax	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4
0x4002364	    0x488d35000000	                   lea rsi, [0x0400236b]	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4
0x400236b	          0x4889cf	                            mov rdi, rcx	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4
0x400236e	      0xb800000000	                              mov eax, 0	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4
0x4002373	      0xe800000000	                          call 0x4002378	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4
0x4002378	          0x8945ec	             mov dword [rbp - 0x14], eax	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4
0x400237b	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4
0x400237f	            0x7405	                            je 0x4002386	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4
0x4002381	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4
0x4002384	            0xeb25	                           jmp 0x40023ab	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4
0x4002386	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1394	ftp.c	FUNCTION_20	ELSE_2	IF_3
0x400238a	      0xbe1d000000	                           mov esi, 0x1d	      1394	ftp.c	FUNCTION_20	ELSE_2	IF_3
0x400238f	          0x4889c7	                            mov rdi, rax	      1394	ftp.c	FUNCTION_20	ELSE_2	IF_3
0x4002392	      0xe8ede9ffff	                         call sym._state	      1394	ftp.c	FUNCTION_20	ELSE_2	IF_3
0x4002397	            0xeb0f	                           jmp 0x40023a8	      1394	ftp.c	FUNCTION_20	ELSE_2	IF_3
0x4002399	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1397	ftp.c	FUNCTION_20	ELSE_2	ELSE_5	CALL_3
0x400239d	          0x4889c7	                            mov rdi, rax	      1397	ftp.c	FUNCTION_20	ELSE_2	ELSE_5	CALL_3
0x40023a0	      0xe84bfdffff	             call sym.ftp_state_use_pasv	      1397	ftp.c	FUNCTION_20	ELSE_2	ELSE_5	CALL_3
0x40023a5	          0x8945ec	             mov dword [rbp - 0x14], eax	      1397	ftp.c	FUNCTION_20	ELSE_2	ELSE_5	CALL_3
0x40023a8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1400	ftp.c	FUNCTION_20
0x40023ab	              0xc9	                                   leave	      1401	ftp.c	FUNCTION_20
0x40023ac	              0xc3	                                     ret	      1401	ftp.c	FUNCTION_20
ftp_do	FOR,0:functions,0:SWITCH,0:ELSE,1:IF,4:DO,0:WHILE,0:CALL,3	55
0x40072dd	              0x55	                                push rbp	      3926	ftp.c	FUNCTION_57
0x40072de	          0x4889e5	                            mov rbp, rsp	      3926	ftp.c	FUNCTION_57
0x40072e1	        0x4883ec20	                           sub rsp, 0x20	      3926	ftp.c	FUNCTION_57
0x40072e5	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3926	ftp.c	FUNCTION_57
0x40072e9	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3926	ftp.c	FUNCTION_57
0x40072ed	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      3927	ftp.c	FUNCTION_57
0x40072f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3928	ftp.c	FUNCTION_57
0x40072f8	    0x480550060000	                          add rax, 0x650	      3928	ftp.c	FUNCTION_57
0x40072fe	        0x488945f8	                mov qword [rbp - 8], rax	      3928	ftp.c	FUNCTION_57
0x4007302	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3930	ftp.c	FUNCTION_57
0x4007306	          0xc60000	                       mov byte [rax], 0	      3930	ftp.c	FUNCTION_57
0x4007309	        0x488b45f8	                mov rax, qword [rbp - 8]	      3931	ftp.c	FUNCTION_57
0x400730d	    0xc68099000000	                mov byte [rax + 0x99], 0	      3931	ftp.c	FUNCTION_57
0x4007314	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3933	ftp.c	FUNCTION_57	IF_1
0x4007318	          0x488b00	                    mov rax, qword [rax]	      3933	ftp.c	FUNCTION_57	IF_1
0x400731b	     0xfb680f95000	         movzx eax, byte [rax + 0x50f9] 	      3933	ftp.c	FUNCTION_57	IF_1
0x4007322	            0x84c0	                             test al, al	      3933	ftp.c	FUNCTION_57	IF_1
0x4007324	            0x7445	                            je 0x400736b	      3933	ftp.c	FUNCTION_57	IF_1
0x4007326	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3934	ftp.c	FUNCTION_57	IF_1	CALL_1
0x400732a	          0x4889c7	                            mov rdi, rax	      3934	ftp.c	FUNCTION_57	IF_1	CALL_1
0x400732d	      0xe809fbffff	                   call sym.wc_statemach	      3934	ftp.c	FUNCTION_57	IF_1	CALL_1
0x4007332	          0x8945f4	              mov dword [rbp - 0xc], eax	      3934	ftp.c	FUNCTION_57	IF_1	CALL_1
0x4007335	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x4007339	          0x488b00	                    mov rax, qword [rax]	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x400733c	    0x8b8088510000	          mov eax, dword [rax + 0x5188] 	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x4007342	          0x83f805	                              cmp eax, 5	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x4007345	            0x7412	                            je 0x4007359	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x4007347	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3936	ftp.c	FUNCTION_57	IF_1	IF_2
0x400734b	          0x488b00	                    mov rax, qword [rax]	      3936	ftp.c	FUNCTION_57	IF_1	IF_2
0x400734e	    0x8b8088510000	          mov eax, dword [rax + 0x5188] 	      3936	ftp.c	FUNCTION_57	IF_1	IF_2
0x4007354	          0x83f807	                              cmp eax, 7	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x4007357	            0x7507	                           jne 0x4007360	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x4007359	      0xb800000000	                              mov eax, 0	      3938	ftp.c	FUNCTION_57	IF_1	IF_2
0x400735e	            0xeb3e	                           jmp 0x400739e	      3938	ftp.c	FUNCTION_57	IF_1	IF_2
0x4007360	        0x837df400	                cmp dword [rbp - 0xc], 0	      3940	ftp.c	FUNCTION_57	IF_1	IF_3
0x4007364	            0x741f	                            je 0x4007385	      3940	ftp.c	FUNCTION_57	IF_1	IF_3
0x4007366	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3941	ftp.c	FUNCTION_57	IF_1	IF_3
0x4007369	            0xeb33	                           jmp 0x400739e	      3941	ftp.c	FUNCTION_57	IF_1	IF_3
0x400736b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3944	ftp.c	FUNCTION_57	ELSE_1	CALL_2
0x400736f	          0x4889c7	                            mov rdi, rax	      3944	ftp.c	FUNCTION_57	ELSE_1	CALL_2
0x4007372	      0xe8ac030000	             call sym.ftp_parse_url_path	      3944	ftp.c	FUNCTION_57	ELSE_1	CALL_2
0x4007377	          0x8945f4	              mov dword [rbp - 0xc], eax	      3944	ftp.c	FUNCTION_57	ELSE_1	CALL_2
0x400737a	        0x837df400	                cmp dword [rbp - 0xc], 0	      3945	ftp.c	FUNCTION_57	ELSE_1	IF_4
0x400737e	            0x7405	                            je 0x4007385	      3945	ftp.c	FUNCTION_57	ELSE_1	IF_4
0x4007380	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3946	ftp.c	FUNCTION_57	ELSE_1	IF_4
0x4007383	            0xeb19	                           jmp 0x400739e	      3946	ftp.c	FUNCTION_57	ELSE_1	IF_4
0x4007385	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3949	ftp.c	FUNCTION_57	CALL_3
0x4007389	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3949	ftp.c	FUNCTION_57	CALL_3
0x400738d	          0x4889d6	                            mov rsi, rdx	      3949	ftp.c	FUNCTION_57	CALL_3
0x4007390	          0x4889c7	                            mov rdi, rax	      3949	ftp.c	FUNCTION_57	CALL_3
0x4007393	      0xe8400c0000	           call sym.ftp_regular_transfer	      3949	ftp.c	FUNCTION_57	CALL_3
0x4007398	          0x8945f4	              mov dword [rbp - 0xc], eax	      3949	ftp.c	FUNCTION_57	CALL_3
0x400739b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3951	ftp.c	FUNCTION_57
0x400739e	              0xc9	                                   leave	      3952	ftp.c	FUNCTION_57
0x400739f	              0xc3	                                     ret	      3952	ftp.c	FUNCTION_57
ftp_endofresp	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,1:DO,0:WHILE,0:CALL,2	52
0x4000a02	              0x55	                                push rbp	       553	ftp.c	FUNCTION_9
0x4000a03	          0x4889e5	                            mov rbp, rsp	       553	ftp.c	FUNCTION_9
0x4000a06	        0x4883ec20	                           sub rsp, 0x20	       553	ftp.c	FUNCTION_9
0x4000a0a	        0x48897df8	                mov qword [rbp - 8], rdi	       553	ftp.c	FUNCTION_9
0x4000a0e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       553	ftp.c	FUNCTION_9
0x4000a12	        0x488955e8	             mov qword [rbp - 0x18], rdx	       553	ftp.c	FUNCTION_9
0x4000a16	        0x48894de0	             mov qword [rbp - 0x20], rcx	       553	ftp.c	FUNCTION_9
0x4000a1a	      0x48837de803	               cmp qword [rbp - 0x18], 3	       556	ftp.c	FUNCTION_9	IF_1
0x4000a1f	     0xf8683000000	                           jbe 0x4000aa8	       556	ftp.c	FUNCTION_9	IF_1
0x4000a25	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       556	ftp.c	FUNCTION_9	IF_1
0x4000a29	           0xfb600	                   movzx eax, byte [rax]	       556	ftp.c	FUNCTION_9	IF_1
0x4000a2c	           0xfb6c0	                           movzx eax, al	       556	ftp.c	FUNCTION_9	IF_1
0x4000a2f	            0x89c7	                            mov edi, eax	       556	ftp.c	FUNCTION_9	IF_1
0x4000a31	      0xe800000000	                          call 0x4000a36	       556	ftp.c	FUNCTION_9	IF_1
0x4000a36	            0x85c0	                           test eax, eax	       556	ftp.c	FUNCTION_9	IF_1
0x4000a38	            0x746e	                            je 0x4000aa8	       556	ftp.c	FUNCTION_9	IF_1
0x4000a3a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       556	ftp.c	FUNCTION_9	IF_1
0x4000a3e	        0x4883c001	                              add rax, 1	       556	ftp.c	FUNCTION_9	IF_1
0x4000a42	           0xfb600	                   movzx eax, byte [rax]	       556	ftp.c	FUNCTION_9	IF_1
0x4000a45	           0xfb6c0	                           movzx eax, al	       556	ftp.c	FUNCTION_9	IF_1
0x4000a48	            0x89c7	                            mov edi, eax	       556	ftp.c	FUNCTION_9	IF_1
0x4000a4a	      0xe800000000	                          call 0x4000a4f	       556	ftp.c	FUNCTION_9	IF_1
0x4000a4f	            0x85c0	                           test eax, eax	       556	ftp.c	FUNCTION_9	IF_1
0x4000a51	            0x7455	                            je 0x4000aa8	       556	ftp.c	FUNCTION_9	IF_1
0x4000a53	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       556	ftp.c	FUNCTION_9	IF_1
0x4000a57	        0x4883c002	                              add rax, 2	       556	ftp.c	FUNCTION_9	IF_1
0x4000a5b	           0xfb600	                   movzx eax, byte [rax]	       556	ftp.c	FUNCTION_9	IF_1
0x4000a5e	           0xfb6c0	                           movzx eax, al	       556	ftp.c	FUNCTION_9	IF_1
0x4000a61	            0x89c7	                            mov edi, eax	       556	ftp.c	FUNCTION_9	IF_1
0x4000a63	      0xe800000000	                          call 0x4000a68	       556	ftp.c	FUNCTION_9	IF_1
0x4000a68	            0x85c0	                           test eax, eax	       556	ftp.c	FUNCTION_9	IF_1
0x4000a6a	            0x743c	                            je 0x4000aa8	       556	ftp.c	FUNCTION_9	IF_1
0x4000a6c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       556	ftp.c	FUNCTION_9	IF_1
0x4000a70	        0x4883c003	                              add rax, 3	       556	ftp.c	FUNCTION_9	IF_1
0x4000a74	           0xfb600	                   movzx eax, byte [rax]	       556	ftp.c	FUNCTION_9	IF_1
0x4000a77	            0x3c20	                            cmp al, 0x20	       556	ftp.c	FUNCTION_9	IF_1
0x4000a79	            0x752d	                           jne 0x4000aa8	       556	ftp.c	FUNCTION_9	IF_1
0x4000a7b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       557	ftp.c	FUNCTION_9	IF_1	CALL_2
0x4000a7f	      0xba0a000000	                            mov edx, 0xa	       557	ftp.c	FUNCTION_9	IF_1	CALL_2
0x4000a84	      0xbe00000000	                              mov esi, 0	       557	ftp.c	FUNCTION_9	IF_1	CALL_2
0x4000a89	          0x4889c7	                            mov rdi, rax	       557	ftp.c	FUNCTION_9	IF_1	CALL_2
0x4000a8c	      0xe800000000	                          call 0x4000a91	       557	ftp.c	FUNCTION_9	IF_1	CALL_2
0x4000a91	          0x4889c7	                            mov rdi, rax	       557	ftp.c	FUNCTION_9	IF_1	CALL_2
0x4000a94	      0xe800000000	                          call 0x4000a99	       557	ftp.c	FUNCTION_9	IF_1	CALL_2
0x4000a99	            0x89c2	                            mov edx, eax	       557	ftp.c	FUNCTION_9	IF_1	CALL_2
0x4000a9b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       557	ftp.c	FUNCTION_9	IF_1	CALL_2
0x4000a9f	            0x8910	                    mov dword [rax], edx	       557	ftp.c	FUNCTION_9	IF_1	CALL_2
0x4000aa1	      0xb801000000	                              mov eax, 1	       558	ftp.c	FUNCTION_9	IF_1
0x4000aa6	            0xeb05	                           jmp 0x4000aad	       558	ftp.c	FUNCTION_9	IF_1
0x4000aa8	      0xb800000000	                              mov eax, 0	       561	ftp.c	FUNCTION_9
0x4000aad	              0xc9	                                   leave	       562	ftp.c	FUNCTION_9
0x4000aae	              0xc3	                                     ret	       562	ftp.c	FUNCTION_9
ftp_sendquote	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,4:DO,0:WHILE,1:CALL,3	89
0x40062d0	              0x55	                                push rbp	      3366	ftp.c	FUNCTION_49
0x40062d1	          0x4889e5	                            mov rbp, rsp	      3366	ftp.c	FUNCTION_49
0x40062d4	              0x53	                                push rbx	      3366	ftp.c	FUNCTION_49
0x40062d5	        0x4883ec58	                           sub rsp, 0x58	      3366	ftp.c	FUNCTION_49
0x40062d9	        0x48897da8	             mov qword [rbp - 0x58], rdi	      3366	ftp.c	FUNCTION_49
0x40062dd	        0x488975a0	             mov qword [rbp - 0x60], rsi	      3366	ftp.c	FUNCTION_49
0x40062e1	    0x64488b042528	                mov rax, qword fs:[0x28]	      3366	ftp.c	FUNCTION_49
0x40062ea	        0x488945e8	             mov qword [rbp - 0x18], rax	      3366	ftp.c	FUNCTION_49
0x40062ee	            0x31c0	                            xor eax, eax	      3366	ftp.c	FUNCTION_49
0x40062f0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3371	ftp.c	FUNCTION_49
0x40062f4	    0x480550060000	                          add rax, 0x650	      3371	ftp.c	FUNCTION_49
0x40062fa	        0x488945d8	             mov qword [rbp - 0x28], rax	      3371	ftp.c	FUNCTION_49
0x40062fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3372	ftp.c	FUNCTION_49
0x4006302	        0x488945e0	             mov qword [rbp - 0x20], rax	      3372	ftp.c	FUNCTION_49
0x4006306	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3374	ftp.c	FUNCTION_49
0x400630a	        0x488945c8	             mov qword [rbp - 0x38], rax	      3374	ftp.c	FUNCTION_49
0x400630e	      0xe9e7000000	                           jmp 0x40063fa	      3375	ftp.c	FUNCTION_49	WHILE_1
0x4006313	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3376	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x4006317	          0x488b00	                    mov rax, qword [rax]	      3376	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x400631a	          0x4885c0	                           test rax, rax	      3376	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x400631d	     0xf84cb000000	                            je 0x40063ee	      3376	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x4006323	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3377	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x4006327	          0x488b00	                    mov rax, qword [rax]	      3377	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x400632a	        0x488945d0	             mov qword [rbp - 0x30], rax	      3377	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x400632e	        0xc645b700	                mov byte [rbp - 0x49], 0	      3378	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x4006332	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3385	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_2
0x4006336	           0xfb600	                   movzx eax, byte [rax]	      3385	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_2
0x4006339	            0x3c2a	                            cmp al, 0x2a	      3385	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_2
0x400633b	            0x7509	                           jne 0x4006346	      3385	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_2
0x400633d	      0x488345d001	               add qword [rbp - 0x30], 1	      3386	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_2
0x4006342	        0xc645b701	                mov byte [rbp - 0x49], 1	      3387	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_2
0x4006346	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x400634a	    0x488d88500600	                  lea rcx, [rax + 0x650]	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x4006351	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x4006355	          0x4889c2	                            mov rdx, rax	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x4006358	    0x488d35000000	                   lea rsi, [0x0400635f]	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x400635f	          0x4889cf	                            mov rdi, rcx	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x4006362	      0xb800000000	                              mov eax, 0	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x4006367	      0xe800000000	                          call 0x400636c	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x400636c	          0x8945bc	             mov dword [rbp - 0x44], eax	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x400636f	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x4006373	            0x7408	                            je 0x400637d	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x4006375	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x4006378	      0xe98d000000	                           jmp 0x400640a	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x400637d	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	      3392	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_1
0x4006381	      0xe800000000	                          call 0x4006386	      3392	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_1
0x4006386	        0x48894340	             mov qword [rbx + 0x40], rax	      3392	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_1
0x400638a	        0x48895348	             mov qword [rbx + 0x48], rdx	      3392	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_1
0x400638e	        0x488d55b8	                   lea rdx, [rbp - 0x48]	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_2
0x4006392	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_2
0x4006396	        0x488d45c0	                   lea rax, [rbp - 0x40]	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_2
0x400639a	          0x4889ce	                            mov rsi, rcx	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_2
0x400639d	          0x4889c7	                            mov rdi, rax	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_2
0x40063a0	      0xe800000000	                          call 0x40063a5	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_2
0x40063a5	          0x8945bc	             mov dword [rbp - 0x44], eax	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_2
0x40063a8	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      3395	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_3
0x40063ac	            0x7405	                            je 0x40063b3	      3395	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_3
0x40063ae	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      3396	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_3
0x40063b1	            0xeb57	                           jmp 0x400640a	      3396	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_3
0x40063b3	         0xfb645b7	            movzx eax, byte [rbp - 0x49]	      3398	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4
0x40063b7	          0x83f001	                              xor eax, 1	      3398	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4
0x40063ba	            0x84c0	                             test al, al	      3398	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4
0x40063bc	            0x7430	                            je 0x40063ee	      3398	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4
0x40063be	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      3398	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4
0x40063c1	      0x3d8f010000	                          cmp eax, 0x18f	      3398	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4
0x40063c6	            0x7e26	                           jle 0x40063ee	      3398	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4
0x40063c8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3399	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4	CALL_3
0x40063cc	          0x488b00	                    mov rax, qword [rax]	      3399	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4	CALL_3
0x40063cf	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3399	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4	CALL_3
0x40063d3	    0x488d35000000	                   lea rsi, [0x040063da]	      3399	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4	CALL_3
0x40063da	          0x4889c7	                            mov rdi, rax	      3399	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4	CALL_3
0x40063dd	      0xb800000000	                              mov eax, 0	      3399	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4	CALL_3
0x40063e2	      0xe800000000	                          call 0x40063e7	      3399	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4	CALL_3
0x40063e7	      0xb815000000	                           mov eax, 0x15	      3400	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4
0x40063ec	            0xeb1c	                           jmp 0x400640a	      3400	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4
0x40063ee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3404	ftp.c	FUNCTION_49	WHILE_1
0x40063f2	        0x488b4008	                mov rax, qword [rax + 8]	      3404	ftp.c	FUNCTION_49	WHILE_1
0x40063f6	        0x488945c8	             mov qword [rbp - 0x38], rax	      3404	ftp.c	FUNCTION_49	WHILE_1
0x40063fa	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      3375	ftp.c	FUNCTION_49	WHILE_1
0x40063ff	     0xf850effffff	                           jne 0x4006313	      3375	ftp.c	FUNCTION_49	WHILE_1
0x4006405	      0xb800000000	                              mov eax, 0	      3407	ftp.c	FUNCTION_49
0x400640a	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      3408	ftp.c	FUNCTION_49
0x400640e	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3408	ftp.c	FUNCTION_49
0x4006417	            0x7405	                            je 0x400641e	      3408	ftp.c	FUNCTION_49
0x4006419	      0xe800000000	                          call 0x400641e	      3408	ftp.c	FUNCTION_49
0x400641e	        0x4883c458	                           add rsp, 0x58	      3408	ftp.c	FUNCTION_49
0x4006422	              0x5b	                                 pop rbx	      3408	ftp.c	FUNCTION_49
0x4006423	              0x5d	                                 pop rbp	      3408	ftp.c	FUNCTION_49
0x4006424	              0xc3	                                     ret	      3408	ftp.c	FUNCTION_49
ftp_state_use_pasv	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,1:DO,0:WHILE,0:CALL,1	60
0x40020f0	              0x55	                                push rbp	      1315	ftp.c	FUNCTION_19
0x40020f1	          0x4889e5	                            mov rbp, rsp	      1315	ftp.c	FUNCTION_19
0x40020f4	        0x4883ec20	                           sub rsp, 0x20	      1315	ftp.c	FUNCTION_19
0x40020f8	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1315	ftp.c	FUNCTION_19
0x40020fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1316	ftp.c	FUNCTION_19
0x4002100	    0x480550060000	                          add rax, 0x650	      1316	ftp.c	FUNCTION_19
0x4002106	        0x488945f8	                mov qword [rbp - 8], rax	      1316	ftp.c	FUNCTION_19
0x400210a	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      1317	ftp.c	FUNCTION_19
0x4002111	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1336	ftp.c	FUNCTION_19	IF_1
0x4002115	     0xfb680ac0300	          movzx eax, byte [rax + 0x3ac] 	      1336	ftp.c	FUNCTION_19	IF_1
0x400211c	          0x83f001	                              xor eax, 1	      1336	ftp.c	FUNCTION_19	IF_1
0x400211f	            0x84c0	                             test al, al	      1336	ftp.c	FUNCTION_19	IF_1
0x4002121	            0x741a	                            je 0x400213d	      1336	ftp.c	FUNCTION_19	IF_1
0x4002123	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1336	ftp.c	FUNCTION_19	IF_1
0x4002127	     0xfb680a30300	          movzx eax, byte [rax + 0x3a3] 	      1336	ftp.c	FUNCTION_19	IF_1
0x400212e	            0x84c0	                             test al, al	      1336	ftp.c	FUNCTION_19	IF_1
0x4002130	            0x740b	                            je 0x400213d	      1336	ftp.c	FUNCTION_19	IF_1
0x4002132	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1339	ftp.c	FUNCTION_19	IF_1
0x4002136	    0xc680ac030000	               mov byte [rax + 0x3ac], 1	      1339	ftp.c	FUNCTION_19	IF_1
0x400213d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1342	ftp.c	FUNCTION_19
0x4002141	     0xfb680ac0300	          movzx eax, byte [rax + 0x3ac] 	      1342	ftp.c	FUNCTION_19
0x4002148	            0x84c0	                             test al, al	      1342	ftp.c	FUNCTION_19
0x400214a	            0x7407	                            je 0x4002153	      1342	ftp.c	FUNCTION_19
0x400214c	      0xb800000000	                              mov eax, 0	      1342	ftp.c	FUNCTION_19
0x4002151	            0xeb05	                           jmp 0x4002158	      1342	ftp.c	FUNCTION_19
0x4002153	      0xb801000000	                              mov eax, 1	      1342	ftp.c	FUNCTION_19
0x4002158	          0x8945f4	              mov dword [rbp - 0xc], eax	      1342	ftp.c	FUNCTION_19
0x400215b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1344	ftp.c	FUNCTION_19
0x400215e	          0x4863d0	                         movsxd rdx, eax	      1344	ftp.c	FUNCTION_19
0x4002161	          0x4889d0	                            mov rax, rdx	      1344	ftp.c	FUNCTION_19
0x4002164	        0x48c1e002	                              shl rax, 2	      1344	ftp.c	FUNCTION_19
0x4002168	          0x4801d0	                            add rax, rdx	      1344	ftp.c	FUNCTION_19
0x400216b	    0x488d15000000	                   lea rdx, [0x04002172]	      1344	ftp.c	FUNCTION_19
0x4002172	          0x4801c2	                            add rdx, rax	      1344	ftp.c	FUNCTION_19
0x4002175	        0x488b45f8	                mov rax, qword [rbp - 8]	      1344	ftp.c	FUNCTION_19
0x4002179	    0x488d35000000	                   lea rsi, [0x04002180]	      1344	ftp.c	FUNCTION_19
0x4002180	          0x4889c7	                            mov rdi, rax	      1344	ftp.c	FUNCTION_19
0x4002183	      0xb800000000	                              mov eax, 0	      1344	ftp.c	FUNCTION_19
0x4002188	      0xe800000000	                          call 0x400218d	      1344	ftp.c	FUNCTION_19
0x400218d	          0x8945f0	             mov dword [rbp - 0x10], eax	      1344	ftp.c	FUNCTION_19
0x4002190	        0x837df000	               cmp dword [rbp - 0x10], 0	      1344	ftp.c	FUNCTION_19
0x4002194	            0x7405	                            je 0x400219b	      1344	ftp.c	FUNCTION_19
0x4002196	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1344	ftp.c	FUNCTION_19
0x4002199	            0xeb3c	                           jmp 0x40021d7	      1344	ftp.c	FUNCTION_19
0x400219b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1346	ftp.c	FUNCTION_19
0x400219f	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1346	ftp.c	FUNCTION_19
0x40021a2	    0x8990b0000000	             mov dword [rax + 0xb0], edx	      1346	ftp.c	FUNCTION_19
0x40021a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1347	ftp.c	FUNCTION_19
0x40021ac	      0xbe1e000000	                           mov esi, 0x1e	      1347	ftp.c	FUNCTION_19
0x40021b1	          0x4889c7	                            mov rdi, rax	      1347	ftp.c	FUNCTION_19
0x40021b4	      0xe8cbebffff	                         call sym._state	      1347	ftp.c	FUNCTION_19
0x40021b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1348	ftp.c	FUNCTION_19	CALL_1
0x40021bd	          0x488b00	                    mov rax, qword [rax]	      1348	ftp.c	FUNCTION_19	CALL_1
0x40021c0	    0x488d35000000	                   lea rsi, [0x040021c7]	      1348	ftp.c	FUNCTION_19	CALL_1
0x40021c7	          0x4889c7	                            mov rdi, rax	      1348	ftp.c	FUNCTION_19	CALL_1
0x40021ca	      0xb800000000	                              mov eax, 0	      1348	ftp.c	FUNCTION_19	CALL_1
0x40021cf	      0xe800000000	                          call 0x40021d4	      1348	ftp.c	FUNCTION_19	CALL_1
0x40021d4	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1350	ftp.c	FUNCTION_19
0x40021d7	              0xc9	                                   leave	      1351	ftp.c	FUNCTION_19
0x40021d8	              0xc3	                                     ret	      1351	ftp.c	FUNCTION_19
InitiateTransfer	FOR,0:functions,0:SWITCH,0:ELSE,1:IF,3:DO,0:WHILE,0:CALL,6	79
0x400077f	              0x55	                                push rbp	       449	ftp.c	FUNCTION_7
0x4000780	          0x4889e5	                            mov rbp, rsp	       449	ftp.c	FUNCTION_7
0x4000783	        0x4883ec30	                           sub rsp, 0x30	       449	ftp.c	FUNCTION_7
0x4000787	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       449	ftp.c	FUNCTION_7
0x400078b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       450	ftp.c	FUNCTION_7
0x400078f	          0x488b00	                    mov rax, qword [rax]	       450	ftp.c	FUNCTION_7
0x4000792	        0x488945f0	             mov qword [rbp - 0x10], rax	       450	ftp.c	FUNCTION_7
0x4000796	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       451	ftp.c	FUNCTION_7
0x400079a	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	       451	ftp.c	FUNCTION_7
0x40007a1	        0x488945f8	                mov qword [rbp - 8], rax	       451	ftp.c	FUNCTION_7
0x40007a5	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       452	ftp.c	FUNCTION_7
0x40007ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       454	ftp.c	FUNCTION_7	IF_1
0x40007b0	     0xfb680ae0300	          movzx eax, byte [rax + 0x3ae] 	       454	ftp.c	FUNCTION_7	IF_1
0x40007b7	            0x84c0	                             test al, al	       454	ftp.c	FUNCTION_7	IF_1
0x40007b9	            0x743a	                            je 0x40007f5	       454	ftp.c	FUNCTION_7	IF_1
0x40007bb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       457	ftp.c	FUNCTION_7	IF_1	CALL_1
0x40007bf	    0x488d35000000	                   lea rsi, [0x040007c6]	       457	ftp.c	FUNCTION_7	IF_1	CALL_1
0x40007c6	          0x4889c7	                            mov rdi, rax	       457	ftp.c	FUNCTION_7	IF_1	CALL_1
0x40007c9	      0xb800000000	                              mov eax, 0	       457	ftp.c	FUNCTION_7	IF_1	CALL_1
0x40007ce	      0xe800000000	                          call 0x40007d3	       457	ftp.c	FUNCTION_7	IF_1	CALL_1
0x40007d3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       458	ftp.c	FUNCTION_7	IF_1	CALL_2
0x40007d7	      0xbe01000000	                              mov esi, 1	       458	ftp.c	FUNCTION_7	IF_1	CALL_2
0x40007dc	          0x4889c7	                            mov rdi, rax	       458	ftp.c	FUNCTION_7	IF_1	CALL_2
0x40007df	      0xe800000000	                          call 0x40007e4	       458	ftp.c	FUNCTION_7	IF_1	CALL_2
0x40007e4	          0x8945ec	             mov dword [rbp - 0x14], eax	       458	ftp.c	FUNCTION_7	IF_1	CALL_2
0x40007e7	        0x837dec00	               cmp dword [rbp - 0x14], 0	       459	ftp.c	FUNCTION_7	IF_1	IF_2
0x40007eb	            0x7408	                            je 0x40007f5	       459	ftp.c	FUNCTION_7	IF_1	IF_2
0x40007ed	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       460	ftp.c	FUNCTION_7	IF_1	IF_2
0x40007f0	      0xe9ce000000	                           jmp 0x40008c3	       460	ftp.c	FUNCTION_7	IF_1	IF_2
0x40007f5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       463	ftp.c	FUNCTION_7	IF_3
0x40007f9	    0x8b8010070000	           mov eax, dword [rax + 0x710] 	       463	ftp.c	FUNCTION_7	IF_3
0x40007ff	          0x83f821	                           cmp eax, 0x21	       463	ftp.c	FUNCTION_7	IF_3
0x4000802	            0x7563	                           jne 0x4000867	       463	ftp.c	FUNCTION_7	IF_3
0x4000804	        0x488b45f8	                mov rax, qword [rbp - 8]	       464	ftp.c	FUNCTION_7	IF_3
0x4000808	          0x488b00	                    mov rax, qword [rax]	       464	ftp.c	FUNCTION_7	IF_3
0x400080b	    0x48c700000000	                      mov qword [rax], 0	       464	ftp.c	FUNCTION_7	IF_3
0x4000812	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       469	ftp.c	FUNCTION_7	IF_3	CALL_3
0x4000816	    0x488b90505100	          mov rdx, qword [rax + 0x5150] 	       469	ftp.c	FUNCTION_7	IF_3	CALL_3
0x400081d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       469	ftp.c	FUNCTION_7	IF_3	CALL_3
0x4000821	          0x4889d6	                            mov rsi, rdx	       469	ftp.c	FUNCTION_7	IF_3	CALL_3
0x4000824	          0x4889c7	                            mov rdi, rax	       469	ftp.c	FUNCTION_7	IF_3	CALL_3
0x4000827	      0xe800000000	                          call 0x400082c	       469	ftp.c	FUNCTION_7	IF_3	CALL_3
0x400082c	        0x488b45f8	                mov rax, qword [rbp - 8]	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x4000830	          0x488b10	                    mov rdx, qword [rax]	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x4000833	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x4000837	        0x4883ec08	                              sub rsp, 8	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x400083b	              0x52	                                push rdx	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x400083c	    0x41b901000000	                              mov r9d, 1	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x4000842	    0x41b800000000	                              mov r8d, 0	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x4000848	      0xb900000000	                              mov ecx, 0	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x400084d	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x4000854	      0xbeffffffff	                     mov esi, 0xffffffff	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x4000859	          0x4889c7	                            mov rdi, rax	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x400085c	      0xe800000000	                          call 0x4000861	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x4000861	        0x4883c410	                           add rsp, 0x10	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x4000865	            0xeb3b	                           jmp 0x40008a2	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x4000867	        0x488b45f8	                mov rax, qword [rbp - 8]	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x400086b	          0x488b08	                    mov rcx, qword [rax]	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x400086e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x4000872	    0x488b90180700	           mov rdx, qword [rax + 0x718] 	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x4000879	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x400087d	        0x4883ec08	                              sub rsp, 8	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x4000881	            0x6a00	                                  push 0	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x4000883	    0x41b9ffffffff	                     mov r9d, 0xffffffff	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x4000889	          0x4989c8	                             mov r8, rcx	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x400088c	      0xb900000000	                              mov ecx, 0	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x4000891	      0xbe01000000	                              mov esi, 1	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x4000896	          0x4889c7	                            mov rdi, rax	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x4000899	      0xe800000000	                          call 0x400089e	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x400089e	        0x4883c410	                           add rsp, 0x10	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x40008a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       484	ftp.c	FUNCTION_7
0x40008a6	    0xc68070060000	               mov byte [rax + 0x670], 1	       484	ftp.c	FUNCTION_7
0x40008ad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       485	ftp.c	FUNCTION_7
0x40008b1	      0xbe00000000	                              mov esi, 0	       485	ftp.c	FUNCTION_7
0x40008b6	          0x4889c7	                            mov rdi, rax	       485	ftp.c	FUNCTION_7
0x40008b9	      0xe8c6040000	                         call sym._state	       485	ftp.c	FUNCTION_7
0x40008be	      0xb800000000	                              mov eax, 0	       487	ftp.c	FUNCTION_7
0x40008c3	              0xc9	                                   leave	       488	ftp.c	FUNCTION_7
0x40008c4	              0xc3	                                     ret	       488	ftp.c	FUNCTION_7
control_address	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,1:DO,0:WHILE,0:CALL,0	18
0x400304c	              0x55	                                push rbp	      1811	ftp.c	FUNCTION_31
0x400304d	          0x4889e5	                            mov rbp, rsp	      1811	ftp.c	FUNCTION_31
0x4003050	        0x48897df8	                mov qword [rbp - 8], rdi	      1811	ftp.c	FUNCTION_31
0x4003054	        0x488b45f8	                mov rax, qword [rbp - 8]	      1816	ftp.c	FUNCTION_31	IF_1
0x4003058	     0xfb680a90300	          movzx eax, byte [rax + 0x3a9] 	      1816	ftp.c	FUNCTION_31	IF_1
0x400305f	            0x84c0	                             test al, al	      1816	ftp.c	FUNCTION_31	IF_1
0x4003061	            0x750f	                           jne 0x4003072	      1816	ftp.c	FUNCTION_31	IF_1
0x4003063	        0x488b45f8	                mov rax, qword [rbp - 8]	      1816	ftp.c	FUNCTION_31	IF_1
0x4003067	     0xfb6809f0300	          movzx eax, byte [rax + 0x39f] 	      1816	ftp.c	FUNCTION_31	IF_1
0x400306e	            0x84c0	                             test al, al	      1816	ftp.c	FUNCTION_31	IF_1
0x4003070	            0x740d	                            je 0x400307f	      1816	ftp.c	FUNCTION_31	IF_1
0x4003072	        0x488b45f8	                mov rax, qword [rbp - 8]	      1817	ftp.c	FUNCTION_31	IF_1
0x4003076	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	      1817	ftp.c	FUNCTION_31	IF_1
0x400307d	            0xeb0a	                           jmp 0x4003089	      1817	ftp.c	FUNCTION_31	IF_1
0x400307f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1819	ftp.c	FUNCTION_31
0x4003083	    0x480590000000	                           add rax, 0x90	      1819	ftp.c	FUNCTION_31
0x4003089	              0x5d	                                 pop rbp	      1820	ftp.c	FUNCTION_31
0x400308a	              0xc3	                                     ret	      1820	ftp.c	FUNCTION_31
ftp_state_quote	FOR,0:functions,0:SWITCH,2:ELSE,5:IF,8:DO,0:WHILE,1:CALL,4	184
0x4002c7b	              0x55	                                push rbp	      1685	ftp.c	FUNCTION_29
0x4002c7c	          0x4889e5	                            mov rbp, rsp	      1685	ftp.c	FUNCTION_29
0x4002c7f	        0x4883ec50	                           sub rsp, 0x50	      1685	ftp.c	FUNCTION_29
0x4002c83	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1685	ftp.c	FUNCTION_29
0x4002c87	            0x89f0	                            mov eax, esi	      1685	ftp.c	FUNCTION_29
0x4002c89	          0x8955b0	             mov dword [rbp - 0x50], edx	      1685	ftp.c	FUNCTION_29
0x4002c8c	          0x8845b4	               mov byte [rbp - 0x4c], al	      1685	ftp.c	FUNCTION_29
0x4002c8f	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      1686	ftp.c	FUNCTION_29
0x4002c96	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1687	ftp.c	FUNCTION_29
0x4002c9a	          0x488b00	                    mov rax, qword [rax]	      1687	ftp.c	FUNCTION_29
0x4002c9d	        0x488945e8	             mov qword [rbp - 0x18], rax	      1687	ftp.c	FUNCTION_29
0x4002ca1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1688	ftp.c	FUNCTION_29
0x4002ca5	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1688	ftp.c	FUNCTION_29
0x4002cac	        0x488945f0	             mov qword [rbp - 0x10], rax	      1688	ftp.c	FUNCTION_29
0x4002cb0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1689	ftp.c	FUNCTION_29
0x4002cb4	    0x480550060000	                          add rax, 0x650	      1689	ftp.c	FUNCTION_29
0x4002cba	        0x488945f8	                mov qword [rbp - 8], rax	      1689	ftp.c	FUNCTION_29
0x4002cbe	        0xc645cf00	                mov byte [rbp - 0x31], 0	      1690	ftp.c	FUNCTION_29
0x4002cc2	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1693	ftp.c	FUNCTION_29	SWITCH_1
0x4002cc5	          0x83f80d	                            cmp eax, 0xd	      1693	ftp.c	FUNCTION_29	SWITCH_1
0x4002cc8	            0x720a	                            jb 0x4002cd4	      1693	ftp.c	FUNCTION_29	SWITCH_1
0x4002cca	          0x83f80e	                            cmp eax, 0xe	      1693	ftp.c	FUNCTION_29	SWITCH_1
0x4002ccd	            0x7616	                           jbe 0x4002ce5	      1693	ftp.c	FUNCTION_29	SWITCH_1
0x4002ccf	          0x83f80f	                            cmp eax, 0xf	      1693	ftp.c	FUNCTION_29	SWITCH_1
0x4002cd2	            0x7422	                            je 0x4002cf6	      1693	ftp.c	FUNCTION_29	SWITCH_1
0x4002cd4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1696	ftp.c	FUNCTION_29	SWITCH_1
0x4002cd8	    0x488b80780500	           mov rax, qword [rax + 0x578] 	      1696	ftp.c	FUNCTION_29	SWITCH_1
0x4002cdf	        0x488945d8	             mov qword [rbp - 0x28], rax	      1696	ftp.c	FUNCTION_29	SWITCH_1
0x4002ce3	            0xeb21	                           jmp 0x4002d06	      1697	ftp.c	FUNCTION_29	SWITCH_1
0x4002ce5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1700	ftp.c	FUNCTION_29	SWITCH_1
0x4002ce9	    0x488b80880500	           mov rax, qword [rax + 0x588] 	      1700	ftp.c	FUNCTION_29	SWITCH_1
0x4002cf0	        0x488945d8	             mov qword [rbp - 0x28], rax	      1700	ftp.c	FUNCTION_29	SWITCH_1
0x4002cf4	            0xeb10	                           jmp 0x4002d06	      1701	ftp.c	FUNCTION_29	SWITCH_1
0x4002cf6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1703	ftp.c	FUNCTION_29	SWITCH_1
0x4002cfa	    0x488b80800500	           mov rax, qword [rax + 0x580] 	      1703	ftp.c	FUNCTION_29	SWITCH_1
0x4002d01	        0x488945d8	             mov qword [rbp - 0x28], rax	      1703	ftp.c	FUNCTION_29	SWITCH_1
0x4002d05	              0x90	                                     nop	      1704	ftp.c	FUNCTION_29	SWITCH_1
0x4002d06	        0x807db400	                cmp byte [rbp - 0x4c], 0	      1713	ftp.c	FUNCTION_29	IF_1
0x4002d0a	            0x7410	                            je 0x4002d1c	      1713	ftp.c	FUNCTION_29	IF_1
0x4002d0c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1714	ftp.c	FUNCTION_29	IF_1
0x4002d10	    0xc780b0000000	               mov dword [rax + 0xb0], 0	      1714	ftp.c	FUNCTION_29	IF_1
0x4002d1a	            0xeb17	                           jmp 0x4002d33	      1714	ftp.c	FUNCTION_29	IF_1
0x4002d1c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1716	ftp.c	FUNCTION_29	ELSE_1
0x4002d20	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      1716	ftp.c	FUNCTION_29	ELSE_1
0x4002d26	          0x8d5001	                      lea edx, [rax + 1]	      1716	ftp.c	FUNCTION_29	ELSE_1
0x4002d29	        0x488b45f8	                mov rax, qword [rbp - 8]	      1716	ftp.c	FUNCTION_29	ELSE_1
0x4002d2d	    0x8990b0000000	             mov dword [rax + 0xb0], edx	      1716	ftp.c	FUNCTION_29	ELSE_1
0x4002d33	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1718	ftp.c	FUNCTION_29	ELSE_1	IF_2
0x4002d38	     0xf84b1000000	                            je 0x4002def	      1718	ftp.c	FUNCTION_29	ELSE_1	IF_2
0x4002d3e	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1719	ftp.c	FUNCTION_29	ELSE_1	IF_2
0x4002d45	            0xeb10	                           jmp 0x4002d57	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002d47	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1723	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002d4b	        0x488b4008	                mov rax, qword [rax + 8]	      1723	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002d4f	        0x488945d8	             mov qword [rbp - 0x28], rax	      1723	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002d53	        0x8345d401	               add dword [rbp - 0x2c], 1	      1724	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002d57	        0x488b45f8	                mov rax, qword [rbp - 8]	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002d5b	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002d61	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002d64	            0x7e07	                           jle 0x4002d6d	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002d66	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002d6b	            0x75da	                           jne 0x4002d47	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002d6d	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1726	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002d72	            0x747b	                            je 0x4002def	      1726	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002d74	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1727	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002d78	          0x488b00	                    mov rax, qword [rax]	      1727	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002d7b	        0x488945e0	             mov qword [rbp - 0x20], rax	      1727	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002d7f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1728	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	IF_4
0x4002d83	           0xfb600	                   movzx eax, byte [rax]	      1728	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	IF_4
0x4002d86	            0x3c2a	                            cmp al, 0x2a	      1728	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	IF_4
0x4002d88	            0x7515	                           jne 0x4002d9f	      1728	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	IF_4
0x4002d8a	      0x488345e001	               add qword [rbp - 0x20], 1	      1729	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	IF_4
0x4002d8f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1730	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	IF_4
0x4002d93	    0xc780b4000000	               mov dword [rax + 0xb4], 1	      1730	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	IF_4
0x4002d9d	            0xeb0e	                           jmp 0x4002dad	      1730	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	IF_4
0x4002d9f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1733	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	ELSE_2
0x4002da3	    0xc780b4000000	               mov dword [rax + 0xb4], 0	      1733	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	ELSE_2
0x4002dad	        0x488b45f8	                mov rax, qword [rbp - 8]	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002db1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002db5	    0x488d35000000	                   lea rsi, [0x04002dbc]	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002dbc	          0x4889c7	                            mov rdi, rax	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002dbf	      0xb800000000	                              mov eax, 0	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002dc4	      0xe800000000	                          call 0x4002dc9	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002dc9	          0x8945d0	             mov dword [rbp - 0x30], eax	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002dcc	        0x837dd000	               cmp dword [rbp - 0x30], 0	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002dd0	            0x7408	                            je 0x4002dda	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002dd2	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002dd5	      0xe971010000	                           jmp 0x4002f4b	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002dda	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1736	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002ddd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1736	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002de1	            0x89d6	                            mov esi, edx	      1736	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002de3	          0x4889c7	                            mov rdi, rax	      1736	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002de6	      0xe899dfffff	                         call sym._state	      1736	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002deb	        0xc645cf01	                mov byte [rbp - 0x31], 1	      1737	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x4002def	         0xfb645cf	            movzx eax, byte [rbp - 0x31]	      1741	ftp.c	FUNCTION_29	IF_5
0x4002df3	          0x83f001	                              xor eax, 1	      1741	ftp.c	FUNCTION_29	IF_5
0x4002df6	            0x84c0	                             test al, al	      1741	ftp.c	FUNCTION_29	IF_5
0x4002df8	     0xf844a010000	                            je 0x4002f48	      1741	ftp.c	FUNCTION_29	IF_5
0x4002dfe	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1743	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002e01	          0x83f80e	                            cmp eax, 0xe	      1743	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002e04	     0xf8427010000	                            je 0x4002f31	      1743	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002e0a	          0x83f80f	                            cmp eax, 0xf	      1743	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002e0d	     0xf8434010000	                            je 0x4002f47	      1743	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002e13	          0x83f80d	                            cmp eax, 0xd	      1743	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002e16	            0x7414	                            je 0x4002e2c	      1743	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002e18	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1746	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_1
0x4002e1c	          0x4889c7	                            mov rdi, rax	      1746	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_1
0x4002e1f	      0xe8cbe1ffff	                  call sym.ftp_state_cwd	      1746	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_1
0x4002e24	          0x8945d0	             mov dword [rbp - 0x30], eax	      1746	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_1
0x4002e27	      0xe91c010000	                           jmp 0x4002f48	      1747	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002e2c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1749	ftp.c	FUNCTION_29	IF_5	SWITCH_2	IF_6
0x4002e30	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1749	ftp.c	FUNCTION_29	IF_5	SWITCH_2	IF_6
0x4002e33	            0x85c0	                           test eax, eax	      1749	ftp.c	FUNCTION_29	IF_5	SWITCH_2	IF_6
0x4002e35	            0x7416	                            je 0x4002e4d	      1749	ftp.c	FUNCTION_29	IF_5	SWITCH_2	IF_6
0x4002e37	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1750	ftp.c	FUNCTION_29	IF_5	SWITCH_2	IF_6
0x4002e3b	      0xbe00000000	                              mov esi, 0	      1750	ftp.c	FUNCTION_29	IF_5	SWITCH_2	IF_6
0x4002e40	          0x4889c7	                            mov rdi, rax	      1750	ftp.c	FUNCTION_29	IF_5	SWITCH_2	IF_6
0x4002e43	      0xe83cdfffff	                         call sym._state	      1750	ftp.c	FUNCTION_29	IF_5	SWITCH_2	IF_6
0x4002e48	      0xe9fb000000	                           jmp 0x4002f48	      1773	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002e4d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1752	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7
0x4002e51	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	      1752	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7
0x4002e58	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      1752	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7
0x4002e5c	            0x743c	                            je 0x4002e9a	      1752	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7
0x4002e5e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1753	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_2
0x4002e62	    0x488b90d80000	            mov rdx, qword [rax + 0xd8] 	      1753	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_2
0x4002e69	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1753	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_2
0x4002e6d	          0x4889d6	                            mov rsi, rdx	      1753	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_2
0x4002e70	          0x4889c7	                            mov rdi, rax	      1753	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_2
0x4002e73	      0xe800000000	                          call 0x4002e78	      1753	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_2
0x4002e78	        0x488b45f8	                mov rax, qword [rbp - 8]	      1754	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_3
0x4002e7c	    0x488b90d80000	            mov rdx, qword [rax + 0xd8] 	      1754	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_3
0x4002e83	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1754	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_3
0x4002e87	          0x4889d6	                            mov rsi, rdx	      1754	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_3
0x4002e8a	          0x4889c7	                            mov rdi, rax	      1754	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_3
0x4002e8d	      0xe8fe0f0000	                 call sym.ftp_state_retr	      1754	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_3
0x4002e92	          0x8945d0	             mov dword [rbp - 0x30], eax	      1754	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_3
0x4002e95	      0xe9ae000000	                           jmp 0x4002f48	      1773	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002e9a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1757	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002e9e	     0xfb680ff0700	          movzx eax, byte [rax + 0x7ff] 	      1757	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002ea5	            0x84c0	                             test al, al	      1757	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002ea7	            0x7444	                            je 0x4002eed	      1757	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002ea9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002ead	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002eb4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002eb8	    0x488d35000000	                   lea rsi, [0x04002ebf]	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002ebf	          0x4889c7	                            mov rdi, rax	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002ec2	      0xb800000000	                              mov eax, 0	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002ec7	      0xe800000000	                          call 0x4002ecc	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002ecc	          0x8945d0	             mov dword [rbp - 0x30], eax	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002ecf	        0x837dd000	               cmp dword [rbp - 0x30], 0	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002ed3	            0x7405	                            je 0x4002eda	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002ed5	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002ed8	            0xeb71	                           jmp 0x4002f4b	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002eda	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1765	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002ede	      0xbe20000000	                           mov esi, 0x20	      1765	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002ee3	          0x4889c7	                            mov rdi, rax	      1765	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002ee6	      0xe899deffff	                         call sym._state	      1765	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002eeb	            0xeb5b	                           jmp 0x4002f48	      1773	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002eed	        0x488b45f8	                mov rax, qword [rbp - 8]	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5
0x4002ef1	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5
0x4002ef8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5
0x4002efc	    0x488d35000000	                   lea rsi, [0x04002f03]	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5
0x4002f03	          0x4889c7	                            mov rdi, rax	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5
0x4002f06	      0xb800000000	                              mov eax, 0	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5
0x4002f0b	      0xe800000000	                          call 0x4002f10	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5
0x4002f10	          0x8945d0	             mov dword [rbp - 0x30], eax	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5
0x4002f13	        0x837dd000	               cmp dword [rbp - 0x30], 0	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5
0x4002f17	            0x7405	                            je 0x4002f1e	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5
0x4002f19	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5
0x4002f1c	            0xeb2d	                           jmp 0x4002f4b	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5
0x4002f1e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1769	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5
0x4002f22	      0xbe18000000	                           mov esi, 0x18	      1769	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5
0x4002f27	          0x4889c7	                            mov rdi, rax	      1769	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5
0x4002f2a	      0xe855deffff	                         call sym._state	      1769	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5
0x4002f2f	            0xeb17	                           jmp 0x4002f48	      1773	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002f31	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1775	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_4
0x4002f35	      0xbe00000000	                              mov esi, 0	      1775	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_4
0x4002f3a	          0x4889c7	                            mov rdi, rax	      1775	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_4
0x4002f3d	      0xe8cbf9ffff	             call sym.ftp_state_ul_setup	      1775	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_4
0x4002f42	          0x8945d0	             mov dword [rbp - 0x30], eax	      1775	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_4
0x4002f45	            0xeb01	                           jmp 0x4002f48	      1776	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002f47	              0x90	                                     nop	      1778	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x4002f48	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1782	ftp.c	FUNCTION_29
0x4002f4b	              0xc9	                                   leave	      1783	ftp.c	FUNCTION_29
0x4002f4c	              0xc3	                                     ret	      1783	ftp.c	FUNCTION_29
ftp_state_port_resp	FOR,0:functions,0:SWITCH,0:ELSE,2:IF,3:DO,0:WHILE,0:CALL,5	62
0x40037ce	              0x55	                                push rbp	      2010	ftp.c	FUNCTION_33
0x40037cf	          0x4889e5	                            mov rbp, rsp	      2010	ftp.c	FUNCTION_33
0x40037d2	        0x4883ec30	                           sub rsp, 0x30	      2010	ftp.c	FUNCTION_33
0x40037d6	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2010	ftp.c	FUNCTION_33
0x40037da	          0x8975d4	             mov dword [rbp - 0x2c], esi	      2010	ftp.c	FUNCTION_33
0x40037dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2011	ftp.c	FUNCTION_33
0x40037e1	          0x488b00	                    mov rax, qword [rax]	      2011	ftp.c	FUNCTION_33
0x40037e4	        0x488945f0	             mov qword [rbp - 0x10], rax	      2011	ftp.c	FUNCTION_33
0x40037e8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2012	ftp.c	FUNCTION_33
0x40037ec	    0x480550060000	                          add rax, 0x650	      2012	ftp.c	FUNCTION_33
0x40037f2	        0x488945f8	                mov qword [rbp - 8], rax	      2012	ftp.c	FUNCTION_33
0x40037f6	        0x488b45f8	                mov rax, qword [rbp - 8]	      2013	ftp.c	FUNCTION_33
0x40037fa	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      2013	ftp.c	FUNCTION_33
0x4003800	          0x8945ec	             mov dword [rbp - 0x14], eax	      2013	ftp.c	FUNCTION_33
0x4003803	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      2014	ftp.c	FUNCTION_33
0x400380a	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2018	ftp.c	FUNCTION_33	IF_1
0x400380d	      0x2dc8000000	                           sub eax, 0xc8	      2018	ftp.c	FUNCTION_33	IF_1
0x4003812	          0x83f863	                           cmp eax, 0x63	      2018	ftp.c	FUNCTION_33	IF_1
0x4003815	            0x766a	                           jbe 0x4003881	      2018	ftp.c	FUNCTION_33	IF_1
0x4003817	        0x837dec00	               cmp dword [rbp - 0x14], 0	      2021	ftp.c	FUNCTION_33	IF_1	IF_2
0x400381b	            0x7523	                           jne 0x4003840	      2021	ftp.c	FUNCTION_33	IF_1	IF_2
0x400381d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2022	ftp.c	FUNCTION_33	IF_1	IF_2	CALL_1
0x4003821	    0x488d35000000	                   lea rsi, [0x04003828]	      2022	ftp.c	FUNCTION_33	IF_1	IF_2	CALL_1
0x4003828	          0x4889c7	                            mov rdi, rax	      2022	ftp.c	FUNCTION_33	IF_1	IF_2	CALL_1
0x400382b	      0xb800000000	                              mov eax, 0	      2022	ftp.c	FUNCTION_33	IF_1	IF_2	CALL_1
0x4003830	      0xe800000000	                          call 0x4003835	      2022	ftp.c	FUNCTION_33	IF_1	IF_2	CALL_1
0x4003835	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2023	ftp.c	FUNCTION_33	IF_1	IF_2
0x4003839	    0xc680ad030000	               mov byte [rax + 0x3ad], 0	      2023	ftp.c	FUNCTION_33	IF_1	IF_2
0x4003840	        0x8345ec01	               add dword [rbp - 0x14], 1	      2025	ftp.c	FUNCTION_33	IF_1
0x4003844	        0x837dec02	               cmp dword [rbp - 0x14], 2	      2027	ftp.c	FUNCTION_33	IF_1	IF_3
0x4003848	            0x7521	                           jne 0x400386b	      2027	ftp.c	FUNCTION_33	IF_1	IF_3
0x400384a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2028	ftp.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x400384e	    0x488d35000000	                   lea rsi, [0x04003855]	      2028	ftp.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4003855	          0x4889c7	                            mov rdi, rax	      2028	ftp.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4003858	      0xb800000000	                              mov eax, 0	      2028	ftp.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x400385d	      0xe800000000	                          call 0x4003862	      2028	ftp.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4003862	    0xc745e81e0000	           mov dword [rbp - 0x18], 0x1e 	      2029	ftp.c	FUNCTION_33	IF_1	IF_3
0x4003869	            0xeb53	                           jmp 0x40038be	      2029	ftp.c	FUNCTION_33	IF_1	IF_3
0x400386b	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2033	ftp.c	FUNCTION_33	IF_1	CALL_3
0x400386e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2033	ftp.c	FUNCTION_33	IF_1	CALL_3
0x4003872	            0x89d6	                            mov esi, edx	      2033	ftp.c	FUNCTION_33	IF_1	CALL_3
0x4003874	          0x4889c7	                            mov rdi, rax	      2033	ftp.c	FUNCTION_33	IF_1	CALL_3
0x4003877	      0xe829d9ffff	             call sym.ftp_state_use_port	      2033	ftp.c	FUNCTION_33	IF_1	CALL_3
0x400387c	          0x8945e8	             mov dword [rbp - 0x18], eax	      2033	ftp.c	FUNCTION_33	IF_1	CALL_3
0x400387f	            0xeb3d	                           jmp 0x40038be	      2033	ftp.c	FUNCTION_33	IF_1	CALL_3
0x4003881	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2036	ftp.c	FUNCTION_33	ELSE_2	CALL_4
0x4003885	    0x488d35000000	                   lea rsi, [0x0400388c]	      2036	ftp.c	FUNCTION_33	ELSE_2	CALL_4
0x400388c	          0x4889c7	                            mov rdi, rax	      2036	ftp.c	FUNCTION_33	ELSE_2	CALL_4
0x400388f	      0xb800000000	                              mov eax, 0	      2036	ftp.c	FUNCTION_33	ELSE_2	CALL_4
0x4003894	      0xe800000000	                          call 0x4003899	      2036	ftp.c	FUNCTION_33	ELSE_2	CALL_4
0x4003899	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2037	ftp.c	FUNCTION_33	ELSE_2
0x400389d	      0xbe00000000	                              mov esi, 0	      2037	ftp.c	FUNCTION_33	ELSE_2
0x40038a2	          0x4889c7	                            mov rdi, rax	      2037	ftp.c	FUNCTION_33	ELSE_2
0x40038a5	      0xe8dad4ffff	                         call sym._state	      2037	ftp.c	FUNCTION_33	ELSE_2
0x40038aa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2038	ftp.c	FUNCTION_33	ELSE_2	CALL_5
0x40038ae	      0xbe00000000	                              mov esi, 0	      2038	ftp.c	FUNCTION_33	ELSE_2	CALL_5
0x40038b3	          0x4889c7	                            mov rdi, rax	      2038	ftp.c	FUNCTION_33	ELSE_2	CALL_5
0x40038b6	      0xe8de450000	               call sym.ftp_dophase_done	      2038	ftp.c	FUNCTION_33	ELSE_2	CALL_5
0x40038bb	          0x8945e8	             mov dword [rbp - 0x18], eax	      2038	ftp.c	FUNCTION_33	ELSE_2	CALL_5
0x40038be	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      2041	ftp.c	FUNCTION_33
0x40038c1	              0xc9	                                   leave	      2042	ftp.c	FUNCTION_33
0x40038c2	              0xc3	                                     ret	      2042	ftp.c	FUNCTION_33
ftp_state_rest_resp	FOR,0:functions,0:SWITCH,1:ELSE,1:IF,3:DO,0:WHILE,0:CALL,3	74
0x4004345	              0x55	                                push rbp	      2304	ftp.c	FUNCTION_38
0x4004346	          0x4889e5	                            mov rbp, rsp	      2304	ftp.c	FUNCTION_38
0x4004349	        0x4883ec40	                           sub rsp, 0x40	      2304	ftp.c	FUNCTION_38
0x400434d	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2304	ftp.c	FUNCTION_38
0x4004351	          0x8975c4	             mov dword [rbp - 0x3c], esi	      2304	ftp.c	FUNCTION_38
0x4004354	          0x8955c0	             mov dword [rbp - 0x40], edx	      2304	ftp.c	FUNCTION_38
0x4004357	    0x64488b042528	                mov rax, qword fs:[0x28]	      2304	ftp.c	FUNCTION_38
0x4004360	        0x488945f8	                mov qword [rbp - 8], rax	      2304	ftp.c	FUNCTION_38
0x4004364	            0x31c0	                            xor eax, eax	      2304	ftp.c	FUNCTION_38
0x4004366	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      2305	ftp.c	FUNCTION_38
0x400436d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2306	ftp.c	FUNCTION_38
0x4004371	    0x480550060000	                          add rax, 0x650	      2306	ftp.c	FUNCTION_38
0x4004377	        0x488945d8	             mov qword [rbp - 0x28], rax	      2306	ftp.c	FUNCTION_38
0x400437b	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2308	ftp.c	FUNCTION_38	SWITCH_1
0x400437e	          0x83f81b	                           cmp eax, 0x1b	      2308	ftp.c	FUNCTION_38	SWITCH_1
0x4004381	            0x746f	                            je 0x40043f2	      2308	ftp.c	FUNCTION_38	SWITCH_1
0x4004383	    0x817dc45e0100	          cmp dword [rbp - 0x3c], 0x15e 	      2312	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x400438a	            0x7555	                           jne 0x40043e1	      2312	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x400438c	    0x48b841636365	          movabs rax, 0x722d747065636341	      2313	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x4004396	        0x488945e0	             mov qword [rbp - 0x20], rax	      2313	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x400439a	    0x48b8616e6765	          movabs rax, 0x62203a7365676e61	      2313	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x40043a4	        0x488945e8	             mov qword [rbp - 0x18], rax	      2313	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x40043a8	    0x48b879746573	               movabs rax, 0xa0d73657479	      2313	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x40043b2	        0x488945f0	             mov qword [rbp - 0x10], rax	      2313	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x40043b6	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2314	ftp.c	FUNCTION_38	SWITCH_1	IF_1	CALL_1
0x40043ba	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2314	ftp.c	FUNCTION_38	SWITCH_1	IF_1	CALL_1
0x40043be	      0xb900000000	                              mov ecx, 0	      2314	ftp.c	FUNCTION_38	SWITCH_1	IF_1	CALL_1
0x40043c3	      0xbe03000000	                              mov esi, 3	      2314	ftp.c	FUNCTION_38	SWITCH_1	IF_1	CALL_1
0x40043c8	          0x4889c7	                            mov rdi, rax	      2314	ftp.c	FUNCTION_38	SWITCH_1	IF_1	CALL_1
0x40043cb	      0xe800000000	                          call 0x40043d0	      2314	ftp.c	FUNCTION_38	SWITCH_1	IF_1	CALL_1
0x40043d0	          0x8945d4	             mov dword [rbp - 0x2c], eax	      2314	ftp.c	FUNCTION_38	SWITCH_1	IF_1	CALL_1
0x40043d3	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      2315	ftp.c	FUNCTION_38	SWITCH_1	IF_1	IF_2
0x40043d7	            0x7408	                            je 0x40043e1	      2315	ftp.c	FUNCTION_38	SWITCH_1	IF_1	IF_2
0x40043d9	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2316	ftp.c	FUNCTION_38	SWITCH_1	IF_1	IF_2
0x40043dc	      0xe984000000	                           jmp 0x4004465	      2316	ftp.c	FUNCTION_38	SWITCH_1	IF_1	IF_2
0x40043e1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2319	ftp.c	FUNCTION_38	SWITCH_1	CALL_2
0x40043e5	          0x4889c7	                            mov rdi, rax	      2319	ftp.c	FUNCTION_38	SWITCH_1	CALL_2
0x40043e8	      0xe8ecddffff	     call sym.ftp_state_prepare_transfer	      2319	ftp.c	FUNCTION_38	SWITCH_1	CALL_2
0x40043ed	          0x8945d4	             mov dword [rbp - 0x2c], eax	      2319	ftp.c	FUNCTION_38	SWITCH_1	CALL_2
0x40043f0	            0xeb70	                           jmp 0x4004462	      2320	ftp.c	FUNCTION_38	SWITCH_1
0x40043f2	    0x817dc45e0100	          cmp dword [rbp - 0x3c], 0x15e 	      2323	ftp.c	FUNCTION_38	SWITCH_1	IF_3
0x40043f9	            0x7424	                            je 0x400441f	      2323	ftp.c	FUNCTION_38	SWITCH_1	IF_3
0x40043fb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2324	ftp.c	FUNCTION_38	SWITCH_1	IF_3	CALL_3
0x40043ff	          0x488b00	                    mov rax, qword [rax]	      2324	ftp.c	FUNCTION_38	SWITCH_1	IF_3	CALL_3
0x4004402	    0x488d35000000	                   lea rsi, [0x04004409]	      2324	ftp.c	FUNCTION_38	SWITCH_1	IF_3	CALL_3
0x4004409	          0x4889c7	                            mov rdi, rax	      2324	ftp.c	FUNCTION_38	SWITCH_1	IF_3	CALL_3
0x400440c	      0xb800000000	                              mov eax, 0	      2324	ftp.c	FUNCTION_38	SWITCH_1	IF_3	CALL_3
0x4004411	      0xe800000000	                          call 0x4004416	      2324	ftp.c	FUNCTION_38	SWITCH_1	IF_3	CALL_3
0x4004416	    0xc745d41f0000	           mov dword [rbp - 0x2c], 0x1f 	      2325	ftp.c	FUNCTION_38	SWITCH_1	IF_3
0x400441d	            0xeb42	                           jmp 0x4004461	      2331	ftp.c	FUNCTION_38	SWITCH_1
0x400441f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x4004423	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x400442a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x400442e	    0x488d35000000	                   lea rsi, [0x04004435]	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x4004435	          0x4889c7	                            mov rdi, rax	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x4004438	      0xb800000000	                              mov eax, 0	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x400443d	      0xe800000000	                          call 0x4004442	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x4004442	          0x8945d4	             mov dword [rbp - 0x2c], eax	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x4004445	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x4004449	            0x7405	                            je 0x4004450	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x400444b	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x400444e	            0xeb15	                           jmp 0x4004465	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x4004450	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2329	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x4004454	      0xbe20000000	                           mov esi, 0x20	      2329	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x4004459	          0x4889c7	                            mov rdi, rax	      2329	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x400445c	      0xe823c9ffff	                         call sym._state	      2329	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x4004461	              0x90	                                     nop	      2331	ftp.c	FUNCTION_38	SWITCH_1
0x4004462	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2334	ftp.c	FUNCTION_38
0x4004465	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2335	ftp.c	FUNCTION_38
0x4004469	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2335	ftp.c	FUNCTION_38
0x4004472	            0x7405	                            je 0x4004479	      2335	ftp.c	FUNCTION_38
0x4004474	      0xe800000000	                          call 0x4004479	      2335	ftp.c	FUNCTION_38
0x4004479	              0xc9	                                   leave	      2335	ftp.c	FUNCTION_38
0x400447a	              0xc3	                                     ret	      2335	ftp.c	FUNCTION_38
ftp_state_get_resp	FOR,0:functions,0:SWITCH,0:ELSE,5:IF,14:DO,0:WHILE,1:CALL,9	205
0x40045a0	              0x55	                                push rbp	      2377	ftp.c	FUNCTION_40
0x40045a1	          0x4889e5	                            mov rbp, rsp	      2377	ftp.c	FUNCTION_40
0x40045a4	        0x4883ec60	                           sub rsp, 0x60	      2377	ftp.c	FUNCTION_40
0x40045a8	        0x48897da8	             mov qword [rbp - 0x58], rdi	      2377	ftp.c	FUNCTION_40
0x40045ac	          0x8975a4	             mov dword [rbp - 0x5c], esi	      2377	ftp.c	FUNCTION_40
0x40045af	          0x8955a0	             mov dword [rbp - 0x60], edx	      2377	ftp.c	FUNCTION_40
0x40045b2	    0x64488b042528	                mov rax, qword fs:[0x28]	      2377	ftp.c	FUNCTION_40
0x40045bb	        0x488945f8	                mov qword [rbp - 8], rax	      2377	ftp.c	FUNCTION_40
0x40045bf	            0x31c0	                            xor eax, eax	      2377	ftp.c	FUNCTION_40
0x40045c1	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      2378	ftp.c	FUNCTION_40
0x40045c8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2379	ftp.c	FUNCTION_40
0x40045cc	          0x488b00	                    mov rax, qword [rax]	      2379	ftp.c	FUNCTION_40
0x40045cf	        0x488945d8	             mov qword [rbp - 0x28], rax	      2379	ftp.c	FUNCTION_40
0x40045d3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2380	ftp.c	FUNCTION_40
0x40045d7	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      2380	ftp.c	FUNCTION_40
0x40045de	        0x488945e0	             mov qword [rbp - 0x20], rax	      2380	ftp.c	FUNCTION_40
0x40045e2	    0x817da4960000	           cmp dword [rbp - 0x5c], 0x96 	      2382	ftp.c	FUNCTION_40	IF_1
0x40045e9	            0x740a	                            je 0x40045f5	      2382	ftp.c	FUNCTION_40	IF_1
0x40045eb	        0x837da47d	           cmp dword [rbp - 0x5c], 0x7d 	      2382	ftp.c	FUNCTION_40	IF_1
0x40045ef	     0xf856a020000	                           jne 0x400485f	      2382	ftp.c	FUNCTION_40	IF_1
0x40045f5	    0x48c745c0ffff	mov qword [rbp - 0x40], 0xffffffffffffffff	      2401	ftp.c	FUNCTION_40	IF_1
0x40045fd	        0x837da01f	           cmp dword [rbp - 0x60], 0x1f 	      2413	ftp.c	FUNCTION_40	IF_1	IF_2
0x4004601	     0xf84df000000	                            je 0x40046e6	      2413	ftp.c	FUNCTION_40	IF_1	IF_2
0x4004607	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2414	ftp.c	FUNCTION_40	IF_1	IF_2
0x400460b	     0xfb680d40700	          movzx eax, byte [rax + 0x7d4] 	      2414	ftp.c	FUNCTION_40	IF_1	IF_2
0x4004612	          0x83f001	                              xor eax, 1	      2414	ftp.c	FUNCTION_40	IF_1	IF_2
0x4004615	            0x84c0	                             test al, al	      2413	ftp.c	FUNCTION_40	IF_1	IF_2
0x4004617	     0xf84c9000000	                            je 0x40046e6	      2413	ftp.c	FUNCTION_40	IF_1	IF_2
0x400461d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2415	ftp.c	FUNCTION_40	IF_1	IF_2
0x4004621	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2415	ftp.c	FUNCTION_40	IF_1	IF_2
0x4004625	          0x4885c0	                           test rax, rax	      2414	ftp.c	FUNCTION_40	IF_1	IF_2
0x4004628	     0xf8fb8000000	                            jg 0x40046e6	      2414	ftp.c	FUNCTION_40	IF_1	IF_2
0x400462e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2424	ftp.c	FUNCTION_40	IF_1	IF_2
0x4004632	    0x488b80200d00	           mov rax, qword [rax + 0xd20] 	      2424	ftp.c	FUNCTION_40	IF_1	IF_2
0x4004639	        0x488945e8	             mov qword [rbp - 0x18], rax	      2424	ftp.c	FUNCTION_40	IF_1	IF_2
0x400463d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2425	ftp.c	FUNCTION_40	IF_1	IF_2	CALL_1
0x4004641	    0x488d35000000	                   lea rsi, [0x04004648]	      2425	ftp.c	FUNCTION_40	IF_1	IF_2	CALL_1
0x4004648	          0x4889c7	                            mov rdi, rax	      2425	ftp.c	FUNCTION_40	IF_1	IF_2	CALL_1
0x400464b	      0xe800000000	                          call 0x4004650	      2425	ftp.c	FUNCTION_40	IF_1	IF_2	CALL_1
0x4004650	        0x488945c8	             mov qword [rbp - 0x38], rax	      2425	ftp.c	FUNCTION_40	IF_1	IF_2	CALL_1
0x4004654	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      2426	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3
0x4004659	     0xf84a2000000	                            je 0x4004701	      2426	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3
0x400465f	      0x48836dc801	               sub qword [rbp - 0x38], 1	      2427	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3
0x4004664	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2427	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3
0x4004668	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2427	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3
0x400466c	          0x4829c2	                            sub rdx, rax	      2427	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3
0x400466f	          0x4889d0	                            mov rax, rdx	      2427	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3
0x4004672	        0x488945d0	             mov qword [rbp - 0x30], rax	      2427	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3
0x4004676	            0xeb2f	                           jmp 0x40046a7	      2429	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1
0x4004678	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2431	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_4
0x400467c	           0xfb600	                   movzx eax, byte [rax]	      2431	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_4
0x400467f	            0x3c28	                            cmp al, 0x28	      2431	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_4
0x4004681	            0x7432	                            je 0x40046b5	      2431	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_4
0x4004683	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2434	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_5	CALL_2
0x4004687	           0xfb600	                   movzx eax, byte [rax]	      2434	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_5	CALL_2
0x400468a	           0xfb6c0	                           movzx eax, al	      2434	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_5	CALL_2
0x400468d	            0x89c7	                            mov edi, eax	      2434	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_5	CALL_2
0x400468f	      0xe800000000	                          call 0x4004694	      2434	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_5	CALL_2
0x4004694	            0x85c0	                           test eax, eax	      2434	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_5	CALL_2
0x4004696	            0x750a	                           jne 0x40046a2	      2434	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_5	CALL_2
0x4004698	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      2435	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_5
0x40046a0	            0xeb14	                           jmp 0x40046b6	      2436	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_5
0x40046a2	      0x48836dc801	               sub qword [rbp - 0x38], 1	      2439	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1
0x40046a7	      0x48836dd001	               sub qword [rbp - 0x30], 1	      2429	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1
0x40046ac	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      2429	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1
0x40046b1	            0x75c5	                           jne 0x4004678	      2429	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1
0x40046b3	            0xeb01	                           jmp 0x40046b6	      2429	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1
0x40046b5	              0x90	                                     nop	      2432	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_4
0x40046b6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2442	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6
0x40046ba	        0x488d5001	                      lea rdx, [rax + 1]	      2442	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6
0x40046be	        0x488955c8	             mov qword [rbp - 0x38], rdx	      2442	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6
0x40046c2	          0x4885c0	                           test rax, rax	      2442	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6
0x40046c5	            0x743a	                            je 0x4004701	      2442	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6
0x40046c7	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      2444	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6	CALL_3
0x40046cb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2444	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6	CALL_3
0x40046cf	          0x4889d1	                            mov rcx, rdx	      2444	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6	CALL_3
0x40046d2	      0xba00000000	                              mov edx, 0	      2444	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6	CALL_3
0x40046d7	      0xbe00000000	                              mov esi, 0	      2444	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6	CALL_3
0x40046dc	          0x4889c7	                            mov rdi, rax	      2444	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6	CALL_3
0x40046df	      0xe800000000	                          call 0x40046e4	      2444	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6	CALL_3
0x40046e4	            0xeb1b	                           jmp 0x4004701	      2415	ftp.c	FUNCTION_40	IF_1	IF_2
0x40046e6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2448	ftp.c	FUNCTION_40	IF_1	ELSE_1	IF_7
0x40046ea	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2448	ftp.c	FUNCTION_40	IF_1	ELSE_1	IF_7
0x40046ee	          0x4885c0	                           test rax, rax	      2448	ftp.c	FUNCTION_40	IF_1	ELSE_1	IF_7
0x40046f1	            0x780f	                            js 0x4004702	      2448	ftp.c	FUNCTION_40	IF_1	ELSE_1	IF_7
0x40046f3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2449	ftp.c	FUNCTION_40	IF_1	ELSE_1	IF_7
0x40046f7	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2449	ftp.c	FUNCTION_40	IF_1	ELSE_1	IF_7
0x40046fb	        0x488945c0	             mov qword [rbp - 0x40], rax	      2449	ftp.c	FUNCTION_40	IF_1	ELSE_1	IF_7
0x40046ff	            0xeb01	                           jmp 0x4004702	      2449	ftp.c	FUNCTION_40	IF_1	ELSE_1	IF_7
0x4004701	              0x90	                                     nop	      2415	ftp.c	FUNCTION_40	IF_1	IF_2
0x4004702	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x4004706	    0x488b90d00000	            mov rdx, qword [rax + 0xd0] 	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x400470d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x4004711	          0x4839c2	                            cmp rdx, rax	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x4004714	            0x7d37	                           jge 0x400474d	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x4004716	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x400471a	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x4004721	          0x4885c0	                           test rax, rax	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x4004724	            0x7e27	                           jle 0x400474d	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x4004726	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2452	ftp.c	FUNCTION_40	IF_1	IF_8
0x400472a	    0x488b90d00000	            mov rdx, qword [rax + 0xd0] 	      2452	ftp.c	FUNCTION_40	IF_1	IF_8
0x4004731	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2452	ftp.c	FUNCTION_40	IF_1	IF_8
0x4004735	    0x488990c00000	             mov qword [rax + 0xc0], rdx	      2452	ftp.c	FUNCTION_40	IF_1	IF_8
0x400473c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2452	ftp.c	FUNCTION_40	IF_1	IF_8
0x4004740	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      2452	ftp.c	FUNCTION_40	IF_1	IF_8
0x4004747	        0x488945c0	             mov qword [rbp - 0x40], rax	      2452	ftp.c	FUNCTION_40	IF_1	IF_8
0x400474b	            0xeb1d	                           jmp 0x400476a	      2452	ftp.c	FUNCTION_40	IF_1	IF_8
0x400474d	        0x837da01f	           cmp dword [rbp - 0x60], 0x1f 	      2453	ftp.c	FUNCTION_40	IF_1	ELSE_2	IF_9
0x4004751	            0x7417	                            je 0x400476a	      2453	ftp.c	FUNCTION_40	IF_1	ELSE_2	IF_9
0x4004753	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2453	ftp.c	FUNCTION_40	IF_1	ELSE_2	IF_9
0x4004757	     0xfb680d40700	          movzx eax, byte [rax + 0x7d4] 	      2453	ftp.c	FUNCTION_40	IF_1	ELSE_2	IF_9
0x400475e	            0x84c0	                             test al, al	      2453	ftp.c	FUNCTION_40	IF_1	ELSE_2	IF_9
0x4004760	            0x7408	                            je 0x400476a	      2453	ftp.c	FUNCTION_40	IF_1	ELSE_2	IF_9
0x4004762	    0x48c745c0ffff	mov qword [rbp - 0x40], 0xffffffffffffffff	      2454	ftp.c	FUNCTION_40	IF_1	ELSE_2	IF_9
0x400476a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x400476e	    0x488b90d00000	            mov rdx, qword [rax + 0xd0] 	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x4004775	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x4004779	    0x488d35000000	                   lea rsi, [0x04004780]	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x4004780	          0x4889c7	                            mov rdi, rax	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x4004783	      0xb800000000	                              mov eax, 0	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x4004788	      0xe800000000	                          call 0x400478d	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x400478d	        0x837da01f	           cmp dword [rbp - 0x60], 0x1f 	      2459	ftp.c	FUNCTION_40	IF_1	IF_10
0x4004791	            0x741c	                            je 0x40047af	      2459	ftp.c	FUNCTION_40	IF_1	IF_10
0x4004793	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2460	ftp.c	FUNCTION_40	IF_1	IF_10	CALL_5
0x4004797	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2460	ftp.c	FUNCTION_40	IF_1	IF_10	CALL_5
0x400479b	    0x488d35000000	                   lea rsi, [0x040047a2]	      2460	ftp.c	FUNCTION_40	IF_1	IF_10	CALL_5
0x40047a2	          0x4889c7	                            mov rdi, rax	      2460	ftp.c	FUNCTION_40	IF_1	IF_10	CALL_5
0x40047a5	      0xb800000000	                              mov eax, 0	      2460	ftp.c	FUNCTION_40	IF_1	IF_10	CALL_5
0x40047aa	      0xe800000000	                          call 0x40047af	      2460	ftp.c	FUNCTION_40	IF_1	IF_10	CALL_5
0x40047af	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2464	ftp.c	FUNCTION_40	IF_1
0x40047b3	          0x8b55a0	             mov edx, dword [rbp - 0x60]	      2464	ftp.c	FUNCTION_40	IF_1
0x40047b6	    0x899010070000	            mov dword [rax + 0x710], edx	      2464	ftp.c	FUNCTION_40	IF_1
0x40047bc	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2465	ftp.c	FUNCTION_40	IF_1
0x40047c0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2465	ftp.c	FUNCTION_40	IF_1
0x40047c4	    0x488990180700	            mov qword [rax + 0x718], rdx	      2465	ftp.c	FUNCTION_40	IF_1
0x40047cb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2467	ftp.c	FUNCTION_40	IF_1	IF_11
0x40047cf	     0xfb680d70700	          movzx eax, byte [rax + 0x7d7] 	      2467	ftp.c	FUNCTION_40	IF_1	IF_11
0x40047d6	            0x84c0	                             test al, al	      2467	ftp.c	FUNCTION_40	IF_1	IF_11
0x40047d8	            0x7477	                            je 0x4004851	      2467	ftp.c	FUNCTION_40	IF_1	IF_11
0x40047da	        0x488d55bb	                   lea rdx, [rbp - 0x45]	      2470	ftp.c	FUNCTION_40	IF_1	IF_11	CALL_6
0x40047de	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2470	ftp.c	FUNCTION_40	IF_1	IF_11	CALL_6
0x40047e2	          0x4889d6	                            mov rsi, rdx	      2470	ftp.c	FUNCTION_40	IF_1	IF_11	CALL_6
0x40047e5	          0x4889c7	                            mov rdi, rax	      2470	ftp.c	FUNCTION_40	IF_1	IF_11	CALL_6
0x40047e8	      0xe8d8c0ffff	             call sym.AllowServerConnect	      2470	ftp.c	FUNCTION_40	IF_1	IF_11	CALL_6
0x40047ed	          0x8945bc	             mov dword [rbp - 0x44], eax	      2470	ftp.c	FUNCTION_40	IF_1	IF_11	CALL_6
0x40047f0	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      2471	ftp.c	FUNCTION_40	IF_1	IF_11	IF_12
0x40047f4	            0x7408	                            je 0x40047fe	      2471	ftp.c	FUNCTION_40	IF_1	IF_11	IF_12
0x40047f6	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2472	ftp.c	FUNCTION_40	IF_1	IF_11	IF_12
0x40047f9	      0xe9ca000000	                           jmp 0x40048c8	      2472	ftp.c	FUNCTION_40	IF_1	IF_11	IF_12
0x40047fe	         0xfb645bb	            movzx eax, byte [rbp - 0x45]	      2474	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x4004802	          0x83f001	                              xor eax, 1	      2474	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x4004805	            0x84c0	                             test al, al	      2474	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x4004807	     0xf84b7000000	                            je 0x40048c4	      2474	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x400480d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2475	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x4004811	    0x480550060000	                          add rax, 0x650	      2475	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x4004817	        0x488945f0	             mov qword [rbp - 0x10], rax	      2475	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x400481b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2476	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13	CALL_7
0x400481f	    0x488d35000000	                   lea rsi, [0x04004826]	      2476	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13	CALL_7
0x4004826	          0x4889c7	                            mov rdi, rax	      2476	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13	CALL_7
0x4004829	      0xb800000000	                              mov eax, 0	      2476	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13	CALL_7
0x400482e	      0xe800000000	                          call 0x4004833	      2476	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13	CALL_7
0x4004833	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2477	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x4004837	      0xbe00000000	                              mov esi, 0	      2477	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x400483c	          0x4889c7	                            mov rdi, rax	      2477	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x400483f	      0xe840c5ffff	                         call sym._state	      2477	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x4004844	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2478	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x4004848	    0xc68099000000	                mov byte [rax + 0x99], 1	      2478	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x400484f	            0xeb73	                           jmp 0x40048c4	      2382	ftp.c	FUNCTION_40	IF_1
0x4004851	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2482	ftp.c	FUNCTION_40	IF_1	CALL_8
0x4004855	          0x4889c7	                            mov rdi, rax	      2482	ftp.c	FUNCTION_40	IF_1	CALL_8
0x4004858	      0xe822bfffff	               call sym.InitiateTransfer	      2482	ftp.c	FUNCTION_40	IF_1	CALL_8
0x400485d	            0xeb69	                           jmp 0x40048c8	      2482	ftp.c	FUNCTION_40	IF_1	CALL_8
0x400485f	        0x837da01f	           cmp dword [rbp - 0x60], 0x1f 	      2485	ftp.c	FUNCTION_40	ELSE_4	IF_14
0x4004863	            0x7527	                           jne 0x400488c	      2485	ftp.c	FUNCTION_40	ELSE_4	IF_14
0x4004865	    0x817da4c20100	          cmp dword [rbp - 0x5c], 0x1c2 	      2485	ftp.c	FUNCTION_40	ELSE_4	IF_14
0x400486c	            0x751e	                           jne 0x400488c	      2485	ftp.c	FUNCTION_40	ELSE_4	IF_14
0x400486e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2487	ftp.c	FUNCTION_40	ELSE_4	IF_14
0x4004872	    0xc74018020000	               mov dword [rax + 0x18], 2	      2487	ftp.c	FUNCTION_40	ELSE_4	IF_14
0x4004879	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2488	ftp.c	FUNCTION_40	ELSE_4	IF_14
0x400487d	      0xbe00000000	                              mov esi, 0	      2488	ftp.c	FUNCTION_40	ELSE_4	IF_14
0x4004882	          0x4889c7	                            mov rdi, rax	      2488	ftp.c	FUNCTION_40	ELSE_4	IF_14
0x4004885	      0xe8fac4ffff	                         call sym._state	      2488	ftp.c	FUNCTION_40	ELSE_4	IF_14
0x400488a	            0xeb39	                           jmp 0x40048c5	      2488	ftp.c	FUNCTION_40	ELSE_4	IF_14
0x400488c	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	      2491	ftp.c	FUNCTION_40	ELSE_4	ELSE_5	CALL_9
0x400488f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2491	ftp.c	FUNCTION_40	ELSE_4	ELSE_5	CALL_9
0x4004893	    0x488d35000000	                   lea rsi, [0x0400489a]	      2491	ftp.c	FUNCTION_40	ELSE_4	ELSE_5	CALL_9
0x400489a	          0x4889c7	                            mov rdi, rax	      2491	ftp.c	FUNCTION_40	ELSE_4	ELSE_5	CALL_9
0x400489d	      0xb800000000	                              mov eax, 0	      2491	ftp.c	FUNCTION_40	ELSE_4	ELSE_5	CALL_9
0x40048a2	      0xe800000000	                          call 0x40048a7	      2491	ftp.c	FUNCTION_40	ELSE_4	ELSE_5	CALL_9
0x40048a7	        0x837da020	           cmp dword [rbp - 0x60], 0x20 	      2492	ftp.c	FUNCTION_40	ELSE_4	ELSE_5
0x40048ab	            0x7510	                           jne 0x40048bd	      2492	ftp.c	FUNCTION_40	ELSE_4	ELSE_5
0x40048ad	    0x817da4260200	          cmp dword [rbp - 0x5c], 0x226 	      2492	ftp.c	FUNCTION_40	ELSE_4	ELSE_5
0x40048b4	            0x7507	                           jne 0x40048bd	      2492	ftp.c	FUNCTION_40	ELSE_4	ELSE_5
0x40048b6	      0xb84e000000	                           mov eax, 0x4e	      2492	ftp.c	FUNCTION_40	ELSE_4	ELSE_5
0x40048bb	            0xeb0b	                           jmp 0x40048c8	      2492	ftp.c	FUNCTION_40	ELSE_4	ELSE_5
0x40048bd	      0xb813000000	                           mov eax, 0x13	      2492	ftp.c	FUNCTION_40	ELSE_4	ELSE_5
0x40048c2	            0xeb04	                           jmp 0x40048c8	      2492	ftp.c	FUNCTION_40	ELSE_4	ELSE_5
0x40048c4	              0x90	                                     nop	      2382	ftp.c	FUNCTION_40	IF_1
0x40048c5	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2498	ftp.c	FUNCTION_40
0x40048c8	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2499	ftp.c	FUNCTION_40
0x40048cc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2499	ftp.c	FUNCTION_40
0x40048d5	            0x7405	                            je 0x40048dc	      2499	ftp.c	FUNCTION_40
0x40048d7	      0xe800000000	                          call 0x40048dc	      2499	ftp.c	FUNCTION_40
0x40048dc	              0xc9	                                   leave	      2499	ftp.c	FUNCTION_40
0x40048dd	              0xc3	                                     ret	      2499	ftp.c	FUNCTION_40
Curl_ftpsend	FOR,1:functions,0:SWITCH,0:ELSE,1:IF,5:DO,0:WHILE,0:CALL,6	78
0x40073a0	              0x55	                                push rbp	      3956	ftp.c	FUNCTION_58
0x40073a1	          0x4889e5	                            mov rbp, rsp	      3956	ftp.c	FUNCTION_58
0x40073a4	    0x4881ec400400	                          sub rsp, 0x440	      3956	ftp.c	FUNCTION_58
0x40073ab	    0x4889bdc8fbff	            mov qword [rbp - 0x438], rdi	      3956	ftp.c	FUNCTION_58
0x40073b2	    0x4889b5c0fbff	            mov qword [rbp - 0x440], rsi	      3956	ftp.c	FUNCTION_58
0x40073b9	    0x64488b042528	                mov rax, qword fs:[0x28]	      3956	ftp.c	FUNCTION_58
0x40073c2	        0x488945f8	                mov qword [rbp - 8], rax	      3956	ftp.c	FUNCTION_58
0x40073c6	            0x31c0	                            xor eax, eax	      3956	ftp.c	FUNCTION_58
0x40073c8	    0x488d85f0fbff	                  lea rax, [rbp - 0x410]	      3961	ftp.c	FUNCTION_58
0x40073cf	    0x488985e8fbff	            mov qword [rbp - 0x418], rax	      3961	ftp.c	FUNCTION_58
0x40073d6	    0xc785d4fbffff	              mov dword [rbp - 0x42c], 0	      3962	ftp.c	FUNCTION_58
0x40073e0	    0x488b85c0fbff	            mov rax, qword [rbp - 0x440]	      3967	ftp.c	FUNCTION_58	CALL_1
0x40073e7	          0x4889c7	                            mov rdi, rax	      3967	ftp.c	FUNCTION_58	CALL_1
0x40073ea	      0xe800000000	                          call 0x40073ef	      3967	ftp.c	FUNCTION_58	CALL_1
0x40073ef	    0x488985e0fbff	            mov qword [rbp - 0x420], rax	      3967	ftp.c	FUNCTION_58	CALL_1
0x40073f6	    0x4881bde0fbff	         cmp qword [rbp - 0x420], 0x3fd 	      3968	ftp.c	FUNCTION_58	IF_1
0x4007401	            0x760a	                           jbe 0x400740d	      3968	ftp.c	FUNCTION_58	IF_1
0x4007403	      0xb82b000000	                           mov eax, 0x2b	      3969	ftp.c	FUNCTION_58	IF_1
0x4007408	      0xe916010000	                           jmp 0x4007523	      3969	ftp.c	FUNCTION_58	IF_1
0x400740d	    0x488d95f0fbff	                  lea rdx, [rbp - 0x410]	      3971	ftp.c	FUNCTION_58	CALL_2
0x4007414	    0x488b85e0fbff	            mov rax, qword [rbp - 0x420]	      3971	ftp.c	FUNCTION_58	CALL_2
0x400741b	          0x4801d0	                            add rax, rdx	      3971	ftp.c	FUNCTION_58	CALL_2
0x400741e	      0x66c7000d0a	                   mov word [rax], 0xa0d	      3971	ftp.c	FUNCTION_58	CALL_2
0x4007423	        0xc6400200	                   mov byte [rax + 2], 0	      3971	ftp.c	FUNCTION_58	CALL_2
0x4007427	    0x488385e0fbff	              add qword [rbp - 0x420], 2	      3972	ftp.c	FUNCTION_58
0x400742f	    0x48c785d8fbff	              mov qword [rbp - 0x428], 0	      3973	ftp.c	FUNCTION_58
0x400743a	    0xc785d4fbffff	              mov dword [rbp - 0x42c], 0	      3975	ftp.c	FUNCTION_58	CALL_3
0x4007444	    0x83bdd4fbffff	              cmp dword [rbp - 0x42c], 0	      3977	ftp.c	FUNCTION_58	IF_2
0x400744b	            0x740b	                            je 0x4007458	      3977	ftp.c	FUNCTION_58	IF_2
0x400744d	    0x8b85d4fbffff	            mov eax, dword [rbp - 0x42c]	      3978	ftp.c	FUNCTION_58	IF_2
0x4007453	      0xe9cb000000	                           jmp 0x4007523	      3978	ftp.c	FUNCTION_58	IF_2
0x4007458	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      3984	ftp.c	FUNCTION_58	FOR_1	CALL_4
0x400745f	    0x8bb058020000	           mov esi, dword [rax + 0x258] 	      3984	ftp.c	FUNCTION_58	FOR_1	CALL_4
0x4007465	    0x488dbdd8fbff	                  lea rdi, [rbp - 0x428]	      3984	ftp.c	FUNCTION_58	FOR_1	CALL_4
0x400746c	    0x488b8de0fbff	            mov rcx, qword [rbp - 0x420]	      3984	ftp.c	FUNCTION_58	FOR_1	CALL_4
0x4007473	    0x488b95e8fbff	            mov rdx, qword [rbp - 0x418]	      3984	ftp.c	FUNCTION_58	FOR_1	CALL_4
0x400747a	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      3984	ftp.c	FUNCTION_58	FOR_1	CALL_4
0x4007481	          0x4989f8	                             mov r8, rdi	      3984	ftp.c	FUNCTION_58	FOR_1	CALL_4
0x4007484	          0x4889c7	                            mov rdi, rax	      3984	ftp.c	FUNCTION_58	FOR_1	CALL_4
0x4007487	      0xe800000000	                          call 0x400748c	      3984	ftp.c	FUNCTION_58	FOR_1	CALL_4
0x400748c	    0x8985d4fbffff	            mov dword [rbp - 0x42c], eax	      3984	ftp.c	FUNCTION_58	FOR_1	CALL_4
0x4007492	    0x83bdd4fbffff	              cmp dword [rbp - 0x42c], 0	      3991	ftp.c	FUNCTION_58	FOR_1	IF_3
0x4007499	            0x757e	                           jne 0x4007519	      3991	ftp.c	FUNCTION_58	FOR_1	IF_3
0x400749b	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      3994	ftp.c	FUNCTION_58	FOR_1	IF_4
0x40074a2	          0x488b00	                    mov rax, qword [rax]	      3994	ftp.c	FUNCTION_58	FOR_1	IF_4
0x40074a5	     0xfb680e80700	          movzx eax, byte [rax + 0x7e8] 	      3994	ftp.c	FUNCTION_58	FOR_1	IF_4
0x40074ac	            0x84c0	                             test al, al	      3994	ftp.c	FUNCTION_58	FOR_1	IF_4
0x40074ae	            0x7435	                            je 0x40074e5	      3994	ftp.c	FUNCTION_58	FOR_1	IF_4
0x40074b0	    0x488b85d8fbff	            mov rax, qword [rbp - 0x428]	      3995	ftp.c	FUNCTION_58	FOR_1	IF_4	CALL_6
0x40074b7	          0x4889c6	                            mov rsi, rax	      3995	ftp.c	FUNCTION_58	FOR_1	IF_4	CALL_6
0x40074ba	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      3995	ftp.c	FUNCTION_58	FOR_1	IF_4	CALL_6
0x40074c1	          0x488b00	                    mov rax, qword [rax]	      3995	ftp.c	FUNCTION_58	FOR_1	IF_4	CALL_6
0x40074c4	    0x488b8dc8fbff	            mov rcx, qword [rbp - 0x438]	      3995	ftp.c	FUNCTION_58	FOR_1	IF_4	CALL_6
0x40074cb	    0x488b95e8fbff	            mov rdx, qword [rbp - 0x418]	      3995	ftp.c	FUNCTION_58	FOR_1	IF_4	CALL_6
0x40074d2	          0x4989c8	                             mov r8, rcx	      3995	ftp.c	FUNCTION_58	FOR_1	IF_4	CALL_6
0x40074d5	          0x4889f1	                            mov rcx, rsi	      3995	ftp.c	FUNCTION_58	FOR_1	IF_4	CALL_6
0x40074d8	      0xbe02000000	                              mov esi, 2	      3995	ftp.c	FUNCTION_58	FOR_1	IF_4	CALL_6
0x40074dd	          0x4889c7	                            mov rdi, rax	      3995	ftp.c	FUNCTION_58	FOR_1	IF_4	CALL_6
0x40074e0	      0xe800000000	                          call 0x40074e5	      3995	ftp.c	FUNCTION_58	FOR_1	IF_4	CALL_6
0x40074e5	    0x488b95d8fbff	            mov rdx, qword [rbp - 0x428]	      3998	ftp.c	FUNCTION_58	FOR_1	IF_5
0x40074ec	    0x488b85e0fbff	            mov rax, qword [rbp - 0x420]	      3998	ftp.c	FUNCTION_58	FOR_1	IF_5
0x40074f3	          0x4839c2	                            cmp rdx, rax	      3998	ftp.c	FUNCTION_58	FOR_1	IF_5
0x40074f6	            0x7424	                            je 0x400751c	      3998	ftp.c	FUNCTION_58	FOR_1	IF_5
0x40074f8	    0x488b85d8fbff	            mov rax, qword [rbp - 0x428]	      3999	ftp.c	FUNCTION_58	FOR_1	IF_5
0x40074ff	    0x482985e0fbff	            sub qword [rbp - 0x420], rax	      3999	ftp.c	FUNCTION_58	FOR_1	IF_5
0x4007506	    0x488b85d8fbff	            mov rax, qword [rbp - 0x428]	      4000	ftp.c	FUNCTION_58	FOR_1	IF_5
0x400750d	    0x480185e8fbff	           add qword [rbp - 0x418], rax 	      4000	ftp.c	FUNCTION_58	FOR_1	IF_5
0x4007514	      0xe93fffffff	                           jmp 0x4007458	      4004	ftp.c	FUNCTION_58	FOR_1	ELSE_1
0x4007519	              0x90	                                     nop	      3992	ftp.c	FUNCTION_58	FOR_1	IF_3
0x400751a	            0xeb01	                           jmp 0x400751d	      3992	ftp.c	FUNCTION_58	FOR_1	IF_3
0x400751c	              0x90	                                     nop	      4003	ftp.c	FUNCTION_58	FOR_1	ELSE_1
0x400751d	    0x8b85d4fbffff	            mov eax, dword [rbp - 0x42c]	      4006	ftp.c	FUNCTION_58	ELSE_1
0x4007523	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4007	ftp.c	FUNCTION_58	ELSE_1
0x4007527	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4007	ftp.c	FUNCTION_58	ELSE_1
0x4007530	            0x7405	                            je 0x4007537	      4007	ftp.c	FUNCTION_58	ELSE_1
0x4007532	      0xe800000000	                          call 0x4007537	      4007	ftp.c	FUNCTION_58	ELSE_1
0x4007537	              0xc9	                                   leave	      4007	ftp.c	FUNCTION_58	ELSE_1
0x4007538	              0xc3	                                     ret	      4007	ftp.c	FUNCTION_58	ELSE_1
ftp_do_more	FOR,0:functions,0:SWITCH,0:ELSE,6:IF,27:DO,0:WHILE,0:CALL,22	296
0x40065b9	              0x55	                                push rbp	      3484	ftp.c	FUNCTION_52
0x40065ba	          0x4889e5	                            mov rbp, rsp	      3484	ftp.c	FUNCTION_52
0x40065bd	        0x4883ec40	                           sub rsp, 0x40	      3484	ftp.c	FUNCTION_52
0x40065c1	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      3484	ftp.c	FUNCTION_52
0x40065c5	        0x488975c0	             mov qword [rbp - 0x40], rsi	      3484	ftp.c	FUNCTION_52
0x40065c9	    0x64488b042528	                mov rax, qword fs:[0x28]	      3484	ftp.c	FUNCTION_52
0x40065d2	        0x488945f8	                mov qword [rbp - 8], rax	      3484	ftp.c	FUNCTION_52
0x40065d6	            0x31c0	                            xor eax, eax	      3484	ftp.c	FUNCTION_52
0x40065d8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3485	ftp.c	FUNCTION_52
0x40065dc	          0x488b00	                    mov rax, qword [rax]	      3485	ftp.c	FUNCTION_52
0x40065df	        0x488945e0	             mov qword [rbp - 0x20], rax	      3485	ftp.c	FUNCTION_52
0x40065e3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3486	ftp.c	FUNCTION_52
0x40065e7	    0x480550060000	                          add rax, 0x650	      3486	ftp.c	FUNCTION_52
0x40065ed	        0x488945e8	             mov qword [rbp - 0x18], rax	      3486	ftp.c	FUNCTION_52
0x40065f1	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      3487	ftp.c	FUNCTION_52
0x40065f8	        0xc645d900	                mov byte [rbp - 0x27], 0	      3488	ftp.c	FUNCTION_52
0x40065fc	        0xc645da00	                mov byte [rbp - 0x26], 0	      3489	ftp.c	FUNCTION_52
0x4006600	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3492	ftp.c	FUNCTION_52
0x4006604	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      3492	ftp.c	FUNCTION_52
0x400660b	        0x488945f0	             mov qword [rbp - 0x10], rax	      3492	ftp.c	FUNCTION_52
0x400660f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3495	ftp.c	FUNCTION_52	IF_1
0x4006613	     0xfb680a60300	          movzx eax, byte [rax + 0x3a6] 	      3495	ftp.c	FUNCTION_52	IF_1
0x400661a	          0x83f001	                              xor eax, 1	      3495	ftp.c	FUNCTION_52	IF_1
0x400661d	            0x84c0	                             test al, al	      3495	ftp.c	FUNCTION_52	IF_1
0x400661f	     0xf848d000000	                            je 0x40066b2	      3495	ftp.c	FUNCTION_52	IF_1
0x4006625	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3496	ftp.c	FUNCTION_52	IF_1	IF_2	CALL_1
0x4006629	          0x4889c7	                            mov rdi, rax	      3496	ftp.c	FUNCTION_52	IF_1	IF_2	CALL_1
0x400662c	      0xe800000000	                          call 0x4006631	      3496	ftp.c	FUNCTION_52	IF_1	IF_2	CALL_1
0x4006631	            0x84c0	                             test al, al	      3496	ftp.c	FUNCTION_52	IF_1	IF_2	CALL_1
0x4006633	            0x7426	                            je 0x400665b	      3496	ftp.c	FUNCTION_52	IF_1	IF_2	CALL_1
0x4006635	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3499	ftp.c	FUNCTION_52	IF_1	IF_2	CALL_2
0x4006639	      0xb900000000	                              mov ecx, 0	      3499	ftp.c	FUNCTION_52	IF_1	IF_2	CALL_2
0x400663e	      0xba00000000	                              mov edx, 0	      3499	ftp.c	FUNCTION_52	IF_1	IF_2	CALL_2
0x4006643	      0xbe01000000	                              mov esi, 1	      3499	ftp.c	FUNCTION_52	IF_1	IF_2	CALL_2
0x4006648	          0x4889c7	                            mov rdi, rax	      3499	ftp.c	FUNCTION_52	IF_1	IF_2	CALL_2
0x400664b	      0xe800000000	                          call 0x4006650	      3499	ftp.c	FUNCTION_52	IF_1	IF_2	CALL_2
0x4006650	          0x8945dc	             mov dword [rbp - 0x24], eax	      3499	ftp.c	FUNCTION_52	IF_1	IF_2	CALL_2
0x4006653	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3501	ftp.c	FUNCTION_52	IF_1	IF_2
0x4006656	      0xe9b9030000	                           jmp 0x4006a14	      3501	ftp.c	FUNCTION_52	IF_1	IF_2
0x400665b	        0x488d55d9	                   lea rdx, [rbp - 0x27]	      3504	ftp.c	FUNCTION_52	IF_1	CALL_3
0x400665f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3504	ftp.c	FUNCTION_52	IF_1	CALL_3
0x4006663	      0xbe01000000	                              mov esi, 1	      3504	ftp.c	FUNCTION_52	IF_1	CALL_3
0x4006668	          0x4889c7	                            mov rdi, rax	      3504	ftp.c	FUNCTION_52	IF_1	CALL_3
0x400666b	      0xe800000000	                          call 0x4006670	      3504	ftp.c	FUNCTION_52	IF_1	CALL_3
0x4006670	          0x8945dc	             mov dword [rbp - 0x24], eax	      3504	ftp.c	FUNCTION_52	IF_1	CALL_3
0x4006673	         0xfb645d9	            movzx eax, byte [rbp - 0x27]	      3507	ftp.c	FUNCTION_52	IF_1	IF_3
0x4006677	            0x84c0	                             test al, al	      3507	ftp.c	FUNCTION_52	IF_1	IF_3
0x4006679	            0x7537	                           jne 0x40066b2	      3507	ftp.c	FUNCTION_52	IF_1	IF_3
0x400667b	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3511	ftp.c	FUNCTION_52	IF_1	ELSE_1	IF_4
0x400667f	            0x7429	                            je 0x40066aa	      3511	ftp.c	FUNCTION_52	IF_1	ELSE_1	IF_4
0x4006681	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3511	ftp.c	FUNCTION_52	IF_1	ELSE_1	IF_4
0x4006685	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      3511	ftp.c	FUNCTION_52	IF_1	ELSE_1	IF_4
0x400668b	            0x85c0	                           test eax, eax	      3511	ftp.c	FUNCTION_52	IF_1	ELSE_1	IF_4
0x400668d	            0x751b	                           jne 0x40066aa	      3511	ftp.c	FUNCTION_52	IF_1	ELSE_1	IF_4
0x400668f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3512	ftp.c	FUNCTION_52	IF_1	ELSE_1	IF_4
0x4006693	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	      3512	ftp.c	FUNCTION_52	IF_1	ELSE_1	IF_4
0x4006699	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3514	ftp.c	FUNCTION_52	IF_1	ELSE_1	IF_4	CALL_6
0x400669d	          0x4889c7	                            mov rdi, rax	      3514	ftp.c	FUNCTION_52	IF_1	ELSE_1	IF_4	CALL_6
0x40066a0	      0xe8a8c8ffff	               call sym.ftp_epsv_disable	      3514	ftp.c	FUNCTION_52	IF_1	ELSE_1	IF_4	CALL_6
0x40066a5	      0xe96a030000	                           jmp 0x4006a14	      3514	ftp.c	FUNCTION_52	IF_1	ELSE_1	IF_4	CALL_6
0x40066aa	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3516	ftp.c	FUNCTION_52	IF_1	ELSE_1
0x40066ad	      0xe962030000	                           jmp 0x4006a14	      3516	ftp.c	FUNCTION_52	IF_1	ELSE_1
0x40066b2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3520	ftp.c	FUNCTION_52	CALL_7
0x40066b6	      0xbe01000000	                              mov esi, 1	      3520	ftp.c	FUNCTION_52	CALL_7
0x40066bb	          0x4889c7	                            mov rdi, rax	      3520	ftp.c	FUNCTION_52	CALL_7
0x40066be	      0xe800000000	                          call 0x40066c3	      3520	ftp.c	FUNCTION_52	CALL_7
0x40066c3	          0x8945dc	             mov dword [rbp - 0x24], eax	      3520	ftp.c	FUNCTION_52	CALL_7
0x40066c6	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3521	ftp.c	FUNCTION_52	IF_5
0x40066ca	            0x7408	                            je 0x40066d4	      3521	ftp.c	FUNCTION_52	IF_5
0x40066cc	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3522	ftp.c	FUNCTION_52	IF_5
0x40066cf	      0xe940030000	                           jmp 0x4006a14	      3522	ftp.c	FUNCTION_52	IF_5
0x40066d4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3524	ftp.c	FUNCTION_52	IF_6	CALL_8
0x40066d8	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	      3524	ftp.c	FUNCTION_52	IF_6	CALL_8
0x40066de	          0x83f802	                              cmp eax, 2	      3524	ftp.c	FUNCTION_52	IF_6	CALL_8
0x40066e1	            0x751a	                           jne 0x40066fd	      3524	ftp.c	FUNCTION_52	IF_6	CALL_8
0x40066e3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3524	ftp.c	FUNCTION_52	IF_6	CALL_8
0x40066e7	     0xfb680ba0300	          movzx eax, byte [rax + 0x3ba] 	      3524	ftp.c	FUNCTION_52	IF_6	CALL_8
0x40066ee	          0x83f001	                              xor eax, 1	      3524	ftp.c	FUNCTION_52	IF_6	CALL_8
0x40066f1	            0x84c0	                             test al, al	      3524	ftp.c	FUNCTION_52	IF_6	CALL_8
0x40066f3	            0x7408	                            je 0x40066fd	      3524	ftp.c	FUNCTION_52	IF_6	CALL_8
0x40066f5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3525	ftp.c	FUNCTION_52	IF_6
0x40066f8	      0xe917030000	                           jmp 0x4006a14	      3525	ftp.c	FUNCTION_52	IF_6
0x40066fd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3527	ftp.c	FUNCTION_52	IF_7
0x4006701	     0xfb680a90300	          movzx eax, byte [rax + 0x3a9] 	      3527	ftp.c	FUNCTION_52	IF_7
0x4006708	            0x84c0	                             test al, al	      3527	ftp.c	FUNCTION_52	IF_7
0x400670a	            0x7427	                            je 0x4006733	      3527	ftp.c	FUNCTION_52	IF_7
0x400670c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3527	ftp.c	FUNCTION_52	IF_7
0x4006710	     0xfb6809e0300	          movzx eax, byte [rax + 0x39e] 	      3527	ftp.c	FUNCTION_52	IF_7
0x4006717	            0x84c0	                             test al, al	      3527	ftp.c	FUNCTION_52	IF_7
0x4006719	            0x7418	                            je 0x4006733	      3527	ftp.c	FUNCTION_52	IF_7
0x400671b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3528	ftp.c	FUNCTION_52	IF_7	CALL_9
0x400671f	          0x4889c7	                            mov rdi, rax	      3528	ftp.c	FUNCTION_52	IF_7	CALL_9
0x4006722	      0xe800000000	                          call 0x4006727	      3528	ftp.c	FUNCTION_52	IF_7	CALL_9
0x4006727	            0x84c0	                             test al, al	      3527	ftp.c	FUNCTION_52	IF_7
0x4006729	            0x7408	                            je 0x4006733	      3527	ftp.c	FUNCTION_52	IF_7
0x400672b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3529	ftp.c	FUNCTION_52	IF_7
0x400672e	      0xe9e1020000	                           jmp 0x4006a14	      3529	ftp.c	FUNCTION_52	IF_7
0x4006733	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3532	ftp.c	FUNCTION_52	IF_8
0x4006737	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      3532	ftp.c	FUNCTION_52	IF_8
0x400673d	            0x85c0	                           test eax, eax	      3532	ftp.c	FUNCTION_52	IF_8
0x400673f	            0x745c	                            je 0x400679d	      3532	ftp.c	FUNCTION_52	IF_8
0x4006741	        0x488d55da	                   lea rdx, [rbp - 0x26]	      3535	ftp.c	FUNCTION_52	IF_8	CALL_10
0x4006745	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3535	ftp.c	FUNCTION_52	IF_8	CALL_10
0x4006749	          0x4889d6	                            mov rsi, rdx	      3535	ftp.c	FUNCTION_52	IF_8	CALL_10
0x400674c	          0x4889c7	                            mov rdi, rax	      3535	ftp.c	FUNCTION_52	IF_8	CALL_10
0x400674f	      0xe858f2ffff	            call sym.ftp_multi_statemach	      3535	ftp.c	FUNCTION_52	IF_8	CALL_10
0x4006754	          0x8945dc	             mov dword [rbp - 0x24], eax	      3535	ftp.c	FUNCTION_52	IF_8	CALL_10
0x4006757	         0xfb645da	            movzx eax, byte [rbp - 0x26]	      3537	ftp.c	FUNCTION_52	IF_8
0x400675b	           0xfb6d0	                           movzx edx, al	      3537	ftp.c	FUNCTION_52	IF_8
0x400675e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3537	ftp.c	FUNCTION_52	IF_8
0x4006762	            0x8910	                    mov dword [rax], edx	      3537	ftp.c	FUNCTION_52	IF_8
0x4006764	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3541	ftp.c	FUNCTION_52	IF_8	IF_9
0x4006768	            0x7512	                           jne 0x400677c	      3541	ftp.c	FUNCTION_52	IF_8	IF_9
0x400676a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3541	ftp.c	FUNCTION_52	IF_8	IF_9
0x400676e	     0xfb680990000	           movzx eax, byte [rax + 0x99] 	      3541	ftp.c	FUNCTION_52	IF_8	IF_9
0x4006775	          0x83f001	                              xor eax, 1	      3541	ftp.c	FUNCTION_52	IF_8	IF_9
0x4006778	            0x84c0	                             test al, al	      3541	ftp.c	FUNCTION_52	IF_8	IF_9
0x400677a	            0x7408	                            je 0x4006784	      3541	ftp.c	FUNCTION_52	IF_8	IF_9
0x400677c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3542	ftp.c	FUNCTION_52	IF_8	IF_9
0x400677f	      0xe990020000	                           jmp 0x4006a14	      3542	ftp.c	FUNCTION_52	IF_8	IF_9
0x4006784	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3544	ftp.c	FUNCTION_52	IF_8	IF_10
0x4006788	     0xfb680990000	           movzx eax, byte [rax + 0x99] 	      3544	ftp.c	FUNCTION_52	IF_8	IF_10
0x400678f	            0x84c0	                             test al, al	      3544	ftp.c	FUNCTION_52	IF_8	IF_10
0x4006791	            0x740a	                            je 0x400679d	      3544	ftp.c	FUNCTION_52	IF_8	IF_10
0x4006793	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3548	ftp.c	FUNCTION_52	IF_8	IF_10
0x4006797	    0xc70000000000	                      mov dword [rax], 0	      3548	ftp.c	FUNCTION_52	IF_8	IF_10
0x400679d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3551	ftp.c	FUNCTION_52	IF_11
0x40067a1	          0x8b4018	            mov eax, dword [rax + 0x18] 	      3551	ftp.c	FUNCTION_52	IF_11
0x40067a4	          0x83f801	                              cmp eax, 1	      3551	ftp.c	FUNCTION_52	IF_11
0x40067a7	     0xf8704020000	                            ja 0x40069b1	      3551	ftp.c	FUNCTION_52	IF_11
0x40067ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3555	ftp.c	FUNCTION_52	IF_11	IF_12
0x40067b1	     0xfb680990000	           movzx eax, byte [rax + 0x99] 	      3555	ftp.c	FUNCTION_52	IF_11	IF_12
0x40067b8	            0x84c0	                             test al, al	      3555	ftp.c	FUNCTION_52	IF_11	IF_12
0x40067ba	            0x747c	                            je 0x4006838	      3555	ftp.c	FUNCTION_52	IF_11	IF_12
0x40067bc	        0x488d55db	                   lea rdx, [rbp - 0x25]	      3558	ftp.c	FUNCTION_52	IF_11	IF_12	CALL_11
0x40067c0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3558	ftp.c	FUNCTION_52	IF_11	IF_12	CALL_11
0x40067c4	          0x4889d6	                            mov rsi, rdx	      3558	ftp.c	FUNCTION_52	IF_11	IF_12	CALL_11
0x40067c7	          0x4889c7	                            mov rdi, rax	      3558	ftp.c	FUNCTION_52	IF_11	IF_12	CALL_11
0x40067ca	      0xe8b59dffff	          call sym.ReceivedServerConnect	      3558	ftp.c	FUNCTION_52	IF_11	IF_12	CALL_11
0x40067cf	          0x8945dc	             mov dword [rbp - 0x24], eax	      3558	ftp.c	FUNCTION_52	IF_11	IF_12	CALL_11
0x40067d2	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3559	ftp.c	FUNCTION_52	IF_11	IF_12	IF_13
0x40067d6	            0x7408	                            je 0x40067e0	      3559	ftp.c	FUNCTION_52	IF_11	IF_12	IF_13
0x40067d8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3560	ftp.c	FUNCTION_52	IF_11	IF_12	IF_13
0x40067db	      0xe934020000	                           jmp 0x4006a14	      3560	ftp.c	FUNCTION_52	IF_11	IF_12	IF_13
0x40067e0	         0xfb645db	            movzx eax, byte [rbp - 0x25]	      3562	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14
0x40067e4	            0x84c0	                             test al, al	      3562	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14
0x40067e6	     0xf84c0010000	                            je 0x40069ac	      3562	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14
0x40067ec	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3564	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	CALL_12
0x40067f0	          0x4889c7	                            mov rdi, rax	      3564	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	CALL_12
0x40067f3	      0xe8b49affff	            call sym.AcceptServerConnect	      3564	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	CALL_12
0x40067f8	          0x8945dc	             mov dword [rbp - 0x24], eax	      3564	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	CALL_12
0x40067fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3565	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14
0x40067ff	    0xc68099000000	                mov byte [rax + 0x99], 0	      3565	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14
0x4006806	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3566	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	IF_15
0x400680a	            0x750f	                           jne 0x400681b	      3566	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	IF_15
0x400680c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3567	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	CALL_13
0x4006810	          0x4889c7	                            mov rdi, rax	      3567	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	CALL_13
0x4006813	      0xe8679fffff	               call sym.InitiateTransfer	      3567	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	CALL_13
0x4006818	          0x8945dc	             mov dword [rbp - 0x24], eax	      3567	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	CALL_13
0x400681b	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3569	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	IF_16
0x400681f	            0x7408	                            je 0x4006829	      3569	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	IF_16
0x4006821	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3570	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	IF_16
0x4006824	      0xe9eb010000	                           jmp 0x4006a14	      3570	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	IF_16
0x4006829	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3572	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14
0x400682d	    0xc70001000000	                      mov dword [rax], 1	      3572	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14
0x4006833	      0xe974010000	                           jmp 0x40069ac	      3572	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14
0x4006838	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3576	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17
0x400683c	     0xfb680e20700	          movzx eax, byte [rax + 0x7e2] 	      3576	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17
0x4006843	            0x84c0	                             test al, al	      3576	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17
0x4006845	            0x7478	                            je 0x40068bf	      3576	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17
0x4006847	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3577	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	CALL_14
0x400684b	     0xfb680d40700	          movzx eax, byte [rax + 0x7d4] 	      3577	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	CALL_14
0x4006852	           0xfb6c8	                           movzx ecx, al	      3577	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	CALL_14
0x4006855	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3577	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	CALL_14
0x4006859	      0xba16000000	                           mov edx, 0x16	      3577	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	CALL_14
0x400685e	            0x89ce	                            mov esi, ecx	      3577	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	CALL_14
0x4006860	          0x4889c7	                            mov rdi, rax	      3577	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	CALL_14
0x4006863	      0xe8f4fbffff	                    call sym.ftp_nb_type	      3577	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	CALL_14
0x4006868	          0x8945dc	             mov dword [rbp - 0x24], eax	      3577	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	CALL_14
0x400686b	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3578	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	IF_18
0x400686f	            0x7408	                            je 0x4006879	      3578	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	IF_18
0x4006871	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3579	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	IF_18
0x4006874	      0xe99b010000	                           jmp 0x4006a14	      3579	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	IF_18
0x4006879	        0x488d55da	                   lea rdx, [rbp - 0x26]	      3581	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	CALL_15
0x400687d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3581	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	CALL_15
0x4006881	          0x4889d6	                            mov rsi, rdx	      3581	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	CALL_15
0x4006884	          0x4889c7	                            mov rdi, rax	      3581	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	CALL_15
0x4006887	      0xe820f1ffff	            call sym.ftp_multi_statemach	      3581	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	CALL_15
0x400688c	          0x8945dc	             mov dword [rbp - 0x24], eax	      3581	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	CALL_15
0x400688f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3582	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	IF_19
0x4006893	     0xfb680990000	           movzx eax, byte [rax + 0x99] 	      3582	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	IF_19
0x400689a	            0x84c0	                             test al, al	      3582	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	IF_19
0x400689c	            0x740f	                            je 0x40068ad	      3582	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	IF_19
0x400689e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3586	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	IF_19
0x40068a2	    0xc70000000000	                      mov dword [rax], 0	      3586	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	IF_19
0x40068a8	      0xe9ff000000	                           jmp 0x40069ac	      3586	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	IF_19
0x40068ad	         0xfb645da	            movzx eax, byte [rbp - 0x26]	      3588	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	ELSE_3
0x40068b1	           0xfb6d0	                           movzx edx, al	      3588	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	ELSE_3
0x40068b4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3588	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	ELSE_3
0x40068b8	            0x8910	                    mov dword [rax], edx	      3588	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	ELSE_3
0x40068ba	      0xe9ed000000	                           jmp 0x40069ac	      3588	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	ELSE_3
0x40068bf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3592	ftp.c	FUNCTION_52	IF_11	ELSE_4
0x40068c3	    0x48c74020ffff	mov qword [rax + 0x20], 0xffffffffffffffff	      3592	ftp.c	FUNCTION_52	IF_11	ELSE_4
0x40068cb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3594	ftp.c	FUNCTION_52	IF_11	ELSE_4	CALL_16
0x40068cf	          0x4889c7	                            mov rdi, rax	      3594	ftp.c	FUNCTION_52	IF_11	ELSE_4	CALL_16
0x40068d2	      0xe800000000	                          call 0x40068d7	      3594	ftp.c	FUNCTION_52	IF_11	ELSE_4	CALL_16
0x40068d7	          0x8945dc	             mov dword [rbp - 0x24], eax	      3594	ftp.c	FUNCTION_52	IF_11	ELSE_4	CALL_16
0x40068da	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3596	ftp.c	FUNCTION_52	IF_11	ELSE_4	IF_20
0x40068de	            0x751b	                           jne 0x40068fb	      3596	ftp.c	FUNCTION_52	IF_11	ELSE_4	IF_20
0x40068e0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3596	ftp.c	FUNCTION_52	IF_11	ELSE_4	IF_20
0x40068e4	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      3596	ftp.c	FUNCTION_52	IF_11	ELSE_4	IF_20
0x40068eb	          0x4885c0	                           test rax, rax	      3596	ftp.c	FUNCTION_52	IF_11	ELSE_4	IF_20
0x40068ee	            0x780b	                            js 0x40068fb	      3596	ftp.c	FUNCTION_52	IF_11	ELSE_4	IF_20
0x40068f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3598	ftp.c	FUNCTION_52	IF_11	ELSE_4	IF_20
0x40068f4	    0xc68090000000	                mov byte [rax + 0x90], 1	      3598	ftp.c	FUNCTION_52	IF_11	ELSE_4	IF_20
0x40068fb	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3601	ftp.c	FUNCTION_52	IF_11	ELSE_4	IF_21
0x40068ff	     0xf8584000000	                           jne 0x4006989	      3601	ftp.c	FUNCTION_52	IF_11	ELSE_4	IF_21
0x4006905	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3603	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22
0x4006909	     0xfb680d60700	          movzx eax, byte [rax + 0x7d6] 	      3603	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22
0x4006910	            0x84c0	                             test al, al	      3603	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22
0x4006912	            0x7510	                           jne 0x4006924	      3603	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22
0x4006914	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3603	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22
0x4006918	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      3603	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22
0x400691f	          0x4885c0	                           test rax, rax	      3603	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22
0x4006922	            0x7532	                           jne 0x4006956	      3603	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22
0x4006924	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3609	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23
0x4006928	          0x8b4018	            mov eax, dword [rax + 0x18] 	      3609	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23
0x400692b	            0x85c0	                           test eax, eax	      3609	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23
0x400692d	            0x7559	                           jne 0x4006988	      3609	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23
0x400692f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3610	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	CALL_17
0x4006933	      0xba14000000	                           mov edx, 0x14	      3610	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	CALL_17
0x4006938	      0xbe01000000	                              mov esi, 1	      3610	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	CALL_17
0x400693d	          0x4889c7	                            mov rdi, rax	      3610	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	CALL_17
0x4006940	      0xe817fbffff	                    call sym.ftp_nb_type	      3610	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	CALL_17
0x4006945	          0x8945dc	             mov dword [rbp - 0x24], eax	      3610	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	CALL_17
0x4006948	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3611	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	IF_24
0x400694c	            0x743a	                            je 0x4006988	      3611	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	IF_24
0x400694e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3612	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	IF_24
0x4006951	      0xe9be000000	                           jmp 0x4006a14	      3612	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	IF_24
0x4006956	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3617	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_6	CALL_18
0x400695a	     0xfb680d40700	          movzx eax, byte [rax + 0x7d4] 	      3617	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_6	CALL_18
0x4006961	           0xfb6c8	                           movzx ecx, al	      3617	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_6	CALL_18
0x4006964	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3617	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_6	CALL_18
0x4006968	      0xba15000000	                           mov edx, 0x15	      3617	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_6	CALL_18
0x400696d	            0x89ce	                            mov esi, ecx	      3617	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_6	CALL_18
0x400696f	          0x4889c7	                            mov rdi, rax	      3617	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_6	CALL_18
0x4006972	      0xe8e5faffff	                    call sym.ftp_nb_type	      3617	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_6	CALL_18
0x4006977	          0x8945dc	             mov dword [rbp - 0x24], eax	      3617	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_6	CALL_18
0x400697a	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3618	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_6	IF_25
0x400697e	            0x7409	                            je 0x4006989	      3618	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_6	IF_25
0x4006980	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3619	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_6	IF_25
0x4006983	      0xe98c000000	                           jmp 0x4006a14	      3619	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_6	IF_25
0x4006988	              0x90	                                     nop	      3609	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23
0x4006989	        0x488d55da	                   lea rdx, [rbp - 0x26]	      3622	ftp.c	FUNCTION_52	IF_11	ELSE_4	CALL_19
0x400698d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3622	ftp.c	FUNCTION_52	IF_11	ELSE_4	CALL_19
0x4006991	          0x4889d6	                            mov rsi, rdx	      3622	ftp.c	FUNCTION_52	IF_11	ELSE_4	CALL_19
0x4006994	          0x4889c7	                            mov rdi, rax	      3622	ftp.c	FUNCTION_52	IF_11	ELSE_4	CALL_19
0x4006997	      0xe810f0ffff	            call sym.ftp_multi_statemach	      3622	ftp.c	FUNCTION_52	IF_11	ELSE_4	CALL_19
0x400699c	          0x8945dc	             mov dword [rbp - 0x24], eax	      3622	ftp.c	FUNCTION_52	IF_11	ELSE_4	CALL_19
0x400699f	         0xfb645da	            movzx eax, byte [rbp - 0x26]	      3623	ftp.c	FUNCTION_52	IF_11	ELSE_4
0x40069a3	           0xfb6d0	                           movzx edx, al	      3623	ftp.c	FUNCTION_52	IF_11	ELSE_4
0x40069a6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3623	ftp.c	FUNCTION_52	IF_11	ELSE_4
0x40069aa	            0x8910	                    mov dword [rax], edx	      3623	ftp.c	FUNCTION_52	IF_11	ELSE_4
0x40069ac	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3625	ftp.c	FUNCTION_52	IF_11
0x40069af	            0xeb63	                           jmp 0x4006a14	      3625	ftp.c	FUNCTION_52	IF_11
0x40069b1	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3628	ftp.c	FUNCTION_52	IF_26
0x40069b5	            0x753e	                           jne 0x40069f5	      3628	ftp.c	FUNCTION_52	IF_26
0x40069b7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3628	ftp.c	FUNCTION_52	IF_26
0x40069bb	          0x8b4018	            mov eax, dword [rax + 0x18] 	      3628	ftp.c	FUNCTION_52	IF_26
0x40069be	            0x85c0	                           test eax, eax	      3628	ftp.c	FUNCTION_52	IF_26
0x40069c0	            0x7433	                            je 0x40069f5	      3628	ftp.c	FUNCTION_52	IF_26
0x40069c2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3631	ftp.c	FUNCTION_52	CALL_20
0x40069c6	        0x4883ec08	                              sub rsp, 8	      3631	ftp.c	FUNCTION_52	CALL_20
0x40069ca	            0x6a00	                                  push 0	      3631	ftp.c	FUNCTION_52	CALL_20
0x40069cc	    0x41b9ffffffff	                     mov r9d, 0xffffffff	      3631	ftp.c	FUNCTION_52	CALL_20
0x40069d2	    0x41b800000000	                              mov r8d, 0	      3631	ftp.c	FUNCTION_52	CALL_20
0x40069d8	      0xb900000000	                              mov ecx, 0	      3631	ftp.c	FUNCTION_52	CALL_20
0x40069dd	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      3631	ftp.c	FUNCTION_52	CALL_20
0x40069e4	      0xbeffffffff	                     mov esi, 0xffffffff	      3631	ftp.c	FUNCTION_52	CALL_20
0x40069e9	          0x4889c7	                            mov rdi, rax	      3631	ftp.c	FUNCTION_52	CALL_20
0x40069ec	      0xe800000000	                          call 0x40069f1	      3631	ftp.c	FUNCTION_52	CALL_20
0x40069f1	        0x4883c410	                           add rsp, 0x10	      3631	ftp.c	FUNCTION_52	CALL_20
0x40069f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3633	ftp.c	FUNCTION_52	IF_27
0x40069f9	     0xfb680990000	           movzx eax, byte [rax + 0x99] 	      3633	ftp.c	FUNCTION_52	IF_27
0x4006a00	          0x83f001	                              xor eax, 1	      3633	ftp.c	FUNCTION_52	IF_27
0x4006a03	            0x84c0	                             test al, al	      3633	ftp.c	FUNCTION_52	IF_27
0x4006a05	            0x740a	                            je 0x4006a11	      3633	ftp.c	FUNCTION_52	IF_27
0x4006a07	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3635	ftp.c	FUNCTION_52	IF_27
0x4006a0b	    0xc70001000000	                      mov dword [rax], 1	      3635	ftp.c	FUNCTION_52	IF_27
0x4006a11	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3639	ftp.c	FUNCTION_52
0x4006a14	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3640	ftp.c	FUNCTION_52
0x4006a18	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3640	ftp.c	FUNCTION_52
0x4006a21	            0x7405	                            je 0x4006a28	      3640	ftp.c	FUNCTION_52
0x4006a23	      0xe800000000	                          call 0x4006a28	      3640	ftp.c	FUNCTION_52
0x4006a28	              0xc9	                                   leave	      3640	ftp.c	FUNCTION_52
0x4006a29	              0xc3	                                     ret	      3640	ftp.c	FUNCTION_52
ftp_connect	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,2:DO,0:WHILE,0:CALL,4	58
0x4005a53	              0x55	                                push rbp	      3092	ftp.c	FUNCTION_47
0x4005a54	          0x4889e5	                            mov rbp, rsp	      3092	ftp.c	FUNCTION_47
0x4005a57	        0x4883ec30	                           sub rsp, 0x30	      3092	ftp.c	FUNCTION_47
0x4005a5b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3092	ftp.c	FUNCTION_47
0x4005a5f	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3092	ftp.c	FUNCTION_47
0x4005a63	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3094	ftp.c	FUNCTION_47
0x4005a67	    0x480550060000	                          add rax, 0x650	      3094	ftp.c	FUNCTION_47
0x4005a6d	        0x488945f0	             mov qword [rbp - 0x10], rax	      3094	ftp.c	FUNCTION_47
0x4005a71	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3095	ftp.c	FUNCTION_47
0x4005a75	        0x488945f8	                mov qword [rbp - 8], rax	      3095	ftp.c	FUNCTION_47
0x4005a79	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3097	ftp.c	FUNCTION_47
0x4005a7d	          0xc60000	                       mov byte [rax], 0	      3097	ftp.c	FUNCTION_47
0x4005a80	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3100	ftp.c	FUNCTION_47	CALL_1
0x4005a84	      0xbe00000000	                              mov esi, 0	      3100	ftp.c	FUNCTION_47	CALL_1
0x4005a89	          0x4889c7	                            mov rdi, rax	      3100	ftp.c	FUNCTION_47	CALL_1
0x4005a8c	      0xe800000000	                          call 0x4005a91	      3100	ftp.c	FUNCTION_47	CALL_1
0x4005a91	        0x488b45f8	                mov rax, qword [rbp - 8]	      3102	ftp.c	FUNCTION_47
0x4005a95	    0x48c740504077	       mov qword [rax + 0x50], 0x1b7740 	      3102	ftp.c	FUNCTION_47
0x4005a9d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3103	ftp.c	FUNCTION_47
0x4005aa1	    0x488d1528f1ff	         lea rdx, sym.ftp_statemach_act 	      3103	ftp.c	FUNCTION_47
0x4005aa8	        0x48895060	             mov qword [rax + 0x60], rdx	      3103	ftp.c	FUNCTION_47
0x4005aac	        0x488b45f8	                mov rax, qword [rbp - 8]	      3104	ftp.c	FUNCTION_47
0x4005ab0	    0x488d154bafff	              lea rdx, sym.ftp_endofresp	      3104	ftp.c	FUNCTION_47
0x4005ab7	        0x48895068	             mov qword [rax + 0x68], rdx	      3104	ftp.c	FUNCTION_47
0x4005abb	        0x488b45f8	                mov rax, qword [rbp - 8]	      3105	ftp.c	FUNCTION_47
0x4005abf	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3105	ftp.c	FUNCTION_47
0x4005ac3	        0x48895058	             mov qword [rax + 0x58], rdx	      3105	ftp.c	FUNCTION_47
0x4005ac7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3107	ftp.c	FUNCTION_47	IF_1
0x4005acb	    0x488b80e00300	           mov rax, qword [rax + 0x3e0] 	      3107	ftp.c	FUNCTION_47	IF_1
0x4005ad2	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      3107	ftp.c	FUNCTION_47	IF_1
0x4005ad8	          0x83e001	                              and eax, 1	      3107	ftp.c	FUNCTION_47	IF_1
0x4005adb	            0x85c0	                           test eax, eax	      3107	ftp.c	FUNCTION_47	IF_1
0x4005add	            0x741f	                            je 0x4005afe	      3107	ftp.c	FUNCTION_47	IF_1
0x4005adf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3109	ftp.c	FUNCTION_47	IF_1	CALL_2
0x4005ae3	      0xbe00000000	                              mov esi, 0	      3109	ftp.c	FUNCTION_47	IF_1	CALL_2
0x4005ae8	          0x4889c7	                            mov rdi, rax	      3109	ftp.c	FUNCTION_47	IF_1	CALL_2
0x4005aeb	      0xe800000000	                          call 0x4005af0	      3109	ftp.c	FUNCTION_47	IF_1	CALL_2
0x4005af0	          0x8945ec	             mov dword [rbp - 0x14], eax	      3109	ftp.c	FUNCTION_47	IF_1	CALL_2
0x4005af3	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3110	ftp.c	FUNCTION_47	IF_1	IF_2
0x4005af7	            0x7405	                            je 0x4005afe	      3110	ftp.c	FUNCTION_47	IF_1	IF_2
0x4005af9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3111	ftp.c	FUNCTION_47	IF_1	IF_2
0x4005afc	            0xeb36	                           jmp 0x4005b34	      3111	ftp.c	FUNCTION_47	IF_1	IF_2
0x4005afe	        0x488b45f8	                mov rax, qword [rbp - 8]	      3114	ftp.c	FUNCTION_47	CALL_3
0x4005b02	          0x4889c7	                            mov rdi, rax	      3114	ftp.c	FUNCTION_47	CALL_3
0x4005b05	      0xe800000000	                          call 0x4005b0a	      3114	ftp.c	FUNCTION_47	CALL_3
0x4005b0a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3118	ftp.c	FUNCTION_47
0x4005b0e	      0xbe01000000	                              mov esi, 1	      3118	ftp.c	FUNCTION_47
0x4005b13	          0x4889c7	                            mov rdi, rax	      3118	ftp.c	FUNCTION_47
0x4005b16	      0xe869b2ffff	                         call sym._state	      3118	ftp.c	FUNCTION_47
0x4005b1b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3120	ftp.c	FUNCTION_47	CALL_4
0x4005b1f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3120	ftp.c	FUNCTION_47	CALL_4
0x4005b23	          0x4889d6	                            mov rsi, rdx	      3120	ftp.c	FUNCTION_47	CALL_4
0x4005b26	          0x4889c7	                            mov rdi, rax	      3120	ftp.c	FUNCTION_47	CALL_4
0x4005b29	      0xe87efeffff	            call sym.ftp_multi_statemach	      3120	ftp.c	FUNCTION_47	CALL_4
0x4005b2e	          0x8945ec	             mov dword [rbp - 0x14], eax	      3120	ftp.c	FUNCTION_47	CALL_4
0x4005b31	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3122	ftp.c	FUNCTION_47
0x4005b34	              0xc9	                                   leave	      3123	ftp.c	FUNCTION_47
0x4005b35	              0xc3	                                     ret	      3123	ftp.c	FUNCTION_47
ftp_parse_url_path	FOR,0:functions,0:SWITCH,1:ELSE,4:IF,20:DO,0:WHILE,1:CALL,26	450
0x4007723	              0x55	                                push rbp	      4100	ftp.c	FUNCTION_61
0x4007724	          0x4889e5	                            mov rbp, rsp	      4100	ftp.c	FUNCTION_61
0x4007727	              0x53	                                push rbx	      4100	ftp.c	FUNCTION_61
0x4007728	    0x4881ec980000	                           sub rsp, 0x98	      4100	ftp.c	FUNCTION_61
0x400772f	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      4100	ftp.c	FUNCTION_61
0x4007736	    0x64488b042528	                mov rax, qword fs:[0x28]	      4100	ftp.c	FUNCTION_61
0x400773f	        0x488945e8	             mov qword [rbp - 0x18], rax	      4100	ftp.c	FUNCTION_61
0x4007743	            0x31c0	                            xor eax, eax	      4100	ftp.c	FUNCTION_61
0x4007745	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4101	ftp.c	FUNCTION_61
0x400774c	          0x488b00	                    mov rax, qword [rax]	      4101	ftp.c	FUNCTION_61
0x400774f	        0x488945a8	             mov qword [rbp - 0x58], rax	      4101	ftp.c	FUNCTION_61
0x4007753	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4103	ftp.c	FUNCTION_61
0x4007757	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      4103	ftp.c	FUNCTION_61
0x400775e	        0x488945b0	             mov qword [rbp - 0x50], rax	      4103	ftp.c	FUNCTION_61
0x4007762	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4104	ftp.c	FUNCTION_61
0x4007769	    0x480550060000	                          add rax, 0x650	      4104	ftp.c	FUNCTION_61
0x400776f	        0x488945b8	             mov qword [rbp - 0x48], rax	      4104	ftp.c	FUNCTION_61
0x4007773	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4106	ftp.c	FUNCTION_61
0x4007777	    0x488b80185100	          mov rax, qword [rax + 0x5118] 	      4106	ftp.c	FUNCTION_61
0x400777e	        0x488945c0	             mov qword [rbp - 0x40], rax	      4106	ftp.c	FUNCTION_61
0x4007782	    0x48c745980000	               mov qword [rbp - 0x68], 0	      4108	ftp.c	FUNCTION_61
0x400778a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4110	ftp.c	FUNCTION_61
0x400778e	        0x48894590	             mov qword [rbp - 0x70], rax	      4110	ftp.c	FUNCTION_61
0x4007792	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4113	ftp.c	FUNCTION_61
0x4007796	    0xc68091000000	                mov byte [rax + 0x91], 0	      4113	ftp.c	FUNCTION_61
0x400779d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4114	ftp.c	FUNCTION_61
0x40077a1	    0xc68098000000	                mov byte [rax + 0x98], 0	      4114	ftp.c	FUNCTION_61
0x40077a8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4116	ftp.c	FUNCTION_61	SWITCH_1
0x40077ac	    0x8b80b8070000	           mov eax, dword [rax + 0x7b8] 	      4116	ftp.c	FUNCTION_61	SWITCH_1
0x40077b2	          0x83f802	                              cmp eax, 2	      4116	ftp.c	FUNCTION_61	SWITCH_1
0x40077b5	            0x740a	                            je 0x40077c1	      4116	ftp.c	FUNCTION_61	SWITCH_1
0x40077b7	          0x83f803	                              cmp eax, 3	      4116	ftp.c	FUNCTION_61	SWITCH_1
0x40077ba	            0x7443	                            je 0x40077ff	      4116	ftp.c	FUNCTION_61	SWITCH_1
0x40077bc	      0xe989010000	                           jmp 0x400794a	      4116	ftp.c	FUNCTION_61	SWITCH_1
0x40077c1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4127	ftp.c	FUNCTION_61	SWITCH_1	IF_1
0x40077c5	           0xfb600	                   movzx eax, byte [rax]	      4127	ftp.c	FUNCTION_61	SWITCH_1	IF_1
0x40077c8	            0x84c0	                             test al, al	      4127	ftp.c	FUNCTION_61	SWITCH_1	IF_1
0x40077ca	     0xf8498040000	                            je 0x4007c68	      4127	ftp.c	FUNCTION_61	SWITCH_1	IF_1
0x40077d0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4128	ftp.c	FUNCTION_61	SWITCH_1	IF_1	CALL_1
0x40077d4	          0x4889c7	                            mov rdi, rax	      4128	ftp.c	FUNCTION_61	SWITCH_1	IF_1	CALL_1
0x40077d7	      0xe800000000	                          call 0x40077dc	      4128	ftp.c	FUNCTION_61	SWITCH_1	IF_1	CALL_1
0x40077dc	        0x488d50ff	                      lea rdx, [rax - 1]	      4128	ftp.c	FUNCTION_61	SWITCH_1	IF_1	CALL_1
0x40077e0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4128	ftp.c	FUNCTION_61	SWITCH_1	IF_1	CALL_1
0x40077e4	          0x4801d0	                            add rax, rdx	      4128	ftp.c	FUNCTION_61	SWITCH_1	IF_1	CALL_1
0x40077e7	           0xfb600	                   movzx eax, byte [rax]	      4128	ftp.c	FUNCTION_61	SWITCH_1	IF_1	CALL_1
0x40077ea	            0x3c2f	                            cmp al, 0x2f	      4127	ftp.c	FUNCTION_61	SWITCH_1	IF_1
0x40077ec	     0xf8476040000	                            je 0x4007c68	      4127	ftp.c	FUNCTION_61	SWITCH_1	IF_1
0x40077f2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4129	ftp.c	FUNCTION_61	SWITCH_1	IF_1
0x40077f6	        0x48894598	             mov qword [rbp - 0x68], rax	      4129	ftp.c	FUNCTION_61	SWITCH_1	IF_1
0x40077fa	      0xe969040000	                           jmp 0x4007c68	      4138	ftp.c	FUNCTION_61	SWITCH_1
0x40077ff	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4142	ftp.c	FUNCTION_61	SWITCH_1	IF_2
0x4007803	           0xfb600	                   movzx eax, byte [rax]	      4142	ftp.c	FUNCTION_61	SWITCH_1	IF_2
0x4007806	            0x84c0	                             test al, al	      4142	ftp.c	FUNCTION_61	SWITCH_1	IF_2
0x4007808	            0x7513	                           jne 0x400781d	      4142	ftp.c	FUNCTION_61	SWITCH_1	IF_2
0x400780a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4144	ftp.c	FUNCTION_61	SWITCH_1	IF_2
0x400780e	    0xc78080000000	               mov dword [rax + 0x80], 0	      4144	ftp.c	FUNCTION_61	SWITCH_1	IF_2
0x4007818	      0xe94c040000	                           jmp 0x4007c69	      4145	ftp.c	FUNCTION_61	SWITCH_1	IF_2
0x400781d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4147	ftp.c	FUNCTION_61	SWITCH_1	CALL_2
0x4007821	      0xbe2f000000	                           mov esi, 0x2f	      4147	ftp.c	FUNCTION_61	SWITCH_1	CALL_2
0x4007826	          0x4889c7	                            mov rdi, rax	      4147	ftp.c	FUNCTION_61	SWITCH_1	CALL_2
0x4007829	      0xe800000000	                          call 0x400782e	      4147	ftp.c	FUNCTION_61	SWITCH_1	CALL_2
0x400782e	        0x488945c8	             mov qword [rbp - 0x38], rax	      4147	ftp.c	FUNCTION_61	SWITCH_1	CALL_2
0x4007832	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4148	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x4007837	            0x750f	                           jne 0x4007848	      4148	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x4007839	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4148	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x400783d	           0xfb600	                   movzx eax, byte [rax]	      4148	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x4007840	            0x84c0	                             test al, al	      4148	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x4007842	     0xf85f5000000	                           jne 0x400793d	      4148	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x4007848	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4149	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x400784c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4149	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x4007850	          0x4829c2	                            sub rdx, rax	      4149	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x4007853	          0x4889d0	                            mov rax, rdx	      4149	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x4007856	        0x488945a0	             mov qword [rbp - 0x60], rax	      4149	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x400785a	    0x488b05000000	            mov rax, qword [0x04007861] 	      4152	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_3
0x4007861	          0x488b00	                    mov rax, qword [rax]	      4152	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_3
0x4007864	      0xbe08000000	                              mov esi, 8	      4152	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_3
0x4007869	      0xbf01000000	                              mov edi, 1	      4152	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_3
0x400786e	            0xffd0	                                call rax	      4152	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_3
0x4007870	          0x4889c2	                            mov rdx, rax	      4152	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_3
0x4007873	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4152	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_3
0x4007877	        0x48895078	             mov qword [rax + 0x78], rdx	      4152	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_3
0x400787b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4153	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_4
0x400787f	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4153	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_4
0x4007883	          0x4885c0	                           test rax, rax	      4153	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_4
0x4007886	            0x750a	                           jne 0x4007892	      4153	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_4
0x4007888	      0xb81b000000	                           mov eax, 0x1b	      4154	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_4
0x400788d	      0xe9e9050000	                           jmp 0x4007e7b	      4154	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_4
0x4007892	      0x48837da000	               cmp qword [rbp - 0x60], 0	      4156	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_5
0x4007897	            0x7505	                           jne 0x400789e	      4156	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_5
0x4007899	      0x488345a001	               add qword [rbp - 0x60], 1	      4157	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_5
0x400789e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x40078a2	        0x488b4878	            mov rcx, qword [rax + 0x78] 	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x40078a6	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x40078ab	            0x7406	                            je 0x40078b3	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x40078ad	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x40078b1	            0xeb05	                           jmp 0x40078b8	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x40078b3	      0xba01000000	                              mov edx, 1	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x40078b8	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x40078bd	            0x7406	                            je 0x40078c5	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x40078bf	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x40078c3	            0xeb07	                           jmp 0x40078cc	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x40078c5	    0x488d05000000	                   lea rax, [0x040078cc]	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x40078cc	    0x488bb568ffff	             mov rsi, qword [rbp - 0x98]	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x40078d3	          0x488b3e	                    mov rdi, qword [rsi]	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x40078d6	    0x41b901000000	                              mov r9d, 1	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x40078dc	    0x41b800000000	                              mov r8d, 0	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x40078e2	          0x4889c6	                            mov rsi, rax	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x40078e5	      0xe800000000	                          call 0x40078ea	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x40078ea	    0x898570ffffff	             mov dword [rbp - 0x90], eax	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x40078f0	    0x83bd70ffffff	               cmp dword [rbp - 0x90], 0	      4163	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_6
0x40078f7	            0x7417	                            je 0x4007910	      4163	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_6
0x40078f9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4164	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_6	CALL_5
0x40078fd	          0x4889c7	                            mov rdi, rax	      4164	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_6	CALL_5
0x4007900	      0xe85c88ffff	                       call sym.freedirs	      4164	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_6	CALL_5
0x4007905	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      4165	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_6
0x400790b	      0xe96b050000	                           jmp 0x4007e7b	      4165	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_6
0x4007910	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4167	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x4007914	    0xc78080000000	               mov dword [rax + 0x80], 1	      4167	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x400791e	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4168	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x4007923	            0x740a	                            je 0x400792f	      4168	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x4007925	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4168	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x4007929	        0x4883c001	                              add rax, 1	      4168	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x400792d	            0xeb04	                           jmp 0x4007933	      4168	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x400792f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4168	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x4007933	        0x48894598	             mov qword [rbp - 0x68], rax	      4168	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x4007937	              0x90	                                     nop	      4148	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x4007938	      0xe92c030000	                           jmp 0x4007c69	      4172	ftp.c	FUNCTION_61	SWITCH_1
0x400793d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4171	ftp.c	FUNCTION_61	SWITCH_1	ELSE_1
0x4007941	        0x48894598	             mov qword [rbp - 0x68], rax	      4171	ftp.c	FUNCTION_61	SWITCH_1	ELSE_1
0x4007945	      0xe91f030000	                           jmp 0x4007c69	      4172	ftp.c	FUNCTION_61	SWITCH_1
0x400794a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4176	ftp.c	FUNCTION_61	SWITCH_1
0x400794e	    0xc78080000000	               mov dword [rax + 0x80], 0	      4176	ftp.c	FUNCTION_61	SWITCH_1
0x4007958	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4177	ftp.c	FUNCTION_61	SWITCH_1
0x400795c	    0xc78084000000	               mov dword [rax + 0x84], 5	      4177	ftp.c	FUNCTION_61	SWITCH_1
0x4007966	    0x488b05000000	            mov rax, qword [0x0400796d] 	      4178	ftp.c	FUNCTION_61	SWITCH_1	CALL_6
0x400796d	          0x488b00	                    mov rax, qword [rax]	      4178	ftp.c	FUNCTION_61	SWITCH_1	CALL_6
0x4007970	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4178	ftp.c	FUNCTION_61	SWITCH_1	CALL_6
0x4007974	    0x8b9284000000	            mov edx, dword [rdx + 0x84] 	      4178	ftp.c	FUNCTION_61	SWITCH_1	CALL_6
0x400797a	          0x4863d2	                         movsxd rdx, edx	      4178	ftp.c	FUNCTION_61	SWITCH_1	CALL_6
0x400797d	      0xbe08000000	                              mov esi, 8	      4178	ftp.c	FUNCTION_61	SWITCH_1	CALL_6
0x4007982	          0x4889d7	                            mov rdi, rdx	      4178	ftp.c	FUNCTION_61	SWITCH_1	CALL_6
0x4007985	            0xffd0	                                call rax	      4178	ftp.c	FUNCTION_61	SWITCH_1	CALL_6
0x4007987	          0x4889c2	                            mov rdx, rax	      4178	ftp.c	FUNCTION_61	SWITCH_1	CALL_6
0x400798a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4178	ftp.c	FUNCTION_61	SWITCH_1	CALL_6
0x400798e	        0x48895078	             mov qword [rax + 0x78], rdx	      4178	ftp.c	FUNCTION_61	SWITCH_1	CALL_6
0x4007992	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4179	ftp.c	FUNCTION_61	SWITCH_1	IF_7
0x4007996	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4179	ftp.c	FUNCTION_61	SWITCH_1	IF_7
0x400799a	          0x4885c0	                           test rax, rax	      4179	ftp.c	FUNCTION_61	SWITCH_1	IF_7
0x400799d	            0x750a	                           jne 0x40079a9	      4179	ftp.c	FUNCTION_61	SWITCH_1	IF_7
0x400799f	      0xb81b000000	                           mov eax, 0x1b	      4180	ftp.c	FUNCTION_61	SWITCH_1	IF_7
0x40079a4	      0xe9d2040000	                           jmp 0x4007e7b	      4180	ftp.c	FUNCTION_61	SWITCH_1	IF_7
0x40079a9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4183	ftp.c	FUNCTION_61	SWITCH_1	IF_8	CALL_7
0x40079ad	    0x488d35000000	                   lea rsi, [0x040079b4]	      4183	ftp.c	FUNCTION_61	SWITCH_1	IF_8	CALL_7
0x40079b4	          0x4889c7	                            mov rdi, rax	      4183	ftp.c	FUNCTION_61	SWITCH_1	IF_8	CALL_7
0x40079b7	      0xe800000000	                          call 0x40079bc	      4183	ftp.c	FUNCTION_61	SWITCH_1	IF_8	CALL_7
0x40079bc	            0x85c0	                           test eax, eax	      4183	ftp.c	FUNCTION_61	SWITCH_1	IF_8	CALL_7
0x40079be	     0xf857a020000	                           jne 0x4007c3e	      4183	ftp.c	FUNCTION_61	SWITCH_1	IF_8	CALL_7
0x40079c4	      0x4883459001	               add qword [rbp - 0x70], 1	      4184	ftp.c	FUNCTION_61	SWITCH_1	IF_8
0x40079c9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4185	ftp.c	FUNCTION_61	SWITCH_1	IF_8	CALL_8
0x40079cd	        0x488b5878	            mov rbx, qword [rax + 0x78] 	      4185	ftp.c	FUNCTION_61	SWITCH_1	IF_8	CALL_8
0x40079d1	    0x488b05000000	            mov rax, qword [0x040079d8] 	      4185	ftp.c	FUNCTION_61	SWITCH_1	IF_8	CALL_8
0x40079d8	          0x488b00	                    mov rax, qword [rax]	      4185	ftp.c	FUNCTION_61	SWITCH_1	IF_8	CALL_8
0x40079db	    0x488d3d000000	                   lea rdi, [0x040079e2]	      4185	ftp.c	FUNCTION_61	SWITCH_1	IF_8	CALL_8
0x40079e2	            0xffd0	                                call rax	      4185	ftp.c	FUNCTION_61	SWITCH_1	IF_8	CALL_8
0x40079e4	          0x488903	                    mov qword [rbx], rax	      4185	ftp.c	FUNCTION_61	SWITCH_1	IF_8	CALL_8
0x40079e7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4186	ftp.c	FUNCTION_61	SWITCH_1	IF_8
0x40079eb	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      4186	ftp.c	FUNCTION_61	SWITCH_1	IF_8
0x40079f1	          0x8d5001	                      lea edx, [rax + 1]	      4186	ftp.c	FUNCTION_61	SWITCH_1	IF_8
0x40079f4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4186	ftp.c	FUNCTION_61	SWITCH_1	IF_8
0x40079f8	    0x899080000000	             mov dword [rax + 0x80], edx	      4186	ftp.c	FUNCTION_61	SWITCH_1	IF_8
0x40079fe	      0xe95b020000	                           jmp 0x4007c5e	      4186	ftp.c	FUNCTION_61	SWITCH_1	IF_8
0x4007a03	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      4192	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4007a07	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4192	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4007a0b	    0x488b80185100	          mov rax, qword [rax + 0x5118] 	      4192	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4007a12	          0x4829c2	                            sub rdx, rax	      4192	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4007a15	          0x4889d0	                            mov rax, rdx	      4192	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4007a18	          0x4885c0	                           test rax, rax	      4193	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4007a1b	            0x7e15	                           jle 0x4007a32	      4193	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4007a1d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4193	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4007a21	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      4193	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4007a27	            0x85c0	                           test eax, eax	      4193	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4007a29	            0x7507	                           jne 0x4007a32	      4193	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4007a2b	      0xb801000000	                              mov eax, 1	      4193	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4007a30	            0xeb05	                           jmp 0x4007a37	      4193	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4007a32	      0xb800000000	                              mov eax, 0	      4193	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4007a37	            0x4898	                                    cdqe	      4192	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4007a39	        0x488945d0	             mov qword [rbp - 0x30], rax	      4192	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4007a3d	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4196	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a41	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4196	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a45	          0x4839c2	                            cmp rdx, rax	      4196	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a48	     0xf8490000000	                            je 0x4007ade	      4196	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a4e	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4200	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a52	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4200	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a56	          0x4829c2	                            sub rdx, rax	      4200	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a59	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4200	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a5d	          0x4801d0	                            add rax, rdx	      4200	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a60	        0x488945d8	             mov qword [rbp - 0x28], rax	      4200	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a64	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4203	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a68	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      4203	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a6c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4203	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a70	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      4203	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a76	            0x4898	                                    cdqe	      4202	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9	CALL_10
0x4007a78	        0x48c1e003	                              shl rax, 3	      4203	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007a7c	        0x488d0c02	                    lea rcx, [rdx + rax]	      4202	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9	CALL_10
0x4007a80	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4202	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9	CALL_10
0x4007a84	          0x48f7d8	                                 neg rax	      4202	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9	CALL_10
0x4007a87	          0x4889c2	                            mov rdx, rax	      4202	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9	CALL_10
0x4007a8a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4202	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9	CALL_10
0x4007a8e	        0x488d3402	                    lea rsi, [rdx + rax]	      4202	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9	CALL_10
0x4007a92	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4202	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9	CALL_10
0x4007a99	          0x488b00	                    mov rax, qword [rax]	      4202	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9	CALL_10
0x4007a9c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4201	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007aa0	    0x41b901000000	                              mov r9d, 1	      4201	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007aa6	    0x41b800000000	                              mov r8d, 0	      4201	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007aac	          0x4889c7	                            mov rdi, rax	      4201	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007aaf	      0xe800000000	                          call 0x4007ab4	      4201	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007ab4	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      4201	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4007aba	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      4205	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9	IF_10
0x4007ac1	     0xf84c9000000	                            je 0x4007b90	      4205	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9	IF_10
0x4007ac7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4206	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9	IF_10	CALL_11
0x4007acb	          0x4889c7	                            mov rdi, rax	      4206	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9	IF_10	CALL_11
0x4007ace	      0xe88e86ffff	                       call sym.freedirs	      4206	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9	IF_10	CALL_11
0x4007ad3	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      4207	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9	IF_10
0x4007ad9	      0xe99d030000	                           jmp 0x4007e7b	      4207	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9	IF_10
0x4007ade	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4211	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3
0x4007ae2	        0x4883c001	                              add rax, 1	      4211	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3
0x4007ae6	        0x48894590	             mov qword [rbp - 0x70], rax	      4211	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3
0x4007aea	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4212	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11
0x4007aee	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      4212	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11
0x4007af4	            0x85c0	                           test eax, eax	      4212	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11
0x4007af6	     0xf8542010000	                           jne 0x4007c3e	      4212	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11
0x4007afc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4214	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007b00	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      4214	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007b04	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4214	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007b08	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      4214	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007b0e	            0x4898	                                    cdqe	      4214	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007b10	        0x48c1e003	                              shl rax, 3	      4214	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007b14	        0x488d1c02	                    lea rbx, [rdx + rax]	      4214	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007b18	    0x488b05000000	            mov rax, qword [0x04007b1f] 	      4214	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007b1f	          0x488b00	                    mov rax, qword [rax]	      4214	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007b22	    0x488d3d000000	                   lea rdi, [0x04007b29]	      4214	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007b29	            0xffd0	                                call rax	      4214	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007b2b	          0x488903	                    mov qword [rbx], rax	      4214	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4007b2e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4215	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007b32	        0x488b7078	            mov rsi, qword [rax + 0x78] 	      4215	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007b36	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4215	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007b3a	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      4215	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007b40	          0x8d4801	                      lea ecx, [rax + 1]	      4215	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007b43	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4215	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007b47	    0x898a80000000	             mov dword [rdx + 0x80], ecx	      4215	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007b4d	            0x4898	                                    cdqe	      4215	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007b4f	        0x48c1e003	                              shl rax, 3	      4215	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007b53	          0x4801f0	                            add rax, rsi	      4215	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007b56	          0x488b00	                    mov rax, qword [rax]	      4215	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007b59	          0x4885c0	                           test rax, rax	      4215	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007b5c	     0xf85dc000000	                           jne 0x4007c3e	      4215	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007b62	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4216	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12	CALL_13
0x4007b66	    0x488d35000000	                   lea rsi, [0x04007b6d]	      4216	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12	CALL_13
0x4007b6d	          0x4889c7	                            mov rdi, rax	      4216	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12	CALL_13
0x4007b70	      0xb800000000	                              mov eax, 0	      4216	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12	CALL_13
0x4007b75	      0xe800000000	                          call 0x4007b7a	      4216	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12	CALL_13
0x4007b7a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4217	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12	CALL_14
0x4007b7e	          0x4889c7	                            mov rdi, rax	      4217	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12	CALL_14
0x4007b81	      0xe8db85ffff	                       call sym.freedirs	      4217	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12	CALL_14
0x4007b86	      0xb81b000000	                           mov eax, 0x1b	      4218	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007b8b	      0xe9eb020000	                           jmp 0x4007e7b	      4218	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4007b90	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4224	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4007b94	        0x4883c001	                              add rax, 1	      4224	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4007b98	        0x48894590	             mov qword [rbp - 0x70], rax	      4224	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4007b9c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4225	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007ba0	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      4225	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007ba6	          0x8d5001	                      lea edx, [rax + 1]	      4225	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007ba9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4225	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007bad	    0x899080000000	             mov dword [rax + 0x80], edx	      4225	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007bb3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4225	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007bb7	    0x8b9080000000	            mov edx, dword [rax + 0x80] 	      4225	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007bbd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4225	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007bc1	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      4225	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007bc7	            0x39c2	                            cmp edx, eax	      4225	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007bc9	            0x7c73	                            jl 0x4007c3e	      4225	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007bcb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4228	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007bcf	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      4228	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007bd5	          0x8d1400	                    lea edx, [rax + rax]	      4228	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007bd8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4228	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007bdc	    0x899084000000	             mov dword [rax + 0x84], edx	      4228	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007be2	    0x488b05000000	            mov rax, qword [0x04007be9] 	      4229	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007be9	          0x488b00	                    mov rax, qword [rax]	      4229	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007bec	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4229	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007bf0	    0x8b9284000000	            mov edx, dword [rdx + 0x84] 	      4229	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007bf6	          0x4863d2	                         movsxd rdx, edx	      4229	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007bf9	    0x488d0cd50000	                        lea rcx, [rdx*8]	      4229	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007c01	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4229	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007c05	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	      4229	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007c09	          0x4889ce	                            mov rsi, rcx	      4229	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007c0c	          0x4889d7	                            mov rdi, rdx	      4229	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007c0f	            0xffd0	                                call rax	      4229	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007c11	        0x488945e0	             mov qword [rbp - 0x20], rax	      4229	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4007c15	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4230	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	IF_14
0x4007c1a	            0x7516	                           jne 0x4007c32	      4230	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	IF_14
0x4007c1c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4231	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	IF_14	CALL_16
0x4007c20	          0x4889c7	                            mov rdi, rax	      4231	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	IF_14	CALL_16
0x4007c23	      0xe83985ffff	                       call sym.freedirs	      4231	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	IF_14	CALL_16
0x4007c28	      0xb81b000000	                           mov eax, 0x1b	      4232	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	IF_14
0x4007c2d	      0xe949020000	                           jmp 0x4007e7b	      4232	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	IF_14
0x4007c32	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4234	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007c36	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4234	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007c3a	        0x48895078	             mov qword [rax + 0x78], rdx	      4234	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4007c3e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4190	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	CALL_9
0x4007c42	      0xbe2f000000	                           mov esi, 0x2f	      4190	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	CALL_9
0x4007c47	          0x4889c7	                            mov rdi, rax	      4190	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	CALL_9
0x4007c4a	      0xe800000000	                          call 0x4007c4f	      4190	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	CALL_9
0x4007c4f	        0x488945c8	             mov qword [rbp - 0x38], rax	      4190	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	CALL_9
0x4007c53	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4190	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	CALL_9
0x4007c58	     0xf85a5fdffff	                           jne 0x4007a03	      4190	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	CALL_9
0x4007c5e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4238	ftp.c	FUNCTION_61	SWITCH_1
0x4007c62	        0x48894598	             mov qword [rbp - 0x68], rax	      4238	ftp.c	FUNCTION_61	SWITCH_1
0x4007c66	            0xeb01	                           jmp 0x4007c69	      4239	ftp.c	FUNCTION_61	SWITCH_1
0x4007c68	              0x90	                                     nop	      4138	ftp.c	FUNCTION_61	SWITCH_1
0x4007c69	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      4242	ftp.c	FUNCTION_61	IF_15
0x4007c6e	            0x7466	                            je 0x4007cd6	      4242	ftp.c	FUNCTION_61	IF_15
0x4007c70	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4242	ftp.c	FUNCTION_61	IF_15
0x4007c74	           0xfb600	                   movzx eax, byte [rax]	      4242	ftp.c	FUNCTION_61	IF_15
0x4007c77	            0x84c0	                             test al, al	      4242	ftp.c	FUNCTION_61	IF_15
0x4007c79	            0x745b	                            je 0x4007cd6	      4242	ftp.c	FUNCTION_61	IF_15
0x4007c7b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4244	ftp.c	FUNCTION_61	IF_15	CALL_17
0x4007c7f	    0x488d90880000	                   lea rdx, [rax + 0x88]	      4244	ftp.c	FUNCTION_61	IF_15	CALL_17
0x4007c86	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4244	ftp.c	FUNCTION_61	IF_15	CALL_17
0x4007c8d	          0x488b00	                    mov rax, qword [rax]	      4244	ftp.c	FUNCTION_61	IF_15	CALL_17
0x4007c90	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      4243	ftp.c	FUNCTION_61	IF_15
0x4007c94	    0x41b901000000	                              mov r9d, 1	      4243	ftp.c	FUNCTION_61	IF_15
0x4007c9a	    0x41b800000000	                              mov r8d, 0	      4243	ftp.c	FUNCTION_61	IF_15
0x4007ca0	          0x4889d1	                            mov rcx, rdx	      4243	ftp.c	FUNCTION_61	IF_15
0x4007ca3	      0xba00000000	                              mov edx, 0	      4243	ftp.c	FUNCTION_61	IF_15
0x4007ca8	          0x4889c7	                            mov rdi, rax	      4243	ftp.c	FUNCTION_61	IF_15
0x4007cab	      0xe800000000	                          call 0x4007cb0	      4243	ftp.c	FUNCTION_61	IF_15
0x4007cb0	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      4243	ftp.c	FUNCTION_61	IF_15
0x4007cb6	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      4246	ftp.c	FUNCTION_61	IF_15	IF_16
0x4007cbd	            0x7428	                            je 0x4007ce7	      4246	ftp.c	FUNCTION_61	IF_15	IF_16
0x4007cbf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4247	ftp.c	FUNCTION_61	IF_15	IF_16	CALL_18
0x4007cc3	          0x4889c7	                            mov rdi, rax	      4247	ftp.c	FUNCTION_61	IF_15	IF_16	CALL_18
0x4007cc6	      0xe89684ffff	                       call sym.freedirs	      4247	ftp.c	FUNCTION_61	IF_15	IF_16	CALL_18
0x4007ccb	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      4248	ftp.c	FUNCTION_61	IF_15	IF_16
0x4007cd1	      0xe9a5010000	                           jmp 0x4007e7b	      4248	ftp.c	FUNCTION_61	IF_15	IF_16
0x4007cd6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4252	ftp.c	FUNCTION_61	ELSE_4
0x4007cda	    0x48c780880000	               mov qword [rax + 0x88], 0	      4252	ftp.c	FUNCTION_61	ELSE_4
0x4007ce5	            0xeb01	                           jmp 0x4007ce8	      4252	ftp.c	FUNCTION_61	ELSE_4
0x4007ce7	              0x90	                                     nop	      4242	ftp.c	FUNCTION_61	IF_15
0x4007ce8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4255	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x4007cec	     0xfb680e20700	          movzx eax, byte [rax + 0x7e2] 	      4255	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x4007cf3	            0x84c0	                             test al, al	      4255	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x4007cf5	            0x743d	                            je 0x4007d34	      4255	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x4007cf7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4255	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x4007cfb	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      4255	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x4007d02	          0x4885c0	                           test rax, rax	      4255	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x4007d05	            0x752d	                           jne 0x4007d34	      4255	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x4007d07	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4255	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x4007d0b	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4255	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x4007d0e	            0x85c0	                           test eax, eax	      4255	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x4007d10	            0x7522	                           jne 0x4007d34	      4255	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x4007d12	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4257	ftp.c	FUNCTION_61	ELSE_4	IF_17	CALL_19
0x4007d16	    0x488d35000000	                   lea rsi, [0x04007d1d]	      4257	ftp.c	FUNCTION_61	ELSE_4	IF_17	CALL_19
0x4007d1d	          0x4889c7	                            mov rdi, rax	      4257	ftp.c	FUNCTION_61	ELSE_4	IF_17	CALL_19
0x4007d20	      0xb800000000	                              mov eax, 0	      4257	ftp.c	FUNCTION_61	ELSE_4	IF_17	CALL_19
0x4007d25	      0xe800000000	                          call 0x4007d2a	      4257	ftp.c	FUNCTION_61	ELSE_4	IF_17	CALL_19
0x4007d2a	      0xb803000000	                              mov eax, 3	      4258	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x4007d2f	      0xe947010000	                           jmp 0x4007e7b	      4258	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x4007d34	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4261	ftp.c	FUNCTION_61
0x4007d38	    0xc68092000000	                mov byte [rax + 0x92], 0	      4261	ftp.c	FUNCTION_61
0x4007d3f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4263	ftp.c	FUNCTION_61	IF_18
0x4007d43	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      4263	ftp.c	FUNCTION_61	IF_18
0x4007d4a	          0x4885c0	                           test rax, rax	      4263	ftp.c	FUNCTION_61	IF_18
0x4007d4d	     0xf8423010000	                            je 0x4007e76	      4263	ftp.c	FUNCTION_61	IF_18
0x4007d53	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4269	ftp.c	FUNCTION_61	IF_18	CALL_20
0x4007d57	    0x488bb0185100	          mov rsi, qword [rax + 0x5118] 	      4269	ftp.c	FUNCTION_61	IF_18	CALL_20
0x4007d5e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4269	ftp.c	FUNCTION_61	IF_18	CALL_20
0x4007d65	          0x488b00	                    mov rax, qword [rax]	      4269	ftp.c	FUNCTION_61	IF_18	CALL_20
0x4007d68	        0x488d4d80	                   lea rcx, [rbp - 0x80]	      4268	ftp.c	FUNCTION_61	IF_18
0x4007d6c	        0x488d5588	                   lea rdx, [rbp - 0x78]	      4268	ftp.c	FUNCTION_61	IF_18
0x4007d70	    0x41b901000000	                              mov r9d, 1	      4268	ftp.c	FUNCTION_61	IF_18
0x4007d76	          0x4989c8	                             mov r8, rcx	      4268	ftp.c	FUNCTION_61	IF_18
0x4007d79	          0x4889d1	                            mov rcx, rdx	      4268	ftp.c	FUNCTION_61	IF_18
0x4007d7c	      0xba00000000	                              mov edx, 0	      4268	ftp.c	FUNCTION_61	IF_18
0x4007d81	          0x4889c7	                            mov rdi, rax	      4268	ftp.c	FUNCTION_61	IF_18
0x4007d84	      0xe800000000	                          call 0x4007d89	      4268	ftp.c	FUNCTION_61	IF_18
0x4007d89	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      4268	ftp.c	FUNCTION_61	IF_18
0x4007d8f	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      4270	ftp.c	FUNCTION_61	IF_18	IF_19
0x4007d96	            0x7417	                            je 0x4007daf	      4270	ftp.c	FUNCTION_61	IF_18	IF_19
0x4007d98	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4271	ftp.c	FUNCTION_61	IF_18	IF_19	CALL_21
0x4007d9c	          0x4889c7	                            mov rdi, rax	      4271	ftp.c	FUNCTION_61	IF_18	IF_19	CALL_21
0x4007d9f	      0xe8bd83ffff	                       call sym.freedirs	      4271	ftp.c	FUNCTION_61	IF_18	IF_19	CALL_21
0x4007da4	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      4272	ftp.c	FUNCTION_61	IF_18	IF_19
0x4007daa	      0xe9cc000000	                           jmp 0x4007e7b	      4272	ftp.c	FUNCTION_61	IF_18	IF_19
0x4007daf	        0x488b5d80	             mov rbx, qword [rbp - 0x80]	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x4007db3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x4007db7	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x4007dbe	          0x4885c0	                           test rax, rax	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x4007dc1	            0x7415	                            je 0x4007dd8	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x4007dc3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x4007dc7	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x4007dce	          0x4889c7	                            mov rdi, rax	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x4007dd1	      0xe800000000	                          call 0x4007dd6	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x4007dd6	            0xeb05	                           jmp 0x4007ddd	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x4007dd8	      0xb800000000	                              mov eax, 0	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x4007ddd	          0x4829c3	                            sub rbx, rax	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x4007de0	          0x4889d8	                            mov rax, rbx	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x4007de3	        0x48894580	             mov qword [rbp - 0x80], rax	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x4007de7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4276	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_23
0x4007deb	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      4276	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_23
0x4007df2	          0x4889c7	                            mov rdi, rax	      4276	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_23
0x4007df5	      0xe800000000	                          call 0x4007dfa	      4276	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_23
0x4007dfa	          0x4889c2	                            mov rdx, rax	      4276	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_23
0x4007dfd	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4276	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_23
0x4007e01	          0x4839c2	                            cmp rdx, rax	      4276	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_23
0x4007e04	            0x755d	                           jne 0x4007e63	      4276	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_23
0x4007e06	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      4277	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_24
0x4007e0a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4277	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_24
0x4007e0e	    0x488b88a00000	            mov rcx, qword [rax + 0xa0] 	      4277	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_24
0x4007e15	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4277	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_24
0x4007e19	          0x4889ce	                            mov rsi, rcx	      4277	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_24
0x4007e1c	          0x4889c7	                            mov rdi, rax	      4277	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_24
0x4007e1f	      0xe800000000	                          call 0x4007e24	      4277	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_24
0x4007e24	            0x85c0	                           test eax, eax	      4276	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_23
0x4007e26	            0x753b	                           jne 0x4007e63	      4276	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_23
0x4007e28	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4278	ftp.c	FUNCTION_61	IF_18	IF_20
0x4007e2c	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	      4278	ftp.c	FUNCTION_61	IF_18	IF_20
0x4007e32	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4278	ftp.c	FUNCTION_61	IF_18	IF_20
0x4007e36	    0x8b80b8070000	           mov eax, dword [rax + 0x7b8] 	      4278	ftp.c	FUNCTION_61	IF_18	IF_20
0x4007e3c	            0x39c2	                            cmp edx, eax	      4277	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_24
0x4007e3e	            0x7523	                           jne 0x4007e63	      4277	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_24
0x4007e40	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4279	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_25
0x4007e44	    0x488d35000000	                   lea rsi, [0x04007e4b]	      4279	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_25
0x4007e4b	          0x4889c7	                            mov rdi, rax	      4279	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_25
0x4007e4e	      0xb800000000	                              mov eax, 0	      4279	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_25
0x4007e53	      0xe800000000	                          call 0x4007e58	      4279	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_25
0x4007e58	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4280	ftp.c	FUNCTION_61	IF_18	IF_20
0x4007e5c	    0xc68092000000	                mov byte [rax + 0x92], 1	      4280	ftp.c	FUNCTION_61	IF_18	IF_20
0x4007e63	    0x488b05000000	            mov rax, qword [0x04007e6a] 	      4282	ftp.c	FUNCTION_61	IF_18	CALL_26
0x4007e6a	          0x488b00	                    mov rax, qword [rax]	      4282	ftp.c	FUNCTION_61	IF_18	CALL_26
0x4007e6d	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      4282	ftp.c	FUNCTION_61	IF_18	CALL_26
0x4007e71	          0x4889d7	                            mov rdi, rdx	      4282	ftp.c	FUNCTION_61	IF_18	CALL_26
0x4007e74	            0xffd0	                                call rax	      4282	ftp.c	FUNCTION_61	IF_18	CALL_26
0x4007e76	      0xb800000000	                              mov eax, 0	      4285	ftp.c	FUNCTION_61
0x4007e7b	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      4286	ftp.c	FUNCTION_61
0x4007e7f	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4286	ftp.c	FUNCTION_61
0x4007e88	            0x7405	                            je 0x4007e8f	      4286	ftp.c	FUNCTION_61
0x4007e8a	      0xe800000000	                          call 0x4007e8f	      4286	ftp.c	FUNCTION_61
0x4007e8f	    0x4881c4980000	                           add rsp, 0x98	      4286	ftp.c	FUNCTION_61
0x4007e96	              0x5b	                                 pop rbx	      4286	ftp.c	FUNCTION_61
0x4007e97	              0x5d	                                 pop rbp	      4286	ftp.c	FUNCTION_61
0x4007e98	              0xc3	                                     ret	      4286	ftp.c	FUNCTION_61
ftp_readresp	FOR,0:functions,0:SWITCH,1:ELSE,0:IF,2:DO,0:WHILE,0:CALL,5	53
0x4000aaf	              0x55	                                push rbp	       568	ftp.c	FUNCTION_10
0x4000ab0	          0x4889e5	                            mov rbp, rsp	       568	ftp.c	FUNCTION_10
0x4000ab3	        0x4883ec40	                           sub rsp, 0x40	       568	ftp.c	FUNCTION_10
0x4000ab7	          0x897ddc	             mov dword [rbp - 0x24], edi	       568	ftp.c	FUNCTION_10
0x4000aba	        0x488975d0	             mov qword [rbp - 0x30], rsi	       568	ftp.c	FUNCTION_10
0x4000abe	        0x488955c8	             mov qword [rbp - 0x38], rdx	       568	ftp.c	FUNCTION_10
0x4000ac2	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       568	ftp.c	FUNCTION_10
0x4000ac6	    0x64488b042528	                mov rax, qword fs:[0x28]	       568	ftp.c	FUNCTION_10
0x4000acf	        0x488945f8	                mov qword [rbp - 8], rax	       568	ftp.c	FUNCTION_10
0x4000ad3	            0x31c0	                            xor eax, eax	       568	ftp.c	FUNCTION_10
0x4000ad5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       569	ftp.c	FUNCTION_10
0x4000ad9	        0x488b4058	            mov rax, qword [rax + 0x58] 	       569	ftp.c	FUNCTION_10
0x4000add	        0x488945e8	             mov qword [rbp - 0x18], rax	       569	ftp.c	FUNCTION_10
0x4000ae1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       570	ftp.c	FUNCTION_10
0x4000ae5	          0x488b00	                    mov rax, qword [rax]	       570	ftp.c	FUNCTION_10
0x4000ae8	        0x488945f0	             mov qword [rbp - 0x10], rax	       570	ftp.c	FUNCTION_10
0x4000aec	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       574	ftp.c	FUNCTION_10
0x4000af3	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       577	ftp.c	FUNCTION_10	CALL_1
0x4000af7	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       577	ftp.c	FUNCTION_10	CALL_1
0x4000afb	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       577	ftp.c	FUNCTION_10	CALL_1
0x4000aff	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       577	ftp.c	FUNCTION_10	CALL_1
0x4000b02	            0x89c7	                            mov edi, eax	       577	ftp.c	FUNCTION_10	CALL_1
0x4000b04	      0xe800000000	                          call 0x4000b09	       577	ftp.c	FUNCTION_10	CALL_1
0x4000b09	          0x8945e4	             mov dword [rbp - 0x1c], eax	       577	ftp.c	FUNCTION_10	CALL_1
0x4000b0c	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       599	ftp.c	FUNCTION_10
0x4000b0f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       599	ftp.c	FUNCTION_10
0x4000b13	    0x8990d8510000	          mov dword [rax + 0x51d8], edx 	       599	ftp.c	FUNCTION_10
0x4000b19	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       601	ftp.c	FUNCTION_10	IF_1
0x4000b1e	            0x7409	                            je 0x4000b29	       601	ftp.c	FUNCTION_10	IF_1
0x4000b20	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       602	ftp.c	FUNCTION_10	IF_1
0x4000b23	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       602	ftp.c	FUNCTION_10	IF_1
0x4000b27	            0x8910	                    mov dword [rax], edx	       602	ftp.c	FUNCTION_10	IF_1
0x4000b29	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       604	ftp.c	FUNCTION_10	IF_2
0x4000b2c	      0x3da5010000	                          cmp eax, 0x1a5	       604	ftp.c	FUNCTION_10	IF_2
0x4000b31	            0x7530	                           jne 0x4000b63	       604	ftp.c	FUNCTION_10	IF_2
0x4000b33	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       612	ftp.c	FUNCTION_10	IF_2	CALL_5
0x4000b37	    0x488d35000000	                   lea rsi, [0x04000b3e]	       612	ftp.c	FUNCTION_10	IF_2	CALL_5
0x4000b3e	          0x4889c7	                            mov rdi, rax	       612	ftp.c	FUNCTION_10	IF_2	CALL_5
0x4000b41	      0xb800000000	                              mov eax, 0	       612	ftp.c	FUNCTION_10	IF_2	CALL_5
0x4000b46	      0xe800000000	                          call 0x4000b4b	       612	ftp.c	FUNCTION_10	IF_2	CALL_5
0x4000b4b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       613	ftp.c	FUNCTION_10	IF_2
0x4000b4f	      0xbe00000000	                              mov esi, 0	       613	ftp.c	FUNCTION_10	IF_2
0x4000b54	          0x4889c7	                            mov rdi, rax	       613	ftp.c	FUNCTION_10	IF_2
0x4000b57	      0xe828020000	                         call sym._state	       613	ftp.c	FUNCTION_10	IF_2
0x4000b5c	      0xb81c000000	                           mov eax, 0x1c	       614	ftp.c	FUNCTION_10	IF_2
0x4000b61	            0xeb03	                           jmp 0x4000b66	       614	ftp.c	FUNCTION_10	IF_2
0x4000b63	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       617	ftp.c	FUNCTION_10
0x4000b66	        0x488b4df8	                mov rcx, qword [rbp - 8]	       618	ftp.c	FUNCTION_10
0x4000b6a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       618	ftp.c	FUNCTION_10
0x4000b73	            0x7405	                            je 0x4000b7a	       618	ftp.c	FUNCTION_10
0x4000b75	      0xe800000000	                          call 0x4000b7a	       618	ftp.c	FUNCTION_10
0x4000b7a	              0xc9	                                   leave	       618	ftp.c	FUNCTION_10
0x4000b7b	              0xc3	                                     ret	       618	ftp.c	FUNCTION_10
close_secondarysocket	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,1:DO,0:WHILE,0:CALL,1	21
0x4000112	              0x55	                                push rbp	       220	ftp.c	FUNCTION_1
0x4000113	          0x4889e5	                            mov rbp, rsp	       220	ftp.c	FUNCTION_1
0x4000116	        0x4883ec10	                           sub rsp, 0x10	       220	ftp.c	FUNCTION_1
0x400011a	        0x48897df8	                mov qword [rbp - 8], rdi	       220	ftp.c	FUNCTION_1
0x400011e	        0x488b45f8	                mov rax, qword [rbp - 8]	       221	ftp.c	FUNCTION_1	IF_1
0x4000122	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	       221	ftp.c	FUNCTION_1	IF_1
0x4000128	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       221	ftp.c	FUNCTION_1	IF_1
0x400012b	            0x7426	                            je 0x4000153	       221	ftp.c	FUNCTION_1	IF_1
0x400012d	        0x488b45f8	                mov rax, qword [rbp - 8]	       222	ftp.c	FUNCTION_1	IF_1	CALL_1
0x4000131	    0x8b905c020000	           mov edx, dword [rax + 0x25c] 	       222	ftp.c	FUNCTION_1	IF_1	CALL_1
0x4000137	        0x488b45f8	                mov rax, qword [rbp - 8]	       222	ftp.c	FUNCTION_1	IF_1	CALL_1
0x400013b	            0x89d6	                            mov esi, edx	       222	ftp.c	FUNCTION_1	IF_1	CALL_1
0x400013d	          0x4889c7	                            mov rdi, rax	       222	ftp.c	FUNCTION_1	IF_1	CALL_1
0x4000140	      0xe800000000	                          call 0x4000145	       222	ftp.c	FUNCTION_1	IF_1	CALL_1
0x4000145	        0x488b45f8	                mov rax, qword [rbp - 8]	       223	ftp.c	FUNCTION_1	IF_1
0x4000149	    0xc7805c020000	    mov dword [rax + 0x25c], 0xffffffff 	       223	ftp.c	FUNCTION_1	IF_1
0x4000153	        0x488b45f8	                mov rax, qword [rbp - 8]	       225	ftp.c	FUNCTION_1
0x4000157	    0xc680a6030000	               mov byte [rax + 0x3a6], 0	       225	ftp.c	FUNCTION_1
0x400015e	              0x90	                                     nop	       226	ftp.c	FUNCTION_1
0x400015f	              0xc9	                                   leave	       226	ftp.c	FUNCTION_1
0x4000160	              0xc3	                                     ret	       226	ftp.c	FUNCTION_1
ReceivedServerConnect	FOR,0:functions,0:SWITCH,1:ELSE,1:IF,5:DO,0:WHILE,0:CALL,10	132
0x4000584	              0x55	                                push rbp	       378	ftp.c	FUNCTION_6
0x4000585	          0x4889e5	                            mov rbp, rsp	       378	ftp.c	FUNCTION_6
0x4000588	        0x4883ec50	                           sub rsp, 0x50	       378	ftp.c	FUNCTION_6
0x400058c	        0x48897db8	             mov qword [rbp - 0x48], rdi	       378	ftp.c	FUNCTION_6
0x4000590	        0x488975b0	             mov qword [rbp - 0x50], rsi	       378	ftp.c	FUNCTION_6
0x4000594	    0x64488b042528	                mov rax, qword fs:[0x28]	       378	ftp.c	FUNCTION_6
0x400059d	        0x488945f8	                mov qword [rbp - 8], rax	       378	ftp.c	FUNCTION_6
0x40005a1	            0x31c0	                            xor eax, eax	       378	ftp.c	FUNCTION_6
0x40005a3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       379	ftp.c	FUNCTION_6
0x40005a7	          0x488b00	                    mov rax, qword [rax]	       379	ftp.c	FUNCTION_6
0x40005aa	        0x488945d8	             mov qword [rbp - 0x28], rax	       379	ftp.c	FUNCTION_6
0x40005ae	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       380	ftp.c	FUNCTION_6
0x40005b2	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	       380	ftp.c	FUNCTION_6
0x40005b8	          0x8945c4	             mov dword [rbp - 0x3c], eax	       380	ftp.c	FUNCTION_6
0x40005bb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       381	ftp.c	FUNCTION_6
0x40005bf	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	       381	ftp.c	FUNCTION_6
0x40005c5	          0x8945c8	             mov dword [rbp - 0x38], eax	       381	ftp.c	FUNCTION_6
0x40005c8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       382	ftp.c	FUNCTION_6
0x40005cc	    0x480550060000	                          add rax, 0x650	       382	ftp.c	FUNCTION_6
0x40005d2	        0x488945e0	             mov qword [rbp - 0x20], rax	       382	ftp.c	FUNCTION_6
0x40005d6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       383	ftp.c	FUNCTION_6
0x40005da	        0x488945e8	             mov qword [rbp - 0x18], rax	       383	ftp.c	FUNCTION_6
0x40005de	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       389	ftp.c	FUNCTION_6
0x40005e2	          0xc60000	                       mov byte [rax], 0	       389	ftp.c	FUNCTION_6
0x40005e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       391	ftp.c	FUNCTION_6	CALL_1
0x40005e9	          0x4889c7	                            mov rdi, rax	       391	ftp.c	FUNCTION_6	CALL_1
0x40005ec	      0xe8bafeffff	            call sym.ftp_timeleft_accept	       391	ftp.c	FUNCTION_6	CALL_1
0x40005f1	        0x488945f0	             mov qword [rbp - 0x10], rax	       391	ftp.c	FUNCTION_6	CALL_1
0x40005f5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       392	ftp.c	FUNCTION_6	CALL_2
0x40005f9	    0x488d35000000	                   lea rsi, [0x04000600]	       392	ftp.c	FUNCTION_6	CALL_2
0x4000600	          0x4889c7	                            mov rdi, rax	       392	ftp.c	FUNCTION_6	CALL_2
0x4000603	      0xb800000000	                              mov eax, 0	       392	ftp.c	FUNCTION_6	CALL_2
0x4000608	      0xe800000000	                          call 0x400060d	       392	ftp.c	FUNCTION_6	CALL_2
0x400060d	      0x48837df000	               cmp qword [rbp - 0x10], 0	       393	ftp.c	FUNCTION_6	IF_1
0x4000612	            0x7922	                           jns 0x4000636	       393	ftp.c	FUNCTION_6	IF_1
0x4000614	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       395	ftp.c	FUNCTION_6	IF_1	CALL_3
0x4000618	    0x488d35000000	                   lea rsi, [0x0400061f]	       395	ftp.c	FUNCTION_6	IF_1	CALL_3
0x400061f	          0x4889c7	                            mov rdi, rax	       395	ftp.c	FUNCTION_6	IF_1	CALL_3
0x4000622	      0xb800000000	                              mov eax, 0	       395	ftp.c	FUNCTION_6	IF_1	CALL_3
0x4000627	      0xe800000000	                          call 0x400062c	       395	ftp.c	FUNCTION_6	IF_1	CALL_3
0x400062c	      0xb80c000000	                            mov eax, 0xc	       396	ftp.c	FUNCTION_6	IF_1
0x4000631	      0xe933010000	                           jmp 0x4000769	       396	ftp.c	FUNCTION_6	IF_1
0x4000636	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       400	ftp.c	FUNCTION_6	IF_2
0x400063a	        0x488b4008	                mov rax, qword [rax + 8]	       400	ftp.c	FUNCTION_6	IF_2
0x400063e	          0x4885c0	                           test rax, rax	       400	ftp.c	FUNCTION_6	IF_2
0x4000641	            0x7453	                            je 0x4000696	       400	ftp.c	FUNCTION_6	IF_2
0x4000643	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       400	ftp.c	FUNCTION_6	IF_2
0x4000647	          0x488b00	                    mov rax, qword [rax]	       400	ftp.c	FUNCTION_6	IF_2
0x400064a	          0x4885c0	                           test rax, rax	       400	ftp.c	FUNCTION_6	IF_2
0x400064d	            0x7447	                            je 0x4000696	       400	ftp.c	FUNCTION_6	IF_2
0x400064f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       400	ftp.c	FUNCTION_6	IF_2
0x4000653	          0x488b00	                    mov rax, qword [rax]	       400	ftp.c	FUNCTION_6	IF_2
0x4000656	           0xfb600	                   movzx eax, byte [rax]	       400	ftp.c	FUNCTION_6	IF_2
0x4000659	            0x3c33	                            cmp al, 0x33	       400	ftp.c	FUNCTION_6	IF_2
0x400065b	            0x7e39	                           jle 0x4000696	       400	ftp.c	FUNCTION_6	IF_2
0x400065d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       402	ftp.c	FUNCTION_6	IF_2	CALL_4
0x4000661	    0x488d35000000	                   lea rsi, [0x04000668]	       402	ftp.c	FUNCTION_6	IF_2	CALL_4
0x4000668	          0x4889c7	                            mov rdi, rax	       402	ftp.c	FUNCTION_6	IF_2	CALL_4
0x400066b	      0xb800000000	                              mov eax, 0	       402	ftp.c	FUNCTION_6	IF_2	CALL_4
0x4000670	      0xe800000000	                          call 0x4000675	       402	ftp.c	FUNCTION_6	IF_2	CALL_4
0x4000675	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       403	ftp.c	FUNCTION_6	IF_2	CALL_5
0x4000679	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       403	ftp.c	FUNCTION_6	IF_2	CALL_5
0x400067d	        0x488d45d0	                   lea rax, [rbp - 0x30]	       403	ftp.c	FUNCTION_6	IF_2	CALL_5
0x4000681	          0x4889ce	                            mov rsi, rcx	       403	ftp.c	FUNCTION_6	IF_2	CALL_5
0x4000684	          0x4889c7	                            mov rdi, rax	       403	ftp.c	FUNCTION_6	IF_2	CALL_5
0x4000687	      0xe800000000	                          call 0x400068c	       403	ftp.c	FUNCTION_6	IF_2	CALL_5
0x400068c	      0xb80a000000	                            mov eax, 0xa	       404	ftp.c	FUNCTION_6	IF_2
0x4000691	      0xe9d3000000	                           jmp 0x4000769	       404	ftp.c	FUNCTION_6	IF_2
0x4000696	          0x8b75c8	             mov esi, dword [rbp - 0x38]	       407	ftp.c	FUNCTION_6	CALL_6
0x4000699	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       407	ftp.c	FUNCTION_6	CALL_6
0x400069c	      0xb900000000	                              mov ecx, 0	       407	ftp.c	FUNCTION_6	CALL_6
0x40006a1	      0xbaffffffff	                     mov edx, 0xffffffff	       407	ftp.c	FUNCTION_6	CALL_6
0x40006a6	            0x89c7	                            mov edi, eax	       407	ftp.c	FUNCTION_6	CALL_6
0x40006a8	      0xe800000000	                          call 0x40006ad	       407	ftp.c	FUNCTION_6	CALL_6
0x40006ad	          0x8945cc	             mov dword [rbp - 0x34], eax	       407	ftp.c	FUNCTION_6	CALL_6
0x40006b0	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       410	ftp.c	FUNCTION_6	SWITCH_1
0x40006b3	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       410	ftp.c	FUNCTION_6	SWITCH_1
0x40006b6	            0x740a	                            je 0x40006c2	       410	ftp.c	FUNCTION_6	SWITCH_1
0x40006b8	            0x85c0	                           test eax, eax	       410	ftp.c	FUNCTION_6	SWITCH_1
0x40006ba	     0xf84a0000000	                            je 0x4000760	       410	ftp.c	FUNCTION_6	SWITCH_1
0x40006c0	            0xeb22	                           jmp 0x40006e4	       410	ftp.c	FUNCTION_6	SWITCH_1
0x40006c2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       413	ftp.c	FUNCTION_6	SWITCH_1	CALL_7
0x40006c6	    0x488d35000000	                   lea rsi, [0x040006cd]	       413	ftp.c	FUNCTION_6	SWITCH_1	CALL_7
0x40006cd	          0x4889c7	                            mov rdi, rax	       413	ftp.c	FUNCTION_6	SWITCH_1	CALL_7
0x40006d0	      0xb800000000	                              mov eax, 0	       413	ftp.c	FUNCTION_6	SWITCH_1	CALL_7
0x40006d5	      0xe800000000	                          call 0x40006da	       413	ftp.c	FUNCTION_6	SWITCH_1	CALL_7
0x40006da	      0xb80a000000	                            mov eax, 0xa	       414	ftp.c	FUNCTION_6	SWITCH_1
0x40006df	      0xe985000000	                           jmp 0x4000769	       414	ftp.c	FUNCTION_6	SWITCH_1
0x40006e4	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       419	ftp.c	FUNCTION_6	SWITCH_1	IF_3
0x40006e7	          0x83e008	                              and eax, 8	       419	ftp.c	FUNCTION_6	SWITCH_1	IF_3
0x40006ea	            0x85c0	                           test eax, eax	       419	ftp.c	FUNCTION_6	SWITCH_1	IF_3
0x40006ec	            0x7421	                            je 0x400070f	       419	ftp.c	FUNCTION_6	SWITCH_1	IF_3
0x40006ee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       420	ftp.c	FUNCTION_6	SWITCH_1	IF_3	CALL_8
0x40006f2	    0x488d35000000	                   lea rsi, [0x040006f9]	       420	ftp.c	FUNCTION_6	SWITCH_1	IF_3	CALL_8
0x40006f9	          0x4889c7	                            mov rdi, rax	       420	ftp.c	FUNCTION_6	SWITCH_1	IF_3	CALL_8
0x40006fc	      0xb800000000	                              mov eax, 0	       420	ftp.c	FUNCTION_6	SWITCH_1	IF_3	CALL_8
0x4000701	      0xe800000000	                          call 0x4000706	       420	ftp.c	FUNCTION_6	SWITCH_1	IF_3	CALL_8
0x4000706	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       421	ftp.c	FUNCTION_6	SWITCH_1	IF_3
0x400070a	          0xc60001	                       mov byte [rax], 1	       421	ftp.c	FUNCTION_6	SWITCH_1	IF_3
0x400070d	            0xeb54	                           jmp 0x4000763	       433	ftp.c	FUNCTION_6	SWITCH_1
0x400070f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       423	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4
0x4000712	          0x83e001	                              and eax, 1	       423	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4
0x4000715	            0x85c0	                           test eax, eax	       423	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4
0x4000717	            0x744a	                            je 0x4000763	       423	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4
0x4000719	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       424	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_9
0x400071d	    0x488d35000000	                   lea rsi, [0x04000724]	       424	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_9
0x4000724	          0x4889c7	                            mov rdi, rax	       424	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_9
0x4000727	      0xb800000000	                              mov eax, 0	       424	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_9
0x400072c	      0xe800000000	                          call 0x4000731	       424	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_9
0x4000731	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       425	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_10
0x4000735	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       425	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_10
0x4000739	        0x488d45d0	                   lea rax, [rbp - 0x30]	       425	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_10
0x400073d	          0x4889ce	                            mov rsi, rcx	       425	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_10
0x4000740	          0x4889c7	                            mov rdi, rax	       425	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_10
0x4000743	      0xe800000000	                          call 0x4000748	       425	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_10
0x4000748	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       427	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	IF_5
0x400074b	      0x3d8f010000	                          cmp eax, 0x18f	       427	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	IF_5
0x4000750	            0x7e07	                           jle 0x4000759	       427	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	IF_5
0x4000752	      0xb80a000000	                            mov eax, 0xa	       428	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	IF_5
0x4000757	            0xeb10	                           jmp 0x4000769	       428	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	IF_5
0x4000759	      0xb808000000	                              mov eax, 8	       430	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4
0x400075e	            0xeb09	                           jmp 0x4000769	       430	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4
0x4000760	              0x90	                                     nop	       416	ftp.c	FUNCTION_6	SWITCH_1
0x4000761	            0xeb01	                           jmp 0x4000764	       416	ftp.c	FUNCTION_6	SWITCH_1
0x4000763	              0x90	                                     nop	       433	ftp.c	FUNCTION_6	SWITCH_1
0x4000764	      0xb800000000	                              mov eax, 0	       436	ftp.c	FUNCTION_6
0x4000769	        0x488b4df8	                mov rcx, qword [rbp - 8]	       437	ftp.c	FUNCTION_6
0x400076d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       437	ftp.c	FUNCTION_6
0x4000776	            0x7405	                            je 0x400077d	       437	ftp.c	FUNCTION_6
0x4000778	      0xe800000000	                          call 0x400077d	       437	ftp.c	FUNCTION_6
0x400077d	              0xc9	                                   leave	       437	ftp.c	FUNCTION_6
0x400077e	              0xc3	                                     ret	       437	ftp.c	FUNCTION_6
ftp_state_cwd	FOR,0:functions,0:SWITCH,0:ELSE,4:IF,4:DO,0:WHILE,0:CALL,3	109
0x4000fef	              0x55	                                push rbp	       879	ftp.c	FUNCTION_17
0x4000ff0	          0x4889e5	                            mov rbp, rsp	       879	ftp.c	FUNCTION_17
0x4000ff3	        0x4883ec20	                           sub rsp, 0x20	       879	ftp.c	FUNCTION_17
0x4000ff7	        0x48897de8	             mov qword [rbp - 0x18], rdi	       879	ftp.c	FUNCTION_17
0x4000ffb	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       880	ftp.c	FUNCTION_17
0x4001002	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       881	ftp.c	FUNCTION_17
0x4001006	    0x480550060000	                          add rax, 0x650	       881	ftp.c	FUNCTION_17
0x400100c	        0x488945f8	                mov qword [rbp - 8], rax	       881	ftp.c	FUNCTION_17
0x4001010	        0x488b45f8	                mov rax, qword [rbp - 8]	       883	ftp.c	FUNCTION_17	IF_1
0x4001014	     0xfb680920000	           movzx eax, byte [rax + 0x92] 	       883	ftp.c	FUNCTION_17	IF_1
0x400101b	            0x84c0	                             test al, al	       883	ftp.c	FUNCTION_17	IF_1
0x400101d	            0x7414	                            je 0x4001033	       883	ftp.c	FUNCTION_17	IF_1
0x400101f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       885	ftp.c	FUNCTION_17	CALL_1
0x4001023	          0x4889c7	                            mov rdi, rax	       885	ftp.c	FUNCTION_17	CALL_1
0x4001026	      0xe831180000	                 call sym.ftp_state_mdtm	       885	ftp.c	FUNCTION_17	CALL_1
0x400102b	          0x8945f4	              mov dword [rbp - 0xc], eax	       885	ftp.c	FUNCTION_17	CALL_1
0x400102e	      0xe96d010000	                           jmp 0x40011a0	       885	ftp.c	FUNCTION_17	CALL_1
0x4001033	        0x488b45f8	                mov rax, qword [rbp - 8]	       887	ftp.c	FUNCTION_17	ELSE_1
0x4001037	    0xc780b4000000	               mov dword [rax + 0xb4], 0	       887	ftp.c	FUNCTION_17	ELSE_1
0x4001041	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       892	ftp.c	FUNCTION_17	ELSE_1
0x4001045	          0x488b00	                    mov rax, qword [rax]	       892	ftp.c	FUNCTION_17	ELSE_1
0x4001048	    0x8b80bc070000	           mov eax, dword [rax + 0x7bc] 	       892	ftp.c	FUNCTION_17	ELSE_1
0x400104e	          0x83f802	                              cmp eax, 2	       892	ftp.c	FUNCTION_17	ELSE_1
0x4001051	           0xf94c0	                                 sete al	       892	ftp.c	FUNCTION_17	ELSE_1
0x4001054	           0xfb6d0	                           movzx edx, al	       892	ftp.c	FUNCTION_17	ELSE_1
0x4001057	        0x488b45f8	                mov rax, qword [rbp - 8]	       892	ftp.c	FUNCTION_17	ELSE_1
0x400105b	    0x8990b8000000	             mov dword [rax + 0xb8], edx	       892	ftp.c	FUNCTION_17	ELSE_1
0x4001061	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       894	ftp.c	FUNCTION_17	ELSE_1	IF_2
0x4001065	          0x488b00	                    mov rax, qword [rax]	       894	ftp.c	FUNCTION_17	ELSE_1	IF_2
0x4001068	    0x8b80b8070000	           mov eax, dword [rax + 0x7b8] 	       894	ftp.c	FUNCTION_17	ELSE_1	IF_2
0x400106e	          0x83f802	                              cmp eax, 2	       894	ftp.c	FUNCTION_17	ELSE_1	IF_2
0x4001071	            0x7522	                           jne 0x4001095	       894	ftp.c	FUNCTION_17	ELSE_1	IF_2
0x4001073	        0x488b45f8	                mov rax, qword [rbp - 8]	       894	ftp.c	FUNCTION_17	ELSE_1	IF_2
0x4001077	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	       894	ftp.c	FUNCTION_17	ELSE_1	IF_2
0x400107d	            0x85c0	                           test eax, eax	       894	ftp.c	FUNCTION_17	ELSE_1	IF_2
0x400107f	            0x7514	                           jne 0x4001095	       894	ftp.c	FUNCTION_17	ELSE_1	IF_2
0x4001081	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       896	ftp.c	FUNCTION_17	ELSE_1	CALL_2
0x4001085	          0x4889c7	                            mov rdi, rax	       896	ftp.c	FUNCTION_17	ELSE_1	CALL_2
0x4001088	      0xe8cf170000	                 call sym.ftp_state_mdtm	       896	ftp.c	FUNCTION_17	ELSE_1	CALL_2
0x400108d	          0x8945f4	              mov dword [rbp - 0xc], eax	       896	ftp.c	FUNCTION_17	ELSE_1	CALL_2
0x4001090	      0xe90b010000	                           jmp 0x40011a0	       896	ftp.c	FUNCTION_17	ELSE_1	CALL_2
0x4001095	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       897	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x4001099	     0xfb6809a0300	          movzx eax, byte [rax + 0x39a] 	       897	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010a0	            0x84c0	                             test al, al	       897	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010a2	            0x746c	                            je 0x4001110	       897	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010a4	        0x488b45f8	                mov rax, qword [rbp - 8]	       897	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010a8	        0x488b4070	            mov rax, qword [rax + 0x70] 	       897	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010ac	          0x4885c0	                           test rax, rax	       897	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010af	            0x745f	                            je 0x4001110	       897	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010b1	        0x488b45f8	                mov rax, qword [rbp - 8]	       901	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010b5	    0xc78094000000	               mov dword [rax + 0x94], 0	       901	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010bf	        0x488b45f8	                mov rax, qword [rbp - 8]	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010c3	        0x488b4070	            mov rax, qword [rax + 0x70] 	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010c7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010cb	    0x488d8a500600	                  lea rcx, [rdx + 0x650]	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010d2	          0x4889c2	                            mov rdx, rax	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010d5	    0x488d35000000	                   lea rsi, [0x040010dc]	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010dc	          0x4889cf	                            mov rdi, rcx	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010df	      0xb800000000	                              mov eax, 0	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010e4	      0xe800000000	                          call 0x40010e9	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010e9	          0x8945f4	              mov dword [rbp - 0xc], eax	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010ec	        0x837df400	                cmp dword [rbp - 0xc], 0	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010f0	            0x7408	                            je 0x40010fa	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010f2	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010f5	      0xe9a9000000	                           jmp 0x40011a3	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       904	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x40010fe	      0xbe10000000	                           mov esi, 0x10	       904	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x4001103	          0x4889c7	                            mov rdi, rax	       904	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x4001106	      0xe879fcffff	                         call sym._state	       904	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x400110b	      0xe990000000	                           jmp 0x40011a0	       904	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x4001110	        0x488b45f8	                mov rax, qword [rbp - 8]	       907	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4001114	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       907	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x400111a	            0x85c0	                           test eax, eax	       907	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x400111c	            0x7473	                            je 0x4001191	       907	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x400111e	        0x488b45f8	                mov rax, qword [rbp - 8]	       908	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4001122	    0xc78094000000	               mov dword [rax + 0x94], 1	       908	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x400112c	        0x488b45f8	                mov rax, qword [rbp - 8]	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4001130	        0x488b5078	            mov rdx, qword [rax + 0x78] 	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4001134	        0x488b45f8	                mov rax, qword [rbp - 8]	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4001138	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x400113e	            0x4898	                                    cdqe	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4001140	        0x48c1e003	                              shl rax, 3	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4001144	        0x4883e808	                              sub rax, 8	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4001148	          0x4801d0	                            add rax, rdx	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x400114b	          0x488b00	                    mov rax, qword [rax]	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x400114e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4001152	    0x488d8a500600	                  lea rcx, [rdx + 0x650]	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4001159	          0x4889c2	                            mov rdx, rax	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x400115c	    0x488d35000000	                   lea rsi, [0x04001163]	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4001163	          0x4889cf	                            mov rdi, rcx	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4001166	      0xb800000000	                              mov eax, 0	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x400116b	      0xe800000000	                          call 0x4001170	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4001170	          0x8945f4	              mov dword [rbp - 0xc], eax	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4001173	        0x837df400	                cmp dword [rbp - 0xc], 0	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4001177	            0x7405	                            je 0x400117e	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4001179	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x400117c	            0xeb25	                           jmp 0x40011a3	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x400117e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       912	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4001182	      0xbe10000000	                           mov esi, 0x10	       912	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4001187	          0x4889c7	                            mov rdi, rax	       912	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x400118a	      0xe8f5fbffff	                         call sym._state	       912	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x400118f	            0xeb0f	                           jmp 0x40011a0	       912	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4001191	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       916	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	ELSE_4	CALL_3
0x4001195	          0x4889c7	                            mov rdi, rax	       916	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	ELSE_4	CALL_3
0x4001198	      0xe8bf160000	                 call sym.ftp_state_mdtm	       916	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	ELSE_4	CALL_3
0x400119d	          0x8945f4	              mov dword [rbp - 0xc], eax	       916	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	ELSE_4	CALL_3
0x40011a0	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       920	ftp.c	FUNCTION_17
0x40011a3	              0xc9	                                   leave	       921	ftp.c	FUNCTION_17
0x40011a4	              0xc3	                                     ret	       921	ftp.c	FUNCTION_17
ftp_regular_transfer	FOR,0:functions,0:SWITCH,0:ELSE,1:IF,3:DO,0:WHILE,0:CALL,7	73
0x4007fd8	              0x55	                                push rbp	      4348	ftp.c	FUNCTION_64
0x4007fd9	          0x4889e5	                            mov rbp, rsp	      4348	ftp.c	FUNCTION_64
0x4007fdc	        0x4883ec30	                           sub rsp, 0x30	      4348	ftp.c	FUNCTION_64
0x4007fe0	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4348	ftp.c	FUNCTION_64
0x4007fe4	        0x488975d0	             mov qword [rbp - 0x30], rsi	      4348	ftp.c	FUNCTION_64
0x4007fe8	    0x64488b042528	                mov rax, qword fs:[0x28]	      4348	ftp.c	FUNCTION_64
0x4007ff1	        0x488945f8	                mov qword [rbp - 8], rax	      4348	ftp.c	FUNCTION_64
0x4007ff5	            0x31c0	                            xor eax, eax	      4348	ftp.c	FUNCTION_64
0x4007ff7	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      4349	ftp.c	FUNCTION_64
0x4007ffe	        0xc645e300	                mov byte [rbp - 0x1d], 0	      4350	ftp.c	FUNCTION_64
0x4008002	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4351	ftp.c	FUNCTION_64
0x4008006	          0x488b00	                    mov rax, qword [rax]	      4351	ftp.c	FUNCTION_64
0x4008009	        0x488945e8	             mov qword [rbp - 0x18], rax	      4351	ftp.c	FUNCTION_64
0x400800d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4352	ftp.c	FUNCTION_64
0x4008011	    0x480550060000	                          add rax, 0x650	      4352	ftp.c	FUNCTION_64
0x4008017	        0x488945f0	             mov qword [rbp - 0x10], rax	      4352	ftp.c	FUNCTION_64
0x400801b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4353	ftp.c	FUNCTION_64
0x400801f	    0x48c780c00000	mov qword [rax + 0xc0], 0xffffffffffffffff	      4353	ftp.c	FUNCTION_64
0x400802a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4355	ftp.c	FUNCTION_64	CALL_1
0x400802e	      0xbe00000000	                              mov esi, 0	      4355	ftp.c	FUNCTION_64	CALL_1
0x4008033	          0x4889c7	                            mov rdi, rax	      4355	ftp.c	FUNCTION_64	CALL_1
0x4008036	      0xe800000000	                          call 0x400803b	      4355	ftp.c	FUNCTION_64	CALL_1
0x400803b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4356	ftp.c	FUNCTION_64	CALL_2
0x400803f	      0xbe00000000	                              mov esi, 0	      4356	ftp.c	FUNCTION_64	CALL_2
0x4008044	          0x4889c7	                            mov rdi, rax	      4356	ftp.c	FUNCTION_64	CALL_2
0x4008047	      0xe800000000	                          call 0x400804c	      4356	ftp.c	FUNCTION_64	CALL_2
0x400804c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4357	ftp.c	FUNCTION_64	CALL_3
0x4008050	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      4357	ftp.c	FUNCTION_64	CALL_3
0x4008057	          0x4889c7	                            mov rdi, rax	      4357	ftp.c	FUNCTION_64	CALL_3
0x400805a	      0xe800000000	                          call 0x400805f	      4357	ftp.c	FUNCTION_64	CALL_3
0x400805f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4358	ftp.c	FUNCTION_64	CALL_4
0x4008063	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      4358	ftp.c	FUNCTION_64	CALL_4
0x400806a	          0x4889c7	                            mov rdi, rax	      4358	ftp.c	FUNCTION_64	CALL_4
0x400806d	      0xe800000000	                          call 0x4008072	      4358	ftp.c	FUNCTION_64	CALL_4
0x4008072	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4360	ftp.c	FUNCTION_64
0x4008076	    0xc68091000000	                mov byte [rax + 0x91], 1	      4360	ftp.c	FUNCTION_64
0x400807d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      4362	ftp.c	FUNCTION_64	CALL_5
0x4008081	        0x488d4de3	                   lea rcx, [rbp - 0x1d]	      4362	ftp.c	FUNCTION_64	CALL_5
0x4008085	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4362	ftp.c	FUNCTION_64	CALL_5
0x4008089	          0x4889ce	                            mov rsi, rcx	      4362	ftp.c	FUNCTION_64	CALL_5
0x400808c	          0x4889c7	                            mov rdi, rax	      4362	ftp.c	FUNCTION_64	CALL_5
0x400808f	      0xe896e9ffff	                    call sym.ftp_perform	      4362	ftp.c	FUNCTION_64	CALL_5
0x4008094	          0x8945e4	             mov dword [rbp - 0x1c], eax	      4362	ftp.c	FUNCTION_64	CALL_5
0x4008097	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4366	ftp.c	FUNCTION_64	IF_1
0x400809b	            0x7538	                           jne 0x40080d5	      4366	ftp.c	FUNCTION_64	IF_1
0x400809d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4368	ftp.c	FUNCTION_64	IF_1	IF_2
0x40080a1	           0xfb600	                   movzx eax, byte [rax]	      4368	ftp.c	FUNCTION_64	IF_1	IF_2
0x40080a4	          0x83f001	                              xor eax, 1	      4368	ftp.c	FUNCTION_64	IF_1	IF_2
0x40080a7	            0x84c0	                             test al, al	      4368	ftp.c	FUNCTION_64	IF_1	IF_2
0x40080a9	            0x7407	                            je 0x40080b2	      4368	ftp.c	FUNCTION_64	IF_1	IF_2
0x40080ab	      0xb800000000	                              mov eax, 0	      4370	ftp.c	FUNCTION_64	IF_1	IF_2
0x40080b0	            0xeb32	                           jmp 0x40080e4	      4370	ftp.c	FUNCTION_64	IF_1	IF_2
0x40080b2	         0xfb645e3	            movzx eax, byte [rbp - 0x1d]	      4372	ftp.c	FUNCTION_64	IF_1	CALL_6
0x40080b6	           0xfb6d0	                           movzx edx, al	      4372	ftp.c	FUNCTION_64	IF_1	CALL_6
0x40080b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4372	ftp.c	FUNCTION_64	IF_1	CALL_6
0x40080bd	            0x89d6	                            mov esi, edx	      4372	ftp.c	FUNCTION_64	IF_1	CALL_6
0x40080bf	          0x4889c7	                            mov rdi, rax	      4372	ftp.c	FUNCTION_64	IF_1	CALL_6
0x40080c2	      0xe8d2fdffff	               call sym.ftp_dophase_done	      4372	ftp.c	FUNCTION_64	IF_1	CALL_6
0x40080c7	          0x8945e4	             mov dword [rbp - 0x1c], eax	      4372	ftp.c	FUNCTION_64	IF_1	CALL_6
0x40080ca	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4374	ftp.c	FUNCTION_64	IF_1	IF_3
0x40080ce	            0x7411	                            je 0x40080e1	      4374	ftp.c	FUNCTION_64	IF_1	IF_3
0x40080d0	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4375	ftp.c	FUNCTION_64	IF_1	IF_3
0x40080d3	            0xeb0f	                           jmp 0x40080e4	      4375	ftp.c	FUNCTION_64	IF_1	IF_3
0x40080d5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4378	ftp.c	FUNCTION_64	CALL_7
0x40080d9	          0x4889c7	                            mov rdi, rax	      4378	ftp.c	FUNCTION_64	CALL_7
0x40080dc	      0xe88080ffff	                       call sym.freedirs	      4378	ftp.c	FUNCTION_64	CALL_7
0x40080e1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4380	ftp.c	FUNCTION_64
0x40080e4	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4381	ftp.c	FUNCTION_64
0x40080e8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4381	ftp.c	FUNCTION_64
0x40080f1	            0x7405	                            je 0x40080f8	      4381	ftp.c	FUNCTION_64
0x40080f3	      0xe800000000	                          call 0x40080f8	      4381	ftp.c	FUNCTION_64
0x40080f8	              0xc9	                                   leave	      4381	ftp.c	FUNCTION_64
0x40080f9	              0xc3	                                     ret	      4381	ftp.c	FUNCTION_64
ftp_multi_statemach	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,0:DO,0:WHILE,0:CALL,1	22
0x40059ac	              0x55	                                push rbp	      3055	ftp.c	FUNCTION_45
0x40059ad	          0x4889e5	                            mov rbp, rsp	      3055	ftp.c	FUNCTION_45
0x40059b0	        0x4883ec20	                           sub rsp, 0x20	      3055	ftp.c	FUNCTION_45
0x40059b4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3055	ftp.c	FUNCTION_45
0x40059b8	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3055	ftp.c	FUNCTION_45
0x40059bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3056	ftp.c	FUNCTION_45
0x40059c0	    0x480550060000	                          add rax, 0x650	      3056	ftp.c	FUNCTION_45
0x40059c6	        0x488945f8	                mov qword [rbp - 8], rax	      3056	ftp.c	FUNCTION_45
0x40059ca	        0x488b45f8	                mov rax, qword [rbp - 8]	      3057	ftp.c	FUNCTION_45	CALL_1
0x40059ce	      0xbe00000000	                              mov esi, 0	      3057	ftp.c	FUNCTION_45	CALL_1
0x40059d3	          0x4889c7	                            mov rdi, rax	      3057	ftp.c	FUNCTION_45	CALL_1
0x40059d6	      0xe800000000	                          call 0x40059db	      3057	ftp.c	FUNCTION_45	CALL_1
0x40059db	          0x8945f4	              mov dword [rbp - 0xc], eax	      3057	ftp.c	FUNCTION_45	CALL_1
0x40059de	        0x488b45f8	                mov rax, qword [rbp - 8]	      3062	ftp.c	FUNCTION_45
0x40059e2	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      3062	ftp.c	FUNCTION_45
0x40059e8	            0x85c0	                           test eax, eax	      3062	ftp.c	FUNCTION_45
0x40059ea	           0xf94c2	                                 sete dl	      3062	ftp.c	FUNCTION_45
0x40059ed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3062	ftp.c	FUNCTION_45
0x40059f1	            0x8810	                      mov byte [rax], dl	      3062	ftp.c	FUNCTION_45
0x40059f3	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3064	ftp.c	FUNCTION_45
0x40059f6	              0xc9	                                   leave	      3065	ftp.c	FUNCTION_45
0x40059f7	              0xc3	                                     ret	      3065	ftp.c	FUNCTION_45
ftp_state_list	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,5:DO,0:WHILE,0:CALL,9	139
0x40024fa	              0x55	                                push rbp	      1445	ftp.c	FUNCTION_23
0x40024fb	          0x4889e5	                            mov rbp, rsp	      1445	ftp.c	FUNCTION_23
0x40024fe	        0x4883ec50	                           sub rsp, 0x50	      1445	ftp.c	FUNCTION_23
0x4002502	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1445	ftp.c	FUNCTION_23
0x4002506	    0x64488b042528	                mov rax, qword fs:[0x28]	      1445	ftp.c	FUNCTION_23
0x400250f	        0x488945f8	                mov qword [rbp - 8], rax	      1445	ftp.c	FUNCTION_23
0x4002513	            0x31c0	                            xor eax, eax	      1445	ftp.c	FUNCTION_23
0x4002515	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      1446	ftp.c	FUNCTION_23
0x400251c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1447	ftp.c	FUNCTION_23
0x4002520	          0x488b00	                    mov rax, qword [rax]	      1447	ftp.c	FUNCTION_23
0x4002523	        0x488945d8	             mov qword [rbp - 0x28], rax	      1447	ftp.c	FUNCTION_23
0x4002527	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1464	ftp.c	FUNCTION_23
0x400252b	    0x488b80185100	          mov rax, qword [rax + 0x5118] 	      1464	ftp.c	FUNCTION_23
0x4002532	        0x488945e0	             mov qword [rbp - 0x20], rax	      1464	ftp.c	FUNCTION_23
0x4002536	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1466	ftp.c	FUNCTION_23
0x400253e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1467	ftp.c	FUNCTION_23	IF_1
0x4002542	    0x8b80b8070000	           mov eax, dword [rax + 0x7b8] 	      1467	ftp.c	FUNCTION_23	IF_1
0x4002548	          0x83f802	                              cmp eax, 2	      1467	ftp.c	FUNCTION_23	IF_1
0x400254b	     0xf85b6000000	                           jne 0x4002607	      1467	ftp.c	FUNCTION_23	IF_1
0x4002551	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1467	ftp.c	FUNCTION_23	IF_1
0x4002556	     0xf84ab000000	                            je 0x4002607	      1467	ftp.c	FUNCTION_23	IF_1
0x400255c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1468	ftp.c	FUNCTION_23	IF_1	CALL_1
0x4002560	           0xfb600	                   movzx eax, byte [rax]	      1468	ftp.c	FUNCTION_23	IF_1	CALL_1
0x4002563	            0x84c0	                             test al, al	      1468	ftp.c	FUNCTION_23	IF_1	CALL_1
0x4002565	     0xf849c000000	                            je 0x4002607	      1468	ftp.c	FUNCTION_23	IF_1	CALL_1
0x400256b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1468	ftp.c	FUNCTION_23	IF_1	CALL_1
0x400256f	      0xbe2f000000	                           mov esi, 0x2f	      1468	ftp.c	FUNCTION_23	IF_1	CALL_1
0x4002574	          0x4889c7	                            mov rdi, rax	      1468	ftp.c	FUNCTION_23	IF_1	CALL_1
0x4002577	      0xe800000000	                          call 0x400257c	      1468	ftp.c	FUNCTION_23	IF_1	CALL_1
0x400257c	          0x4885c0	                           test rax, rax	      1468	ftp.c	FUNCTION_23	IF_1	CALL_1
0x400257f	     0xf8482000000	                            je 0x4002607	      1468	ftp.c	FUNCTION_23	IF_1	CALL_1
0x4002585	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1469	ftp.c	FUNCTION_23	IF_1	CALL_2
0x4002589	          0x4889c7	                            mov rdi, rax	      1469	ftp.c	FUNCTION_23	IF_1	CALL_2
0x400258c	      0xe800000000	                          call 0x4002591	      1469	ftp.c	FUNCTION_23	IF_1	CALL_2
0x4002591	        0x488945d0	             mov qword [rbp - 0x30], rax	      1469	ftp.c	FUNCTION_23	IF_1	CALL_2
0x4002595	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1472	ftp.c	FUNCTION_23	IF_1	IF_2
0x4002599	        0x488d50ff	                      lea rdx, [rax - 1]	      1472	ftp.c	FUNCTION_23	IF_1	IF_2
0x400259d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1472	ftp.c	FUNCTION_23	IF_1	IF_2
0x40025a1	          0x4801d0	                            add rax, rdx	      1472	ftp.c	FUNCTION_23	IF_1	IF_2
0x40025a4	           0xfb600	                   movzx eax, byte [rax]	      1472	ftp.c	FUNCTION_23	IF_1	IF_2
0x40025a7	            0x3c2f	                            cmp al, 0x2f	      1472	ftp.c	FUNCTION_23	IF_1	IF_2
0x40025a9	            0x7427	                            je 0x40025d2	      1472	ftp.c	FUNCTION_23	IF_1	IF_2
0x40025ab	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1474	ftp.c	FUNCTION_23	IF_1	IF_2	CALL_3
0x40025af	      0xbe2f000000	                           mov esi, 0x2f	      1474	ftp.c	FUNCTION_23	IF_1	IF_2	CALL_3
0x40025b4	          0x4889c7	                            mov rdi, rax	      1474	ftp.c	FUNCTION_23	IF_1	IF_2	CALL_3
0x40025b7	      0xe800000000	                          call 0x40025bc	      1474	ftp.c	FUNCTION_23	IF_1	IF_2	CALL_3
0x40025bc	        0x488945e8	             mov qword [rbp - 0x18], rax	      1474	ftp.c	FUNCTION_23	IF_1	IF_2	CALL_3
0x40025c0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1475	ftp.c	FUNCTION_23	IF_1	IF_2
0x40025c4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1475	ftp.c	FUNCTION_23	IF_1	IF_2
0x40025c8	          0x4829c2	                            sub rdx, rax	      1475	ftp.c	FUNCTION_23	IF_1	IF_2
0x40025cb	          0x4889d0	                            mov rax, rdx	      1475	ftp.c	FUNCTION_23	IF_1	IF_2
0x40025ce	        0x488945d0	             mov qword [rbp - 0x30], rax	      1475	ftp.c	FUNCTION_23	IF_1	IF_2
0x40025d2	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	      1477	ftp.c	FUNCTION_23	IF_1	CALL_4
0x40025d6	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1477	ftp.c	FUNCTION_23	IF_1	CALL_4
0x40025da	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1477	ftp.c	FUNCTION_23	IF_1	CALL_4
0x40025de	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1477	ftp.c	FUNCTION_23	IF_1	CALL_4
0x40025e2	    0x41b901000000	                              mov r9d, 1	      1477	ftp.c	FUNCTION_23	IF_1	CALL_4
0x40025e8	    0x41b800000000	                              mov r8d, 0	      1477	ftp.c	FUNCTION_23	IF_1	CALL_4
0x40025ee	          0x4889c7	                            mov rdi, rax	      1477	ftp.c	FUNCTION_23	IF_1	CALL_4
0x40025f1	      0xe800000000	                          call 0x40025f6	      1477	ftp.c	FUNCTION_23	IF_1	CALL_4
0x40025f6	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1477	ftp.c	FUNCTION_23	IF_1	CALL_4
0x40025f9	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1478	ftp.c	FUNCTION_23	IF_1	IF_3
0x40025fd	            0x7408	                            je 0x4002607	      1478	ftp.c	FUNCTION_23	IF_1	IF_3
0x40025ff	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1479	ftp.c	FUNCTION_23	IF_1	IF_3
0x4002602	      0xe912010000	                           jmp 0x4002719	      1479	ftp.c	FUNCTION_23	IF_1	IF_3
0x4002607	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1487	ftp.c	FUNCTION_23
0x400260b	          0x4885c0	                           test rax, rax	      1482	ftp.c	FUNCTION_23	CALL_5
0x400260e	            0x7406	                            je 0x4002616	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002610	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002614	            0xeb07	                           jmp 0x400261d	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002616	    0x488d0d000000	                   lea rcx, [0x0400261d]	      1482	ftp.c	FUNCTION_23	CALL_5
0x400261d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1486	ftp.c	FUNCTION_23
0x4002621	          0x4885c0	                           test rax, rax	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002624	            0x7409	                            je 0x400262f	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002626	    0x488d15000000	                   lea rdx, [0x0400262d]	      1482	ftp.c	FUNCTION_23	CALL_5
0x400262d	            0xeb07	                           jmp 0x4002636	      1482	ftp.c	FUNCTION_23	CALL_5
0x400262f	    0x488d15000000	                   lea rdx, [0x04002636]	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002636	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1483	ftp.c	FUNCTION_23
0x400263a	    0x488b80600800	           mov rax, qword [rax + 0x860] 	      1483	ftp.c	FUNCTION_23
0x4002641	          0x4885c0	                           test rax, rax	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002644	            0x740d	                            je 0x4002653	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002646	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1482	ftp.c	FUNCTION_23	CALL_5
0x400264a	    0x488b80600800	           mov rax, qword [rax + 0x860] 	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002651	            0xeb1f	                           jmp 0x4002672	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002653	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1485	ftp.c	FUNCTION_23
0x4002657	     0xfb680d60700	          movzx eax, byte [rax + 0x7d6] 	      1485	ftp.c	FUNCTION_23
0x400265e	            0x84c0	                             test al, al	      1485	ftp.c	FUNCTION_23
0x4002660	            0x7409	                            je 0x400266b	      1485	ftp.c	FUNCTION_23
0x4002662	    0x488d05000000	                   lea rax, [0x04002669]	      1485	ftp.c	FUNCTION_23
0x4002669	            0xeb07	                           jmp 0x4002672	      1485	ftp.c	FUNCTION_23
0x400266b	    0x488d05000000	                   lea rax, [0x04002672]	      1485	ftp.c	FUNCTION_23
0x4002672	          0x4889c6	                            mov rsi, rax	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002675	    0x488d3d000000	                   lea rdi, [0x0400267c]	      1482	ftp.c	FUNCTION_23	CALL_5
0x400267c	      0xb800000000	                              mov eax, 0	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002681	      0xe800000000	                          call 0x4002686	      1482	ftp.c	FUNCTION_23	CALL_5
0x4002686	        0x488945f0	             mov qword [rbp - 0x10], rax	      1482	ftp.c	FUNCTION_23	CALL_5
0x400268a	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1489	ftp.c	FUNCTION_23	IF_4
0x400268f	            0x751a	                           jne 0x40026ab	      1489	ftp.c	FUNCTION_23	IF_4
0x4002691	    0x488b05000000	            mov rax, qword [0x04002698] 	      1490	ftp.c	FUNCTION_23	IF_4	CALL_6
0x4002698	          0x488b00	                    mov rax, qword [rax]	      1490	ftp.c	FUNCTION_23	IF_4	CALL_6
0x400269b	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1490	ftp.c	FUNCTION_23	IF_4	CALL_6
0x400269f	          0x4889d7	                            mov rdi, rdx	      1490	ftp.c	FUNCTION_23	IF_4	CALL_6
0x40026a2	            0xffd0	                                call rax	      1490	ftp.c	FUNCTION_23	IF_4	CALL_6
0x40026a4	      0xb81b000000	                           mov eax, 0x1b	      1491	ftp.c	FUNCTION_23	IF_4
0x40026a9	            0xeb6e	                           jmp 0x4002719	      1491	ftp.c	FUNCTION_23	IF_4
0x40026ab	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1494	ftp.c	FUNCTION_23	CALL_7
0x40026af	    0x488d88500600	                  lea rcx, [rax + 0x650]	      1494	ftp.c	FUNCTION_23	CALL_7
0x40026b6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1494	ftp.c	FUNCTION_23	CALL_7
0x40026ba	          0x4889c2	                            mov rdx, rax	      1494	ftp.c	FUNCTION_23	CALL_7
0x40026bd	    0x488d35000000	                   lea rsi, [0x040026c4]	      1494	ftp.c	FUNCTION_23	CALL_7
0x40026c4	          0x4889cf	                            mov rdi, rcx	      1494	ftp.c	FUNCTION_23	CALL_7
0x40026c7	      0xb800000000	                              mov eax, 0	      1494	ftp.c	FUNCTION_23	CALL_7
0x40026cc	      0xe800000000	                          call 0x40026d1	      1494	ftp.c	FUNCTION_23	CALL_7
0x40026d1	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1494	ftp.c	FUNCTION_23	CALL_7
0x40026d4	    0x488b05000000	            mov rax, qword [0x040026db] 	      1496	ftp.c	FUNCTION_23	CALL_8
0x40026db	          0x488b00	                    mov rax, qword [rax]	      1496	ftp.c	FUNCTION_23	CALL_8
0x40026de	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1496	ftp.c	FUNCTION_23	CALL_8
0x40026e2	          0x4889d7	                            mov rdi, rdx	      1496	ftp.c	FUNCTION_23	CALL_8
0x40026e5	            0xffd0	                                call rax	      1496	ftp.c	FUNCTION_23	CALL_8
0x40026e7	    0x488b05000000	            mov rax, qword [0x040026ee] 	      1497	ftp.c	FUNCTION_23	CALL_9
0x40026ee	          0x488b00	                    mov rax, qword [rax]	      1497	ftp.c	FUNCTION_23	CALL_9
0x40026f1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1497	ftp.c	FUNCTION_23	CALL_9
0x40026f5	          0x4889d7	                            mov rdi, rdx	      1497	ftp.c	FUNCTION_23	CALL_9
0x40026f8	            0xffd0	                                call rax	      1497	ftp.c	FUNCTION_23	CALL_9
0x40026fa	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1499	ftp.c	FUNCTION_23	IF_5
0x40026fe	            0x7405	                            je 0x4002705	      1499	ftp.c	FUNCTION_23	IF_5
0x4002700	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1500	ftp.c	FUNCTION_23	IF_5
0x4002703	            0xeb14	                           jmp 0x4002719	      1500	ftp.c	FUNCTION_23	IF_5
0x4002705	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1502	ftp.c	FUNCTION_23
0x4002709	      0xbe1f000000	                           mov esi, 0x1f	      1502	ftp.c	FUNCTION_23
0x400270e	          0x4889c7	                            mov rdi, rax	      1502	ftp.c	FUNCTION_23
0x4002711	      0xe86ee6ffff	                         call sym._state	      1502	ftp.c	FUNCTION_23
0x4002716	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1504	ftp.c	FUNCTION_23
0x4002719	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1505	ftp.c	FUNCTION_23
0x400271d	    0x644833342528	                xor rsi, qword fs:[0x28]	      1505	ftp.c	FUNCTION_23
0x4002726	            0x7405	                            je 0x400272d	      1505	ftp.c	FUNCTION_23
0x4002728	      0xe800000000	                          call 0x400272d	      1505	ftp.c	FUNCTION_23
0x400272d	              0xc9	                                   leave	      1505	ftp.c	FUNCTION_23
0x400272e	              0xc3	                                     ret	      1505	ftp.c	FUNCTION_23
ftp_done	FOR,0:functions,0:SWITCH,1:ELSE,6:IF,26:DO,0:WHILE,0:CALL,32	463
0x4005b36	              0x55	                                push rbp	      3136	ftp.c	FUNCTION_48
0x4005b37	          0x4889e5	                            mov rbp, rsp	      3136	ftp.c	FUNCTION_48
0x4005b3a	              0x53	                                push rbx	      3136	ftp.c	FUNCTION_48
0x4005b3b	        0x4883ec78	                           sub rsp, 0x78	      3136	ftp.c	FUNCTION_48
0x4005b3f	        0x48897d88	             mov qword [rbp - 0x78], rdi	      3136	ftp.c	FUNCTION_48
0x4005b43	          0x897584	             mov dword [rbp - 0x7c], esi	      3136	ftp.c	FUNCTION_48
0x4005b46	            0x89d0	                            mov eax, edx	      3136	ftp.c	FUNCTION_48
0x4005b48	          0x884580	               mov byte [rbp - 0x80], al	      3136	ftp.c	FUNCTION_48
0x4005b4b	    0x64488b042528	                mov rax, qword fs:[0x28]	      3136	ftp.c	FUNCTION_48
0x4005b54	        0x488945e8	             mov qword [rbp - 0x18], rax	      3136	ftp.c	FUNCTION_48
0x4005b58	            0x31c0	                            xor eax, eax	      3136	ftp.c	FUNCTION_48
0x4005b5a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3137	ftp.c	FUNCTION_48
0x4005b5e	          0x488b00	                    mov rax, qword [rax]	      3137	ftp.c	FUNCTION_48
0x4005b61	        0x488945a8	             mov qword [rbp - 0x58], rax	      3137	ftp.c	FUNCTION_48
0x4005b65	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3138	ftp.c	FUNCTION_48
0x4005b69	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      3138	ftp.c	FUNCTION_48
0x4005b70	        0x488945b0	             mov qword [rbp - 0x50], rax	      3138	ftp.c	FUNCTION_48
0x4005b74	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3139	ftp.c	FUNCTION_48
0x4005b78	    0x480550060000	                          add rax, 0x650	      3139	ftp.c	FUNCTION_48
0x4005b7e	        0x488945b8	             mov qword [rbp - 0x48], rax	      3139	ftp.c	FUNCTION_48
0x4005b82	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3140	ftp.c	FUNCTION_48
0x4005b86	        0x488945c0	             mov qword [rbp - 0x40], rax	      3140	ftp.c	FUNCTION_48
0x4005b8a	    0xc74594000000	               mov dword [rbp - 0x6c], 0	      3143	ftp.c	FUNCTION_48
0x4005b91	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      3144	ftp.c	FUNCTION_48
0x4005b99	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3145	ftp.c	FUNCTION_48
0x4005b9d	    0x488b80185100	          mov rax, qword [rax + 0x5118] 	      3145	ftp.c	FUNCTION_48
0x4005ba4	        0x488945c8	             mov qword [rbp - 0x38], rax	      3145	ftp.c	FUNCTION_48
0x4005ba8	      0x48837db000	               cmp qword [rbp - 0x50], 0	      3147	ftp.c	FUNCTION_48	IF_1
0x4005bad	            0x750a	                           jne 0x4005bb9	      3147	ftp.c	FUNCTION_48	IF_1
0x4005baf	      0xb800000000	                              mov eax, 0	      3148	ftp.c	FUNCTION_48	IF_1
0x4005bb4	      0xe9fc060000	                           jmp 0x40062b5	      3148	ftp.c	FUNCTION_48	IF_1
0x4005bb9	        0x837d844e	           cmp dword [rbp - 0x7c], 0x4e 	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4005bbd	            0x772f	                            ja 0x4005bee	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4005bbf	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4005bc2	    0x488d14850000	                        lea rdx, [rax*4]	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4005bca	    0x488d05000000	                   lea rax, [0x04005bd1]	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4005bd1	          0x8b0402	              mov eax, dword [rdx + rax]	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4005bd4	          0x4863d0	                         movsxd rdx, eax	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4005bd7	    0x488d05000000	                   lea rax, [0x04005bde]	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4005bde	          0x4801d0	                            add rax, rdx	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4005be1	            0xffe0	                                 jmp rax	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4005be3	         0xfb64580	            movzx eax, byte [rbp - 0x80]	      3167	ftp.c	FUNCTION_48	SWITCH_1	IF_2
0x4005be7	          0x83f001	                              xor eax, 1	      3167	ftp.c	FUNCTION_48	SWITCH_1	IF_2
0x4005bea	            0x84c0	                             test al, al	      3167	ftp.c	FUNCTION_48	SWITCH_1	IF_2
0x4005bec	            0x752f	                           jne 0x4005c1d	      3167	ftp.c	FUNCTION_48	SWITCH_1	IF_2
0x4005bee	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3175	ftp.c	FUNCTION_48	SWITCH_1
0x4005bf2	    0xc68091000000	                mov byte [rax + 0x91], 0	      3175	ftp.c	FUNCTION_48	SWITCH_1
0x4005bf9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3176	ftp.c	FUNCTION_48	SWITCH_1
0x4005bfd	    0xc68098000000	                mov byte [rax + 0x98], 1	      3176	ftp.c	FUNCTION_48	SWITCH_1
0x4005c04	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3178	ftp.c	FUNCTION_48	SWITCH_1	CALL_1
0x4005c08	      0xbe01000000	                              mov esi, 1	      3178	ftp.c	FUNCTION_48	SWITCH_1	CALL_1
0x4005c0d	          0x4889c7	                            mov rdi, rax	      3178	ftp.c	FUNCTION_48	SWITCH_1	CALL_1
0x4005c10	      0xe800000000	                          call 0x4005c15	      3178	ftp.c	FUNCTION_48	SWITCH_1	CALL_1
0x4005c15	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      3179	ftp.c	FUNCTION_48	SWITCH_1
0x4005c18	          0x894594	             mov dword [rbp - 0x6c], eax	      3179	ftp.c	FUNCTION_48	SWITCH_1
0x4005c1b	            0xeb01	                           jmp 0x4005c1e	      3180	ftp.c	FUNCTION_48	SWITCH_1
0x4005c1d	              0x90	                                     nop	      3168	ftp.c	FUNCTION_48	SWITCH_1	IF_2
0x4005c1e	    0x488b05000000	            mov rax, qword [0x04005c25] 	      3184	ftp.c	FUNCTION_48	CALL_2
0x4005c25	          0x488b00	                    mov rax, qword [rax]	      3184	ftp.c	FUNCTION_48	CALL_2
0x4005c28	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3184	ftp.c	FUNCTION_48	CALL_2
0x4005c2c	    0x488b92a00000	            mov rdx, qword [rdx + 0xa0] 	      3184	ftp.c	FUNCTION_48	CALL_2
0x4005c33	          0x4889d7	                            mov rdi, rdx	      3184	ftp.c	FUNCTION_48	CALL_2
0x4005c36	            0xffd0	                                call rax	      3184	ftp.c	FUNCTION_48	CALL_2
0x4005c38	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3186	ftp.c	FUNCTION_48	IF_3
0x4005c3c	     0xfb680f95000	         movzx eax, byte [rax + 0x50f9] 	      3186	ftp.c	FUNCTION_48	IF_3
0x4005c43	            0x84c0	                             test al, al	      3186	ftp.c	FUNCTION_48	IF_3
0x4005c45	            0x746c	                            je 0x4005cb3	      3186	ftp.c	FUNCTION_48	IF_3
0x4005c47	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3187	ftp.c	FUNCTION_48	IF_3	IF_4
0x4005c4b	    0x488b80780a00	           mov rax, qword [rax + 0xa78] 	      3187	ftp.c	FUNCTION_48	IF_3	IF_4
0x4005c52	          0x4885c0	                           test rax, rax	      3187	ftp.c	FUNCTION_48	IF_3	IF_4
0x4005c55	            0x744d	                            je 0x4005ca4	      3187	ftp.c	FUNCTION_48	IF_3	IF_4
0x4005c57	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3187	ftp.c	FUNCTION_48	IF_3	IF_4
0x4005c5b	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      3187	ftp.c	FUNCTION_48	IF_3	IF_4
0x4005c62	          0x4885c0	                           test rax, rax	      3187	ftp.c	FUNCTION_48	IF_3	IF_4
0x4005c65	            0x743d	                            je 0x4005ca4	      3187	ftp.c	FUNCTION_48	IF_3	IF_4
0x4005c67	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3188	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_3
0x4005c6b	      0xbe01000000	                              mov esi, 1	      3188	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_3
0x4005c70	          0x4889c7	                            mov rdi, rax	      3188	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_3
0x4005c73	      0xe800000000	                          call 0x4005c78	      3188	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_3
0x4005c78	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3189	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_4
0x4005c7c	    0x488b80780a00	           mov rax, qword [rax + 0xa78] 	      3189	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_4
0x4005c83	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      3189	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_4
0x4005c87	    0x488b92d05100	          mov rdx, qword [rdx + 0x51d0] 	      3189	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_4
0x4005c8e	          0x4889d7	                            mov rdi, rdx	      3189	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_4
0x4005c91	            0xffd0	                                call rax	      3189	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_4
0x4005c93	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3190	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_5
0x4005c97	      0xbe00000000	                              mov esi, 0	      3190	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_5
0x4005c9c	          0x4889c7	                            mov rdi, rax	      3190	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_5
0x4005c9f	      0xe800000000	                          call 0x4005ca4	      3190	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_5
0x4005ca4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3192	ftp.c	FUNCTION_48	IF_3
0x4005ca8	    0x48c780d80000	mov qword [rax + 0xd8], 0xffffffffffffffff	      3192	ftp.c	FUNCTION_48	IF_3
0x4005cb3	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      3195	ftp.c	FUNCTION_48	IF_5
0x4005cb7	            0x752b	                           jne 0x4005ce4	      3195	ftp.c	FUNCTION_48	IF_5
0x4005cb9	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      3197	ftp.c	FUNCTION_48	CALL_6
0x4005cbd	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      3197	ftp.c	FUNCTION_48	CALL_6
0x4005cc1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3197	ftp.c	FUNCTION_48	CALL_6
0x4005cc5	    0x41b901000000	                              mov r9d, 1	      3197	ftp.c	FUNCTION_48	CALL_6
0x4005ccb	    0x41b800000000	                              mov r8d, 0	      3197	ftp.c	FUNCTION_48	CALL_6
0x4005cd1	          0x4889d1	                            mov rcx, rdx	      3197	ftp.c	FUNCTION_48	CALL_6
0x4005cd4	      0xba00000000	                              mov edx, 0	      3197	ftp.c	FUNCTION_48	CALL_6
0x4005cd9	          0x4889c7	                            mov rdi, rax	      3197	ftp.c	FUNCTION_48	CALL_6
0x4005cdc	      0xe800000000	                          call 0x4005ce1	      3197	ftp.c	FUNCTION_48	CALL_6
0x4005ce1	          0x894594	             mov dword [rbp - 0x6c], eax	      3197	ftp.c	FUNCTION_48	CALL_6
0x4005ce4	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      3198	ftp.c	FUNCTION_48	IF_6
0x4005ce8	            0x7430	                            je 0x4005d1a	      3198	ftp.c	FUNCTION_48	IF_6
0x4005cea	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3201	ftp.c	FUNCTION_48	IF_6
0x4005cee	    0xc68091000000	                mov byte [rax + 0x91], 0	      3201	ftp.c	FUNCTION_48	IF_6
0x4005cf5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3202	ftp.c	FUNCTION_48	IF_6	CALL_7
0x4005cf9	      0xbe01000000	                              mov esi, 1	      3202	ftp.c	FUNCTION_48	IF_6	CALL_7
0x4005cfe	          0x4889c7	                            mov rdi, rax	      3202	ftp.c	FUNCTION_48	IF_6	CALL_7
0x4005d01	      0xe800000000	                          call 0x4005d06	      3202	ftp.c	FUNCTION_48	IF_6	CALL_7
0x4005d06	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3203	ftp.c	FUNCTION_48	IF_6
0x4005d0a	    0x48c780a00000	               mov qword [rax + 0xa0], 0	      3203	ftp.c	FUNCTION_48	IF_6
0x4005d15	      0xe93a010000	                           jmp 0x4005e54	      3203	ftp.c	FUNCTION_48	IF_6
0x4005d1a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4005d1e	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4005d25	          0x4885c0	                           test rax, rax	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4005d28	            0x7415	                            je 0x4005d3f	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4005d2a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4005d2e	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4005d35	          0x4889c7	                            mov rdi, rax	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4005d38	      0xe800000000	                          call 0x4005d3d	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4005d3d	            0xeb05	                           jmp 0x4005d44	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4005d3f	      0xb800000000	                              mov eax, 0	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4005d44	        0x488945d0	             mov qword [rbp - 0x30], rax	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4005d48	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      3207	ftp.c	FUNCTION_48	ELSE_1	CALL_9
0x4005d4c	          0x4889c7	                            mov rdi, rax	      3207	ftp.c	FUNCTION_48	ELSE_1	CALL_9
0x4005d4f	      0xe800000000	                          call 0x4005d54	      3207	ftp.c	FUNCTION_48	ELSE_1	CALL_9
0x4005d54	        0x482b45d0	             sub rax, qword [rbp - 0x30]	      3207	ftp.c	FUNCTION_48	ELSE_1	CALL_9
0x4005d58	        0x488945d8	             mov qword [rbp - 0x28], rax	      3207	ftp.c	FUNCTION_48	ELSE_1	CALL_9
0x4005d5c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3208	ftp.c	FUNCTION_48	ELSE_1	IF_7
0x4005d60	     0xfb680980000	           movzx eax, byte [rax + 0x98] 	      3208	ftp.c	FUNCTION_48	ELSE_1	IF_7
0x4005d67	          0x83f001	                              xor eax, 1	      3208	ftp.c	FUNCTION_48	ELSE_1	IF_7
0x4005d6a	            0x84c0	                             test al, al	      3208	ftp.c	FUNCTION_48	ELSE_1	IF_7
0x4005d6c	     0xf84c0000000	                            je 0x4005e32	      3208	ftp.c	FUNCTION_48	ELSE_1	IF_7
0x4005d72	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3209	ftp.c	FUNCTION_48	ELSE_1	IF_7
0x4005d76	    0x8b90b8070000	           mov edx, dword [rax + 0x7b8] 	      3209	ftp.c	FUNCTION_48	ELSE_1	IF_7
0x4005d7c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3209	ftp.c	FUNCTION_48	ELSE_1	IF_7
0x4005d80	    0x8990a8000000	             mov dword [rax + 0xa8], edx	      3209	ftp.c	FUNCTION_48	ELSE_1	IF_7
0x4005d86	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      3210	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4005d8b	            0x743c	                            je 0x4005dc9	      3210	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4005d8d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3210	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4005d91	    0x8b80b8070000	           mov eax, dword [rax + 0x7b8] 	      3210	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4005d97	          0x83f802	                              cmp eax, 2	      3210	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4005d9a	            0x742d	                            je 0x4005dc9	      3210	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4005d9c	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3211	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4005da0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3211	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4005da4	    0x488990a00000	             mov qword [rax + 0xa0], rdx	      3211	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4005dab	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      3212	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8	IF_9
0x4005db0	            0x744b	                            je 0x4005dfd	      3212	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8	IF_9
0x4005db2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3214	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8	IF_9
0x4005db6	    0x488b90a00000	            mov rdx, qword [rax + 0xa0] 	      3214	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8	IF_9
0x4005dbd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3214	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8	IF_9
0x4005dc1	          0x4801d0	                            add rax, rdx	      3214	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8	IF_9
0x4005dc4	          0xc60000	                       mov byte [rax], 0	      3214	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8	IF_9
0x4005dc7	            0xeb34	                           jmp 0x4005dfd	      3212	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8	IF_9
0x4005dc9	    0x488b05000000	            mov rax, qword [0x04005dd0] 	      3218	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_10
0x4005dd0	          0x488b00	                    mov rax, qword [rax]	      3218	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_10
0x4005dd3	    0x488d3d000000	                   lea rdi, [0x04005dda]	      3218	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_10
0x4005dda	            0xffd0	                                call rax	      3218	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_10
0x4005ddc	          0x4889c2	                            mov rdx, rax	      3218	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_10
0x4005ddf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3218	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_10
0x4005de3	    0x488990a00000	             mov qword [rax + 0xa0], rdx	      3218	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_10
0x4005dea	    0x488b05000000	            mov rax, qword [0x04005df1] 	      3219	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_11
0x4005df1	          0x488b00	                    mov rax, qword [rax]	      3219	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_11
0x4005df4	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3219	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_11
0x4005df8	          0x4889d7	                            mov rdi, rdx	      3219	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_11
0x4005dfb	            0xffd0	                                call rax	      3219	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_11
0x4005dfd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3221	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_10
0x4005e01	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	      3221	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_10
0x4005e08	          0x4885c0	                           test rax, rax	      3221	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_10
0x4005e0b	            0x7447	                            je 0x4005e54	      3221	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_10
0x4005e0d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3222	ftp.c	FUNCTION_48	ELSE_1	IF_7	CALL_12
0x4005e11	    0x488b90a00000	            mov rdx, qword [rax + 0xa0] 	      3222	ftp.c	FUNCTION_48	ELSE_1	IF_7	CALL_12
0x4005e18	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3222	ftp.c	FUNCTION_48	ELSE_1	IF_7	CALL_12
0x4005e1c	    0x488d35000000	                   lea rsi, [0x04005e23]	      3222	ftp.c	FUNCTION_48	ELSE_1	IF_7	CALL_12
0x4005e23	          0x4889c7	                            mov rdi, rax	      3222	ftp.c	FUNCTION_48	ELSE_1	IF_7	CALL_12
0x4005e26	      0xb800000000	                              mov eax, 0	      3222	ftp.c	FUNCTION_48	ELSE_1	IF_7	CALL_12
0x4005e2b	      0xe800000000	                          call 0x4005e30	      3222	ftp.c	FUNCTION_48	ELSE_1	IF_7	CALL_12
0x4005e30	            0xeb22	                           jmp 0x4005e54	      3222	ftp.c	FUNCTION_48	ELSE_1	IF_7	CALL_12
0x4005e32	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3225	ftp.c	FUNCTION_48	ELSE_1	ELSE_3
0x4005e36	    0x48c780a00000	               mov qword [rax + 0xa0], 0	      3225	ftp.c	FUNCTION_48	ELSE_1	ELSE_3
0x4005e41	    0x488b05000000	            mov rax, qword [0x04005e48] 	      3226	ftp.c	FUNCTION_48	ELSE_1	ELSE_3	CALL_13
0x4005e48	          0x488b00	                    mov rax, qword [rax]	      3226	ftp.c	FUNCTION_48	ELSE_1	ELSE_3	CALL_13
0x4005e4b	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      3226	ftp.c	FUNCTION_48	ELSE_1	ELSE_3	CALL_13
0x4005e4f	          0x4889d7	                            mov rdi, rdx	      3226	ftp.c	FUNCTION_48	ELSE_1	ELSE_3	CALL_13
0x4005e52	            0xffd0	                                call rax	      3226	ftp.c	FUNCTION_48	ELSE_1	ELSE_3	CALL_13
0x4005e54	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3230	ftp.c	FUNCTION_48	CALL_14
0x4005e58	          0x4889c7	                            mov rdi, rax	      3230	ftp.c	FUNCTION_48	CALL_14
0x4005e5b	      0xe801a3ffff	                       call sym.freedirs	      3230	ftp.c	FUNCTION_48	CALL_14
0x4005e60	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3238	ftp.c	FUNCTION_48	IF_11
0x4005e64	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	      3238	ftp.c	FUNCTION_48	IF_11
0x4005e6a	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3238	ftp.c	FUNCTION_48	IF_11
0x4005e6d	     0xf84be000000	                            je 0x4005f31	      3238	ftp.c	FUNCTION_48	IF_11
0x4005e73	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4005e77	     0xf8588000000	                           jne 0x4005f05	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4005e7d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4005e81	     0xfb680900000	           movzx eax, byte [rax + 0x90] 	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4005e88	            0x84c0	                             test al, al	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4005e8a	            0x7479	                            je 0x4005f05	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4005e8c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4005e90	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4005e97	          0x4885c0	                           test rax, rax	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4005e9a	            0x7e69	                           jle 0x4005f05	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4005e9c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3241	ftp.c	FUNCTION_48	IF_11	IF_12	CALL_16
0x4005ea0	    0x488d15000000	                   lea rdx, [0x04005ea7]	      3241	ftp.c	FUNCTION_48	IF_11	IF_12	CALL_16
0x4005ea7	    0x488d35000000	                   lea rsi, [0x04005eae]	      3241	ftp.c	FUNCTION_48	IF_11	IF_12	CALL_16
0x4005eae	          0x4889c7	                            mov rdi, rax	      3241	ftp.c	FUNCTION_48	IF_11	IF_12	CALL_16
0x4005eb1	      0xb800000000	                              mov eax, 0	      3241	ftp.c	FUNCTION_48	IF_11	IF_12	CALL_16
0x4005eb6	      0xe800000000	                          call 0x4005ebb	      3241	ftp.c	FUNCTION_48	IF_11	IF_12	CALL_16
0x4005ebb	          0x894594	             mov dword [rbp - 0x6c], eax	      3241	ftp.c	FUNCTION_48	IF_11	IF_12	CALL_16
0x4005ebe	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      3242	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13
0x4005ec2	            0x7441	                            je 0x4005f05	      3242	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13
0x4005ec4	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x4005ec7	            0x89c7	                            mov edi, eax	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x4005ec9	      0xe800000000	                          call 0x4005ece	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x4005ece	          0x4889c2	                            mov rdx, rax	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x4005ed1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x4005ed5	    0x488d35000000	                   lea rsi, [0x04005edc]	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x4005edc	          0x4889c7	                            mov rdi, rax	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x4005edf	      0xb800000000	                              mov eax, 0	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x4005ee4	      0xe800000000	                          call 0x4005ee9	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x4005ee9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3245	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13
0x4005eed	    0xc68091000000	                mov byte [rax + 0x91], 0	      3245	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13
0x4005ef4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3246	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_19
0x4005ef8	      0xbe01000000	                              mov esi, 1	      3246	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_19
0x4005efd	          0x4889c7	                            mov rdi, rax	      3246	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_19
0x4005f00	      0xe800000000	                          call 0x4005f05	      3246	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_19
0x4005f05	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3250	ftp.c	FUNCTION_48	IF_11	IF_14
0x4005f09	     0xfb680a80200	          movzx eax, byte [rax + 0x2a8] 	      3250	ftp.c	FUNCTION_48	IF_11	IF_14
0x4005f10	            0x84c0	                             test al, al	      3250	ftp.c	FUNCTION_48	IF_11	IF_14
0x4005f12	            0x7411	                            je 0x4005f25	      3250	ftp.c	FUNCTION_48	IF_11	IF_14
0x4005f14	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3253	ftp.c	FUNCTION_48	IF_11	IF_14	CALL_20
0x4005f18	      0xbe01000000	                              mov esi, 1	      3253	ftp.c	FUNCTION_48	IF_11	IF_14	CALL_20
0x4005f1d	          0x4889c7	                            mov rdi, rax	      3253	ftp.c	FUNCTION_48	IF_11	IF_14	CALL_20
0x4005f20	      0xe800000000	                          call 0x4005f25	      3253	ftp.c	FUNCTION_48	IF_11	IF_14	CALL_20
0x4005f25	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3258	ftp.c	FUNCTION_48	IF_11	CALL_21
0x4005f29	          0x4889c7	                            mov rdi, rax	      3258	ftp.c	FUNCTION_48	IF_11	CALL_21
0x4005f2c	      0xe8e1a1ffff	          call sym.close_secondarysocket	      3258	ftp.c	FUNCTION_48	IF_11	CALL_21
0x4005f31	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      3261	ftp.c	FUNCTION_48	IF_15
0x4005f35	     0xf8579010000	                           jne 0x40060b4	      3261	ftp.c	FUNCTION_48	IF_15
0x4005f3b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3261	ftp.c	FUNCTION_48	IF_15
0x4005f3f	          0x8b4018	            mov eax, dword [rax + 0x18] 	      3261	ftp.c	FUNCTION_48	IF_15
0x4005f42	            0x85c0	                           test eax, eax	      3261	ftp.c	FUNCTION_48	IF_15
0x4005f44	     0xf856a010000	                           jne 0x40060b4	      3261	ftp.c	FUNCTION_48	IF_15
0x4005f4a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3261	ftp.c	FUNCTION_48	IF_15
0x4005f4e	     0xfb680910000	           movzx eax, byte [rax + 0x91] 	      3261	ftp.c	FUNCTION_48	IF_15
0x4005f55	            0x84c0	                             test al, al	      3261	ftp.c	FUNCTION_48	IF_15
0x4005f57	     0xf8457010000	                            je 0x40060b4	      3261	ftp.c	FUNCTION_48	IF_15
0x4005f5d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3262	ftp.c	FUNCTION_48	IF_15
0x4005f61	         0xfb64020	           movzx eax, byte [rax + 0x20] 	      3262	ftp.c	FUNCTION_48	IF_15
0x4005f65	            0x84c0	                             test al, al	      3261	ftp.c	FUNCTION_48	IF_15
0x4005f67	     0xf8447010000	                            je 0x40060b4	      3261	ftp.c	FUNCTION_48	IF_15
0x4005f6d	         0xfb64580	            movzx eax, byte [rbp - 0x80]	      3262	ftp.c	FUNCTION_48	IF_15
0x4005f71	          0x83f001	                              xor eax, 1	      3262	ftp.c	FUNCTION_48	IF_15
0x4005f74	            0x84c0	                             test al, al	      3262	ftp.c	FUNCTION_48	IF_15
0x4005f76	     0xf8438010000	                            je 0x40060b4	      3262	ftp.c	FUNCTION_48	IF_15
0x4005f7c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3269	ftp.c	FUNCTION_48	IF_15
0x4005f80	        0x488b4050	            mov rax, qword [rax + 0x50] 	      3269	ftp.c	FUNCTION_48	IF_15
0x4005f84	        0x488945e0	             mov qword [rbp - 0x20], rax	      3269	ftp.c	FUNCTION_48	IF_15
0x4005f88	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3271	ftp.c	FUNCTION_48	IF_15
0x4005f8c	    0x48c7405060ea	         mov qword [rax + 0x50], 0xea60 	      3271	ftp.c	FUNCTION_48	IF_15
0x4005f94	        0x488b5dc0	             mov rbx, qword [rbp - 0x40]	      3272	ftp.c	FUNCTION_48	IF_15	CALL_22
0x4005f98	      0xe800000000	                          call 0x4005f9d	      3272	ftp.c	FUNCTION_48	IF_15	CALL_22
0x4005f9d	        0x48894340	             mov qword [rbx + 0x40], rax	      3272	ftp.c	FUNCTION_48	IF_15	CALL_22
0x4005fa1	        0x48895348	             mov qword [rbx + 0x48], rdx	      3272	ftp.c	FUNCTION_48	IF_15	CALL_22
0x4005fa5	        0x488d5590	                   lea rdx, [rbp - 0x70]	      3274	ftp.c	FUNCTION_48	IF_15	CALL_23
0x4005fa9	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      3274	ftp.c	FUNCTION_48	IF_15	CALL_23
0x4005fad	        0x488d4598	                   lea rax, [rbp - 0x68]	      3274	ftp.c	FUNCTION_48	IF_15	CALL_23
0x4005fb1	          0x4889ce	                            mov rsi, rcx	      3274	ftp.c	FUNCTION_48	IF_15	CALL_23
0x4005fb4	          0x4889c7	                            mov rdi, rax	      3274	ftp.c	FUNCTION_48	IF_15	CALL_23
0x4005fb7	      0xe800000000	                          call 0x4005fbc	      3274	ftp.c	FUNCTION_48	IF_15	CALL_23
0x4005fbc	          0x894594	             mov dword [rbp - 0x6c], eax	      3274	ftp.c	FUNCTION_48	IF_15	CALL_23
0x4005fbf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3276	ftp.c	FUNCTION_48	IF_15
0x4005fc3	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3276	ftp.c	FUNCTION_48	IF_15
0x4005fc7	        0x48895050	             mov qword [rax + 0x50], rdx	      3276	ftp.c	FUNCTION_48	IF_15
0x4005fcb	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3278	ftp.c	FUNCTION_48	IF_15	IF_16
0x4005fcf	          0x4885c0	                           test rax, rax	      3278	ftp.c	FUNCTION_48	IF_15	IF_16
0x4005fd2	            0x753a	                           jne 0x400600e	      3278	ftp.c	FUNCTION_48	IF_15	IF_16
0x4005fd4	        0x837d941c	           cmp dword [rbp - 0x6c], 0x1c 	      3278	ftp.c	FUNCTION_48	IF_15	IF_16
0x4005fd8	            0x7534	                           jne 0x400600e	      3278	ftp.c	FUNCTION_48	IF_15	IF_16
0x4005fda	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3279	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_24
0x4005fde	    0x488d35000000	                   lea rsi, [0x04005fe5]	      3279	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_24
0x4005fe5	          0x4889c7	                            mov rdi, rax	      3279	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_24
0x4005fe8	      0xb800000000	                              mov eax, 0	      3279	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_24
0x4005fed	      0xe800000000	                          call 0x4005ff2	      3279	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_24
0x4005ff2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3280	ftp.c	FUNCTION_48	IF_15	IF_16
0x4005ff6	    0xc68091000000	                mov byte [rax + 0x91], 0	      3280	ftp.c	FUNCTION_48	IF_15	IF_16
0x4005ffd	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3281	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_25
0x4006001	      0xbe01000000	                              mov esi, 1	      3281	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_25
0x4006006	          0x4889c7	                            mov rdi, rax	      3281	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_25
0x4006009	      0xe800000000	                          call 0x400600e	      3281	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_25
0x400600e	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      3284	ftp.c	FUNCTION_48	IF_15	IF_17
0x4006012	            0x7408	                            je 0x400601c	      3284	ftp.c	FUNCTION_48	IF_15	IF_17
0x4006014	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      3285	ftp.c	FUNCTION_48	IF_15	IF_17
0x4006017	      0xe999020000	                           jmp 0x40062b5	      3285	ftp.c	FUNCTION_48	IF_15	IF_17
0x400601c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3287	ftp.c	FUNCTION_48	IF_15	IF_18
0x4006020	     0xfb680900000	           movzx eax, byte [rax + 0x90] 	      3287	ftp.c	FUNCTION_48	IF_15	IF_18
0x4006027	            0x84c0	                             test al, al	      3287	ftp.c	FUNCTION_48	IF_15	IF_18
0x4006029	            0x7441	                            je 0x400606c	      3287	ftp.c	FUNCTION_48	IF_15	IF_18
0x400602b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3287	ftp.c	FUNCTION_48	IF_15	IF_18
0x400602f	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      3287	ftp.c	FUNCTION_48	IF_15	IF_18
0x4006036	          0x4885c0	                           test rax, rax	      3287	ftp.c	FUNCTION_48	IF_15	IF_18
0x4006039	            0x7e31	                           jle 0x400606c	      3287	ftp.c	FUNCTION_48	IF_15	IF_18
0x400603b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3290	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_26
0x400603f	    0x488d35000000	                   lea rsi, [0x04006046]	      3290	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_26
0x4006046	          0x4889c7	                            mov rdi, rax	      3290	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_26
0x4006049	      0xb800000000	                              mov eax, 0	      3290	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_26
0x400604e	      0xe800000000	                          call 0x4006053	      3290	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_26
0x4006053	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3291	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_27
0x4006057	      0xbe01000000	                              mov esi, 1	      3291	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_27
0x400605c	          0x4889c7	                            mov rdi, rax	      3291	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_27
0x400605f	      0xe800000000	                          call 0x4006064	      3291	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_27
0x4006064	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      3292	ftp.c	FUNCTION_48	IF_15	IF_18
0x4006067	      0xe949020000	                           jmp 0x40062b5	      3292	ftp.c	FUNCTION_48	IF_15	IF_18
0x400606c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3295	ftp.c	FUNCTION_48	IF_15	IF_19
0x4006070	     0xfb680900000	           movzx eax, byte [rax + 0x90] 	      3295	ftp.c	FUNCTION_48	IF_15	IF_19
0x4006077	          0x83f001	                              xor eax, 1	      3295	ftp.c	FUNCTION_48	IF_15	IF_19
0x400607a	            0x84c0	                             test al, al	      3295	ftp.c	FUNCTION_48	IF_15	IF_19
0x400607c	            0x7436	                            je 0x40060b4	      3295	ftp.c	FUNCTION_48	IF_15	IF_19
0x400607e	          0x8b4590	             mov eax, dword [rbp - 0x70]	      3297	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20
0x4006081	      0x3de2000000	                           cmp eax, 0xe2	      3297	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20
0x4006086	            0x742c	                            je 0x40060b4	      3297	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20
0x4006088	          0x8b4590	             mov eax, dword [rbp - 0x70]	      3297	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20
0x400608b	      0x3dfa000000	                           cmp eax, 0xfa	      3297	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20
0x4006090	            0x7422	                            je 0x40060b4	      3297	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20
0x4006092	          0x8b5590	             mov edx, dword [rbp - 0x70]	      3298	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20	CALL_28
0x4006095	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3298	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20	CALL_28
0x4006099	    0x488d35000000	                   lea rsi, [0x040060a0]	      3298	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20	CALL_28
0x40060a0	          0x4889c7	                            mov rdi, rax	      3298	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20	CALL_28
0x40060a3	      0xb800000000	                              mov eax, 0	      3298	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20	CALL_28
0x40060a8	      0xe800000000	                          call 0x40060ad	      3298	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20	CALL_28
0x40060ad	    0xc74594120000	           mov dword [rbp - 0x6c], 0x12 	      3299	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20
0x40060b4	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      3304	ftp.c	FUNCTION_48	IF_21
0x40060b8	     0xf859a010000	                           jne 0x4006258	      3304	ftp.c	FUNCTION_48	IF_21
0x40060be	        0x807d8000	                cmp byte [rbp - 0x80], 0	      3304	ftp.c	FUNCTION_48	IF_21
0x40060c2	     0xf8590010000	                           jne 0x4006258	      3304	ftp.c	FUNCTION_48	IF_21
0x40060c8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3308	ftp.c	FUNCTION_48	ELSE_4	IF_22
0x40060cc	     0xfb680e20700	          movzx eax, byte [rax + 0x7e2] 	      3308	ftp.c	FUNCTION_48	ELSE_4	IF_22
0x40060d3	            0x84c0	                             test al, al	      3308	ftp.c	FUNCTION_48	ELSE_4	IF_22
0x40060d5	     0xf8491000000	                            je 0x400616c	      3308	ftp.c	FUNCTION_48	ELSE_4	IF_22
0x40060db	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3309	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060df	    0x488b80505100	          mov rax, qword [rax + 0x5150] 	      3309	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060e6	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      3309	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060ea	     0xf8468010000	                            je 0x4006258	      3309	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060f0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3310	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060f4	    0x488b90505100	          mov rdx, qword [rax + 0x5150] 	      3310	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060fb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3310	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40060ff	          0x488b00	                    mov rax, qword [rax]	      3310	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x4006102	          0x488b00	                    mov rax, qword [rax]	      3310	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x4006105	          0x4839c2	                            cmp rdx, rax	      3309	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x4006108	     0xf844a010000	                            je 0x4006258	      3309	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x400610e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3311	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x4006112	     0xfb680720500	          movzx eax, byte [rax + 0x572] 	      3311	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x4006119	          0x83f001	                              xor eax, 1	      3311	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x400611c	            0x84c0	                             test al, al	      3310	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x400611e	     0xf8434010000	                            je 0x4006258	      3310	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x4006124	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3312	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x4006128	          0x8b4018	            mov eax, dword [rax + 0x18] 	      3312	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x400612b	            0x85c0	                           test eax, eax	      3311	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x400612d	     0xf8525010000	                           jne 0x4006258	      3311	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x4006133	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3313	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23	CALL_29
0x4006137	    0x488b88505100	          mov rcx, qword [rax + 0x5150] 	      3313	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23	CALL_29
0x400613e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3315	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x4006142	          0x488b00	                    mov rax, qword [rax]	      3315	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x4006145	          0x488b10	                    mov rdx, qword [rax]	      3313	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23	CALL_29
0x4006148	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3313	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23	CALL_29
0x400614c	    0x488d35000000	                   lea rsi, [0x04006153]	      3313	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23	CALL_29
0x4006153	          0x4889c7	                            mov rdi, rax	      3313	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23	CALL_29
0x4006156	      0xb800000000	                              mov eax, 0	      3313	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23	CALL_29
0x400615b	      0xe800000000	                          call 0x4006160	      3313	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23	CALL_29
0x4006160	    0xc74594120000	           mov dword [rbp - 0x6c], 0x12 	      3316	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x4006167	      0xe9ec000000	                           jmp 0x4006258	      3316	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x400616c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3320	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006170	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      3320	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006177	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      3320	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x400617b	     0xf8487000000	                            je 0x4006208	      3320	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006181	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3321	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006185	    0x488b90c00000	            mov rdx, qword [rax + 0xc0] 	      3321	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x400618c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3321	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006190	          0x488b00	                    mov rax, qword [rax]	      3321	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006193	          0x488b00	                    mov rax, qword [rax]	      3321	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006196	          0x4839c2	                            cmp rdx, rax	      3320	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006199	            0x746d	                            je 0x4006208	      3320	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x400619b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3327	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x400619f	    0x488b90c00000	            mov rdx, qword [rax + 0xc0] 	      3327	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x40061a6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3327	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x40061aa	    0x488b80085100	          mov rax, qword [rax + 0x5108] 	      3327	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x40061b1	          0x4801c2	                            add rdx, rax	      3327	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x40061b4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3328	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x40061b8	          0x488b00	                    mov rax, qword [rax]	      3328	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x40061bb	          0x488b00	                    mov rax, qword [rax]	      3328	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x40061be	          0x4839c2	                            cmp rdx, rax	      3321	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x40061c1	            0x7445	                            je 0x4006208	      3321	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x40061c3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3330	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x40061c7	    0x488b90d00000	            mov rdx, qword [rax + 0xd0] 	      3330	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x40061ce	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3330	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x40061d2	          0x488b00	                    mov rax, qword [rax]	      3330	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x40061d5	          0x488b00	                    mov rax, qword [rax]	      3330	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x40061d8	          0x4839c2	                            cmp rdx, rax	      3328	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x40061db	            0x742b	                            je 0x4006208	      3328	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x40061dd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3332	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x40061e1	          0x488b00	                    mov rax, qword [rax]	      3332	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x40061e4	          0x488b10	                    mov rdx, qword [rax]	      3331	ftp.c	FUNCTION_48	ELSE_5	IF_24	CALL_30
0x40061e7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3331	ftp.c	FUNCTION_48	ELSE_5	IF_24	CALL_30
0x40061eb	    0x488d35000000	                   lea rsi, [0x040061f2]	      3331	ftp.c	FUNCTION_48	ELSE_5	IF_24	CALL_30
0x40061f2	          0x4889c7	                            mov rdi, rax	      3331	ftp.c	FUNCTION_48	ELSE_5	IF_24	CALL_30
0x40061f5	      0xb800000000	                              mov eax, 0	      3331	ftp.c	FUNCTION_48	ELSE_5	IF_24	CALL_30
0x40061fa	      0xe800000000	                          call 0x40061ff	      3331	ftp.c	FUNCTION_48	ELSE_5	IF_24	CALL_30
0x40061ff	    0xc74594120000	           mov dword [rbp - 0x6c], 0x12 	      3333	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006206	            0xeb50	                           jmp 0x4006258	      3333	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4006208	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3335	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x400620c	     0xfb680900000	           movzx eax, byte [rax + 0x90] 	      3335	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x4006213	          0x83f001	                              xor eax, 1	      3335	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x4006216	            0x84c0	                             test al, al	      3335	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x4006218	            0x743e	                            je 0x4006258	      3335	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x400621a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3336	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x400621e	          0x488b00	                    mov rax, qword [rax]	      3336	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x4006221	          0x488b00	                    mov rax, qword [rax]	      3336	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x4006224	          0x4885c0	                           test rax, rax	      3335	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x4006227	            0x752f	                           jne 0x4006258	      3335	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x4006229	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3337	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x400622d	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      3337	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x4006234	          0x4885c0	                           test rax, rax	      3336	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x4006237	            0x7e1f	                           jle 0x4006258	      3336	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x4006239	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3338	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25	CALL_31
0x400623d	    0x488d35000000	                   lea rsi, [0x04006244]	      3338	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25	CALL_31
0x4006244	          0x4889c7	                            mov rdi, rax	      3338	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25	CALL_31
0x4006247	      0xb800000000	                              mov eax, 0	      3338	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25	CALL_31
0x400624c	      0xe800000000	                          call 0x4006251	      3338	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25	CALL_31
0x4006251	    0xc74594130000	           mov dword [rbp - 0x6c], 0x13 	      3339	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x4006258	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3344	ftp.c	FUNCTION_48
0x400625c	    0xc74018000000	               mov dword [rax + 0x18], 0	      3344	ftp.c	FUNCTION_48
0x4006263	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3345	ftp.c	FUNCTION_48
0x4006267	    0xc68090000000	                mov byte [rax + 0x90], 0	      3345	ftp.c	FUNCTION_48
0x400626e	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      3348	ftp.c	FUNCTION_48	IF_26
0x4006272	            0x753e	                           jne 0x40062b2	      3348	ftp.c	FUNCTION_48	IF_26
0x4006274	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      3348	ftp.c	FUNCTION_48	IF_26
0x4006278	            0x7538	                           jne 0x40062b2	      3348	ftp.c	FUNCTION_48	IF_26
0x400627a	         0xfb64580	            movzx eax, byte [rbp - 0x80]	      3348	ftp.c	FUNCTION_48	IF_26
0x400627e	          0x83f001	                              xor eax, 1	      3348	ftp.c	FUNCTION_48	IF_26
0x4006281	            0x84c0	                             test al, al	      3348	ftp.c	FUNCTION_48	IF_26
0x4006283	            0x742d	                            je 0x40062b2	      3348	ftp.c	FUNCTION_48	IF_26
0x4006285	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3348	ftp.c	FUNCTION_48	IF_26
0x4006289	    0x488b80800500	           mov rax, qword [rax + 0x580] 	      3348	ftp.c	FUNCTION_48	IF_26
0x4006290	          0x4885c0	                           test rax, rax	      3348	ftp.c	FUNCTION_48	IF_26
0x4006293	            0x741d	                            je 0x40062b2	      3348	ftp.c	FUNCTION_48	IF_26
0x4006295	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3349	ftp.c	FUNCTION_48	CALL_32
0x4006299	    0x488b90800500	           mov rdx, qword [rax + 0x580] 	      3349	ftp.c	FUNCTION_48	CALL_32
0x40062a0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3349	ftp.c	FUNCTION_48	CALL_32
0x40062a4	          0x4889d6	                            mov rsi, rdx	      3349	ftp.c	FUNCTION_48	CALL_32
0x40062a7	          0x4889c7	                            mov rdi, rax	      3349	ftp.c	FUNCTION_48	CALL_32
0x40062aa	      0xe821000000	                  call sym.ftp_sendquote	      3349	ftp.c	FUNCTION_48	CALL_32
0x40062af	          0x894594	             mov dword [rbp - 0x6c], eax	      3349	ftp.c	FUNCTION_48	CALL_32
0x40062b2	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      3351	ftp.c	FUNCTION_48
0x40062b5	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      3352	ftp.c	FUNCTION_48
0x40062b9	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3352	ftp.c	FUNCTION_48
0x40062c2	            0x7405	                            je 0x40062c9	      3352	ftp.c	FUNCTION_48
0x40062c4	      0xe800000000	                          call 0x40062c9	      3352	ftp.c	FUNCTION_48
0x40062c9	        0x4883c478	                           add rsp, 0x78	      3352	ftp.c	FUNCTION_48
0x40062cd	              0x5b	                                 pop rbx	      3352	ftp.c	FUNCTION_48
0x40062ce	              0x5d	                                 pop rbp	      3352	ftp.c	FUNCTION_48
0x40062cf	              0xc3	                                     ret	      3352	ftp.c	FUNCTION_48
ftp_timeleft_accept	FOR,0:functions,0:SWITCH,0:ELSE,1:IF,3:DO,0:WHILE,0:CALL,3	53
0x40004ab	              0x55	                                push rbp	       340	ftp.c	FUNCTION_5
0x40004ac	          0x4889e5	                            mov rbp, rsp	       340	ftp.c	FUNCTION_5
0x40004af	        0x4883ec40	                           sub rsp, 0x40	       340	ftp.c	FUNCTION_5
0x40004b3	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       340	ftp.c	FUNCTION_5
0x40004b7	    0x64488b042528	                mov rax, qword fs:[0x28]	       340	ftp.c	FUNCTION_5
0x40004c0	        0x488945f8	                mov qword [rbp - 8], rax	       340	ftp.c	FUNCTION_5
0x40004c4	            0x31c0	                            xor eax, eax	       340	ftp.c	FUNCTION_5
0x40004c6	    0x48c745d060ea	          mov qword [rbp - 0x30], 0xea60	       341	ftp.c	FUNCTION_5
0x40004ce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       345	ftp.c	FUNCTION_5	IF_1
0x40004d2	    0x488b80400300	           mov rax, qword [rax + 0x340] 	       345	ftp.c	FUNCTION_5	IF_1
0x40004d9	          0x4885c0	                           test rax, rax	       345	ftp.c	FUNCTION_5	IF_1
0x40004dc	            0x7e0f	                           jle 0x40004ed	       345	ftp.c	FUNCTION_5	IF_1
0x40004de	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       346	ftp.c	FUNCTION_5	IF_1
0x40004e2	    0x488b80400300	           mov rax, qword [rax + 0x340] 	       346	ftp.c	FUNCTION_5	IF_1
0x40004e9	        0x488945d0	             mov qword [rbp - 0x30], rax	       346	ftp.c	FUNCTION_5	IF_1
0x40004ed	      0xe800000000	                          call 0x40004f2	       348	ftp.c	FUNCTION_5	CALL_1
0x40004f2	        0x488945e0	             mov qword [rbp - 0x20], rax	       348	ftp.c	FUNCTION_5	CALL_1
0x40004f6	        0x488955e8	             mov qword [rbp - 0x18], rdx	       348	ftp.c	FUNCTION_5	CALL_1
0x40004fa	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       351	ftp.c	FUNCTION_5	CALL_2
0x40004fe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       351	ftp.c	FUNCTION_5	CALL_2
0x4000502	      0xba00000000	                              mov edx, 0	       351	ftp.c	FUNCTION_5	CALL_2
0x4000507	          0x4889ce	                            mov rsi, rcx	       351	ftp.c	FUNCTION_5	CALL_2
0x400050a	          0x4889c7	                            mov rdi, rax	       351	ftp.c	FUNCTION_5	CALL_2
0x400050d	      0xe800000000	                          call 0x4000512	       351	ftp.c	FUNCTION_5	CALL_2
0x4000512	        0x488945d8	             mov qword [rbp - 0x28], rax	       351	ftp.c	FUNCTION_5	CALL_2
0x4000516	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       352	ftp.c	FUNCTION_5	IF_2
0x400051b	            0x7414	                            je 0x4000531	       352	ftp.c	FUNCTION_5	IF_2
0x400051d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       352	ftp.c	FUNCTION_5	IF_2
0x4000521	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       352	ftp.c	FUNCTION_5	IF_2
0x4000525	            0x7d0a	                           jge 0x4000531	       352	ftp.c	FUNCTION_5	IF_2
0x4000527	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       355	ftp.c	FUNCTION_5	IF_2
0x400052b	        0x488945d0	             mov qword [rbp - 0x30], rax	       355	ftp.c	FUNCTION_5	IF_2
0x400052f	            0xeb39	                           jmp 0x400056a	       355	ftp.c	FUNCTION_5	IF_2
0x4000531	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       358	ftp.c	FUNCTION_5	ELSE_1	CALL_3
0x4000535	    0x488b90100c00	           mov rdx, qword [rax + 0xc10] 	       358	ftp.c	FUNCTION_5	ELSE_1	CALL_3
0x400053c	    0x488b80080c00	           mov rax, qword [rax + 0xc08] 	       358	ftp.c	FUNCTION_5	ELSE_1	CALL_3
0x4000543	        0x488b7de0	             mov rdi, qword [rbp - 0x20]	       358	ftp.c	FUNCTION_5	ELSE_1	CALL_3
0x4000547	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       358	ftp.c	FUNCTION_5	ELSE_1	CALL_3
0x400054b	          0x4889d1	                            mov rcx, rdx	       358	ftp.c	FUNCTION_5	ELSE_1	CALL_3
0x400054e	          0x4889c2	                            mov rdx, rax	       358	ftp.c	FUNCTION_5	ELSE_1	CALL_3
0x4000551	      0xe800000000	                          call 0x4000556	       358	ftp.c	FUNCTION_5	ELSE_1	CALL_3
0x4000556	        0x482945d0	             sub qword [rbp - 0x30], rax	       358	ftp.c	FUNCTION_5	ELSE_1	CALL_3
0x400055a	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       359	ftp.c	FUNCTION_5	ELSE_1	IF_3
0x400055f	            0x7509	                           jne 0x400056a	       359	ftp.c	FUNCTION_5	ELSE_1	IF_3
0x4000561	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       361	ftp.c	FUNCTION_5	ELSE_1	IF_3
0x4000568	            0xeb04	                           jmp 0x400056e	       361	ftp.c	FUNCTION_5	ELSE_1	IF_3
0x400056a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       364	ftp.c	FUNCTION_5
0x400056e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       365	ftp.c	FUNCTION_5
0x4000572	    0x644833142528	                xor rdx, qword fs:[0x28]	       365	ftp.c	FUNCTION_5
0x400057b	            0x7405	                            je 0x4000582	       365	ftp.c	FUNCTION_5
0x400057d	      0xe800000000	                          call 0x4000582	       365	ftp.c	FUNCTION_5
0x4000582	              0xc9	                                   leave	       365	ftp.c	FUNCTION_5
0x4000583	              0xc3	                                     ret	       365	ftp.c	FUNCTION_5
ftp_state_retr_prequote	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,0:DO,0:WHILE,0:CALL,1	14
0x400272f	              0x55	                                push rbp	      1508	ftp.c	FUNCTION_24
0x4002730	          0x4889e5	                            mov rbp, rsp	      1508	ftp.c	FUNCTION_24
0x4002733	        0x4883ec20	                           sub rsp, 0x20	      1508	ftp.c	FUNCTION_24
0x4002737	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1508	ftp.c	FUNCTION_24
0x400273b	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1509	ftp.c	FUNCTION_24
0x4002742	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1513	ftp.c	FUNCTION_24	CALL_1
0x4002746	      0xba0d000000	                            mov edx, 0xd	      1513	ftp.c	FUNCTION_24	CALL_1
0x400274b	      0xbe01000000	                              mov esi, 1	      1513	ftp.c	FUNCTION_24	CALL_1
0x4002750	          0x4889c7	                            mov rdi, rax	      1513	ftp.c	FUNCTION_24	CALL_1
0x4002753	      0xe823050000	                call sym.ftp_state_quote	      1513	ftp.c	FUNCTION_24	CALL_1
0x4002758	          0x8945fc	                mov dword [rbp - 4], eax	      1513	ftp.c	FUNCTION_24	CALL_1
0x400275b	          0x8b45fc	                mov eax, dword [rbp - 4]	      1515	ftp.c	FUNCTION_24
0x400275e	              0xc9	                                   leave	      1516	ftp.c	FUNCTION_24
0x400275f	              0xc3	                                     ret	      1516	ftp.c	FUNCTION_24
_state	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,1:DO,0:WHILE,0:CALL,1	13
0x4000d84	              0x55	                                push rbp	       779	ftp.c	ELSE_3	FUNCTION_12
0x4000d85	          0x4889e5	                            mov rbp, rsp	       779	ftp.c	ELSE_3	FUNCTION_12
0x4000d88	        0x48897de8	             mov qword [rbp - 0x18], rdi	       779	ftp.c	ELSE_3	FUNCTION_12
0x4000d8c	          0x8975e4	             mov dword [rbp - 0x1c], esi	       779	ftp.c	ELSE_3	FUNCTION_12
0x4000d8f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       780	ftp.c	ELSE_3	FUNCTION_12
0x4000d93	    0x480550060000	                          add rax, 0x650	       780	ftp.c	ELSE_3	FUNCTION_12
0x4000d99	        0x488945f8	                mov qword [rbp - 8], rax	       780	ftp.c	ELSE_3	FUNCTION_12
0x4000d9d	        0x488b45f8	                mov rax, qword [rbp - 8]	       794	ftp.c	ELSE_3	FUNCTION_12
0x4000da1	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       794	ftp.c	ELSE_3	FUNCTION_12
0x4000da4	    0x8990bc000000	             mov dword [rax + 0xbc], edx	       794	ftp.c	ELSE_3	FUNCTION_12
0x4000daa	              0x90	                                     nop	       795	ftp.c	ELSE_3	FUNCTION_12
0x4000dab	              0x5d	                                 pop rbp	       795	ftp.c	ELSE_3	FUNCTION_12
0x4000dac	              0xc3	                                     ret	       795	ftp.c	ELSE_3	FUNCTION_12
ftp_state_ul_setup	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,8:DO,1:WHILE,0:CALL,9	202
0x400290d	              0x55	                                push rbp	      1587	ftp.c	FUNCTION_28
0x400290e	          0x4889e5	                            mov rbp, rsp	      1587	ftp.c	FUNCTION_28
0x4002911	        0x4883ec50	                           sub rsp, 0x50	      1587	ftp.c	FUNCTION_28
0x4002915	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1587	ftp.c	FUNCTION_28
0x4002919	            0x89f0	                            mov eax, esi	      1587	ftp.c	FUNCTION_28
0x400291b	          0x8845b4	               mov byte [rbp - 0x4c], al	      1587	ftp.c	FUNCTION_28
0x400291e	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1588	ftp.c	FUNCTION_28
0x4002925	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1589	ftp.c	FUNCTION_28
0x4002929	          0x488b00	                    mov rax, qword [rax]	      1589	ftp.c	FUNCTION_28
0x400292c	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1589	ftp.c	FUNCTION_28
0x4002933	        0x488945d8	             mov qword [rbp - 0x28], rax	      1589	ftp.c	FUNCTION_28
0x4002937	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1590	ftp.c	FUNCTION_28
0x400293b	          0x488b00	                    mov rax, qword [rax]	      1590	ftp.c	FUNCTION_28
0x400293e	        0x488945e0	             mov qword [rbp - 0x20], rax	      1590	ftp.c	FUNCTION_28
0x4002942	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1591	ftp.c	FUNCTION_28
0x4002946	    0x480550060000	                          add rax, 0x650	      1591	ftp.c	FUNCTION_28
0x400294c	        0x488945e8	             mov qword [rbp - 0x18], rax	      1591	ftp.c	FUNCTION_28
0x4002950	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      1592	ftp.c	FUNCTION_28
0x4002957	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1594	ftp.c	FUNCTION_28	IF_1
0x400295b	    0x488b80305100	          mov rax, qword [rax + 0x5130] 	      1594	ftp.c	FUNCTION_28	IF_1
0x4002962	          0x4885c0	                           test rax, rax	      1594	ftp.c	FUNCTION_28	IF_1
0x4002965	            0x740b	                            je 0x4002972	      1594	ftp.c	FUNCTION_28	IF_1
0x4002967	         0xfb645b4	            movzx eax, byte [rbp - 0x4c]	      1594	ftp.c	FUNCTION_28	IF_1
0x400296b	          0x83f001	                              xor eax, 1	      1594	ftp.c	FUNCTION_28	IF_1
0x400296e	            0x84c0	                             test al, al	      1594	ftp.c	FUNCTION_28	IF_1
0x4002970	            0x751e	                           jne 0x4002990	      1594	ftp.c	FUNCTION_28	IF_1
0x4002972	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1595	ftp.c	FUNCTION_28	IF_1
0x4002976	    0x488b80305100	          mov rax, qword [rax + 0x5130] 	      1595	ftp.c	FUNCTION_28	IF_1
0x400297d	          0x4885c0	                           test rax, rax	      1594	ftp.c	FUNCTION_28	IF_1
0x4002980	     0xf8e93020000	                           jle 0x4002c19	      1594	ftp.c	FUNCTION_28	IF_1
0x4002986	        0x807db400	                cmp byte [rbp - 0x4c], 0	      1595	ftp.c	FUNCTION_28	IF_1
0x400298a	     0xf8489020000	                            je 0x4002c19	      1595	ftp.c	FUNCTION_28	IF_1
0x4002990	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1609	ftp.c	FUNCTION_28	IF_1	IF_2
0x4002994	    0x488b80305100	          mov rax, qword [rax + 0x5130] 	      1609	ftp.c	FUNCTION_28	IF_1	IF_2
0x400299b	          0x4885c0	                           test rax, rax	      1609	ftp.c	FUNCTION_28	IF_1	IF_2
0x400299e	            0x794d	                           jns 0x40029ed	      1609	ftp.c	FUNCTION_28	IF_1	IF_2
0x40029a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1611	ftp.c	FUNCTION_28	IF_1	IF_2
0x40029a4	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      1611	ftp.c	FUNCTION_28	IF_1	IF_2
0x40029ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1611	ftp.c	FUNCTION_28	IF_1	IF_2
0x40029af	    0x488d35000000	                   lea rsi, [0x040029b6]	      1611	ftp.c	FUNCTION_28	IF_1	IF_2
0x40029b6	          0x4889c7	                            mov rdi, rax	      1611	ftp.c	FUNCTION_28	IF_1	IF_2
0x40029b9	      0xb800000000	                              mov eax, 0	      1611	ftp.c	FUNCTION_28	IF_1	IF_2
0x40029be	      0xe800000000	                          call 0x40029c3	      1611	ftp.c	FUNCTION_28	IF_1	IF_2
0x40029c3	          0x8945cc	             mov dword [rbp - 0x34], eax	      1611	ftp.c	FUNCTION_28	IF_1	IF_2
0x40029c6	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1611	ftp.c	FUNCTION_28	IF_1	IF_2
0x40029ca	            0x7408	                            je 0x40029d4	      1611	ftp.c	FUNCTION_28	IF_1	IF_2
0x40029cc	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1611	ftp.c	FUNCTION_28	IF_1	IF_2
0x40029cf	      0xe9a5020000	                           jmp 0x4002c79	      1611	ftp.c	FUNCTION_28	IF_1	IF_2
0x40029d4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1612	ftp.c	FUNCTION_28	IF_1	IF_2
0x40029d8	      0xbe19000000	                           mov esi, 0x19	      1612	ftp.c	FUNCTION_28	IF_1	IF_2
0x40029dd	          0x4889c7	                            mov rdi, rax	      1612	ftp.c	FUNCTION_28	IF_1	IF_2
0x40029e0	      0xe89fe3ffff	                         call sym._state	      1612	ftp.c	FUNCTION_28	IF_1	IF_2
0x40029e5	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1613	ftp.c	FUNCTION_28	IF_1	IF_2
0x40029e8	      0xe98c020000	                           jmp 0x4002c79	      1613	ftp.c	FUNCTION_28	IF_1	IF_2
0x40029ed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1617	ftp.c	FUNCTION_28	IF_1
0x40029f1	    0xc680d5070000	               mov byte [rax + 0x7d5], 1	      1617	ftp.c	FUNCTION_28	IF_1
0x40029f8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1620	ftp.c	FUNCTION_28	IF_1	IF_3
0x40029fc	    0x488b80b00400	           mov rax, qword [rax + 0x4b0] 	      1620	ftp.c	FUNCTION_28	IF_1	IF_3
0x4002a03	          0x4885c0	                           test rax, rax	      1620	ftp.c	FUNCTION_28	IF_1	IF_3
0x4002a06	            0x7450	                            je 0x4002a58	      1620	ftp.c	FUNCTION_28	IF_1	IF_3
0x4002a08	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1621	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_1
0x4002a0c	      0xbe01000000	                              mov esi, 1	      1621	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_1
0x4002a11	          0x4889c7	                            mov rdi, rax	      1621	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_1
0x4002a14	      0xe800000000	                          call 0x4002a19	      1621	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_1
0x4002a19	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_2
0x4002a1d	    0x488b80b00400	           mov rax, qword [rax + 0x4b0] 	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_2
0x4002a24	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_2
0x4002a28	    0x488bb2305100	          mov rsi, qword [rdx + 0x5130] 	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_2
0x4002a2f	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_2
0x4002a33	    0x488b8ab80400	           mov rcx, qword [rdx + 0x4b8] 	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_2
0x4002a3a	      0xba00000000	                              mov edx, 0	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_2
0x4002a3f	          0x4889cf	                            mov rdi, rcx	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_2
0x4002a42	            0xffd0	                                call rax	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_2
0x4002a44	          0x8945c8	             mov dword [rbp - 0x38], eax	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_2
0x4002a47	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1624	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_3
0x4002a4b	      0xbe00000000	                              mov esi, 0	      1624	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_3
0x4002a50	          0x4889c7	                            mov rdi, rax	      1624	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_3
0x4002a53	      0xe800000000	                          call 0x4002a58	      1624	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_3
0x4002a58	        0x837dc800	               cmp dword [rbp - 0x38], 0	      1627	ftp.c	FUNCTION_28	IF_1	IF_4
0x4002a5c	     0xf8401010000	                            je 0x4002b63	      1627	ftp.c	FUNCTION_28	IF_1	IF_4
0x4002a62	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1628	ftp.c	FUNCTION_28	IF_1	IF_4
0x4002a6a	        0x837dc802	               cmp dword [rbp - 0x38], 2	      1629	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5
0x4002a6e	            0x7422	                            je 0x4002a92	      1629	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5
0x4002a70	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1630	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5	CALL_4
0x4002a74	    0x488d35000000	                   lea rsi, [0x04002a7b]	      1630	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5	CALL_4
0x4002a7b	          0x4889c7	                            mov rdi, rax	      1630	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5	CALL_4
0x4002a7e	      0xb800000000	                              mov eax, 0	      1630	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5	CALL_4
0x4002a83	      0xe800000000	                          call 0x4002a88	      1630	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5	CALL_4
0x4002a88	      0xb81f000000	                           mov eax, 0x1f	      1631	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5
0x4002a8d	      0xe9e7010000	                           jmp 0x4002c79	      1631	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5
0x4002a92	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1636	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002a96	    0x488b80305100	          mov rax, qword [rax + 0x5130] 	      1636	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002a9d	        0x482b45d0	             sub rax, qword [rbp - 0x30]	      1636	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002aa1	          0x4889c2	                            mov rdx, rax	      1636	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002aa4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1636	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002aa8	    0x488b80900700	           mov rax, qword [rax + 0x790] 	      1636	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002aaf	          0x4839c2	                            cmp rdx, rax	      1637	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002ab2	            0x7e0d	                           jle 0x4002ac1	      1637	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002ab4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1637	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002ab8	    0x488b80900700	           mov rax, qword [rax + 0x790] 	      1637	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002abf	            0xeb17	                           jmp 0x4002ad8	      1637	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002ac1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1638	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	CALL_5
0x4002ac5	    0x488b80305100	          mov rax, qword [rax + 0x5130] 	      1638	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	CALL_5
0x4002acc	        0x482b45d0	             sub rax, qword [rbp - 0x30]	      1638	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	CALL_5
0x4002ad0	          0x4889c7	                            mov rdi, rax	      1637	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002ad3	      0xe800000000	                          call 0x4002ad8	      1637	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002ad8	        0x488945f0	             mov qword [rbp - 0x10], rax	      1635	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002adc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1641	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	CALL_6
0x4002ae0	    0x488b80685100	          mov rax, qword [rax + 0x5168] 	      1641	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	CALL_6
0x4002ae7	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1641	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	CALL_6
0x4002aeb	    0x488b8a705100	          mov rcx, qword [rdx + 0x5170] 	      1641	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	CALL_6
0x4002af2	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1641	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	CALL_6
0x4002af6	    0x488bba200d00	           mov rdi, qword [rdx + 0xd20] 	      1641	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	CALL_6
0x4002afd	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1640	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002b01	      0xbe01000000	                              mov esi, 1	      1640	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002b06	            0xffd0	                                call rax	      1640	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002b08	        0x488945f8	                mov qword [rbp - 8], rax	      1640	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002b0c	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1644	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002b10	        0x488b45f8	                mov rax, qword [rbp - 8]	      1644	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002b14	          0x4801d0	                            add rax, rdx	      1644	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002b17	        0x488945d0	             mov qword [rbp - 0x30], rax	      1644	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002b1b	      0x48837df800	                  cmp qword [rbp - 8], 0	      1645	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6
0x4002b20	            0x740a	                            je 0x4002b2c	      1645	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6
0x4002b22	        0x488b45f8	                mov rax, qword [rbp - 8]	      1645	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6
0x4002b26	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1645	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6
0x4002b2a	            0x7622	                           jbe 0x4002b4e	      1645	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6
0x4002b2c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1648	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6	CALL_7
0x4002b30	    0x488d35000000	                   lea rsi, [0x04002b37]	      1648	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6	CALL_7
0x4002b37	          0x4889c7	                            mov rdi, rax	      1648	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6	CALL_7
0x4002b3a	      0xb800000000	                              mov eax, 0	      1648	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6	CALL_7
0x4002b3f	      0xe800000000	                          call 0x4002b44	      1648	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6	CALL_7
0x4002b44	      0xb81f000000	                           mov eax, 0x1f	      1649	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6
0x4002b49	      0xe92b010000	                           jmp 0x4002c79	      1649	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6
0x4002b4e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1651	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002b52	    0x488b80305100	          mov rax, qword [rax + 0x5130] 	      1651	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002b59	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1651	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002b5d	     0xf8f2fffffff	                            jg 0x4002a92	      1651	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4002b63	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1654	ftp.c	FUNCTION_28	IF_1	IF_7
0x4002b67	    0x488b80505100	          mov rax, qword [rax + 0x5150] 	      1654	ftp.c	FUNCTION_28	IF_1	IF_7
0x4002b6e	          0x4885c0	                           test rax, rax	      1654	ftp.c	FUNCTION_28	IF_1	IF_7
0x4002b71	     0xf8ea2000000	                           jle 0x4002c19	      1654	ftp.c	FUNCTION_28	IF_1	IF_7
0x4002b77	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1655	ftp.c	FUNCTION_28	IF_1	IF_7
0x4002b7b	    0x488b90505100	          mov rdx, qword [rax + 0x5150] 	      1655	ftp.c	FUNCTION_28	IF_1	IF_7
0x4002b82	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1655	ftp.c	FUNCTION_28	IF_1	IF_7
0x4002b86	    0x488b80305100	          mov rax, qword [rax + 0x5130] 	      1655	ftp.c	FUNCTION_28	IF_1	IF_7
0x4002b8d	          0x4829c2	                            sub rdx, rax	      1655	ftp.c	FUNCTION_28	IF_1	IF_7
0x4002b90	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1655	ftp.c	FUNCTION_28	IF_1	IF_7
0x4002b94	    0x488990505100	          mov qword [rax + 0x5150], rdx 	      1655	ftp.c	FUNCTION_28	IF_1	IF_7
0x4002b9b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1657	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4002b9f	    0x488b80505100	          mov rax, qword [rax + 0x5150] 	      1657	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4002ba6	          0x4885c0	                           test rax, rax	      1657	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4002ba9	            0x7f6e	                            jg 0x4002c19	      1657	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4002bab	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1658	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_8
0x4002baf	    0x488d35000000	                   lea rsi, [0x04002bb6]	      1658	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_8
0x4002bb6	          0x4889c7	                            mov rdi, rax	      1658	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_8
0x4002bb9	      0xb800000000	                              mov eax, 0	      1658	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_8
0x4002bbe	      0xe800000000	                          call 0x4002bc3	      1658	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_8
0x4002bc3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_9
0x4002bc7	        0x4883ec08	                              sub rsp, 8	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_9
0x4002bcb	            0x6a00	                                  push 0	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_9
0x4002bcd	    0x41b9ffffffff	                     mov r9d, 0xffffffff	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_9
0x4002bd3	    0x41b800000000	                              mov r8d, 0	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_9
0x4002bd9	      0xb900000000	                              mov ecx, 0	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_9
0x4002bde	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_9
0x4002be5	      0xbeffffffff	                     mov esi, 0xffffffff	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_9
0x4002bea	          0x4889c7	                            mov rdi, rax	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_9
0x4002bed	      0xe800000000	                          call 0x4002bf2	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_9
0x4002bf2	        0x4883c410	                           add rsp, 0x10	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_9
0x4002bf6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1665	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4002bfa	    0xc74018020000	               mov dword [rax + 0x18], 2	      1665	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4002c01	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1667	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4002c05	      0xbe00000000	                              mov esi, 0	      1667	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4002c0a	          0x4889c7	                            mov rdi, rax	      1667	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4002c0d	      0xe872e1ffff	                         call sym._state	      1667	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4002c12	      0xb800000000	                              mov eax, 0	      1668	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4002c17	            0xeb60	                           jmp 0x4002c79	      1668	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4002c19	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1674	ftp.c	FUNCTION_28
0x4002c1d	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      1674	ftp.c	FUNCTION_28
0x4002c24	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1674	ftp.c	FUNCTION_28
0x4002c28	     0xfb680d50700	          movzx eax, byte [rax + 0x7d5] 	      1674	ftp.c	FUNCTION_28
0x4002c2f	            0x84c0	                             test al, al	      1674	ftp.c	FUNCTION_28
0x4002c31	            0x7409	                            je 0x4002c3c	      1674	ftp.c	FUNCTION_28
0x4002c33	    0x488d05000000	                   lea rax, [0x04002c3a]	      1674	ftp.c	FUNCTION_28
0x4002c3a	            0xeb07	                           jmp 0x4002c43	      1674	ftp.c	FUNCTION_28
0x4002c3c	    0x488d05000000	                   lea rax, [0x04002c43]	      1674	ftp.c	FUNCTION_28
0x4002c43	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1674	ftp.c	FUNCTION_28
0x4002c47	          0x4889c6	                            mov rsi, rax	      1674	ftp.c	FUNCTION_28
0x4002c4a	          0x4889cf	                            mov rdi, rcx	      1674	ftp.c	FUNCTION_28
0x4002c4d	      0xb800000000	                              mov eax, 0	      1674	ftp.c	FUNCTION_28
0x4002c52	      0xe800000000	                          call 0x4002c57	      1674	ftp.c	FUNCTION_28
0x4002c57	          0x8945cc	             mov dword [rbp - 0x34], eax	      1674	ftp.c	FUNCTION_28
0x4002c5a	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1674	ftp.c	FUNCTION_28
0x4002c5e	            0x7405	                            je 0x4002c65	      1674	ftp.c	FUNCTION_28
0x4002c60	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1674	ftp.c	FUNCTION_28
0x4002c63	            0xeb14	                           jmp 0x4002c79	      1674	ftp.c	FUNCTION_28
0x4002c65	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1677	ftp.c	FUNCTION_28
0x4002c69	      0xbe21000000	                           mov esi, 0x21	      1677	ftp.c	FUNCTION_28
0x4002c6e	          0x4889c7	                            mov rdi, rax	      1677	ftp.c	FUNCTION_28
0x4002c71	      0xe80ee1ffff	                         call sym._state	      1677	ftp.c	FUNCTION_28
0x4002c76	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1679	ftp.c	FUNCTION_28
0x4002c79	              0xc9	                                   leave	      1680	ftp.c	FUNCTION_28
0x4002c7a	              0xc3	                                     ret	      1680	ftp.c	FUNCTION_28
ftp_block_statemach	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,1:DO,0:WHILE,1:CALL,1	27
0x40059f8	              0x55	                                push rbp	      3068	ftp.c	FUNCTION_46
0x40059f9	          0x4889e5	                            mov rbp, rsp	      3068	ftp.c	FUNCTION_46
0x40059fc	        0x4883ec30	                           sub rsp, 0x30	      3068	ftp.c	FUNCTION_46
0x4005a00	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3068	ftp.c	FUNCTION_46
0x4005a04	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3069	ftp.c	FUNCTION_46
0x4005a08	    0x480550060000	                          add rax, 0x650	      3069	ftp.c	FUNCTION_46
0x4005a0e	        0x488945f0	             mov qword [rbp - 0x10], rax	      3069	ftp.c	FUNCTION_46
0x4005a12	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3070	ftp.c	FUNCTION_46
0x4005a16	        0x488945f8	                mov qword [rbp - 8], rax	      3070	ftp.c	FUNCTION_46
0x4005a1a	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      3071	ftp.c	FUNCTION_46
0x4005a21	            0xeb1a	                           jmp 0x4005a3d	      3073	ftp.c	FUNCTION_46	WHILE_1
0x4005a23	        0x488b45f8	                mov rax, qword [rbp - 8]	      3074	ftp.c	FUNCTION_46	WHILE_1	CALL_1
0x4005a27	      0xbe01000000	                              mov esi, 1	      3074	ftp.c	FUNCTION_46	WHILE_1	CALL_1
0x4005a2c	          0x4889c7	                            mov rdi, rax	      3074	ftp.c	FUNCTION_46	WHILE_1	CALL_1
0x4005a2f	      0xe800000000	                          call 0x4005a34	      3074	ftp.c	FUNCTION_46	WHILE_1	CALL_1
0x4005a34	          0x8945ec	             mov dword [rbp - 0x14], eax	      3074	ftp.c	FUNCTION_46	WHILE_1	CALL_1
0x4005a37	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3075	ftp.c	FUNCTION_46	WHILE_1	IF_1
0x4005a3b	            0x7510	                           jne 0x4005a4d	      3075	ftp.c	FUNCTION_46	WHILE_1	IF_1
0x4005a3d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3073	ftp.c	FUNCTION_46	WHILE_1
0x4005a41	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      3073	ftp.c	FUNCTION_46	WHILE_1
0x4005a47	            0x85c0	                           test eax, eax	      3073	ftp.c	FUNCTION_46	WHILE_1
0x4005a49	            0x75d8	                           jne 0x4005a23	      3073	ftp.c	FUNCTION_46	WHILE_1
0x4005a4b	            0xeb01	                           jmp 0x4005a4e	      3073	ftp.c	FUNCTION_46	WHILE_1
0x4005a4d	              0x90	                                     nop	      3076	ftp.c	FUNCTION_46	WHILE_1	IF_1
0x4005a4e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3079	ftp.c	FUNCTION_46
0x4005a51	              0xc9	                                   leave	      3080	ftp.c	FUNCTION_46
0x4005a52	              0xc3	                                     ret	      3080	ftp.c	FUNCTION_46
ftp_state_size_resp	FOR,0:functions,0:SWITCH,0:ELSE,2:IF,6:DO,0:WHILE,0:CALL,8	91
0x4004168	              0x55	                                push rbp	      2264	ftp.c	FUNCTION_37
0x4004169	          0x4889e5	                            mov rbp, rsp	      2264	ftp.c	FUNCTION_37
0x400416c	    0x4881ecc00000	                           sub rsp, 0xc0	      2264	ftp.c	FUNCTION_37
0x4004173	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	      2264	ftp.c	FUNCTION_37
0x400417a	    0x89b544ffffff	             mov dword [rbp - 0xbc], esi	      2264	ftp.c	FUNCTION_37
0x4004180	    0x899540ffffff	             mov dword [rbp - 0xc0], edx	      2264	ftp.c	FUNCTION_37
0x4004186	    0x64488b042528	                mov rax, qword fs:[0x28]	      2264	ftp.c	FUNCTION_37
0x400418f	        0x488945f8	                mov qword [rbp - 8], rax	      2264	ftp.c	FUNCTION_37
0x4004193	            0x31c0	                            xor eax, eax	      2264	ftp.c	FUNCTION_37
0x4004195	    0xc78554ffffff	               mov dword [rbp - 0xac], 0	      2265	ftp.c	FUNCTION_37
0x400419f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2266	ftp.c	FUNCTION_37
0x40041a6	          0x488b00	                    mov rax, qword [rax]	      2266	ftp.c	FUNCTION_37
0x40041a9	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2266	ftp.c	FUNCTION_37
0x40041b0	    0x48c78558ffff	mov qword [rbp - 0xa8], 0xffffffffffffffff	      2267	ftp.c	FUNCTION_37
0x40041bb	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2268	ftp.c	FUNCTION_37
0x40041c2	    0x488b80200d00	           mov rax, qword [rax + 0xd20] 	      2268	ftp.c	FUNCTION_37
0x40041c9	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      2268	ftp.c	FUNCTION_37
0x40041d0	    0x81bd44ffffff	           cmp dword [rbp - 0xbc], 0xd5 	      2271	ftp.c	FUNCTION_37	IF_1
0x40041da	            0x7524	                           jne 0x4004200	      2271	ftp.c	FUNCTION_37	IF_1
0x40041dc	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2273	ftp.c	FUNCTION_37	CALL_1
0x40041e3	        0x488d7804	                      lea rdi, [rax + 4]	      2273	ftp.c	FUNCTION_37	CALL_1
0x40041e7	    0x488d8558ffff	                   lea rax, [rbp - 0xa8]	      2273	ftp.c	FUNCTION_37	CALL_1
0x40041ee	          0x4889c1	                            mov rcx, rax	      2273	ftp.c	FUNCTION_37	CALL_1
0x40041f1	      0xba00000000	                              mov edx, 0	      2273	ftp.c	FUNCTION_37	CALL_1
0x40041f6	      0xbe00000000	                              mov esi, 0	      2273	ftp.c	FUNCTION_37	CALL_1
0x40041fb	      0xe800000000	                          call 0x4004200	      2273	ftp.c	FUNCTION_37	CALL_1
0x4004200	    0x83bd40ffffff	           cmp dword [rbp - 0xc0], 0x17 	      2275	ftp.c	FUNCTION_37	IF_2
0x4004207	     0xf85a1000000	                           jne 0x40042ae	      2275	ftp.c	FUNCTION_37	IF_2
0x400420d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2277	ftp.c	FUNCTION_37	IF_2	IF_3
0x4004214	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2277	ftp.c	FUNCTION_37	IF_2	IF_3
0x4004218	            0x7464	                            je 0x400427e	      2277	ftp.c	FUNCTION_37	IF_2	IF_3
0x400421a	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      2279	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_2
0x4004221	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      2279	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_2
0x4004228	          0x4889d1	                            mov rcx, rdx	      2279	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_2
0x400422b	    0x488d15000000	                   lea rdx, [0x04004232]	      2279	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_2
0x4004232	      0xbe80000000	                           mov esi, 0x80	      2279	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_2
0x4004237	          0x4889c7	                            mov rdi, rax	      2279	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_2
0x400423a	      0xb800000000	                              mov eax, 0	      2279	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_2
0x400423f	      0xe800000000	                          call 0x4004244	      2279	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_2
0x4004244	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      2281	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x400424b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2281	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x4004252	      0xb900000000	                              mov ecx, 0	      2281	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x4004257	      0xbe03000000	                              mov esi, 3	      2281	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x400425c	          0x4889c7	                            mov rdi, rax	      2281	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x400425f	      0xe800000000	                          call 0x4004264	      2281	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x4004264	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      2281	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x400426a	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	      2282	ftp.c	FUNCTION_37	IF_2	IF_3	IF_4
0x4004271	            0x740b	                            je 0x400427e	      2282	ftp.c	FUNCTION_37	IF_2	IF_3	IF_4
0x4004273	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2283	ftp.c	FUNCTION_37	IF_2	IF_3	IF_4
0x4004279	      0xe9b1000000	                           jmp 0x400432f	      2283	ftp.c	FUNCTION_37	IF_2	IF_3	IF_4
0x400427e	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      2286	ftp.c	FUNCTION_37	IF_2	CALL_4
0x4004285	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2286	ftp.c	FUNCTION_37	IF_2	CALL_4
0x400428c	          0x4889d6	                            mov rsi, rdx	      2286	ftp.c	FUNCTION_37	IF_2	CALL_4
0x400428f	          0x4889c7	                            mov rdi, rax	      2286	ftp.c	FUNCTION_37	IF_2	CALL_4
0x4004292	      0xe800000000	                          call 0x4004297	      2286	ftp.c	FUNCTION_37	IF_2	CALL_4
0x4004297	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2287	ftp.c	FUNCTION_37	IF_2	CALL_5
0x400429e	          0x4889c7	                            mov rdi, rax	      2287	ftp.c	FUNCTION_37	IF_2	CALL_5
0x40042a1	      0xe807e1ffff	                 call sym.ftp_state_rest	      2287	ftp.c	FUNCTION_37	IF_2	CALL_5
0x40042a6	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      2287	ftp.c	FUNCTION_37	IF_2	CALL_5
0x40042ac	            0xeb7b	                           jmp 0x4004329	      2287	ftp.c	FUNCTION_37	IF_2	CALL_5
0x40042ae	    0x83bd40ffffff	           cmp dword [rbp - 0xc0], 0x18 	      2289	ftp.c	FUNCTION_37	ELSE_1	IF_5
0x40042b5	            0x753a	                           jne 0x40042f1	      2289	ftp.c	FUNCTION_37	ELSE_1	IF_5
0x40042b7	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      2290	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_6
0x40042be	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2290	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_6
0x40042c5	          0x4889d6	                            mov rsi, rdx	      2290	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_6
0x40042c8	          0x4889c7	                            mov rdi, rax	      2290	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_6
0x40042cb	      0xe800000000	                          call 0x40042d0	      2290	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_6
0x40042d0	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      2291	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_7
0x40042d7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2291	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_7
0x40042de	          0x4889d6	                            mov rsi, rdx	      2291	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_7
0x40042e1	          0x4889c7	                            mov rdi, rax	      2291	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_7
0x40042e4	      0xe8a7fbffff	                 call sym.ftp_state_retr	      2291	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_7
0x40042e9	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      2291	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_7
0x40042ef	            0xeb38	                           jmp 0x4004329	      2291	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_7
0x40042f1	    0x83bd40ffffff	           cmp dword [rbp - 0xc0], 0x19 	      2293	ftp.c	FUNCTION_37	ELSE_2	IF_6
0x40042f8	            0x752f	                           jne 0x4004329	      2293	ftp.c	FUNCTION_37	ELSE_2	IF_6
0x40042fa	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      2294	ftp.c	FUNCTION_37	ELSE_2	IF_6
0x4004301	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2294	ftp.c	FUNCTION_37	ELSE_2	IF_6
0x4004308	    0x488990305100	          mov qword [rax + 0x5130], rdx 	      2294	ftp.c	FUNCTION_37	ELSE_2	IF_6
0x400430f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2295	ftp.c	FUNCTION_37	ELSE_2	IF_6	CALL_8
0x4004316	      0xbe01000000	                              mov esi, 1	      2295	ftp.c	FUNCTION_37	ELSE_2	IF_6	CALL_8
0x400431b	          0x4889c7	                            mov rdi, rax	      2295	ftp.c	FUNCTION_37	ELSE_2	IF_6	CALL_8
0x400431e	      0xe8eae5ffff	             call sym.ftp_state_ul_setup	      2295	ftp.c	FUNCTION_37	ELSE_2	IF_6	CALL_8
0x4004323	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      2295	ftp.c	FUNCTION_37	ELSE_2	IF_6	CALL_8
0x4004329	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2298	ftp.c	FUNCTION_37
0x400432f	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2299	ftp.c	FUNCTION_37
0x4004333	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2299	ftp.c	FUNCTION_37
0x400433c	            0x7405	                            je 0x4004343	      2299	ftp.c	FUNCTION_37
0x400433e	      0xe800000000	                          call 0x4004343	      2299	ftp.c	FUNCTION_37
0x4004343	              0xc9	                                   leave	      2299	ftp.c	FUNCTION_37
0x4004344	              0xc3	                                     ret	      2299	ftp.c	FUNCTION_37
wc_statemach	FOR,0:functions,0:SWITCH,2:ELSE,0:IF,12:DO,0:WHILE,0:CALL,22	300
0x4006e3b	              0x55	                                push rbp	      3792	ftp.c	FUNCTION_56
0x4006e3c	          0x4889e5	                            mov rbp, rsp	      3792	ftp.c	FUNCTION_56
0x4006e3f	        0x4883ec50	                           sub rsp, 0x50	      3792	ftp.c	FUNCTION_56
0x4006e43	        0x48897db8	             mov qword [rbp - 0x48], rdi	      3792	ftp.c	FUNCTION_56
0x4006e47	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3793	ftp.c	FUNCTION_56
0x4006e4b	          0x488b00	                    mov rax, qword [rax]	      3793	ftp.c	FUNCTION_56
0x4006e4e	    0x480588510000	                         add rax, 0x5188	      3793	ftp.c	FUNCTION_56
0x4006e54	        0x488945c8	             mov qword [rbp - 0x38], rax	      3793	ftp.c	FUNCTION_56
0x4006e58	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      3794	ftp.c	FUNCTION_56
0x4006e5f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3796	ftp.c	FUNCTION_56	SWITCH_1
0x4006e63	            0x8b00	                    mov eax, dword [rax]	      3796	ftp.c	FUNCTION_56	SWITCH_1
0x4006e65	          0x83f807	                              cmp eax, 7	      3796	ftp.c	FUNCTION_56	SWITCH_1
0x4006e68	     0xf876a040000	                            ja 0x40072d8	      3796	ftp.c	FUNCTION_56	SWITCH_1
0x4006e6e	            0x89c0	                            mov eax, eax	      3796	ftp.c	FUNCTION_56	SWITCH_1
0x4006e70	    0x488d14850000	                        lea rdx, [rax*4]	      3796	ftp.c	FUNCTION_56	SWITCH_1
0x4006e78	    0x488d05000000	                   lea rax, [0x04006e7f]	      3796	ftp.c	FUNCTION_56	SWITCH_1
0x4006e7f	          0x8b0402	              mov eax, dword [rdx + rax]	      3796	ftp.c	FUNCTION_56	SWITCH_1
0x4006e82	          0x4863d0	                         movsxd rdx, eax	      3796	ftp.c	FUNCTION_56	SWITCH_1
0x4006e85	    0x488d05000000	                   lea rax, [0x04006e8c]	      3796	ftp.c	FUNCTION_56	SWITCH_1
0x4006e8c	          0x4801d0	                            add rax, rdx	      3796	ftp.c	FUNCTION_56	SWITCH_1
0x4006e8f	            0xffe0	                                 jmp rax	      3796	ftp.c	FUNCTION_56	SWITCH_1
0x4006e91	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3798	ftp.c	FUNCTION_56	SWITCH_1	CALL_1
0x4006e95	          0x4889c7	                            mov rdi, rax	      3798	ftp.c	FUNCTION_56	SWITCH_1	CALL_1
0x4006e98	      0xe89cfcffff	                   call sym.init_wc_data	      3798	ftp.c	FUNCTION_56	SWITCH_1	CALL_1
0x4006e9d	          0x8945c4	             mov dword [rbp - 0x3c], eax	      3798	ftp.c	FUNCTION_56	SWITCH_1	CALL_1
0x4006ea0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3799	ftp.c	FUNCTION_56	SWITCH_1	IF_1
0x4006ea4	            0x8b00	                    mov eax, dword [rax]	      3799	ftp.c	FUNCTION_56	SWITCH_1	IF_1
0x4006ea6	          0x83f804	                              cmp eax, 4	      3799	ftp.c	FUNCTION_56	SWITCH_1	IF_1
0x4006ea9	     0xf8422040000	                            je 0x40072d1	      3799	ftp.c	FUNCTION_56	SWITCH_1	IF_1
0x4006eaf	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      3802	ftp.c	FUNCTION_56	SWITCH_1
0x4006eb3	            0x7407	                            je 0x4006ebc	      3802	ftp.c	FUNCTION_56	SWITCH_1
0x4006eb5	      0xba06000000	                              mov edx, 6	      3802	ftp.c	FUNCTION_56	SWITCH_1
0x4006eba	            0xeb05	                           jmp 0x4006ec1	      3802	ftp.c	FUNCTION_56	SWITCH_1
0x4006ebc	      0xba02000000	                              mov edx, 2	      3802	ftp.c	FUNCTION_56	SWITCH_1
0x4006ec1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3802	ftp.c	FUNCTION_56	SWITCH_1
0x4006ec5	            0x8910	                    mov dword [rax], edx	      3802	ftp.c	FUNCTION_56	SWITCH_1
0x4006ec7	      0xe90c040000	                           jmp 0x40072d8	      3803	ftp.c	FUNCTION_56	SWITCH_1
0x4006ecc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3808	ftp.c	FUNCTION_56	SWITCH_1
0x4006ed0	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3808	ftp.c	FUNCTION_56	SWITCH_1
0x4006ed4	        0x488945d0	             mov qword [rbp - 0x30], rax	      3808	ftp.c	FUNCTION_56	SWITCH_1
0x4006ed8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3809	ftp.c	FUNCTION_56	SWITCH_1
0x4006edc	          0x488b00	                    mov rax, qword [rax]	      3809	ftp.c	FUNCTION_56	SWITCH_1
0x4006edf	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3809	ftp.c	FUNCTION_56	SWITCH_1
0x4006ee3	        0x488b5208	                mov rdx, qword [rdx + 8]	      3809	ftp.c	FUNCTION_56	SWITCH_1
0x4006ee7	    0x488990880200	            mov qword [rax + 0x288], rdx	      3809	ftp.c	FUNCTION_56	SWITCH_1
0x4006eee	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3810	ftp.c	FUNCTION_56	SWITCH_1
0x4006ef2	          0x488b00	                    mov rax, qword [rax]	      3810	ftp.c	FUNCTION_56	SWITCH_1
0x4006ef5	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3810	ftp.c	FUNCTION_56	SWITCH_1
0x4006ef9	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      3810	ftp.c	FUNCTION_56	SWITCH_1
0x4006efd	    0x488990100200	            mov qword [rax + 0x210], rdx	      3810	ftp.c	FUNCTION_56	SWITCH_1
0x4006f04	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3811	ftp.c	FUNCTION_56	SWITCH_1
0x4006f08	    0x48c740080000	                  mov qword [rax + 8], 0	      3811	ftp.c	FUNCTION_56	SWITCH_1
0x4006f10	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3812	ftp.c	FUNCTION_56	SWITCH_1
0x4006f14	    0x48c740100000	               mov qword [rax + 0x10], 0	      3812	ftp.c	FUNCTION_56	SWITCH_1
0x4006f1c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3813	ftp.c	FUNCTION_56	SWITCH_1
0x4006f20	    0xc70003000000	                      mov dword [rax], 3	      3813	ftp.c	FUNCTION_56	SWITCH_1
0x4006f26	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3815	ftp.c	FUNCTION_56	SWITCH_1	IF_2	CALL_2
0x4006f2a	          0x488b00	                    mov rax, qword [rax]	      3815	ftp.c	FUNCTION_56	SWITCH_1	IF_2	CALL_2
0x4006f2d	          0x4889c7	                            mov rdi, rax	      3815	ftp.c	FUNCTION_56	SWITCH_1	IF_2	CALL_2
0x4006f30	      0xe800000000	                          call 0x4006f35	      3815	ftp.c	FUNCTION_56	SWITCH_1	IF_2	CALL_2
0x4006f35	            0x85c0	                           test eax, eax	      3815	ftp.c	FUNCTION_56	SWITCH_1	IF_2	CALL_2
0x4006f37	            0x741b	                            je 0x4006f54	      3815	ftp.c	FUNCTION_56	SWITCH_1	IF_2	CALL_2
0x4006f39	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3817	ftp.c	FUNCTION_56	SWITCH_1	IF_2
0x4006f3d	    0xc70004000000	                      mov dword [rax], 4	      3817	ftp.c	FUNCTION_56	SWITCH_1	IF_2
0x4006f43	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3818	ftp.c	FUNCTION_56	SWITCH_1	IF_2	CALL_3
0x4006f47	          0x4889c7	                            mov rdi, rax	      3818	ftp.c	FUNCTION_56	SWITCH_1	IF_2	CALL_3
0x4006f4a	      0xe8ecfeffff	                   call sym.wc_statemach	      3818	ftp.c	FUNCTION_56	SWITCH_1	IF_2	CALL_3
0x4006f4f	      0xe987030000	                           jmp 0x40072db	      3818	ftp.c	FUNCTION_56	SWITCH_1	IF_2	CALL_3
0x4006f54	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3820	ftp.c	FUNCTION_56	SWITCH_1	IF_3
0x4006f58	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3820	ftp.c	FUNCTION_56	SWITCH_1	IF_3
0x4006f5c	          0x4885c0	                           test rax, rax	      3820	ftp.c	FUNCTION_56	SWITCH_1	IF_3
0x4006f5f	            0x7514	                           jne 0x4006f75	      3820	ftp.c	FUNCTION_56	SWITCH_1	IF_3
0x4006f61	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3822	ftp.c	FUNCTION_56	SWITCH_1	IF_3
0x4006f65	    0xc70004000000	                      mov dword [rax], 4	      3822	ftp.c	FUNCTION_56	SWITCH_1	IF_3
0x4006f6b	      0xb84e000000	                           mov eax, 0x4e	      3823	ftp.c	FUNCTION_56	SWITCH_1	IF_3
0x4006f70	      0xe966030000	                           jmp 0x40072db	      3823	ftp.c	FUNCTION_56	SWITCH_1	IF_3
0x4006f75	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3825	ftp.c	FUNCTION_56	SWITCH_1	CALL_4
0x4006f79	          0x4889c7	                            mov rdi, rax	      3825	ftp.c	FUNCTION_56	SWITCH_1	CALL_4
0x4006f7c	      0xe8bafeffff	                   call sym.wc_statemach	      3825	ftp.c	FUNCTION_56	SWITCH_1	CALL_4
0x4006f81	      0xe955030000	                           jmp 0x40072db	      3825	ftp.c	FUNCTION_56	SWITCH_1	CALL_4
0x4006f86	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3830	ftp.c	FUNCTION_56	SWITCH_1
0x4006f8a	    0x480550060000	                          add rax, 0x650	      3830	ftp.c	FUNCTION_56	SWITCH_1
0x4006f90	        0x488945d8	             mov qword [rbp - 0x28], rax	      3830	ftp.c	FUNCTION_56	SWITCH_1
0x4006f94	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3831	ftp.c	FUNCTION_56	SWITCH_1
0x4006f98	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3831	ftp.c	FUNCTION_56	SWITCH_1
0x4006f9c	          0x488b00	                    mov rax, qword [rax]	      3831	ftp.c	FUNCTION_56	SWITCH_1
0x4006f9f	        0x488945e0	             mov qword [rbp - 0x20], rax	      3831	ftp.c	FUNCTION_56	SWITCH_1
0x4006fa3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3833	ftp.c	FUNCTION_56	SWITCH_1	CALL_5
0x4006fa7	          0x488b10	                    mov rdx, qword [rax]	      3833	ftp.c	FUNCTION_56	SWITCH_1	CALL_5
0x4006faa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3833	ftp.c	FUNCTION_56	SWITCH_1	CALL_5
0x4006fae	        0x488b4008	                mov rax, qword [rax + 8]	      3833	ftp.c	FUNCTION_56	SWITCH_1	CALL_5
0x4006fb2	          0x4889c6	                            mov rsi, rax	      3833	ftp.c	FUNCTION_56	SWITCH_1	CALL_5
0x4006fb5	    0x488d3d000000	                   lea rdi, [0x04006fbc]	      3833	ftp.c	FUNCTION_56	SWITCH_1	CALL_5
0x4006fbc	      0xb800000000	                              mov eax, 0	      3833	ftp.c	FUNCTION_56	SWITCH_1	CALL_5
0x4006fc1	      0xe800000000	                          call 0x4006fc6	      3833	ftp.c	FUNCTION_56	SWITCH_1	CALL_5
0x4006fc6	        0x488945e8	             mov qword [rbp - 0x18], rax	      3833	ftp.c	FUNCTION_56	SWITCH_1	CALL_5
0x4006fca	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3834	ftp.c	FUNCTION_56	SWITCH_1	IF_4
0x4006fcf	            0x750a	                           jne 0x4006fdb	      3834	ftp.c	FUNCTION_56	SWITCH_1	IF_4
0x4006fd1	      0xb81b000000	                           mov eax, 0x1b	      3835	ftp.c	FUNCTION_56	SWITCH_1	IF_4
0x4006fd6	      0xe900030000	                           jmp 0x40072db	      3835	ftp.c	FUNCTION_56	SWITCH_1	IF_4
0x4006fdb	    0x488b05000000	            mov rax, qword [0x04006fe2] 	      3839	ftp.c	FUNCTION_56	SWITCH_1	CALL_6
0x4006fe2	          0x488b00	                    mov rax, qword [rax]	      3839	ftp.c	FUNCTION_56	SWITCH_1	CALL_6
0x4006fe5	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3839	ftp.c	FUNCTION_56	SWITCH_1	CALL_6
0x4006fe9	          0x488b12	                    mov rdx, qword [rdx]	      3839	ftp.c	FUNCTION_56	SWITCH_1	CALL_6
0x4006fec	    0x488b92105100	          mov rdx, qword [rdx + 0x5110] 	      3839	ftp.c	FUNCTION_56	SWITCH_1	CALL_6
0x4006ff3	          0x4889d7	                            mov rdi, rdx	      3839	ftp.c	FUNCTION_56	SWITCH_1	CALL_6
0x4006ff6	            0xffd0	                                call rax	      3839	ftp.c	FUNCTION_56	SWITCH_1	CALL_6
0x4006ff8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3839	ftp.c	FUNCTION_56	SWITCH_1	CALL_6
0x4006ffc	          0x488b00	                    mov rax, qword [rax]	      3839	ftp.c	FUNCTION_56	SWITCH_1	CALL_6
0x4006fff	    0x48c780105100	            mov qword [rax + 0x5110], 0 	      3839	ftp.c	FUNCTION_56	SWITCH_1	CALL_6
0x400700a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3840	ftp.c	FUNCTION_56	SWITCH_1
0x400700e	          0x488b00	                    mov rax, qword [rax]	      3840	ftp.c	FUNCTION_56	SWITCH_1
0x4007011	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3840	ftp.c	FUNCTION_56	SWITCH_1
0x4007015	    0x488990105100	          mov qword [rax + 0x5110], rdx 	      3840	ftp.c	FUNCTION_56	SWITCH_1
0x400701c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3841	ftp.c	FUNCTION_56	SWITCH_1
0x4007020	          0x488b00	                    mov rax, qword [rax]	      3841	ftp.c	FUNCTION_56	SWITCH_1
0x4007023	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3841	ftp.c	FUNCTION_56	SWITCH_1
0x4007027	    0x488990185100	          mov qword [rax + 0x5118], rdx 	      3841	ftp.c	FUNCTION_56	SWITCH_1
0x400702e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3843	ftp.c	FUNCTION_56	SWITCH_1	CALL_7
0x4007032	          0x488b10	                    mov rdx, qword [rax]	      3843	ftp.c	FUNCTION_56	SWITCH_1	CALL_7
0x4007035	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3843	ftp.c	FUNCTION_56	SWITCH_1	CALL_7
0x4007039	          0x488b00	                    mov rax, qword [rax]	      3843	ftp.c	FUNCTION_56	SWITCH_1	CALL_7
0x400703c	    0x488d35000000	                   lea rsi, [0x04007043]	      3843	ftp.c	FUNCTION_56	SWITCH_1	CALL_7
0x4007043	          0x4889c7	                            mov rdi, rax	      3843	ftp.c	FUNCTION_56	SWITCH_1	CALL_7
0x4007046	      0xb800000000	                              mov eax, 0	      3843	ftp.c	FUNCTION_56	SWITCH_1	CALL_7
0x400704b	      0xe800000000	                          call 0x4007050	      3843	ftp.c	FUNCTION_56	SWITCH_1	CALL_7
0x4007050	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3844	ftp.c	FUNCTION_56	SWITCH_1	IF_5
0x4007054	          0x488b00	                    mov rax, qword [rax]	      3844	ftp.c	FUNCTION_56	SWITCH_1	IF_5
0x4007057	    0x488b80700a00	           mov rax, qword [rax + 0xa70] 	      3844	ftp.c	FUNCTION_56	SWITCH_1	IF_5
0x400705e	          0x4885c0	                           test rax, rax	      3844	ftp.c	FUNCTION_56	SWITCH_1	IF_5
0x4007061	     0xf84ae000000	                            je 0x4007115	      3844	ftp.c	FUNCTION_56	SWITCH_1	IF_5
0x4007067	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3846	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_8
0x400706b	          0x488b00	                    mov rax, qword [rax]	      3846	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_8
0x400706e	      0xbe01000000	                              mov esi, 1	      3846	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_8
0x4007073	          0x4889c7	                            mov rdi, rax	      3846	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_8
0x4007076	      0xe800000000	                          call 0x400707b	      3846	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_8
0x400707b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3847	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_9
0x400707f	          0x488b00	                    mov rax, qword [rax]	      3847	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_9
0x4007082	    0x488b80700a00	           mov rax, qword [rax + 0xa70] 	      3847	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_9
0x4007089	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3848	ftp.c	FUNCTION_56	SWITCH_1	IF_5
0x400708d	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      3848	ftp.c	FUNCTION_56	SWITCH_1	IF_5
0x4007091	            0x89d7	                            mov edi, edx	      3847	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_9
0x4007093	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3847	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_9
0x4007097	        0x488b7248	            mov rsi, qword [rdx + 0x48] 	      3847	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_9
0x400709b	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      3847	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_9
0x400709f	            0x89fa	                            mov edx, edi	      3847	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_9
0x40070a1	          0x4889cf	                            mov rdi, rcx	      3847	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_9
0x40070a4	            0xffd0	                                call rax	      3847	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_9
0x40070a6	        0x488945f0	             mov qword [rbp - 0x10], rax	      3847	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_9
0x40070aa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3849	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_10
0x40070ae	          0x488b00	                    mov rax, qword [rax]	      3849	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_10
0x40070b1	      0xbe00000000	                              mov esi, 0	      3849	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_10
0x40070b6	          0x4889c7	                            mov rdi, rax	      3849	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_10
0x40070b9	      0xe800000000	                          call 0x40070be	      3849	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_10
0x40070be	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3850	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2
0x40070c2	        0x4883f801	                              cmp rax, 1	      3850	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2
0x40070c6	            0x7443	                            je 0x400710b	      3850	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2
0x40070c8	        0x4883f802	                              cmp rax, 2	      3850	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2
0x40070cc	            0x7547	                           jne 0x4007115	      3850	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2
0x40070ce	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3852	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2	CALL_11
0x40070d2	          0x488b10	                    mov rdx, qword [rax]	      3852	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2	CALL_11
0x40070d5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3852	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2	CALL_11
0x40070d9	          0x488b00	                    mov rax, qword [rax]	      3852	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2	CALL_11
0x40070dc	    0x488d35000000	                   lea rsi, [0x040070e3]	      3852	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2	CALL_11
0x40070e3	          0x4889c7	                            mov rdi, rax	      3852	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2	CALL_11
0x40070e6	      0xb800000000	                              mov eax, 0	      3852	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2	CALL_11
0x40070eb	      0xe800000000	                          call 0x40070f0	      3852	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2	CALL_11
0x40070f0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3854	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2
0x40070f4	    0xc70005000000	                      mov dword [rax], 5	      3854	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2
0x40070fa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3855	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2	CALL_12
0x40070fe	          0x4889c7	                            mov rdi, rax	      3855	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2	CALL_12
0x4007101	      0xe835fdffff	                   call sym.wc_statemach	      3855	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2	CALL_12
0x4007106	      0xe9d0010000	                           jmp 0x40072db	      3855	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2	CALL_12
0x400710b	      0xb858000000	                           mov eax, 0x58	      3857	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2
0x4007110	      0xe9c6010000	                           jmp 0x40072db	      3857	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2
0x4007115	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3861	ftp.c	FUNCTION_56	SWITCH_1	IF_6
0x4007119	          0x8b4008	                mov eax, dword [rax + 8]	      3861	ftp.c	FUNCTION_56	SWITCH_1	IF_6
0x400711c	            0x85c0	                           test eax, eax	      3861	ftp.c	FUNCTION_56	SWITCH_1	IF_6
0x400711e	            0x741b	                            je 0x400713b	      3861	ftp.c	FUNCTION_56	SWITCH_1	IF_6
0x4007120	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3862	ftp.c	FUNCTION_56	SWITCH_1	IF_6
0x4007124	    0xc70005000000	                      mov dword [rax], 5	      3862	ftp.c	FUNCTION_56	SWITCH_1	IF_6
0x400712a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3863	ftp.c	FUNCTION_56	SWITCH_1	IF_6	CALL_13
0x400712e	          0x4889c7	                            mov rdi, rax	      3863	ftp.c	FUNCTION_56	SWITCH_1	IF_6	CALL_13
0x4007131	      0xe805fdffff	                   call sym.wc_statemach	      3863	ftp.c	FUNCTION_56	SWITCH_1	IF_6	CALL_13
0x4007136	      0xe9a0010000	                           jmp 0x40072db	      3863	ftp.c	FUNCTION_56	SWITCH_1	IF_6	CALL_13
0x400713b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3866	ftp.c	FUNCTION_56	SWITCH_1	IF_7
0x400713f	          0x8b4060	            mov eax, dword [rax + 0x60] 	      3866	ftp.c	FUNCTION_56	SWITCH_1	IF_7
0x4007142	          0x83e040	                           and eax, 0x40	      3866	ftp.c	FUNCTION_56	SWITCH_1	IF_7
0x4007145	            0x85c0	                           test eax, eax	      3866	ftp.c	FUNCTION_56	SWITCH_1	IF_7
0x4007147	            0x7413	                            je 0x400715c	      3866	ftp.c	FUNCTION_56	SWITCH_1	IF_7
0x4007149	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3867	ftp.c	FUNCTION_56	SWITCH_1	IF_7
0x400714d	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      3867	ftp.c	FUNCTION_56	SWITCH_1	IF_7
0x4007151	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3867	ftp.c	FUNCTION_56	SWITCH_1	IF_7
0x4007155	    0x488990d80000	             mov qword [rax + 0xd8], rdx	      3867	ftp.c	FUNCTION_56	SWITCH_1	IF_7
0x400715c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3869	ftp.c	FUNCTION_56	SWITCH_1	CALL_14
0x4007160	          0x4889c7	                            mov rdi, rax	      3869	ftp.c	FUNCTION_56	SWITCH_1	CALL_14
0x4007163	      0xe8bb050000	             call sym.ftp_parse_url_path	      3869	ftp.c	FUNCTION_56	SWITCH_1	CALL_14
0x4007168	          0x8945c4	             mov dword [rbp - 0x3c], eax	      3869	ftp.c	FUNCTION_56	SWITCH_1	CALL_14
0x400716b	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      3870	ftp.c	FUNCTION_56	SWITCH_1	IF_8
0x400716f	            0x7408	                            je 0x4007179	      3870	ftp.c	FUNCTION_56	SWITCH_1	IF_8
0x4007171	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      3871	ftp.c	FUNCTION_56	SWITCH_1	IF_8
0x4007174	      0xe962010000	                           jmp 0x40072db	      3871	ftp.c	FUNCTION_56	SWITCH_1	IF_8
0x4007179	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3874	ftp.c	FUNCTION_56	SWITCH_1	CALL_15
0x400717d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3874	ftp.c	FUNCTION_56	SWITCH_1	CALL_15
0x4007181	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3874	ftp.c	FUNCTION_56	SWITCH_1	CALL_15
0x4007185	        0x488d4a18	                   lea rcx, [rdx + 0x18]	      3874	ftp.c	FUNCTION_56	SWITCH_1	CALL_15
0x4007189	      0xba00000000	                              mov edx, 0	      3874	ftp.c	FUNCTION_56	SWITCH_1	CALL_15
0x400718e	          0x4889c6	                            mov rsi, rax	      3874	ftp.c	FUNCTION_56	SWITCH_1	CALL_15
0x4007191	          0x4889cf	                            mov rdi, rcx	      3874	ftp.c	FUNCTION_56	SWITCH_1	CALL_15
0x4007194	      0xe800000000	                          call 0x4007199	      3874	ftp.c	FUNCTION_56	SWITCH_1	CALL_15
0x4007199	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3876	ftp.c	FUNCTION_56	SWITCH_1	IF_9
0x400719d	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3876	ftp.c	FUNCTION_56	SWITCH_1	IF_9
0x40071a1	          0x4885c0	                           test rax, rax	      3876	ftp.c	FUNCTION_56	SWITCH_1	IF_9
0x40071a4	     0xf852a010000	                           jne 0x40072d4	      3876	ftp.c	FUNCTION_56	SWITCH_1	IF_9
0x40071aa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3877	ftp.c	FUNCTION_56	SWITCH_1	IF_9
0x40071ae	    0xc70004000000	                      mov dword [rax], 4	      3877	ftp.c	FUNCTION_56	SWITCH_1	IF_9
0x40071b4	      0xb800000000	                              mov eax, 0	      3880	ftp.c	FUNCTION_56	SWITCH_1	IF_9
0x40071b9	      0xe91d010000	                           jmp 0x40072db	      3880	ftp.c	FUNCTION_56	SWITCH_1	IF_9
0x40071be	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3885	ftp.c	FUNCTION_56	SWITCH_1	IF_10
0x40071c2	          0x488b00	                    mov rax, qword [rax]	      3885	ftp.c	FUNCTION_56	SWITCH_1	IF_10
0x40071c5	    0x488b80780a00	           mov rax, qword [rax + 0xa78] 	      3885	ftp.c	FUNCTION_56	SWITCH_1	IF_10
0x40071cc	          0x4885c0	                           test rax, rax	      3885	ftp.c	FUNCTION_56	SWITCH_1	IF_10
0x40071cf	            0x7449	                            je 0x400721a	      3885	ftp.c	FUNCTION_56	SWITCH_1	IF_10
0x40071d1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3886	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_16
0x40071d5	          0x488b00	                    mov rax, qword [rax]	      3886	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_16
0x40071d8	      0xbe01000000	                              mov esi, 1	      3886	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_16
0x40071dd	          0x4889c7	                            mov rdi, rax	      3886	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_16
0x40071e0	      0xe800000000	                          call 0x40071e5	      3886	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_16
0x40071e5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3887	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_17
0x40071e9	          0x488b00	                    mov rax, qword [rax]	      3887	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_17
0x40071ec	    0x488b80780a00	           mov rax, qword [rax + 0xa78] 	      3887	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_17
0x40071f3	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3887	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_17
0x40071f7	          0x488b12	                    mov rdx, qword [rdx]	      3887	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_17
0x40071fa	    0x488b92d05100	          mov rdx, qword [rdx + 0x51d0] 	      3887	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_17
0x4007201	          0x4889d7	                            mov rdi, rdx	      3887	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_17
0x4007204	            0xffd0	                                call rax	      3887	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_17
0x4007206	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3888	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_18
0x400720a	          0x488b00	                    mov rax, qword [rax]	      3888	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_18
0x400720d	      0xbe00000000	                              mov esi, 0	      3888	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_18
0x4007212	          0x4889c7	                            mov rdi, rax	      3888	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_18
0x4007215	      0xe800000000	                          call 0x400721a	      3888	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_18
0x400721a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3890	ftp.c	FUNCTION_56	SWITCH_1	CALL_19
0x400721e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      3890	ftp.c	FUNCTION_56	SWITCH_1	CALL_19
0x4007222	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3890	ftp.c	FUNCTION_56	SWITCH_1	CALL_19
0x4007226	        0x488d4a18	                   lea rcx, [rdx + 0x18]	      3890	ftp.c	FUNCTION_56	SWITCH_1	CALL_19
0x400722a	      0xba00000000	                              mov edx, 0	      3890	ftp.c	FUNCTION_56	SWITCH_1	CALL_19
0x400722f	          0x4889c6	                            mov rsi, rax	      3890	ftp.c	FUNCTION_56	SWITCH_1	CALL_19
0x4007232	          0x4889cf	                            mov rdi, rcx	      3890	ftp.c	FUNCTION_56	SWITCH_1	CALL_19
0x4007235	      0xe800000000	                          call 0x400723a	      3890	ftp.c	FUNCTION_56	SWITCH_1	CALL_19
0x400723a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3891	ftp.c	FUNCTION_56	SWITCH_1
0x400723e	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3891	ftp.c	FUNCTION_56	SWITCH_1
0x4007242	          0x4885c0	                           test rax, rax	      3891	ftp.c	FUNCTION_56	SWITCH_1
0x4007245	            0x7507	                           jne 0x400724e	      3891	ftp.c	FUNCTION_56	SWITCH_1
0x4007247	      0xba04000000	                              mov edx, 4	      3891	ftp.c	FUNCTION_56	SWITCH_1
0x400724c	            0xeb05	                           jmp 0x4007253	      3891	ftp.c	FUNCTION_56	SWITCH_1
0x400724e	      0xba03000000	                              mov edx, 3	      3891	ftp.c	FUNCTION_56	SWITCH_1
0x4007253	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3891	ftp.c	FUNCTION_56	SWITCH_1
0x4007257	            0x8910	                    mov dword [rax], edx	      3891	ftp.c	FUNCTION_56	SWITCH_1
0x4007259	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3893	ftp.c	FUNCTION_56	SWITCH_1	CALL_20
0x400725d	          0x4889c7	                            mov rdi, rax	      3893	ftp.c	FUNCTION_56	SWITCH_1	CALL_20
0x4007260	      0xe8d6fbffff	                   call sym.wc_statemach	      3893	ftp.c	FUNCTION_56	SWITCH_1	CALL_20
0x4007265	            0xeb74	                           jmp 0x40072db	      3893	ftp.c	FUNCTION_56	SWITCH_1	CALL_20
0x4007267	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3897	ftp.c	FUNCTION_56	SWITCH_1
0x400726b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3897	ftp.c	FUNCTION_56	SWITCH_1
0x400726f	        0x488945f8	                mov qword [rbp - 8], rax	      3897	ftp.c	FUNCTION_56	SWITCH_1
0x4007273	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      3898	ftp.c	FUNCTION_56	SWITCH_1
0x400727a	      0x48837df800	                  cmp qword [rbp - 8], 0	      3899	ftp.c	FUNCTION_56	SWITCH_1	IF_11
0x400727f	            0x7412	                            je 0x4007293	      3899	ftp.c	FUNCTION_56	SWITCH_1	IF_11
0x4007281	        0x488b45f8	                mov rax, qword [rbp - 8]	      3900	ftp.c	FUNCTION_56	SWITCH_1	CALL_21
0x4007285	          0x488b00	                    mov rax, qword [rax]	      3900	ftp.c	FUNCTION_56	SWITCH_1	CALL_21
0x4007288	          0x4889c7	                            mov rdi, rax	      3900	ftp.c	FUNCTION_56	SWITCH_1	CALL_21
0x400728b	      0xe800000000	                          call 0x4007290	      3900	ftp.c	FUNCTION_56	SWITCH_1	CALL_21
0x4007290	          0x8945c4	             mov dword [rbp - 0x3c], eax	      3900	ftp.c	FUNCTION_56	SWITCH_1	CALL_21
0x4007293	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      3902	ftp.c	FUNCTION_56	SWITCH_1
0x4007297	            0x7407	                            je 0x40072a0	      3902	ftp.c	FUNCTION_56	SWITCH_1
0x4007299	      0xba06000000	                              mov edx, 6	      3902	ftp.c	FUNCTION_56	SWITCH_1
0x400729e	            0xeb05	                           jmp 0x40072a5	      3902	ftp.c	FUNCTION_56	SWITCH_1
0x40072a0	      0xba07000000	                              mov edx, 7	      3902	ftp.c	FUNCTION_56	SWITCH_1
0x40072a5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3902	ftp.c	FUNCTION_56	SWITCH_1
0x40072a9	            0x8910	                    mov dword [rax], edx	      3902	ftp.c	FUNCTION_56	SWITCH_1
0x40072ab	            0xeb2b	                           jmp 0x40072d8	      3903	ftp.c	FUNCTION_56	SWITCH_1
0x40072ad	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3908	ftp.c	FUNCTION_56	SWITCH_1	IF_12
0x40072b1	        0x488b4040	            mov rax, qword [rax + 0x40] 	      3908	ftp.c	FUNCTION_56	SWITCH_1	IF_12
0x40072b5	          0x4885c0	                           test rax, rax	      3908	ftp.c	FUNCTION_56	SWITCH_1	IF_12
0x40072b8	            0x741d	                            je 0x40072d7	      3908	ftp.c	FUNCTION_56	SWITCH_1	IF_12
0x40072ba	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3909	ftp.c	FUNCTION_56	SWITCH_1	CALL_22
0x40072be	        0x488b4040	            mov rax, qword [rax + 0x40] 	      3909	ftp.c	FUNCTION_56	SWITCH_1	CALL_22
0x40072c2	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3909	ftp.c	FUNCTION_56	SWITCH_1	CALL_22
0x40072c6	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      3909	ftp.c	FUNCTION_56	SWITCH_1	CALL_22
0x40072ca	          0x4889d7	                            mov rdi, rdx	      3909	ftp.c	FUNCTION_56	SWITCH_1	CALL_22
0x40072cd	            0xffd0	                                call rax	      3909	ftp.c	FUNCTION_56	SWITCH_1	CALL_22
0x40072cf	            0xeb06	                           jmp 0x40072d7	      3910	ftp.c	FUNCTION_56	SWITCH_1
0x40072d1	              0x90	                                     nop	      3801	ftp.c	FUNCTION_56	SWITCH_1	IF_1
0x40072d2	            0xeb04	                           jmp 0x40072d8	      3801	ftp.c	FUNCTION_56	SWITCH_1	IF_1
0x40072d4	              0x90	                                     nop	      3882	ftp.c	FUNCTION_56	SWITCH_1
0x40072d5	            0xeb01	                           jmp 0x40072d8	      3882	ftp.c	FUNCTION_56	SWITCH_1
0x40072d7	              0x90	                                     nop	      3910	ftp.c	FUNCTION_56	SWITCH_1
0x40072d8	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      3913	ftp.c	FUNCTION_56
0x40072db	              0xc9	                                   leave	      3914	ftp.c	FUNCTION_56
0x40072dc	              0xc3	                                     ret	      3914	ftp.c	FUNCTION_56
ftp_state_mdtm	FOR,0:functions,0:SWITCH,0:ELSE,1:IF,1:DO,0:WHILE,0:CALL,1	47
0x400285c	              0x55	                                push rbp	      1563	ftp.c	FUNCTION_27
0x400285d	          0x4889e5	                            mov rbp, rsp	      1563	ftp.c	FUNCTION_27
0x4002860	        0x4883ec30	                           sub rsp, 0x30	      1563	ftp.c	FUNCTION_27
0x4002864	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1563	ftp.c	FUNCTION_27
0x4002868	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1564	ftp.c	FUNCTION_27
0x400286f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1565	ftp.c	FUNCTION_27
0x4002873	          0x488b00	                    mov rax, qword [rax]	      1565	ftp.c	FUNCTION_27
0x4002876	        0x488945f0	             mov qword [rbp - 0x10], rax	      1565	ftp.c	FUNCTION_27
0x400287a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1566	ftp.c	FUNCTION_27
0x400287e	    0x480550060000	                          add rax, 0x650	      1566	ftp.c	FUNCTION_27
0x4002884	        0x488945f8	                mov qword [rbp - 8], rax	      1566	ftp.c	FUNCTION_27
0x4002888	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1569	ftp.c	FUNCTION_27	IF_1
0x400288c	     0xfb680d20700	          movzx eax, byte [rax + 0x7d2] 	      1569	ftp.c	FUNCTION_27	IF_1
0x4002893	            0x84c0	                             test al, al	      1569	ftp.c	FUNCTION_27	IF_1
0x4002895	            0x750e	                           jne 0x40028a5	      1569	ftp.c	FUNCTION_27	IF_1
0x4002897	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1569	ftp.c	FUNCTION_27	IF_1
0x400289b	    0x8b80c0050000	           mov eax, dword [rax + 0x5c0] 	      1569	ftp.c	FUNCTION_27	IF_1
0x40028a1	            0x85c0	                           test eax, eax	      1569	ftp.c	FUNCTION_27	IF_1
0x40028a3	            0x7454	                            je 0x40028f9	      1569	ftp.c	FUNCTION_27	IF_1
0x40028a5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1569	ftp.c	FUNCTION_27	IF_1
0x40028a9	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1569	ftp.c	FUNCTION_27	IF_1
0x40028b0	          0x4885c0	                           test rax, rax	      1569	ftp.c	FUNCTION_27	IF_1
0x40028b3	            0x7444	                            je 0x40028f9	      1569	ftp.c	FUNCTION_27	IF_1
0x40028b5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1573	ftp.c	FUNCTION_27	IF_1
0x40028b9	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      1573	ftp.c	FUNCTION_27	IF_1
0x40028c0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1573	ftp.c	FUNCTION_27	IF_1
0x40028c4	    0x488d35000000	                   lea rsi, [0x040028cb]	      1573	ftp.c	FUNCTION_27	IF_1
0x40028cb	          0x4889c7	                            mov rdi, rax	      1573	ftp.c	FUNCTION_27	IF_1
0x40028ce	      0xb800000000	                              mov eax, 0	      1573	ftp.c	FUNCTION_27	IF_1
0x40028d3	      0xe800000000	                          call 0x40028d8	      1573	ftp.c	FUNCTION_27	IF_1
0x40028d8	          0x8945ec	             mov dword [rbp - 0x14], eax	      1573	ftp.c	FUNCTION_27	IF_1
0x40028db	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1573	ftp.c	FUNCTION_27	IF_1
0x40028df	            0x7405	                            je 0x40028e6	      1573	ftp.c	FUNCTION_27	IF_1
0x40028e1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1573	ftp.c	FUNCTION_27	IF_1
0x40028e4	            0xeb25	                           jmp 0x400290b	      1573	ftp.c	FUNCTION_27	IF_1
0x40028e6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1575	ftp.c	FUNCTION_27	IF_1
0x40028ea	      0xbe12000000	                           mov esi, 0x12	      1575	ftp.c	FUNCTION_27	IF_1
0x40028ef	          0x4889c7	                            mov rdi, rax	      1575	ftp.c	FUNCTION_27	IF_1
0x40028f2	      0xe88de4ffff	                         call sym._state	      1575	ftp.c	FUNCTION_27	IF_1
0x40028f7	            0xeb0f	                           jmp 0x4002908	      1575	ftp.c	FUNCTION_27	IF_1
0x40028f9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1578	ftp.c	FUNCTION_27	CALL_1
0x40028fd	          0x4889c7	                            mov rdi, rax	      1578	ftp.c	FUNCTION_27	CALL_1
0x4002900	      0xe88cfeffff	                 call sym.ftp_state_type	      1578	ftp.c	FUNCTION_27	CALL_1
0x4002905	          0x8945ec	             mov dword [rbp - 0x14], eax	      1578	ftp.c	FUNCTION_27	CALL_1
0x4002908	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1580	ftp.c	FUNCTION_27
0x400290b	              0xc9	                                   leave	      1581	ftp.c	FUNCTION_27
0x400290c	              0xc3	                                     ret	      1581	ftp.c	FUNCTION_27
ftp_state_pwd	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,0:DO,0:WHILE,0:CALL,0	23
0x4000e3f	              0x55	                                push rbp	       811	ftp.c	FUNCTION_14
0x4000e40	          0x4889e5	                            mov rbp, rsp	       811	ftp.c	FUNCTION_14
0x4000e43	        0x4883ec20	                           sub rsp, 0x20	       811	ftp.c	FUNCTION_14
0x4000e47	        0x48897de8	             mov qword [rbp - 0x18], rdi	       811	ftp.c	FUNCTION_14
0x4000e4b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       815	ftp.c	FUNCTION_14
0x4000e4f	    0x480550060000	                          add rax, 0x650	       815	ftp.c	FUNCTION_14
0x4000e55	    0x488d15000000	                   lea rdx, [0x04000e5c]	       815	ftp.c	FUNCTION_14
0x4000e5c	    0x488d35000000	                   lea rsi, [0x04000e63]	       815	ftp.c	FUNCTION_14
0x4000e63	          0x4889c7	                            mov rdi, rax	       815	ftp.c	FUNCTION_14
0x4000e66	      0xb800000000	                              mov eax, 0	       815	ftp.c	FUNCTION_14
0x4000e6b	      0xe800000000	                          call 0x4000e70	       815	ftp.c	FUNCTION_14
0x4000e70	          0x8945fc	                mov dword [rbp - 4], eax	       815	ftp.c	FUNCTION_14
0x4000e73	        0x837dfc00	                  cmp dword [rbp - 4], 0	       815	ftp.c	FUNCTION_14
0x4000e77	            0x7405	                            je 0x4000e7e	       815	ftp.c	FUNCTION_14
0x4000e79	          0x8b45fc	                mov eax, dword [rbp - 4]	       815	ftp.c	FUNCTION_14
0x4000e7c	            0xeb16	                           jmp 0x4000e94	       815	ftp.c	FUNCTION_14
0x4000e7e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       816	ftp.c	FUNCTION_14
0x4000e82	      0xbe09000000	                              mov esi, 9	       816	ftp.c	FUNCTION_14
0x4000e87	          0x4889c7	                            mov rdi, rax	       816	ftp.c	FUNCTION_14
0x4000e8a	      0xe8f5feffff	                         call sym._state	       816	ftp.c	FUNCTION_14
0x4000e8f	      0xb800000000	                              mov eax, 0	       818	ftp.c	FUNCTION_14
0x4000e94	              0xc9	                                   leave	       819	ftp.c	FUNCTION_14
0x4000e95	              0xc3	                                     ret	       819	ftp.c	FUNCTION_14
ftp_dophase_done	FOR,0:functions,0:SWITCH,0:ELSE,1:IF,4:DO,0:WHILE,0:CALL,3	62
0x4007e99	              0x55	                                push rbp	      4291	ftp.c	FUNCTION_62
0x4007e9a	          0x4889e5	                            mov rbp, rsp	      4291	ftp.c	FUNCTION_62
0x4007e9d	        0x4883ec30	                           sub rsp, 0x30	      4291	ftp.c	FUNCTION_62
0x4007ea1	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4291	ftp.c	FUNCTION_62
0x4007ea5	            0x89f0	                            mov eax, esi	      4291	ftp.c	FUNCTION_62
0x4007ea7	          0x8845d4	               mov byte [rbp - 0x2c], al	      4291	ftp.c	FUNCTION_62
0x4007eaa	    0x64488b042528	                mov rax, qword fs:[0x28]	      4291	ftp.c	FUNCTION_62
0x4007eb3	        0x488945f8	                mov qword [rbp - 8], rax	      4291	ftp.c	FUNCTION_62
0x4007eb7	            0x31c0	                            xor eax, eax	      4291	ftp.c	FUNCTION_62
0x4007eb9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4292	ftp.c	FUNCTION_62
0x4007ebd	          0x488b00	                    mov rax, qword [rax]	      4292	ftp.c	FUNCTION_62
0x4007ec0	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      4292	ftp.c	FUNCTION_62
0x4007ec7	        0x488945e8	             mov qword [rbp - 0x18], rax	      4292	ftp.c	FUNCTION_62
0x4007ecb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4293	ftp.c	FUNCTION_62
0x4007ecf	    0x480550060000	                          add rax, 0x650	      4293	ftp.c	FUNCTION_62
0x4007ed5	        0x488945f0	             mov qword [rbp - 0x10], rax	      4293	ftp.c	FUNCTION_62
0x4007ed9	        0x807dd400	                cmp byte [rbp - 0x2c], 0	      4295	ftp.c	FUNCTION_62	IF_1
0x4007edd	            0x742d	                            je 0x4007f0c	      4295	ftp.c	FUNCTION_62	IF_1
0x4007edf	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      4297	ftp.c	FUNCTION_62	IF_1	CALL_1
0x4007ee3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4297	ftp.c	FUNCTION_62	IF_1	CALL_1
0x4007ee7	          0x4889d6	                            mov rsi, rdx	      4297	ftp.c	FUNCTION_62	IF_1	CALL_1
0x4007eea	          0x4889c7	                            mov rdi, rax	      4297	ftp.c	FUNCTION_62	IF_1	CALL_1
0x4007eed	      0xe8c7e6ffff	                    call sym.ftp_do_more	      4297	ftp.c	FUNCTION_62	IF_1	CALL_1
0x4007ef2	          0x8945e4	             mov dword [rbp - 0x1c], eax	      4297	ftp.c	FUNCTION_62	IF_1	CALL_1
0x4007ef5	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4299	ftp.c	FUNCTION_62	IF_1	IF_2
0x4007ef9	            0x7411	                            je 0x4007f0c	      4299	ftp.c	FUNCTION_62	IF_1	IF_2
0x4007efb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4300	ftp.c	FUNCTION_62	IF_1	IF_2	CALL_2
0x4007eff	          0x4889c7	                            mov rdi, rax	      4300	ftp.c	FUNCTION_62	IF_1	IF_2	CALL_2
0x4007f02	      0xe80b82ffff	          call sym.close_secondarysocket	      4300	ftp.c	FUNCTION_62	IF_1	IF_2	CALL_2
0x4007f07	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4301	ftp.c	FUNCTION_62	IF_1	IF_2
0x4007f0a	            0xeb66	                           jmp 0x4007f72	      4301	ftp.c	FUNCTION_62	IF_1	IF_2
0x4007f0c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4305	ftp.c	FUNCTION_62	IF_3
0x4007f10	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4305	ftp.c	FUNCTION_62	IF_3
0x4007f13	            0x85c0	                           test eax, eax	      4305	ftp.c	FUNCTION_62	IF_3
0x4007f15	            0x7435	                            je 0x4007f4c	      4305	ftp.c	FUNCTION_62	IF_3
0x4007f17	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4307	ftp.c	FUNCTION_62	CALL_3
0x4007f1b	        0x4883ec08	                              sub rsp, 8	      4307	ftp.c	FUNCTION_62	CALL_3
0x4007f1f	            0x6a00	                                  push 0	      4307	ftp.c	FUNCTION_62	CALL_3
0x4007f21	    0x41b9ffffffff	                     mov r9d, 0xffffffff	      4307	ftp.c	FUNCTION_62	CALL_3
0x4007f27	    0x41b800000000	                              mov r8d, 0	      4307	ftp.c	FUNCTION_62	CALL_3
0x4007f2d	      0xb900000000	                              mov ecx, 0	      4307	ftp.c	FUNCTION_62	CALL_3
0x4007f32	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      4307	ftp.c	FUNCTION_62	CALL_3
0x4007f39	      0xbeffffffff	                     mov esi, 0xffffffff	      4307	ftp.c	FUNCTION_62	CALL_3
0x4007f3e	          0x4889c7	                            mov rdi, rax	      4307	ftp.c	FUNCTION_62	CALL_3
0x4007f41	      0xe800000000	                          call 0x4007f46	      4307	ftp.c	FUNCTION_62	CALL_3
0x4007f46	        0x4883c410	                           add rsp, 0x10	      4307	ftp.c	FUNCTION_62	CALL_3
0x4007f4a	            0xeb16	                           jmp 0x4007f62	      4307	ftp.c	FUNCTION_62	CALL_3
0x4007f4c	         0xfb645d4	            movzx eax, byte [rbp - 0x2c]	      4308	ftp.c	FUNCTION_62	ELSE_1	IF_4
0x4007f50	          0x83f001	                              xor eax, 1	      4308	ftp.c	FUNCTION_62	ELSE_1	IF_4
0x4007f53	            0x84c0	                             test al, al	      4308	ftp.c	FUNCTION_62	ELSE_1	IF_4
0x4007f55	            0x740b	                            je 0x4007f62	      4308	ftp.c	FUNCTION_62	ELSE_1	IF_4
0x4007f57	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4310	ftp.c	FUNCTION_62	ELSE_1	IF_4
0x4007f5b	    0xc680a4030000	               mov byte [rax + 0x3a4], 1	      4310	ftp.c	FUNCTION_62	ELSE_1	IF_4
0x4007f62	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4312	ftp.c	FUNCTION_62
0x4007f66	    0xc68091000000	                mov byte [rax + 0x91], 1	      4312	ftp.c	FUNCTION_62
0x4007f6d	      0xb800000000	                              mov eax, 0	      4314	ftp.c	FUNCTION_62
0x4007f72	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4315	ftp.c	FUNCTION_62
0x4007f76	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4315	ftp.c	FUNCTION_62
0x4007f7f	            0x7405	                            je 0x4007f86	      4315	ftp.c	FUNCTION_62
0x4007f81	      0xe800000000	                          call 0x4007f86	      4315	ftp.c	FUNCTION_62
0x4007f86	              0xc9	                                   leave	      4315	ftp.c	FUNCTION_62
0x4007f87	              0xc3	                                     ret	      4315	ftp.c	FUNCTION_62
AcceptServerConnect	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,4:DO,0:WHILE,0:CALL,10	97
0x40002ac	              0x55	                                push rbp	       279	ftp.c	FUNCTION_4
0x40002ad	          0x4889e5	                            mov rbp, rsp	       279	ftp.c	FUNCTION_4
0x40002b0	    0x4881ecc00000	                           sub rsp, 0xc0	       279	ftp.c	FUNCTION_4
0x40002b7	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	       279	ftp.c	FUNCTION_4
0x40002be	    0x64488b042528	                mov rax, qword fs:[0x28]	       279	ftp.c	FUNCTION_4
0x40002c7	        0x488945f8	                mov qword [rbp - 8], rax	       279	ftp.c	FUNCTION_4
0x40002cb	            0x31c0	                            xor eax, eax	       279	ftp.c	FUNCTION_4
0x40002cd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       280	ftp.c	FUNCTION_4
0x40002d4	          0x488b00	                    mov rax, qword [rax]	       280	ftp.c	FUNCTION_4
0x40002d7	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       280	ftp.c	FUNCTION_4
0x40002de	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       281	ftp.c	FUNCTION_4
0x40002e5	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	       281	ftp.c	FUNCTION_4
0x40002eb	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	       281	ftp.c	FUNCTION_4
0x40002f1	    0xc7855cffffff	     mov dword [rbp - 0xa4], 0xffffffff 	       282	ftp.c	FUNCTION_4
0x40002fb	    0xc78558ffffff	           mov dword [rbp - 0xa8], 0x80 	       288	ftp.c	FUNCTION_4
0x4000305	    0x488d9558ffff	                   lea rdx, [rbp - 0xa8]	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x400030c	    0x488d8d70ffff	                   lea rcx, [rbp - 0x90]	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x4000313	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x4000319	          0x4889ce	                            mov rsi, rcx	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x400031c	            0x89c7	                            mov edi, eax	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x400031e	      0xe800000000	                          call 0x4000323	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x4000323	            0x85c0	                           test eax, eax	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x4000325	            0x752e	                           jne 0x4000355	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x4000327	    0xc78558ffffff	           mov dword [rbp - 0xa8], 0x80 	       291	ftp.c	FUNCTION_4	IF_1
0x4000331	    0x488d9558ffff	                   lea rdx, [rbp - 0xa8]	       293	ftp.c	FUNCTION_4	IF_1	CALL_2
0x4000338	    0x488d8d70ffff	                   lea rcx, [rbp - 0x90]	       293	ftp.c	FUNCTION_4	IF_1	CALL_2
0x400033f	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	       293	ftp.c	FUNCTION_4	IF_1	CALL_2
0x4000345	          0x4889ce	                            mov rsi, rcx	       293	ftp.c	FUNCTION_4	IF_1	CALL_2
0x4000348	            0x89c7	                            mov edi, eax	       293	ftp.c	FUNCTION_4	IF_1	CALL_2
0x400034a	      0xe800000000	                          call 0x400034f	       293	ftp.c	FUNCTION_4	IF_1	CALL_2
0x400034f	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	       293	ftp.c	FUNCTION_4	IF_1	CALL_2
0x4000355	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	       295	ftp.c	FUNCTION_4	CALL_3
0x400035b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       295	ftp.c	FUNCTION_4	CALL_3
0x4000362	            0x89d6	                            mov esi, edx	       295	ftp.c	FUNCTION_4	CALL_3
0x4000364	          0x4889c7	                            mov rdi, rax	       295	ftp.c	FUNCTION_4	CALL_3
0x4000367	      0xe800000000	                          call 0x400036c	       295	ftp.c	FUNCTION_4	CALL_3
0x400036c	    0x83bd5cffffff	cmp dword [rbp - 0xa4], 0xffffffffffffffff	       297	ftp.c	FUNCTION_4	IF_2
0x4000373	            0x7525	                           jne 0x400039a	       297	ftp.c	FUNCTION_4	IF_2
0x4000375	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       298	ftp.c	FUNCTION_4	IF_2	CALL_4
0x400037c	    0x488d35000000	                   lea rsi, [0x04000383]	       298	ftp.c	FUNCTION_4	IF_2	CALL_4
0x4000383	          0x4889c7	                            mov rdi, rax	       298	ftp.c	FUNCTION_4	IF_2	CALL_4
0x4000386	      0xb800000000	                              mov eax, 0	       298	ftp.c	FUNCTION_4	IF_2	CALL_4
0x400038b	      0xe800000000	                          call 0x4000390	       298	ftp.c	FUNCTION_4	IF_2	CALL_4
0x4000390	      0xb81e000000	                           mov eax, 0x1e	       299	ftp.c	FUNCTION_4	IF_2
0x4000395	      0xe9fb000000	                           jmp 0x4000495	       299	ftp.c	FUNCTION_4	IF_2
0x400039a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       301	ftp.c	FUNCTION_4	CALL_5
0x40003a1	    0x488d35000000	                   lea rsi, [0x040003a8]	       301	ftp.c	FUNCTION_4	CALL_5
0x40003a8	          0x4889c7	                            mov rdi, rax	       301	ftp.c	FUNCTION_4	CALL_5
0x40003ab	      0xb800000000	                              mov eax, 0	       301	ftp.c	FUNCTION_4	CALL_5
0x40003b0	      0xe800000000	                          call 0x40003b5	       301	ftp.c	FUNCTION_4	CALL_5
0x40003b5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       304	ftp.c	FUNCTION_4
0x40003bc	    0xc680a4030000	               mov byte [rax + 0x3a4], 0	       304	ftp.c	FUNCTION_4
0x40003c3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       306	ftp.c	FUNCTION_4
0x40003ca	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	       306	ftp.c	FUNCTION_4
0x40003d0	    0x89905c020000	            mov dword [rax + 0x25c], edx	       306	ftp.c	FUNCTION_4
0x40003d6	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       307	ftp.c	FUNCTION_4	CALL_6
0x40003dc	      0xbe01000000	                              mov esi, 1	       307	ftp.c	FUNCTION_4	CALL_6
0x40003e1	            0x89c7	                            mov edi, eax	       307	ftp.c	FUNCTION_4	CALL_6
0x40003e3	      0xe800000000	                          call 0x40003e8	       307	ftp.c	FUNCTION_4	CALL_6
0x40003e8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       308	ftp.c	FUNCTION_4
0x40003ef	    0xc68069020000	               mov byte [rax + 0x269], 1	       308	ftp.c	FUNCTION_4
0x40003f6	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       310	ftp.c	FUNCTION_4	IF_3
0x40003fd	    0x488b80d00200	           mov rax, qword [rax + 0x2d0] 	       310	ftp.c	FUNCTION_4	IF_3
0x4000404	          0x4885c0	                           test rax, rax	       310	ftp.c	FUNCTION_4	IF_3
0x4000407	     0xf8483000000	                            je 0x4000490	       310	ftp.c	FUNCTION_4	IF_3
0x400040d	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	       311	ftp.c	FUNCTION_4	IF_3
0x4000417	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       314	ftp.c	FUNCTION_4	IF_3	CALL_7
0x400041e	      0xbe01000000	                              mov esi, 1	       314	ftp.c	FUNCTION_4	IF_3	CALL_7
0x4000423	          0x4889c7	                            mov rdi, rax	       314	ftp.c	FUNCTION_4	IF_3	CALL_7
0x4000426	      0xe800000000	                          call 0x400042b	       314	ftp.c	FUNCTION_4	IF_3	CALL_7
0x400042b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       315	ftp.c	FUNCTION_4	IF_3	CALL_8
0x4000432	    0x488b80d00200	           mov rax, qword [rax + 0x2d0] 	       315	ftp.c	FUNCTION_4	IF_3	CALL_8
0x4000439	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       315	ftp.c	FUNCTION_4	IF_3	CALL_8
0x4000440	    0x488b8ad80200	           mov rcx, qword [rdx + 0x2d8] 	       315	ftp.c	FUNCTION_4	IF_3	CALL_8
0x4000447	    0x8bb55cffffff	             mov esi, dword [rbp - 0xa4]	       315	ftp.c	FUNCTION_4	IF_3	CALL_8
0x400044d	      0xba01000000	                              mov edx, 1	       315	ftp.c	FUNCTION_4	IF_3	CALL_8
0x4000452	          0x4889cf	                            mov rdi, rcx	       315	ftp.c	FUNCTION_4	IF_3	CALL_8
0x4000455	            0xffd0	                                call rax	       315	ftp.c	FUNCTION_4	IF_3	CALL_8
0x4000457	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	       315	ftp.c	FUNCTION_4	IF_3	CALL_8
0x400045d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       318	ftp.c	FUNCTION_4	IF_3	CALL_9
0x4000464	      0xbe00000000	                              mov esi, 0	       318	ftp.c	FUNCTION_4	IF_3	CALL_9
0x4000469	          0x4889c7	                            mov rdi, rax	       318	ftp.c	FUNCTION_4	IF_3	CALL_9
0x400046c	      0xe800000000	                          call 0x4000471	       318	ftp.c	FUNCTION_4	IF_3	CALL_9
0x4000471	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	       320	ftp.c	FUNCTION_4	IF_3	IF_4
0x4000478	            0x7416	                            je 0x4000490	       320	ftp.c	FUNCTION_4	IF_3	IF_4
0x400047a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       321	ftp.c	FUNCTION_4	IF_3	IF_4	CALL_10
0x4000481	          0x4889c7	                            mov rdi, rax	       321	ftp.c	FUNCTION_4	IF_3	IF_4	CALL_10
0x4000484	      0xe889fcffff	          call sym.close_secondarysocket	       321	ftp.c	FUNCTION_4	IF_3	IF_4	CALL_10
0x4000489	      0xb82a000000	                           mov eax, 0x2a	       322	ftp.c	FUNCTION_4	IF_3	IF_4
0x400048e	            0xeb05	                           jmp 0x4000495	       322	ftp.c	FUNCTION_4	IF_3	IF_4
0x4000490	      0xb800000000	                              mov eax, 0	       326	ftp.c	FUNCTION_4
0x4000495	        0x488b4df8	                mov rcx, qword [rbp - 8]	       328	ftp.c	FUNCTION_4
0x4000499	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       328	ftp.c	FUNCTION_4
0x40004a2	            0x7405	                            je 0x40004a9	       328	ftp.c	FUNCTION_4
0x40004a4	      0xe800000000	                          call 0x40004a9	       328	ftp.c	FUNCTION_4
0x40004a9	              0xc9	                                   leave	       328	ftp.c	FUNCTION_4
0x40004aa	              0xc3	                                     ret	       328	ftp.c	FUNCTION_4
ftp_epsv_disable	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,1:DO,0:WHILE,0:CALL,2	62
0x4002f4d	              0x55	                                push rbp	      1788	ftp.c	FUNCTION_30
0x4002f4e	          0x4889e5	                            mov rbp, rsp	      1788	ftp.c	FUNCTION_30
0x4002f51	        0x4883ec20	                           sub rsp, 0x20	      1788	ftp.c	FUNCTION_30
0x4002f55	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1788	ftp.c	FUNCTION_30
0x4002f59	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1789	ftp.c	FUNCTION_30
0x4002f60	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f64	     0xfb680a30300	          movzx eax, byte [rax + 0x3a3] 	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f6b	            0x84c0	                             test al, al	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f6d	            0x7449	                            je 0x4002fb8	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f6f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f73	     0xfb680a90300	          movzx eax, byte [rax + 0x3a9] 	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f7a	          0x83f001	                              xor eax, 1	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f7d	            0x84c0	                             test al, al	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f7f	            0x7437	                            je 0x4002fb8	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f81	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f85	     0xfb6809f0300	          movzx eax, byte [rax + 0x39f] 	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f8c	          0x83f001	                              xor eax, 1	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f8f	            0x84c0	                             test al, al	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f91	            0x7425	                            je 0x4002fb8	      1791	ftp.c	FUNCTION_30	IF_1
0x4002f93	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1793	ftp.c	FUNCTION_30	IF_1	CALL_1
0x4002f97	          0x488b00	                    mov rax, qword [rax]	      1793	ftp.c	FUNCTION_30	IF_1	CALL_1
0x4002f9a	    0x488d35000000	                   lea rsi, [0x04002fa1]	      1793	ftp.c	FUNCTION_30	IF_1	CALL_1
0x4002fa1	          0x4889c7	                            mov rdi, rax	      1793	ftp.c	FUNCTION_30	IF_1	CALL_1
0x4002fa4	      0xb800000000	                              mov eax, 0	      1793	ftp.c	FUNCTION_30	IF_1	CALL_1
0x4002fa9	      0xe800000000	                          call 0x4002fae	      1793	ftp.c	FUNCTION_30	IF_1	CALL_1
0x4002fae	      0xb808000000	                              mov eax, 8	      1794	ftp.c	FUNCTION_30	IF_1
0x4002fb3	      0xe992000000	                           jmp 0x400304a	      1794	ftp.c	FUNCTION_30	IF_1
0x4002fb8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1797	ftp.c	FUNCTION_30	CALL_2
0x4002fbc	          0x488b00	                    mov rax, qword [rax]	      1797	ftp.c	FUNCTION_30	CALL_2
0x4002fbf	    0x488d35000000	                   lea rsi, [0x04002fc6]	      1797	ftp.c	FUNCTION_30	CALL_2
0x4002fc6	          0x4889c7	                            mov rdi, rax	      1797	ftp.c	FUNCTION_30	CALL_2
0x4002fc9	      0xb800000000	                              mov eax, 0	      1797	ftp.c	FUNCTION_30	CALL_2
0x4002fce	      0xe800000000	                          call 0x4002fd3	      1797	ftp.c	FUNCTION_30	CALL_2
0x4002fd3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1799	ftp.c	FUNCTION_30
0x4002fd7	    0xc680ac030000	               mov byte [rax + 0x3ac], 0	      1799	ftp.c	FUNCTION_30
0x4002fde	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1800	ftp.c	FUNCTION_30
0x4002fe2	          0x488b00	                    mov rax, qword [rax]	      1800	ftp.c	FUNCTION_30
0x4002fe5	    0xc680b84d0000	              mov byte [rax + 0x4db8], 0	      1800	ftp.c	FUNCTION_30
0x4002fec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1802	ftp.c	FUNCTION_30
0x4002ff0	    0x480550060000	                          add rax, 0x650	      1802	ftp.c	FUNCTION_30
0x4002ff6	    0x488d15000000	                   lea rdx, [0x04002ffd]	      1802	ftp.c	FUNCTION_30
0x4002ffd	    0x488d35000000	                   lea rsi, [0x04003004]	      1802	ftp.c	FUNCTION_30
0x4003004	          0x4889c7	                            mov rdi, rax	      1802	ftp.c	FUNCTION_30
0x4003007	      0xb800000000	                              mov eax, 0	      1802	ftp.c	FUNCTION_30
0x400300c	      0xe800000000	                          call 0x4003011	      1802	ftp.c	FUNCTION_30
0x4003011	          0x8945fc	                mov dword [rbp - 4], eax	      1802	ftp.c	FUNCTION_30
0x4003014	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1802	ftp.c	FUNCTION_30
0x4003018	            0x7405	                            je 0x400301f	      1802	ftp.c	FUNCTION_30
0x400301a	          0x8b45fc	                mov eax, dword [rbp - 4]	      1802	ftp.c	FUNCTION_30
0x400301d	            0xeb2b	                           jmp 0x400304a	      1802	ftp.c	FUNCTION_30
0x400301f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1803	ftp.c	FUNCTION_30
0x4003023	    0x8b8000070000	           mov eax, dword [rax + 0x700] 	      1803	ftp.c	FUNCTION_30
0x4003029	          0x8d5001	                      lea edx, [rax + 1]	      1803	ftp.c	FUNCTION_30
0x400302c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1803	ftp.c	FUNCTION_30
0x4003030	    0x899000070000	            mov dword [rax + 0x700], edx	      1803	ftp.c	FUNCTION_30
0x4003036	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1805	ftp.c	FUNCTION_30
0x400303a	      0xbe1e000000	                           mov esi, 0x1e	      1805	ftp.c	FUNCTION_30
0x400303f	          0x4889c7	                            mov rdi, rax	      1805	ftp.c	FUNCTION_30
0x4003042	      0xe83dddffff	                         call sym._state	      1805	ftp.c	FUNCTION_30
0x4003047	          0x8b45fc	                mov eax, dword [rbp - 4]	      1806	ftp.c	FUNCTION_30
0x400304a	              0xc9	                                   leave	      1807	ftp.c	FUNCTION_30
0x400304b	              0xc3	                                     ret	      1807	ftp.c	FUNCTION_30
ftp_disconnect	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,3:DO,0:WHILE,0:CALL,7	66
0x400760c	              0x55	                                push rbp	      4050	ftp.c	FUNCTION_60
0x400760d	          0x4889e5	                            mov rbp, rsp	      4050	ftp.c	FUNCTION_60
0x4007610	        0x4883ec30	                           sub rsp, 0x30	      4050	ftp.c	FUNCTION_60
0x4007614	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4050	ftp.c	FUNCTION_60
0x4007618	            0x89f0	                            mov eax, esi	      4050	ftp.c	FUNCTION_60
0x400761a	          0x8845d4	               mov byte [rbp - 0x2c], al	      4050	ftp.c	FUNCTION_60
0x400761d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4051	ftp.c	FUNCTION_60
0x4007621	    0x480550060000	                          add rax, 0x650	      4051	ftp.c	FUNCTION_60
0x4007627	        0x488945e8	             mov qword [rbp - 0x18], rax	      4051	ftp.c	FUNCTION_60
0x400762b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4052	ftp.c	FUNCTION_60
0x400762f	        0x488945f0	             mov qword [rbp - 0x10], rax	      4052	ftp.c	FUNCTION_60
0x4007633	        0x807dd400	                cmp byte [rbp - 0x2c], 0	      4061	ftp.c	FUNCTION_60	IF_1
0x4007637	            0x740b	                            je 0x4007644	      4061	ftp.c	FUNCTION_60	IF_1
0x4007639	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4062	ftp.c	FUNCTION_60	IF_1
0x400763d	    0xc68091000000	                mov byte [rax + 0x91], 0	      4062	ftp.c	FUNCTION_60	IF_1
0x4007644	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4065	ftp.c	FUNCTION_60	CALL_1
0x4007648	          0x4889c7	                            mov rdi, rax	      4065	ftp.c	FUNCTION_60	CALL_1
0x400764b	      0xe8e9feffff	                       call sym.ftp_quit	      4065	ftp.c	FUNCTION_60	CALL_1
0x4007650	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4067	ftp.c	FUNCTION_60	IF_2
0x4007654	        0x488b4070	            mov rax, qword [rax + 0x70] 	      4067	ftp.c	FUNCTION_60	IF_2
0x4007658	          0x4885c0	                           test rax, rax	      4067	ftp.c	FUNCTION_60	IF_2
0x400765b	            0x7455	                            je 0x40076b2	      4067	ftp.c	FUNCTION_60	IF_2
0x400765d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4068	ftp.c	FUNCTION_60	IF_2
0x4007661	          0x488b00	                    mov rax, qword [rax]	      4068	ftp.c	FUNCTION_60	IF_2
0x4007664	        0x488945f8	                mov qword [rbp - 8], rax	      4068	ftp.c	FUNCTION_60	IF_2
0x4007668	        0x488b45f8	                mov rax, qword [rbp - 8]	      4069	ftp.c	FUNCTION_60	IF_2	IF_3
0x400766c	    0x488b90f05000	          mov rdx, qword [rax + 0x50f0] 	      4069	ftp.c	FUNCTION_60	IF_2	IF_3
0x4007673	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4069	ftp.c	FUNCTION_60	IF_2	IF_3
0x4007677	        0x488b4070	            mov rax, qword [rax + 0x70] 	      4069	ftp.c	FUNCTION_60	IF_2	IF_3
0x400767b	          0x4839c2	                            cmp rdx, rax	      4069	ftp.c	FUNCTION_60	IF_2	IF_3
0x400767e	            0x750f	                           jne 0x400768f	      4069	ftp.c	FUNCTION_60	IF_2	IF_3
0x4007680	        0x488b45f8	                mov rax, qword [rbp - 8]	      4070	ftp.c	FUNCTION_60	IF_2	IF_3
0x4007684	    0x48c780f05000	            mov qword [rax + 0x50f0], 0 	      4070	ftp.c	FUNCTION_60	IF_2	IF_3
0x400768f	    0x488b05000000	            mov rax, qword [0x04007696] 	      4072	ftp.c	FUNCTION_60	IF_2	CALL_2
0x4007696	          0x488b00	                    mov rax, qword [rax]	      4072	ftp.c	FUNCTION_60	IF_2	CALL_2
0x4007699	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4072	ftp.c	FUNCTION_60	IF_2	CALL_2
0x400769d	        0x488b5270	            mov rdx, qword [rdx + 0x70] 	      4072	ftp.c	FUNCTION_60	IF_2	CALL_2
0x40076a1	          0x4889d7	                            mov rdi, rdx	      4072	ftp.c	FUNCTION_60	IF_2	CALL_2
0x40076a4	            0xffd0	                                call rax	      4072	ftp.c	FUNCTION_60	IF_2	CALL_2
0x40076a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4073	ftp.c	FUNCTION_60	IF_2
0x40076aa	    0x48c740700000	               mov qword [rax + 0x70], 0	      4073	ftp.c	FUNCTION_60	IF_2
0x40076b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4076	ftp.c	FUNCTION_60	CALL_3
0x40076b6	          0x4889c7	                            mov rdi, rax	      4076	ftp.c	FUNCTION_60	CALL_3
0x40076b9	      0xe8a38affff	                       call sym.freedirs	      4076	ftp.c	FUNCTION_60	CALL_3
0x40076be	    0x488b05000000	            mov rax, qword [0x040076c5] 	      4077	ftp.c	FUNCTION_60	CALL_4
0x40076c5	          0x488b00	                    mov rax, qword [rax]	      4077	ftp.c	FUNCTION_60	CALL_4
0x40076c8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4077	ftp.c	FUNCTION_60	CALL_4
0x40076cc	    0x488b92a00000	            mov rdx, qword [rdx + 0xa0] 	      4077	ftp.c	FUNCTION_60	CALL_4
0x40076d3	          0x4889d7	                            mov rdi, rdx	      4077	ftp.c	FUNCTION_60	CALL_4
0x40076d6	            0xffd0	                                call rax	      4077	ftp.c	FUNCTION_60	CALL_4
0x40076d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4078	ftp.c	FUNCTION_60
0x40076dc	    0x48c780a00000	               mov qword [rax + 0xa0], 0	      4078	ftp.c	FUNCTION_60
0x40076e7	    0x488b05000000	            mov rax, qword [0x040076ee] 	      4079	ftp.c	FUNCTION_60	CALL_5
0x40076ee	          0x488b00	                    mov rax, qword [rax]	      4079	ftp.c	FUNCTION_60	CALL_5
0x40076f1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4079	ftp.c	FUNCTION_60	CALL_5
0x40076f5	    0x488b92d00000	            mov rdx, qword [rdx + 0xd0] 	      4079	ftp.c	FUNCTION_60	CALL_5
0x40076fc	          0x4889d7	                            mov rdi, rdx	      4079	ftp.c	FUNCTION_60	CALL_5
0x40076ff	            0xffd0	                                call rax	      4079	ftp.c	FUNCTION_60	CALL_5
0x4007701	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4080	ftp.c	FUNCTION_60
0x4007705	    0x48c780d00000	               mov qword [rax + 0xd0], 0	      4080	ftp.c	FUNCTION_60
0x4007710	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4082	ftp.c	FUNCTION_60	CALL_6
0x4007714	          0x4889c7	                            mov rdi, rax	      4082	ftp.c	FUNCTION_60	CALL_6
0x4007717	      0xe800000000	                          call 0x400771c	      4082	ftp.c	FUNCTION_60	CALL_6
0x400771c	      0xb800000000	                              mov eax, 0	      4088	ftp.c	FUNCTION_60
0x4007721	              0xc9	                                   leave	      4089	ftp.c	FUNCTION_60
0x4007722	              0xc3	                                     ret	      4089	ftp.c	FUNCTION_60
ftp_nb_type	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,1:DO,0:WHILE,0:CALL,1	53
0x400645c	              0x55	                                push rbp	      3432	ftp.c	FUNCTION_51
0x400645d	          0x4889e5	                            mov rbp, rsp	      3432	ftp.c	FUNCTION_51
0x4006460	        0x4883ec20	                           sub rsp, 0x20	      3432	ftp.c	FUNCTION_51
0x4006464	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3432	ftp.c	FUNCTION_51
0x4006468	            0x89f0	                            mov eax, esi	      3432	ftp.c	FUNCTION_51
0x400646a	          0x8955e0	             mov dword [rbp - 0x20], edx	      3432	ftp.c	FUNCTION_51
0x400646d	          0x8845e4	               mov byte [rbp - 0x1c], al	      3432	ftp.c	FUNCTION_51
0x4006470	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3433	ftp.c	FUNCTION_51
0x4006474	    0x480550060000	                          add rax, 0x650	      3433	ftp.c	FUNCTION_51
0x400647a	        0x488945f8	                mov qword [rbp - 8], rax	      3433	ftp.c	FUNCTION_51
0x400647e	        0x807de400	                cmp byte [rbp - 0x1c], 0	      3435	ftp.c	FUNCTION_51
0x4006482	            0x7407	                            je 0x400648b	      3435	ftp.c	FUNCTION_51
0x4006484	      0xb841000000	                           mov eax, 0x41	      3435	ftp.c	FUNCTION_51
0x4006489	            0xeb05	                           jmp 0x4006490	      3435	ftp.c	FUNCTION_51
0x400648b	      0xb849000000	                           mov eax, 0x49	      3435	ftp.c	FUNCTION_51
0x4006490	          0x8845f3	                mov byte [rbp - 0xd], al	      3435	ftp.c	FUNCTION_51
0x4006493	        0x488b45f8	                mov rax, qword [rbp - 8]	      3437	ftp.c	FUNCTION_51	IF_1
0x4006497	     0xfb680ac0000	           movzx eax, byte [rax + 0xac] 	      3437	ftp.c	FUNCTION_51	IF_1
0x400649e	          0x3a45f3	                cmp al, byte [rbp - 0xd]	      3437	ftp.c	FUNCTION_51	IF_1
0x40064a1	            0x7527	                           jne 0x40064ca	      3437	ftp.c	FUNCTION_51	IF_1
0x40064a3	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      3438	ftp.c	FUNCTION_51	IF_1
0x40064a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3438	ftp.c	FUNCTION_51	IF_1
0x40064aa	            0x89d6	                            mov esi, edx	      3438	ftp.c	FUNCTION_51	IF_1
0x40064ac	          0x4889c7	                            mov rdi, rax	      3438	ftp.c	FUNCTION_51	IF_1
0x40064af	      0xe8d0a8ffff	                         call sym._state	      3438	ftp.c	FUNCTION_51	IF_1
0x40064b4	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      3439	ftp.c	FUNCTION_51	IF_1	CALL_1
0x40064b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3439	ftp.c	FUNCTION_51	IF_1	CALL_1
0x40064bb	      0xbec8000000	                           mov esi, 0xc8	      3439	ftp.c	FUNCTION_51	IF_1	CALL_1
0x40064c0	          0x4889c7	                            mov rdi, rax	      3439	ftp.c	FUNCTION_51	IF_1	CALL_1
0x40064c3	      0xe8f2d8ffff	            call sym.ftp_state_type_resp	      3439	ftp.c	FUNCTION_51	IF_1	CALL_1
0x40064c8	            0xeb4e	                           jmp 0x4006518	      3439	ftp.c	FUNCTION_51	IF_1	CALL_1
0x40064ca	         0xfbe55f3	             movsx edx, byte [rbp - 0xd]	      3442	ftp.c	FUNCTION_51
0x40064ce	        0x488b45f8	                mov rax, qword [rbp - 8]	      3442	ftp.c	FUNCTION_51
0x40064d2	    0x488d35000000	                   lea rsi, [0x040064d9]	      3442	ftp.c	FUNCTION_51
0x40064d9	          0x4889c7	                            mov rdi, rax	      3442	ftp.c	FUNCTION_51
0x40064dc	      0xb800000000	                              mov eax, 0	      3442	ftp.c	FUNCTION_51
0x40064e1	      0xe800000000	                          call 0x40064e6	      3442	ftp.c	FUNCTION_51
0x40064e6	          0x8945f4	              mov dword [rbp - 0xc], eax	      3442	ftp.c	FUNCTION_51
0x40064e9	        0x837df400	                cmp dword [rbp - 0xc], 0	      3442	ftp.c	FUNCTION_51
0x40064ed	            0x7405	                            je 0x40064f4	      3442	ftp.c	FUNCTION_51
0x40064ef	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3442	ftp.c	FUNCTION_51
0x40064f2	            0xeb24	                           jmp 0x4006518	      3442	ftp.c	FUNCTION_51
0x40064f4	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      3443	ftp.c	FUNCTION_51
0x40064f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3443	ftp.c	FUNCTION_51
0x40064fb	            0x89d6	                            mov esi, edx	      3443	ftp.c	FUNCTION_51
0x40064fd	          0x4889c7	                            mov rdi, rax	      3443	ftp.c	FUNCTION_51
0x4006500	      0xe87fa8ffff	                         call sym._state	      3443	ftp.c	FUNCTION_51
0x4006505	        0x488b45f8	                mov rax, qword [rbp - 8]	      3446	ftp.c	FUNCTION_51
0x4006509	         0xfb655f3	             movzx edx, byte [rbp - 0xd]	      3446	ftp.c	FUNCTION_51
0x400650d	    0x8890ac000000	               mov byte [rax + 0xac], dl	      3446	ftp.c	FUNCTION_51
0x4006513	      0xb800000000	                              mov eax, 0	      3447	ftp.c	FUNCTION_51
0x4006518	              0xc9	                                   leave	      3448	ftp.c	FUNCTION_51
0x4006519	              0xc3	                                     ret	      3448	ftp.c	FUNCTION_51
ftp_state_pasv_resp	FOR,1:functions,0:SWITCH,0:ELSE,6:IF,23:DO,0:WHILE,1:CALL,27	422
0x400308b	              0x55	                                push rbp	      1824	ftp.c	FUNCTION_32
0x400308c	          0x4889e5	                            mov rbp, rsp	      1824	ftp.c	FUNCTION_32
0x400308f	              0x53	                                push rbx	      1824	ftp.c	FUNCTION_32
0x4003090	    0x4881ec980000	                           sub rsp, 0x98	      1824	ftp.c	FUNCTION_32
0x4003097	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      1824	ftp.c	FUNCTION_32
0x400309e	    0x89b564ffffff	             mov dword [rbp - 0x9c], esi	      1824	ftp.c	FUNCTION_32
0x40030a4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1824	ftp.c	FUNCTION_32
0x40030ad	        0x488945e8	             mov qword [rbp - 0x18], rax	      1824	ftp.c	FUNCTION_32
0x40030b1	            0x31c0	                            xor eax, eax	      1824	ftp.c	FUNCTION_32
0x40030b3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1825	ftp.c	FUNCTION_32
0x40030ba	    0x480550060000	                          add rax, 0x650	      1825	ftp.c	FUNCTION_32
0x40030c0	        0x488945a8	             mov qword [rbp - 0x58], rax	      1825	ftp.c	FUNCTION_32
0x40030c4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1827	ftp.c	FUNCTION_32
0x40030cb	          0x488b00	                    mov rax, qword [rax]	      1827	ftp.c	FUNCTION_32
0x40030ce	        0x488945b0	             mov qword [rbp - 0x50], rax	      1827	ftp.c	FUNCTION_32
0x40030d2	    0x48c745900000	               mov qword [rbp - 0x70], 0	      1828	ftp.c	FUNCTION_32
0x40030da	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1831	ftp.c	FUNCTION_32
0x40030de	    0x488b80200d00	           mov rax, qword [rax + 0xd20] 	      1831	ftp.c	FUNCTION_32
0x40030e5	        0x4883c004	                              add rax, 4	      1831	ftp.c	FUNCTION_32
0x40030e9	        0x48894598	             mov qword [rbp - 0x68], rax	      1831	ftp.c	FUNCTION_32
0x40030ed	    0x488b05000000	            mov rax, qword [0x040030f4] 	      1834	ftp.c	FUNCTION_32	CALL_1
0x40030f4	          0x488b00	                    mov rax, qword [rax]	      1834	ftp.c	FUNCTION_32	CALL_1
0x40030f7	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1834	ftp.c	FUNCTION_32	CALL_1
0x40030fb	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	      1834	ftp.c	FUNCTION_32	CALL_1
0x4003102	          0x4889d7	                            mov rdi, rdx	      1834	ftp.c	FUNCTION_32	CALL_1
0x4003105	            0xffd0	                                call rax	      1834	ftp.c	FUNCTION_32	CALL_1
0x4003107	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1834	ftp.c	FUNCTION_32	CALL_1
0x400310b	    0x48c780e00000	               mov qword [rax + 0xe0], 0	      1834	ftp.c	FUNCTION_32	CALL_1
0x4003116	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1836	ftp.c	FUNCTION_32	IF_1
0x400311a	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      1836	ftp.c	FUNCTION_32	IF_1
0x4003120	            0x85c0	                           test eax, eax	      1836	ftp.c	FUNCTION_32	IF_1
0x4003122	     0xf8579010000	                           jne 0x40032a1	      1836	ftp.c	FUNCTION_32	IF_1
0x4003128	    0x81bd64ffffff	           cmp dword [rbp - 0x9c], 0xe5 	      1836	ftp.c	FUNCTION_32	IF_1
0x4003132	     0xf8569010000	                           jne 0x40032a1	      1836	ftp.c	FUNCTION_32	IF_1
0x4003138	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1839	ftp.c	FUNCTION_32	IF_1	CALL_2
0x400313c	      0xbe28000000	                           mov esi, 0x28	      1839	ftp.c	FUNCTION_32	IF_1	CALL_2
0x4003141	          0x4889c7	                            mov rdi, rax	      1839	ftp.c	FUNCTION_32	IF_1	CALL_2
0x4003144	      0xe800000000	                          call 0x4003149	      1839	ftp.c	FUNCTION_32	IF_1	CALL_2
0x4003149	        0x488945a0	             mov qword [rbp - 0x60], rax	      1839	ftp.c	FUNCTION_32	IF_1	CALL_2
0x400314d	      0x48837da000	               cmp qword [rbp - 0x60], 0	      1840	ftp.c	FUNCTION_32	IF_1	IF_2
0x4003152	     0xf841c010000	                            je 0x4003274	      1840	ftp.c	FUNCTION_32	IF_1	IF_2
0x4003158	      0x488345a001	               add qword [rbp - 0x60], 1	      1843	ftp.c	FUNCTION_32	IF_1	IF_2
0x400315d	        0x488d7580	                   lea rsi, [rbp - 0x80]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003161	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003165	        0x4c8d4002	                       lea r8, [rax + 2]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003169	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x400316d	        0x488d4801	                      lea rcx, [rax + 1]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003171	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003175	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003179	        0x4883ec08	                              sub rsp, 8	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x400317d	        0x488d7de0	                   lea rdi, [rbp - 0x20]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003181	        0x4883c703	                              add rdi, 3	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003185	              0x57	                                push rdi	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003186	          0x4989f1	                             mov r9, rsi	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003189	    0x488d35000000	                   lea rsi, [0x04003190]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003190	          0x4889c7	                            mov rdi, rax	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003193	      0xb800000000	                              mov eax, 0	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4003198	      0xe800000000	                          call 0x400319d	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x400319d	        0x4883c410	                           add rsp, 0x10	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x40031a1	          0x83f805	                              cmp eax, 5	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x40031a4	     0xf85c2000000	                           jne 0x400326c	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x40031aa	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	      1850	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3
0x40031ae	    0x88857dffffff	               mov byte [rbp - 0x83], al	      1850	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3
0x40031b4	    0xc74584010000	               mov dword [rbp - 0x7c], 1	      1855	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1
0x40031bb	            0xeb20	                           jmp 0x40031dd	      1855	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1
0x40031bd	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      1856	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1	IF_4
0x40031c0	            0x4898	                                    cdqe	      1856	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1	IF_4
0x40031c2	       0xfb64405e0	      movzx eax, byte [rbp + rax - 0x20]	      1856	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1	IF_4
0x40031c7	    0x3a857dffffff	               cmp al, byte [rbp - 0x83]	      1856	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1	IF_4
0x40031cd	            0x740a	                            je 0x40031d9	      1856	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1	IF_4
0x40031cf	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1857	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1	IF_4
0x40031d7	            0xeb0a	                           jmp 0x40031e3	      1858	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1	IF_4
0x40031d9	        0x83458401	               add dword [rbp - 0x7c], 1	      1855	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1
0x40031dd	        0x837d8403	               cmp dword [rbp - 0x7c], 3	      1855	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1
0x40031e1	            0x7eda	                           jle 0x40031bd	      1855	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1
0x40031e3	          0x8b4580	             mov eax, dword [rbp - 0x80]	      1861	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5
0x40031e6	      0x3dffff0000	                         cmp eax, 0xffff	      1861	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5
0x40031eb	            0x7622	                           jbe 0x400320f	      1861	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5
0x40031ed	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1862	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5	CALL_4
0x40031f1	    0x488d35000000	                   lea rsi, [0x040031f8]	      1862	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5	CALL_4
0x40031f8	          0x4889c7	                            mov rdi, rax	      1862	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5	CALL_4
0x40031fb	      0xb800000000	                              mov eax, 0	      1862	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5	CALL_4
0x4003200	      0xe800000000	                          call 0x4003205	      1862	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5	CALL_4
0x4003205	      0xb80d000000	                            mov eax, 0xd	      1863	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5
0x400320a	      0xe9a5050000	                           jmp 0x40037b4	      1863	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5
0x400320f	      0x48837da000	               cmp qword [rbp - 0x60], 0	      1865	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6
0x4003214	            0x745e	                            je 0x4003274	      1865	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6
0x4003216	          0x8b4580	             mov eax, dword [rbp - 0x80]	      1866	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6
0x4003219	            0x89c2	                            mov edx, eax	      1866	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6
0x400321b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1866	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6
0x400321f	    0x668990e80000	               mov word [rax + 0xe8], dx	      1866	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6
0x4003226	    0x488b05000000	            mov rax, qword [0x0400322d] 	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x400322d	          0x488b18	                    mov rbx, qword [rax]	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x4003230	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x4003237	          0x4889c7	                            mov rdi, rax	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x400323a	      0xe80dfeffff	                call sym.control_address	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x400323f	          0x4889c7	                            mov rdi, rax	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x4003242	            0xffd3	                                call rbx	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x4003244	          0x4889c2	                            mov rdx, rax	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x4003247	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x400324b	    0x488990e00000	             mov qword [rax + 0xe0], rdx	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x4003252	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1868	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	IF_7
0x4003256	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1868	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	IF_7
0x400325d	          0x4885c0	                           test rax, rax	      1868	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	IF_7
0x4003260	            0x7512	                           jne 0x4003274	      1868	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	IF_7
0x4003262	      0xb81b000000	                           mov eax, 0x1b	      1869	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	IF_7
0x4003267	      0xe948050000	                           jmp 0x40037b4	      1869	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	IF_7
0x400326c	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1873	ftp.c	FUNCTION_32	IF_1	IF_2	ELSE_1
0x4003274	      0x48837da000	               cmp qword [rbp - 0x60], 0	      1875	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8
0x4003279	     0xf8544020000	                           jne 0x40034c3	      1875	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8
0x400327f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1876	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8	CALL_7
0x4003283	    0x488d35000000	                   lea rsi, [0x0400328a]	      1876	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8	CALL_7
0x400328a	          0x4889c7	                            mov rdi, rax	      1876	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8	CALL_7
0x400328d	      0xb800000000	                              mov eax, 0	      1876	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8	CALL_7
0x4003292	      0xe800000000	                          call 0x4003297	      1876	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8	CALL_7
0x4003297	      0xb80d000000	                            mov eax, 0xd	      1877	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8
0x400329c	      0xe913050000	                           jmp 0x40037b4	      1877	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8
0x40032a1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1880	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x40032a5	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      1880	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x40032ab	          0x83f801	                              cmp eax, 1	      1880	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x40032ae	     0xf85c5010000	                           jne 0x4003479	      1880	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x40032b4	    0x81bd64ffffff	           cmp dword [rbp - 0x9c], 0xe3 	      1880	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x40032be	     0xf85b5010000	                           jne 0x4003479	      1880	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x40032c4	            0xeb59	                           jmp 0x400331f	      1895	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1
0x40032c6	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032ca	        0x4c8d400c	                     lea r8, [rax + 0xc]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032ce	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032d2	        0x488d7808	                      lea rdi, [rax + 8]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032d6	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032da	        0x488d7004	                      lea rsi, [rax + 4]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032de	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032e2	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032e6	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032ea	        0x4883c104	                              add rcx, 4	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032ee	              0x51	                                push rcx	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032ef	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032f3	              0x51	                                push rcx	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032f4	          0x4d89c1	                              mov r9, r8	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032f7	          0x4989f8	                             mov r8, rdi	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032fa	          0x4889f1	                            mov rcx, rsi	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x40032fd	    0x488d35000000	                   lea rsi, [0x04003304]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4003304	          0x4889c7	                            mov rdi, rax	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4003307	      0xb800000000	                              mov eax, 0	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x400330c	      0xe800000000	                          call 0x4003311	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4003311	        0x4883c410	                           add rsp, 0x10	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4003315	          0x83f806	                              cmp eax, 6	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4003318	            0x7412	                            je 0x400332c	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x400331a	      0x4883459801	               add qword [rbp - 0x68], 1	      1900	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1
0x400331f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1895	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1
0x4003323	           0xfb600	                   movzx eax, byte [rax]	      1895	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1
0x4003326	            0x84c0	                             test al, al	      1895	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1
0x4003328	            0x759c	                           jne 0x40032c6	      1895	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1
0x400332a	            0xeb01	                           jmp 0x400332d	      1895	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1
0x400332c	              0x90	                                     nop	      1899	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10
0x400332d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003331	           0xfb600	                   movzx eax, byte [rax]	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003334	            0x84c0	                             test al, al	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003336	            0x743c	                            je 0x4003374	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003338	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x400333b	      0x3dff000000	                           cmp eax, 0xff	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003340	            0x7732	                            ja 0x4003374	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003342	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003345	      0x3dff000000	                           cmp eax, 0xff	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x400334a	            0x7728	                            ja 0x4003374	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x400334c	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x400334f	      0x3dff000000	                           cmp eax, 0xff	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003354	            0x771e	                            ja 0x4003374	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003356	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1904	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003359	      0x3dff000000	                           cmp eax, 0xff	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x400335e	            0x7714	                            ja 0x4003374	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003360	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1904	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003363	      0x3dff000000	                           cmp eax, 0xff	      1904	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003368	            0x770a	                            ja 0x4003374	      1904	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x400336a	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1904	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x400336d	      0x3dff000000	                           cmp eax, 0xff	      1904	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003372	            0x7622	                           jbe 0x4003396	      1904	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003374	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1905	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11	CALL_9
0x4003378	    0x488d35000000	                   lea rsi, [0x0400337f]	      1905	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11	CALL_9
0x400337f	          0x4889c7	                            mov rdi, rax	      1905	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11	CALL_9
0x4003382	      0xb800000000	                              mov eax, 0	      1905	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11	CALL_9
0x4003387	      0xe800000000	                          call 0x400338c	      1905	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11	CALL_9
0x400338c	      0xb80e000000	                            mov eax, 0xe	      1906	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003391	      0xe91e040000	                           jmp 0x40037b4	      1906	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4003396	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1910	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12
0x400339a	     0xfb680000800	          movzx eax, byte [rax + 0x800] 	      1910	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12
0x40033a1	            0x84c0	                             test al, al	      1910	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12
0x40033a3	            0x7470	                            je 0x4003415	      1910	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12
0x40033a5	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033ac	    0x488bb0d80000	            mov rsi, qword [rax + 0xd8] 	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033b3	        0x448b45dc	             mov r8d, dword [rbp - 0x24]	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033b7	          0x8b7dd8	             mov edi, dword [rbp - 0x28]	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033ba	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033bd	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033c0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033c4	        0x4883ec08	                              sub rsp, 8	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033c8	              0x56	                                push rsi	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033c9	          0x4589c1	                            mov r9d, r8d	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033cc	          0x4189f8	                            mov r8d, edi	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033cf	    0x488d35000000	                   lea rsi, [0x040033d6]	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033d6	          0x4889c7	                            mov rdi, rax	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033d9	      0xb800000000	                              mov eax, 0	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033de	      0xe800000000	                          call 0x40033e3	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033e3	        0x4883c410	                           add rsp, 0x10	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x40033e7	    0x488b05000000	            mov rax, qword [0x040033ee] 	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x40033ee	          0x488b18	                    mov rbx, qword [rax]	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x40033f1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x40033f8	          0x4889c7	                            mov rdi, rax	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x40033fb	      0xe84cfcffff	                call sym.control_address	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x4003400	          0x4889c7	                            mov rdi, rax	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x4003403	            0xffd3	                                call rbx	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x4003405	          0x4889c2	                            mov rdx, rax	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x4003408	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x400340c	    0x488990e00000	             mov qword [rax + 0xe0], rdx	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x4003413	            0xeb30	                           jmp 0x4003445	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x4003415	          0x8b75dc	             mov esi, dword [rbp - 0x24]	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x4003418	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x400341b	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x400341e	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x4003421	          0x4189f0	                            mov r8d, esi	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x4003424	            0x89c6	                            mov esi, eax	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x4003426	    0x488d3d000000	                   lea rdi, [0x0400342d]	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x400342d	      0xb800000000	                              mov eax, 0	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x4003432	      0xe800000000	                          call 0x4003437	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x4003437	          0x4889c2	                            mov rdx, rax	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x400343a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x400343e	    0x488990e00000	             mov qword [rax + 0xe0], rdx	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x4003445	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1921	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_13
0x4003449	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1921	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_13
0x4003450	          0x4885c0	                           test rax, rax	      1921	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_13
0x4003453	            0x750a	                           jne 0x400345f	      1921	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_13
0x4003455	      0xb81b000000	                           mov eax, 0x1b	      1922	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_13
0x400345a	      0xe955030000	                           jmp 0x40037b4	      1922	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_13
0x400345f	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1924	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x4003462	          0xc1e008	                              shl eax, 8	      1924	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x4003465	            0x89c2	                            mov edx, eax	      1924	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x4003467	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1924	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x400346a	             0x1c2	                            add edx, eax	      1924	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x400346c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1924	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x4003470	    0x668990e80000	               mov word [rax + 0xe8], dx	      1924	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x4003477	            0xeb4b	                           jmp 0x40034c4	      1881	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x4003479	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1926	ftp.c	FUNCTION_32	ELSE_4	IF_14
0x400347d	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      1926	ftp.c	FUNCTION_32	ELSE_4	IF_14
0x4003483	            0x85c0	                           test eax, eax	      1926	ftp.c	FUNCTION_32	ELSE_4	IF_14
0x4003485	            0x7514	                           jne 0x400349b	      1926	ftp.c	FUNCTION_32	ELSE_4	IF_14
0x4003487	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1928	ftp.c	FUNCTION_32	ELSE_4	IF_14	CALL_14
0x400348e	          0x4889c7	                            mov rdi, rax	      1928	ftp.c	FUNCTION_32	ELSE_4	IF_14	CALL_14
0x4003491	      0xe8b7faffff	               call sym.ftp_epsv_disable	      1928	ftp.c	FUNCTION_32	ELSE_4	IF_14	CALL_14
0x4003496	      0xe919030000	                           jmp 0x40037b4	      1928	ftp.c	FUNCTION_32	ELSE_4	IF_14	CALL_14
0x400349b	    0x8b9564ffffff	             mov edx, dword [rbp - 0x9c]	      1931	ftp.c	FUNCTION_32	ELSE_5	CALL_15
0x40034a1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1931	ftp.c	FUNCTION_32	ELSE_5	CALL_15
0x40034a5	    0x488d35000000	                   lea rsi, [0x040034ac]	      1931	ftp.c	FUNCTION_32	ELSE_5	CALL_15
0x40034ac	          0x4889c7	                            mov rdi, rax	      1931	ftp.c	FUNCTION_32	ELSE_5	CALL_15
0x40034af	      0xb800000000	                              mov eax, 0	      1931	ftp.c	FUNCTION_32	ELSE_5	CALL_15
0x40034b4	      0xe800000000	                          call 0x40034b9	      1931	ftp.c	FUNCTION_32	ELSE_5	CALL_15
0x40034b9	      0xb80d000000	                            mov eax, 0xd	      1932	ftp.c	FUNCTION_32	ELSE_5
0x40034be	      0xe9f1020000	                           jmp 0x40037b4	      1932	ftp.c	FUNCTION_32	ELSE_5
0x40034c3	              0x90	                                     nop	      1837	ftp.c	FUNCTION_32	IF_1
0x40034c4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1935	ftp.c	FUNCTION_32	IF_15
0x40034cb	     0xfb6809d0300	          movzx eax, byte [rax + 0x39d] 	      1935	ftp.c	FUNCTION_32	IF_15
0x40034d2	            0x84c0	                             test al, al	      1935	ftp.c	FUNCTION_32	IF_15
0x40034d4	     0xf84ce000000	                            je 0x40035a8	      1935	ftp.c	FUNCTION_32	IF_15
0x40034da	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1941	ftp.c	FUNCTION_32	IF_15
0x40034e1	     0xfb6809f0300	          movzx eax, byte [rax + 0x39f] 	      1941	ftp.c	FUNCTION_32	IF_15
0x40034e8	            0x84c0	                             test al, al	      1941	ftp.c	FUNCTION_32	IF_15
0x40034ea	            0x7410	                            je 0x40034fc	      1941	ftp.c	FUNCTION_32	IF_15
0x40034ec	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1941	ftp.c	FUNCTION_32	IF_15
0x40034f3	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      1941	ftp.c	FUNCTION_32	IF_15
0x40034fa	            0xeb0e	                           jmp 0x400350a	      1941	ftp.c	FUNCTION_32	IF_15
0x40034fc	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1941	ftp.c	FUNCTION_32	IF_15
0x4003503	    0x488b80600100	           mov rax, qword [rax + 0x160] 	      1941	ftp.c	FUNCTION_32	IF_15
0x400350a	        0x488945b8	             mov qword [rbp - 0x48], rax	      1941	ftp.c	FUNCTION_32	IF_15
0x400350e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x4003515	    0x488b80900100	           mov rax, qword [rax + 0x190] 	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x400351c	            0x89c7	                            mov edi, eax	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x400351e	        0x488d5590	                   lea rdx, [rbp - 0x70]	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x4003522	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x4003526	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x400352d	          0x4889d1	                            mov rcx, rdx	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x4003530	            0x89fa	                            mov edx, edi	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x4003532	          0x4889c7	                            mov rdi, rax	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x4003535	      0xe800000000	                          call 0x400353a	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x400353a	          0x894588	             mov dword [rbp - 0x78], eax	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x400353d	        0x837d8801	               cmp dword [rbp - 0x78], 1	      1944	ftp.c	FUNCTION_32	IF_15	IF_16
0x4003541	            0x7516	                           jne 0x4003559	      1944	ftp.c	FUNCTION_32	IF_15	IF_16
0x4003543	        0x488d5590	                   lea rdx, [rbp - 0x70]	      1947	ftp.c	FUNCTION_32	IF_15	CALL_17
0x4003547	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1947	ftp.c	FUNCTION_32	IF_15	CALL_17
0x400354e	          0x4889d6	                            mov rsi, rdx	      1947	ftp.c	FUNCTION_32	IF_15	CALL_17
0x4003551	          0x4889c7	                            mov rdi, rax	      1947	ftp.c	FUNCTION_32	IF_15	CALL_17
0x4003554	      0xe800000000	                          call 0x4003559	      1947	ftp.c	FUNCTION_32	IF_15	CALL_17
0x4003559	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1950	ftp.c	FUNCTION_32	IF_15
0x4003560	    0x488b80900100	           mov rax, qword [rax + 0x190] 	      1950	ftp.c	FUNCTION_32	IF_15
0x4003567	    0x6689857effff	               mov word [rbp - 0x82], ax	      1949	ftp.c	FUNCTION_32	IF_15
0x400356e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1952	ftp.c	FUNCTION_32	IF_15	IF_17
0x4003572	          0x4885c0	                           test rax, rax	      1952	ftp.c	FUNCTION_32	IF_15	IF_17
0x4003575	     0xf85c7000000	                           jne 0x4003642	      1952	ftp.c	FUNCTION_32	IF_15	IF_17
0x400357b	     0xfb78d7effff	            movzx ecx, word [rbp - 0x82]	      1953	ftp.c	FUNCTION_32	IF_15	IF_17	CALL_18
0x4003582	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1953	ftp.c	FUNCTION_32	IF_15	IF_17	CALL_18
0x4003586	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1953	ftp.c	FUNCTION_32	IF_15	IF_17	CALL_18
0x400358a	    0x488d35000000	                   lea rsi, [0x04003591]	      1953	ftp.c	FUNCTION_32	IF_15	IF_17	CALL_18
0x4003591	          0x4889c7	                            mov rdi, rax	      1953	ftp.c	FUNCTION_32	IF_15	IF_17	CALL_18
0x4003594	      0xb800000000	                              mov eax, 0	      1953	ftp.c	FUNCTION_32	IF_15	IF_17	CALL_18
0x4003599	      0xe800000000	                          call 0x400359e	      1953	ftp.c	FUNCTION_32	IF_15	IF_17	CALL_18
0x400359e	      0xb805000000	                              mov eax, 5	      1954	ftp.c	FUNCTION_32	IF_15	IF_17
0x40035a3	      0xe90c020000	                           jmp 0x40037b4	      1954	ftp.c	FUNCTION_32	IF_15	IF_17
0x40035a8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40035ac	     0xfb780e80000	           movzx eax, word [rax + 0xe8] 	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40035b3	           0xfb7d0	                           movzx edx, ax	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40035b6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40035ba	    0x488bb0e00000	            mov rsi, qword [rax + 0xe0] 	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40035c1	        0x488d4d90	                   lea rcx, [rbp - 0x70]	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40035c5	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40035cc	          0x4889c7	                            mov rdi, rax	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40035cf	      0xe800000000	                          call 0x40035d4	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40035d4	          0x894588	             mov dword [rbp - 0x78], eax	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40035d7	        0x837d8801	               cmp dword [rbp - 0x78], 1	      1960	ftp.c	FUNCTION_32	ELSE_6	IF_18
0x40035db	            0x7516	                           jne 0x40035f3	      1960	ftp.c	FUNCTION_32	ELSE_6	IF_18
0x40035dd	        0x488d5590	                   lea rdx, [rbp - 0x70]	      1962	ftp.c	FUNCTION_32	ELSE_6	CALL_20
0x40035e1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1962	ftp.c	FUNCTION_32	ELSE_6	CALL_20
0x40035e8	          0x4889d6	                            mov rsi, rdx	      1962	ftp.c	FUNCTION_32	ELSE_6	CALL_20
0x40035eb	          0x4889c7	                            mov rdi, rax	      1962	ftp.c	FUNCTION_32	ELSE_6	CALL_20
0x40035ee	      0xe800000000	                          call 0x40035f3	      1962	ftp.c	FUNCTION_32	ELSE_6	CALL_20
0x40035f3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1964	ftp.c	FUNCTION_32	ELSE_6
0x40035f7	     0xfb780e80000	           movzx eax, word [rax + 0xe8] 	      1964	ftp.c	FUNCTION_32	ELSE_6
0x40035fe	    0x6689857effff	               mov word [rbp - 0x82], ax	      1964	ftp.c	FUNCTION_32	ELSE_6
0x4003605	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1966	ftp.c	FUNCTION_32	ELSE_6	IF_19
0x4003609	          0x4885c0	                           test rax, rax	      1966	ftp.c	FUNCTION_32	ELSE_6	IF_19
0x400360c	            0x7534	                           jne 0x4003642	      1966	ftp.c	FUNCTION_32	ELSE_6	IF_19
0x400360e	     0xfb78d7effff	            movzx ecx, word [rbp - 0x82]	      1967	ftp.c	FUNCTION_32	ELSE_6	IF_19	CALL_21
0x4003615	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1967	ftp.c	FUNCTION_32	ELSE_6	IF_19	CALL_21
0x4003619	    0x488b90e00000	            mov rdx, qword [rax + 0xe0] 	      1967	ftp.c	FUNCTION_32	ELSE_6	IF_19	CALL_21
0x4003620	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1967	ftp.c	FUNCTION_32	ELSE_6	IF_19	CALL_21
0x4003624	    0x488d35000000	                   lea rsi, [0x0400362b]	      1967	ftp.c	FUNCTION_32	ELSE_6	IF_19	CALL_21
0x400362b	          0x4889c7	                            mov rdi, rax	      1967	ftp.c	FUNCTION_32	ELSE_6	IF_19	CALL_21
0x400362e	      0xb800000000	                              mov eax, 0	      1967	ftp.c	FUNCTION_32	ELSE_6	IF_19	CALL_21
0x4003633	      0xe800000000	                          call 0x4003638	      1967	ftp.c	FUNCTION_32	ELSE_6	IF_19	CALL_21
0x4003638	      0xb80f000000	                            mov eax, 0xf	      1968	ftp.c	FUNCTION_32	ELSE_6	IF_19
0x400363d	      0xe972010000	                           jmp 0x40037b4	      1968	ftp.c	FUNCTION_32	ELSE_6	IF_19
0x4003642	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1972	ftp.c	FUNCTION_32
0x4003649	    0xc680a6030000	               mov byte [rax + 0x3a6], 0	      1972	ftp.c	FUNCTION_32
0x4003650	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1973	ftp.c	FUNCTION_32	CALL_22
0x4003654	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1973	ftp.c	FUNCTION_32	CALL_22
0x400365b	          0x4889d6	                            mov rsi, rdx	      1973	ftp.c	FUNCTION_32	CALL_22
0x400365e	          0x4889c7	                            mov rdi, rax	      1973	ftp.c	FUNCTION_32	CALL_22
0x4003661	      0xe800000000	                          call 0x4003666	      1973	ftp.c	FUNCTION_32	CALL_22
0x4003666	          0x89458c	             mov dword [rbp - 0x74], eax	      1973	ftp.c	FUNCTION_32	CALL_22
0x4003669	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      1975	ftp.c	FUNCTION_32	IF_20
0x400366d	            0x7449	                            je 0x40036b8	      1975	ftp.c	FUNCTION_32	IF_20
0x400366f	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1976	ftp.c	FUNCTION_32	IF_20	CALL_23
0x4003673	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1976	ftp.c	FUNCTION_32	IF_20	CALL_23
0x4003677	          0x4889d6	                            mov rsi, rdx	      1976	ftp.c	FUNCTION_32	IF_20	CALL_23
0x400367a	          0x4889c7	                            mov rdi, rax	      1976	ftp.c	FUNCTION_32	IF_20	CALL_23
0x400367d	      0xe800000000	                          call 0x4003682	      1976	ftp.c	FUNCTION_32	IF_20	CALL_23
0x4003682	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1977	ftp.c	FUNCTION_32	IF_20	IF_21
0x4003686	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      1977	ftp.c	FUNCTION_32	IF_20	IF_21
0x400368c	            0x85c0	                           test eax, eax	      1977	ftp.c	FUNCTION_32	IF_20	IF_21
0x400368e	            0x7520	                           jne 0x40036b0	      1977	ftp.c	FUNCTION_32	IF_20	IF_21
0x4003690	    0x81bd64ffffff	           cmp dword [rbp - 0x9c], 0xe5 	      1977	ftp.c	FUNCTION_32	IF_20	IF_21
0x400369a	            0x7514	                           jne 0x40036b0	      1977	ftp.c	FUNCTION_32	IF_20	IF_21
0x400369c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1978	ftp.c	FUNCTION_32	IF_20	CALL_24
0x40036a3	          0x4889c7	                            mov rdi, rax	      1978	ftp.c	FUNCTION_32	IF_20	CALL_24
0x40036a6	      0xe8a2f8ffff	               call sym.ftp_epsv_disable	      1978	ftp.c	FUNCTION_32	IF_20	CALL_24
0x40036ab	      0xe904010000	                           jmp 0x40037b4	      1978	ftp.c	FUNCTION_32	IF_20	CALL_24
0x40036b0	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1980	ftp.c	FUNCTION_32	IF_20
0x40036b3	      0xe9fc000000	                           jmp 0x40037b4	      1980	ftp.c	FUNCTION_32	IF_20
0x40036b8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1990	ftp.c	FUNCTION_32	IF_22
0x40036bc	     0xfb680e80700	          movzx eax, byte [rax + 0x7e8] 	      1990	ftp.c	FUNCTION_32	IF_22
0x40036c3	            0x84c0	                             test al, al	      1990	ftp.c	FUNCTION_32	IF_22
0x40036c5	            0x7428	                            je 0x40036ef	      1990	ftp.c	FUNCTION_32	IF_22
0x40036c7	     0xfb78d7effff	            movzx ecx, word [rbp - 0x82]	      1992	ftp.c	FUNCTION_32	IF_22
0x40036ce	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1992	ftp.c	FUNCTION_32	IF_22
0x40036d2	    0x488b90e00000	            mov rdx, qword [rax + 0xe0] 	      1992	ftp.c	FUNCTION_32	IF_22
0x40036d9	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1992	ftp.c	FUNCTION_32	IF_22
0x40036dd	          0x488b30	                    mov rsi, qword [rax]	      1992	ftp.c	FUNCTION_32	IF_22
0x40036e0	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1992	ftp.c	FUNCTION_32	IF_22
0x40036e7	          0x4889c7	                            mov rdi, rax	      1992	ftp.c	FUNCTION_32	IF_22
0x40036ea	      0xe82b2e0000	               call sym.ftp_pasv_verbose	      1992	ftp.c	FUNCTION_32	IF_22
0x40036ef	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1994	ftp.c	FUNCTION_32	CALL_25
0x40036f3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1994	ftp.c	FUNCTION_32	CALL_25
0x40036f7	          0x4889d6	                            mov rsi, rdx	      1994	ftp.c	FUNCTION_32	CALL_25
0x40036fa	          0x4889c7	                            mov rdi, rax	      1994	ftp.c	FUNCTION_32	CALL_25
0x40036fd	      0xe800000000	                          call 0x4003702	      1994	ftp.c	FUNCTION_32	CALL_25
0x4003702	    0x488b05000000	            mov rax, qword [0x04003709] 	      1996	ftp.c	FUNCTION_32	CALL_26
0x4003709	          0x488b00	                    mov rax, qword [rax]	      1996	ftp.c	FUNCTION_32	CALL_26
0x400370c	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      1996	ftp.c	FUNCTION_32	CALL_26
0x4003713	    0x488b92e80000	            mov rdx, qword [rdx + 0xe8] 	      1996	ftp.c	FUNCTION_32	CALL_26
0x400371a	          0x4889d7	                            mov rdi, rdx	      1996	ftp.c	FUNCTION_32	CALL_26
0x400371d	            0xffd0	                                call rax	      1996	ftp.c	FUNCTION_32	CALL_26
0x400371f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1996	ftp.c	FUNCTION_32	CALL_26
0x4003726	    0x48c780e80000	               mov qword [rax + 0xe8], 0	      1996	ftp.c	FUNCTION_32	CALL_26
0x4003731	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1997	ftp.c	FUNCTION_32
0x4003735	     0xfb790e80000	           movzx edx, word [rax + 0xe8] 	      1997	ftp.c	FUNCTION_32
0x400373c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1997	ftp.c	FUNCTION_32
0x4003743	    0x668990a00100	              mov word [rax + 0x1a0], dx	      1997	ftp.c	FUNCTION_32
0x400374a	    0x488b05000000	            mov rax, qword [0x04003751] 	      1998	ftp.c	FUNCTION_32	CALL_27
0x4003751	          0x488b00	                    mov rax, qword [rax]	      1998	ftp.c	FUNCTION_32	CALL_27
0x4003754	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1998	ftp.c	FUNCTION_32	CALL_27
0x4003758	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	      1998	ftp.c	FUNCTION_32	CALL_27
0x400375f	          0x4889d7	                            mov rdi, rdx	      1998	ftp.c	FUNCTION_32	CALL_27
0x4003762	            0xffd0	                                call rax	      1998	ftp.c	FUNCTION_32	CALL_27
0x4003764	          0x4889c2	                            mov rdx, rax	      1998	ftp.c	FUNCTION_32	CALL_27
0x4003767	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1998	ftp.c	FUNCTION_32	CALL_27
0x400376e	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      1998	ftp.c	FUNCTION_32	CALL_27
0x4003775	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1999	ftp.c	FUNCTION_32	IF_23
0x400377c	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1999	ftp.c	FUNCTION_32	IF_23
0x4003783	          0x4885c0	                           test rax, rax	      1999	ftp.c	FUNCTION_32	IF_23
0x4003786	            0x7507	                           jne 0x400378f	      1999	ftp.c	FUNCTION_32	IF_23
0x4003788	      0xb81b000000	                           mov eax, 0x1b	      2000	ftp.c	FUNCTION_32	IF_23
0x400378d	            0xeb25	                           jmp 0x40037b4	      2000	ftp.c	FUNCTION_32	IF_23
0x400378f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2002	ftp.c	FUNCTION_32
0x4003796	    0xc680a4030000	               mov byte [rax + 0x3a4], 1	      2002	ftp.c	FUNCTION_32
0x400379d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2003	ftp.c	FUNCTION_32
0x40037a4	      0xbe00000000	                              mov esi, 0	      2003	ftp.c	FUNCTION_32
0x40037a9	          0x4889c7	                            mov rdi, rax	      2003	ftp.c	FUNCTION_32
0x40037ac	      0xe8d3d5ffff	                         call sym._state	      2003	ftp.c	FUNCTION_32
0x40037b1	          0x8b458c	             mov eax, dword [rbp - 0x74]	      2005	ftp.c	FUNCTION_32
0x40037b4	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2006	ftp.c	FUNCTION_32
0x40037b8	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2006	ftp.c	FUNCTION_32
0x40037c1	            0x7405	                            je 0x40037c8	      2006	ftp.c	FUNCTION_32
0x40037c3	      0xe800000000	                          call 0x40037c8	      2006	ftp.c	FUNCTION_32
0x40037c8	        0x488b5df8	                mov rbx, qword [rbp - 8]	      2006	ftp.c	FUNCTION_32
0x40037cc	              0xc9	                                   leave	      2006	ftp.c	FUNCTION_32
0x40037cd	              0xc3	                                     ret	      2006	ftp.c	FUNCTION_32
ftp_state_retr	FOR,0:functions,0:SWITCH,0:ELSE,3:IF,7:DO,0:WHILE,0:CALL,7	168
0x4003e90	              0x55	                                push rbp	      2181	ftp.c	FUNCTION_36
0x4003e91	          0x4889e5	                            mov rbp, rsp	      2181	ftp.c	FUNCTION_36
0x4003e94	        0x4883ec30	                           sub rsp, 0x30	      2181	ftp.c	FUNCTION_36
0x4003e98	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2181	ftp.c	FUNCTION_36
0x4003e9c	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2181	ftp.c	FUNCTION_36
0x4003ea0	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      2182	ftp.c	FUNCTION_36
0x4003ea7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2183	ftp.c	FUNCTION_36
0x4003eab	          0x488b00	                    mov rax, qword [rax]	      2183	ftp.c	FUNCTION_36
0x4003eae	        0x488945e8	             mov qword [rbp - 0x18], rax	      2183	ftp.c	FUNCTION_36
0x4003eb2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2184	ftp.c	FUNCTION_36
0x4003eb6	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      2184	ftp.c	FUNCTION_36
0x4003ebd	        0x488945f0	             mov qword [rbp - 0x10], rax	      2184	ftp.c	FUNCTION_36
0x4003ec1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2185	ftp.c	FUNCTION_36
0x4003ec5	    0x480550060000	                          add rax, 0x650	      2185	ftp.c	FUNCTION_36
0x4003ecb	        0x488945f8	                mov qword [rbp - 8], rax	      2185	ftp.c	FUNCTION_36
0x4003ecf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2187	ftp.c	FUNCTION_36	IF_1
0x4003ed3	    0x488b80b00700	           mov rax, qword [rax + 0x7b0] 	      2187	ftp.c	FUNCTION_36	IF_1
0x4003eda	          0x4885c0	                           test rax, rax	      2187	ftp.c	FUNCTION_36	IF_1
0x4003edd	            0x7433	                            je 0x4003f12	      2187	ftp.c	FUNCTION_36	IF_1
0x4003edf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2187	ftp.c	FUNCTION_36	IF_1
0x4003ee3	    0x488b80b00700	           mov rax, qword [rax + 0x7b0] 	      2187	ftp.c	FUNCTION_36	IF_1
0x4003eea	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2187	ftp.c	FUNCTION_36	IF_1
0x4003eee	            0x7d22	                           jge 0x4003f12	      2187	ftp.c	FUNCTION_36	IF_1
0x4003ef0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2188	ftp.c	FUNCTION_36	IF_1	CALL_1
0x4003ef4	    0x488d35000000	                   lea rsi, [0x04003efb]	      2188	ftp.c	FUNCTION_36	IF_1	CALL_1
0x4003efb	          0x4889c7	                            mov rdi, rax	      2188	ftp.c	FUNCTION_36	IF_1	CALL_1
0x4003efe	      0xb800000000	                              mov eax, 0	      2188	ftp.c	FUNCTION_36	IF_1	CALL_1
0x4003f03	      0xe800000000	                          call 0x4003f08	      2188	ftp.c	FUNCTION_36	IF_1	CALL_1
0x4003f08	      0xb83f000000	                           mov eax, 0x3f	      2189	ftp.c	FUNCTION_36	IF_1
0x4003f0d	      0xe954020000	                           jmp 0x4004166	      2189	ftp.c	FUNCTION_36	IF_1
0x4003f12	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2191	ftp.c	FUNCTION_36
0x4003f16	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2191	ftp.c	FUNCTION_36
0x4003f1a	        0x48895020	             mov qword [rax + 0x20], rdx	      2191	ftp.c	FUNCTION_36
0x4003f1e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2193	ftp.c	FUNCTION_36	IF_2
0x4003f22	    0x488b80305100	          mov rax, qword [rax + 0x5130] 	      2193	ftp.c	FUNCTION_36	IF_2
0x4003f29	          0x4885c0	                           test rax, rax	      2193	ftp.c	FUNCTION_36	IF_2
0x4003f2c	     0xf84ef010000	                            je 0x4004121	      2193	ftp.c	FUNCTION_36	IF_2
0x4003f32	      0x48837dd0ff	cmp qword [rbp - 0x30], 0xffffffffffffffff	      2196	ftp.c	FUNCTION_36	IF_2	IF_3
0x4003f37	            0x751d	                           jne 0x4003f56	      2196	ftp.c	FUNCTION_36	IF_2	IF_3
0x4003f39	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2197	ftp.c	FUNCTION_36	IF_2	IF_3	CALL_2
0x4003f3d	    0x488d35000000	                   lea rsi, [0x04003f44]	      2197	ftp.c	FUNCTION_36	IF_2	IF_3	CALL_2
0x4003f44	          0x4889c7	                            mov rdi, rax	      2197	ftp.c	FUNCTION_36	IF_2	IF_3	CALL_2
0x4003f47	      0xb800000000	                              mov eax, 0	      2197	ftp.c	FUNCTION_36	IF_2	IF_3	CALL_2
0x4003f4c	      0xe800000000	                          call 0x4003f51	      2197	ftp.c	FUNCTION_36	IF_2	IF_3	CALL_2
0x4003f51	      0xe9e6000000	                           jmp 0x400403c	      2197	ftp.c	FUNCTION_36	IF_2	IF_3	CALL_2
0x4003f56	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2206	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003f5a	    0x488b80305100	          mov rax, qword [rax + 0x5130] 	      2206	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003f61	          0x4885c0	                           test rax, rax	      2206	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003f64	            0x797a	                           jns 0x4003fe0	      2206	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003f66	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2208	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5
0x4003f6a	    0x488b80305100	          mov rax, qword [rax + 0x5130] 	      2208	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5
0x4003f71	          0x48f7d8	                                 neg rax	      2208	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5
0x4003f74	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2208	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5
0x4003f78	            0x7e31	                           jle 0x4003fab	      2208	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5
0x4003f7a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2209	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5	CALL_3
0x4003f7e	    0x488b90305100	          mov rdx, qword [rax + 0x5130] 	      2209	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5	CALL_3
0x4003f85	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      2209	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5	CALL_3
0x4003f89	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2209	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5	CALL_3
0x4003f8d	    0x488d35000000	                   lea rsi, [0x04003f94]	      2209	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5	CALL_3
0x4003f94	          0x4889c7	                            mov rdi, rax	      2209	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5	CALL_3
0x4003f97	      0xb800000000	                              mov eax, 0	      2209	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5	CALL_3
0x4003f9c	      0xe800000000	                          call 0x4003fa1	      2209	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5	CALL_3
0x4003fa1	      0xb824000000	                           mov eax, 0x24	      2212	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5
0x4003fa6	      0xe9bb010000	                           jmp 0x4004166	      2212	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5
0x4003fab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2215	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003faf	    0x488b80305100	          mov rax, qword [rax + 0x5130] 	      2215	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fb6	          0x48f7d8	                                 neg rax	      2215	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fb9	          0x4889c2	                            mov rdx, rax	      2215	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fbc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2215	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fc0	        0x48895020	             mov qword [rax + 0x20], rdx	      2215	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fc4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2217	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fc8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2217	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fcc	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2217	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fd0	          0x4829c2	                            sub rdx, rax	      2217	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fd3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2217	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fd7	    0x488990305100	          mov qword [rax + 0x5130], rdx 	      2217	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fde	            0xeb5c	                           jmp 0x400403c	      2217	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4003fe0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2220	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6
0x4003fe4	    0x488b80305100	          mov rax, qword [rax + 0x5130] 	      2220	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6
0x4003feb	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2220	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6
0x4003fef	            0x7e31	                           jle 0x4004022	      2220	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6
0x4003ff1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2221	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6	CALL_4
0x4003ff5	    0x488b90305100	          mov rdx, qword [rax + 0x5130] 	      2221	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6	CALL_4
0x4003ffc	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      2221	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6	CALL_4
0x4004000	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2221	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6	CALL_4
0x4004004	    0x488d35000000	                   lea rsi, [0x0400400b]	      2221	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6	CALL_4
0x400400b	          0x4889c7	                            mov rdi, rax	      2221	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6	CALL_4
0x400400e	      0xb800000000	                              mov eax, 0	      2221	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6	CALL_4
0x4004013	      0xe800000000	                          call 0x4004018	      2221	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6	CALL_4
0x4004018	      0xb824000000	                           mov eax, 0x24	      2224	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6
0x400401d	      0xe944010000	                           jmp 0x4004166	      2224	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6
0x4004022	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2227	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2
0x4004026	    0x488b80305100	          mov rax, qword [rax + 0x5130] 	      2227	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2
0x400402d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2227	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2
0x4004031	          0x4829c2	                            sub rdx, rax	      2227	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2
0x4004034	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2227	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2
0x4004038	        0x48895020	             mov qword [rax + 0x20], rdx	      2227	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2
0x400403c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2231	ftp.c	FUNCTION_36	IF_2	IF_7
0x4004040	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2231	ftp.c	FUNCTION_36	IF_2	IF_7
0x4004044	          0x4885c0	                           test rax, rax	      2231	ftp.c	FUNCTION_36	IF_2	IF_7
0x4004047	            0x7571	                           jne 0x40040ba	      2231	ftp.c	FUNCTION_36	IF_2	IF_7
0x4004049	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x400404d	        0x4883ec08	                              sub rsp, 8	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x4004051	            0x6a00	                                  push 0	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x4004053	    0x41b9ffffffff	                     mov r9d, 0xffffffff	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x4004059	    0x41b800000000	                              mov r8d, 0	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x400405f	      0xb900000000	                              mov ecx, 0	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x4004064	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x400406b	      0xbeffffffff	                     mov esi, 0xffffffff	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x4004070	          0x4889c7	                            mov rdi, rax	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x4004073	      0xe800000000	                          call 0x4004078	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x4004078	        0x4883c410	                           add rsp, 0x10	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x400407c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2234	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_6
0x4004080	    0x488d35000000	                   lea rsi, [0x04004087]	      2234	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_6
0x4004087	          0x4889c7	                            mov rdi, rax	      2234	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_6
0x400408a	      0xb800000000	                              mov eax, 0	      2234	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_6
0x400408f	      0xe800000000	                          call 0x4004094	      2234	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_6
0x4004094	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2238	ftp.c	FUNCTION_36	IF_2	IF_7
0x4004098	    0xc74018020000	               mov dword [rax + 0x18], 2	      2238	ftp.c	FUNCTION_36	IF_2	IF_7
0x400409f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2239	ftp.c	FUNCTION_36	IF_2	IF_7
0x40040a3	      0xbe00000000	                              mov esi, 0	      2239	ftp.c	FUNCTION_36	IF_2	IF_7
0x40040a8	          0x4889c7	                            mov rdi, rax	      2239	ftp.c	FUNCTION_36	IF_2	IF_7
0x40040ab	      0xe8d4ccffff	                         call sym._state	      2239	ftp.c	FUNCTION_36	IF_2	IF_7
0x40040b0	      0xb800000000	                              mov eax, 0	      2240	ftp.c	FUNCTION_36	IF_2	IF_7
0x40040b5	      0xe9ac000000	                           jmp 0x4004166	      2240	ftp.c	FUNCTION_36	IF_2	IF_7
0x40040ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2244	ftp.c	FUNCTION_36	IF_2	CALL_7
0x40040be	    0x488b90305100	          mov rdx, qword [rax + 0x5130] 	      2244	ftp.c	FUNCTION_36	IF_2	CALL_7
0x40040c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2244	ftp.c	FUNCTION_36	IF_2	CALL_7
0x40040c9	    0x488d35000000	                   lea rsi, [0x040040d0]	      2244	ftp.c	FUNCTION_36	IF_2	CALL_7
0x40040d0	          0x4889c7	                            mov rdi, rax	      2244	ftp.c	FUNCTION_36	IF_2	CALL_7
0x40040d3	      0xb800000000	                              mov eax, 0	      2244	ftp.c	FUNCTION_36	IF_2	CALL_7
0x40040d8	      0xe800000000	                          call 0x40040dd	      2244	ftp.c	FUNCTION_36	IF_2	CALL_7
0x40040dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2247	ftp.c	FUNCTION_36	IF_2
0x40040e1	    0x488b90305100	          mov rdx, qword [rax + 0x5130] 	      2247	ftp.c	FUNCTION_36	IF_2
0x40040e8	        0x488b45f8	                mov rax, qword [rbp - 8]	      2247	ftp.c	FUNCTION_36	IF_2
0x40040ec	    0x488d35000000	                   lea rsi, [0x040040f3]	      2247	ftp.c	FUNCTION_36	IF_2
0x40040f3	          0x4889c7	                            mov rdi, rax	      2247	ftp.c	FUNCTION_36	IF_2
0x40040f6	      0xb800000000	                              mov eax, 0	      2247	ftp.c	FUNCTION_36	IF_2
0x40040fb	      0xe800000000	                          call 0x4004100	      2247	ftp.c	FUNCTION_36	IF_2
0x4004100	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2247	ftp.c	FUNCTION_36	IF_2
0x4004103	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2247	ftp.c	FUNCTION_36	IF_2
0x4004107	            0x7405	                            je 0x400410e	      2247	ftp.c	FUNCTION_36	IF_2
0x4004109	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2247	ftp.c	FUNCTION_36	IF_2
0x400410c	            0xeb58	                           jmp 0x4004166	      2247	ftp.c	FUNCTION_36	IF_2
0x400410e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2250	ftp.c	FUNCTION_36	IF_2
0x4004112	      0xbe1b000000	                           mov esi, 0x1b	      2250	ftp.c	FUNCTION_36	IF_2
0x4004117	          0x4889c7	                            mov rdi, rax	      2250	ftp.c	FUNCTION_36	IF_2
0x400411a	      0xe865ccffff	                         call sym._state	      2250	ftp.c	FUNCTION_36	IF_2
0x400411f	            0xeb42	                           jmp 0x4004163	      2250	ftp.c	FUNCTION_36	IF_2
0x4004121	        0x488b45f8	                mov rax, qword [rbp - 8]	      2254	ftp.c	FUNCTION_36	ELSE_3
0x4004125	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      2254	ftp.c	FUNCTION_36	ELSE_3
0x400412c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2254	ftp.c	FUNCTION_36	ELSE_3
0x4004130	    0x488d35000000	                   lea rsi, [0x04004137]	      2254	ftp.c	FUNCTION_36	ELSE_3
0x4004137	          0x4889c7	                            mov rdi, rax	      2254	ftp.c	FUNCTION_36	ELSE_3
0x400413a	      0xb800000000	                              mov eax, 0	      2254	ftp.c	FUNCTION_36	ELSE_3
0x400413f	      0xe800000000	                          call 0x4004144	      2254	ftp.c	FUNCTION_36	ELSE_3
0x4004144	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2254	ftp.c	FUNCTION_36	ELSE_3
0x4004147	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2254	ftp.c	FUNCTION_36	ELSE_3
0x400414b	            0x7405	                            je 0x4004152	      2254	ftp.c	FUNCTION_36	ELSE_3
0x400414d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2254	ftp.c	FUNCTION_36	ELSE_3
0x4004150	            0xeb14	                           jmp 0x4004166	      2254	ftp.c	FUNCTION_36	ELSE_3
0x4004152	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2255	ftp.c	FUNCTION_36	ELSE_3
0x4004156	      0xbe20000000	                           mov esi, 0x20	      2255	ftp.c	FUNCTION_36	ELSE_3
0x400415b	          0x4889c7	                            mov rdi, rax	      2255	ftp.c	FUNCTION_36	ELSE_3
0x400415e	      0xe821ccffff	                         call sym._state	      2255	ftp.c	FUNCTION_36	ELSE_3
0x4004163	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2258	ftp.c	FUNCTION_36
0x4004166	              0xc9	                                   leave	      2259	ftp.c	FUNCTION_36
0x4004167	              0xc3	                                     ret	      2259	ftp.c	FUNCTION_36
ftp_state_type	FOR,0:functions,0:SWITCH,0:ELSE,1:IF,2:DO,0:WHILE,0:CALL,3	54
0x4002791	              0x55	                                push rbp	      1530	ftp.c	FUNCTION_26
0x4002792	          0x4889e5	                            mov rbp, rsp	      1530	ftp.c	FUNCTION_26
0x4002795	        0x4883ec30	                           sub rsp, 0x30	      1530	ftp.c	FUNCTION_26
0x4002799	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1530	ftp.c	FUNCTION_26
0x400279d	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1531	ftp.c	FUNCTION_26
0x40027a4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1532	ftp.c	FUNCTION_26
0x40027a8	          0x488b00	                    mov rax, qword [rax]	      1532	ftp.c	FUNCTION_26
0x40027ab	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1532	ftp.c	FUNCTION_26
0x40027b2	        0x488945e8	             mov qword [rbp - 0x18], rax	      1532	ftp.c	FUNCTION_26
0x40027b6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1533	ftp.c	FUNCTION_26
0x40027ba	          0x488b00	                    mov rax, qword [rax]	      1533	ftp.c	FUNCTION_26
0x40027bd	        0x488945f0	             mov qword [rbp - 0x10], rax	      1533	ftp.c	FUNCTION_26
0x40027c1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1534	ftp.c	FUNCTION_26
0x40027c5	    0x480550060000	                          add rax, 0x650	      1534	ftp.c	FUNCTION_26
0x40027cb	        0x488945f8	                mov qword [rbp - 8], rax	      1534	ftp.c	FUNCTION_26
0x40027cf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1539	ftp.c	FUNCTION_26	IF_1
0x40027d3	     0xfb680e10700	          movzx eax, byte [rax + 0x7e1] 	      1539	ftp.c	FUNCTION_26	IF_1
0x40027da	            0x84c0	                             test al, al	      1539	ftp.c	FUNCTION_26	IF_1
0x40027dc	            0x746a	                            je 0x4002848	      1539	ftp.c	FUNCTION_26	IF_1
0x40027de	        0x488b45f8	                mov rax, qword [rbp - 8]	      1539	ftp.c	FUNCTION_26	IF_1
0x40027e2	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1539	ftp.c	FUNCTION_26	IF_1
0x40027e9	          0x4885c0	                           test rax, rax	      1539	ftp.c	FUNCTION_26	IF_1
0x40027ec	            0x745a	                            je 0x4002848	      1539	ftp.c	FUNCTION_26	IF_1
0x40027ee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1540	ftp.c	FUNCTION_26	IF_1	CALL_1
0x40027f2	     0xfb680d40700	          movzx eax, byte [rax + 0x7d4] 	      1540	ftp.c	FUNCTION_26	IF_1	CALL_1
0x40027f9	           0xfb6d0	                           movzx edx, al	      1540	ftp.c	FUNCTION_26	IF_1	CALL_1
0x40027fc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1540	ftp.c	FUNCTION_26	IF_1	CALL_1
0x4002800	            0x89d6	                            mov esi, edx	      1540	ftp.c	FUNCTION_26	IF_1	CALL_1
0x4002802	          0x4889c7	                            mov rdi, rax	      1540	ftp.c	FUNCTION_26	IF_1	CALL_1
0x4002805	      0xe81b3c0000	                  call sym.ftp_need_type	      1540	ftp.c	FUNCTION_26	IF_1	CALL_1
0x400280a	            0x85c0	                           test eax, eax	      1539	ftp.c	FUNCTION_26	IF_1
0x400280c	            0x743a	                            je 0x4002848	      1539	ftp.c	FUNCTION_26	IF_1
0x400280e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1545	ftp.c	FUNCTION_26	IF_1
0x4002812	    0xc74018010000	               mov dword [rax + 0x18], 1	      1545	ftp.c	FUNCTION_26	IF_1
0x4002819	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1550	ftp.c	FUNCTION_26	IF_1	CALL_2
0x400281d	     0xfb680d40700	          movzx eax, byte [rax + 0x7d4] 	      1550	ftp.c	FUNCTION_26	IF_1	CALL_2
0x4002824	           0xfb6c8	                           movzx ecx, al	      1550	ftp.c	FUNCTION_26	IF_1	CALL_2
0x4002827	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1550	ftp.c	FUNCTION_26	IF_1	CALL_2
0x400282b	      0xba13000000	                           mov edx, 0x13	      1550	ftp.c	FUNCTION_26	IF_1	CALL_2
0x4002830	            0x89ce	                            mov esi, ecx	      1550	ftp.c	FUNCTION_26	IF_1	CALL_2
0x4002832	          0x4889c7	                            mov rdi, rax	      1550	ftp.c	FUNCTION_26	IF_1	CALL_2
0x4002835	      0xe8223c0000	                    call sym.ftp_nb_type	      1550	ftp.c	FUNCTION_26	IF_1	CALL_2
0x400283a	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1550	ftp.c	FUNCTION_26	IF_1	CALL_2
0x400283d	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1551	ftp.c	FUNCTION_26	IF_1	IF_2
0x4002841	            0x7414	                            je 0x4002857	      1551	ftp.c	FUNCTION_26	IF_1	IF_2
0x4002843	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1552	ftp.c	FUNCTION_26	IF_1	IF_2
0x4002846	            0xeb12	                           jmp 0x400285a	      1552	ftp.c	FUNCTION_26	IF_1	IF_2
0x4002848	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1555	ftp.c	FUNCTION_26	CALL_3
0x400284c	          0x4889c7	                            mov rdi, rax	      1555	ftp.c	FUNCTION_26	CALL_3
0x400284f	      0xe8fffbffff	                 call sym.ftp_state_size	      1555	ftp.c	FUNCTION_26	CALL_3
0x4002854	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1555	ftp.c	FUNCTION_26	CALL_3
0x4002857	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1557	ftp.c	FUNCTION_26
0x400285a	              0xc9	                                   leave	      1558	ftp.c	FUNCTION_26
0x400285b	              0xc3	                                     ret	      1558	ftp.c	FUNCTION_26
ftp_domore_getsock	FOR,1:functions,0:SWITCH,0:ELSE,1:IF,4:DO,0:WHILE,0:CALL,5	79
0x4000ec8	              0x55	                                push rbp	       832	ftp.c	FUNCTION_16
0x4000ec9	          0x4889e5	                            mov rbp, rsp	       832	ftp.c	FUNCTION_16
0x4000ecc	        0x4883ec40	                           sub rsp, 0x40	       832	ftp.c	FUNCTION_16
0x4000ed0	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       832	ftp.c	FUNCTION_16
0x4000ed4	        0x488975d0	             mov qword [rbp - 0x30], rsi	       832	ftp.c	FUNCTION_16
0x4000ed8	          0x8955cc	             mov dword [rbp - 0x34], edx	       832	ftp.c	FUNCTION_16
0x4000edb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       833	ftp.c	FUNCTION_16
0x4000edf	    0x480550060000	                          add rax, 0x650	       833	ftp.c	FUNCTION_16
0x4000ee5	        0x488945f8	                mov qword [rbp - 8], rax	       833	ftp.c	FUNCTION_16
0x4000ee9	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       835	ftp.c	FUNCTION_16	IF_1
0x4000eed	            0x750a	                           jne 0x4000ef9	       835	ftp.c	FUNCTION_16	IF_1
0x4000eef	      0xb800000000	                              mov eax, 0	       836	ftp.c	FUNCTION_16	IF_1
0x4000ef4	      0xe9f4000000	                           jmp 0x4000fed	       836	ftp.c	FUNCTION_16	IF_1
0x4000ef9	        0x488b45f8	                mov rax, qword [rbp - 8]	       843	ftp.c	FUNCTION_16	IF_2
0x4000efd	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	       843	ftp.c	FUNCTION_16	IF_2
0x4000f03	            0x85c0	                           test eax, eax	       843	ftp.c	FUNCTION_16	IF_2
0x4000f05	     0xf85c5000000	                           jne 0x4000fd0	       843	ftp.c	FUNCTION_16	IF_2
0x4000f0b	    0xc745ec010000	               mov dword [rbp - 0x14], 1	       844	ftp.c	FUNCTION_16	IF_2	CALL_1
0x4000f12	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       848	ftp.c	FUNCTION_16	IF_2
0x4000f16	    0x8b9058020000	           mov edx, dword [rax + 0x258] 	       848	ftp.c	FUNCTION_16	IF_2
0x4000f1c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       848	ftp.c	FUNCTION_16	IF_2
0x4000f20	            0x8910	                    mov dword [rax], edx	       848	ftp.c	FUNCTION_16	IF_2
0x4000f22	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       850	ftp.c	FUNCTION_16	IF_2	IF_3
0x4000f26	          0x488b00	                    mov rax, qword [rax]	       850	ftp.c	FUNCTION_16	IF_2	IF_3
0x4000f29	     0xfb680d70700	          movzx eax, byte [rax + 0x7d7] 	       850	ftp.c	FUNCTION_16	IF_2	IF_3
0x4000f30	          0x83f001	                              xor eax, 1	       850	ftp.c	FUNCTION_16	IF_2	IF_3
0x4000f33	            0x84c0	                             test al, al	       850	ftp.c	FUNCTION_16	IF_2	IF_3
0x4000f35	            0x7479	                            je 0x4000fb0	       850	ftp.c	FUNCTION_16	IF_2	IF_3
0x4000f37	    0xc745f0010000	               mov dword [rbp - 0x10], 1	       855	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1
0x4000f3e	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       855	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1
0x4000f45	            0xeb61	                           jmp 0x4000fa8	       855	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1
0x4000f47	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       856	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f4b	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       856	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f4e	          0x4863d2	                         movsxd rdx, edx	       856	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f51	    0x4881c2980000	                           add rdx, 0x98	       856	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f58	          0x8b0490	            mov eax, dword [rax + rdx*4]	       856	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f5b	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       856	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f5e	            0x7444	                            je 0x4000fa4	       856	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f60	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       857	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f63	            0x4898	                                    cdqe	       857	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f65	    0x488d14850000	                        lea rdx, [rax*4]	       857	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f6d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       857	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f71	          0x4801c2	                            add rdx, rax	       857	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f74	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       857	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f78	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       857	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f7b	          0x4863c9	                         movsxd rcx, ecx	       857	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f7e	    0x4881c1980000	                           add rcx, 0x98	       857	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f85	          0x8b0488	            mov eax, dword [rax + rcx*4]	       857	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f88	            0x8902	                    mov dword [rdx], eax	       857	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4
0x4000f8a	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       858	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4000f8d	          0x8d5001	                      lea edx, [rax + 1]	       858	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4000f90	          0x8955f0	             mov dword [rbp - 0x10], edx	       858	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4000f93	          0x83c010	                           add eax, 0x10	       858	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4000f96	      0xba01000000	                              mov edx, 1	       858	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4000f9b	            0x89c1	                            mov ecx, eax	       858	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4000f9d	            0xd3e2	                             shl edx, cl	       858	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4000f9f	            0x89d0	                            mov eax, edx	       858	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4000fa1	           0x945ec	              or dword [rbp - 0x14], eax	       858	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1	IF_4	CALL_2
0x4000fa4	        0x8345f401	                add dword [rbp - 0xc], 1	       855	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1
0x4000fa8	        0x837df401	                cmp dword [rbp - 0xc], 1	       855	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1
0x4000fac	            0x7e99	                           jle 0x4000f47	       855	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1
0x4000fae	            0xeb1b	                           jmp 0x4000fcb	       855	ftp.c	FUNCTION_16	IF_2	IF_3	FOR_1
0x4000fb0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       863	ftp.c	FUNCTION_16	IF_2	ELSE_1
0x4000fb4	        0x488d5004	                      lea rdx, [rax + 4]	       863	ftp.c	FUNCTION_16	IF_2	ELSE_1
0x4000fb8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       863	ftp.c	FUNCTION_16	IF_2	ELSE_1
0x4000fbc	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	       863	ftp.c	FUNCTION_16	IF_2	ELSE_1
0x4000fc2	            0x8902	                    mov dword [rdx], eax	       863	ftp.c	FUNCTION_16	IF_2	ELSE_1
0x4000fc4	    0x814dec020002	          or dword [rbp - 0x14], 0x20002	       864	ftp.c	FUNCTION_16	IF_2	ELSE_1	CALL_4
0x4000fcb	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       867	ftp.c	FUNCTION_16	IF_2
0x4000fce	            0xeb1d	                           jmp 0x4000fed	       867	ftp.c	FUNCTION_16	IF_2
0x4000fd0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       869	ftp.c	FUNCTION_16	CALL_5
0x4000fd4	    0x488d88500600	                  lea rcx, [rax + 0x650]	       869	ftp.c	FUNCTION_16	CALL_5
0x4000fdb	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       869	ftp.c	FUNCTION_16	CALL_5
0x4000fde	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       869	ftp.c	FUNCTION_16	CALL_5
0x4000fe2	          0x4889c6	                            mov rsi, rax	       869	ftp.c	FUNCTION_16	CALL_5
0x4000fe5	          0x4889cf	                            mov rdi, rcx	       869	ftp.c	FUNCTION_16	CALL_5
0x4000fe8	      0xe800000000	                          call 0x4000fed	       869	ftp.c	FUNCTION_16	CALL_5
0x4000fed	              0xc9	                                   leave	       870	ftp.c	FUNCTION_16
0x4000fee	              0xc3	                                     ret	       870	ftp.c	FUNCTION_16
freedirs	FOR,1:functions,0:SWITCH,0:ELSE,0:IF,1:DO,0:WHILE,0:CALL,4	62
0x4000161	              0x55	                                push rbp	       241	ftp.c	FUNCTION_2
0x4000162	          0x4889e5	                            mov rbp, rsp	       241	ftp.c	FUNCTION_2
0x4000165	        0x4883ec20	                           sub rsp, 0x20	       241	ftp.c	FUNCTION_2
0x4000169	        0x48897de8	             mov qword [rbp - 0x18], rdi	       241	ftp.c	FUNCTION_2
0x400016d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       243	ftp.c	FUNCTION_2	IF_1
0x4000171	        0x488b4078	            mov rax, qword [rax + 0x78] 	       243	ftp.c	FUNCTION_2	IF_1
0x4000175	          0x4885c0	                           test rax, rax	       243	ftp.c	FUNCTION_2	IF_1
0x4000178	     0xf8490000000	                            je 0x400020e	       243	ftp.c	FUNCTION_2	IF_1
0x400017e	    0xc745fc000000	                  mov dword [rbp - 4], 0	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x4000185	            0xeb47	                           jmp 0x40001ce	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x4000187	    0x488b05000000	            mov rax, qword [0x0400018e] 	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x400018e	          0x488b00	                    mov rax, qword [rax]	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x4000191	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x4000195	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x4000199	          0x8b4dfc	                mov ecx, dword [rbp - 4]	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x400019c	          0x4863c9	                         movsxd rcx, ecx	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x400019f	        0x48c1e103	                              shl rcx, 3	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x40001a3	          0x4801ca	                            add rdx, rcx	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x40001a6	          0x488b12	                    mov rdx, qword [rdx]	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x40001a9	          0x4889d7	                            mov rdi, rdx	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x40001ac	            0xffd0	                                call rax	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x40001ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       246	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001b2	        0x488b4078	            mov rax, qword [rax + 0x78] 	       246	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001b6	          0x8b55fc	                mov edx, dword [rbp - 4]	       246	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001b9	          0x4863d2	                         movsxd rdx, edx	       246	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001bc	        0x48c1e203	                              shl rdx, 3	       246	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001c0	          0x4801d0	                            add rax, rdx	       246	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001c3	    0x48c700000000	                      mov qword [rax], 0	       246	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001ca	        0x8345fc01	                  add dword [rbp - 4], 1	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001ce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001d2	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001d8	          0x3b45fc	                cmp eax, dword [rbp - 4]	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001db	            0x7faa	                            jg 0x4000187	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40001dd	    0x488b05000000	            mov rax, qword [0x040001e4] 	       248	ftp.c	FUNCTION_2	IF_1	CALL_2
0x40001e4	          0x488b00	                    mov rax, qword [rax]	       248	ftp.c	FUNCTION_2	IF_1	CALL_2
0x40001e7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       248	ftp.c	FUNCTION_2	IF_1	CALL_2
0x40001eb	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	       248	ftp.c	FUNCTION_2	IF_1	CALL_2
0x40001ef	          0x4889d7	                            mov rdi, rdx	       248	ftp.c	FUNCTION_2	IF_1	CALL_2
0x40001f2	            0xffd0	                                call rax	       248	ftp.c	FUNCTION_2	IF_1	CALL_2
0x40001f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       249	ftp.c	FUNCTION_2	IF_1
0x40001f8	    0x48c740780000	               mov qword [rax + 0x78], 0	       249	ftp.c	FUNCTION_2	IF_1
0x4000200	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       250	ftp.c	FUNCTION_2	IF_1
0x4000204	    0xc78080000000	               mov dword [rax + 0x80], 0	       250	ftp.c	FUNCTION_2	IF_1
0x400020e	    0x488b05000000	            mov rax, qword [0x04000215] 	       252	ftp.c	FUNCTION_2	CALL_3
0x4000215	          0x488b00	                    mov rax, qword [rax]	       252	ftp.c	FUNCTION_2	CALL_3
0x4000218	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       252	ftp.c	FUNCTION_2	CALL_3
0x400021c	    0x488b92880000	            mov rdx, qword [rdx + 0x88] 	       252	ftp.c	FUNCTION_2	CALL_3
0x4000223	          0x4889d7	                            mov rdi, rdx	       252	ftp.c	FUNCTION_2	CALL_3
0x4000226	            0xffd0	                                call rax	       252	ftp.c	FUNCTION_2	CALL_3
0x4000228	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       252	ftp.c	FUNCTION_2	CALL_3
0x400022c	    0x48c780880000	               mov qword [rax + 0x88], 0	       252	ftp.c	FUNCTION_2	CALL_3
0x4000237	    0x488b05000000	            mov rax, qword [0x0400023e] 	       255	ftp.c	FUNCTION_2	CALL_4
0x400023e	          0x488b00	                    mov rax, qword [rax]	       255	ftp.c	FUNCTION_2	CALL_4
0x4000241	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       255	ftp.c	FUNCTION_2	CALL_4
0x4000245	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	       255	ftp.c	FUNCTION_2	CALL_4
0x400024c	          0x4889d7	                            mov rdi, rdx	       255	ftp.c	FUNCTION_2	CALL_4
0x400024f	            0xffd0	                                call rax	       255	ftp.c	FUNCTION_2	CALL_4
0x4000251	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       255	ftp.c	FUNCTION_2	CALL_4
0x4000255	    0x48c780e00000	               mov qword [rax + 0xe0], 0	       255	ftp.c	FUNCTION_2	CALL_4
0x4000260	              0x90	                                     nop	       256	ftp.c	FUNCTION_2
0x4000261	              0xc9	                                   leave	       256	ftp.c	FUNCTION_2
0x4000262	              0xc3	                                     ret	       256	ftp.c	FUNCTION_2
ftp_state_use_port	FOR,3:functions,0:SWITCH,3:ELSE,10:IF,35:DO,0:WHILE,1:CALL,72	784
0x40011a5	              0x55	                                push rbp	       932	ftp.c	FUNCTION_18
0x40011a6	          0x4889e5	                            mov rbp, rsp	       932	ftp.c	FUNCTION_18
0x40011a9	              0x53	                                push rbx	       932	ftp.c	FUNCTION_18
0x40011aa	    0x4881ec580a00	                          sub rsp, 0xa58	       932	ftp.c	FUNCTION_18
0x40011b1	    0x4889bda8f5ff	            mov qword [rbp - 0xa58], rdi	       932	ftp.c	FUNCTION_18
0x40011b8	    0x89b5a4f5ffff	            mov dword [rbp - 0xa5c], esi	       932	ftp.c	FUNCTION_18
0x40011be	    0x64488b042528	                mov rax, qword fs:[0x28]	       932	ftp.c	FUNCTION_18
0x40011c7	        0x488945e8	             mov qword [rbp - 0x18], rax	       932	ftp.c	FUNCTION_18
0x40011cb	            0x31c0	                            xor eax, eax	       932	ftp.c	FUNCTION_18
0x40011cd	    0xc785c4f5ffff	              mov dword [rbp - 0xa3c], 0	       933	ftp.c	FUNCTION_18
0x40011d7	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	       934	ftp.c	FUNCTION_18
0x40011de	    0x480550060000	                          add rax, 0x650	       934	ftp.c	FUNCTION_18
0x40011e4	    0x48898510f6ff	            mov qword [rbp - 0x9f0], rax	       934	ftp.c	FUNCTION_18
0x40011eb	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	       935	ftp.c	FUNCTION_18
0x40011f2	          0x488b00	                    mov rax, qword [rax]	       935	ftp.c	FUNCTION_18
0x40011f5	    0x48898518f6ff	            mov qword [rbp - 0x9e8], rax	       935	ftp.c	FUNCTION_18
0x40011fc	    0xc785bcf5ffff	    mov dword [rbp - 0xa44], 0xffffffff 	       936	ftp.c	FUNCTION_18
0x4001206	    0x48c785e0f6ff	              mov qword [rbp - 0x920], 0	       937	ftp.c	FUNCTION_18
0x4001211	    0x488d95e8f6ff	                  lea rdx, [rbp - 0x918]	       937	ftp.c	FUNCTION_18
0x4001218	      0xb800000000	                              mov eax, 0	       937	ftp.c	FUNCTION_18
0x400121d	      0xb91f000000	                           mov ecx, 0x1f	       937	ftp.c	FUNCTION_18
0x4001222	          0x4889d7	                            mov rdi, rdx	       937	ftp.c	FUNCTION_18
0x4001225	          0xf348ab	              rep stosq qword [rdi], rax	       937	ftp.c	FUNCTION_18
0x4001228	    0x488d8560f6ff	                  lea rax, [rbp - 0x9a0]	       943	ftp.c	FUNCTION_18
0x400122f	    0x48898520f6ff	            mov qword [rbp - 0x9e0], rax	       943	ftp.c	FUNCTION_18
0x4001236	    0x488b8520f6ff	            mov rax, qword [rbp - 0x9e0]	       944	ftp.c	FUNCTION_18
0x400123d	    0x48898528f6ff	            mov qword [rbp - 0x9d8], rax	       944	ftp.c	FUNCTION_18
0x4001244	    0x488b8520f6ff	            mov rax, qword [rbp - 0x9e0]	       946	ftp.c	FUNCTION_18
0x400124b	    0x48898530f6ff	            mov qword [rbp - 0x9d0], rax	       946	ftp.c	FUNCTION_18
0x4001252	    0x48c785e8f5ff	              mov qword [rbp - 0xa18], 0	       952	ftp.c	FUNCTION_18
0x400125d	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       953	ftp.c	FUNCTION_18
0x4001264	    0x488b80900800	           mov rax, qword [rax + 0x890] 	       953	ftp.c	FUNCTION_18
0x400126b	    0x48898538f6ff	            mov qword [rbp - 0x9c8], rax	       953	ftp.c	FUNCTION_18
0x4001272	    0x48c785d0f5ff	              mov qword [rbp - 0xa30], 0	       954	ftp.c	FUNCTION_18
0x400127d	    0x66c785b6f5ff	               mov word [rbp - 0xa4a], 0	       955	ftp.c	FUNCTION_18
0x4001286	    0x66c785b8f5ff	               mov word [rbp - 0xa48], 0	       956	ftp.c	FUNCTION_18
0x400128f	    0xc685b5f5ffff	               mov byte [rbp - 0xa4b], 1	       958	ftp.c	FUNCTION_18
0x4001296	    0x48c785f0f5ff	              mov qword [rbp - 0xa10], 0	       960	ftp.c	FUNCTION_18
0x40012a1	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       967	ftp.c	FUNCTION_18	IF_1
0x40012a8	    0x488b80900800	           mov rax, qword [rax + 0x890] 	       967	ftp.c	FUNCTION_18	IF_1
0x40012af	          0x4885c0	                           test rax, rax	       967	ftp.c	FUNCTION_18	IF_1
0x40012b2	     0xf84c5030000	                            je 0x400167d	       967	ftp.c	FUNCTION_18	IF_1
0x40012b8	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	       968	ftp.c	FUNCTION_18	IF_1	CALL_1
0x40012bf	    0x488b80900800	           mov rax, qword [rax + 0x890] 	       968	ftp.c	FUNCTION_18	IF_1	CALL_1
0x40012c6	          0x4889c7	                            mov rdi, rax	       968	ftp.c	FUNCTION_18	IF_1	CALL_1
0x40012c9	      0xe800000000	                          call 0x40012ce	       968	ftp.c	FUNCTION_18	IF_1	CALL_1
0x40012ce	        0x4883f801	                              cmp rax, 1	       967	ftp.c	FUNCTION_18	IF_1
0x40012d2	     0xf86a5030000	                           jbe 0x400167d	       967	ftp.c	FUNCTION_18	IF_1
0x40012d8	    0x488b8538f6ff	            mov rax, qword [rbp - 0x9c8]	       971	ftp.c	FUNCTION_18	IF_1	CALL_2
0x40012df	          0x4889c7	                            mov rdi, rax	       971	ftp.c	FUNCTION_18	IF_1	CALL_2
0x40012e2	      0xe800000000	                          call 0x40012e7	       971	ftp.c	FUNCTION_18	IF_1	CALL_2
0x40012e7	        0x4883f82d	                           cmp rax, 0x2d	       972	ftp.c	FUNCTION_18	IF_1	CALL_3
0x40012eb	            0x7611	                           jbe 0x40012fe	       972	ftp.c	FUNCTION_18	IF_1	CALL_3
0x40012ed	    0x488b8538f6ff	            mov rax, qword [rbp - 0x9c8]	       972	ftp.c	FUNCTION_18	IF_1	CALL_3
0x40012f4	          0x4889c7	                            mov rdi, rax	       972	ftp.c	FUNCTION_18	IF_1	CALL_3
0x40012f7	      0xe800000000	                          call 0x40012fc	       972	ftp.c	FUNCTION_18	IF_1	CALL_3
0x40012fc	            0xeb05	                           jmp 0x4001303	       972	ftp.c	FUNCTION_18	IF_1	CALL_3
0x40012fe	      0xb82e000000	                           mov eax, 0x2e	       972	ftp.c	FUNCTION_18	IF_1	CALL_3
0x4001303	    0x48898540f6ff	            mov qword [rbp - 0x9c0], rax	       971	ftp.c	FUNCTION_18	IF_1	CALL_2
0x400130a	    0x488b8538f6ff	            mov rax, qword [rbp - 0x9c8]	       977	ftp.c	FUNCTION_18	IF_1
0x4001311	    0x48898548f6ff	            mov qword [rbp - 0x9b8], rax	       977	ftp.c	FUNCTION_18	IF_1
0x4001318	    0x48c785f8f5ff	              mov qword [rbp - 0xa08], 0	       978	ftp.c	FUNCTION_18	IF_1
0x4001323	    0x48c78550f6ff	              mov qword [rbp - 0x9b0], 0	       979	ftp.c	FUNCTION_18	IF_1
0x400132e	    0x48c78558f6ff	              mov qword [rbp - 0x9a8], 0	       980	ftp.c	FUNCTION_18	IF_1
0x4001339	    0x488b05000000	            mov rax, qword [0x04001340] 	       982	ftp.c	FUNCTION_18	IF_1	CALL_6
0x4001340	          0x488b00	                    mov rax, qword [rax]	       982	ftp.c	FUNCTION_18	IF_1	CALL_6
0x4001343	    0x488b9540f6ff	            mov rdx, qword [rbp - 0x9c0]	       982	ftp.c	FUNCTION_18	IF_1	CALL_6
0x400134a	        0x4883c201	                              add rdx, 1	       982	ftp.c	FUNCTION_18	IF_1	CALL_6
0x400134e	      0xbe01000000	                              mov esi, 1	       982	ftp.c	FUNCTION_18	IF_1	CALL_6
0x4001353	          0x4889d7	                            mov rdi, rdx	       982	ftp.c	FUNCTION_18	IF_1	CALL_6
0x4001356	            0xffd0	                                call rax	       982	ftp.c	FUNCTION_18	IF_1	CALL_6
0x4001358	    0x488985f0f5ff	            mov qword [rbp - 0xa10], rax	       982	ftp.c	FUNCTION_18	IF_1	CALL_6
0x400135f	    0x4883bdf0f5ff	              cmp qword [rbp - 0xa10], 0	       983	ftp.c	FUNCTION_18	IF_1	IF_2
0x4001367	            0x750a	                           jne 0x4001373	       983	ftp.c	FUNCTION_18	IF_1	IF_2
0x4001369	      0xb81b000000	                           mov eax, 0x1b	       984	ftp.c	FUNCTION_18	IF_1	IF_2
0x400136e	      0xe95f0d0000	                           jmp 0x40020d2	       984	ftp.c	FUNCTION_18	IF_1	IF_2
0x4001373	    0x488b8538f6ff	            mov rax, qword [rbp - 0x9c8]	       987	ftp.c	FUNCTION_18	IF_1	IF_3
0x400137a	           0xfb600	                   movzx eax, byte [rax]	       987	ftp.c	FUNCTION_18	IF_1	IF_3
0x400137d	            0x3c5b	                            cmp al, 0x5b	       987	ftp.c	FUNCTION_18	IF_1	IF_3
0x400137f	            0x7570	                           jne 0x40013f1	       987	ftp.c	FUNCTION_18	IF_1	IF_3
0x4001381	    0x488b8538f6ff	            mov rax, qword [rbp - 0x9c8]	       989	ftp.c	FUNCTION_18	IF_1	IF_3
0x4001388	        0x4883c001	                              add rax, 1	       989	ftp.c	FUNCTION_18	IF_1	IF_3
0x400138c	    0x48898548f6ff	            mov qword [rbp - 0x9b8], rax	       989	ftp.c	FUNCTION_18	IF_1	IF_3
0x4001393	    0x488b8538f6ff	            mov rax, qword [rbp - 0x9c8]	       990	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_7
0x400139a	      0xbe5d000000	                           mov esi, 0x5d	       990	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_7
0x400139f	          0x4889c7	                            mov rdi, rax	       990	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_7
0x40013a2	      0xe800000000	                          call 0x40013a7	       990	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_7
0x40013a7	    0x488985f8f5ff	            mov qword [rbp - 0xa08], rax	       990	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_7
0x40013ae	    0x4883bdf8f5ff	              cmp qword [rbp - 0xa08], 0	       991	ftp.c	FUNCTION_18	IF_1	IF_3	IF_4
0x40013b6	     0xf8427010000	                            je 0x40014e3	       991	ftp.c	FUNCTION_18	IF_1	IF_3	IF_4
0x40013bc	    0x488b95f8f5ff	            mov rdx, qword [rbp - 0xa08]	       992	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_8
0x40013c3	    0x488b8548f6ff	            mov rax, qword [rbp - 0x9b8]	       992	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_8
0x40013ca	          0x4829c2	                            sub rdx, rax	       992	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_8
0x40013cd	          0x4889d0	                            mov rax, rdx	       992	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_8
0x40013d0	          0x4889c2	                            mov rdx, rax	       992	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_8
0x40013d3	    0x488b8d48f6ff	            mov rcx, qword [rbp - 0x9b8]	       992	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_8
0x40013da	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	       992	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_8
0x40013e1	          0x4889ce	                            mov rsi, rcx	       992	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_8
0x40013e4	          0x4889c7	                            mov rdi, rax	       992	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_8
0x40013e7	      0xe800000000	                          call 0x40013ec	       992	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_8
0x40013ec	      0xe9f2000000	                           jmp 0x40014e3	       992	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_8
0x40013f1	    0x488b8538f6ff	            mov rax, qword [rbp - 0x9c8]	       996	ftp.c	FUNCTION_18	IF_1	ELSE_1	IF_5
0x40013f8	           0xfb600	                   movzx eax, byte [rax]	       996	ftp.c	FUNCTION_18	IF_1	ELSE_1	IF_5
0x40013fb	            0x3c3a	                            cmp al, 0x3a	       996	ftp.c	FUNCTION_18	IF_1	ELSE_1	IF_5
0x40013fd	            0x7513	                           jne 0x4001412	       996	ftp.c	FUNCTION_18	IF_1	ELSE_1	IF_5
0x40013ff	    0x488b8538f6ff	            mov rax, qword [rbp - 0x9c8]	       998	ftp.c	FUNCTION_18	IF_1	ELSE_1	IF_5
0x4001406	    0x488985f8f5ff	            mov qword [rbp - 0xa08], rax	       998	ftp.c	FUNCTION_18	IF_1	ELSE_1	IF_5
0x400140d	      0xe9d1000000	                           jmp 0x40014e3	       998	ftp.c	FUNCTION_18	IF_1	ELSE_1	IF_5
0x4001412	    0x488b8538f6ff	            mov rax, qword [rbp - 0x9c8]	      1001	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_9
0x4001419	      0xbe3a000000	                           mov esi, 0x3a	      1001	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_9
0x400141e	          0x4889c7	                            mov rdi, rax	      1001	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_9
0x4001421	      0xe800000000	                          call 0x4001426	      1001	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_9
0x4001426	    0x488985f8f5ff	            mov qword [rbp - 0xa08], rax	      1001	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_9
0x400142d	    0x4883bdf8f5ff	              cmp qword [rbp - 0xa08], 0	      1002	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6
0x4001435	     0xf848f000000	                            je 0x40014ca	      1002	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6
0x400143b	    0x488b9530f6ff	            mov rdx, qword [rbp - 0x9d0]	      1005	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_10
0x4001442	    0x488b8538f6ff	            mov rax, qword [rbp - 0x9c8]	      1005	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_10
0x4001449	          0x4889c6	                            mov rsi, rax	      1005	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_10
0x400144c	      0xbf0a000000	                            mov edi, 0xa	      1005	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_10
0x4001451	      0xe800000000	                          call 0x4001456	      1005	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_10
0x4001456	          0x83f801	                              cmp eax, 1	      1005	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_10
0x4001459	            0x753d	                           jne 0x4001498	      1005	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_10
0x400145b	    0x66c785b8f5ff	               mov word [rbp - 0xa48], 0	      1007	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7
0x4001464	     0xfb785b8f5ff	           movzx eax, word [rbp - 0xa48]	      1007	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7
0x400146b	    0x668985b6f5ff	              mov word [rbp - 0xa4a], ax	      1007	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7
0x4001472	    0x488b9538f6ff	            mov rdx, qword [rbp - 0x9c8]	      1008	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_11
0x4001479	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      1008	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_11
0x4001480	          0x4889d6	                            mov rsi, rdx	      1008	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_11
0x4001483	          0x4889c7	                            mov rdi, rax	      1008	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_11
0x4001486	      0xe800000000	                          call 0x400148b	      1008	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_11
0x400148b	    0x48c785f8f5ff	              mov qword [rbp - 0xa08], 0	      1009	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7
0x4001496	            0xeb4b	                           jmp 0x40014e3	      1009	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7
0x4001498	    0x488b95f8f5ff	            mov rdx, qword [rbp - 0xa08]	      1014	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	CALL_12
0x400149f	    0x488b8548f6ff	            mov rax, qword [rbp - 0x9b8]	      1014	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	CALL_12
0x40014a6	          0x4829c2	                            sub rdx, rax	      1014	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	CALL_12
0x40014a9	          0x4889d0	                            mov rax, rdx	      1014	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	CALL_12
0x40014ac	          0x4889c2	                            mov rdx, rax	      1014	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	CALL_12
0x40014af	    0x488b8d38f6ff	            mov rcx, qword [rbp - 0x9c8]	      1014	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	CALL_12
0x40014b6	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      1014	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	CALL_12
0x40014bd	          0x4889ce	                            mov rsi, rcx	      1014	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	CALL_12
0x40014c0	          0x4889c7	                            mov rdi, rax	      1014	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	CALL_12
0x40014c3	      0xe800000000	                          call 0x40014c8	      1014	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	CALL_12
0x40014c8	            0xeb19	                           jmp 0x40014e3	      1014	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	CALL_12
0x40014ca	    0x488b9538f6ff	            mov rdx, qword [rbp - 0x9c8]	      1018	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_13
0x40014d1	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      1018	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_13
0x40014d8	          0x4889d6	                            mov rsi, rdx	      1018	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_13
0x40014db	          0x4889c7	                            mov rdi, rax	      1018	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_13
0x40014de	      0xe800000000	                          call 0x40014e3	      1018	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_13
0x40014e3	    0x4883bdf8f5ff	              cmp qword [rbp - 0xa08], 0	      1022	ftp.c	FUNCTION_18	IF_1	IF_8
0x40014eb	     0xf84b6000000	                            je 0x40015a7	      1022	ftp.c	FUNCTION_18	IF_1	IF_8
0x40014f1	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      1023	ftp.c	FUNCTION_18	IF_1	IF_8	CALL_14
0x40014f8	      0xbe3a000000	                           mov esi, 0x3a	      1023	ftp.c	FUNCTION_18	IF_1	IF_8	CALL_14
0x40014fd	          0x4889c7	                            mov rdi, rax	      1023	ftp.c	FUNCTION_18	IF_1	IF_8	CALL_14
0x4001500	      0xe800000000	                          call 0x4001505	      1023	ftp.c	FUNCTION_18	IF_1	IF_8	CALL_14
0x4001505	    0x48898550f6ff	            mov qword [rbp - 0x9b0], rax	      1023	ftp.c	FUNCTION_18	IF_1	IF_8	CALL_14
0x400150c	    0x4883bd50f6ff	              cmp qword [rbp - 0x9b0], 0	      1024	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9
0x4001514	     0xf848d000000	                            je 0x40015a7	      1024	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9
0x400151a	    0x488b8550f6ff	            mov rax, qword [rbp - 0x9b0]	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x4001521	        0x4883c001	                              add rax, 1	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x4001525	      0xba0a000000	                            mov edx, 0xa	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x400152a	      0xbe00000000	                              mov esi, 0	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x400152f	          0x4889c7	                            mov rdi, rax	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x4001532	      0xe800000000	                          call 0x4001537	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x4001537	          0x4889c7	                            mov rdi, rax	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x400153a	      0xe800000000	                          call 0x400153f	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x400153f	    0x668985b6f5ff	              mov word [rbp - 0xa4a], ax	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x4001546	    0x488b8550f6ff	            mov rax, qword [rbp - 0x9b0]	      1026	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_17
0x400154d	      0xbe2d000000	                           mov esi, 0x2d	      1026	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_17
0x4001552	          0x4889c7	                            mov rdi, rax	      1026	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_17
0x4001555	      0xe800000000	                          call 0x400155a	      1026	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_17
0x400155a	    0x48898558f6ff	            mov qword [rbp - 0x9a8], rax	      1026	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_17
0x4001561	    0x4883bd58f6ff	              cmp qword [rbp - 0x9a8], 0	      1027	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10
0x4001569	            0x742e	                            je 0x4001599	      1027	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10
0x400156b	    0x488b8558f6ff	            mov rax, qword [rbp - 0x9a8]	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x4001572	        0x4883c001	                              add rax, 1	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x4001576	      0xba0a000000	                            mov edx, 0xa	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x400157b	      0xbe00000000	                              mov esi, 0	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x4001580	          0x4889c7	                            mov rdi, rax	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x4001583	      0xe800000000	                          call 0x4001588	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x4001588	          0x4889c7	                            mov rdi, rax	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x400158b	      0xe800000000	                          call 0x4001590	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x4001590	    0x668985b8f5ff	              mov word [rbp - 0xa48], ax	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x4001597	            0xeb0e	                           jmp 0x40015a7	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x4001599	     0xfb785b6f5ff	           movzx eax, word [rbp - 0xa4a]	      1031	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	ELSE_5
0x40015a0	    0x668985b8f5ff	              mov word [rbp - 0xa48], ax	      1031	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	ELSE_5
0x40015a7	     0xfb785b6f5ff	           movzx eax, word [rbp - 0xa4a]	      1041	ftp.c	FUNCTION_18	IF_1	IF_11
0x40015ae	    0x663b85b8f5ff	              cmp ax, word [rbp - 0xa48]	      1041	ftp.c	FUNCTION_18	IF_1	IF_11
0x40015b5	            0x7617	                           jbe 0x40015ce	      1041	ftp.c	FUNCTION_18	IF_1	IF_11
0x40015b7	    0x66c785b8f5ff	               mov word [rbp - 0xa48], 0	      1042	ftp.c	FUNCTION_18	IF_1	IF_11
0x40015c0	     0xfb785b8f5ff	           movzx eax, word [rbp - 0xa48]	      1042	ftp.c	FUNCTION_18	IF_1	IF_11
0x40015c7	    0x668985b6f5ff	              mov word [rbp - 0xa4a], ax	      1042	ftp.c	FUNCTION_18	IF_1	IF_11
0x40015ce	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      1045	ftp.c	FUNCTION_18	IF_1	IF_12
0x40015d5	           0xfb600	                   movzx eax, byte [rax]	      1045	ftp.c	FUNCTION_18	IF_1	IF_12
0x40015d8	            0x84c0	                             test al, al	      1045	ftp.c	FUNCTION_18	IF_1	IF_12
0x40015da	     0xf8492000000	                            je 0x4001672	      1045	ftp.c	FUNCTION_18	IF_1	IF_12
0x40015e0	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x40015e7	    0x8b98c0000000	            mov ebx, dword [rax + 0xc0] 	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x40015ed	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1048	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_21
0x40015f4	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1048	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_21
0x40015f8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1048	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_21
0x40015fc	          0x4889c7	                            mov rdi, rax	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x40015ff	      0xe800000000	                          call 0x4001604	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001604	            0x89c6	                            mov esi, eax	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001606	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x400160d	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001611	          0x8b4004	                mov eax, dword [rax + 4]	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001614	    0x488d8de0fbff	                  lea rcx, [rbp - 0x420]	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x400161b	    0x488b95f0f5ff	            mov rdx, qword [rbp - 0xa10]	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001622	    0x41b901040000	                          mov r9d, 0x401	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001628	          0x4989c8	                             mov r8, rcx	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x400162b	          0x4889d1	                            mov rcx, rdx	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x400162e	            0x89da	                            mov edx, ebx	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001630	            0x89c7	                            mov edi, eax	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001632	      0xe800000000	                          call 0x4001637	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001637	          0x83f801	                              cmp eax, 1	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x400163a	            0x741c	                            je 0x4001658	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x400163c	          0x83f801	                              cmp eax, 1	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x400163f	            0x7207	                            jb 0x4001648	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001641	          0x83f802	                              cmp eax, 2	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001644	            0x741c	                            je 0x4001662	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001646	            0xeb35	                           jmp 0x400167d	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4001648	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      1052	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1
0x400164f	    0x488985e8f5ff	            mov qword [rbp - 0xa18], rax	      1052	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1
0x4001656	            0xeb25	                           jmp 0x400167d	      1053	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1
0x4001658	      0xb81e000000	                           mov eax, 0x1e	      1055	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1
0x400165d	      0xe9700a0000	                           jmp 0x40020d2	      1055	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1
0x4001662	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      1057	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1
0x4001669	    0x488985e8f5ff	            mov qword [rbp - 0xa18], rax	      1057	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1
0x4001670	            0xeb0b	                           jmp 0x400167d	      1057	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1
0x4001672	    0x48c785e8f5ff	              mov qword [rbp - 0xa18], 0	      1062	ftp.c	FUNCTION_18	IF_1	ELSE_6
0x400167d	    0x4883bde8f5ff	              cmp qword [rbp - 0xa18], 0	      1065	ftp.c	FUNCTION_18	ELSE_6	IF_13
0x4001685	     0xf8509010000	                           jne 0x4001794	      1065	ftp.c	FUNCTION_18	ELSE_6	IF_13
0x400168b	    0xc785c0f5ffff	          mov dword [rbp - 0xa40], 0x80 	      1069	ftp.c	FUNCTION_18	ELSE_6	IF_13
0x4001695	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x400169c	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x40016a2	    0x488d95c0f5ff	                  lea rdx, [rbp - 0xa40]	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x40016a9	    0x488b8d20f6ff	            mov rcx, qword [rbp - 0x9e0]	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x40016b0	          0x4889ce	                            mov rsi, rcx	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x40016b3	            0x89c7	                            mov edi, eax	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x40016b5	      0xe800000000	                          call 0x40016ba	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x40016ba	            0x85c0	                           test eax, eax	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x40016bc	            0x7456	                            je 0x4001714	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x40016be	      0xe800000000	                          call 0x40016c3	      1072	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_24
0x40016c3	            0x8b10	                    mov edx, dword [rax]	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x40016c5	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x40016cc	            0x89d6	                            mov esi, edx	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x40016ce	          0x4889c7	                            mov rdi, rax	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x40016d1	      0xe800000000	                          call 0x40016d6	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x40016d6	          0x4889c2	                            mov rdx, rax	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x40016d9	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x40016e0	    0x488d35000000	                   lea rsi, [0x040016e7]	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x40016e7	          0x4889c7	                            mov rdi, rax	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x40016ea	      0xb800000000	                              mov eax, 0	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x40016ef	      0xe800000000	                          call 0x40016f4	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x40016f4	    0x488b05000000	            mov rax, qword [0x040016fb] 	      1073	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_25
0x40016fb	          0x488b00	                    mov rax, qword [rax]	      1073	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_25
0x40016fe	    0x488b95f0f5ff	            mov rdx, qword [rbp - 0xa10]	      1073	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_25
0x4001705	          0x4889d7	                            mov rdi, rdx	      1073	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_25
0x4001708	            0xffd0	                                call rax	      1073	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_25
0x400170a	      0xb81e000000	                           mov eax, 0x1e	      1074	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14
0x400170f	      0xe9be090000	                           jmp 0x40020d2	      1074	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14
0x4001714	    0x488b8520f6ff	            mov rax, qword [rbp - 0x9e0]	      1076	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x400171b	           0xfb700	                   movzx eax, word [rax]	      1076	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x400171e	           0xfb7c0	                           movzx eax, ax	      1076	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x4001721	          0x83f80a	                            cmp eax, 0xa	      1076	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x4001724	            0x752d	                           jne 0x4001753	      1076	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x4001726	    0x488b8530f6ff	            mov rax, qword [rbp - 0x9d0]	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x400172d	        0x488d7008	                      lea rsi, [rax + 8]	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x4001731	    0x488b8520f6ff	            mov rax, qword [rbp - 0x9e0]	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x4001738	           0xfb700	                   movzx eax, word [rax]	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x400173b	           0xfb7c0	                           movzx eax, ax	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x400173e	    0x488d95e0fbff	                  lea rdx, [rbp - 0x420]	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x4001745	      0xb901040000	                          mov ecx, 0x401	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x400174a	            0x89c7	                            mov edi, eax	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x400174c	      0xe800000000	                          call 0x4001751	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x4001751	            0xeb2c	                           jmp 0x400177f	      1080	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x4001753	    0x488b8528f6ff	            mov rax, qword [rbp - 0x9d8]	      1083	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_27
0x400175a	        0x488d7004	                      lea rsi, [rax + 4]	      1083	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_27
0x400175e	    0x488b8520f6ff	            mov rax, qword [rbp - 0x9e0]	      1083	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_27
0x4001765	           0xfb700	                   movzx eax, word [rax]	      1083	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_27
0x4001768	           0xfb7c0	                           movzx eax, ax	      1083	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_27
0x400176b	    0x488d95e0fbff	                  lea rdx, [rbp - 0x420]	      1083	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_27
0x4001772	      0xb901040000	                          mov ecx, 0x401	      1083	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_27
0x4001777	            0x89c7	                            mov edi, eax	      1083	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_27
0x4001779	      0xe800000000	                          call 0x400177e	      1083	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_27
0x400177e	              0x90	                                     nop	      1084	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x400177f	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      1086	ftp.c	FUNCTION_18	ELSE_6	IF_13
0x4001786	    0x488985e8f5ff	            mov qword [rbp - 0xa18], rax	      1086	ftp.c	FUNCTION_18	ELSE_6	IF_13
0x400178d	    0xc685b5f5ffff	               mov byte [rbp - 0xa4b], 0	      1087	ftp.c	FUNCTION_18	ELSE_6	IF_13
0x4001794	    0x488d95d0f5ff	                  lea rdx, [rbp - 0xa30]	      1091	ftp.c	FUNCTION_18	CALL_28
0x400179b	    0x488bb5e8f5ff	            mov rsi, qword [rbp - 0xa18]	      1091	ftp.c	FUNCTION_18	CALL_28
0x40017a2	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1091	ftp.c	FUNCTION_18	CALL_28
0x40017a9	          0x4889d1	                            mov rcx, rdx	      1091	ftp.c	FUNCTION_18	CALL_28
0x40017ac	      0xba00000000	                              mov edx, 0	      1091	ftp.c	FUNCTION_18	CALL_28
0x40017b1	          0x4889c7	                            mov rdi, rax	      1091	ftp.c	FUNCTION_18	CALL_28
0x40017b4	      0xe800000000	                          call 0x40017b9	      1091	ftp.c	FUNCTION_18	CALL_28
0x40017b9	    0x8985ccf5ffff	            mov dword [rbp - 0xa34], eax	      1091	ftp.c	FUNCTION_18	CALL_28
0x40017bf	    0x83bdccf5ffff	              cmp dword [rbp - 0xa34], 1	      1092	ftp.c	FUNCTION_18	IF_15
0x40017c6	            0x7519	                           jne 0x40017e1	      1092	ftp.c	FUNCTION_18	IF_15
0x40017c8	    0x488d95d0f5ff	                  lea rdx, [rbp - 0xa30]	      1093	ftp.c	FUNCTION_18	CALL_29
0x40017cf	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1093	ftp.c	FUNCTION_18	CALL_29
0x40017d6	          0x4889d6	                            mov rsi, rdx	      1093	ftp.c	FUNCTION_18	CALL_29
0x40017d9	          0x4889c7	                            mov rdi, rax	      1093	ftp.c	FUNCTION_18	CALL_29
0x40017dc	      0xe800000000	                          call 0x40017e1	      1093	ftp.c	FUNCTION_18	CALL_29
0x40017e1	    0x488b85d0f5ff	            mov rax, qword [rbp - 0xa30]	      1094	ftp.c	FUNCTION_18	IF_16
0x40017e8	          0x4885c0	                           test rax, rax	      1094	ftp.c	FUNCTION_18	IF_16
0x40017eb	            0x742c	                            je 0x4001819	      1094	ftp.c	FUNCTION_18	IF_16
0x40017ed	    0x488b85d0f5ff	            mov rax, qword [rbp - 0xa30]	      1095	ftp.c	FUNCTION_18	IF_16
0x40017f4	          0x488b00	                    mov rax, qword [rax]	      1095	ftp.c	FUNCTION_18	IF_16
0x40017f7	    0x488985d8f5ff	            mov qword [rbp - 0xa28], rax	      1095	ftp.c	FUNCTION_18	IF_16
0x40017fe	    0x488b95d0f5ff	            mov rdx, qword [rbp - 0xa30]	      1098	ftp.c	FUNCTION_18	IF_16	CALL_30
0x4001805	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1098	ftp.c	FUNCTION_18	IF_16	CALL_30
0x400180c	          0x4889d6	                            mov rsi, rdx	      1098	ftp.c	FUNCTION_18	IF_16	CALL_30
0x400180f	          0x4889c7	                            mov rdi, rax	      1098	ftp.c	FUNCTION_18	IF_16	CALL_30
0x4001812	      0xe800000000	                          call 0x4001817	      1098	ftp.c	FUNCTION_18	IF_16	CALL_30
0x4001817	            0xeb0b	                           jmp 0x4001824	      1098	ftp.c	FUNCTION_18	IF_16	CALL_30
0x4001819	    0x48c785d8f5ff	              mov qword [rbp - 0xa28], 0	      1101	ftp.c	FUNCTION_18	ELSE_7
0x4001824	    0x4883bdd8f5ff	              cmp qword [rbp - 0xa28], 0	      1103	ftp.c	FUNCTION_18	ELSE_7	IF_17
0x400182c	            0x7542	                           jne 0x4001870	      1103	ftp.c	FUNCTION_18	ELSE_7	IF_17
0x400182e	    0x488b95e8f5ff	            mov rdx, qword [rbp - 0xa18]	      1104	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_31
0x4001835	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1104	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_31
0x400183c	    0x488d35000000	                   lea rsi, [0x04001843]	      1104	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_31
0x4001843	          0x4889c7	                            mov rdi, rax	      1104	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_31
0x4001846	      0xb800000000	                              mov eax, 0	      1104	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_31
0x400184b	      0xe800000000	                          call 0x4001850	      1104	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_31
0x4001850	    0x488b05000000	            mov rax, qword [0x04001857] 	      1105	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_32
0x4001857	          0x488b00	                    mov rax, qword [rax]	      1105	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_32
0x400185a	    0x488b95f0f5ff	            mov rdx, qword [rbp - 0xa10]	      1105	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_32
0x4001861	          0x4889d7	                            mov rdi, rdx	      1105	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_32
0x4001864	            0xffd0	                                call rax	      1105	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_32
0x4001866	      0xb81e000000	                           mov eax, 0x1e	      1106	ftp.c	FUNCTION_18	ELSE_7	IF_17
0x400186b	      0xe962080000	                           jmp 0x40020d2	      1106	ftp.c	FUNCTION_18	ELSE_7	IF_17
0x4001870	    0x488b05000000	            mov rax, qword [0x04001877] 	      1109	ftp.c	FUNCTION_18	CALL_33
0x4001877	          0x488b00	                    mov rax, qword [rax]	      1109	ftp.c	FUNCTION_18	CALL_33
0x400187a	    0x488b95f0f5ff	            mov rdx, qword [rbp - 0xa10]	      1109	ftp.c	FUNCTION_18	CALL_33
0x4001881	          0x4889d7	                            mov rdi, rdx	      1109	ftp.c	FUNCTION_18	CALL_33
0x4001884	            0xffd0	                                call rax	      1109	ftp.c	FUNCTION_18	CALL_33
0x4001886	    0x48c785e8f5ff	              mov qword [rbp - 0xa18], 0	      1110	ftp.c	FUNCTION_18
0x4001891	    0xc785bcf5ffff	    mov dword [rbp - 0xa44], 0xffffffff 	      1114	ftp.c	FUNCTION_18
0x400189b	    0xc785c8f5ffff	              mov dword [rbp - 0xa38], 0	      1115	ftp.c	FUNCTION_18
0x40018a5	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      1116	ftp.c	FUNCTION_18	FOR_1
0x40018ac	    0x488985e0f5ff	            mov qword [rbp - 0xa20], rax	      1116	ftp.c	FUNCTION_18	FOR_1
0x40018b3	            0xeb53	                           jmp 0x4001908	      1116	ftp.c	FUNCTION_18	FOR_1
0x40018b5	    0x488d95bcf5ff	                  lea rdx, [rbp - 0xa44]	      1117	ftp.c	FUNCTION_18	FOR_1	CALL_34
0x40018bc	    0x488bb5e0f5ff	            mov rsi, qword [rbp - 0xa20]	      1117	ftp.c	FUNCTION_18	FOR_1	CALL_34
0x40018c3	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1117	ftp.c	FUNCTION_18	FOR_1	CALL_34
0x40018ca	          0x4889d1	                            mov rcx, rdx	      1117	ftp.c	FUNCTION_18	FOR_1	CALL_34
0x40018cd	      0xba00000000	                              mov edx, 0	      1117	ftp.c	FUNCTION_18	FOR_1	CALL_34
0x40018d2	          0x4889c7	                            mov rdi, rax	      1117	ftp.c	FUNCTION_18	FOR_1	CALL_34
0x40018d5	      0xe800000000	                          call 0x40018da	      1117	ftp.c	FUNCTION_18	FOR_1	CALL_34
0x40018da	    0x8985c4f5ffff	            mov dword [rbp - 0xa3c], eax	      1117	ftp.c	FUNCTION_18	FOR_1	CALL_34
0x40018e0	    0x83bdc4f5ffff	              cmp dword [rbp - 0xa3c], 0	      1118	ftp.c	FUNCTION_18	FOR_1	IF_18
0x40018e7	            0x742b	                            je 0x4001914	      1118	ftp.c	FUNCTION_18	FOR_1	IF_18
0x40018e9	      0xe800000000	                          call 0x40018ee	      1119	ftp.c	FUNCTION_18	FOR_1	IF_18
0x40018ee	            0x8b00	                    mov eax, dword [rax]	      1119	ftp.c	FUNCTION_18	FOR_1	IF_18
0x40018f0	    0x8985c8f5ffff	            mov dword [rbp - 0xa38], eax	      1119	ftp.c	FUNCTION_18	FOR_1	IF_18
0x40018f6	    0x488b85e0f5ff	            mov rax, qword [rbp - 0xa20]	      1116	ftp.c	FUNCTION_18	FOR_1
0x40018fd	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1116	ftp.c	FUNCTION_18	FOR_1
0x4001901	    0x488985e0f5ff	            mov qword [rbp - 0xa20], rax	      1116	ftp.c	FUNCTION_18	FOR_1
0x4001908	    0x4883bde0f5ff	              cmp qword [rbp - 0xa20], 0	      1116	ftp.c	FUNCTION_18	FOR_1
0x4001910	            0x75a3	                           jne 0x40018b5	      1116	ftp.c	FUNCTION_18	FOR_1
0x4001912	            0xeb01	                           jmp 0x4001915	      1116	ftp.c	FUNCTION_18	FOR_1
0x4001914	              0x90	                                     nop	      1122	ftp.c	FUNCTION_18	FOR_1
0x4001915	    0x4883bde0f5ff	              cmp qword [rbp - 0xa20], 0	      1124	ftp.c	FUNCTION_18	IF_19
0x400191d	            0x753f	                           jne 0x400195e	      1124	ftp.c	FUNCTION_18	IF_19
0x400191f	    0x8b95c8f5ffff	            mov edx, dword [rbp - 0xa38]	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x4001925	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x400192c	            0x89d6	                            mov esi, edx	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x400192e	          0x4889c7	                            mov rdi, rax	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x4001931	      0xe800000000	                          call 0x4001936	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x4001936	          0x4889c2	                            mov rdx, rax	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x4001939	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x4001940	    0x488d35000000	                   lea rsi, [0x04001947]	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x4001947	          0x4889c7	                            mov rdi, rax	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x400194a	      0xb800000000	                              mov eax, 0	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x400194f	      0xe800000000	                          call 0x4001954	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x4001954	      0xb81e000000	                           mov eax, 0x1e	      1126	ftp.c	FUNCTION_18	IF_19
0x4001959	      0xe974070000	                           jmp 0x40020d2	      1126	ftp.c	FUNCTION_18	IF_19
0x400195e	    0x488b85e0f5ff	            mov rax, qword [rbp - 0xa20]	      1131	ftp.c	FUNCTION_18	CALL_37
0x4001965	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1131	ftp.c	FUNCTION_18	CALL_37
0x4001968	            0x89c2	                            mov edx, eax	      1131	ftp.c	FUNCTION_18	CALL_37
0x400196a	    0x488b85e0f5ff	            mov rax, qword [rbp - 0xa20]	      1131	ftp.c	FUNCTION_18	CALL_37
0x4001971	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      1131	ftp.c	FUNCTION_18	CALL_37
0x4001975	    0x488b8520f6ff	            mov rax, qword [rbp - 0x9e0]	      1131	ftp.c	FUNCTION_18	CALL_37
0x400197c	          0x4889ce	                            mov rsi, rcx	      1131	ftp.c	FUNCTION_18	CALL_37
0x400197f	          0x4889c7	                            mov rdi, rax	      1131	ftp.c	FUNCTION_18	CALL_37
0x4001982	      0xe800000000	                          call 0x4001987	      1131	ftp.c	FUNCTION_18	CALL_37
0x4001987	    0x488b85e0f5ff	            mov rax, qword [rbp - 0xa20]	      1132	ftp.c	FUNCTION_18
0x400198e	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1132	ftp.c	FUNCTION_18
0x4001991	    0x8985c0f5ffff	            mov dword [rbp - 0xa40], eax	      1132	ftp.c	FUNCTION_18
0x4001997	     0xfb785b6f5ff	           movzx eax, word [rbp - 0xa4a]	      1134	ftp.c	FUNCTION_18	FOR_2
0x400199e	    0x668985baf5ff	              mov word [rbp - 0xa46], ax	      1134	ftp.c	FUNCTION_18	FOR_2
0x40019a5	      0xe9f4010000	                           jmp 0x4001b9e	      1134	ftp.c	FUNCTION_18	FOR_2
0x40019aa	    0x488b8520f6ff	            mov rax, qword [rbp - 0x9e0]	      1135	ftp.c	FUNCTION_18	FOR_2	IF_20
0x40019b1	           0xfb700	                   movzx eax, word [rax]	      1135	ftp.c	FUNCTION_18	FOR_2	IF_20
0x40019b4	        0x6683f802	                               cmp ax, 2	      1135	ftp.c	FUNCTION_18	FOR_2	IF_20
0x40019b8	            0x751d	                           jne 0x40019d7	      1135	ftp.c	FUNCTION_18	FOR_2	IF_20
0x40019ba	     0xfb785baf5ff	           movzx eax, word [rbp - 0xa46]	      1136	ftp.c	FUNCTION_18	FOR_2	CALL_38
0x40019c1	            0x89c7	                            mov edi, eax	      1136	ftp.c	FUNCTION_18	FOR_2	CALL_38
0x40019c3	      0xe800000000	                          call 0x40019c8	      1136	ftp.c	FUNCTION_18	FOR_2	CALL_38
0x40019c8	            0x89c2	                            mov edx, eax	      1136	ftp.c	FUNCTION_18	FOR_2	CALL_38
0x40019ca	    0x488b8528f6ff	            mov rax, qword [rbp - 0x9d8]	      1136	ftp.c	FUNCTION_18	FOR_2	CALL_38
0x40019d1	        0x66895002	                  mov word [rax + 2], dx	      1136	ftp.c	FUNCTION_18	FOR_2	CALL_38
0x40019d5	            0xeb1b	                           jmp 0x40019f2	      1136	ftp.c	FUNCTION_18	FOR_2	CALL_38
0x40019d7	     0xfb785baf5ff	           movzx eax, word [rbp - 0xa46]	      1139	ftp.c	FUNCTION_18	FOR_2	CALL_39
0x40019de	            0x89c7	                            mov edi, eax	      1139	ftp.c	FUNCTION_18	FOR_2	CALL_39
0x40019e0	      0xe800000000	                          call 0x40019e5	      1139	ftp.c	FUNCTION_18	FOR_2	CALL_39
0x40019e5	            0x89c2	                            mov edx, eax	      1139	ftp.c	FUNCTION_18	FOR_2	CALL_39
0x40019e7	    0x488b8530f6ff	            mov rax, qword [rbp - 0x9d0]	      1139	ftp.c	FUNCTION_18	FOR_2	CALL_39
0x40019ee	        0x66895002	                  mov word [rax + 2], dx	      1139	ftp.c	FUNCTION_18	FOR_2	CALL_39
0x40019f2	    0x8b95c0f5ffff	            mov edx, dword [rbp - 0xa40]	      1142	ftp.c	FUNCTION_18	FOR_2	IF_21	CALL_40
0x40019f8	    0x8b85bcf5ffff	            mov eax, dword [rbp - 0xa44]	      1142	ftp.c	FUNCTION_18	FOR_2	IF_21	CALL_40
0x40019fe	    0x488b8d20f6ff	            mov rcx, qword [rbp - 0x9e0]	      1142	ftp.c	FUNCTION_18	FOR_2	IF_21	CALL_40
0x4001a05	          0x4889ce	                            mov rsi, rcx	      1142	ftp.c	FUNCTION_18	FOR_2	IF_21	CALL_40
0x4001a08	            0x89c7	                            mov edi, eax	      1142	ftp.c	FUNCTION_18	FOR_2	IF_21	CALL_40
0x4001a0a	      0xe800000000	                          call 0x4001a0f	      1142	ftp.c	FUNCTION_18	FOR_2	IF_21	CALL_40
0x4001a0f	            0x85c0	                           test eax, eax	      1142	ftp.c	FUNCTION_18	FOR_2	IF_21	CALL_40
0x4001a11	     0xf849d010000	                            je 0x4001bb4	      1142	ftp.c	FUNCTION_18	FOR_2	IF_21	CALL_40
0x4001a17	      0xe800000000	                          call 0x4001a1c	      1144	ftp.c	FUNCTION_18	FOR_2	IF_21
0x4001a1c	            0x8b00	                    mov eax, dword [rax]	      1144	ftp.c	FUNCTION_18	FOR_2	IF_21
0x4001a1e	    0x8985c8f5ffff	            mov dword [rbp - 0xa38], eax	      1144	ftp.c	FUNCTION_18	FOR_2	IF_21
0x4001a24	    0x80bdb5f5ffff	               cmp byte [rbp - 0xa4b], 0	      1145	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4001a2b	     0xf84ed000000	                            je 0x4001b1e	      1145	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4001a31	    0x83bdc8f5ffff	          cmp dword [rbp - 0xa38], 0x63 	      1145	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4001a38	     0xf85e0000000	                           jne 0x4001b1e	      1145	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4001a3e	    0x8b95c8f5ffff	            mov edx, dword [rbp - 0xa38]	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a44	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a4b	            0x89d6	                            mov esi, edx	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a4d	          0x4889c7	                            mov rdi, rax	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a50	      0xe800000000	                          call 0x4001a55	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a55	          0x4889c1	                            mov rcx, rax	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a58	     0xfb795baf5ff	           movzx edx, word [rbp - 0xa46]	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a5f	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a66	    0x488d35000000	                   lea rsi, [0x04001a6d]	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a6d	          0x4889c7	                            mov rdi, rax	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a70	      0xb800000000	                              mov eax, 0	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a75	      0xe800000000	                          call 0x4001a7a	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4001a7a	    0xc785c0f5ffff	          mov dword [rbp - 0xa40], 0x80 	      1153	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4001a84	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4001a8b	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4001a91	    0x488d95c0f5ff	                  lea rdx, [rbp - 0xa40]	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4001a98	    0x488b8d20f6ff	            mov rcx, qword [rbp - 0x9e0]	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4001a9f	          0x4889ce	                            mov rsi, rcx	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4001aa2	            0x89c7	                            mov edi, eax	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4001aa4	      0xe800000000	                          call 0x4001aa9	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4001aa9	            0x85c0	                           test eax, eax	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4001aab	            0x7457	                            je 0x4001b04	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4001aad	      0xe800000000	                          call 0x4001ab2	      1156	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_45
0x4001ab2	            0x8b10	                    mov edx, dword [rax]	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4001ab4	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4001abb	            0x89d6	                            mov esi, edx	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4001abd	          0x4889c7	                            mov rdi, rax	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4001ac0	      0xe800000000	                          call 0x4001ac5	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4001ac5	          0x4889c2	                            mov rdx, rax	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4001ac8	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4001acf	    0x488d35000000	                   lea rsi, [0x04001ad6]	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4001ad6	          0x4889c7	                            mov rdi, rax	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4001ad9	      0xb800000000	                              mov eax, 0	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4001ade	      0xe800000000	                          call 0x4001ae3	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4001ae3	    0x8b95bcf5ffff	            mov edx, dword [rbp - 0xa44]	      1157	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_46
0x4001ae9	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1157	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_46
0x4001af0	            0x89d6	                            mov esi, edx	      1157	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_46
0x4001af2	          0x4889c7	                            mov rdi, rax	      1157	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_46
0x4001af5	      0xe800000000	                          call 0x4001afa	      1157	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_46
0x4001afa	      0xb81e000000	                           mov eax, 0x1e	      1158	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23
0x4001aff	      0xe9ce050000	                           jmp 0x40020d2	      1158	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23
0x4001b04	     0xfb785b6f5ff	           movzx eax, word [rbp - 0xa4a]	      1160	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4001b0b	    0x668985baf5ff	              mov word [rbp - 0xa46], ax	      1160	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4001b12	    0xc685b5f5ffff	               mov byte [rbp - 0xa4b], 0	      1161	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4001b19	      0xe980000000	                           jmp 0x4001b9e	      1162	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4001b1e	    0x83bdc8f5ffff	          cmp dword [rbp - 0xa38], 0x62 	      1164	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24
0x4001b25	            0x7466	                            je 0x4001b8d	      1164	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24
0x4001b27	    0x83bdc8f5ffff	           cmp dword [rbp - 0xa38], 0xd 	      1164	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24
0x4001b2e	            0x745d	                            je 0x4001b8d	      1164	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24
0x4001b30	    0x8b95c8f5ffff	            mov edx, dword [rbp - 0xa38]	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b36	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b3d	            0x89d6	                            mov esi, edx	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b3f	          0x4889c7	                            mov rdi, rax	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b42	      0xe800000000	                          call 0x4001b47	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b47	          0x4889c1	                            mov rcx, rax	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b4a	     0xfb795baf5ff	           movzx edx, word [rbp - 0xa46]	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b51	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b58	    0x488d35000000	                   lea rsi, [0x04001b5f]	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b5f	          0x4889c7	                            mov rdi, rax	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b62	      0xb800000000	                              mov eax, 0	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b67	      0xe800000000	                          call 0x4001b6c	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4001b6c	    0x8b95bcf5ffff	            mov edx, dword [rbp - 0xa44]	      1167	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_49
0x4001b72	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1167	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_49
0x4001b79	            0x89d6	                            mov esi, edx	      1167	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_49
0x4001b7b	          0x4889c7	                            mov rdi, rax	      1167	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_49
0x4001b7e	      0xe800000000	                          call 0x4001b83	      1167	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_49
0x4001b83	      0xb81e000000	                           mov eax, 0x1e	      1168	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24
0x4001b88	      0xe945050000	                           jmp 0x40020d2	      1168	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24
0x4001b8d	     0xfb785baf5ff	           movzx eax, word [rbp - 0xa46]	      1174	ftp.c	FUNCTION_18	FOR_2	ELSE_9
0x4001b94	          0x83c001	                              add eax, 1	      1174	ftp.c	FUNCTION_18	FOR_2	ELSE_9
0x4001b97	    0x668985baf5ff	              mov word [rbp - 0xa46], ax	      1174	ftp.c	FUNCTION_18	FOR_2	ELSE_9
0x4001b9e	     0xfb785baf5ff	           movzx eax, word [rbp - 0xa46]	      1134	ftp.c	FUNCTION_18	FOR_2
0x4001ba5	    0x663b85b8f5ff	              cmp ax, word [rbp - 0xa48]	      1134	ftp.c	FUNCTION_18	FOR_2
0x4001bac	     0xf86f8fdffff	                           jbe 0x40019aa	      1134	ftp.c	FUNCTION_18	FOR_2
0x4001bb2	            0xeb01	                           jmp 0x4001bb5	      1134	ftp.c	FUNCTION_18	FOR_2
0x4001bb4	              0x90	                                     nop	      1172	ftp.c	FUNCTION_18	FOR_2	ELSE_9
0x4001bb5	     0xfb785baf5ff	           movzx eax, word [rbp - 0xa46]	      1178	ftp.c	FUNCTION_18	ELSE_9	IF_25
0x4001bbc	    0x663b85b8f5ff	              cmp ax, word [rbp - 0xa48]	      1178	ftp.c	FUNCTION_18	ELSE_9	IF_25
0x4001bc3	            0x763c	                           jbe 0x4001c01	      1178	ftp.c	FUNCTION_18	ELSE_9	IF_25
0x4001bc5	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1179	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_50
0x4001bcc	    0x488d35000000	                   lea rsi, [0x04001bd3]	      1179	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_50
0x4001bd3	          0x4889c7	                            mov rdi, rax	      1179	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_50
0x4001bd6	      0xb800000000	                              mov eax, 0	      1179	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_50
0x4001bdb	      0xe800000000	                          call 0x4001be0	      1179	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_50
0x4001be0	    0x8b95bcf5ffff	            mov edx, dword [rbp - 0xa44]	      1180	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_51
0x4001be6	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1180	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_51
0x4001bed	            0x89d6	                            mov esi, edx	      1180	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_51
0x4001bef	          0x4889c7	                            mov rdi, rax	      1180	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_51
0x4001bf2	      0xe800000000	                          call 0x4001bf7	      1180	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_51
0x4001bf7	      0xb81e000000	                           mov eax, 0x1e	      1181	ftp.c	FUNCTION_18	ELSE_9	IF_25
0x4001bfc	      0xe9d1040000	                           jmp 0x40020d2	      1181	ftp.c	FUNCTION_18	ELSE_9	IF_25
0x4001c01	    0xc785c0f5ffff	          mov dword [rbp - 0xa40], 0x80 	      1186	ftp.c	FUNCTION_18
0x4001c0b	    0x8b85bcf5ffff	            mov eax, dword [rbp - 0xa44]	      1187	ftp.c	FUNCTION_18	IF_26	CALL_52
0x4001c11	    0x488d95c0f5ff	                  lea rdx, [rbp - 0xa40]	      1187	ftp.c	FUNCTION_18	IF_26	CALL_52
0x4001c18	    0x488b8d20f6ff	            mov rcx, qword [rbp - 0x9e0]	      1187	ftp.c	FUNCTION_18	IF_26	CALL_52
0x4001c1f	          0x4889ce	                            mov rsi, rcx	      1187	ftp.c	FUNCTION_18	IF_26	CALL_52
0x4001c22	            0x89c7	                            mov edi, eax	      1187	ftp.c	FUNCTION_18	IF_26	CALL_52
0x4001c24	      0xe800000000	                          call 0x4001c29	      1187	ftp.c	FUNCTION_18	IF_26	CALL_52
0x4001c29	            0x85c0	                           test eax, eax	      1187	ftp.c	FUNCTION_18	IF_26	CALL_52
0x4001c2b	            0x7457	                            je 0x4001c84	      1187	ftp.c	FUNCTION_18	IF_26	CALL_52
0x4001c2d	      0xe800000000	                          call 0x4001c32	      1189	ftp.c	FUNCTION_18	IF_26	CALL_54
0x4001c32	            0x8b10	                    mov edx, dword [rax]	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4001c34	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4001c3b	            0x89d6	                            mov esi, edx	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4001c3d	          0x4889c7	                            mov rdi, rax	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4001c40	      0xe800000000	                          call 0x4001c45	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4001c45	          0x4889c2	                            mov rdx, rax	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4001c48	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4001c4f	    0x488d35000000	                   lea rsi, [0x04001c56]	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4001c56	          0x4889c7	                            mov rdi, rax	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4001c59	      0xb800000000	                              mov eax, 0	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4001c5e	      0xe800000000	                          call 0x4001c63	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4001c63	    0x8b95bcf5ffff	            mov edx, dword [rbp - 0xa44]	      1190	ftp.c	FUNCTION_18	IF_26	CALL_55
0x4001c69	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1190	ftp.c	FUNCTION_18	IF_26	CALL_55
0x4001c70	            0x89d6	                            mov esi, edx	      1190	ftp.c	FUNCTION_18	IF_26	CALL_55
0x4001c72	          0x4889c7	                            mov rdi, rax	      1190	ftp.c	FUNCTION_18	IF_26	CALL_55
0x4001c75	      0xe800000000	                          call 0x4001c7a	      1190	ftp.c	FUNCTION_18	IF_26	CALL_55
0x4001c7a	      0xb81e000000	                           mov eax, 0x1e	      1191	ftp.c	FUNCTION_18	IF_26
0x4001c7f	      0xe94e040000	                           jmp 0x40020d2	      1191	ftp.c	FUNCTION_18	IF_26
0x4001c84	    0x8b85bcf5ffff	            mov eax, dword [rbp - 0xa44]	      1196	ftp.c	FUNCTION_18	IF_27	CALL_56
0x4001c8a	      0xbe01000000	                              mov esi, 1	      1196	ftp.c	FUNCTION_18	IF_27	CALL_56
0x4001c8f	            0x89c7	                            mov edi, eax	      1196	ftp.c	FUNCTION_18	IF_27	CALL_56
0x4001c91	      0xe800000000	                          call 0x4001c96	      1196	ftp.c	FUNCTION_18	IF_27	CALL_56
0x4001c96	            0x85c0	                           test eax, eax	      1196	ftp.c	FUNCTION_18	IF_27	CALL_56
0x4001c98	            0x7457	                            je 0x4001cf1	      1196	ftp.c	FUNCTION_18	IF_27	CALL_56
0x4001c9a	      0xe800000000	                          call 0x4001c9f	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001c9f	            0x8b10	                    mov edx, dword [rax]	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001ca1	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001ca8	            0x89d6	                            mov esi, edx	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001caa	          0x4889c7	                            mov rdi, rax	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001cad	      0xe800000000	                          call 0x4001cb2	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001cb2	          0x4889c2	                            mov rdx, rax	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001cb5	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001cbc	    0x488d35000000	                   lea rsi, [0x04001cc3]	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001cc3	          0x4889c7	                            mov rdi, rax	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001cc6	      0xb800000000	                              mov eax, 0	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001ccb	      0xe800000000	                          call 0x4001cd0	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4001cd0	    0x8b95bcf5ffff	            mov edx, dword [rbp - 0xa44]	      1198	ftp.c	FUNCTION_18	IF_27	CALL_59
0x4001cd6	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1198	ftp.c	FUNCTION_18	IF_27	CALL_59
0x4001cdd	            0x89d6	                            mov esi, edx	      1198	ftp.c	FUNCTION_18	IF_27	CALL_59
0x4001cdf	          0x4889c7	                            mov rdi, rax	      1198	ftp.c	FUNCTION_18	IF_27	CALL_59
0x4001ce2	      0xe800000000	                          call 0x4001ce7	      1198	ftp.c	FUNCTION_18	IF_27	CALL_59
0x4001ce7	      0xb81e000000	                           mov eax, 0x1e	      1199	ftp.c	FUNCTION_18	IF_27
0x4001cec	      0xe9e1030000	                           jmp 0x40020d2	      1199	ftp.c	FUNCTION_18	IF_27
0x4001cf1	    0x488d8de0f6ff	                  lea rcx, [rbp - 0x920]	      1206	ftp.c	FUNCTION_18	CALL_60
0x4001cf8	    0x488b85e0f5ff	            mov rax, qword [rbp - 0xa20]	      1206	ftp.c	FUNCTION_18	CALL_60
0x4001cff	      0xba00010000	                          mov edx, 0x100	      1206	ftp.c	FUNCTION_18	CALL_60
0x4001d04	          0x4889ce	                            mov rsi, rcx	      1206	ftp.c	FUNCTION_18	CALL_60
0x4001d07	          0x4889c7	                            mov rdi, rax	      1206	ftp.c	FUNCTION_18	CALL_60
0x4001d0a	      0xe800000000	                          call 0x4001d0f	      1206	ftp.c	FUNCTION_18	CALL_60
0x4001d0f	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1209	ftp.c	FUNCTION_18	IF_28
0x4001d16	     0xfb680ad0300	          movzx eax, byte [rax + 0x3ad] 	      1209	ftp.c	FUNCTION_18	IF_28
0x4001d1d	          0x83f001	                              xor eax, 1	      1209	ftp.c	FUNCTION_18	IF_28
0x4001d20	            0x84c0	                             test al, al	      1209	ftp.c	FUNCTION_18	IF_28
0x4001d22	     0xf843a030000	                            je 0x4002062	      1209	ftp.c	FUNCTION_18	IF_28
0x4001d28	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1209	ftp.c	FUNCTION_18	IF_28
0x4001d2f	     0xfb680a30300	          movzx eax, byte [rax + 0x3a3] 	      1209	ftp.c	FUNCTION_18	IF_28
0x4001d36	            0x84c0	                             test al, al	      1209	ftp.c	FUNCTION_18	IF_28
0x4001d38	     0xf8424030000	                            je 0x4002062	      1209	ftp.c	FUNCTION_18	IF_28
0x4001d3e	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1212	ftp.c	FUNCTION_18	IF_28
0x4001d45	    0xc680ad030000	               mov byte [rax + 0x3ad], 1	      1212	ftp.c	FUNCTION_18	IF_28
0x4001d4c	      0xe911030000	                           jmp 0x4002062	      1215	ftp.c	FUNCTION_18	FOR_3
0x4001d51	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1217	ftp.c	FUNCTION_18	FOR_3	IF_29
0x4001d58	     0xfb680ad0300	          movzx eax, byte [rax + 0x3ad] 	      1217	ftp.c	FUNCTION_18	FOR_3	IF_29
0x4001d5f	          0x83f001	                              xor eax, 1	      1217	ftp.c	FUNCTION_18	FOR_3	IF_29
0x4001d62	            0x84c0	                             test al, al	      1217	ftp.c	FUNCTION_18	FOR_3	IF_29
0x4001d64	            0x740d	                            je 0x4001d73	      1217	ftp.c	FUNCTION_18	FOR_3	IF_29
0x4001d66	    0x83bda4f5ffff	              cmp dword [rbp - 0xa5c], 0	      1217	ftp.c	FUNCTION_18	FOR_3	IF_29
0x4001d6d	     0xf84e4020000	                            je 0x4002057	      1217	ftp.c	FUNCTION_18	FOR_3	IF_29
0x4001d73	    0x83bda4f5ffff	              cmp dword [rbp - 0xa5c], 1	      1221	ftp.c	FUNCTION_18	FOR_3	IF_30
0x4001d7a	            0x7514	                           jne 0x4001d90	      1221	ftp.c	FUNCTION_18	FOR_3	IF_30
0x4001d7c	    0x488b8520f6ff	            mov rax, qword [rbp - 0x9e0]	      1221	ftp.c	FUNCTION_18	FOR_3	IF_30
0x4001d83	           0xfb700	                   movzx eax, word [rax]	      1221	ftp.c	FUNCTION_18	FOR_3	IF_30
0x4001d86	        0x6683f802	                               cmp ax, 2	      1221	ftp.c	FUNCTION_18	FOR_3	IF_30
0x4001d8a	     0xf85ca020000	                           jne 0x400205a	      1221	ftp.c	FUNCTION_18	FOR_3	IF_30
0x4001d90	    0x488b8520f6ff	            mov rax, qword [rbp - 0x9e0]	      1225	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4001d97	           0xfb700	                   movzx eax, word [rax]	      1225	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4001d9a	           0xfb7c0	                           movzx eax, ax	      1225	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4001d9d	          0x83f802	                              cmp eax, 2	      1225	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4001da0	            0x740a	                            je 0x4001dac	      1225	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4001da2	          0x83f80a	                            cmp eax, 0xa	      1225	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4001da5	            0x7423	                            je 0x4001dca	      1225	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4001da7	      0xe9af020000	                           jmp 0x400205b	      1235	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4001dac	    0x488b8528f6ff	            mov rax, qword [rbp - 0x9d8]	      1227	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_61
0x4001db3	         0xfb74002	               movzx eax, word [rax + 2]	      1227	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_61
0x4001db7	           0xfb7c0	                           movzx eax, ax	      1227	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_61
0x4001dba	            0x89c7	                            mov edi, eax	      1227	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_61
0x4001dbc	      0xe800000000	                          call 0x4001dc1	      1227	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_61
0x4001dc1	    0x668985baf5ff	              mov word [rbp - 0xa46], ax	      1227	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_61
0x4001dc8	            0xeb1d	                           jmp 0x4001de7	      1228	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4001dca	    0x488b8530f6ff	            mov rax, qword [rbp - 0x9d0]	      1231	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_62
0x4001dd1	         0xfb74002	               movzx eax, word [rax + 2]	      1231	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_62
0x4001dd5	           0xfb7c0	                           movzx eax, ax	      1231	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_62
0x4001dd8	            0x89c7	                            mov edi, eax	      1231	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_62
0x4001dda	      0xe800000000	                          call 0x4001ddf	      1231	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_62
0x4001ddf	    0x668985baf5ff	              mov word [rbp - 0xa46], ax	      1231	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_62
0x4001de6	              0x90	                                     nop	      1232	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4001de7	    0x83bda4f5ffff	              cmp dword [rbp - 0xa5c], 0	      1238	ftp.c	FUNCTION_18	FOR_3	IF_31
0x4001dee	     0xf85ec000000	                           jne 0x4001ee0	      1238	ftp.c	FUNCTION_18	FOR_3	IF_31
0x4001df4	     0xfb7b5baf5ff	           movzx esi, word [rbp - 0xa46]	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001dfb	    0x488b8520f6ff	            mov rax, qword [rbp - 0x9e0]	      1248	ftp.c	FUNCTION_18	FOR_3	IF_31
0x4001e02	           0xfb700	                   movzx eax, word [rax]	      1248	ftp.c	FUNCTION_18	FOR_3	IF_31
0x4001e05	        0x6683f802	                               cmp ax, 2	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e09	            0x7507	                           jne 0x4001e12	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e0b	      0xbf01000000	                              mov edi, 1	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e10	            0xeb05	                           jmp 0x4001e17	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e12	      0xbf02000000	                              mov edi, 2	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e17	    0x8b95a4f5ffff	            mov edx, dword [rbp - 0xa5c]	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e1d	          0x4889d0	                            mov rax, rdx	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e20	        0x48c1e002	                              shl rax, 2	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e24	          0x4801d0	                            add rax, rdx	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e27	    0x488d15000000	                   lea rdx, [0x04001e2e]	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e2e	          0x4801c2	                            add rdx, rax	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e31	    0x488b8510f6ff	            mov rax, qword [rbp - 0x9f0]	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e38	    0x488d8de0f6ff	                  lea rcx, [rbp - 0x920]	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e3f	          0x4189f1	                            mov r9d, esi	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e42	          0x4989c8	                             mov r8, rcx	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e45	            0x89f9	                            mov ecx, edi	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e47	    0x488d35000000	                   lea rsi, [0x04001e4e]	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e4e	          0x4889c7	                            mov rdi, rax	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e51	      0xb800000000	                              mov eax, 0	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e56	      0xe800000000	                          call 0x4001e5b	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e5b	    0x8985c4f5ffff	            mov dword [rbp - 0xa3c], eax	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001e61	    0x83bdc4f5ffff	              cmp dword [rbp - 0xa3c], 0	      1250	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32
0x4001e68	     0xf8403020000	                            je 0x4002071	      1250	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32
0x4001e6e	    0x8b85c4f5ffff	            mov eax, dword [rbp - 0xa3c]	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x4001e74	            0x89c7	                            mov edi, eax	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x4001e76	      0xe800000000	                          call 0x4001e7b	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x4001e7b	          0x4889c2	                            mov rdx, rax	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x4001e7e	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x4001e85	    0x488d35000000	                   lea rsi, [0x04001e8c]	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x4001e8c	          0x4889c7	                            mov rdi, rax	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x4001e8f	      0xb800000000	                              mov eax, 0	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x4001e94	      0xe800000000	                          call 0x4001e99	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x4001e99	    0x8b95bcf5ffff	            mov edx, dword [rbp - 0xa44]	      1253	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_66
0x4001e9f	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1253	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_66
0x4001ea6	            0x89d6	                            mov esi, edx	      1253	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_66
0x4001ea8	          0x4889c7	                            mov rdi, rax	      1253	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_66
0x4001eab	      0xe800000000	                          call 0x4001eb0	      1253	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_66
0x4001eb0	    0x488b8510f6ff	            mov rax, qword [rbp - 0x9f0]	      1255	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32
0x4001eb7	    0xc780b0000000	               mov dword [rax + 0xb0], 1	      1255	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32
0x4001ec1	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1257	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32
0x4001ec8	      0xbe00000000	                              mov esi, 0	      1257	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32
0x4001ecd	          0x4889c7	                            mov rdi, rax	      1257	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32
0x4001ed0	      0xe8afeeffff	                         call sym._state	      1257	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32
0x4001ed5	    0x8b85c4f5ffff	            mov eax, dword [rbp - 0xa3c]	      1258	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32
0x4001edb	      0xe9f2010000	                           jmp 0x40020d2	      1258	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32
0x4001ee0	    0x83bda4f5ffff	              cmp dword [rbp - 0xa5c], 1	      1262	ftp.c	FUNCTION_18	FOR_3	IF_33
0x4001ee7	     0xf856e010000	                           jne 0x400205b	      1262	ftp.c	FUNCTION_18	FOR_3	IF_33
0x4001eed	    0x488d85e0f6ff	                  lea rax, [rbp - 0x920]	      1263	ftp.c	FUNCTION_18	FOR_3	IF_33
0x4001ef4	    0x48898500f6ff	            mov qword [rbp - 0xa00], rax	      1263	ftp.c	FUNCTION_18	FOR_3	IF_33
0x4001efb	    0x488d85e0f7ff	                  lea rax, [rbp - 0x820]	      1264	ftp.c	FUNCTION_18	FOR_3	IF_33
0x4001f02	    0x48898508f6ff	            mov qword [rbp - 0x9f8], rax	      1264	ftp.c	FUNCTION_18	FOR_3	IF_33
0x4001f09	            0xeb3d	                           jmp 0x4001f48	      1267	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4001f0b	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      1268	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	IF_34
0x4001f12	           0xfb600	                   movzx eax, byte [rax]	      1268	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	IF_34
0x4001f15	            0x3c2e	                            cmp al, 0x2e	      1268	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	IF_34
0x4001f17	            0x750c	                           jne 0x4001f25	      1268	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	IF_34
0x4001f19	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      1269	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	IF_34
0x4001f20	          0xc6002c	                    mov byte [rax], 0x2c	      1269	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	IF_34
0x4001f23	            0xeb13	                           jmp 0x4001f38	      1269	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	IF_34
0x4001f25	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      1271	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	ELSE_10
0x4001f2c	           0xfb610	                   movzx edx, byte [rax]	      1271	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	ELSE_10
0x4001f2f	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      1271	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	ELSE_10
0x4001f36	            0x8810	                      mov byte [rax], dl	      1271	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	ELSE_10
0x4001f38	    0x48838508f6ff	              add qword [rbp - 0x9f8], 1	      1272	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4001f40	    0x48838500f6ff	              add qword [rbp - 0xa00], 1	      1273	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4001f48	    0x4883bd00f6ff	              cmp qword [rbp - 0xa00], 0	      1267	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4001f50	            0x740e	                            je 0x4001f60	      1267	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4001f52	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      1267	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4001f59	           0xfb600	                   movzx eax, byte [rax]	      1267	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4001f5c	            0x84c0	                             test al, al	      1267	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4001f5e	            0x75ab	                           jne 0x4001f0b	      1267	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4001f60	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      1275	ftp.c	FUNCTION_18	FOR_3	IF_33
0x4001f67	          0xc60000	                       mov byte [rax], 0	      1275	ftp.c	FUNCTION_18	FOR_3	IF_33
0x4001f6a	     0xfb785baf5ff	           movzx eax, word [rbp - 0xa46]	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_67
0x4001f71	           0xfb6c8	                           movzx ecx, al	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_67
0x4001f74	     0xfb785baf5ff	           movzx eax, word [rbp - 0xa46]	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_67
0x4001f7b	        0x66c1e808	                               shr ax, 8	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_67
0x4001f7f	           0xfb7d0	                           movzx edx, ax	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_67
0x4001f82	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_67
0x4001f89	          0x4189c8	                            mov r8d, ecx	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_67
0x4001f8c	            0x89d1	                            mov ecx, edx	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_67
0x4001f8e	    0x488d15000000	                   lea rdx, [0x04001f95]	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_67
0x4001f95	      0xbe14000000	                           mov esi, 0x14	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_67
0x4001f9a	          0x4889c7	                            mov rdi, rax	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_67
0x4001f9d	      0xb800000000	                              mov eax, 0	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_67
0x4001fa2	      0xe800000000	                          call 0x4001fa7	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_67
0x4001fa7	    0x8b95a4f5ffff	            mov edx, dword [rbp - 0xa5c]	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001fad	          0x4889d0	                            mov rax, rdx	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001fb0	        0x48c1e002	                              shl rax, 2	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001fb4	          0x4801d0	                            add rax, rdx	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001fb7	    0x488d15000000	                   lea rdx, [0x04001fbe]	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001fbe	        0x488d3410	                    lea rsi, [rax + rdx]	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001fc2	    0x488b8510f6ff	            mov rax, qword [rbp - 0x9f0]	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001fc9	    0x488d95e0f7ff	                  lea rdx, [rbp - 0x820]	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001fd0	          0x4889d1	                            mov rcx, rdx	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001fd3	          0x4889f2	                            mov rdx, rsi	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001fd6	    0x488d35000000	                   lea rsi, [0x04001fdd]	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001fdd	          0x4889c7	                            mov rdi, rax	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001fe0	      0xb800000000	                              mov eax, 0	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001fe5	      0xe800000000	                          call 0x4001fea	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001fea	    0x8985c4f5ffff	            mov dword [rbp - 0xa3c], eax	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001ff0	    0x83bdc4f5ffff	              cmp dword [rbp - 0xa3c], 0	      1279	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35
0x4001ff7	            0x747b	                            je 0x4002074	      1279	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35
0x4001ff9	    0x8b85c4f5ffff	            mov eax, dword [rbp - 0xa3c]	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_69
0x4001fff	            0x89c7	                            mov edi, eax	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_69
0x4002001	      0xe800000000	                          call 0x4002006	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_69
0x4002006	          0x4889c2	                            mov rdx, rax	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_69
0x4002009	    0x488b8518f6ff	            mov rax, qword [rbp - 0x9e8]	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_69
0x4002010	    0x488d35000000	                   lea rsi, [0x04002017]	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_69
0x4002017	          0x4889c7	                            mov rdi, rax	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_69
0x400201a	      0xb800000000	                              mov eax, 0	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_69
0x400201f	      0xe800000000	                          call 0x4002024	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_69
0x4002024	    0x8b95bcf5ffff	            mov edx, dword [rbp - 0xa44]	      1282	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_71
0x400202a	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1282	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_71
0x4002031	            0x89d6	                            mov esi, edx	      1282	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_71
0x4002033	          0x4889c7	                            mov rdi, rax	      1282	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_71
0x4002036	      0xe800000000	                          call 0x400203b	      1282	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_71
0x400203b	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1284	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35
0x4002042	      0xbe00000000	                              mov esi, 0	      1284	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35
0x4002047	          0x4889c7	                            mov rdi, rax	      1284	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35
0x400204a	      0xe835edffff	                         call sym._state	      1284	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35
0x400204f	    0x8b85c4f5ffff	            mov eax, dword [rbp - 0xa3c]	      1285	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35
0x4002055	            0xeb7b	                           jmp 0x40020d2	      1285	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35
0x4002057	              0x90	                                     nop	      1219	ftp.c	FUNCTION_18	FOR_3	IF_29
0x4002058	            0xeb01	                           jmp 0x400205b	      1219	ftp.c	FUNCTION_18	FOR_3	IF_29
0x400205a	              0x90	                                     nop	      1223	ftp.c	FUNCTION_18	FOR_3	IF_30
0x400205b	    0x8385a4f5ffff	              add dword [rbp - 0xa5c], 1	      1215	ftp.c	FUNCTION_18	FOR_3
0x4002062	    0x83bda4f5ffff	              cmp dword [rbp - 0xa5c], 2	      1215	ftp.c	FUNCTION_18	FOR_3
0x4002069	     0xf85e2fcffff	                           jne 0x4001d51	      1215	ftp.c	FUNCTION_18	FOR_3
0x400206f	            0xeb04	                           jmp 0x4002075	      1215	ftp.c	FUNCTION_18	FOR_3
0x4002071	              0x90	                                     nop	      1260	ftp.c	FUNCTION_18	FOR_3	IF_31
0x4002072	            0xeb01	                           jmp 0x4002075	      1260	ftp.c	FUNCTION_18	FOR_3	IF_31
0x4002074	              0x90	                                     nop	      1287	ftp.c	FUNCTION_18	FOR_3	IF_33
0x4002075	    0x8b95a4f5ffff	            mov edx, dword [rbp - 0xa5c]	      1292	ftp.c	FUNCTION_18
0x400207b	    0x488b8510f6ff	            mov rax, qword [rbp - 0x9f0]	      1292	ftp.c	FUNCTION_18
0x4002082	    0x8990b0000000	             mov dword [rax + 0xb0], edx	      1292	ftp.c	FUNCTION_18
0x4002088	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1294	ftp.c	FUNCTION_18	CALL_72
0x400208f	          0x4889c7	                            mov rdi, rax	      1294	ftp.c	FUNCTION_18	CALL_72
0x4002092	      0xe87be0ffff	          call sym.close_secondarysocket	      1294	ftp.c	FUNCTION_18	CALL_72
0x4002097	    0x8b95bcf5ffff	            mov edx, dword [rbp - 0xa44]	      1299	ftp.c	FUNCTION_18
0x400209d	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1299	ftp.c	FUNCTION_18
0x40020a4	    0x89905c020000	            mov dword [rax + 0x25c], edx	      1299	ftp.c	FUNCTION_18
0x40020aa	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1308	ftp.c	FUNCTION_18
0x40020b1	    0xc680a6030000	               mov byte [rax + 0x3a6], 1	      1308	ftp.c	FUNCTION_18
0x40020b8	    0x488b85a8f5ff	            mov rax, qword [rbp - 0xa58]	      1310	ftp.c	FUNCTION_18
0x40020bf	      0xbe1c000000	                           mov esi, 0x1c	      1310	ftp.c	FUNCTION_18
0x40020c4	          0x4889c7	                            mov rdi, rax	      1310	ftp.c	FUNCTION_18
0x40020c7	      0xe8b8ecffff	                         call sym._state	      1310	ftp.c	FUNCTION_18
0x40020cc	    0x8b85c4f5ffff	            mov eax, dword [rbp - 0xa3c]	      1311	ftp.c	FUNCTION_18
0x40020d2	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1312	ftp.c	FUNCTION_18
0x40020d6	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1312	ftp.c	FUNCTION_18
0x40020df	            0x7405	                            je 0x40020e6	      1312	ftp.c	FUNCTION_18
0x40020e1	      0xe800000000	                          call 0x40020e6	      1312	ftp.c	FUNCTION_18
0x40020e6	    0x4881c4580a00	                          add rsp, 0xa58	      1312	ftp.c	FUNCTION_18
0x40020ed	              0x5b	                                 pop rbx	      1312	ftp.c	FUNCTION_18
0x40020ee	              0x5d	                                 pop rbp	      1312	ftp.c	FUNCTION_18
0x40020ef	              0xc3	                                     ret	      1312	ftp.c	FUNCTION_18
AllowServerConnect	FOR,0:functions,0:SWITCH,0:ELSE,1:IF,6:DO,0:WHILE,0:CALL,8	86
0x40008c5	              0x55	                                push rbp	       500	ftp.c	FUNCTION_8
0x40008c6	          0x4889e5	                            mov rbp, rsp	       500	ftp.c	FUNCTION_8
0x40008c9	        0x4883ec30	                           sub rsp, 0x30	       500	ftp.c	FUNCTION_8
0x40008cd	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       500	ftp.c	FUNCTION_8
0x40008d1	        0x488975d0	             mov qword [rbp - 0x30], rsi	       500	ftp.c	FUNCTION_8
0x40008d5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       501	ftp.c	FUNCTION_8
0x40008d9	          0x488b00	                    mov rax, qword [rax]	       501	ftp.c	FUNCTION_8
0x40008dc	        0x488945f0	             mov qword [rbp - 0x10], rax	       501	ftp.c	FUNCTION_8
0x40008e0	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       503	ftp.c	FUNCTION_8
0x40008e7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       505	ftp.c	FUNCTION_8
0x40008eb	          0xc60000	                       mov byte [rax], 0	       505	ftp.c	FUNCTION_8
0x40008ee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       506	ftp.c	FUNCTION_8	CALL_1
0x40008f2	    0x488d35000000	                   lea rsi, [0x040008f9]	       506	ftp.c	FUNCTION_8	CALL_1
0x40008f9	          0x4889c7	                            mov rdi, rax	       506	ftp.c	FUNCTION_8	CALL_1
0x40008fc	      0xb800000000	                              mov eax, 0	       506	ftp.c	FUNCTION_8	CALL_1
0x4000901	      0xe800000000	                          call 0x4000906	       506	ftp.c	FUNCTION_8	CALL_1
0x4000906	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       509	ftp.c	FUNCTION_8	CALL_2
0x400090a	      0xbe09000000	                              mov esi, 9	       509	ftp.c	FUNCTION_8	CALL_2
0x400090f	          0x4889c7	                            mov rdi, rax	       509	ftp.c	FUNCTION_8	CALL_2
0x4000912	      0xe800000000	                          call 0x4000917	       509	ftp.c	FUNCTION_8	CALL_2
0x4000917	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       511	ftp.c	FUNCTION_8	CALL_3
0x400091b	          0x4889c7	                            mov rdi, rax	       511	ftp.c	FUNCTION_8	CALL_3
0x400091e	      0xe888fbffff	            call sym.ftp_timeleft_accept	       511	ftp.c	FUNCTION_8	CALL_3
0x4000923	        0x488945f8	                mov qword [rbp - 8], rax	       511	ftp.c	FUNCTION_8	CALL_3
0x4000927	      0x48837df800	                  cmp qword [rbp - 8], 0	       512	ftp.c	FUNCTION_8	IF_1
0x400092c	            0x7922	                           jns 0x4000950	       512	ftp.c	FUNCTION_8	IF_1
0x400092e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       514	ftp.c	FUNCTION_8	IF_1	CALL_4
0x4000932	    0x488d35000000	                   lea rsi, [0x04000939]	       514	ftp.c	FUNCTION_8	IF_1	CALL_4
0x4000939	          0x4889c7	                            mov rdi, rax	       514	ftp.c	FUNCTION_8	IF_1	CALL_4
0x400093c	      0xb800000000	                              mov eax, 0	       514	ftp.c	FUNCTION_8	IF_1	CALL_4
0x4000941	      0xe800000000	                          call 0x4000946	       514	ftp.c	FUNCTION_8	IF_1	CALL_4
0x4000946	      0xb80c000000	                            mov eax, 0xc	       515	ftp.c	FUNCTION_8	IF_1
0x400094b	      0xe9b0000000	                           jmp 0x4000a00	       515	ftp.c	FUNCTION_8	IF_1
0x4000950	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       519	ftp.c	FUNCTION_8	CALL_5
0x4000954	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       519	ftp.c	FUNCTION_8	CALL_5
0x4000958	          0x4889d6	                            mov rsi, rdx	       519	ftp.c	FUNCTION_8	CALL_5
0x400095b	          0x4889c7	                            mov rdi, rax	       519	ftp.c	FUNCTION_8	CALL_5
0x400095e	      0xe821fcffff	          call sym.ReceivedServerConnect	       519	ftp.c	FUNCTION_8	CALL_5
0x4000963	          0x8945ec	             mov dword [rbp - 0x14], eax	       519	ftp.c	FUNCTION_8	CALL_5
0x4000966	        0x837dec00	               cmp dword [rbp - 0x14], 0	       520	ftp.c	FUNCTION_8	IF_2
0x400096a	            0x7408	                            je 0x4000974	       520	ftp.c	FUNCTION_8	IF_2
0x400096c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       521	ftp.c	FUNCTION_8	IF_2
0x400096f	      0xe98c000000	                           jmp 0x4000a00	       521	ftp.c	FUNCTION_8	IF_2
0x4000974	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       523	ftp.c	FUNCTION_8	IF_3
0x4000978	           0xfb600	                   movzx eax, byte [rax]	       523	ftp.c	FUNCTION_8	IF_3
0x400097b	            0x84c0	                             test al, al	       523	ftp.c	FUNCTION_8	IF_3
0x400097d	            0x7434	                            je 0x40009b3	       523	ftp.c	FUNCTION_8	IF_3
0x400097f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       524	ftp.c	FUNCTION_8	IF_3	CALL_6
0x4000983	          0x4889c7	                            mov rdi, rax	       524	ftp.c	FUNCTION_8	IF_3	CALL_6
0x4000986	      0xe821f9ffff	            call sym.AcceptServerConnect	       524	ftp.c	FUNCTION_8	IF_3	CALL_6
0x400098b	          0x8945ec	             mov dword [rbp - 0x14], eax	       524	ftp.c	FUNCTION_8	IF_3	CALL_6
0x400098e	        0x837dec00	               cmp dword [rbp - 0x14], 0	       525	ftp.c	FUNCTION_8	IF_3	IF_4
0x4000992	            0x7405	                            je 0x4000999	       525	ftp.c	FUNCTION_8	IF_3	IF_4
0x4000994	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       526	ftp.c	FUNCTION_8	IF_3	IF_4
0x4000997	            0xeb67	                           jmp 0x4000a00	       526	ftp.c	FUNCTION_8	IF_3	IF_4
0x4000999	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       528	ftp.c	FUNCTION_8	IF_3	CALL_7
0x400099d	          0x4889c7	                            mov rdi, rax	       528	ftp.c	FUNCTION_8	IF_3	CALL_7
0x40009a0	      0xe8dafdffff	               call sym.InitiateTransfer	       528	ftp.c	FUNCTION_8	IF_3	CALL_7
0x40009a5	          0x8945ec	             mov dword [rbp - 0x14], eax	       528	ftp.c	FUNCTION_8	IF_3	CALL_7
0x40009a8	        0x837dec00	               cmp dword [rbp - 0x14], 0	       529	ftp.c	FUNCTION_8	IF_3	IF_5
0x40009ac	            0x744f	                            je 0x40009fd	       529	ftp.c	FUNCTION_8	IF_3	IF_5
0x40009ae	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       530	ftp.c	FUNCTION_8	IF_3	IF_5
0x40009b1	            0xeb4d	                           jmp 0x4000a00	       530	ftp.c	FUNCTION_8	IF_3	IF_5
0x40009b3	        0x837dec00	               cmp dword [rbp - 0x14], 0	       534	ftp.c	FUNCTION_8	ELSE_1	IF_6
0x40009b7	            0x7544	                           jne 0x40009fd	       534	ftp.c	FUNCTION_8	ELSE_1	IF_6
0x40009b9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       534	ftp.c	FUNCTION_8	ELSE_1	IF_6
0x40009bd	           0xfb600	                   movzx eax, byte [rax]	       534	ftp.c	FUNCTION_8	ELSE_1	IF_6
0x40009c0	          0x83f001	                              xor eax, 1	       534	ftp.c	FUNCTION_8	ELSE_1	IF_6
0x40009c3	            0x84c0	                             test al, al	       534	ftp.c	FUNCTION_8	ELSE_1	IF_6
0x40009c5	            0x7436	                            je 0x40009fd	       534	ftp.c	FUNCTION_8	ELSE_1	IF_6
0x40009c7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009cb	    0x488b80400300	           mov rax, qword [rax + 0x340] 	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009d2	          0x4885c0	                           test rax, rax	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009d5	            0x7e0d	                           jle 0x40009e4	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009d7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009db	    0x488b80400300	           mov rax, qword [rax + 0x340] 	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009e2	            0xeb05	                           jmp 0x40009e9	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009e4	      0xb860ea0000	                         mov eax, 0xea60	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009e9	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009ed	      0xba00000000	                              mov edx, 0	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009f2	          0x4889c6	                            mov rsi, rax	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009f5	          0x4889cf	                            mov rdi, rcx	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009f8	      0xe800000000	                          call 0x40009fd	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x40009fd	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       540	ftp.c	FUNCTION_8
0x4000a00	              0xc9	                                   leave	       541	ftp.c	FUNCTION_8
0x4000a01	              0xc3	                                     ret	       541	ftp.c	FUNCTION_8
ftp_state_rest	FOR,0:functions,0:SWITCH,0:ELSE,1:IF,1:DO,0:WHILE,0:CALL,1	44
0x40023ad	              0x55	                                push rbp	      1404	ftp.c	FUNCTION_21
0x40023ae	          0x4889e5	                            mov rbp, rsp	      1404	ftp.c	FUNCTION_21
0x40023b1	        0x4883ec30	                           sub rsp, 0x30	      1404	ftp.c	FUNCTION_21
0x40023b5	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1404	ftp.c	FUNCTION_21
0x40023b9	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1405	ftp.c	FUNCTION_21
0x40023c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1406	ftp.c	FUNCTION_21
0x40023c4	          0x488b00	                    mov rax, qword [rax]	      1406	ftp.c	FUNCTION_21
0x40023c7	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1406	ftp.c	FUNCTION_21
0x40023ce	        0x488945f0	             mov qword [rbp - 0x10], rax	      1406	ftp.c	FUNCTION_21
0x40023d2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1407	ftp.c	FUNCTION_21
0x40023d6	    0x480550060000	                          add rax, 0x650	      1407	ftp.c	FUNCTION_21
0x40023dc	        0x488945f8	                mov qword [rbp - 8], rax	      1407	ftp.c	FUNCTION_21
0x40023e0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1409	ftp.c	FUNCTION_21	IF_1
0x40023e4	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1409	ftp.c	FUNCTION_21	IF_1
0x40023e7	            0x85c0	                           test eax, eax	      1409	ftp.c	FUNCTION_21	IF_1
0x40023e9	            0x7454	                            je 0x400243f	      1409	ftp.c	FUNCTION_21	IF_1
0x40023eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1409	ftp.c	FUNCTION_21	IF_1
0x40023ef	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1409	ftp.c	FUNCTION_21	IF_1
0x40023f6	          0x4885c0	                           test rax, rax	      1409	ftp.c	FUNCTION_21	IF_1
0x40023f9	            0x7444	                            je 0x400243f	      1409	ftp.c	FUNCTION_21	IF_1
0x40023fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1414	ftp.c	FUNCTION_21	IF_1
0x40023ff	    0x480550060000	                          add rax, 0x650	      1414	ftp.c	FUNCTION_21	IF_1
0x4002405	      0xba00000000	                              mov edx, 0	      1414	ftp.c	FUNCTION_21	IF_1
0x400240a	    0x488d35000000	                   lea rsi, [0x04002411]	      1414	ftp.c	FUNCTION_21	IF_1
0x4002411	          0x4889c7	                            mov rdi, rax	      1414	ftp.c	FUNCTION_21	IF_1
0x4002414	      0xb800000000	                              mov eax, 0	      1414	ftp.c	FUNCTION_21	IF_1
0x4002419	      0xe800000000	                          call 0x400241e	      1414	ftp.c	FUNCTION_21	IF_1
0x400241e	          0x8945ec	             mov dword [rbp - 0x14], eax	      1414	ftp.c	FUNCTION_21	IF_1
0x4002421	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1414	ftp.c	FUNCTION_21	IF_1
0x4002425	            0x7405	                            je 0x400242c	      1414	ftp.c	FUNCTION_21	IF_1
0x4002427	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1414	ftp.c	FUNCTION_21	IF_1
0x400242a	            0xeb25	                           jmp 0x4002451	      1414	ftp.c	FUNCTION_21	IF_1
0x400242c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1416	ftp.c	FUNCTION_21	IF_1
0x4002430	      0xbe1a000000	                           mov esi, 0x1a	      1416	ftp.c	FUNCTION_21	IF_1
0x4002435	          0x4889c7	                            mov rdi, rax	      1416	ftp.c	FUNCTION_21	IF_1
0x4002438	      0xe847e9ffff	                         call sym._state	      1416	ftp.c	FUNCTION_21	IF_1
0x400243d	            0xeb0f	                           jmp 0x400244e	      1416	ftp.c	FUNCTION_21	IF_1
0x400243f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1419	ftp.c	FUNCTION_21	CALL_1
0x4002443	          0x4889c7	                            mov rdi, rax	      1419	ftp.c	FUNCTION_21	CALL_1
0x4002446	      0xe88efdffff	     call sym.ftp_state_prepare_transfer	      1419	ftp.c	FUNCTION_21	CALL_1
0x400244b	          0x8945ec	             mov dword [rbp - 0x14], eax	      1419	ftp.c	FUNCTION_21	CALL_1
0x400244e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1421	ftp.c	FUNCTION_21
0x4002451	              0xc9	                                   leave	      1422	ftp.c	FUNCTION_21
0x4002452	              0xc3	                                     ret	      1422	ftp.c	FUNCTION_21
ftp_state_mdtm_resp	FOR,0:functions,0:SWITCH,2:ELSE,1:IF,9:DO,0:WHILE,0:CALL,13	250
0x40038c3	              0x55	                                push rbp	      2046	ftp.c	FUNCTION_34
0x40038c4	          0x4889e5	                            mov rbp, rsp	      2046	ftp.c	FUNCTION_34
0x40038c7	    0x4881ec300100	                          sub rsp, 0x130	      2046	ftp.c	FUNCTION_34
0x40038ce	    0x4889bdd8feff	            mov qword [rbp - 0x128], rdi	      2046	ftp.c	FUNCTION_34
0x40038d5	    0x89b5d4feffff	            mov dword [rbp - 0x12c], esi	      2046	ftp.c	FUNCTION_34
0x40038db	    0x64488b042528	                mov rax, qword fs:[0x28]	      2046	ftp.c	FUNCTION_34
0x40038e4	        0x488945f8	                mov qword [rbp - 8], rax	      2046	ftp.c	FUNCTION_34
0x40038e8	            0x31c0	                            xor eax, eax	      2046	ftp.c	FUNCTION_34
0x40038ea	    0xc78504ffffff	               mov dword [rbp - 0xfc], 0	      2047	ftp.c	FUNCTION_34
0x40038f4	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2048	ftp.c	FUNCTION_34
0x40038fb	          0x488b00	                    mov rax, qword [rax]	      2048	ftp.c	FUNCTION_34
0x40038fe	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	      2048	ftp.c	FUNCTION_34
0x4003905	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2049	ftp.c	FUNCTION_34
0x400390c	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      2049	ftp.c	FUNCTION_34
0x4003913	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      2049	ftp.c	FUNCTION_34
0x400391a	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2050	ftp.c	FUNCTION_34
0x4003921	    0x480550060000	                          add rax, 0x650	      2050	ftp.c	FUNCTION_34
0x4003927	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      2050	ftp.c	FUNCTION_34
0x400392e	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      2052	ftp.c	FUNCTION_34	SWITCH_1
0x4003934	      0x3dd5000000	                           cmp eax, 0xd5	      2052	ftp.c	FUNCTION_34	SWITCH_1
0x4003939	            0x7410	                            je 0x400394b	      2052	ftp.c	FUNCTION_34	SWITCH_1
0x400393b	      0x3d26020000	                          cmp eax, 0x226	      2052	ftp.c	FUNCTION_34	SWITCH_1
0x4003940	     0xf84af020000	                            je 0x4003bf5	      2052	ftp.c	FUNCTION_34	SWITCH_1
0x4003946	      0xe98d020000	                           jmp 0x4003bd8	      2052	ftp.c	FUNCTION_34	SWITCH_1
0x400394b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003952	    0x488b80200d00	           mov rax, qword [rax + 0xd20] 	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003959	        0x488d7804	                      lea rdi, [rax + 4]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x400395d	    0x4c8d85f8feff	                   lea r8, [rbp - 0x108]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003964	    0x488db5f4feff	                  lea rsi, [rbp - 0x10c]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x400396b	    0x488d95f0feff	                  lea rdx, [rbp - 0x110]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003972	    0x488d85ecfeff	                  lea rax, [rbp - 0x114]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003979	    0x488d8d00ffff	                  lea rcx, [rbp - 0x100]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003980	              0x51	                                push rcx	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003981	    0x488d8dfcfeff	                  lea rcx, [rbp - 0x104]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003988	              0x51	                                push rcx	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003989	          0x4d89c1	                              mov r9, r8	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x400398c	          0x4989f0	                             mov r8, rsi	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x400398f	          0x4889d1	                            mov rcx, rdx	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003992	          0x4889c2	                            mov rdx, rax	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003995	    0x488d35000000	                   lea rsi, [0x0400399c]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x400399c	      0xb800000000	                              mov eax, 0	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x40039a1	      0xe800000000	                          call 0x40039a6	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x40039a6	        0x4883c410	                           add rsp, 0x10	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x40039aa	          0x83f806	                              cmp eax, 6	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x40039ad	     0xf858e000000	                           jne 0x4003a41	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x40039b3	      0xbf00000000	                              mov edi, 0	      2062	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_2
0x40039b8	      0xe800000000	                          call 0x40039bd	      2062	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_2
0x40039bd	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      2062	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_2
0x40039c4	    0x8bbd00ffffff	            mov edi, dword [rbp - 0x100]	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039ca	    0x8bb5fcfeffff	            mov esi, dword [rbp - 0x104]	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039d0	    0x8b8df8feffff	            mov ecx, dword [rbp - 0x108]	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039d6	    0x448b8df4feff	            mov r9d, dword [rbp - 0x10c]	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039dd	    0x448b85f0feff	            mov r8d, dword [rbp - 0x110]	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039e4	    0x8b95ecfeffff	            mov edx, dword [rbp - 0x114]	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039ea	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039f1	        0x4883ec08	                              sub rsp, 8	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039f5	              0x57	                                push rdi	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039f6	              0x56	                                push rsi	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039f7	              0x51	                                push rcx	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039f8	            0x89d1	                            mov ecx, edx	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40039fa	    0x488d15000000	                   lea rdx, [0x04003a01]	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x4003a01	      0xbe18000000	                           mov esi, 0x18	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x4003a06	          0x4889c7	                            mov rdi, rax	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x4003a09	      0xb800000000	                              mov eax, 0	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x4003a0e	      0xe800000000	                          call 0x4003a13	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x4003a13	        0x4883c420	                           add rsp, 0x20	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x4003a17	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	      2068	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_4
0x4003a1e	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      2068	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_4
0x4003a25	          0x4889d6	                            mov rsi, rdx	      2068	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_4
0x4003a28	          0x4889c7	                            mov rdi, rax	      2068	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_4
0x4003a2b	      0xe800000000	                          call 0x4003a30	      2068	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_4
0x4003a30	          0x4889c2	                            mov rdx, rax	      2068	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_4
0x4003a33	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2068	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_4
0x4003a3a	    0x488990e85100	          mov qword [rax + 0x51e8], rdx 	      2068	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_4
0x4003a41	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2075	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a48	     0xfb680e10700	          movzx eax, byte [rax + 0x7e1] 	      2075	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a4f	            0x84c0	                             test al, al	      2075	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a51	     0xf84c5010000	                            je 0x4003c1c	      2075	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a57	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2076	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a5e	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2076	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a65	          0x4885c0	                           test rax, rax	      2075	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a68	     0xf84ae010000	                            je 0x4003c1c	      2075	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a6e	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2077	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a75	     0xfb680d20700	          movzx eax, byte [rax + 0x7d2] 	      2077	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a7c	            0x84c0	                             test al, al	      2076	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a7e	     0xf8498010000	                            je 0x4003c1c	      2076	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a84	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2078	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a8b	    0x488b80e85100	          mov rax, qword [rax + 0x51e8] 	      2078	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a92	          0x4885c0	                           test rax, rax	      2077	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a95	     0xf8881010000	                            js 0x4003c1c	      2077	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003a9b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2080	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003aa2	    0x488b80e85100	          mov rax, qword [rax + 0x51e8] 	      2080	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003aa9	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      2080	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003ab0	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	      2082	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003ab7	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2082	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003abe	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	      2084	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_5
0x4003ac5	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2084	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_5
0x4003acc	          0x4889d6	                            mov rsi, rdx	      2084	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_5
0x4003acf	          0x4889c7	                            mov rdi, rax	      2084	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_5
0x4003ad2	      0xe800000000	                          call 0x4003ad7	      2084	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_5
0x4003ad7	    0x898504ffffff	             mov dword [rbp - 0xfc], eax	      2084	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_5
0x4003add	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      2085	ftp.c	FUNCTION_34	SWITCH_1	IF_2	IF_3
0x4003ae4	            0x740b	                            je 0x4003af1	      2085	ftp.c	FUNCTION_34	SWITCH_1	IF_2	IF_3
0x4003ae6	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      2086	ftp.c	FUNCTION_34	SWITCH_1	IF_2	IF_3
0x4003aec	      0xe9b3020000	                           jmp 0x4003da4	      2086	ftp.c	FUNCTION_34	SWITCH_1	IF_2	IF_3
0x4003af1	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003af8	            0x8b38	                    mov edi, dword [rax]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003afa	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b01	          0x8b7004	                mov esi, dword [rax + 4]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b04	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b0b	          0x8b4808	                mov ecx, dword [rax + 8]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b0e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2094	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b15	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2094	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b18	    0x448d906c0700	                 lea r10d, [rax + 0x76c]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b1f	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2093	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b26	          0x8b5010	            mov edx, dword [rax + 0x10] 	      2093	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b29	    0x488b05000000	            mov rax, qword [0x04003b30] 	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b30	          0x4863d2	                         movsxd rdx, edx	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b33	        0x4c8b0cd0	             mov r9, qword [rax + rdx*8]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b37	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b3e	        0x448b400c	              mov r8d, dword [rax + 0xc]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b42	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2091	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b49	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2091	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b4c	            0x85c0	                           test eax, eax	      2091	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b4e	            0x740f	                            je 0x4003b5f	      2091	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b50	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2091	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b57	          0x8b4018	            mov eax, dword [rax + 0x18] 	      2091	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b5a	          0x8d50ff	                      lea edx, [rax - 1]	      2091	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b5d	            0xeb05	                           jmp 0x4003b64	      2091	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b5f	      0xba06000000	                              mov edx, 6	      2091	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003b64	    0x488b05000000	            mov rax, qword [0x04003b6b] 	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b6b	          0x4863d2	                         movsxd rdx, edx	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b6e	        0x488b14d0	            mov rdx, qword [rax + rdx*8]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b72	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b79	              0x57	                                push rdi	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b7a	              0x56	                                push rsi	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b7b	              0x51	                                push rcx	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b7c	            0x4152	                                push r10	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b7e	          0x4889d1	                            mov rcx, rdx	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b81	    0x488d15000000	                   lea rdx, [0x04003b88]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b88	      0xbe80000000	                           mov esi, 0x80	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b8d	          0x4889c7	                            mov rdi, rax	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b90	      0xb800000000	                              mov eax, 0	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b95	      0xe800000000	                          call 0x4003b9a	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b9a	        0x4883c420	                           add rsp, 0x20	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4003b9e	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      2098	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_7
0x4003ba5	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2098	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_7
0x4003bac	      0xb900000000	                              mov ecx, 0	      2098	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_7
0x4003bb1	      0xbe03000000	                              mov esi, 3	      2098	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_7
0x4003bb6	          0x4889c7	                            mov rdi, rax	      2098	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_7
0x4003bb9	      0xe800000000	                          call 0x4003bbe	      2098	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_7
0x4003bbe	    0x898504ffffff	             mov dword [rbp - 0xfc], eax	      2098	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_7
0x4003bc4	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      2099	ftp.c	FUNCTION_34	SWITCH_1	IF_2	IF_4
0x4003bcb	            0x744f	                            je 0x4003c1c	      2099	ftp.c	FUNCTION_34	SWITCH_1	IF_2	IF_4
0x4003bcd	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      2100	ftp.c	FUNCTION_34	SWITCH_1	IF_2	IF_4
0x4003bd3	      0xe9cc010000	                           jmp 0x4003da4	      2100	ftp.c	FUNCTION_34	SWITCH_1	IF_2	IF_4
0x4003bd8	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2106	ftp.c	FUNCTION_34	SWITCH_1	CALL_8
0x4003bdf	    0x488d35000000	                   lea rsi, [0x04003be6]	      2106	ftp.c	FUNCTION_34	SWITCH_1	CALL_8
0x4003be6	          0x4889c7	                            mov rdi, rax	      2106	ftp.c	FUNCTION_34	SWITCH_1	CALL_8
0x4003be9	      0xb800000000	                              mov eax, 0	      2106	ftp.c	FUNCTION_34	SWITCH_1	CALL_8
0x4003bee	      0xe800000000	                          call 0x4003bf3	      2106	ftp.c	FUNCTION_34	SWITCH_1	CALL_8
0x4003bf3	            0xeb28	                           jmp 0x4003c1d	      2107	ftp.c	FUNCTION_34	SWITCH_1
0x4003bf5	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2109	ftp.c	FUNCTION_34	SWITCH_1	CALL_9
0x4003bfc	    0x488d35000000	                   lea rsi, [0x04003c03]	      2109	ftp.c	FUNCTION_34	SWITCH_1	CALL_9
0x4003c03	          0x4889c7	                            mov rdi, rax	      2109	ftp.c	FUNCTION_34	SWITCH_1	CALL_9
0x4003c06	      0xb800000000	                              mov eax, 0	      2109	ftp.c	FUNCTION_34	SWITCH_1	CALL_9
0x4003c0b	      0xe800000000	                          call 0x4003c10	      2109	ftp.c	FUNCTION_34	SWITCH_1	CALL_9
0x4003c10	    0xc78504ffffff	           mov dword [rbp - 0xfc], 0x13 	      2110	ftp.c	FUNCTION_34	SWITCH_1
0x4003c1a	            0xeb01	                           jmp 0x4003c1d	      2111	ftp.c	FUNCTION_34	SWITCH_1
0x4003c1c	              0x90	                                     nop	      2104	ftp.c	FUNCTION_34	SWITCH_1
0x4003c1d	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2114	ftp.c	FUNCTION_34	IF_5
0x4003c24	    0x8b80c0050000	           mov eax, dword [rax + 0x5c0] 	      2114	ftp.c	FUNCTION_34	IF_5
0x4003c2a	            0x85c0	                           test eax, eax	      2114	ftp.c	FUNCTION_34	IF_5
0x4003c2c	     0xf844e010000	                            je 0x4003d80	      2114	ftp.c	FUNCTION_34	IF_5
0x4003c32	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2115	ftp.c	FUNCTION_34	IF_5	IF_6
0x4003c39	    0x488b80e85100	          mov rax, qword [rax + 0x51e8] 	      2115	ftp.c	FUNCTION_34	IF_5	IF_6
0x4003c40	          0x4885c0	                           test rax, rax	      2115	ftp.c	FUNCTION_34	IF_5	IF_6
0x4003c43	     0xf8e1c010000	                           jle 0x4003d65	      2115	ftp.c	FUNCTION_34	IF_5	IF_6
0x4003c49	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2115	ftp.c	FUNCTION_34	IF_5	IF_6
0x4003c50	    0x488b80c80500	           mov rax, qword [rax + 0x5c8] 	      2115	ftp.c	FUNCTION_34	IF_5	IF_6
0x4003c57	          0x4885c0	                           test rax, rax	      2115	ftp.c	FUNCTION_34	IF_5	IF_6
0x4003c5a	     0xf8e05010000	                           jle 0x4003d65	      2115	ftp.c	FUNCTION_34	IF_5	IF_6
0x4003c60	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2116	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2
0x4003c67	    0x8b80c0050000	           mov eax, dword [rax + 0x5c0] 	      2116	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2
0x4003c6d	          0x83f802	                              cmp eax, 2	      2116	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2
0x4003c70	            0x747a	                            je 0x4003cec	      2116	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2
0x4003c72	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2119	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003c79	    0x488b90e85100	          mov rdx, qword [rax + 0x51e8] 	      2119	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003c80	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2119	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003c87	    0x488b80c80500	           mov rax, qword [rax + 0x5c8] 	      2119	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003c8e	          0x4839c2	                            cmp rdx, rax	      2119	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003c91	     0xf8fc8000000	                            jg 0x4003d5f	      2119	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003c97	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2120	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7	CALL_10
0x4003c9e	    0x488d35000000	                   lea rsi, [0x04003ca5]	      2120	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7	CALL_10
0x4003ca5	          0x4889c7	                            mov rdi, rax	      2120	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7	CALL_10
0x4003ca8	      0xb800000000	                              mov eax, 0	      2120	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7	CALL_10
0x4003cad	      0xe800000000	                          call 0x4003cb2	      2120	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7	CALL_10
0x4003cb2	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2121	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003cb9	    0xc74018020000	               mov dword [rax + 0x18], 2	      2121	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003cc0	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2122	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003cc7	    0xc680f0510000	              mov byte [rax + 0x51f0], 1	      2122	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003cce	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2123	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003cd5	      0xbe00000000	                              mov esi, 0	      2123	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003cda	          0x4889c7	                            mov rdi, rax	      2123	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003cdd	      0xe8a2d0ffff	                         call sym._state	      2123	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003ce2	      0xb800000000	                              mov eax, 0	      2124	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003ce7	      0xe9b8000000	                           jmp 0x4003da4	      2124	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003cec	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2128	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003cf3	    0x488b90e85100	          mov rdx, qword [rax + 0x51e8] 	      2128	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003cfa	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2128	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003d01	    0x488b80c80500	           mov rax, qword [rax + 0x5c8] 	      2128	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003d08	          0x4839c2	                            cmp rdx, rax	      2128	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003d0b	            0x7e55	                           jle 0x4003d62	      2128	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003d0d	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2129	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8	CALL_11
0x4003d14	    0x488d35000000	                   lea rsi, [0x04003d1b]	      2129	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8	CALL_11
0x4003d1b	          0x4889c7	                            mov rdi, rax	      2129	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8	CALL_11
0x4003d1e	      0xb800000000	                              mov eax, 0	      2129	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8	CALL_11
0x4003d23	      0xe800000000	                          call 0x4003d28	      2129	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8	CALL_11
0x4003d28	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2130	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003d2f	    0xc74018020000	               mov dword [rax + 0x18], 2	      2130	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003d36	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2131	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003d3d	    0xc680f0510000	              mov byte [rax + 0x51f0], 1	      2131	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003d44	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2132	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003d4b	      0xbe00000000	                              mov esi, 0	      2132	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003d50	          0x4889c7	                            mov rdi, rax	      2132	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003d53	      0xe82cd0ffff	                         call sym._state	      2132	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003d58	      0xb800000000	                              mov eax, 0	      2133	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003d5d	            0xeb45	                           jmp 0x4003da4	      2133	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x4003d5f	              0x90	                                     nop	      2126	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2
0x4003d60	            0xeb1e	                           jmp 0x4003d80	      2126	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2
0x4003d62	              0x90	                                     nop	      2135	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2
0x4003d63	            0xeb1b	                           jmp 0x4003d80	      2137	ftp.c	FUNCTION_34	IF_5	IF_6
0x4003d65	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2139	ftp.c	FUNCTION_34	IF_5	ELSE_1	CALL_12
0x4003d6c	    0x488d35000000	                   lea rsi, [0x04003d73]	      2139	ftp.c	FUNCTION_34	IF_5	ELSE_1	CALL_12
0x4003d73	          0x4889c7	                            mov rdi, rax	      2139	ftp.c	FUNCTION_34	IF_5	ELSE_1	CALL_12
0x4003d76	      0xb800000000	                              mov eax, 0	      2139	ftp.c	FUNCTION_34	IF_5	ELSE_1	CALL_12
0x4003d7b	      0xe800000000	                          call 0x4003d80	      2139	ftp.c	FUNCTION_34	IF_5	ELSE_1	CALL_12
0x4003d80	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      2143	ftp.c	FUNCTION_34	IF_9
0x4003d87	            0x7515	                           jne 0x4003d9e	      2143	ftp.c	FUNCTION_34	IF_9
0x4003d89	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      2144	ftp.c	FUNCTION_34	CALL_13
0x4003d90	          0x4889c7	                            mov rdi, rax	      2144	ftp.c	FUNCTION_34	CALL_13
0x4003d93	      0xe8f9e9ffff	                 call sym.ftp_state_type	      2144	ftp.c	FUNCTION_34	CALL_13
0x4003d98	    0x898504ffffff	             mov dword [rbp - 0xfc], eax	      2144	ftp.c	FUNCTION_34	CALL_13
0x4003d9e	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      2146	ftp.c	FUNCTION_34
0x4003da4	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2147	ftp.c	FUNCTION_34
0x4003da8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2147	ftp.c	FUNCTION_34
0x4003db1	            0x7405	                            je 0x4003db8	      2147	ftp.c	FUNCTION_34
0x4003db3	      0xe800000000	                          call 0x4003db8	      2147	ftp.c	FUNCTION_34
0x4003db8	              0xc9	                                   leave	      2147	ftp.c	FUNCTION_34
0x4003db9	              0xc3	                                     ret	      2147	ftp.c	FUNCTION_34
ftp_statemach_act	FOR,2:functions,0:SWITCH,2:ELSE,15:IF,42:DO,0:WHILE,2:CALL,58	873
0x4004bd0	              0x55	                                push rbp	      2604	ftp.c	FUNCTION_44
0x4004bd1	          0x4889e5	                            mov rbp, rsp	      2604	ftp.c	FUNCTION_44
0x4004bd4	        0x4883c480	             add rsp, 0xffffffffffffff80	      2604	ftp.c	FUNCTION_44
0x4004bd8	        0x48897d88	             mov qword [rbp - 0x78], rdi	      2604	ftp.c	FUNCTION_44
0x4004bdc	    0x64488b042528	                mov rax, qword fs:[0x28]	      2604	ftp.c	FUNCTION_44
0x4004be5	        0x488945f8	                mov qword [rbp - 8], rax	      2604	ftp.c	FUNCTION_44
0x4004be9	            0x31c0	                            xor eax, eax	      2604	ftp.c	FUNCTION_44
0x4004beb	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2606	ftp.c	FUNCTION_44
0x4004bef	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	      2606	ftp.c	FUNCTION_44
0x4004bf5	          0x89459c	             mov dword [rbp - 0x64], eax	      2606	ftp.c	FUNCTION_44
0x4004bf8	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2607	ftp.c	FUNCTION_44
0x4004bfc	          0x488b00	                    mov rax, qword [rax]	      2607	ftp.c	FUNCTION_44
0x4004bff	        0x488945c8	             mov qword [rbp - 0x38], rax	      2607	ftp.c	FUNCTION_44
0x4004c03	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2609	ftp.c	FUNCTION_44
0x4004c07	    0x480550060000	                          add rax, 0x650	      2609	ftp.c	FUNCTION_44
0x4004c0d	        0x488945d0	             mov qword [rbp - 0x30], rax	      2609	ftp.c	FUNCTION_44
0x4004c11	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2610	ftp.c	FUNCTION_44
0x4004c15	        0x488945d8	             mov qword [rbp - 0x28], rax	      2610	ftp.c	FUNCTION_44
0x4004c19	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      2612	ftp.c	FUNCTION_44
0x4004c21	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2614	ftp.c	FUNCTION_44	IF_1
0x4004c25	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2614	ftp.c	FUNCTION_44	IF_1
0x4004c29	          0x4885c0	                           test rax, rax	      2614	ftp.c	FUNCTION_44	IF_1
0x4004c2c	            0x7411	                            je 0x4004c3f	      2614	ftp.c	FUNCTION_44	IF_1
0x4004c2e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2615	ftp.c	FUNCTION_44	CALL_1
0x4004c32	          0x4889c7	                            mov rdi, rax	      2615	ftp.c	FUNCTION_44	CALL_1
0x4004c35	      0xe800000000	                          call 0x4004c3a	      2615	ftp.c	FUNCTION_44	CALL_1
0x4004c3a	      0xe9570d0000	                           jmp 0x4005996	      2615	ftp.c	FUNCTION_44	CALL_1
0x4004c3f	        0x488d4da0	                   lea rcx, [rbp - 0x60]	      2617	ftp.c	FUNCTION_44	CALL_2
0x4004c43	        0x488d5594	                   lea rdx, [rbp - 0x6c]	      2617	ftp.c	FUNCTION_44	CALL_2
0x4004c47	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      2617	ftp.c	FUNCTION_44	CALL_2
0x4004c4b	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2617	ftp.c	FUNCTION_44	CALL_2
0x4004c4e	            0x89c7	                            mov edi, eax	      2617	ftp.c	FUNCTION_44	CALL_2
0x4004c50	      0xe85abeffff	                   call sym.ftp_readresp	      2617	ftp.c	FUNCTION_44	CALL_2
0x4004c55	          0x894598	             mov dword [rbp - 0x68], eax	      2617	ftp.c	FUNCTION_44	CALL_2
0x4004c58	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2618	ftp.c	FUNCTION_44	IF_2
0x4004c5c	            0x7408	                            je 0x4004c66	      2618	ftp.c	FUNCTION_44	IF_2
0x4004c5e	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2619	ftp.c	FUNCTION_44	IF_2
0x4004c61	      0xe9300d0000	                           jmp 0x4005996	      2619	ftp.c	FUNCTION_44	IF_2
0x4004c66	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2621	ftp.c	FUNCTION_44	IF_3
0x4004c69	            0x85c0	                           test eax, eax	      2621	ftp.c	FUNCTION_44	IF_3
0x4004c6b	     0xf84220d0000	                            je 0x4005993	      2621	ftp.c	FUNCTION_44	IF_3
0x4004c71	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004c75	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004c7b	          0x83f821	                           cmp eax, 0x21	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004c7e	     0xf87e90c0000	                            ja 0x400596d	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004c84	            0x89c0	                            mov eax, eax	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004c86	    0x488d14850000	                        lea rdx, [rax*4]	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004c8e	    0x488d05000000	                   lea rax, [0x04004c95]	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004c95	          0x8b0402	              mov eax, dword [rdx + rax]	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004c98	          0x4863d0	                         movsxd rdx, eax	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004c9b	    0x488d05000000	                   lea rax, [0x04004ca2]	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004ca2	          0x4801d0	                            add rax, rdx	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004ca5	            0xffe0	                                 jmp rax	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004ca7	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2625	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_4
0x4004caa	      0x3de6000000	                           cmp eax, 0xe6	      2625	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_4
0x4004caf	            0x7520	                           jne 0x4004cd1	      2625	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_4
0x4004cb1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2627	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_3
0x4004cb5	    0x8b90bc000000	            mov edx, dword [rax + 0xbc] 	      2627	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_3
0x4004cbb	          0x8b4d94	             mov ecx, dword [rbp - 0x6c]	      2627	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_3
0x4004cbe	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2627	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_3
0x4004cc2	            0x89ce	                            mov esi, ecx	      2627	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_3
0x4004cc4	          0x4889c7	                            mov rdi, rax	      2627	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_3
0x4004cc7	      0xe88cfcffff	            call sym.ftp_state_user_resp	      2627	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_3
0x4004ccc	      0xe9c50c0000	                           jmp 0x4005996	      2627	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_3
0x4004cd1	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2628	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5
0x4004cd4	      0x3ddc000000	                           cmp eax, 0xdc	      2628	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5
0x4004cd9	            0x7425	                            je 0x4004d00	      2628	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5
0x4004cdb	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      2629	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5	CALL_4
0x4004cde	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2629	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5	CALL_4
0x4004ce2	    0x488d35000000	                   lea rsi, [0x04004ce9]	      2629	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5	CALL_4
0x4004ce9	          0x4889c7	                            mov rdi, rax	      2629	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5	CALL_4
0x4004cec	      0xb800000000	                              mov eax, 0	      2629	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5	CALL_4
0x4004cf1	      0xe800000000	                          call 0x4004cf6	      2629	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5	CALL_4
0x4004cf6	      0xb808000000	                              mov eax, 8	      2631	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5
0x4004cfb	      0xe9960c0000	                           jmp 0x4005996	      2631	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5
0x4004d00	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2652	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d04	    0x8b80f0070000	           mov eax, dword [rax + 0x7f0] 	      2652	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d0a	            0x85c0	                           test eax, eax	      2652	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d0c	     0xf8426010000	                            je 0x4004e38	      2652	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d12	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2653	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d16	     0xfb680900200	          movzx eax, byte [rax + 0x290] 	      2653	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d1d	          0x83f001	                              xor eax, 1	      2653	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d20	            0x84c0	                             test al, al	      2652	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d22	            0x7529	                           jne 0x4004d4d	      2652	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d24	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2654	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d28	     0xfb680b90300	          movzx eax, byte [rax + 0x3b9] 	      2654	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d2f	            0x84c0	                             test al, al	      2653	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d31	     0xf8401010000	                            je 0x4004e38	      2653	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d37	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2655	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d3b	     0xfb680c00200	          movzx eax, byte [rax + 0x2c0] 	      2655	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d42	          0x83f001	                              xor eax, 1	      2655	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d45	            0x84c0	                             test al, al	      2654	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d47	     0xf84eb000000	                            je 0x4004e38	      2654	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d4d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2659	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d51	    0xc780b8000000	               mov dword [rax + 0xb8], 0	      2659	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004d5b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2660	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d5f	    0x8b80f4070000	           mov eax, dword [rax + 0x7f4] 	      2660	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d65	          0x83f801	                              cmp eax, 1	      2660	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d68	            0x7607	                           jbe 0x4004d71	      2660	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d6a	          0x83f802	                              cmp eax, 2	      2660	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d6d	            0x7420	                            je 0x4004d8f	      2660	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d6f	            0xeb3c	                           jmp 0x4004dad	      2660	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d71	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2663	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d75	    0xc780b4000000	               mov dword [rax + 0xb4], 1	      2663	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d7f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2664	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d83	    0xc780b0000000	               mov dword [rax + 0xb0], 0	      2664	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d8d	            0xeb4c	                           jmp 0x4004ddb	      2665	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d8f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2667	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d93	    0xc780b4000000	     mov dword [rax + 0xb4], 0xffffffff 	      2667	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004d9d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2668	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004da1	    0xc780b0000000	               mov dword [rax + 0xb0], 1	      2668	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004dab	            0xeb2e	                           jmp 0x4004ddb	      2669	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004dad	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2672	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004db1	    0x8b80f4070000	           mov eax, dword [rax + 0x7f4] 	      2672	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004db7	            0x89c2	                            mov edx, eax	      2671	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2	CALL_10
0x4004db9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2671	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2	CALL_10
0x4004dbd	    0x488d35000000	                   lea rsi, [0x04004dc4]	      2671	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2	CALL_10
0x4004dc4	          0x4889c7	                            mov rdi, rax	      2671	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2	CALL_10
0x4004dc7	      0xb800000000	                              mov eax, 0	      2671	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2	CALL_10
0x4004dcc	      0xe800000000	                          call 0x4004dd1	      2671	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2	CALL_10
0x4004dd1	      0xb830000000	                           mov eax, 0x30	      2673	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004dd6	      0xe9bb0b0000	                           jmp 0x4005996	      2673	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004ddb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004ddf	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004de5	            0x4898	                                    cdqe	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004de7	    0x488d14850000	                        lea rdx, [rax*4]	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004def	    0x488d05000000	                   lea rax, [0x04004df6]	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004df6	          0x4801c2	                            add rdx, rax	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004df9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004dfd	    0x488d35000000	                   lea rsi, [0x04004e04]	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004e04	          0x4889c7	                            mov rdi, rax	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004e07	      0xb800000000	                              mov eax, 0	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004e0c	      0xe800000000	                          call 0x4004e11	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004e11	          0x894598	             mov dword [rbp - 0x68], eax	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004e14	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004e18	            0x7408	                            je 0x4004e22	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004e1a	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004e1d	      0xe9740b0000	                           jmp 0x4005996	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004e22	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2676	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004e26	      0xbe02000000	                              mov esi, 2	      2676	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004e2b	          0x4889c7	                            mov rdi, rax	      2676	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004e2e	      0xe851bfffff	                         call sym._state	      2676	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4004e33	      0xe9480b0000	                           jmp 0x4005980	      2684	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004e38	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2679	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_3	CALL_11
0x4004e3c	          0x4889c7	                            mov rdi, rax	      2679	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_3	CALL_11
0x4004e3f	      0xe869bfffff	                 call sym.ftp_state_user	      2679	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_3	CALL_11
0x4004e44	          0x894598	             mov dword [rbp - 0x68], eax	      2679	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_3	CALL_11
0x4004e47	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2680	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_3	IF_9
0x4004e4b	     0xf842f0b0000	                            je 0x4005980	      2680	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_3	IF_9
0x4004e51	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2681	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_3	IF_9
0x4004e54	      0xe93d0b0000	                           jmp 0x4005996	      2681	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_3	IF_9
0x4004e59	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2696	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10
0x4004e5c	      0x3dea000000	                           cmp eax, 0xea	      2696	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10
0x4004e61	            0x740a	                            je 0x4004e6d	      2696	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10
0x4004e63	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2696	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10
0x4004e66	      0x3d4e010000	                          cmp eax, 0x14e	      2696	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10
0x4004e6b	            0x753d	                           jne 0x4004eaa	      2696	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10
0x4004e6d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2698	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	CALL_12
0x4004e71	      0xbe00000000	                              mov esi, 0	      2698	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	CALL_12
0x4004e76	          0x4889c7	                            mov rdi, rax	      2698	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	CALL_12
0x4004e79	      0xe800000000	                          call 0x4004e7e	      2698	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	CALL_12
0x4004e7e	          0x894598	             mov dword [rbp - 0x68], eax	      2698	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	CALL_12
0x4004e81	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2699	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11
0x4004e85	     0xf85c6000000	                           jne 0x4004f51	      2699	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11
0x4004e8b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2700	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11
0x4004e8f	    0xc680ae030000	               mov byte [rax + 0x3ae], 0	      2700	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11
0x4004e96	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2701	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11	CALL_13
0x4004e9a	          0x4889c7	                            mov rdi, rax	      2701	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11	CALL_13
0x4004e9d	      0xe80bbfffff	                 call sym.ftp_state_user	      2701	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11	CALL_13
0x4004ea2	          0x894598	             mov dword [rbp - 0x68], eax	      2701	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11	CALL_13
0x4004ea5	      0xe9a7000000	                           jmp 0x4004f51	      2699	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11
0x4004eaa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2704	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004eae	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      2704	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004eb4	            0x85c0	                           test eax, eax	      2704	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004eb6	            0x7f72	                            jg 0x4004f2a	      2704	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004eb8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2705	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004ebc	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      2705	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004ec2	          0x8d5001	                      lea edx, [rax + 1]	      2705	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004ec5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2705	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004ec9	    0x8990b8000000	             mov dword [rax + 0xb8], edx	      2705	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004ecf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2706	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004ed3	    0x8b90b0000000	            mov edx, dword [rax + 0xb0] 	      2706	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004ed9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2706	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004edd	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      2706	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004ee3	             0x1c2	                            add edx, eax	      2706	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004ee5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2706	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004ee9	    0x8990b0000000	             mov dword [rax + 0xb0], edx	      2706	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004eef	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_14
0x4004ef3	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_14
0x4004ef9	            0x4898	                                    cdqe	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_14
0x4004efb	    0x488d14850000	                        lea rdx, [rax*4]	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_14
0x4004f03	    0x488d05000000	                   lea rax, [0x04004f0a]	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_14
0x4004f0a	          0x4801c2	                            add rdx, rax	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_14
0x4004f0d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_14
0x4004f11	    0x488d35000000	                   lea rsi, [0x04004f18]	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_14
0x4004f18	          0x4889c7	                            mov rdi, rax	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_14
0x4004f1b	      0xb800000000	                              mov eax, 0	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_14
0x4004f20	      0xe800000000	                          call 0x4004f25	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_14
0x4004f25	          0x894598	             mov dword [rbp - 0x68], eax	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_14
0x4004f28	            0xeb27	                           jmp 0x4004f51	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_14
0x4004f2a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2711	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	IF_13
0x4004f2e	    0x8b80f0070000	           mov eax, dword [rax + 0x7f0] 	      2711	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	IF_13
0x4004f34	          0x83f801	                              cmp eax, 1	      2711	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	IF_13
0x4004f37	            0x7609	                           jbe 0x4004f42	      2711	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	IF_13
0x4004f39	    0xc74598400000	           mov dword [rbp - 0x68], 0x40 	      2713	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	IF_13
0x4004f40	            0xeb0f	                           jmp 0x4004f51	      2713	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	IF_13
0x4004f42	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2716	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	CALL_15
0x4004f46	          0x4889c7	                            mov rdi, rax	      2716	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	CALL_15
0x4004f49	      0xe85fbeffff	                 call sym.ftp_state_user	      2716	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	CALL_15
0x4004f4e	          0x894598	             mov dword [rbp - 0x68], eax	      2716	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	CALL_15
0x4004f51	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2719	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_14
0x4004f55	     0xf84280a0000	                            je 0x4005983	      2719	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_14
0x4004f5b	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2720	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_14
0x4004f5e	      0xe9330a0000	                           jmp 0x4005996	      2720	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_14
0x4004f63	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2725	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_16
0x4004f67	    0x8b90bc000000	            mov edx, dword [rax + 0xbc] 	      2725	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_16
0x4004f6d	          0x8b4d94	             mov ecx, dword [rbp - 0x6c]	      2725	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_16
0x4004f70	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2725	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_16
0x4004f74	            0x89ce	                            mov esi, ecx	      2725	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_16
0x4004f76	          0x4889c7	                            mov rdi, rax	      2725	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_16
0x4004f79	      0xe8daf9ffff	            call sym.ftp_state_user_resp	      2725	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_16
0x4004f7e	          0x894598	             mov dword [rbp - 0x68], eax	      2725	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_16
0x4004f81	      0xe90d0a0000	                           jmp 0x4005993	      2726	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004f86	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      2729	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_17
0x4004f89	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2729	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_17
0x4004f8d	            0x89d6	                            mov esi, edx	      2729	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_17
0x4004f8f	          0x4889c7	                            mov rdi, rax	      2729	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_17
0x4004f92	      0xe8d7fbffff	            call sym.ftp_state_acct_resp	      2729	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_17
0x4004f97	          0x894598	             mov dword [rbp - 0x68], eax	      2729	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_17
0x4004f9a	      0xe9f4090000	                           jmp 0x4005993	      2730	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004f9f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004fa3	    0x8b80f0070000	           mov eax, dword [rax + 0x7f0] 	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004fa9	          0x83f802	                              cmp eax, 2	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004fac	            0x7507	                           jne 0x4004fb5	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004fae	      0xba43000000	                           mov edx, 0x43	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004fb3	            0xeb05	                           jmp 0x4004fba	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004fb5	      0xba50000000	                           mov edx, 0x50	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004fba	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004fbe	    0x488d35000000	                   lea rsi, [0x04004fc5]	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004fc5	          0x4889c7	                            mov rdi, rax	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004fc8	      0xb800000000	                              mov eax, 0	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004fcd	      0xe800000000	                          call 0x4004fd2	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004fd2	          0x894598	             mov dword [rbp - 0x68], eax	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004fd5	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004fd9	            0x7408	                            je 0x4004fe3	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004fdb	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004fde	      0xe9b3090000	                           jmp 0x4005996	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004fe3	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2735	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004fe7	      0xbe07000000	                              mov esi, 7	      2735	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004fec	          0x4889c7	                            mov rdi, rax	      2735	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004fef	      0xe890bdffff	                         call sym._state	      2735	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004ff4	      0xe99a090000	                           jmp 0x4005993	      2737	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4004ff9	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2740	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4004ffc	      0x2dc8000000	                           sub eax, 0xc8	      2740	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4005001	          0x83f863	                           cmp eax, 0x63	      2740	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4005004	            0x771c	                            ja 0x4005022	      2740	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4005006	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2743	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x400500a	    0x8b80f0070000	           mov eax, dword [rax + 0x7f0] 	      2743	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4005010	          0x83f802	                              cmp eax, 2	      2743	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4005013	           0xf95c2	                                setne dl	      2743	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4005016	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2742	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x400501a	    0x8890ae030000	              mov byte [rax + 0x3ae], dl	      2742	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4005020	            0xeb19	                           jmp 0x400503b	      2742	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4005022	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2746	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_7	IF_16
0x4005026	    0x8b80f0070000	           mov eax, dword [rax + 0x7f0] 	      2746	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_7	IF_16
0x400502c	          0x83f802	                              cmp eax, 2	      2746	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_7	IF_16
0x400502f	            0x760a	                           jbe 0x400503b	      2746	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_7	IF_16
0x4005031	      0xb840000000	                           mov eax, 0x40	      2748	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_7	IF_16
0x4005036	      0xe95b090000	                           jmp 0x4005996	      2748	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_7	IF_16
0x400503b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2750	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x400503f	    0x8b80f8070000	           mov eax, dword [rax + 0x7f8] 	      2750	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x4005045	            0x85c0	                           test eax, eax	      2750	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x4005047	            0x7446	                            je 0x400508f	      2750	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x4005049	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x400504d	    0x488d15000000	                   lea rdx, [0x04005054]	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x4005054	    0x488d35000000	                   lea rsi, [0x0400505b]	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x400505b	          0x4889c7	                            mov rdi, rax	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x400505e	      0xb800000000	                              mov eax, 0	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x4005063	      0xe800000000	                          call 0x4005068	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x4005068	          0x894598	             mov dword [rbp - 0x68], eax	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x400506b	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x400506f	            0x7408	                            je 0x4005079	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x4005071	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x4005074	      0xe91d090000	                           jmp 0x4005996	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x4005079	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2754	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x400507d	      0xbe08000000	                              mov esi, 8	      2754	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x4005082	          0x4889c7	                            mov rdi, rax	      2754	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x4005085	      0xe8fabcffff	                         call sym._state	      2754	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x400508a	      0xe9f7080000	                           jmp 0x4005986	      2761	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400508f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2757	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_8	CALL_18
0x4005093	          0x4889c7	                            mov rdi, rax	      2757	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_8	CALL_18
0x4005096	      0xe8a4bdffff	                  call sym.ftp_state_pwd	      2757	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_8	CALL_18
0x400509b	          0x894598	             mov dword [rbp - 0x68], eax	      2757	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_8	CALL_18
0x400509e	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2758	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_8	IF_18
0x40050a2	     0xf84de080000	                            je 0x4005986	      2758	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_8	IF_18
0x40050a8	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2759	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_8	IF_18
0x40050ab	      0xe9e6080000	                           jmp 0x4005996	      2759	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_8	IF_18
0x40050b0	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2764	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19
0x40050b3	      0x3df3010000	                          cmp eax, 0x1f3	      2764	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19
0x40050b8	            0x7f3d	                            jg 0x40050f7	      2764	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19
0x40050ba	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2766	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	CALL_19
0x40050be	      0xbe00000000	                              mov esi, 0	      2766	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	CALL_19
0x40050c3	          0x4889c7	                            mov rdi, rax	      2766	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	CALL_19
0x40050c6	      0xe800000000	                          call 0x40050cb	      2766	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	CALL_19
0x40050cb	          0x894598	             mov dword [rbp - 0x68], eax	      2766	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	CALL_19
0x40050ce	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2768	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20
0x40050d2	            0x7423	                            je 0x40050f7	      2768	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20
0x40050d4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2769	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20	CALL_20
0x40050d8	          0x488b00	                    mov rax, qword [rax]	      2769	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20	CALL_20
0x40050db	    0x488d35000000	                   lea rsi, [0x040050e2]	      2769	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20	CALL_20
0x40050e2	          0x4889c7	                            mov rdi, rax	      2769	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20	CALL_20
0x40050e5	      0xb800000000	                              mov eax, 0	      2769	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20	CALL_20
0x40050ea	      0xe800000000	                          call 0x40050ef	      2769	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20	CALL_20
0x40050ef	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2770	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20
0x40050f2	      0xe99f080000	                           jmp 0x4005996	      2770	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20
0x40050f7	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2775	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_21
0x40050fb	          0x4889c7	                            mov rdi, rax	      2775	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_21
0x40050fe	      0xe83cbdffff	                  call sym.ftp_state_pwd	      2775	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_21
0x4005103	          0x894598	             mov dword [rbp - 0x68], eax	      2775	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_21
0x4005106	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2776	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_21
0x400510a	     0xf8479080000	                            je 0x4005989	      2776	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_21
0x4005110	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2777	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_21
0x4005113	      0xe97e080000	                           jmp 0x4005996	      2777	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_21
0x4005118	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2781	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x400511b	      0x3d01010000	                          cmp eax, 0x101	      2781	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x4005120	     0xf857f020000	                           jne 0x40053a5	      2781	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x4005126	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2782	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x400512a	    0x488b80200d00	           mov rax, qword [rax + 0xd20] 	      2782	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x4005131	        0x4883c004	                              add rax, 4	      2782	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x4005135	        0x488945a8	             mov qword [rbp - 0x58], rax	      2782	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x4005139	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2783	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x400513d	    0x488b80900700	           mov rax, qword [rax + 0x790] 	      2783	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x4005144	        0x488945e0	             mov qword [rbp - 0x20], rax	      2783	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x4005148	        0xc6459300	                mov byte [rbp - 0x6d], 0	      2786	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x400514c	    0x488b05000000	            mov rax, qword [0x04005153] 	      2788	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	CALL_22
0x4005153	          0x488b00	                    mov rax, qword [rax]	      2788	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	CALL_22
0x4005156	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      2788	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	CALL_22
0x400515a	        0x4883c201	                              add rdx, 1	      2788	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	CALL_22
0x400515e	          0x4889d7	                            mov rdi, rdx	      2788	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	CALL_22
0x4005161	            0xffd0	                                call rax	      2788	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	CALL_22
0x4005163	        0x488945e8	             mov qword [rbp - 0x18], rax	      2788	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	CALL_22
0x4005167	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2789	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_23
0x400516c	            0x750f	                           jne 0x400517d	      2789	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_23
0x400516e	      0xb81b000000	                           mov eax, 0x1b	      2790	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_23
0x4005173	      0xe91e080000	                           jmp 0x4005996	      2790	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_23
0x4005178	      0x488345a801	               add qword [rbp - 0x58], 1	      2804	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x400517d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2802	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4005181	    0x488b90200d00	           mov rdx, qword [rax + 0xd20] 	      2802	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4005188	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2802	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x400518c	          0x4801d0	                            add rax, rdx	      2802	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x400518f	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      2802	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4005193	            0x7621	                           jbe 0x40051b6	      2802	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4005195	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4005199	           0xfb600	                   movzx eax, byte [rax]	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x400519c	            0x3c0a	                             cmp al, 0xa	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x400519e	            0x7416	                            je 0x40051b6	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x40051a0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x40051a4	           0xfb600	                   movzx eax, byte [rax]	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x40051a7	            0x84c0	                             test al, al	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x40051a9	            0x740b	                            je 0x40051b6	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x40051ab	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x40051af	           0xfb600	                   movzx eax, byte [rax]	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x40051b2	            0x3c22	                            cmp al, 0x22	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x40051b4	            0x75c2	                           jne 0x4005178	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x40051b6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2806	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24
0x40051ba	           0xfb600	                   movzx eax, byte [rax]	      2806	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24
0x40051bd	            0x3c22	                            cmp al, 0x22	      2806	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24
0x40051bf	            0x756d	                           jne 0x400522e	      2806	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24
0x40051c1	      0x488345a801	               add qword [rbp - 0x58], 1	      2808	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24
0x40051c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2809	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1
0x40051ca	        0x488945b0	             mov qword [rbp - 0x50], rax	      2809	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1
0x40051ce	            0xeb4c	                           jmp 0x400521c	      2809	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1
0x40051d0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2810	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25
0x40051d4	           0xfb600	                   movzx eax, byte [rax]	      2810	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25
0x40051d7	            0x3c22	                            cmp al, 0x22	      2810	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25
0x40051d9	            0x752a	                           jne 0x4005205	      2810	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25
0x40051db	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2811	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40051df	        0x4883c001	                              add rax, 1	      2811	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40051e3	           0xfb600	                   movzx eax, byte [rax]	      2811	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40051e6	            0x3c22	                            cmp al, 0x22	      2811	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40051e8	            0x7515	                           jne 0x40051ff	      2811	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40051ea	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2813	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40051ee	         0xfb65001	               movzx edx, byte [rax + 1]	      2813	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40051f2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2813	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40051f6	            0x8810	                      mov byte [rax], dl	      2813	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40051f8	      0x488345a801	               add qword [rbp - 0x58], 1	      2814	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40051fd	            0xeb13	                           jmp 0x4005212	      2814	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40051ff	        0xc6459301	                mov byte [rbp - 0x6d], 1	      2818	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	ELSE_9
0x4005203	            0xeb22	                           jmp 0x4005227	      2819	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	ELSE_9
0x4005205	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2823	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	ELSE_10
0x4005209	           0xfb610	                   movzx edx, byte [rax]	      2823	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	ELSE_10
0x400520c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2823	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	ELSE_10
0x4005210	            0x8810	                      mov byte [rax], dl	      2823	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	ELSE_10
0x4005212	      0x488345b001	               add qword [rbp - 0x50], 1	      2824	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	ELSE_10
0x4005217	      0x488345a801	               add qword [rbp - 0x58], 1	      2825	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	ELSE_10
0x400521c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2809	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1
0x4005220	           0xfb600	                   movzx eax, byte [rax]	      2809	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1
0x4005223	            0x84c0	                             test al, al	      2809	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1
0x4005225	            0x75a9	                           jne 0x40051d0	      2809	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1
0x4005227	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2827	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	ELSE_10
0x400522b	          0xc60000	                       mov byte [rax], 0	      2827	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	ELSE_10
0x400522e	        0x807d9300	                cmp byte [rbp - 0x6d], 0	      2829	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x4005232	     0xf8442010000	                            je 0x400537a	      2829	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x4005238	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2842	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x400523c	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      2842	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x4005243	          0x4885c0	                           test rax, rax	      2842	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x4005246	     0xf85ca000000	                           jne 0x4005316	      2842	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x400524c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2842	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x4005250	           0xfb600	                   movzx eax, byte [rax]	      2842	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x4005253	            0x3c2f	                            cmp al, 0x2f	      2842	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x4005255	     0xf84bb000000	                            je 0x4005316	      2842	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x400525b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2844	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_23
0x400525f	    0x488d15000000	                   lea rdx, [0x04005266]	      2844	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_23
0x4005266	    0x488d35000000	                   lea rsi, [0x0400526d]	      2844	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_23
0x400526d	          0x4889c7	                            mov rdi, rax	      2844	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_23
0x4005270	      0xb800000000	                              mov eax, 0	      2844	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_23
0x4005275	      0xe800000000	                          call 0x400527a	      2844	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_23
0x400527a	          0x894598	             mov dword [rbp - 0x68], eax	      2844	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_23
0x400527d	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2845	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29
0x4005281	            0x741b	                            je 0x400529e	      2845	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29
0x4005283	    0x488b05000000	            mov rax, qword [0x0400528a] 	      2846	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29	CALL_24
0x400528a	          0x488b00	                    mov rax, qword [rax]	      2846	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29	CALL_24
0x400528d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2846	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29	CALL_24
0x4005291	          0x4889d7	                            mov rdi, rdx	      2846	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29	CALL_24
0x4005294	            0xffd0	                                call rax	      2846	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29	CALL_24
0x4005296	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2847	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29
0x4005299	      0xe9f8060000	                           jmp 0x4005996	      2847	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29
0x400529e	    0x488b05000000	            mov rax, qword [0x040052a5] 	      2849	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_25
0x40052a5	          0x488b00	                    mov rax, qword [rax]	      2849	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_25
0x40052a8	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2849	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_25
0x40052ac	        0x488b5270	            mov rdx, qword [rdx + 0x70] 	      2849	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_25
0x40052b0	          0x4889d7	                            mov rdi, rdx	      2849	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_25
0x40052b3	            0xffd0	                                call rax	      2849	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_25
0x40052b5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2849	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_25
0x40052b9	    0x48c740700000	               mov qword [rax + 0x70], 0	      2849	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_25
0x40052c1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2850	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x40052c5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2850	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x40052c9	        0x48895070	             mov qword [rax + 0x70], rdx	      2850	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x40052cd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2851	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_26
0x40052d1	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      2851	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_26
0x40052d5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2851	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_26
0x40052d9	    0x488d35000000	                   lea rsi, [0x040052e0]	      2851	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_26
0x40052e0	          0x4889c7	                            mov rdi, rax	      2851	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_26
0x40052e3	      0xb800000000	                              mov eax, 0	      2851	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_26
0x40052e8	      0xe800000000	                          call 0x40052ed	      2851	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_26
0x40052ed	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2853	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x40052f1	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      2853	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x40052f5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2853	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x40052f9	    0x488990f05000	          mov qword [rax + 0x50f0], rdx 	      2853	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x4005300	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2854	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x4005304	      0xbe0a000000	                            mov esi, 0xa	      2854	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x4005309	          0x4889c7	                            mov rdi, rax	      2854	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x400530c	      0xe873baffff	                         call sym._state	      2854	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x4005311	      0xe97d060000	                           jmp 0x4005993	      2855	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x4005316	    0x488b05000000	            mov rax, qword [0x0400531d] 	      2858	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_27
0x400531d	          0x488b00	                    mov rax, qword [rax]	      2858	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_27
0x4005320	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2858	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_27
0x4005324	        0x488b5270	            mov rdx, qword [rdx + 0x70] 	      2858	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_27
0x4005328	          0x4889d7	                            mov rdi, rdx	      2858	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_27
0x400532b	            0xffd0	                                call rax	      2858	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_27
0x400532d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2858	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_27
0x4005331	    0x48c740700000	               mov qword [rax + 0x70], 0	      2858	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_27
0x4005339	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2859	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x400533d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2859	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x4005341	        0x48895070	             mov qword [rax + 0x70], rdx	      2859	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x4005345	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2860	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_28
0x4005349	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      2860	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_28
0x400534d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2860	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_28
0x4005351	    0x488d35000000	                   lea rsi, [0x04005358]	      2860	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_28
0x4005358	          0x4889c7	                            mov rdi, rax	      2860	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_28
0x400535b	      0xb800000000	                              mov eax, 0	      2860	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_28
0x4005360	      0xe800000000	                          call 0x4005365	      2860	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_28
0x4005365	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2862	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x4005369	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      2862	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x400536d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2862	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x4005371	    0x488990f05000	          mov qword [rax + 0x50f0], rdx 	      2862	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x4005378	            0xeb2b	                           jmp 0x40053a5	      2862	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x400537a	    0x488b05000000	            mov rax, qword [0x04005381] 	      2866	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_29
0x4005381	          0x488b00	                    mov rax, qword [rax]	      2866	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_29
0x4005384	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2866	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_29
0x4005388	          0x4889d7	                            mov rdi, rdx	      2866	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_29
0x400538b	            0xffd0	                                call rax	      2866	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_29
0x400538d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2867	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_30
0x4005391	    0x488d35000000	                   lea rsi, [0x04005398]	      2867	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_30
0x4005398	          0x4889c7	                            mov rdi, rax	      2867	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_30
0x400539b	      0xb800000000	                              mov eax, 0	      2867	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_30
0x40053a0	      0xe800000000	                          call 0x40053a5	      2867	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_30
0x40053a5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2870	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40053a9	      0xbe00000000	                              mov esi, 0	      2870	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40053ae	          0x4889c7	                            mov rdi, rax	      2870	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40053b1	      0xe8ceb9ffff	                         call sym._state	      2870	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40053b6	      0xe9d8050000	                           jmp 0x4005993	      2872	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40053bb	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2875	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x40053be	      0x3dd7000000	                           cmp eax, 0xd7	      2875	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x40053c3	     0xf8577010000	                           jne 0x4005540	      2875	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x40053c9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2876	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x40053cd	    0x488b80200d00	           mov rax, qword [rax + 0xd20] 	      2876	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x40053d4	        0x4883c004	                              add rax, 4	      2876	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x40053d8	        0x488945b8	             mov qword [rbp - 0x48], rax	      2876	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x40053dc	    0x488b05000000	            mov rax, qword [0x040053e3] 	      2880	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_33
0x40053e3	          0x488b00	                    mov rax, qword [rax]	      2880	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_33
0x40053e6	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      2880	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_33
0x40053ea	        0x4883c201	                              add rdx, 1	      2880	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_33
0x40053ee	          0x4889d7	                            mov rdi, rdx	      2880	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_33
0x40053f1	            0xffd0	                                call rax	      2880	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_33
0x40053f3	        0x488945f0	             mov qword [rbp - 0x10], rax	      2880	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_33
0x40053f7	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2881	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_31
0x40053fc	            0x750f	                           jne 0x400540d	      2881	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_31
0x40053fe	      0xb81b000000	                           mov eax, 0x1b	      2882	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_31
0x4005403	      0xe98e050000	                           jmp 0x4005996	      2882	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_31
0x4005408	      0x488345b801	               add qword [rbp - 0x48], 1	      2888	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	WHILE_2
0x400540d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2887	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	WHILE_2
0x4005411	           0xfb600	                   movzx eax, byte [rax]	      2887	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	WHILE_2
0x4005414	            0x3c20	                            cmp al, 0x20	      2887	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	WHILE_2
0x4005416	            0x74f0	                            je 0x4005408	      2887	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	WHILE_2
0x4005418	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x400541c	        0x488945c0	             mov qword [rbp - 0x40], rax	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4005420	            0xeb1d	                           jmp 0x400543f	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4005422	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2890	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4005426	        0x488d5001	                      lea rdx, [rax + 1]	      2890	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x400542a	        0x488955c0	             mov qword [rbp - 0x40], rdx	      2890	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x400542e	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2890	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4005432	        0x488d4a01	                      lea rcx, [rdx + 1]	      2890	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4005436	        0x48894db8	             mov qword [rbp - 0x48], rcx	      2890	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x400543a	           0xfb612	                   movzx edx, byte [rdx]	      2890	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x400543d	            0x8810	                      mov byte [rax], dl	      2890	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x400543f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4005443	           0xfb600	                   movzx eax, byte [rax]	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4005446	            0x84c0	                             test al, al	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4005448	            0x740b	                            je 0x4005455	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x400544a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x400544e	           0xfb600	                   movzx eax, byte [rax]	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4005451	            0x3c20	                            cmp al, 0x20	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4005453	            0x75cd	                           jne 0x4005422	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4005455	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2891	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x4005459	          0xc60000	                       mov byte [rax], 0	      2891	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x400545c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2895	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_34
0x4005460	    0x488d35000000	                   lea rsi, [0x04005467]	      2895	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_34
0x4005467	          0x4889c7	                            mov rdi, rax	      2895	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_34
0x400546a	      0xe800000000	                          call 0x400546f	      2895	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_34
0x400546f	            0x85c0	                           test eax, eax	      2895	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_34
0x4005471	     0xf8491000000	                            je 0x4005508	      2895	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_34
0x4005477	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2897	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_35
0x400547b	    0x488d15000000	                   lea rdx, [0x04005482]	      2897	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_35
0x4005482	    0x488d35000000	                   lea rsi, [0x04005489]	      2897	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_35
0x4005489	          0x4889c7	                            mov rdi, rax	      2897	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_35
0x400548c	      0xb800000000	                              mov eax, 0	      2897	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_35
0x4005491	      0xe800000000	                          call 0x4005496	      2897	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_35
0x4005496	          0x894598	             mov dword [rbp - 0x68], eax	      2897	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_35
0x4005499	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2898	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33
0x400549d	            0x741b	                            je 0x40054ba	      2898	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33
0x400549f	    0x488b05000000	            mov rax, qword [0x040054a6] 	      2899	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33	CALL_36
0x40054a6	          0x488b00	                    mov rax, qword [rax]	      2899	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33	CALL_36
0x40054a9	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2899	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33	CALL_36
0x40054ad	          0x4889d7	                            mov rdi, rdx	      2899	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33	CALL_36
0x40054b0	            0xffd0	                                call rax	      2899	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33	CALL_36
0x40054b2	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2900	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33
0x40054b5	      0xe9dc040000	                           jmp 0x4005996	      2900	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33
0x40054ba	    0x488b05000000	            mov rax, qword [0x040054c1] 	      2903	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_37
0x40054c1	          0x488b00	                    mov rax, qword [rax]	      2903	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_37
0x40054c4	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2903	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_37
0x40054c8	    0x488b92d00000	            mov rdx, qword [rdx + 0xd0] 	      2903	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_37
0x40054cf	          0x4889d7	                            mov rdi, rdx	      2903	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_37
0x40054d2	            0xffd0	                                call rax	      2903	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_37
0x40054d4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2903	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_37
0x40054d8	    0x48c780d00000	               mov qword [rax + 0xd0], 0	      2903	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_37
0x40054e3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2904	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32
0x40054e7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2904	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32
0x40054eb	    0x488990d00000	             mov qword [rax + 0xd0], rdx	      2904	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32
0x40054f2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2905	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32
0x40054f6	      0xbe0b000000	                            mov esi, 0xb	      2905	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32
0x40054fb	          0x4889c7	                            mov rdi, rax	      2905	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32
0x40054fe	      0xe881b8ffff	                         call sym._state	      2905	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32
0x4005503	      0xe98b040000	                           jmp 0x4005993	      2906	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32
0x4005508	    0x488b05000000	            mov rax, qword [0x0400550f] 	      2910	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_38
0x400550f	          0x488b00	                    mov rax, qword [rax]	      2910	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_38
0x4005512	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2910	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_38
0x4005516	    0x488b92d00000	            mov rdx, qword [rdx + 0xd0] 	      2910	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_38
0x400551d	          0x4889d7	                            mov rdi, rdx	      2910	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_38
0x4005520	            0xffd0	                                call rax	      2910	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_38
0x4005522	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2910	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_38
0x4005526	    0x48c780d00000	               mov qword [rax + 0xd0], 0	      2910	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_38
0x4005531	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2911	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x4005535	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2911	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x4005539	    0x488990d00000	             mov qword [rax + 0xd0], rdx	      2911	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x4005540	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2917	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005544	      0xbe00000000	                              mov esi, 0	      2917	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005549	          0x4889c7	                            mov rdi, rax	      2917	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400554c	      0xe833b8ffff	                         call sym._state	      2917	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005551	      0xe93d040000	                           jmp 0x4005993	      2919	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005556	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2922	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_34
0x4005559	      0x3dfa000000	                           cmp eax, 0xfa	      2922	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_34
0x400555e	            0x7511	                           jne 0x4005571	      2922	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_34
0x4005560	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2924	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_34	CALL_41
0x4005564	          0x4889c7	                            mov rdi, rax	      2924	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_34	CALL_41
0x4005567	      0xe8d3b8ffff	                  call sym.ftp_state_pwd	      2924	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_34	CALL_41
0x400556c	      0xe922040000	                           jmp 0x4005993	      2925	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_34
0x4005571	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2928	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005575	      0xbe00000000	                              mov esi, 0	      2928	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400557a	          0x4889c7	                            mov rdi, rax	      2928	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400557d	      0xe802b8ffff	                         call sym._state	      2928	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005582	      0xe90c040000	                           jmp 0x4005993	      2930	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005587	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2936	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x400558a	      0x3d8f010000	                          cmp eax, 0x18f	      2936	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x400558f	            0x7e36	                           jle 0x40055c7	      2936	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x4005591	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2936	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x4005595	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      2936	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x400559b	            0x85c0	                           test eax, eax	      2936	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x400559d	            0x7528	                           jne 0x40055c7	      2936	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x400559f	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      2938	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35	CALL_44
0x40055a2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2938	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35	CALL_44
0x40055a6	          0x488b00	                    mov rax, qword [rax]	      2938	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35	CALL_44
0x40055a9	    0x488d35000000	                   lea rsi, [0x040055b0]	      2938	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35	CALL_44
0x40055b0	          0x4889c7	                            mov rdi, rax	      2938	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35	CALL_44
0x40055b3	      0xb800000000	                              mov eax, 0	      2938	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35	CALL_44
0x40055b8	      0xe800000000	                          call 0x40055bd	      2938	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35	CALL_44
0x40055bd	      0xb815000000	                           mov eax, 0x15	      2939	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x40055c2	      0xe9cf030000	                           jmp 0x4005996	      2939	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x40055c7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2941	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_45
0x40055cb	    0x8b90bc000000	            mov edx, dword [rax + 0xbc] 	      2941	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_45
0x40055d1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2941	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_45
0x40055d5	      0xbe00000000	                              mov esi, 0	      2941	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_45
0x40055da	          0x4889c7	                            mov rdi, rax	      2941	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_45
0x40055dd	      0xe899d6ffff	                call sym.ftp_state_quote	      2941	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_45
0x40055e2	          0x894598	             mov dword [rbp - 0x68], eax	      2941	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_45
0x40055e5	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2942	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_36
0x40055e9	     0xf849d030000	                            je 0x400598c	      2942	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_36
0x40055ef	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2943	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_36
0x40055f2	      0xe99f030000	                           jmp 0x4005996	      2943	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_36
0x40055f7	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2948	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37
0x40055fa	      0x2dc8000000	                           sub eax, 0xc8	      2948	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37
0x40055ff	          0x83f863	                           cmp eax, 0x63	      2948	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37
0x4005602	     0xf86da000000	                           jbe 0x40056e2	      2948	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37
0x4005608	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2950	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x400560c	          0x488b00	                    mov rax, qword [rax]	      2950	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x400560f	    0x8b80bc070000	           mov eax, dword [rax + 0x7bc] 	      2950	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005615	            0x85c0	                           test eax, eax	      2950	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005617	     0xf8498000000	                            je 0x40056b5	      2950	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x400561d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2951	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005621	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      2951	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005627	            0x85c0	                           test eax, eax	      2950	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005629	     0xf8486000000	                            je 0x40056b5	      2950	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x400562f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2951	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005633	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      2951	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005639	            0x85c0	                           test eax, eax	      2951	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x400563b	            0x7578	                           jne 0x40056b5	      2951	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x400563d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2953	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005641	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      2953	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005647	          0x8d5001	                      lea edx, [rax + 1]	      2953	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x400564a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2953	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x400564e	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2953	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005654	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005658	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x400565c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005660	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005666	            0x4898	                                    cdqe	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005668	        0x48c1e003	                              shl rax, 3	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x400566c	        0x4883e808	                              sub rax, 8	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005670	          0x4801d0	                            add rax, rdx	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005673	          0x488b10	                    mov rdx, qword [rax]	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005676	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x400567a	    0x488d35000000	                   lea rsi, [0x04005681]	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005681	          0x4889c7	                            mov rdi, rax	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005684	      0xb800000000	                              mov eax, 0	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005689	      0xe800000000	                          call 0x400568e	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x400568e	          0x894598	             mov dword [rbp - 0x68], eax	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005691	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005695	            0x7408	                            je 0x400569f	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4005697	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x400569a	      0xe9f7020000	                           jmp 0x4005996	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x400569f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2955	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x40056a3	      0xbe11000000	                           mov esi, 0x11	      2955	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x40056a8	          0x4889c7	                            mov rdi, rax	      2955	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x40056ab	      0xe8d4b6ffff	                         call sym._state	      2955	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x40056b0	      0xe9da020000	                           jmp 0x400598f	      2978	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40056b5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2959	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13	CALL_46
0x40056b9	    0x488d35000000	                   lea rsi, [0x040056c0]	      2959	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13	CALL_46
0x40056c0	          0x4889c7	                            mov rdi, rax	      2959	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13	CALL_46
0x40056c3	      0xb800000000	                              mov eax, 0	      2959	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13	CALL_46
0x40056c8	      0xe800000000	                          call 0x40056cd	      2959	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13	CALL_46
0x40056cd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2960	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13
0x40056d1	    0xc68098000000	                mov byte [rax + 0x98], 1	      2960	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13
0x40056d8	      0xb809000000	                              mov eax, 9	      2962	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13
0x40056dd	      0xe9b4020000	                           jmp 0x4005996	      2962	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13
0x40056e2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2967	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14
0x40056e6	    0xc780b4000000	               mov dword [rax + 0xb4], 0	      2967	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14
0x40056f0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x40056f4	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x40056fa	          0x8d5001	                      lea edx, [rax + 1]	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x40056fd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4005701	    0x899094000000	             mov dword [rax + 0x94], edx	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4005707	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x400570b	    0x8b9094000000	            mov edx, dword [rax + 0x94] 	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4005711	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4005715	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x400571b	            0x39c2	                            cmp edx, eax	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x400571d	            0x7f4f	                            jg 0x400576e	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x400571f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4005723	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4005727	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x400572b	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4005731	            0x4898	                                    cdqe	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4005733	        0x48c1e003	                              shl rax, 3	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4005737	        0x4883e808	                              sub rax, 8	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x400573b	          0x4801d0	                            add rax, rdx	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x400573e	          0x488b10	                    mov rdx, qword [rax]	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4005741	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4005745	    0x488d35000000	                   lea rsi, [0x0400574c]	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x400574c	          0x4889c7	                            mov rdi, rax	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x400574f	      0xb800000000	                              mov eax, 0	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4005754	      0xe800000000	                          call 0x4005759	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4005759	          0x894598	             mov dword [rbp - 0x68], eax	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x400575c	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4005760	     0xf8429020000	                            je 0x400598f	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4005766	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4005769	      0xe928020000	                           jmp 0x4005996	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x400576e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2973	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	ELSE_15	CALL_47
0x4005772	          0x4889c7	                            mov rdi, rax	      2973	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	ELSE_15	CALL_47
0x4005775	      0xe8e2d0ffff	                 call sym.ftp_state_mdtm	      2973	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	ELSE_15	CALL_47
0x400577a	          0x894598	             mov dword [rbp - 0x68], eax	      2973	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	ELSE_15	CALL_47
0x400577d	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2974	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	ELSE_15	IF_40
0x4005781	     0xf8408020000	                            je 0x400598f	      2974	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	ELSE_15	IF_40
0x4005787	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2975	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	ELSE_15	IF_40
0x400578a	      0xe907020000	                           jmp 0x4005996	      2975	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	ELSE_15	IF_40
0x400578f	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x4005792	      0x2dc8000000	                           sub eax, 0xc8	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x4005797	          0x83f863	                           cmp eax, 0x63	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x400579a	            0x7640	                           jbe 0x40057dc	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x400579c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x40057a0	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x40057a6	          0x8d48ff	                      lea ecx, [rax - 1]	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x40057a9	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x40057ad	    0x898ab8000000	             mov dword [rdx + 0xb8], ecx	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x40057b3	            0x85c0	                           test eax, eax	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x40057b5	            0x7525	                           jne 0x40057dc	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x40057b7	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      2983	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41	CALL_48
0x40057ba	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2983	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41	CALL_48
0x40057be	    0x488d35000000	                   lea rsi, [0x040057c5]	      2983	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41	CALL_48
0x40057c5	          0x4889c7	                            mov rdi, rax	      2983	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41	CALL_48
0x40057c8	      0xb800000000	                              mov eax, 0	      2983	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41	CALL_48
0x40057cd	      0xe800000000	                          call 0x40057d2	      2983	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41	CALL_48
0x40057d2	      0xb809000000	                              mov eax, 9	      2984	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x40057d7	      0xe9ba010000	                           jmp 0x4005996	      2984	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x40057dc	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2986	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40057e0	      0xbe10000000	                           mov esi, 0x10	      2986	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40057e5	          0x4889c7	                            mov rdi, rax	      2986	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40057e8	      0xe897b5ffff	                         call sym._state	      2986	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40057ed	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40057f1	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40057f5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40057f9	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40057ff	            0x4898	                                    cdqe	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005801	        0x48c1e003	                              shl rax, 3	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005805	        0x4883e808	                              sub rax, 8	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005809	          0x4801d0	                            add rax, rdx	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400580c	          0x488b10	                    mov rdx, qword [rax]	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400580f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005813	    0x488d35000000	                   lea rsi, [0x0400581a]	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400581a	          0x4889c7	                            mov rdi, rax	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400581d	      0xb800000000	                              mov eax, 0	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005822	      0xe800000000	                          call 0x4005827	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005827	          0x894598	             mov dword [rbp - 0x68], eax	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400582a	        0x837d9800	               cmp dword [rbp - 0x68], 0	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400582e	     0xf845e010000	                            je 0x4005992	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005834	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005837	      0xe95a010000	                           jmp 0x4005996	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400583c	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      2992	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_49
0x400583f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2992	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_49
0x4005843	            0x89d6	                            mov esi, edx	      2992	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_49
0x4005845	          0x4889c7	                            mov rdi, rax	      2992	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_49
0x4005848	      0xe876e0ffff	            call sym.ftp_state_mdtm_resp	      2992	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_49
0x400584d	          0x894598	             mov dword [rbp - 0x68], eax	      2992	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_49
0x4005850	      0xe93e010000	                           jmp 0x4005993	      2993	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005855	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2999	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_50
0x4005859	    0x8b90bc000000	            mov edx, dword [rax + 0xbc] 	      2999	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_50
0x400585f	          0x8b4d94	             mov ecx, dword [rbp - 0x6c]	      2999	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_50
0x4005862	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2999	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_50
0x4005866	            0x89ce	                            mov esi, ecx	      2999	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_50
0x4005868	          0x4889c7	                            mov rdi, rax	      2999	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_50
0x400586b	      0xe84ae5ffff	            call sym.ftp_state_type_resp	      2999	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_50
0x4005870	          0x894598	             mov dword [rbp - 0x68], eax	      2999	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_50
0x4005873	      0xe91b010000	                           jmp 0x4005993	      3000	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005878	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3005	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_51
0x400587c	    0x8b90bc000000	            mov edx, dword [rax + 0xbc] 	      3005	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_51
0x4005882	          0x8b4d94	             mov ecx, dword [rbp - 0x6c]	      3005	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_51
0x4005885	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3005	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_51
0x4005889	            0x89ce	                            mov esi, ecx	      3005	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_51
0x400588b	          0x4889c7	                            mov rdi, rax	      3005	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_51
0x400588e	      0xe8d5e8ffff	            call sym.ftp_state_size_resp	      3005	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_51
0x4005893	          0x894598	             mov dword [rbp - 0x68], eax	      3005	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_51
0x4005896	      0xe9f8000000	                           jmp 0x4005993	      3006	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400589b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3010	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_52
0x400589f	    0x8b90bc000000	            mov edx, dword [rax + 0xbc] 	      3010	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_52
0x40058a5	          0x8b4d94	             mov ecx, dword [rbp - 0x6c]	      3010	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_52
0x40058a8	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3010	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_52
0x40058ac	            0x89ce	                            mov esi, ecx	      3010	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_52
0x40058ae	          0x4889c7	                            mov rdi, rax	      3010	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_52
0x40058b1	      0xe88feaffff	            call sym.ftp_state_rest_resp	      3010	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_52
0x40058b6	          0x894598	             mov dword [rbp - 0x68], eax	      3010	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_52
0x40058b9	      0xe9d5000000	                           jmp 0x4005993	      3011	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40058be	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      3014	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42
0x40058c1	      0x3dc8000000	                           cmp eax, 0xc8	      3014	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42
0x40058c6	            0x7425	                            je 0x40058ed	      3014	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42
0x40058c8	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      3016	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42	CALL_53
0x40058cb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3016	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42	CALL_53
0x40058cf	    0x488d35000000	                   lea rsi, [0x040058d6]	      3016	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42	CALL_53
0x40058d6	          0x4889c7	                            mov rdi, rax	      3016	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42	CALL_53
0x40058d9	      0xb800000000	                              mov eax, 0	      3016	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42	CALL_53
0x40058de	      0xe800000000	                          call 0x40058e3	      3016	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42	CALL_53
0x40058e3	      0xb854000000	                           mov eax, 0x54	      3017	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42
0x40058e8	      0xe9a9000000	                           jmp 0x4005996	      3017	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42
0x40058ed	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3019	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_54
0x40058f1	          0x4889c7	                            mov rdi, rax	      3019	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_54
0x40058f4	      0xe8f7c7ffff	             call sym.ftp_state_use_pasv	      3019	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_54
0x40058f9	          0x894598	             mov dword [rbp - 0x68], eax	      3019	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_54
0x40058fc	      0xe992000000	                           jmp 0x4005993	      3020	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005901	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      3023	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_55
0x4005904	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3023	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_55
0x4005908	            0x89d6	                            mov esi, edx	      3023	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_55
0x400590a	          0x4889c7	                            mov rdi, rax	      3023	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_55
0x400590d	      0xe879d7ffff	            call sym.ftp_state_pasv_resp	      3023	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_55
0x4005912	          0x894598	             mov dword [rbp - 0x68], eax	      3023	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_55
0x4005915	            0xeb7c	                           jmp 0x4005993	      3024	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005917	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      3027	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_56
0x400591a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3027	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_56
0x400591e	            0x89d6	                            mov esi, edx	      3027	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_56
0x4005920	          0x4889c7	                            mov rdi, rax	      3027	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_56
0x4005923	      0xe8a6deffff	            call sym.ftp_state_port_resp	      3027	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_56
0x4005928	          0x894598	             mov dword [rbp - 0x68], eax	      3027	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_56
0x400592b	            0xeb66	                           jmp 0x4005993	      3028	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400592d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3032	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_57
0x4005931	    0x8b90bc000000	            mov edx, dword [rax + 0xbc] 	      3032	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_57
0x4005937	          0x8b4d94	             mov ecx, dword [rbp - 0x6c]	      3032	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_57
0x400593a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3032	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_57
0x400593e	            0x89ce	                            mov esi, ecx	      3032	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_57
0x4005940	          0x4889c7	                            mov rdi, rax	      3032	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_57
0x4005943	      0xe858ecffff	             call sym.ftp_state_get_resp	      3032	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_57
0x4005948	          0x894598	             mov dword [rbp - 0x68], eax	      3032	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_57
0x400594b	            0xeb46	                           jmp 0x4005993	      3033	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400594d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3036	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_58
0x4005951	    0x8b90bc000000	            mov edx, dword [rax + 0xbc] 	      3036	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_58
0x4005957	          0x8b4d94	             mov ecx, dword [rbp - 0x6c]	      3036	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_58
0x400595a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3036	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_58
0x400595e	            0x89ce	                            mov esi, ecx	      3036	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_58
0x4005960	          0x4889c7	                            mov rdi, rax	      3036	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_58
0x4005963	      0xe813ebffff	            call sym.ftp_state_stor_resp	      3036	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_58
0x4005968	          0x894598	             mov dword [rbp - 0x68], eax	      3036	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_58
0x400596b	            0xeb26	                           jmp 0x4005993	      3037	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400596d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3043	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005971	      0xbe00000000	                              mov esi, 0	      3043	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005976	          0x4889c7	                            mov rdi, rax	      3043	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005979	      0xe806b4ffff	                         call sym._state	      3043	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400597e	            0xeb13	                           jmp 0x4005993	      3044	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005980	              0x90	                                     nop	      2684	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005981	            0xeb10	                           jmp 0x4005993	      2684	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005983	              0x90	                                     nop	      2721	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005984	            0xeb0d	                           jmp 0x4005993	      2721	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005986	              0x90	                                     nop	      2761	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005987	            0xeb0a	                           jmp 0x4005993	      2761	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005989	              0x90	                                     nop	      2778	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400598a	            0xeb07	                           jmp 0x4005993	      2778	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400598c	              0x90	                                     nop	      2945	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400598d	            0xeb04	                           jmp 0x4005993	      2945	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400598f	              0x90	                                     nop	      2978	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005990	            0xeb01	                           jmp 0x4005993	      2978	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005992	              0x90	                                     nop	      2989	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4005993	          0x8b4598	             mov eax, dword [rbp - 0x68]	      3048	ftp.c	FUNCTION_44
0x4005996	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3049	ftp.c	FUNCTION_44
0x400599a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3049	ftp.c	FUNCTION_44
0x40059a3	            0x7405	                            je 0x40059aa	      3049	ftp.c	FUNCTION_44
0x40059a5	      0xe800000000	                          call 0x40059aa	      3049	ftp.c	FUNCTION_44
0x40059aa	              0xc9	                                   leave	      3049	ftp.c	FUNCTION_44
0x40059ab	              0xc3	                                     ret	      3049	ftp.c	FUNCTION_44
ftp_doing	FOR,0:functions,0:SWITCH,0:ELSE,1:IF,2:DO,0:WHILE,0:CALL,6	25
0x4007f88	              0x55	                                push rbp	      4320	ftp.c	FUNCTION_63
0x4007f89	          0x4889e5	                            mov rbp, rsp	      4320	ftp.c	FUNCTION_63
0x4007f8c	        0x4883ec20	                           sub rsp, 0x20	      4320	ftp.c	FUNCTION_63
0x4007f90	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4320	ftp.c	FUNCTION_63
0x4007f94	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4320	ftp.c	FUNCTION_63
0x4007f98	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4321	ftp.c	FUNCTION_63	CALL_1
0x4007f9c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4321	ftp.c	FUNCTION_63	CALL_1
0x4007fa0	          0x4889d6	                            mov rsi, rdx	      4321	ftp.c	FUNCTION_63	CALL_1
0x4007fa3	          0x4889c7	                            mov rdi, rax	      4321	ftp.c	FUNCTION_63	CALL_1
0x4007fa6	      0xe801daffff	            call sym.ftp_multi_statemach	      4321	ftp.c	FUNCTION_63	CALL_1
0x4007fab	          0x8945fc	                mov dword [rbp - 4], eax	      4321	ftp.c	FUNCTION_63	CALL_1
0x4007fae	        0x837dfc00	                  cmp dword [rbp - 4], 0	      4323	ftp.c	FUNCTION_63	IF_1
0x4007fb2	            0x751f	                           jne 0x4007fd3	      4323	ftp.c	FUNCTION_63	IF_1
0x4007fb4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4325	ftp.c	FUNCTION_63	ELSE_1	IF_2
0x4007fb8	           0xfb600	                   movzx eax, byte [rax]	      4325	ftp.c	FUNCTION_63	ELSE_1	IF_2
0x4007fbb	            0x84c0	                             test al, al	      4325	ftp.c	FUNCTION_63	ELSE_1	IF_2
0x4007fbd	            0x7414	                            je 0x4007fd3	      4325	ftp.c	FUNCTION_63	ELSE_1	IF_2
0x4007fbf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4326	ftp.c	FUNCTION_63	ELSE_1	IF_2	CALL_4
0x4007fc3	      0xbe00000000	                              mov esi, 0	      4326	ftp.c	FUNCTION_63	ELSE_1	IF_2	CALL_4
0x4007fc8	          0x4889c7	                            mov rdi, rax	      4326	ftp.c	FUNCTION_63	ELSE_1	IF_2	CALL_4
0x4007fcb	      0xe8c9feffff	               call sym.ftp_dophase_done	      4326	ftp.c	FUNCTION_63	ELSE_1	IF_2	CALL_4
0x4007fd0	          0x8945fc	                mov dword [rbp - 4], eax	      4326	ftp.c	FUNCTION_63	ELSE_1	IF_2	CALL_4
0x4007fd3	          0x8b45fc	                mov eax, dword [rbp - 4]	      4330	ftp.c	FUNCTION_63
0x4007fd6	              0xc9	                                   leave	      4331	ftp.c	FUNCTION_63
0x4007fd7	              0xc3	                                     ret	      4331	ftp.c	FUNCTION_63
isBadFtpString	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,0:DO,0:WHILE,0:CALL,2	22
0x4000263	              0x55	                                push rbp	       265	ftp.c	FUNCTION_3
0x4000264	          0x4889e5	                            mov rbp, rsp	       265	ftp.c	FUNCTION_3
0x4000267	        0x4883ec10	                           sub rsp, 0x10	       265	ftp.c	FUNCTION_3
0x400026b	        0x48897df8	                mov qword [rbp - 8], rdi	       265	ftp.c	FUNCTION_3
0x400026f	        0x488b45f8	                mov rax, qword [rbp - 8]	       266	ftp.c	FUNCTION_3	CALL_1
0x4000273	      0xbe0d000000	                            mov esi, 0xd	       266	ftp.c	FUNCTION_3	CALL_1
0x4000278	          0x4889c7	                            mov rdi, rax	       266	ftp.c	FUNCTION_3	CALL_1
0x400027b	      0xe800000000	                          call 0x4000280	       266	ftp.c	FUNCTION_3	CALL_1
0x4000280	          0x4885c0	                           test rax, rax	       267	ftp.c	FUNCTION_3	CALL_2
0x4000283	            0x7516	                           jne 0x400029b	       267	ftp.c	FUNCTION_3	CALL_2
0x4000285	        0x488b45f8	                mov rax, qword [rbp - 8]	       267	ftp.c	FUNCTION_3	CALL_2
0x4000289	      0xbe0a000000	                            mov esi, 0xa	       267	ftp.c	FUNCTION_3	CALL_2
0x400028e	          0x4889c7	                            mov rdi, rax	       267	ftp.c	FUNCTION_3	CALL_2
0x4000291	      0xe800000000	                          call 0x4000296	       267	ftp.c	FUNCTION_3	CALL_2
0x4000296	          0x4885c0	                           test rax, rax	       267	ftp.c	FUNCTION_3	CALL_2
0x4000299	            0x7407	                            je 0x40002a2	       267	ftp.c	FUNCTION_3	CALL_2
0x400029b	      0xb801000000	                              mov eax, 1	       267	ftp.c	FUNCTION_3	CALL_2
0x40002a0	            0xeb05	                           jmp 0x40002a7	       267	ftp.c	FUNCTION_3	CALL_2
0x40002a2	      0xb800000000	                              mov eax, 0	       267	ftp.c	FUNCTION_3	CALL_2
0x40002a7	          0x83e001	                              and eax, 1	       266	ftp.c	FUNCTION_3	CALL_1
0x40002aa	              0xc9	                                   leave	       268	ftp.c	FUNCTION_3
0x40002ab	              0xc3	                                     ret	       268	ftp.c	FUNCTION_3
ftp_state_acct_resp	FOR,0:functions,0:SWITCH,0:ELSE,1:IF,1:DO,0:WHILE,0:CALL,2	26
0x4004b6e	              0x55	                                push rbp	      2589	ftp.c	FUNCTION_43
0x4004b6f	          0x4889e5	                            mov rbp, rsp	      2589	ftp.c	FUNCTION_43
0x4004b72	        0x4883ec20	                           sub rsp, 0x20	      2589	ftp.c	FUNCTION_43
0x4004b76	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2589	ftp.c	FUNCTION_43
0x4004b7a	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2589	ftp.c	FUNCTION_43
0x4004b7d	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      2590	ftp.c	FUNCTION_43
0x4004b84	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2591	ftp.c	FUNCTION_43
0x4004b88	          0x488b00	                    mov rax, qword [rax]	      2591	ftp.c	FUNCTION_43
0x4004b8b	        0x488945f8	                mov qword [rbp - 8], rax	      2591	ftp.c	FUNCTION_43
0x4004b8f	    0x817de4e60000	           cmp dword [rbp - 0x1c], 0xe6 	      2592	ftp.c	FUNCTION_43	IF_1
0x4004b96	            0x7424	                            je 0x4004bbc	      2592	ftp.c	FUNCTION_43	IF_1
0x4004b98	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      2593	ftp.c	FUNCTION_43	IF_1	CALL_1
0x4004b9b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2593	ftp.c	FUNCTION_43	IF_1	CALL_1
0x4004b9f	    0x488d35000000	                   lea rsi, [0x04004ba6]	      2593	ftp.c	FUNCTION_43	IF_1	CALL_1
0x4004ba6	          0x4889c7	                            mov rdi, rax	      2593	ftp.c	FUNCTION_43	IF_1	CALL_1
0x4004ba9	      0xb800000000	                              mov eax, 0	      2593	ftp.c	FUNCTION_43	IF_1	CALL_1
0x4004bae	      0xe800000000	                          call 0x4004bb3	      2593	ftp.c	FUNCTION_43	IF_1	CALL_1
0x4004bb3	    0xc745f40b0000	              mov dword [rbp - 0xc], 0xb	      2594	ftp.c	FUNCTION_43	IF_1
0x4004bba	            0xeb0f	                           jmp 0x4004bcb	      2594	ftp.c	FUNCTION_43	IF_1
0x4004bbc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2597	ftp.c	FUNCTION_43	CALL_2
0x4004bc0	          0x4889c7	                            mov rdi, rax	      2597	ftp.c	FUNCTION_43	CALL_2
0x4004bc3	      0xe816fdffff	             call sym.ftp_state_loggedin	      2597	ftp.c	FUNCTION_43	CALL_2
0x4004bc8	          0x8945f4	              mov dword [rbp - 0xc], eax	      2597	ftp.c	FUNCTION_43	CALL_2
0x4004bcb	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2599	ftp.c	FUNCTION_43
0x4004bce	              0xc9	                                   leave	      2600	ftp.c	FUNCTION_43
0x4004bcf	              0xc3	                                     ret	      2600	ftp.c	FUNCTION_43
ftp_state_user	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,0:DO,0:WHILE,0:CALL,0	38
0x4000dad	              0x55	                                push rbp	       798	ftp.c	FUNCTION_13
0x4000dae	          0x4889e5	                            mov rbp, rsp	       798	ftp.c	FUNCTION_13
0x4000db1	        0x4883ec20	                           sub rsp, 0x20	       798	ftp.c	FUNCTION_13
0x4000db5	        0x48897de8	             mov qword [rbp - 0x18], rdi	       798	ftp.c	FUNCTION_13
0x4000db9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       800	ftp.c	FUNCTION_13
0x4000dbd	          0x488b00	                    mov rax, qword [rax]	       800	ftp.c	FUNCTION_13
0x4000dc0	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	       800	ftp.c	FUNCTION_13
0x4000dc7	        0x488945f8	                mov qword [rbp - 8], rax	       800	ftp.c	FUNCTION_13
0x4000dcb	        0x488b45f8	                mov rax, qword [rbp - 8]	       802	ftp.c	FUNCTION_13
0x4000dcf	        0x488b4008	                mov rax, qword [rax + 8]	       802	ftp.c	FUNCTION_13
0x4000dd3	          0x4885c0	                           test rax, rax	       802	ftp.c	FUNCTION_13
0x4000dd6	            0x740a	                            je 0x4000de2	       802	ftp.c	FUNCTION_13
0x4000dd8	        0x488b45f8	                mov rax, qword [rbp - 8]	       802	ftp.c	FUNCTION_13
0x4000ddc	        0x488b4008	                mov rax, qword [rax + 8]	       802	ftp.c	FUNCTION_13
0x4000de0	            0xeb07	                           jmp 0x4000de9	       802	ftp.c	FUNCTION_13
0x4000de2	    0x488d05000000	                   lea rax, [0x04000de9]	       802	ftp.c	FUNCTION_13
0x4000de9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       802	ftp.c	FUNCTION_13
0x4000ded	    0x488d8a500600	                  lea rcx, [rdx + 0x650]	       802	ftp.c	FUNCTION_13
0x4000df4	          0x4889c2	                            mov rdx, rax	       802	ftp.c	FUNCTION_13
0x4000df7	    0x488d35000000	                   lea rsi, [0x04000dfe]	       802	ftp.c	FUNCTION_13
0x4000dfe	          0x4889cf	                            mov rdi, rcx	       802	ftp.c	FUNCTION_13
0x4000e01	      0xb800000000	                              mov eax, 0	       802	ftp.c	FUNCTION_13
0x4000e06	      0xe800000000	                          call 0x4000e0b	       802	ftp.c	FUNCTION_13
0x4000e0b	          0x8945f4	              mov dword [rbp - 0xc], eax	       802	ftp.c	FUNCTION_13
0x4000e0e	        0x837df400	                cmp dword [rbp - 0xc], 0	       802	ftp.c	FUNCTION_13
0x4000e12	            0x7405	                            je 0x4000e19	       802	ftp.c	FUNCTION_13
0x4000e14	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       802	ftp.c	FUNCTION_13
0x4000e17	            0xeb24	                           jmp 0x4000e3d	       802	ftp.c	FUNCTION_13
0x4000e19	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       804	ftp.c	FUNCTION_13
0x4000e1d	      0xbe03000000	                              mov esi, 3	       804	ftp.c	FUNCTION_13
0x4000e22	          0x4889c7	                            mov rdi, rax	       804	ftp.c	FUNCTION_13
0x4000e25	      0xe85affffff	                         call sym._state	       804	ftp.c	FUNCTION_13
0x4000e2a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       805	ftp.c	FUNCTION_13
0x4000e2e	          0x488b00	                    mov rax, qword [rax]	       805	ftp.c	FUNCTION_13
0x4000e31	    0xc680f8500000	              mov byte [rax + 0x50f8], 0	       805	ftp.c	FUNCTION_13
0x4000e38	      0xb800000000	                              mov eax, 0	       807	ftp.c	FUNCTION_13
0x4000e3d	              0xc9	                                   leave	       808	ftp.c	FUNCTION_13
0x4000e3e	              0xc3	                                     ret	       808	ftp.c	FUNCTION_13
wc_data_dtor	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,1:DO,0:WHILE,0:CALL,2	23
0x4006af0	              0x55	                                push rbp	      3689	ftp.c	FUNCTION_54
0x4006af1	          0x4889e5	                            mov rbp, rsp	      3689	ftp.c	FUNCTION_54
0x4006af4	        0x4883ec20	                           sub rsp, 0x20	      3689	ftp.c	FUNCTION_54
0x4006af8	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3689	ftp.c	FUNCTION_54
0x4006afc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3690	ftp.c	FUNCTION_54
0x4006b00	        0x488945f8	                mov qword [rbp - 8], rax	      3690	ftp.c	FUNCTION_54
0x4006b04	      0x48837df800	                  cmp qword [rbp - 8], 0	      3691	ftp.c	FUNCTION_54	IF_1
0x4006b09	            0x7418	                            je 0x4006b23	      3691	ftp.c	FUNCTION_54	IF_1
0x4006b0b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3691	ftp.c	FUNCTION_54	IF_1
0x4006b0f	          0x488b00	                    mov rax, qword [rax]	      3691	ftp.c	FUNCTION_54	IF_1
0x4006b12	          0x4885c0	                           test rax, rax	      3691	ftp.c	FUNCTION_54	IF_1
0x4006b15	            0x740c	                            je 0x4006b23	      3691	ftp.c	FUNCTION_54	IF_1
0x4006b17	        0x488b45f8	                mov rax, qword [rbp - 8]	      3692	ftp.c	FUNCTION_54	CALL_1
0x4006b1b	          0x4889c7	                            mov rdi, rax	      3692	ftp.c	FUNCTION_54	CALL_1
0x4006b1e	      0xe800000000	                          call 0x4006b23	      3692	ftp.c	FUNCTION_54	CALL_1
0x4006b23	    0x488b05000000	            mov rax, qword [0x04006b2a] 	      3693	ftp.c	FUNCTION_54	CALL_2
0x4006b2a	          0x488b00	                    mov rax, qword [rax]	      3693	ftp.c	FUNCTION_54	CALL_2
0x4006b2d	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3693	ftp.c	FUNCTION_54	CALL_2
0x4006b31	          0x4889d7	                            mov rdi, rdx	      3693	ftp.c	FUNCTION_54	CALL_2
0x4006b34	            0xffd0	                                call rax	      3693	ftp.c	FUNCTION_54	CALL_2
0x4006b36	              0x90	                                     nop	      3694	ftp.c	FUNCTION_54
0x4006b37	              0xc9	                                   leave	      3694	ftp.c	FUNCTION_54
0x4006b38	              0xc3	                                     ret	      3694	ftp.c	FUNCTION_54
ftp_state_size	FOR,0:functions,0:SWITCH,0:ELSE,1:IF,1:DO,0:WHILE,0:CALL,1	44
0x4002453	              0x55	                                push rbp	      1425	ftp.c	FUNCTION_22
0x4002454	          0x4889e5	                            mov rbp, rsp	      1425	ftp.c	FUNCTION_22
0x4002457	        0x4883ec30	                           sub rsp, 0x30	      1425	ftp.c	FUNCTION_22
0x400245b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1425	ftp.c	FUNCTION_22
0x400245f	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1426	ftp.c	FUNCTION_22
0x4002466	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1427	ftp.c	FUNCTION_22
0x400246a	          0x488b00	                    mov rax, qword [rax]	      1427	ftp.c	FUNCTION_22
0x400246d	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1427	ftp.c	FUNCTION_22
0x4002474	        0x488945f0	             mov qword [rbp - 0x10], rax	      1427	ftp.c	FUNCTION_22
0x4002478	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1428	ftp.c	FUNCTION_22
0x400247c	    0x480550060000	                          add rax, 0x650	      1428	ftp.c	FUNCTION_22
0x4002482	        0x488945f8	                mov qword [rbp - 8], rax	      1428	ftp.c	FUNCTION_22
0x4002486	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1430	ftp.c	FUNCTION_22	IF_1
0x400248a	          0x8b4018	            mov eax, dword [rax + 0x18] 	      1430	ftp.c	FUNCTION_22	IF_1
0x400248d	          0x83f801	                              cmp eax, 1	      1430	ftp.c	FUNCTION_22	IF_1
0x4002490	            0x7554	                           jne 0x40024e6	      1430	ftp.c	FUNCTION_22	IF_1
0x4002492	        0x488b45f8	                mov rax, qword [rbp - 8]	      1430	ftp.c	FUNCTION_22	IF_1
0x4002496	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1430	ftp.c	FUNCTION_22	IF_1
0x400249d	          0x4885c0	                           test rax, rax	      1430	ftp.c	FUNCTION_22	IF_1
0x40024a0	            0x7444	                            je 0x40024e6	      1430	ftp.c	FUNCTION_22	IF_1
0x40024a2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1434	ftp.c	FUNCTION_22	IF_1
0x40024a6	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      1434	ftp.c	FUNCTION_22	IF_1
0x40024ad	        0x488b45f8	                mov rax, qword [rbp - 8]	      1434	ftp.c	FUNCTION_22	IF_1
0x40024b1	    0x488d35000000	                   lea rsi, [0x040024b8]	      1434	ftp.c	FUNCTION_22	IF_1
0x40024b8	          0x4889c7	                            mov rdi, rax	      1434	ftp.c	FUNCTION_22	IF_1
0x40024bb	      0xb800000000	                              mov eax, 0	      1434	ftp.c	FUNCTION_22	IF_1
0x40024c0	      0xe800000000	                          call 0x40024c5	      1434	ftp.c	FUNCTION_22	IF_1
0x40024c5	          0x8945ec	             mov dword [rbp - 0x14], eax	      1434	ftp.c	FUNCTION_22	IF_1
0x40024c8	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1434	ftp.c	FUNCTION_22	IF_1
0x40024cc	            0x7405	                            je 0x40024d3	      1434	ftp.c	FUNCTION_22	IF_1
0x40024ce	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1434	ftp.c	FUNCTION_22	IF_1
0x40024d1	            0xeb25	                           jmp 0x40024f8	      1434	ftp.c	FUNCTION_22	IF_1
0x40024d3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1436	ftp.c	FUNCTION_22	IF_1
0x40024d7	      0xbe17000000	                           mov esi, 0x17	      1436	ftp.c	FUNCTION_22	IF_1
0x40024dc	          0x4889c7	                            mov rdi, rax	      1436	ftp.c	FUNCTION_22	IF_1
0x40024df	      0xe8a0e8ffff	                         call sym._state	      1436	ftp.c	FUNCTION_22	IF_1
0x40024e4	            0xeb0f	                           jmp 0x40024f5	      1436	ftp.c	FUNCTION_22	IF_1
0x40024e6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1439	ftp.c	FUNCTION_22	CALL_1
0x40024ea	          0x4889c7	                            mov rdi, rax	      1439	ftp.c	FUNCTION_22	CALL_1
0x40024ed	      0xe8bbfeffff	                 call sym.ftp_state_rest	      1439	ftp.c	FUNCTION_22	CALL_1
0x40024f2	          0x8945ec	             mov dword [rbp - 0x14], eax	      1439	ftp.c	FUNCTION_22	CALL_1
0x40024f5	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1441	ftp.c	FUNCTION_22
0x40024f8	              0xc9	                                   leave	      1442	ftp.c	FUNCTION_22
0x40024f9	              0xc3	                                     ret	      1442	ftp.c	FUNCTION_22
ftp_need_type	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,0:DO,0:WHILE,0:CALL,0	18
0x4006425	              0x55	                                push rbp	      3418	ftp.c	FUNCTION_50
0x4006426	          0x4889e5	                            mov rbp, rsp	      3418	ftp.c	FUNCTION_50
0x4006429	        0x48897df8	                mov qword [rbp - 8], rdi	      3418	ftp.c	FUNCTION_50
0x400642d	            0x89f0	                            mov eax, esi	      3418	ftp.c	FUNCTION_50
0x400642f	          0x8845f4	                mov byte [rbp - 0xc], al	      3418	ftp.c	FUNCTION_50
0x4006432	        0x488b45f8	                mov rax, qword [rbp - 8]	      3419	ftp.c	FUNCTION_50
0x4006436	     0xfb680fc0600	          movzx eax, byte [rax + 0x6fc] 	      3419	ftp.c	FUNCTION_50
0x400643d	           0xfbec0	                           movsx eax, al	      3419	ftp.c	FUNCTION_50
0x4006440	        0x807df400	                 cmp byte [rbp - 0xc], 0	      3419	ftp.c	FUNCTION_50
0x4006444	            0x7407	                            je 0x400644d	      3419	ftp.c	FUNCTION_50
0x4006446	      0xba41000000	                           mov edx, 0x41	      3419	ftp.c	FUNCTION_50
0x400644b	            0xeb05	                           jmp 0x4006452	      3419	ftp.c	FUNCTION_50
0x400644d	      0xba49000000	                           mov edx, 0x49	      3419	ftp.c	FUNCTION_50
0x4006452	            0x39d0	                            cmp eax, edx	      3419	ftp.c	FUNCTION_50
0x4006454	           0xf95c0	                                setne al	      3419	ftp.c	FUNCTION_50
0x4006457	           0xfb6c0	                           movzx eax, al	      3419	ftp.c	FUNCTION_50
0x400645a	              0x5d	                                 pop rbp	      3420	ftp.c	FUNCTION_50
0x400645b	              0xc3	                                     ret	      3420	ftp.c	FUNCTION_50
ftp_state_user_resp	FOR,0:functions,0:SWITCH,0:ELSE,5:IF,5:DO,0:WHILE,0:CALL,3	130
0x4004958	              0x55	                                push rbp	      2534	ftp.c	FUNCTION_42
0x4004959	          0x4889e5	                            mov rbp, rsp	      2534	ftp.c	FUNCTION_42
0x400495c	        0x4883ec30	                           sub rsp, 0x30	      2534	ftp.c	FUNCTION_42
0x4004960	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2534	ftp.c	FUNCTION_42
0x4004964	          0x8975d4	             mov dword [rbp - 0x2c], esi	      2534	ftp.c	FUNCTION_42
0x4004967	          0x8955d0	             mov dword [rbp - 0x30], edx	      2534	ftp.c	FUNCTION_42
0x400496a	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      2535	ftp.c	FUNCTION_42
0x4004971	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2536	ftp.c	FUNCTION_42
0x4004975	          0x488b00	                    mov rax, qword [rax]	      2536	ftp.c	FUNCTION_42
0x4004978	        0x488945e8	             mov qword [rbp - 0x18], rax	      2536	ftp.c	FUNCTION_42
0x400497c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2537	ftp.c	FUNCTION_42
0x4004980	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      2537	ftp.c	FUNCTION_42
0x4004987	        0x488945f0	             mov qword [rbp - 0x10], rax	      2537	ftp.c	FUNCTION_42
0x400498b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2538	ftp.c	FUNCTION_42
0x400498f	    0x480550060000	                          add rax, 0x650	      2538	ftp.c	FUNCTION_42
0x4004995	        0x488945f8	                mov qword [rbp - 8], rax	      2538	ftp.c	FUNCTION_42
0x4004999	    0x817dd44b0100	          cmp dword [rbp - 0x2c], 0x14b 	      2542	ftp.c	FUNCTION_42	IF_1
0x40049a0	            0x756f	                           jne 0x4004a11	      2542	ftp.c	FUNCTION_42	IF_1
0x40049a2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2542	ftp.c	FUNCTION_42	IF_1
0x40049a6	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      2542	ftp.c	FUNCTION_42	IF_1
0x40049ac	          0x83f803	                              cmp eax, 3	      2542	ftp.c	FUNCTION_42	IF_1
0x40049af	            0x7560	                           jne 0x4004a11	      2542	ftp.c	FUNCTION_42	IF_1
0x40049b1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2545	ftp.c	FUNCTION_42	IF_1
0x40049b5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2545	ftp.c	FUNCTION_42	IF_1
0x40049b9	          0x4885c0	                           test rax, rax	      2545	ftp.c	FUNCTION_42	IF_1
0x40049bc	            0x740a	                            je 0x40049c8	      2545	ftp.c	FUNCTION_42	IF_1
0x40049be	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2545	ftp.c	FUNCTION_42	IF_1
0x40049c2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2545	ftp.c	FUNCTION_42	IF_1
0x40049c6	            0xeb07	                           jmp 0x40049cf	      2545	ftp.c	FUNCTION_42	IF_1
0x40049c8	    0x488d05000000	                   lea rax, [0x040049cf]	      2545	ftp.c	FUNCTION_42	IF_1
0x40049cf	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2545	ftp.c	FUNCTION_42	IF_1
0x40049d3	          0x4889c2	                            mov rdx, rax	      2545	ftp.c	FUNCTION_42	IF_1
0x40049d6	    0x488d35000000	                   lea rsi, [0x040049dd]	      2545	ftp.c	FUNCTION_42	IF_1
0x40049dd	          0x4889cf	                            mov rdi, rcx	      2545	ftp.c	FUNCTION_42	IF_1
0x40049e0	      0xb800000000	                              mov eax, 0	      2545	ftp.c	FUNCTION_42	IF_1
0x40049e5	      0xe800000000	                          call 0x40049ea	      2545	ftp.c	FUNCTION_42	IF_1
0x40049ea	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2545	ftp.c	FUNCTION_42	IF_1
0x40049ed	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2545	ftp.c	FUNCTION_42	IF_1
0x40049f1	            0x7408	                            je 0x40049fb	      2545	ftp.c	FUNCTION_42	IF_1
0x40049f3	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2545	ftp.c	FUNCTION_42	IF_1
0x40049f6	      0xe971010000	                           jmp 0x4004b6c	      2545	ftp.c	FUNCTION_42	IF_1
0x40049fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2546	ftp.c	FUNCTION_42	IF_1
0x40049ff	      0xbe04000000	                              mov esi, 4	      2546	ftp.c	FUNCTION_42	IF_1
0x4004a04	          0x4889c7	                            mov rdi, rax	      2546	ftp.c	FUNCTION_42	IF_1
0x4004a07	      0xe878c3ffff	                         call sym._state	      2546	ftp.c	FUNCTION_42	IF_1
0x4004a0c	      0xe958010000	                           jmp 0x4004b69	      2546	ftp.c	FUNCTION_42	IF_1
0x4004a11	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2548	ftp.c	FUNCTION_42	ELSE_1	IF_2
0x4004a14	      0x2dc8000000	                           sub eax, 0xc8	      2548	ftp.c	FUNCTION_42	ELSE_1	IF_2
0x4004a19	          0x83f863	                           cmp eax, 0x63	      2548	ftp.c	FUNCTION_42	ELSE_1	IF_2
0x4004a1c	            0x7714	                            ja 0x4004a32	      2548	ftp.c	FUNCTION_42	ELSE_1	IF_2
0x4004a1e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2551	ftp.c	FUNCTION_42	ELSE_1	IF_2	CALL_1
0x4004a22	          0x4889c7	                            mov rdi, rax	      2551	ftp.c	FUNCTION_42	ELSE_1	IF_2	CALL_1
0x4004a25	      0xe8b4feffff	             call sym.ftp_state_loggedin	      2551	ftp.c	FUNCTION_42	ELSE_1	IF_2	CALL_1
0x4004a2a	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2551	ftp.c	FUNCTION_42	ELSE_1	IF_2	CALL_1
0x4004a2d	      0xe937010000	                           jmp 0x4004b69	      2551	ftp.c	FUNCTION_42	ELSE_1	IF_2	CALL_1
0x4004a32	    0x817dd44c0100	          cmp dword [rbp - 0x2c], 0x14c 	      2553	ftp.c	FUNCTION_42	ELSE_2	IF_3
0x4004a39	            0x757e	                           jne 0x4004ab9	      2553	ftp.c	FUNCTION_42	ELSE_2	IF_3
0x4004a3b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2554	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a3f	    0x488b80800800	           mov rax, qword [rax + 0x880] 	      2554	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a46	          0x4885c0	                           test rax, rax	      2554	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a49	            0x744a	                            je 0x4004a95	      2554	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a4b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a4f	    0x488b90800800	           mov rdx, qword [rax + 0x880] 	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a56	        0x488b45f8	                mov rax, qword [rbp - 8]	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a5a	    0x488d35000000	                   lea rsi, [0x04004a61]	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a61	          0x4889c7	                            mov rdi, rax	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a64	      0xb800000000	                              mov eax, 0	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a69	      0xe800000000	                          call 0x4004a6e	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a6e	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a71	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a75	            0x7408	                            je 0x4004a7f	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a77	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a7a	      0xe9ed000000	                           jmp 0x4004b6c	      2555	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a7f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2556	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a83	      0xbe05000000	                              mov esi, 5	      2556	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a88	          0x4889c7	                            mov rdi, rax	      2556	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a8b	      0xe8f4c2ffff	                         call sym._state	      2556	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a90	      0xe9d4000000	                           jmp 0x4004b69	      2556	ftp.c	FUNCTION_42	ELSE_2	IF_3	IF_4
0x4004a95	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2559	ftp.c	FUNCTION_42	ELSE_2	IF_3	ELSE_3	CALL_2
0x4004a99	    0x488d35000000	                   lea rsi, [0x04004aa0]	      2559	ftp.c	FUNCTION_42	ELSE_2	IF_3	ELSE_3	CALL_2
0x4004aa0	          0x4889c7	                            mov rdi, rax	      2559	ftp.c	FUNCTION_42	ELSE_2	IF_3	ELSE_3	CALL_2
0x4004aa3	      0xb800000000	                              mov eax, 0	      2559	ftp.c	FUNCTION_42	ELSE_2	IF_3	ELSE_3	CALL_2
0x4004aa8	      0xe800000000	                          call 0x4004aad	      2559	ftp.c	FUNCTION_42	ELSE_2	IF_3	ELSE_3	CALL_2
0x4004aad	    0xc745e4430000	           mov dword [rbp - 0x1c], 0x43 	      2560	ftp.c	FUNCTION_42	ELSE_2	IF_3	ELSE_3
0x4004ab4	      0xe9b0000000	                           jmp 0x4004b69	      2560	ftp.c	FUNCTION_42	ELSE_2	IF_3	ELSE_3
0x4004ab9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2569	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004abd	          0x488b00	                    mov rax, qword [rax]	      2569	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004ac0	    0x488b80880800	           mov rax, qword [rax + 0x888] 	      2569	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004ac7	          0x4885c0	                           test rax, rax	      2569	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004aca	            0x747b	                            je 0x4004b47	      2569	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004acc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2570	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004ad0	          0x488b00	                    mov rax, qword [rax]	      2570	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004ad3	     0xfb680f85000	         movzx eax, byte [rax + 0x50f8] 	      2570	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004ada	          0x83f001	                              xor eax, 1	      2570	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004add	            0x84c0	                             test al, al	      2569	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004adf	            0x7466	                            je 0x4004b47	      2569	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004ae1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004ae5	          0x488b00	                    mov rax, qword [rax]	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004ae8	    0x488b80880800	           mov rax, qword [rax + 0x888] 	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004aef	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004af3	    0x488d8a500600	                  lea rcx, [rdx + 0x650]	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004afa	          0x4889c2	                            mov rdx, rax	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004afd	    0x488d35000000	                   lea rsi, [0x04004b04]	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004b04	          0x4889cf	                            mov rdi, rcx	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004b07	      0xb800000000	                              mov eax, 0	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004b0c	      0xe800000000	                          call 0x4004b11	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004b11	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004b14	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004b18	            0x7405	                            je 0x4004b1f	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004b1a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004b1d	            0xeb4d	                           jmp 0x4004b6c	      2572	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004b1f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2574	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004b23	          0x488b00	                    mov rax, qword [rax]	      2574	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004b26	    0xc680f8500000	              mov byte [rax + 0x50f8], 1	      2574	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004b2d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2575	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004b31	      0xbe03000000	                              mov esi, 3	      2575	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004b36	          0x4889c7	                            mov rdi, rax	      2575	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004b39	      0xe846c2ffff	                         call sym._state	      2575	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004b3e	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      2576	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004b45	            0xeb22	                           jmp 0x4004b69	      2576	ftp.c	FUNCTION_42	ELSE_4	IF_5
0x4004b47	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2579	ftp.c	FUNCTION_42	ELSE_4	ELSE_5	CALL_3
0x4004b4a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2579	ftp.c	FUNCTION_42	ELSE_4	ELSE_5	CALL_3
0x4004b4e	    0x488d35000000	                   lea rsi, [0x04004b55]	      2579	ftp.c	FUNCTION_42	ELSE_4	ELSE_5	CALL_3
0x4004b55	          0x4889c7	                            mov rdi, rax	      2579	ftp.c	FUNCTION_42	ELSE_4	ELSE_5	CALL_3
0x4004b58	      0xb800000000	                              mov eax, 0	      2579	ftp.c	FUNCTION_42	ELSE_4	ELSE_5	CALL_3
0x4004b5d	      0xe800000000	                          call 0x4004b62	      2579	ftp.c	FUNCTION_42	ELSE_4	ELSE_5	CALL_3
0x4004b62	    0xc745e4430000	           mov dword [rbp - 0x1c], 0x43 	      2580	ftp.c	FUNCTION_42	ELSE_4	ELSE_5
0x4004b69	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2583	ftp.c	FUNCTION_42
0x4004b6c	              0xc9	                                   leave	      2584	ftp.c	FUNCTION_42
0x4004b6d	              0xc3	                                     ret	      2584	ftp.c	FUNCTION_42
ftp_state_stor_resp	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,4:DO,0:WHILE,0:CALL,4	73
0x400447b	              0x55	                                push rbp	      2339	ftp.c	FUNCTION_39
0x400447c	          0x4889e5	                            mov rbp, rsp	      2339	ftp.c	FUNCTION_39
0x400447f	        0x4883ec30	                           sub rsp, 0x30	      2339	ftp.c	FUNCTION_39
0x4004483	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2339	ftp.c	FUNCTION_39
0x4004487	          0x8975d4	             mov dword [rbp - 0x2c], esi	      2339	ftp.c	FUNCTION_39
0x400448a	          0x8955d0	             mov dword [rbp - 0x30], edx	      2339	ftp.c	FUNCTION_39
0x400448d	    0x64488b042528	                mov rax, qword fs:[0x28]	      2339	ftp.c	FUNCTION_39
0x4004496	        0x488945f8	                mov qword [rbp - 8], rax	      2339	ftp.c	FUNCTION_39
0x400449a	            0x31c0	                            xor eax, eax	      2339	ftp.c	FUNCTION_39
0x400449c	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      2340	ftp.c	FUNCTION_39
0x40044a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2341	ftp.c	FUNCTION_39
0x40044a7	          0x488b00	                    mov rax, qword [rax]	      2341	ftp.c	FUNCTION_39
0x40044aa	        0x488945e8	             mov qword [rbp - 0x18], rax	      2341	ftp.c	FUNCTION_39
0x40044ae	    0x817dd48f0100	          cmp dword [rbp - 0x2c], 0x18f 	      2343	ftp.c	FUNCTION_39	IF_1
0x40044b5	            0x7e36	                           jle 0x40044ed	      2343	ftp.c	FUNCTION_39	IF_1
0x40044b7	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2344	ftp.c	FUNCTION_39	IF_1	CALL_1
0x40044ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2344	ftp.c	FUNCTION_39	IF_1	CALL_1
0x40044be	    0x488d35000000	                   lea rsi, [0x040044c5]	      2344	ftp.c	FUNCTION_39	IF_1	CALL_1
0x40044c5	          0x4889c7	                            mov rdi, rax	      2344	ftp.c	FUNCTION_39	IF_1	CALL_1
0x40044c8	      0xb800000000	                              mov eax, 0	      2344	ftp.c	FUNCTION_39	IF_1	CALL_1
0x40044cd	      0xe800000000	                          call 0x40044d2	      2344	ftp.c	FUNCTION_39	IF_1	CALL_1
0x40044d2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2345	ftp.c	FUNCTION_39	IF_1
0x40044d6	      0xbe00000000	                              mov esi, 0	      2345	ftp.c	FUNCTION_39	IF_1
0x40044db	          0x4889c7	                            mov rdi, rax	      2345	ftp.c	FUNCTION_39	IF_1
0x40044de	      0xe8a1c8ffff	                         call sym._state	      2345	ftp.c	FUNCTION_39	IF_1
0x40044e3	      0xb819000000	                           mov eax, 0x19	      2347	ftp.c	FUNCTION_39	IF_1
0x40044e8	      0xe99d000000	                           jmp 0x400458a	      2347	ftp.c	FUNCTION_39	IF_1
0x40044ed	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2350	ftp.c	FUNCTION_39
0x40044f1	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      2350	ftp.c	FUNCTION_39
0x40044f4	    0x899010070000	            mov dword [rax + 0x710], edx	      2350	ftp.c	FUNCTION_39
0x40044fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2353	ftp.c	FUNCTION_39	IF_2
0x40044fe	     0xfb680d70700	          movzx eax, byte [rax + 0x7d7] 	      2353	ftp.c	FUNCTION_39	IF_2
0x4004505	            0x84c0	                             test al, al	      2353	ftp.c	FUNCTION_39	IF_2
0x4004507	            0x7475	                            je 0x400457e	      2353	ftp.c	FUNCTION_39	IF_2
0x4004509	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2356	ftp.c	FUNCTION_39	IF_2
0x400450d	      0xbe00000000	                              mov esi, 0	      2356	ftp.c	FUNCTION_39	IF_2
0x4004512	          0x4889c7	                            mov rdi, rax	      2356	ftp.c	FUNCTION_39	IF_2
0x4004515	      0xe86ac8ffff	                         call sym._state	      2356	ftp.c	FUNCTION_39	IF_2
0x400451a	        0x488d55e3	                   lea rdx, [rbp - 0x1d]	      2358	ftp.c	FUNCTION_39	IF_2	CALL_2
0x400451e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2358	ftp.c	FUNCTION_39	IF_2	CALL_2
0x4004522	          0x4889d6	                            mov rsi, rdx	      2358	ftp.c	FUNCTION_39	IF_2	CALL_2
0x4004525	          0x4889c7	                            mov rdi, rax	      2358	ftp.c	FUNCTION_39	IF_2	CALL_2
0x4004528	      0xe898c3ffff	             call sym.AllowServerConnect	      2358	ftp.c	FUNCTION_39	IF_2	CALL_2
0x400452d	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2358	ftp.c	FUNCTION_39	IF_2	CALL_2
0x4004530	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2359	ftp.c	FUNCTION_39	IF_2	IF_3
0x4004534	            0x7405	                            je 0x400453b	      2359	ftp.c	FUNCTION_39	IF_2	IF_3
0x4004536	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2360	ftp.c	FUNCTION_39	IF_2	IF_3
0x4004539	            0xeb4f	                           jmp 0x400458a	      2360	ftp.c	FUNCTION_39	IF_2	IF_3
0x400453b	         0xfb645e3	            movzx eax, byte [rbp - 0x1d]	      2362	ftp.c	FUNCTION_39	IF_2	IF_4
0x400453f	          0x83f001	                              xor eax, 1	      2362	ftp.c	FUNCTION_39	IF_2	IF_4
0x4004542	            0x84c0	                             test al, al	      2362	ftp.c	FUNCTION_39	IF_2	IF_4
0x4004544	            0x7431	                            je 0x4004577	      2362	ftp.c	FUNCTION_39	IF_2	IF_4
0x4004546	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2363	ftp.c	FUNCTION_39	IF_2	IF_4
0x400454a	    0x480550060000	                          add rax, 0x650	      2363	ftp.c	FUNCTION_39	IF_2	IF_4
0x4004550	        0x488945f0	             mov qword [rbp - 0x10], rax	      2363	ftp.c	FUNCTION_39	IF_2	IF_4
0x4004554	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2364	ftp.c	FUNCTION_39	IF_2	IF_4	CALL_3
0x4004558	    0x488d35000000	                   lea rsi, [0x0400455f]	      2364	ftp.c	FUNCTION_39	IF_2	IF_4	CALL_3
0x400455f	          0x4889c7	                            mov rdi, rax	      2364	ftp.c	FUNCTION_39	IF_2	IF_4	CALL_3
0x4004562	      0xb800000000	                              mov eax, 0	      2364	ftp.c	FUNCTION_39	IF_2	IF_4	CALL_3
0x4004567	      0xe800000000	                          call 0x400456c	      2364	ftp.c	FUNCTION_39	IF_2	IF_4	CALL_3
0x400456c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2365	ftp.c	FUNCTION_39	IF_2	IF_4
0x4004570	    0xc68099000000	                mov byte [rax + 0x99], 1	      2365	ftp.c	FUNCTION_39	IF_2	IF_4
0x4004577	      0xb800000000	                              mov eax, 0	      2368	ftp.c	FUNCTION_39	IF_2
0x400457c	            0xeb0c	                           jmp 0x400458a	      2368	ftp.c	FUNCTION_39	IF_2
0x400457e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2370	ftp.c	FUNCTION_39	CALL_4
0x4004582	          0x4889c7	                            mov rdi, rax	      2370	ftp.c	FUNCTION_39	CALL_4
0x4004585	      0xe8f5c1ffff	               call sym.InitiateTransfer	      2370	ftp.c	FUNCTION_39	CALL_4
0x400458a	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2371	ftp.c	FUNCTION_39
0x400458e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2371	ftp.c	FUNCTION_39
0x4004597	            0x7405	                            je 0x400459e	      2371	ftp.c	FUNCTION_39
0x4004599	      0xe800000000	                          call 0x400459e	      2371	ftp.c	FUNCTION_39
0x400459e	              0xc9	                                   leave	      2371	ftp.c	FUNCTION_39
0x400459f	              0xc3	                                     ret	      2371	ftp.c	FUNCTION_39
ftp_setup_connection	FOR,0:functions,0:SWITCH,1:ELSE,0:IF,5:DO,0:WHILE,0:CALL,6	110
0x40080fa	              0x55	                                push rbp	      4384	ftp.c	FUNCTION_65
0x40080fb	          0x4889e5	                            mov rbp, rsp	      4384	ftp.c	FUNCTION_65
0x40080fe	              0x53	                                push rbx	      4384	ftp.c	FUNCTION_65
0x40080ff	        0x4883ec38	                           sub rsp, 0x38	      4384	ftp.c	FUNCTION_65
0x4008103	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      4384	ftp.c	FUNCTION_65
0x4008107	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4385	ftp.c	FUNCTION_65
0x400810b	          0x488b00	                    mov rax, qword [rax]	      4385	ftp.c	FUNCTION_65
0x400810e	        0x488945e0	             mov qword [rbp - 0x20], rax	      4385	ftp.c	FUNCTION_65
0x4008112	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4390	ftp.c	FUNCTION_65	CALL_1
0x4008116	          0x488b18	                    mov rbx, qword [rax]	      4390	ftp.c	FUNCTION_65	CALL_1
0x4008119	    0x488b05000000	            mov rax, qword [0x04008120] 	      4390	ftp.c	FUNCTION_65	CALL_1
0x4008120	          0x488b00	                    mov rax, qword [rax]	      4390	ftp.c	FUNCTION_65	CALL_1
0x4008123	      0xbf28000000	                           mov edi, 0x28	      4390	ftp.c	FUNCTION_65	CALL_1
0x4008128	            0xffd0	                                call rax	      4390	ftp.c	FUNCTION_65	CALL_1
0x400812a	        0x488945e8	             mov qword [rbp - 0x18], rax	      4390	ftp.c	FUNCTION_65	CALL_1
0x400812e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4390	ftp.c	FUNCTION_65	CALL_1
0x4008132	    0x488983e80100	            mov qword [rbx + 0x1e8], rax	      4390	ftp.c	FUNCTION_65	CALL_1
0x4008139	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4391	ftp.c	FUNCTION_65	IF_1
0x400813e	            0x750a	                           jne 0x400814a	      4391	ftp.c	FUNCTION_65	IF_1
0x4008140	      0xb81b000000	                           mov eax, 0x1b	      4392	ftp.c	FUNCTION_65	IF_1
0x4008145	      0xe96b010000	                           jmp 0x40082b5	      4392	ftp.c	FUNCTION_65	IF_1
0x400814a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4394	ftp.c	FUNCTION_65
0x400814e	    0x488b80185100	          mov rax, qword [rax + 0x5118] 	      4394	ftp.c	FUNCTION_65
0x4008155	        0x488d5001	                      lea rdx, [rax + 1]	      4394	ftp.c	FUNCTION_65
0x4008159	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4394	ftp.c	FUNCTION_65
0x400815d	    0x488990185100	          mov qword [rax + 0x5118], rdx 	      4394	ftp.c	FUNCTION_65
0x4008164	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4395	ftp.c	FUNCTION_65
0x4008168	    0xc68020510000	              mov byte [rax + 0x5120], 1	      4395	ftp.c	FUNCTION_65
0x400816f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4399	ftp.c	FUNCTION_65	CALL_2
0x4008173	    0x488b80185100	          mov rax, qword [rax + 0x5118] 	      4399	ftp.c	FUNCTION_65	CALL_2
0x400817a	    0x488d35000000	                   lea rsi, [0x04008181]	      4399	ftp.c	FUNCTION_65	CALL_2
0x4008181	          0x4889c7	                            mov rdi, rax	      4399	ftp.c	FUNCTION_65	CALL_2
0x4008184	      0xe800000000	                          call 0x4008189	      4399	ftp.c	FUNCTION_65	CALL_2
0x4008189	        0x488945d8	             mov qword [rbp - 0x28], rax	      4399	ftp.c	FUNCTION_65	CALL_2
0x400818d	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4401	ftp.c	FUNCTION_65	IF_2
0x4008192	            0x751e	                           jne 0x40081b2	      4401	ftp.c	FUNCTION_65	IF_2
0x4008194	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4402	ftp.c	FUNCTION_65	CALL_3
0x4008198	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	      4402	ftp.c	FUNCTION_65	CALL_3
0x400819f	    0x488d35000000	                   lea rsi, [0x040081a6]	      4402	ftp.c	FUNCTION_65	CALL_3
0x40081a6	          0x4889c7	                            mov rdi, rax	      4402	ftp.c	FUNCTION_65	CALL_3
0x40081a9	      0xe800000000	                          call 0x40081ae	      4402	ftp.c	FUNCTION_65	CALL_3
0x40081ae	        0x488945d8	             mov qword [rbp - 0x28], rax	      4402	ftp.c	FUNCTION_65	CALL_3
0x40081b2	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4404	ftp.c	FUNCTION_65	IF_3
0x40081b7	            0x7460	                            je 0x4008219	      4404	ftp.c	FUNCTION_65	IF_3
0x40081b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4405	ftp.c	FUNCTION_65	IF_3
0x40081bd	          0xc60000	                       mov byte [rax], 0	      4405	ftp.c	FUNCTION_65	IF_3
0x40081c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4406	ftp.c	FUNCTION_65	IF_3	CALL_4
0x40081c4	        0x4883c006	                              add rax, 6	      4406	ftp.c	FUNCTION_65	IF_3	CALL_4
0x40081c8	           0xfb600	                   movzx eax, byte [rax]	      4406	ftp.c	FUNCTION_65	IF_3	CALL_4
0x40081cb	           0xfbec0	                           movsx eax, al	      4406	ftp.c	FUNCTION_65	IF_3	CALL_4
0x40081ce	            0x89c7	                            mov edi, eax	      4406	ftp.c	FUNCTION_65	IF_3	CALL_4
0x40081d0	      0xe800000000	                          call 0x40081d5	      4406	ftp.c	FUNCTION_65	IF_3	CALL_4
0x40081d5	          0x8845d7	               mov byte [rbp - 0x29], al	      4406	ftp.c	FUNCTION_65	IF_3	CALL_4
0x40081d8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4407	ftp.c	FUNCTION_65	IF_3
0x40081dc	    0xc680b4030000	               mov byte [rax + 0x3b4], 1	      4407	ftp.c	FUNCTION_65	IF_3
0x40081e3	         0xfbe45d7	            movsx eax, byte [rbp - 0x29]	      4409	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x40081e7	          0x83f841	                           cmp eax, 0x41	      4409	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x40081ea	            0x7407	                            je 0x40081f3	      4409	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x40081ec	          0x83f844	                           cmp eax, 0x44	      4409	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x40081ef	            0x740f	                            je 0x4008200	      4409	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x40081f1	            0xeb1a	                           jmp 0x400820d	      4409	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x40081f3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4411	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x40081f7	    0xc680d4070000	               mov byte [rax + 0x7d4], 1	      4411	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x40081fe	            0xeb19	                           jmp 0x4008219	      4412	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x4008200	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4415	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x4008204	    0xc680d6070000	               mov byte [rax + 0x7d6], 1	      4415	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x400820b	            0xeb0c	                           jmp 0x4008219	      4416	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x400820d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4421	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x4008211	    0xc680d4070000	               mov byte [rax + 0x7d4], 0	      4421	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x4008218	              0x90	                                     nop	      4422	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x4008219	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4427	ftp.c	FUNCTION_65
0x400821d	          0x488b00	                    mov rax, qword [rax]	      4427	ftp.c	FUNCTION_65
0x4008220	    0x488d90e00000	                   lea rdx, [rax + 0xe0]	      4427	ftp.c	FUNCTION_65
0x4008227	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4427	ftp.c	FUNCTION_65
0x400822b	          0x488910	                    mov qword [rax], rdx	      4427	ftp.c	FUNCTION_65
0x400822e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4428	ftp.c	FUNCTION_65
0x4008232	    0xc74018000000	               mov dword [rax + 0x18], 0	      4428	ftp.c	FUNCTION_65
0x4008239	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4429	ftp.c	FUNCTION_65
0x400823d	    0x48c740200000	               mov qword [rax + 0x20], 0	      4429	ftp.c	FUNCTION_65
0x4008245	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4435	ftp.c	FUNCTION_65
0x4008249	    0x488b90100200	           mov rdx, qword [rax + 0x210] 	      4435	ftp.c	FUNCTION_65
0x4008250	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4435	ftp.c	FUNCTION_65
0x4008254	        0x48895008	                mov qword [rax + 8], rdx	      4435	ftp.c	FUNCTION_65
0x4008258	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4436	ftp.c	FUNCTION_65
0x400825c	    0x488b90180200	           mov rdx, qword [rax + 0x218] 	      4436	ftp.c	FUNCTION_65
0x4008263	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4436	ftp.c	FUNCTION_65
0x4008267	        0x48895010	             mov qword [rax + 0x10], rdx	      4436	ftp.c	FUNCTION_65
0x400826b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4437	ftp.c	FUNCTION_65	IF_4	CALL_5
0x400826f	        0x488b4008	                mov rax, qword [rax + 8]	      4437	ftp.c	FUNCTION_65	IF_4	CALL_5
0x4008273	          0x4889c7	                            mov rdi, rax	      4437	ftp.c	FUNCTION_65	IF_4	CALL_5
0x4008276	      0xe8e87fffff	                 call sym.isBadFtpString	      4437	ftp.c	FUNCTION_65	IF_4	CALL_5
0x400827b	            0x84c0	                             test al, al	      4437	ftp.c	FUNCTION_65	IF_4	CALL_5
0x400827d	            0x7407	                            je 0x4008286	      4437	ftp.c	FUNCTION_65	IF_4	CALL_5
0x400827f	      0xb803000000	                              mov eax, 3	      4438	ftp.c	FUNCTION_65	IF_4
0x4008284	            0xeb2f	                           jmp 0x40082b5	      4438	ftp.c	FUNCTION_65	IF_4
0x4008286	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4439	ftp.c	FUNCTION_65	IF_5	CALL_6
0x400828a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4439	ftp.c	FUNCTION_65	IF_5	CALL_6
0x400828e	          0x4889c7	                            mov rdi, rax	      4439	ftp.c	FUNCTION_65	IF_5	CALL_6
0x4008291	      0xe8cd7fffff	                 call sym.isBadFtpString	      4439	ftp.c	FUNCTION_65	IF_5	CALL_6
0x4008296	            0x84c0	                             test al, al	      4439	ftp.c	FUNCTION_65	IF_5	CALL_6
0x4008298	            0x7407	                            je 0x40082a1	      4439	ftp.c	FUNCTION_65	IF_5	CALL_6
0x400829a	      0xb803000000	                              mov eax, 3	      4440	ftp.c	FUNCTION_65	IF_5
0x400829f	            0xeb14	                           jmp 0x40082b5	      4440	ftp.c	FUNCTION_65	IF_5
0x40082a1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4442	ftp.c	FUNCTION_65
0x40082a5	    0x48c780280700	mov qword [rax + 0x728], 0xffffffffffffffff	      4442	ftp.c	FUNCTION_65
0x40082b0	      0xb800000000	                              mov eax, 0	      4444	ftp.c	FUNCTION_65
0x40082b5	        0x4883c438	                           add rsp, 0x38	      4445	ftp.c	FUNCTION_65
0x40082b9	              0x5b	                                 pop rbx	      4445	ftp.c	FUNCTION_65
0x40082ba	              0x5d	                                 pop rbp	      4445	ftp.c	FUNCTION_65
0x40082bb	              0xc3	                                     ret	      4445	ftp.c	FUNCTION_65
ftp_quit	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,2:DO,0:WHILE,0:CALL,5	52
0x4007539	              0x55	                                push rbp	      4020	ftp.c	ELSE_1	FUNCTION_59
0x400753a	          0x4889e5	                            mov rbp, rsp	      4020	ftp.c	ELSE_1	FUNCTION_59
0x400753d	        0x4883ec20	                           sub rsp, 0x20	      4020	ftp.c	ELSE_1	FUNCTION_59
0x4007541	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4020	ftp.c	ELSE_1	FUNCTION_59
0x4007545	    0xc745fc000000	                  mov dword [rbp - 4], 0	      4021	ftp.c	ELSE_1	FUNCTION_59
0x400754c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4023	ftp.c	ELSE_1	FUNCTION_59	IF_1
0x4007550	     0xfb680e10600	          movzx eax, byte [rax + 0x6e1] 	      4023	ftp.c	ELSE_1	FUNCTION_59	IF_1
0x4007557	            0x84c0	                             test al, al	      4023	ftp.c	ELSE_1	FUNCTION_59	IF_1
0x4007559	     0xf84a8000000	                            je 0x4007607	      4023	ftp.c	ELSE_1	FUNCTION_59	IF_1
0x400755f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4024	ftp.c	ELSE_1	FUNCTION_59	IF_1	CALL_1
0x4007563	    0x480550060000	                          add rax, 0x650	      4024	ftp.c	ELSE_1	FUNCTION_59	IF_1	CALL_1
0x4007569	    0x488d15000000	                   lea rdx, [0x04007570]	      4024	ftp.c	ELSE_1	FUNCTION_59	IF_1	CALL_1
0x4007570	    0x488d35000000	                   lea rsi, [0x04007577]	      4024	ftp.c	ELSE_1	FUNCTION_59	IF_1	CALL_1
0x4007577	          0x4889c7	                            mov rdi, rax	      4024	ftp.c	ELSE_1	FUNCTION_59	IF_1	CALL_1
0x400757a	      0xb800000000	                              mov eax, 0	      4024	ftp.c	ELSE_1	FUNCTION_59	IF_1	CALL_1
0x400757f	      0xe800000000	                          call 0x4007584	      4024	ftp.c	ELSE_1	FUNCTION_59	IF_1	CALL_1
0x4007584	          0x8945fc	                mov dword [rbp - 4], eax	      4024	ftp.c	ELSE_1	FUNCTION_59	IF_1	CALL_1
0x4007587	        0x837dfc00	                  cmp dword [rbp - 4], 0	      4025	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2
0x400758b	            0x745a	                            je 0x40075e7	      4025	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2
0x400758d	          0x8b45fc	                mov eax, dword [rbp - 4]	      4026	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_2
0x4007590	            0x89c7	                            mov edi, eax	      4026	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_2
0x4007592	      0xe800000000	                          call 0x4007597	      4026	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_2
0x4007597	          0x4889c2	                            mov rdx, rax	      4026	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_2
0x400759a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4026	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_2
0x400759e	          0x488b00	                    mov rax, qword [rax]	      4026	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_2
0x40075a1	    0x488d35000000	                   lea rsi, [0x040075a8]	      4026	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_2
0x40075a8	          0x4889c7	                            mov rdi, rax	      4026	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_2
0x40075ab	      0xb800000000	                              mov eax, 0	      4026	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_2
0x40075b0	      0xe800000000	                          call 0x40075b5	      4026	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_2
0x40075b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4028	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2
0x40075b9	    0xc680e1060000	               mov byte [rax + 0x6e1], 0	      4028	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2
0x40075c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4029	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_4
0x40075c4	      0xbe01000000	                              mov esi, 1	      4029	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_4
0x40075c9	          0x4889c7	                            mov rdi, rax	      4029	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_4
0x40075cc	      0xe800000000	                          call 0x40075d1	      4029	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_4
0x40075d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4030	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2
0x40075d5	      0xbe00000000	                              mov esi, 0	      4030	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2
0x40075da	          0x4889c7	                            mov rdi, rax	      4030	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2
0x40075dd	      0xe8a297ffff	                         call sym._state	      4030	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2
0x40075e2	          0x8b45fc	                mov eax, dword [rbp - 4]	      4031	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2
0x40075e5	            0xeb23	                           jmp 0x400760a	      4031	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2
0x40075e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4034	ftp.c	ELSE_1	FUNCTION_59	IF_1
0x40075eb	      0xbe22000000	                           mov esi, 0x22	      4034	ftp.c	ELSE_1	FUNCTION_59	IF_1
0x40075f0	          0x4889c7	                            mov rdi, rax	      4034	ftp.c	ELSE_1	FUNCTION_59	IF_1
0x40075f3	      0xe88c97ffff	                         call sym._state	      4034	ftp.c	ELSE_1	FUNCTION_59	IF_1
0x40075f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4036	ftp.c	ELSE_1	FUNCTION_59	IF_1	CALL_5
0x40075fc	          0x4889c7	                            mov rdi, rax	      4036	ftp.c	ELSE_1	FUNCTION_59	IF_1	CALL_5
0x40075ff	      0xe8f4e3ffff	            call sym.ftp_block_statemach	      4036	ftp.c	ELSE_1	FUNCTION_59	IF_1	CALL_5
0x4007604	          0x8945fc	                mov dword [rbp - 4], eax	      4036	ftp.c	ELSE_1	FUNCTION_59	IF_1	CALL_5
0x4007607	          0x8b45fc	                mov eax, dword [rbp - 4]	      4039	ftp.c	ELSE_1	FUNCTION_59
0x400760a	              0xc9	                                   leave	      4040	ftp.c	ELSE_1	FUNCTION_59
0x400760b	              0xc3	                                     ret	      4040	ftp.c	ELSE_1	FUNCTION_59
ftp_state_stor_prequote	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,0:DO,0:WHILE,0:CALL,1	14
0x4002760	              0x55	                                push rbp	      1519	ftp.c	FUNCTION_25
0x4002761	          0x4889e5	                            mov rbp, rsp	      1519	ftp.c	FUNCTION_25
0x4002764	        0x4883ec20	                           sub rsp, 0x20	      1519	ftp.c	FUNCTION_25
0x4002768	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1519	ftp.c	FUNCTION_25
0x400276c	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1520	ftp.c	FUNCTION_25
0x4002773	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1524	ftp.c	FUNCTION_25	CALL_1
0x4002777	      0xba0e000000	                            mov edx, 0xe	      1524	ftp.c	FUNCTION_25	CALL_1
0x400277c	      0xbe01000000	                              mov esi, 1	      1524	ftp.c	FUNCTION_25	CALL_1
0x4002781	          0x4889c7	                            mov rdi, rax	      1524	ftp.c	FUNCTION_25	CALL_1
0x4002784	      0xe8f2040000	                call sym.ftp_state_quote	      1524	ftp.c	FUNCTION_25	CALL_1
0x4002789	          0x8945fc	                mov dword [rbp - 4], eax	      1524	ftp.c	FUNCTION_25	CALL_1
0x400278c	          0x8b45fc	                mov eax, dword [rbp - 4]	      1526	ftp.c	FUNCTION_25
0x400278f	              0xc9	                                   leave	      1527	ftp.c	FUNCTION_25
0x4002790	              0xc3	                                     ret	      1527	ftp.c	FUNCTION_25
init_wc_data	FOR,0:functions,0:SWITCH,0:ELSE,2:IF,11:DO,0:WHILE,0:CALL,13	190
0x4006b39	              0x55	                                push rbp	      3697	ftp.c	FUNCTION_55
0x4006b3a	          0x4889e5	                            mov rbp, rsp	      3697	ftp.c	FUNCTION_55
0x4006b3d	        0x4883ec40	                           sub rsp, 0x40	      3697	ftp.c	FUNCTION_55
0x4006b41	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      3697	ftp.c	FUNCTION_55
0x4006b45	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3699	ftp.c	FUNCTION_55
0x4006b49	          0x488b00	                    mov rax, qword [rax]	      3699	ftp.c	FUNCTION_55
0x4006b4c	    0x488b80185100	          mov rax, qword [rax + 0x5118] 	      3699	ftp.c	FUNCTION_55
0x4006b53	        0x488945e0	             mov qword [rbp - 0x20], rax	      3699	ftp.c	FUNCTION_55
0x4006b57	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3700	ftp.c	FUNCTION_55
0x4006b5b	          0x488b00	                    mov rax, qword [rax]	      3700	ftp.c	FUNCTION_55
0x4006b5e	    0x480588510000	                         add rax, 0x5188	      3700	ftp.c	FUNCTION_55
0x4006b64	        0x488945e8	             mov qword [rbp - 0x18], rax	      3700	ftp.c	FUNCTION_55
0x4006b68	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      3701	ftp.c	FUNCTION_55
0x4006b6f	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      3702	ftp.c	FUNCTION_55
0x4006b77	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3704	ftp.c	FUNCTION_55	CALL_1
0x4006b7b	          0x488b00	                    mov rax, qword [rax]	      3704	ftp.c	FUNCTION_55	CALL_1
0x4006b7e	    0x488b80185100	          mov rax, qword [rax + 0x5118] 	      3704	ftp.c	FUNCTION_55	CALL_1
0x4006b85	      0xbe2f000000	                           mov esi, 0x2f	      3704	ftp.c	FUNCTION_55	CALL_1
0x4006b8a	          0x4889c7	                            mov rdi, rax	      3704	ftp.c	FUNCTION_55	CALL_1
0x4006b8d	      0xe800000000	                          call 0x4006b92	      3704	ftp.c	FUNCTION_55	CALL_1
0x4006b92	        0x488945f8	                mov qword [rbp - 8], rax	      3704	ftp.c	FUNCTION_55	CALL_1
0x4006b96	      0x48837df800	                  cmp qword [rbp - 8], 0	      3705	ftp.c	FUNCTION_55	IF_1
0x4006b9b	            0x746f	                            je 0x4006c0c	      3705	ftp.c	FUNCTION_55	IF_1
0x4006b9d	      0x488345f801	                  add qword [rbp - 8], 1	      3706	ftp.c	FUNCTION_55	IF_1
0x4006ba2	        0x488b45f8	                mov rax, qword [rbp - 8]	      3707	ftp.c	FUNCTION_55	IF_1	IF_2
0x4006ba6	           0xfb600	                   movzx eax, byte [rax]	      3707	ftp.c	FUNCTION_55	IF_1	IF_2
0x4006ba9	            0x84c0	                             test al, al	      3707	ftp.c	FUNCTION_55	IF_1	IF_2
0x4006bab	            0x7521	                           jne 0x4006bce	      3707	ftp.c	FUNCTION_55	IF_1	IF_2
0x4006bad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3708	ftp.c	FUNCTION_55	IF_1	IF_2
0x4006bb1	    0xc70004000000	                      mov dword [rax], 4	      3708	ftp.c	FUNCTION_55	IF_1	IF_2
0x4006bb7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3709	ftp.c	FUNCTION_55	IF_1	IF_2	CALL_2
0x4006bbb	          0x4889c7	                            mov rdi, rax	      3709	ftp.c	FUNCTION_55	IF_1	IF_2	CALL_2
0x4006bbe	      0xe8600b0000	             call sym.ftp_parse_url_path	      3709	ftp.c	FUNCTION_55	IF_1	IF_2	CALL_2
0x4006bc3	          0x8945dc	             mov dword [rbp - 0x24], eax	      3709	ftp.c	FUNCTION_55	IF_1	IF_2	CALL_2
0x4006bc6	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3710	ftp.c	FUNCTION_55	IF_1	IF_2
0x4006bc9	      0xe96b020000	                           jmp 0x4006e39	      3710	ftp.c	FUNCTION_55	IF_1	IF_2
0x4006bce	    0x488b05000000	            mov rax, qword [0x04006bd5] 	      3712	ftp.c	FUNCTION_55	IF_1	CALL_3
0x4006bd5	          0x488b00	                    mov rax, qword [rax]	      3712	ftp.c	FUNCTION_55	IF_1	CALL_3
0x4006bd8	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3712	ftp.c	FUNCTION_55	IF_1	CALL_3
0x4006bdc	          0x4889d7	                            mov rdi, rdx	      3712	ftp.c	FUNCTION_55	IF_1	CALL_3
0x4006bdf	            0xffd0	                                call rax	      3712	ftp.c	FUNCTION_55	IF_1	CALL_3
0x4006be1	          0x4889c2	                            mov rdx, rax	      3712	ftp.c	FUNCTION_55	IF_1	CALL_3
0x4006be4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3712	ftp.c	FUNCTION_55	IF_1	CALL_3
0x4006be8	        0x48895010	             mov qword [rax + 0x10], rdx	      3712	ftp.c	FUNCTION_55	IF_1	CALL_3
0x4006bec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3713	ftp.c	FUNCTION_55	IF_1	IF_3
0x4006bf0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3713	ftp.c	FUNCTION_55	IF_1	IF_3
0x4006bf4	          0x4885c0	                           test rax, rax	      3713	ftp.c	FUNCTION_55	IF_1	IF_3
0x4006bf7	            0x750a	                           jne 0x4006c03	      3713	ftp.c	FUNCTION_55	IF_1	IF_3
0x4006bf9	      0xb81b000000	                           mov eax, 0x1b	      3714	ftp.c	FUNCTION_55	IF_1	IF_3
0x4006bfe	      0xe936020000	                           jmp 0x4006e39	      3714	ftp.c	FUNCTION_55	IF_1	IF_3
0x4006c03	        0x488b45f8	                mov rax, qword [rbp - 8]	      3715	ftp.c	FUNCTION_55	IF_1
0x4006c07	          0xc60000	                       mov byte [rax], 0	      3715	ftp.c	FUNCTION_55	IF_1
0x4006c0a	            0xeb6a	                           jmp 0x4006c76	      3715	ftp.c	FUNCTION_55	IF_1
0x4006c0c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3718	ftp.c	FUNCTION_55	ELSE_1	IF_4
0x4006c10	           0xfb600	                   movzx eax, byte [rax]	      3718	ftp.c	FUNCTION_55	ELSE_1	IF_4
0x4006c13	            0x84c0	                             test al, al	      3718	ftp.c	FUNCTION_55	ELSE_1	IF_4
0x4006c15	            0x743e	                            je 0x4006c55	      3718	ftp.c	FUNCTION_55	ELSE_1	IF_4
0x4006c17	    0x488b05000000	            mov rax, qword [0x04006c1e] 	      3719	ftp.c	FUNCTION_55	ELSE_1	IF_4	CALL_4
0x4006c1e	          0x488b00	                    mov rax, qword [rax]	      3719	ftp.c	FUNCTION_55	ELSE_1	IF_4	CALL_4
0x4006c21	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3719	ftp.c	FUNCTION_55	ELSE_1	IF_4	CALL_4
0x4006c25	          0x4889d7	                            mov rdi, rdx	      3719	ftp.c	FUNCTION_55	ELSE_1	IF_4	CALL_4
0x4006c28	            0xffd0	                                call rax	      3719	ftp.c	FUNCTION_55	ELSE_1	IF_4	CALL_4
0x4006c2a	          0x4889c2	                            mov rdx, rax	      3719	ftp.c	FUNCTION_55	ELSE_1	IF_4	CALL_4
0x4006c2d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3719	ftp.c	FUNCTION_55	ELSE_1	IF_4	CALL_4
0x4006c31	        0x48895010	             mov qword [rax + 0x10], rdx	      3719	ftp.c	FUNCTION_55	ELSE_1	IF_4	CALL_4
0x4006c35	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3720	ftp.c	FUNCTION_55	ELSE_1	IF_4	IF_5
0x4006c39	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3720	ftp.c	FUNCTION_55	ELSE_1	IF_4	IF_5
0x4006c3d	          0x4885c0	                           test rax, rax	      3720	ftp.c	FUNCTION_55	ELSE_1	IF_4	IF_5
0x4006c40	            0x750a	                           jne 0x4006c4c	      3720	ftp.c	FUNCTION_55	ELSE_1	IF_4	IF_5
0x4006c42	      0xb81b000000	                           mov eax, 0x1b	      3721	ftp.c	FUNCTION_55	ELSE_1	IF_4	IF_5
0x4006c47	      0xe9ed010000	                           jmp 0x4006e39	      3721	ftp.c	FUNCTION_55	ELSE_1	IF_4	IF_5
0x4006c4c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3722	ftp.c	FUNCTION_55	ELSE_1	IF_4
0x4006c50	          0xc60000	                       mov byte [rax], 0	      3722	ftp.c	FUNCTION_55	ELSE_1	IF_4
0x4006c53	            0xeb21	                           jmp 0x4006c76	      3722	ftp.c	FUNCTION_55	ELSE_1	IF_4
0x4006c55	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3725	ftp.c	FUNCTION_55	ELSE_1	ELSE_2
0x4006c59	    0xc70004000000	                      mov dword [rax], 4	      3725	ftp.c	FUNCTION_55	ELSE_1	ELSE_2
0x4006c5f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3726	ftp.c	FUNCTION_55	ELSE_1	ELSE_2	CALL_5
0x4006c63	          0x4889c7	                            mov rdi, rax	      3726	ftp.c	FUNCTION_55	ELSE_1	ELSE_2	CALL_5
0x4006c66	      0xe8b80a0000	             call sym.ftp_parse_url_path	      3726	ftp.c	FUNCTION_55	ELSE_1	ELSE_2	CALL_5
0x4006c6b	          0x8945dc	             mov dword [rbp - 0x24], eax	      3726	ftp.c	FUNCTION_55	ELSE_1	ELSE_2	CALL_5
0x4006c6e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3727	ftp.c	FUNCTION_55	ELSE_1	ELSE_2
0x4006c71	      0xe9c3010000	                           jmp 0x4006e39	      3727	ftp.c	FUNCTION_55	ELSE_1	ELSE_2
0x4006c76	    0x488b05000000	            mov rax, qword [0x04006c7d] 	      3735	ftp.c	FUNCTION_55	CALL_6
0x4006c7d	          0x488b00	                    mov rax, qword [rax]	      3735	ftp.c	FUNCTION_55	CALL_6
0x4006c80	      0xbe18000000	                           mov esi, 0x18	      3735	ftp.c	FUNCTION_55	CALL_6
0x4006c85	      0xbf01000000	                              mov edi, 1	      3735	ftp.c	FUNCTION_55	CALL_6
0x4006c8a	            0xffd0	                                call rax	      3735	ftp.c	FUNCTION_55	CALL_6
0x4006c8c	        0x488945f0	             mov qword [rbp - 0x10], rax	      3735	ftp.c	FUNCTION_55	CALL_6
0x4006c90	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3736	ftp.c	FUNCTION_55	IF_6
0x4006c95	            0x750c	                           jne 0x4006ca3	      3736	ftp.c	FUNCTION_55	IF_6
0x4006c97	    0xc745dc1b0000	           mov dword [rbp - 0x24], 0x1b 	      3737	ftp.c	FUNCTION_55	IF_6
0x4006c9e	      0xe932010000	                           jmp 0x4006dd5	      3738	ftp.c	FUNCTION_55	IF_6
0x4006ca3	      0xe800000000	                          call 0x4006ca8	      3742	ftp.c	FUNCTION_55	CALL_7
0x4006ca8	          0x4889c2	                            mov rdx, rax	      3742	ftp.c	FUNCTION_55	CALL_7
0x4006cab	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3742	ftp.c	FUNCTION_55	CALL_7
0x4006caf	          0x488910	                    mov qword [rax], rdx	      3742	ftp.c	FUNCTION_55	CALL_7
0x4006cb2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3743	ftp.c	FUNCTION_55	IF_7
0x4006cb6	          0x488b00	                    mov rax, qword [rax]	      3743	ftp.c	FUNCTION_55	IF_7
0x4006cb9	          0x4885c0	                           test rax, rax	      3743	ftp.c	FUNCTION_55	IF_7
0x4006cbc	            0x750c	                           jne 0x4006cca	      3743	ftp.c	FUNCTION_55	IF_7
0x4006cbe	    0xc745dc1b0000	           mov dword [rbp - 0x24], 0x1b 	      3744	ftp.c	FUNCTION_55	IF_7
0x4006cc5	      0xe90b010000	                           jmp 0x4006dd5	      3745	ftp.c	FUNCTION_55	IF_7
0x4006cca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3748	ftp.c	FUNCTION_55
0x4006cce	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3748	ftp.c	FUNCTION_55
0x4006cd2	        0x48895038	             mov qword [rax + 0x38], rdx	      3748	ftp.c	FUNCTION_55
0x4006cd6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3749	ftp.c	FUNCTION_55
0x4006cda	    0x488d150ffeff	               lea rdx, sym.wc_data_dtor	      3749	ftp.c	FUNCTION_55
0x4006ce1	        0x48895040	             mov qword [rax + 0x40], rdx	      3749	ftp.c	FUNCTION_55
0x4006ce5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3752	ftp.c	FUNCTION_55	IF_8
0x4006ce9	          0x488b00	                    mov rax, qword [rax]	      3752	ftp.c	FUNCTION_55	IF_8
0x4006cec	    0x8b80b8070000	           mov eax, dword [rax + 0x7b8] 	      3752	ftp.c	FUNCTION_55	IF_8
0x4006cf2	          0x83f802	                              cmp eax, 2	      3752	ftp.c	FUNCTION_55	IF_8
0x4006cf5	            0x7511	                           jne 0x4006d08	      3752	ftp.c	FUNCTION_55	IF_8
0x4006cf7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3753	ftp.c	FUNCTION_55	IF_8
0x4006cfb	          0x488b00	                    mov rax, qword [rax]	      3753	ftp.c	FUNCTION_55	IF_8
0x4006cfe	    0xc780b8070000	              mov dword [rax + 0x7b8], 1	      3753	ftp.c	FUNCTION_55	IF_8
0x4006d08	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3756	ftp.c	FUNCTION_55	CALL_8
0x4006d0c	          0x4889c7	                            mov rdi, rax	      3756	ftp.c	FUNCTION_55	CALL_8
0x4006d0f	      0xe80f0a0000	             call sym.ftp_parse_url_path	      3756	ftp.c	FUNCTION_55	CALL_8
0x4006d14	          0x8945dc	             mov dword [rbp - 0x24], eax	      3756	ftp.c	FUNCTION_55	CALL_8
0x4006d17	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3757	ftp.c	FUNCTION_55	IF_9
0x4006d1b	     0xf85b3000000	                           jne 0x4006dd4	      3757	ftp.c	FUNCTION_55	IF_9
0x4006d21	    0x488b05000000	            mov rax, qword [0x04006d28] 	      3761	ftp.c	FUNCTION_55	CALL_9
0x4006d28	          0x488b00	                    mov rax, qword [rax]	      3761	ftp.c	FUNCTION_55	CALL_9
0x4006d2b	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3761	ftp.c	FUNCTION_55	CALL_9
0x4006d2f	          0x488b12	                    mov rdx, qword [rdx]	      3761	ftp.c	FUNCTION_55	CALL_9
0x4006d32	    0x488b92185100	          mov rdx, qword [rdx + 0x5118] 	      3761	ftp.c	FUNCTION_55	CALL_9
0x4006d39	          0x4889d7	                            mov rdi, rdx	      3761	ftp.c	FUNCTION_55	CALL_9
0x4006d3c	            0xffd0	                                call rax	      3761	ftp.c	FUNCTION_55	CALL_9
0x4006d3e	          0x4889c2	                            mov rdx, rax	      3761	ftp.c	FUNCTION_55	CALL_9
0x4006d41	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3761	ftp.c	FUNCTION_55	CALL_9
0x4006d45	        0x48895008	                mov qword [rax + 8], rdx	      3761	ftp.c	FUNCTION_55	CALL_9
0x4006d49	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3762	ftp.c	FUNCTION_55	IF_10
0x4006d4d	        0x488b4008	                mov rax, qword [rax + 8]	      3762	ftp.c	FUNCTION_55	IF_10
0x4006d51	          0x4885c0	                           test rax, rax	      3762	ftp.c	FUNCTION_55	IF_10
0x4006d54	            0x7509	                           jne 0x4006d5f	      3762	ftp.c	FUNCTION_55	IF_10
0x4006d56	    0xc745dc1b0000	           mov dword [rbp - 0x24], 0x1b 	      3763	ftp.c	FUNCTION_55	IF_10
0x4006d5d	            0xeb76	                           jmp 0x4006dd5	      3764	ftp.c	FUNCTION_55	IF_10
0x4006d5f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3768	ftp.c	FUNCTION_55
0x4006d63	          0x488b00	                    mov rax, qword [rax]	      3768	ftp.c	FUNCTION_55
0x4006d66	    0x488b90880200	           mov rdx, qword [rax + 0x288] 	      3768	ftp.c	FUNCTION_55
0x4006d6d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3768	ftp.c	FUNCTION_55
0x4006d71	        0x48895008	                mov qword [rax + 8], rdx	      3768	ftp.c	FUNCTION_55
0x4006d75	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3770	ftp.c	FUNCTION_55
0x4006d79	          0x488b00	                    mov rax, qword [rax]	      3770	ftp.c	FUNCTION_55
0x4006d7c	    0x488b15000000	            mov rdx, qword [0x04006d83] 	      3770	ftp.c	FUNCTION_55
0x4006d83	    0x488990880200	            mov qword [rax + 0x288], rdx	      3770	ftp.c	FUNCTION_55
0x4006d8a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3772	ftp.c	FUNCTION_55
0x4006d8e	          0x488b00	                    mov rax, qword [rax]	      3772	ftp.c	FUNCTION_55
0x4006d91	    0x488b90100200	           mov rdx, qword [rax + 0x210] 	      3772	ftp.c	FUNCTION_55
0x4006d98	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3772	ftp.c	FUNCTION_55
0x4006d9c	        0x48895010	             mov qword [rax + 0x10], rdx	      3772	ftp.c	FUNCTION_55
0x4006da0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3774	ftp.c	FUNCTION_55
0x4006da4	          0x488b00	                    mov rax, qword [rax]	      3774	ftp.c	FUNCTION_55
0x4006da7	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3774	ftp.c	FUNCTION_55
0x4006dab	    0x488990100200	            mov qword [rax + 0x210], rdx	      3774	ftp.c	FUNCTION_55
0x4006db2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3776	ftp.c	FUNCTION_55	CALL_10
0x4006db6	          0x488b00	                    mov rax, qword [rax]	      3776	ftp.c	FUNCTION_55	CALL_10
0x4006db9	    0x488d35000000	                   lea rsi, [0x04006dc0]	      3776	ftp.c	FUNCTION_55	CALL_10
0x4006dc0	          0x4889c7	                            mov rdi, rax	      3776	ftp.c	FUNCTION_55	CALL_10
0x4006dc3	      0xb800000000	                              mov eax, 0	      3776	ftp.c	FUNCTION_55	CALL_10
0x4006dc8	      0xe800000000	                          call 0x4006dcd	      3776	ftp.c	FUNCTION_55	CALL_10
0x4006dcd	      0xb800000000	                              mov eax, 0	      3777	ftp.c	FUNCTION_55
0x4006dd2	            0xeb65	                           jmp 0x4006e39	      3777	ftp.c	FUNCTION_55
0x4006dd4	              0x90	                                     nop	      3758	ftp.c	FUNCTION_55	IF_9
0x4006dd5	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3780	ftp.c	FUNCTION_55	IF_11
0x4006dda	            0x741f	                            je 0x4006dfb	      3780	ftp.c	FUNCTION_55	IF_11
0x4006ddc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3781	ftp.c	FUNCTION_55	IF_11	CALL_11
0x4006de0	          0x4889c7	                            mov rdi, rax	      3781	ftp.c	FUNCTION_55	IF_11	CALL_11
0x4006de3	      0xe800000000	                          call 0x4006de8	      3781	ftp.c	FUNCTION_55	IF_11	CALL_11
0x4006de8	    0x488b05000000	            mov rax, qword [0x04006def] 	      3782	ftp.c	FUNCTION_55	IF_11	CALL_12
0x4006def	          0x488b00	                    mov rax, qword [rax]	      3782	ftp.c	FUNCTION_55	IF_11	CALL_12
0x4006df2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3782	ftp.c	FUNCTION_55	IF_11	CALL_12
0x4006df6	          0x4889d7	                            mov rdi, rdx	      3782	ftp.c	FUNCTION_55	IF_11	CALL_12
0x4006df9	            0xffd0	                                call rax	      3782	ftp.c	FUNCTION_55	IF_11	CALL_12
0x4006dfb	    0x488b05000000	            mov rax, qword [0x04006e02] 	      3784	ftp.c	FUNCTION_55	CALL_13
0x4006e02	          0x488b00	                    mov rax, qword [rax]	      3784	ftp.c	FUNCTION_55	CALL_13
0x4006e05	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3784	ftp.c	FUNCTION_55	CALL_13
0x4006e09	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      3784	ftp.c	FUNCTION_55	CALL_13
0x4006e0d	          0x4889d7	                            mov rdi, rdx	      3784	ftp.c	FUNCTION_55	CALL_13
0x4006e10	            0xffd0	                                call rax	      3784	ftp.c	FUNCTION_55	CALL_13
0x4006e12	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3784	ftp.c	FUNCTION_55	CALL_13
0x4006e16	    0x48c740100000	               mov qword [rax + 0x10], 0	      3784	ftp.c	FUNCTION_55	CALL_13
0x4006e1e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3785	ftp.c	FUNCTION_55
0x4006e22	    0x48c740400000	               mov qword [rax + 0x40], 0	      3785	ftp.c	FUNCTION_55
0x4006e2a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3786	ftp.c	FUNCTION_55
0x4006e2e	    0x48c740380000	               mov qword [rax + 0x38], 0	      3786	ftp.c	FUNCTION_55
0x4006e36	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3787	ftp.c	FUNCTION_55
0x4006e39	              0xc9	                                   leave	      3788	ftp.c	FUNCTION_55
0x4006e3a	              0xc3	                                     ret	      3788	ftp.c	FUNCTION_55
ftp_perform	FOR,0:functions,0:SWITCH,0:ELSE,0:IF,3:DO,0:WHILE,0:CALL,7	52
0x4006a2a	              0x55	                                push rbp	      3656	ftp.c	FUNCTION_53
0x4006a2b	          0x4889e5	                            mov rbp, rsp	      3656	ftp.c	FUNCTION_53
0x4006a2e	        0x4883ec30	                           sub rsp, 0x30	      3656	ftp.c	FUNCTION_53
0x4006a32	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3656	ftp.c	FUNCTION_53
0x4006a36	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3656	ftp.c	FUNCTION_53
0x4006a3a	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3656	ftp.c	FUNCTION_53
0x4006a3e	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      3658	ftp.c	FUNCTION_53
0x4006a45	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3662	ftp.c	FUNCTION_53	IF_1
0x4006a49	          0x488b00	                    mov rax, qword [rax]	      3662	ftp.c	FUNCTION_53	IF_1
0x4006a4c	     0xfb680e10700	          movzx eax, byte [rax + 0x7e1] 	      3662	ftp.c	FUNCTION_53	IF_1
0x4006a53	            0x84c0	                             test al, al	      3662	ftp.c	FUNCTION_53	IF_1
0x4006a55	            0x741d	                            je 0x4006a74	      3662	ftp.c	FUNCTION_53	IF_1
0x4006a57	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3664	ftp.c	FUNCTION_53	IF_1
0x4006a5b	          0x488b00	                    mov rax, qword [rax]	      3664	ftp.c	FUNCTION_53	IF_1
0x4006a5e	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      3664	ftp.c	FUNCTION_53	IF_1
0x4006a65	        0x488945f8	                mov qword [rbp - 8], rax	      3664	ftp.c	FUNCTION_53	IF_1
0x4006a69	        0x488b45f8	                mov rax, qword [rbp - 8]	      3665	ftp.c	FUNCTION_53	IF_1
0x4006a6d	    0xc74018010000	               mov dword [rax + 0x18], 1	      3665	ftp.c	FUNCTION_53	IF_1
0x4006a74	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3668	ftp.c	FUNCTION_53
0x4006a78	          0xc60000	                       mov byte [rax], 0	      3668	ftp.c	FUNCTION_53
0x4006a7b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3671	ftp.c	FUNCTION_53	CALL_3
0x4006a7f	      0xba0c000000	                            mov edx, 0xc	      3671	ftp.c	FUNCTION_53	CALL_3
0x4006a84	      0xbe01000000	                              mov esi, 1	      3671	ftp.c	FUNCTION_53	CALL_3
0x4006a89	          0x4889c7	                            mov rdi, rax	      3671	ftp.c	FUNCTION_53	CALL_3
0x4006a8c	      0xe8eac1ffff	                call sym.ftp_state_quote	      3671	ftp.c	FUNCTION_53	CALL_3
0x4006a91	          0x8945f4	              mov dword [rbp - 0xc], eax	      3671	ftp.c	FUNCTION_53	CALL_3
0x4006a94	        0x837df400	                cmp dword [rbp - 0xc], 0	      3672	ftp.c	FUNCTION_53	IF_2
0x4006a98	            0x7405	                            je 0x4006a9f	      3672	ftp.c	FUNCTION_53	IF_2
0x4006a9a	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3673	ftp.c	FUNCTION_53	IF_2
0x4006a9d	            0xeb4f	                           jmp 0x4006aee	      3673	ftp.c	FUNCTION_53	IF_2
0x4006a9f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3676	ftp.c	FUNCTION_53	CALL_4
0x4006aa3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3676	ftp.c	FUNCTION_53	CALL_4
0x4006aa7	          0x4889d6	                            mov rsi, rdx	      3676	ftp.c	FUNCTION_53	CALL_4
0x4006aaa	          0x4889c7	                            mov rdi, rax	      3676	ftp.c	FUNCTION_53	CALL_4
0x4006aad	      0xe8faeeffff	            call sym.ftp_multi_statemach	      3676	ftp.c	FUNCTION_53	CALL_4
0x4006ab2	          0x8945f4	              mov dword [rbp - 0xc], eax	      3676	ftp.c	FUNCTION_53	CALL_4
0x4006ab5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3678	ftp.c	FUNCTION_53
0x4006ab9	     0xfb690a60300	          movzx edx, byte [rax + 0x3a6] 	      3678	ftp.c	FUNCTION_53
0x4006ac0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3678	ftp.c	FUNCTION_53
0x4006ac4	            0x8810	                      mov byte [rax], dl	      3678	ftp.c	FUNCTION_53
0x4006ac6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3680	ftp.c	FUNCTION_53	CALL_5
0x4006aca	           0xfb600	                   movzx eax, byte [rax]	      3680	ftp.c	FUNCTION_53	CALL_5
0x4006acd	           0xfb6d0	                           movzx edx, al	      3680	ftp.c	FUNCTION_53	CALL_5
0x4006ad0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3680	ftp.c	FUNCTION_53	CALL_5
0x4006ad4	          0x488b00	                    mov rax, qword [rax]	      3680	ftp.c	FUNCTION_53	CALL_5
0x4006ad7	    0x488d35000000	                   lea rsi, [0x04006ade]	      3680	ftp.c	FUNCTION_53	CALL_5
0x4006ade	          0x4889c7	                            mov rdi, rax	      3680	ftp.c	FUNCTION_53	CALL_5
0x4006ae1	      0xb800000000	                              mov eax, 0	      3680	ftp.c	FUNCTION_53	CALL_5
0x4006ae6	      0xe800000000	                          call 0x4006aeb	      3680	ftp.c	FUNCTION_53	CALL_5
0x4006aeb	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3685	ftp.c	FUNCTION_53
0x4006aee	              0xc9	                                   leave	      3686	ftp.c	FUNCTION_53
0x4006aef	              0xc3	                                     ret	      3686	ftp.c	FUNCTION_53
Curl_GetFTPResponse	FOR,0:functions,0:SWITCH,1:ELSE,3:IF,8:DO,0:WHILE,1:CALL,7	137
0x4000b7c	              0x55	                                push rbp	       631	ftp.c	FUNCTION_11
0x4000b7d	          0x4889e5	                            mov rbp, rsp	       631	ftp.c	FUNCTION_11
0x4000b80	        0x4883ec70	                           sub rsp, 0x70	       631	ftp.c	FUNCTION_11
0x4000b84	        0x48897da8	             mov qword [rbp - 0x58], rdi	       631	ftp.c	FUNCTION_11
0x4000b88	        0x488975a0	             mov qword [rbp - 0x60], rsi	       631	ftp.c	FUNCTION_11
0x4000b8c	        0x48895598	             mov qword [rbp - 0x68], rdx	       631	ftp.c	FUNCTION_11
0x4000b90	    0x64488b042528	                mov rax, qword fs:[0x28]	       631	ftp.c	FUNCTION_11
0x4000b99	        0x488945f8	                mov qword [rbp - 8], rax	       631	ftp.c	FUNCTION_11
0x4000b9d	            0x31c0	                            xor eax, eax	       631	ftp.c	FUNCTION_11
0x4000b9f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       639	ftp.c	FUNCTION_11
0x4000ba3	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	       639	ftp.c	FUNCTION_11
0x4000ba9	          0x8945c4	             mov dword [rbp - 0x3c], eax	       639	ftp.c	FUNCTION_11
0x4000bac	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       642	ftp.c	FUNCTION_11
0x4000bb0	          0x488b00	                    mov rax, qword [rax]	       642	ftp.c	FUNCTION_11
0x4000bb3	        0x488945d8	             mov qword [rbp - 0x28], rax	       642	ftp.c	FUNCTION_11
0x4000bb7	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       643	ftp.c	FUNCTION_11
0x4000bbe	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       644	ftp.c	FUNCTION_11
0x4000bc2	    0x480550060000	                          add rax, 0x650	       644	ftp.c	FUNCTION_11
0x4000bc8	        0x488945e0	             mov qword [rbp - 0x20], rax	       644	ftp.c	FUNCTION_11
0x4000bcc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       645	ftp.c	FUNCTION_11
0x4000bd0	        0x488945e8	             mov qword [rbp - 0x18], rax	       645	ftp.c	FUNCTION_11
0x4000bd4	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       647	ftp.c	FUNCTION_11
0x4000bdb	    0xc745b8000000	               mov dword [rbp - 0x48], 0	       648	ftp.c	FUNCTION_11
0x4000be2	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       650	ftp.c	FUNCTION_11	IF_1
0x4000be7	            0x740c	                            je 0x4000bf5	       650	ftp.c	FUNCTION_11	IF_1
0x4000be9	        0x488b4598	             mov rax, qword [rbp - 0x68]	       651	ftp.c	FUNCTION_11	IF_1
0x4000bed	    0xc70000000000	                      mov dword [rax], 0	       651	ftp.c	FUNCTION_11	IF_1
0x4000bf3	            0xeb08	                           jmp 0x4000bfd	       651	ftp.c	FUNCTION_11	IF_1
0x4000bf5	        0x488d45b8	                   lea rax, [rbp - 0x48]	       654	ftp.c	FUNCTION_11	ELSE_1
0x4000bf9	        0x48894598	             mov qword [rbp - 0x68], rax	       654	ftp.c	FUNCTION_11	ELSE_1
0x4000bfd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       656	ftp.c	FUNCTION_11	ELSE_1
0x4000c01	    0x48c700000000	                      mov qword [rax], 0	       656	ftp.c	FUNCTION_11	ELSE_1
0x4000c08	      0xe93f010000	                           jmp 0x4000d4c	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000c0d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       660	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_1
0x4000c11	          0x4889c7	                            mov rdi, rax	       660	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_1
0x4000c14	      0xe800000000	                          call 0x4000c19	       660	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_1
0x4000c19	        0x488945f0	             mov qword [rbp - 0x10], rax	       660	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_1
0x4000c1d	      0x48837df000	               cmp qword [rbp - 0x10], 0	       662	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2
0x4000c22	            0x7f22	                            jg 0x4000c46	       662	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2
0x4000c24	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       663	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2	CALL_2
0x4000c28	    0x488d35000000	                   lea rsi, [0x04000c2f]	       663	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2	CALL_2
0x4000c2f	          0x4889c7	                            mov rdi, rax	       663	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2	CALL_2
0x4000c32	      0xb800000000	                              mov eax, 0	       663	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2	CALL_2
0x4000c37	      0xe800000000	                          call 0x4000c3c	       663	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2	CALL_2
0x4000c3c	      0xb81c000000	                           mov eax, 0x1c	       664	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2
0x4000c41	      0xe928010000	                           jmp 0x4000d6e	       664	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2
0x4000c46	    0x48c745d0e803	          mov qword [rbp - 0x30], 0x3e8 	       667	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000c4e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       668	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3
0x4000c52	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       668	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3
0x4000c56	            0x7d08	                           jge 0x4000c60	       668	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3
0x4000c58	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       669	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3
0x4000c5c	        0x488945d0	             mov qword [rbp - 0x30], rax	       669	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_3
0x4000c60	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       685	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_4
0x4000c64	          0x488b00	                    mov rax, qword [rax]	       685	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_4
0x4000c67	          0x4885c0	                           test rax, rax	       685	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_4
0x4000c6a	            0x7406	                            je 0x4000c72	       685	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_4
0x4000c6c	        0x837dc001	               cmp dword [rbp - 0x40], 1	       685	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_4
0x4000c70	            0x7e7e	                           jle 0x4000cf0	       685	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_4
0x4000c72	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       693	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	CALL_3
0x4000c76	      0xbe00000000	                              mov esi, 0	       693	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	CALL_3
0x4000c7b	          0x4889c7	                            mov rdi, rax	       693	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	CALL_3
0x4000c7e	      0xe800000000	                          call 0x4000c83	       693	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	CALL_3
0x4000c83	          0x83f001	                              xor eax, 1	       693	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	CALL_3
0x4000c86	            0x84c0	                             test al, al	       693	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	CALL_3
0x4000c88	            0x7466	                            je 0x4000cf0	       693	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	CALL_3
0x4000c8a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4000c8e	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4000c91	          0x4889d1	                            mov rcx, rdx	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4000c94	      0xbaffffffff	                     mov edx, 0xffffffff	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4000c99	      0xbeffffffff	                     mov esi, 0xffffffff	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4000c9e	            0x89c7	                            mov edi, eax	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4000ca0	      0xe800000000	                          call 0x4000ca5	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4000ca5	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4000ca8	            0x7406	                            je 0x4000cb0	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4000caa	            0x85c0	                           test eax, eax	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4000cac	            0x742b	                            je 0x4000cd9	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4000cae	            0xeb40	                           jmp 0x4000cf0	       706	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1
0x4000cb0	      0xe800000000	                          call 0x4000cb5	       697	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1
0x4000cb5	            0x8b10	                    mov edx, dword [rax]	       696	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_5
0x4000cb7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       696	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_5
0x4000cbb	    0x488d35000000	                   lea rsi, [0x04000cc2]	       696	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_5
0x4000cc2	          0x4889c7	                            mov rdi, rax	       696	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_5
0x4000cc5	      0xb800000000	                              mov eax, 0	       696	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_5
0x4000cca	      0xe800000000	                          call 0x4000ccf	       696	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_5
0x4000ccf	      0xb838000000	                           mov eax, 0x38	       698	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1
0x4000cd4	      0xe995000000	                           jmp 0x4000d6e	       698	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1
0x4000cd9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       701	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	IF_6	CALL_6
0x4000cdd	          0x4889c7	                            mov rdi, rax	       701	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	IF_6	CALL_6
0x4000ce0	      0xe800000000	                          call 0x4000ce5	       701	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	IF_6	CALL_6
0x4000ce5	            0x85c0	                           test eax, eax	       701	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	IF_6	CALL_6
0x4000ce7	            0x7463	                            je 0x4000d4c	       701	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	IF_6	CALL_6
0x4000ce9	      0xb82a000000	                           mov eax, 0x2a	       702	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	IF_6
0x4000cee	            0xeb7e	                           jmp 0x4000d6e	       702	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	IF_6
0x4000cf0	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	       709	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_7
0x4000cf4	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       709	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_7
0x4000cf8	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       709	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_7
0x4000cfc	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       709	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_7
0x4000cff	            0x89c7	                            mov edi, eax	       709	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_7
0x4000d01	      0xe8a9fdffff	                   call sym.ftp_readresp	       709	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_7
0x4000d06	          0x8945bc	             mov dword [rbp - 0x44], eax	       709	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_7
0x4000d09	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       710	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_7
0x4000d0d	            0x7553	                           jne 0x4000d62	       710	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_7
0x4000d0f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       713	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4000d13	          0x4885c0	                           test rax, rax	       713	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4000d16	            0x7512	                           jne 0x4000d2a	       713	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4000d18	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       713	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4000d1c	          0x488b00	                    mov rax, qword [rax]	       713	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4000d1f	          0x4885c0	                           test rax, rax	       713	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4000d22	            0x7406	                            je 0x4000d2a	       713	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4000d24	        0x8345c001	               add dword [rbp - 0x40], 1	       716	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4000d28	            0xeb07	                           jmp 0x4000d31	       716	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4000d2a	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       720	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_3
0x4000d31	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       722	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_3
0x4000d35	          0x488b00	                    mov rax, qword [rax]	       722	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_3
0x4000d38	          0x4889c2	                            mov rdx, rax	       722	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_3
0x4000d3b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       722	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_3
0x4000d3f	          0x4801d0	                            add rax, rdx	       722	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_3
0x4000d42	          0x4889c2	                            mov rdx, rax	       722	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_3
0x4000d45	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       722	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_3
0x4000d49	          0x488910	                    mov qword [rax], rdx	       722	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_3
0x4000d4c	        0x488b4598	             mov rax, qword [rbp - 0x68]	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000d50	            0x8b00	                    mov eax, dword [rax]	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000d52	            0x85c0	                           test eax, eax	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000d54	            0x750d	                           jne 0x4000d63	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000d56	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000d5a	     0xf84adfeffff	                            je 0x4000c0d	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000d60	            0xeb01	                           jmp 0x4000d63	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4000d62	              0x90	                                     nop	       711	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_7
0x4000d63	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       726	ftp.c	FUNCTION_11	ELSE_3
0x4000d67	        0xc6402000	                mov byte [rax + 0x20], 0	       726	ftp.c	FUNCTION_11	ELSE_3
0x4000d6b	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       728	ftp.c	FUNCTION_11	ELSE_3
0x4000d6e	        0x488b4df8	                mov rcx, qword [rbp - 8]	       729	ftp.c	FUNCTION_11	ELSE_3
0x4000d72	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       729	ftp.c	FUNCTION_11	ELSE_3
0x4000d7b	            0x7405	                            je 0x4000d82	       729	ftp.c	FUNCTION_11	ELSE_3
0x4000d7d	      0xe800000000	                          call 0x4000d82	       729	ftp.c	FUNCTION_11	ELSE_3
0x4000d82	              0xc9	                                   leave	       729	ftp.c	FUNCTION_11	ELSE_3
0x4000d83	              0xc3	                                     ret	       729	ftp.c	FUNCTION_11	ELSE_3
ftp_state_type_resp	FOR,0:functions,0:SWITCH,0:ELSE,3:IF,6:DO,0:WHILE,0:CALL,6	59
0x4003dba	              0x55	                                push rbp	      2152	ftp.c	FUNCTION_35
0x4003dbb	          0x4889e5	                            mov rbp, rsp	      2152	ftp.c	FUNCTION_35
0x4003dbe	        0x4883ec20	                           sub rsp, 0x20	      2152	ftp.c	FUNCTION_35
0x4003dc2	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2152	ftp.c	FUNCTION_35
0x4003dc6	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2152	ftp.c	FUNCTION_35
0x4003dc9	          0x8955e0	             mov dword [rbp - 0x20], edx	      2152	ftp.c	FUNCTION_35
0x4003dcc	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      2153	ftp.c	FUNCTION_35
0x4003dd3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2154	ftp.c	FUNCTION_35
0x4003dd7	          0x488b00	                    mov rax, qword [rax]	      2154	ftp.c	FUNCTION_35
0x4003dda	        0x488945f8	                mov qword [rbp - 8], rax	      2154	ftp.c	FUNCTION_35
0x4003dde	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2156	ftp.c	FUNCTION_35	IF_1
0x4003de1	      0x2dc8000000	                           sub eax, 0xc8	      2156	ftp.c	FUNCTION_35	IF_1
0x4003de6	          0x83f863	                           cmp eax, 0x63	      2156	ftp.c	FUNCTION_35	IF_1
0x4003de9	            0x7622	                           jbe 0x4003e0d	      2156	ftp.c	FUNCTION_35	IF_1
0x4003deb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2160	ftp.c	FUNCTION_35	IF_1	CALL_1
0x4003def	    0x488d35000000	                   lea rsi, [0x04003df6]	      2160	ftp.c	FUNCTION_35	IF_1	CALL_1
0x4003df6	          0x4889c7	                            mov rdi, rax	      2160	ftp.c	FUNCTION_35	IF_1	CALL_1
0x4003df9	      0xb800000000	                              mov eax, 0	      2160	ftp.c	FUNCTION_35	IF_1	CALL_1
0x4003dfe	      0xe800000000	                          call 0x4003e03	      2160	ftp.c	FUNCTION_35	IF_1	CALL_1
0x4003e03	      0xb811000000	                           mov eax, 0x11	      2161	ftp.c	FUNCTION_35	IF_1
0x4003e08	      0xe981000000	                           jmp 0x4003e8e	      2161	ftp.c	FUNCTION_35	IF_1
0x4003e0d	    0x817de4c80000	           cmp dword [rbp - 0x1c], 0xc8 	      2163	ftp.c	FUNCTION_35	IF_2
0x4003e14	            0x741b	                            je 0x4003e31	      2163	ftp.c	FUNCTION_35	IF_2
0x4003e16	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      2164	ftp.c	FUNCTION_35	IF_2	CALL_2
0x4003e19	        0x488b45f8	                mov rax, qword [rbp - 8]	      2164	ftp.c	FUNCTION_35	IF_2	CALL_2
0x4003e1d	    0x488d35000000	                   lea rsi, [0x04003e24]	      2164	ftp.c	FUNCTION_35	IF_2	CALL_2
0x4003e24	          0x4889c7	                            mov rdi, rax	      2164	ftp.c	FUNCTION_35	IF_2	CALL_2
0x4003e27	      0xb800000000	                              mov eax, 0	      2164	ftp.c	FUNCTION_35	IF_2	CALL_2
0x4003e2c	      0xe800000000	                          call 0x4003e31	      2164	ftp.c	FUNCTION_35	IF_2	CALL_2
0x4003e31	        0x837de013	           cmp dword [rbp - 0x20], 0x13 	      2167	ftp.c	FUNCTION_35	IF_3
0x4003e35	            0x7511	                           jne 0x4003e48	      2167	ftp.c	FUNCTION_35	IF_3
0x4003e37	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2168	ftp.c	FUNCTION_35	CALL_3
0x4003e3b	          0x4889c7	                            mov rdi, rax	      2168	ftp.c	FUNCTION_35	CALL_3
0x4003e3e	      0xe810e6ffff	                 call sym.ftp_state_size	      2168	ftp.c	FUNCTION_35	CALL_3
0x4003e43	          0x8945f4	              mov dword [rbp - 0xc], eax	      2168	ftp.c	FUNCTION_35	CALL_3
0x4003e46	            0xeb43	                           jmp 0x4003e8b	      2168	ftp.c	FUNCTION_35	CALL_3
0x4003e48	        0x837de014	           cmp dword [rbp - 0x20], 0x14 	      2169	ftp.c	FUNCTION_35	ELSE_1	IF_4
0x4003e4c	            0x7511	                           jne 0x4003e5f	      2169	ftp.c	FUNCTION_35	ELSE_1	IF_4
0x4003e4e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2170	ftp.c	FUNCTION_35	ELSE_1	IF_4
0x4003e52	          0x4889c7	                            mov rdi, rax	      2170	ftp.c	FUNCTION_35	ELSE_1	IF_4
0x4003e55	      0xe8a0e6ffff	                 call sym.ftp_state_list	      2170	ftp.c	FUNCTION_35	ELSE_1	IF_4
0x4003e5a	          0x8945f4	              mov dword [rbp - 0xc], eax	      2170	ftp.c	FUNCTION_35	ELSE_1	IF_4
0x4003e5d	            0xeb2c	                           jmp 0x4003e8b	      2170	ftp.c	FUNCTION_35	ELSE_1	IF_4
0x4003e5f	        0x837de015	           cmp dword [rbp - 0x20], 0x15 	      2171	ftp.c	FUNCTION_35	ELSE_2	IF_5
0x4003e63	            0x7511	                           jne 0x4003e76	      2171	ftp.c	FUNCTION_35	ELSE_2	IF_5
0x4003e65	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2172	ftp.c	FUNCTION_35	ELSE_2	IF_5
0x4003e69	          0x4889c7	                            mov rdi, rax	      2172	ftp.c	FUNCTION_35	ELSE_2	IF_5
0x4003e6c	      0xe8bee8ffff	        call sym.ftp_state_retr_prequote	      2172	ftp.c	FUNCTION_35	ELSE_2	IF_5
0x4003e71	          0x8945f4	              mov dword [rbp - 0xc], eax	      2172	ftp.c	FUNCTION_35	ELSE_2	IF_5
0x4003e74	            0xeb15	                           jmp 0x4003e8b	      2172	ftp.c	FUNCTION_35	ELSE_2	IF_5
0x4003e76	        0x837de016	           cmp dword [rbp - 0x20], 0x16 	      2173	ftp.c	FUNCTION_35	ELSE_3	IF_6
0x4003e7a	            0x750f	                           jne 0x4003e8b	      2173	ftp.c	FUNCTION_35	ELSE_3	IF_6
0x4003e7c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2174	ftp.c	FUNCTION_35	ELSE_3	IF_6
0x4003e80	          0x4889c7	                            mov rdi, rax	      2174	ftp.c	FUNCTION_35	ELSE_3	IF_6
0x4003e83	      0xe8d8e8ffff	        call sym.ftp_state_stor_prequote	      2174	ftp.c	FUNCTION_35	ELSE_3	IF_6
0x4003e88	          0x8945f4	              mov dword [rbp - 0xc], eax	      2174	ftp.c	FUNCTION_35	ELSE_3	IF_6
0x4003e8b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2176	ftp.c	FUNCTION_35
0x4003e8e	              0xc9	                                   leave	      2177	ftp.c	FUNCTION_35
0x4003e8f	              0xc3	                                     ret	      2177	ftp.c	FUNCTION_35
ftp_state_loggedin	FOR,0:functions,0:SWITCH,0:ELSE,1:IF,1:DO,0:WHILE,0:CALL,1	33
0x40048de	              0x55	                                push rbp	      2503	ftp.c	FUNCTION_41
0x40048df	          0x4889e5	                            mov rbp, rsp	      2503	ftp.c	FUNCTION_41
0x40048e2	        0x4883ec20	                           sub rsp, 0x20	      2503	ftp.c	FUNCTION_41
0x40048e6	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2503	ftp.c	FUNCTION_41
0x40048ea	    0xc745fc000000	                  mov dword [rbp - 4], 0	      2504	ftp.c	FUNCTION_41
0x40048f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2506	ftp.c	FUNCTION_41	IF_1
0x40048f5	     0xfb680900200	          movzx eax, byte [rax + 0x290] 	      2506	ftp.c	FUNCTION_41	IF_1
0x40048fc	            0x84c0	                             test al, al	      2506	ftp.c	FUNCTION_41	IF_1
0x40048fe	            0x7444	                            je 0x4004944	      2506	ftp.c	FUNCTION_41	IF_1
0x4004900	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2521	ftp.c	FUNCTION_41	IF_1
0x4004904	    0x480550060000	                          add rax, 0x650	      2521	ftp.c	FUNCTION_41	IF_1
0x400490a	      0xba00000000	                              mov edx, 0	      2521	ftp.c	FUNCTION_41	IF_1
0x400490f	    0x488d35000000	                   lea rsi, [0x04004916]	      2521	ftp.c	FUNCTION_41	IF_1
0x4004916	          0x4889c7	                            mov rdi, rax	      2521	ftp.c	FUNCTION_41	IF_1
0x4004919	      0xb800000000	                              mov eax, 0	      2521	ftp.c	FUNCTION_41	IF_1
0x400491e	      0xe800000000	                          call 0x4004923	      2521	ftp.c	FUNCTION_41	IF_1
0x4004923	          0x8945fc	                mov dword [rbp - 4], eax	      2521	ftp.c	FUNCTION_41	IF_1
0x4004926	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2521	ftp.c	FUNCTION_41	IF_1
0x400492a	            0x7405	                            je 0x4004931	      2521	ftp.c	FUNCTION_41	IF_1
0x400492c	          0x8b45fc	                mov eax, dword [rbp - 4]	      2521	ftp.c	FUNCTION_41	IF_1
0x400492f	            0xeb25	                           jmp 0x4004956	      2521	ftp.c	FUNCTION_41	IF_1
0x4004931	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2522	ftp.c	FUNCTION_41	IF_1
0x4004935	      0xbe06000000	                              mov esi, 6	      2522	ftp.c	FUNCTION_41	IF_1
0x400493a	          0x4889c7	                            mov rdi, rax	      2522	ftp.c	FUNCTION_41	IF_1
0x400493d	      0xe842c4ffff	                         call sym._state	      2522	ftp.c	FUNCTION_41	IF_1
0x4004942	            0xeb0f	                           jmp 0x4004953	      2522	ftp.c	FUNCTION_41	IF_1
0x4004944	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2525	ftp.c	FUNCTION_41	ELSE_1	CALL_1
0x4004948	          0x4889c7	                            mov rdi, rax	      2525	ftp.c	FUNCTION_41	ELSE_1	CALL_1
0x400494b	      0xe8efc4ffff	                  call sym.ftp_state_pwd	      2525	ftp.c	FUNCTION_41	ELSE_1	CALL_1
0x4004950	          0x8945fc	                mov dword [rbp - 4], eax	      2525	ftp.c	FUNCTION_41	ELSE_1	CALL_1
0x4004953	          0x8b45fc	                mov eax, dword [rbp - 4]	      2527	ftp.c	FUNCTION_41
0x4004956	              0xc9	                                   leave	      2528	ftp.c	FUNCTION_41
0x4004957	              0xc3	                                     ret	      2528	ftp.c	FUNCTION_41
