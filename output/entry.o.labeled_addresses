check_path	WHILE,1:functions,0:SWITCH,0:IF,1:ELSE,0:DO,0:FOR,0:CALL,2	44
0x135f	              0x55	                                push rbp	       389	entry.c	FUNCTION_12
0x1360	          0x4889e5	                            mov rbp, rsp	       389	entry.c	FUNCTION_12
0x1363	        0x4883ec30	                           sub rsp, 0x30	       389	entry.c	FUNCTION_12
0x1367	        0x48897de8	             mov qword [rbp - 0x18], rdi	       389	entry.c	FUNCTION_12
0x136b	          0x8975e4	             mov dword [rbp - 0x1c], esi	       389	entry.c	FUNCTION_12
0x136e	        0x488955d8	             mov qword [rbp - 0x28], rdx	       389	entry.c	FUNCTION_12
0x1372	          0x894de0	             mov dword [rbp - 0x20], ecx	       389	entry.c	FUNCTION_12
0x1375	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       390	entry.c	FUNCTION_12
0x1378	          0x4863d0	                         movsxd rdx, eax	       390	entry.c	FUNCTION_12
0x137b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	entry.c	FUNCTION_12
0x137f	          0x4801d0	                            add rax, rdx	       390	entry.c	FUNCTION_12
0x1382	        0x488945f8	                mov qword [rbp - 8], rax	       390	entry.c	FUNCTION_12
0x1386	            0xeb05	                           jmp 0x40013cd	       392	entry.c	FUNCTION_12	WHILE_1
0x1388	      0x48836df801	                  sub qword [rbp - 8], 1	       393	entry.c	FUNCTION_12	WHILE_1
0x138d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       392	entry.c	FUNCTION_12	WHILE_1
0x1391	        0x483b45f8	                cmp rax, qword [rbp - 8]	       392	entry.c	FUNCTION_12	WHILE_1
0x1395	            0x730b	                           jae 0x40013e2	       392	entry.c	FUNCTION_12	WHILE_1
0x1397	        0x488b45f8	                mov rax, qword [rbp - 8]	       392	entry.c	FUNCTION_12	WHILE_1
0x139b	           0xfb600	                   movzx eax, byte [rax]	       392	entry.c	FUNCTION_12	WHILE_1
0x139e	            0x3c2f	                            cmp al, 0x2f	       392	entry.c	FUNCTION_12	WHILE_1
0x13a0	            0x75e6	                           jne 0x40013c8	       392	entry.c	FUNCTION_12	WHILE_1
0x13a2	        0x488b55f8	                mov rdx, qword [rbp - 8]	       394	entry.c	FUNCTION_12	IF_1	CALL_1
0x13a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       394	entry.c	FUNCTION_12	IF_1	CALL_1
0x13aa	          0x4829c2	                            sub rdx, rax	       394	entry.c	FUNCTION_12	IF_1	CALL_1
0x13ad	          0x4889d0	                            mov rax, rdx	       394	entry.c	FUNCTION_12	IF_1	CALL_1
0x13b0	            0x89c1	                            mov ecx, eax	       394	entry.c	FUNCTION_12	IF_1	CALL_1
0x13b2	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       394	entry.c	FUNCTION_12	IF_1	CALL_1
0x13b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       394	entry.c	FUNCTION_12	IF_1	CALL_1
0x13b9	            0x89ce	                            mov esi, ecx	       394	entry.c	FUNCTION_12	IF_1	CALL_1
0x13bb	          0x4889c7	                            mov rdi, rax	       394	entry.c	FUNCTION_12	IF_1	CALL_1
0x13be	      0xe800000000	                          call 0x4001403	       394	entry.c	FUNCTION_12	IF_1	CALL_1
0x13c3	            0x85c0	                           test eax, eax	       394	entry.c	FUNCTION_12	IF_1	CALL_1
0x13c5	            0x7512	                           jne 0x4001419	       394	entry.c	FUNCTION_12	IF_1	CALL_1
0x13c7	      0xe800000000	                          call 0x400140c	       395	entry.c	FUNCTION_12	IF_1
0x13cc	    0xc70002000000	                      mov dword [rax], 2	       395	entry.c	FUNCTION_12	IF_1
0x13d2	      0xb8ffffffff	                     mov eax, 0xffffffff	       396	entry.c	FUNCTION_12	IF_1
0x13d7	            0xeb13	                           jmp 0x400142c	       396	entry.c	FUNCTION_12	IF_1
0x13d9	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       398	entry.c	FUNCTION_12	CALL_2
0x13dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       398	entry.c	FUNCTION_12	CALL_2
0x13e1	          0x4889d6	                            mov rsi, rdx	       398	entry.c	FUNCTION_12	CALL_2
0x13e4	          0x4889c7	                            mov rdi, rax	       398	entry.c	FUNCTION_12	CALL_2
0x13e7	      0xe800000000	                          call 0x400142c	       398	entry.c	FUNCTION_12	CALL_2
0x13ec	              0xc9	                                   leave	       399	entry.c	FUNCTION_12
0x13ed	              0xc3	                                     ret	       399	entry.c	FUNCTION_12
enable_delayed_checkout	WHILE,0:functions,0:SWITCH,0:IF,1:ELSE,0:DO,0:FOR,0:CALL,3	31
0x84e	              0x55	                                push rbp	       143	entry.c	FUNCTION_8
0x84f	          0x4889e5	                            mov rbp, rsp	       143	entry.c	FUNCTION_8
0x852	        0x4883ec10	                           sub rsp, 0x10	       143	entry.c	FUNCTION_8
0x856	        0x48897df8	                mov qword [rbp - 8], rdi	       143	entry.c	FUNCTION_8
0x85a	        0x488b45f8	                mov rax, qword [rbp - 8]	       144	entry.c	FUNCTION_8	IF_1
0x85e	        0x488b4018	            mov rax, qword [rax + 0x18] 	       144	entry.c	FUNCTION_8	IF_1
0x862	          0x4885c0	                           test rax, rax	       144	entry.c	FUNCTION_8	IF_1
0x865	            0x7555	                           jne 0x40008fc	       144	entry.c	FUNCTION_8	IF_1
0x867	      0xbf48000000	                           mov edi, 0x48	       145	entry.c	FUNCTION_8	IF_1	CALL_1
0x86c	      0xe800000000	                          call 0x40008b1	       145	entry.c	FUNCTION_8	IF_1	CALL_1
0x871	          0x4889c2	                            mov rdx, rax	       145	entry.c	FUNCTION_8	IF_1	CALL_1
0x874	        0x488b45f8	                mov rax, qword [rbp - 8]	       145	entry.c	FUNCTION_8	IF_1	CALL_1
0x878	        0x48895018	             mov qword [rax + 0x18], rdx	       145	entry.c	FUNCTION_8	IF_1	CALL_1
0x87c	        0x488b45f8	                mov rax, qword [rbp - 8]	       146	entry.c	FUNCTION_8	IF_1
0x880	        0x488b4018	            mov rax, qword [rax + 0x18] 	       146	entry.c	FUNCTION_8	IF_1
0x884	    0xc70001000000	                      mov dword [rax], 1	       146	entry.c	FUNCTION_8	IF_1
0x88a	        0x488b45f8	                mov rax, qword [rbp - 8]	       147	entry.c	FUNCTION_8	IF_1	CALL_2
0x88e	        0x488b4018	            mov rax, qword [rax + 0x18] 	       147	entry.c	FUNCTION_8	IF_1	CALL_2
0x892	        0x4883c008	                              add rax, 8	       147	entry.c	FUNCTION_8	IF_1	CALL_2
0x896	      0xbe00000000	                              mov esi, 0	       147	entry.c	FUNCTION_8	IF_1	CALL_2
0x89b	          0x4889c7	                            mov rdi, rax	       147	entry.c	FUNCTION_8	IF_1	CALL_2
0x89e	      0xe800000000	                          call 0x40008e3	       147	entry.c	FUNCTION_8	IF_1	CALL_2
0x8a3	        0x488b45f8	                mov rax, qword [rbp - 8]	       148	entry.c	FUNCTION_8	IF_1	CALL_3
0x8a7	        0x488b4018	            mov rax, qword [rax + 0x18] 	       148	entry.c	FUNCTION_8	IF_1	CALL_3
0x8ab	        0x4883c028	                           add rax, 0x28	       148	entry.c	FUNCTION_8	IF_1	CALL_3
0x8af	      0xbe00000000	                              mov esi, 0	       148	entry.c	FUNCTION_8	IF_1	CALL_3
0x8b4	          0x4889c7	                            mov rdi, rax	       148	entry.c	FUNCTION_8	IF_1	CALL_3
0x8b7	      0xe800000000	                          call 0x40008fc	       148	entry.c	FUNCTION_8	IF_1	CALL_3
0x8bc	              0x90	                                     nop	       150	entry.c	FUNCTION_8
0x8bd	              0xc9	                                   leave	       150	entry.c	FUNCTION_8
0x8be	              0xc3	                                     ret	       150	entry.c	FUNCTION_8
remove_available_paths	WHILE,0:functions,0:SWITCH,0:IF,1:ELSE,0:DO,0:FOR,0:CALL,1	25
0x8bf	              0x55	                                push rbp	       153	entry.c	FUNCTION_9
0x8c0	          0x4889e5	                            mov rbp, rsp	       153	entry.c	FUNCTION_9
0x8c3	        0x4883ec20	                           sub rsp, 0x20	       153	entry.c	FUNCTION_9
0x8c7	        0x48897de8	             mov qword [rbp - 0x18], rdi	       153	entry.c	FUNCTION_9
0x8cb	        0x488975e0	             mov qword [rbp - 0x20], rsi	       153	entry.c	FUNCTION_9
0x8cf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       154	entry.c	FUNCTION_9
0x8d3	        0x488945f0	             mov qword [rbp - 0x10], rax	       154	entry.c	FUNCTION_9
0x8d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       157	entry.c	FUNCTION_9	CALL_1
0x8db	          0x488b10	                    mov rdx, qword [rax]	       157	entry.c	FUNCTION_9	CALL_1
0x8de	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       157	entry.c	FUNCTION_9	CALL_1
0x8e2	          0x4889d6	                            mov rsi, rdx	       157	entry.c	FUNCTION_9	CALL_1
0x8e5	          0x4889c7	                            mov rdi, rax	       157	entry.c	FUNCTION_9	CALL_1
0x8e8	      0xe800000000	                          call 0x400092d	       157	entry.c	FUNCTION_9	CALL_1
0x8ed	        0x488945f8	                mov qword [rbp - 8], rax	       157	entry.c	FUNCTION_9	CALL_1
0x8f1	      0x48837df800	                  cmp qword [rbp - 8], 0	       158	entry.c	FUNCTION_9	IF_1
0x8f6	            0x740f	                            je 0x4000947	       158	entry.c	FUNCTION_9	IF_1
0x8f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       159	entry.c	FUNCTION_9	IF_1
0x8fc	          0x488b10	                    mov rdx, qword [rax]	       159	entry.c	FUNCTION_9	IF_1
0x8ff	        0x488b45f8	                mov rax, qword [rbp - 8]	       159	entry.c	FUNCTION_9	IF_1
0x903	        0x48895008	                mov qword [rax + 8], rdx	       159	entry.c	FUNCTION_9	IF_1
0x907	      0x48837df800	                  cmp qword [rbp - 8], 0	       160	entry.c	FUNCTION_9
0x90c	           0xf94c0	                                 sete al	       160	entry.c	FUNCTION_9
0x90f	           0xfb6c0	                           movzx eax, al	       160	entry.c	FUNCTION_9
0x912	              0xc9	                                   leave	       161	entry.c	FUNCTION_9
0x913	              0xc3	                                     ret	       161	entry.c	FUNCTION_9
write_entry	WHILE,0:functions,0:SWITCH,1:IF,19:ELSE,2:DO,0:FOR,0:CALL,37	360
0xc82	              0x55	                                push rbp	       255	entry.c	FUNCTION_11
0xc83	          0x4889e5	                            mov rbp, rsp	       255	entry.c	FUNCTION_11
0xc86	              0x53	                                push rbx	       255	entry.c	FUNCTION_11
0xc87	    0x4881ec380100	                          sub rsp, 0x138	       255	entry.c	FUNCTION_11
0xc8e	    0x4889bdd8feff	            mov qword [rbp - 0x128], rdi	       255	entry.c	FUNCTION_11
0xc95	    0x4889b5d0feff	            mov qword [rbp - 0x130], rsi	       255	entry.c	FUNCTION_11
0xc9c	    0x488995c8feff	            mov qword [rbp - 0x138], rdx	       255	entry.c	FUNCTION_11
0xca3	    0x898dc4feffff	            mov dword [rbp - 0x13c], ecx	       255	entry.c	FUNCTION_11
0xca9	    0x64488b042528	                mov rax, qword fs:[0x28]	       255	entry.c	FUNCTION_11
0xcb2	        0x488945e8	             mov qword [rbp - 0x18], rax	       255	entry.c	FUNCTION_11
0xcb6	            0x31c0	                            xor eax, eax	       255	entry.c	FUNCTION_11
0xcb8	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       256	entry.c	FUNCTION_11
0xcbf	          0x8b4034	            mov eax, dword [rax + 0x34] 	       256	entry.c	FUNCTION_11
0xcc2	      0x2500f00000	                         and eax, 0xf000	       256	entry.c	FUNCTION_11
0xcc7	    0x8985f0feffff	            mov dword [rbp - 0x110], eax	       256	entry.c	FUNCTION_11
0xccd	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       257	entry.c	FUNCTION_11
0xcd4	        0x488b4018	            mov rax, qword [rax + 0x18] 	       257	entry.c	FUNCTION_11
0xcd8	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	       257	entry.c	FUNCTION_11
0xcdf	    0xc785e8feffff	              mov dword [rbp - 0x118], 0	       258	entry.c	FUNCTION_11
0xce9	    0x48c78530ffff	               mov qword [rbp - 0xd0], 0	       260	entry.c	FUNCTION_11
0xcf4	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	       260	entry.c	FUNCTION_11
0xcff	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       260	entry.c	FUNCTION_11
0xd0a	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	       263	entry.c	FUNCTION_11
0xd15	    0x81bdf0feffff	        cmp dword [rbp - 0x110], 0x8000 	       267	entry.c	FUNCTION_11	IF_1
0xd1f	            0x757c	                           jne 0x4000ddd	       267	entry.c	FUNCTION_11	IF_1
0xd21	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       269	entry.c	FUNCTION_11	IF_1
0xd28	        0x488d5044	                   lea rdx, [rax + 0x44]	       269	entry.c	FUNCTION_11	IF_1
0xd2c	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       268	entry.c	FUNCTION_11	IF_1	CALL_1
0xd33	        0x4883c058	                           add rax, 0x58	       268	entry.c	FUNCTION_11	IF_1	CALL_1
0xd37	          0x4889d6	                            mov rsi, rdx	       268	entry.c	FUNCTION_11	IF_1	CALL_1
0xd3a	          0x4889c7	                            mov rdi, rax	       268	entry.c	FUNCTION_11	IF_1	CALL_1
0xd3d	      0xe800000000	                          call 0x4000d82	       268	entry.c	FUNCTION_11	IF_1	CALL_1
0xd42	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	       268	entry.c	FUNCTION_11	IF_1	CALL_1
0xd49	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	       270	entry.c	FUNCTION_11	IF_1	IF_2
0xd51	            0x744a	                            je 0x4000ddd	       270	entry.c	FUNCTION_11	IF_1	IF_2
0xd53	    0x4c8d8de8feff	                   lea r9, [rbp - 0x118]	       271	entry.c	FUNCTION_11	IF_1	IF_2	CALL_2
0xd5a	    0x448b85c4feff	            mov r8d, dword [rbp - 0x13c]	       271	entry.c	FUNCTION_11	IF_1	IF_2	CALL_2
0xd61	    0x488b8dc8feff	            mov rcx, qword [rbp - 0x138]	       271	entry.c	FUNCTION_11	IF_1	IF_2	CALL_2
0xd68	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       271	entry.c	FUNCTION_11	IF_1	IF_2	CALL_2
0xd6f	    0x488bb5d0feff	            mov rsi, qword [rbp - 0x130]	       271	entry.c	FUNCTION_11	IF_1	IF_2	CALL_2
0xd76	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       271	entry.c	FUNCTION_11	IF_1	IF_2	CALL_2
0xd7d	        0x4883ec08	                              sub rsp, 8	       271	entry.c	FUNCTION_11	IF_1	IF_2	CALL_2
0xd81	    0x488dbd50ffff	                   lea rdi, [rbp - 0xb0]	       271	entry.c	FUNCTION_11	IF_1	IF_2	CALL_2
0xd88	              0x57	                                push rdi	       271	entry.c	FUNCTION_11	IF_1	IF_2	CALL_2
0xd89	          0x4889c7	                            mov rdi, rax	       271	entry.c	FUNCTION_11	IF_1	IF_2	CALL_2
0xd8c	      0xe811faffff	          call sym.streaming_write_entry	       271	entry.c	FUNCTION_11	IF_1	IF_2	CALL_2
0xd91	        0x4883c410	                           add rsp, 0x10	       271	entry.c	FUNCTION_11	IF_1	IF_2	CALL_2
0xd95	            0x85c0	                           test eax, eax	       270	entry.c	FUNCTION_11	IF_1	IF_2
0xd97	     0xf849f040000	                            je 0x400127c	       270	entry.c	FUNCTION_11	IF_1	IF_2
0xd9d	    0x8b85f0feffff	            mov eax, dword [rbp - 0x110]	       277	entry.c	FUNCTION_11	SWITCH_1
0xda3	      0x3d00a00000	                         cmp eax, 0xa000	       277	entry.c	FUNCTION_11	SWITCH_1
0xda8	            0x741b	                            je 0x4000e05	       277	entry.c	FUNCTION_11	SWITCH_1
0xdaa	      0x3d00e00000	                         cmp eax, 0xe000	       277	entry.c	FUNCTION_11	SWITCH_1
0xdaf	     0xf848a030000	                            je 0x400117f	       277	entry.c	FUNCTION_11	SWITCH_1
0xdb5	      0x3d00800000	                         cmp eax, 0x8000	       277	entry.c	FUNCTION_11	SWITCH_1
0xdba	     0xf84e1000000	                            je 0x4000ee1	       277	entry.c	FUNCTION_11	SWITCH_1
0xdc0	      0xe954040000	                           jmp 0x4001259	       277	entry.c	FUNCTION_11	SWITCH_1
0xdc5	    0x488d95f8feff	                  lea rdx, [rbp - 0x108]	       279	entry.c	FUNCTION_11	SWITCH_1	CALL_3
0xdcc	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       279	entry.c	FUNCTION_11	SWITCH_1	CALL_3
0xdd3	          0x4889d6	                            mov rsi, rdx	       279	entry.c	FUNCTION_11	SWITCH_1	CALL_3
0xdd6	          0x4889c7	                            mov rdi, rax	       279	entry.c	FUNCTION_11	SWITCH_1	CALL_3
0xdd9	      0xe869f8ffff	                call sym.read_blob_entry	       279	entry.c	FUNCTION_11	SWITCH_1	CALL_3
0xdde	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	       279	entry.c	FUNCTION_11	SWITCH_1	CALL_3
0xde5	    0x4883bd08ffff	               cmp qword [rbp - 0xf8], 0	       280	entry.c	FUNCTION_11	SWITCH_1	IF_3
0xded	            0x7539	                           jne 0x4000e68	       280	entry.c	FUNCTION_11	SWITCH_1	IF_3
0xdef	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       281	entry.c	FUNCTION_11	SWITCH_1	IF_3	CALL_4
0xdf6	        0x4883c044	                           add rax, 0x44	       281	entry.c	FUNCTION_11	SWITCH_1	IF_3	CALL_4
0xdfa	          0x4889c7	                            mov rdi, rax	       281	entry.c	FUNCTION_11	SWITCH_1	IF_3	CALL_4
0xdfd	      0xe800000000	                          call 0x4000e42	       281	entry.c	FUNCTION_11	SWITCH_1	IF_3	CALL_4
0xe02	          0x4889c2	                            mov rdx, rax	       281	entry.c	FUNCTION_11	SWITCH_1	IF_3	CALL_4
0xe05	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       281	entry.c	FUNCTION_11	SWITCH_1	IF_3	CALL_4
0xe0c	          0x4889c6	                            mov rsi, rax	       281	entry.c	FUNCTION_11	SWITCH_1	IF_3	CALL_4
0xe0f	      0xbf00000000	                              mov edi, 0	       281	entry.c	FUNCTION_11	SWITCH_1	IF_3	CALL_4
0xe14	      0xb800000000	                              mov eax, 0	       281	entry.c	FUNCTION_11	SWITCH_1	IF_3	CALL_4
0xe19	      0xe800000000	                          call 0x4000e5e	       281	entry.c	FUNCTION_11	SWITCH_1	IF_3	CALL_4
0xe1e	      0xe8ddf1ffff	                    call sym.const_error	       281	entry.c	FUNCTION_11	SWITCH_1	IF_3	CALL_4
0xe23	      0xe91d050000	                           jmp 0x4001385	       281	entry.c	FUNCTION_11	SWITCH_1	IF_3	CALL_4
0xe28	    0x8b0500000000	            mov eax, dword [0x04000e6e] 	       288	entry.c	FUNCTION_11	SWITCH_1	IF_4
0xe2e	            0x85c0	                           test eax, eax	       288	entry.c	FUNCTION_11	SWITCH_1	IF_4
0xe30	     0xf840a020000	                            je 0x4001080	       288	entry.c	FUNCTION_11	SWITCH_1	IF_4
0xe36	    0x83bdc4feffff	              cmp dword [rbp - 0x13c], 0	       288	entry.c	FUNCTION_11	SWITCH_1	IF_4
0xe3d	     0xf85fd010000	                           jne 0x4001080	       288	entry.c	FUNCTION_11	SWITCH_1	IF_4
0xe43	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	       291	entry.c	FUNCTION_11	SWITCH_1	CALL_6
0xe4a	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       291	entry.c	FUNCTION_11	SWITCH_1	CALL_6
0xe51	          0x4889d6	                            mov rsi, rdx	       291	entry.c	FUNCTION_11	SWITCH_1	CALL_6
0xe54	          0x4889c7	                            mov rdi, rax	       291	entry.c	FUNCTION_11	SWITCH_1	CALL_6
0xe57	      0xe800000000	                          call 0x4000e9c	       291	entry.c	FUNCTION_11	SWITCH_1	CALL_6
0xe5c	    0x8985ecfeffff	            mov dword [rbp - 0x114], eax	       291	entry.c	FUNCTION_11	SWITCH_1	CALL_6
0xe62	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       292	entry.c	FUNCTION_11	SWITCH_1	CALL_7
0xe69	          0x4889c7	                            mov rdi, rax	       292	entry.c	FUNCTION_11	SWITCH_1	CALL_7
0xe6c	      0xe800000000	                          call 0x4000eb1	       292	entry.c	FUNCTION_11	SWITCH_1	CALL_7
0xe71	    0x83bdecfeffff	              cmp dword [rbp - 0x114], 0	       293	entry.c	FUNCTION_11	SWITCH_1	IF_5
0xe78	     0xf84c1030000	                            je 0x400127f	       293	entry.c	FUNCTION_11	SWITCH_1	IF_5
0xe7e	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       294	entry.c	FUNCTION_11	SWITCH_1	CALL_8
0xe85	          0x4889c6	                            mov rsi, rax	       294	entry.c	FUNCTION_11	SWITCH_1	CALL_8
0xe88	      0xbf00000000	                              mov edi, 0	       294	entry.c	FUNCTION_11	SWITCH_1	CALL_8
0xe8d	      0xb800000000	                              mov eax, 0	       294	entry.c	FUNCTION_11	SWITCH_1	CALL_8
0xe92	      0xe800000000	                          call 0x4000ed7	       294	entry.c	FUNCTION_11	SWITCH_1	CALL_8
0xe97	      0xe864f1ffff	                    call sym.const_error	       294	entry.c	FUNCTION_11	SWITCH_1	CALL_8
0xe9c	      0xe9a4040000	                           jmp 0x4001385	       294	entry.c	FUNCTION_11	SWITCH_1	CALL_8
0xea1	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	       302	entry.c	FUNCTION_11	SWITCH_1	IF_6
0xea9	            0x7426	                            je 0x4000f11	       302	entry.c	FUNCTION_11	SWITCH_1	IF_6
0xeab	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       302	entry.c	FUNCTION_11	SWITCH_1	IF_6
0xeb2	            0x8b00	                    mov eax, dword [rax]	       302	entry.c	FUNCTION_11	SWITCH_1	IF_6
0xeb4	          0x83f802	                              cmp eax, 2	       302	entry.c	FUNCTION_11	SWITCH_1	IF_6
0xeb7	            0x7518	                           jne 0x4000f11	       302	entry.c	FUNCTION_11	SWITCH_1	IF_6
0xeb9	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	       303	entry.c	FUNCTION_11	SWITCH_1	IF_6
0xec4	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	       304	entry.c	FUNCTION_11	SWITCH_1	IF_6
0xecf	            0xeb63	                           jmp 0x4000f74	       304	entry.c	FUNCTION_11	SWITCH_1	IF_6
0xed1	    0x488d95f8feff	                  lea rdx, [rbp - 0x108]	       306	entry.c	FUNCTION_11	SWITCH_1	ELSE_1	CALL_9
0xed8	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       306	entry.c	FUNCTION_11	SWITCH_1	ELSE_1	CALL_9
0xedf	          0x4889d6	                            mov rsi, rdx	       306	entry.c	FUNCTION_11	SWITCH_1	ELSE_1	CALL_9
0xee2	          0x4889c7	                            mov rdi, rax	       306	entry.c	FUNCTION_11	SWITCH_1	ELSE_1	CALL_9
0xee5	      0xe85df7ffff	                call sym.read_blob_entry	       306	entry.c	FUNCTION_11	SWITCH_1	ELSE_1	CALL_9
0xeea	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	       306	entry.c	FUNCTION_11	SWITCH_1	ELSE_1	CALL_9
0xef1	    0x4883bd08ffff	               cmp qword [rbp - 0xf8], 0	       307	entry.c	FUNCTION_11	SWITCH_1	ELSE_1	IF_7
0xef9	            0x7539	                           jne 0x4000f74	       307	entry.c	FUNCTION_11	SWITCH_1	ELSE_1	IF_7
0xefb	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       308	entry.c	FUNCTION_11	SWITCH_1	ELSE_1	IF_7	CALL_10
0xf02	        0x4883c044	                           add rax, 0x44	       308	entry.c	FUNCTION_11	SWITCH_1	ELSE_1	IF_7	CALL_10
0xf06	          0x4889c7	                            mov rdi, rax	       308	entry.c	FUNCTION_11	SWITCH_1	ELSE_1	IF_7	CALL_10
0xf09	      0xe800000000	                          call 0x4000f4e	       308	entry.c	FUNCTION_11	SWITCH_1	ELSE_1	IF_7	CALL_10
0xf0e	          0x4889c2	                            mov rdx, rax	       308	entry.c	FUNCTION_11	SWITCH_1	ELSE_1	IF_7	CALL_10
0xf11	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       308	entry.c	FUNCTION_11	SWITCH_1	ELSE_1	IF_7	CALL_10
0xf18	          0x4889c6	                            mov rsi, rax	       308	entry.c	FUNCTION_11	SWITCH_1	ELSE_1	IF_7	CALL_10
0xf1b	      0xbf00000000	                              mov edi, 0	       308	entry.c	FUNCTION_11	SWITCH_1	ELSE_1	IF_7	CALL_10
0xf20	      0xb800000000	                              mov eax, 0	       308	entry.c	FUNCTION_11	SWITCH_1	ELSE_1	IF_7	CALL_10
0xf25	      0xe800000000	                          call 0x4000f6a	       308	entry.c	FUNCTION_11	SWITCH_1	ELSE_1	IF_7	CALL_10
0xf2a	      0xe8d1f0ffff	                    call sym.const_error	       308	entry.c	FUNCTION_11	SWITCH_1	ELSE_1	IF_7	CALL_10
0xf2f	      0xe911040000	                           jmp 0x4001385	       308	entry.c	FUNCTION_11	SWITCH_1	ELSE_1	IF_7	CALL_10
0xf34	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	       315	entry.c	FUNCTION_11	SWITCH_1	IF_8
0xf3c	     0xf8487000000	                            je 0x4001009	       315	entry.c	FUNCTION_11	SWITCH_1	IF_8
0xf42	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       315	entry.c	FUNCTION_11	SWITCH_1	IF_8
0xf49	            0x8b00	                    mov eax, dword [rax]	       315	entry.c	FUNCTION_11	SWITCH_1	IF_8
0xf4b	            0x85c0	                           test eax, eax	       315	entry.c	FUNCTION_11	SWITCH_1	IF_8
0xf4d	            0x747a	                            je 0x4001009	       315	entry.c	FUNCTION_11	SWITCH_1	IF_8
0xf4f	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	       316	entry.c	FUNCTION_11	SWITCH_1	IF_8	CALL_12
0xf56	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       316	entry.c	FUNCTION_11	SWITCH_1	IF_8	CALL_12
0xf5d	        0x488d7858	                   lea rdi, [rax + 0x58]	       316	entry.c	FUNCTION_11	SWITCH_1	IF_8	CALL_12
0xf61	    0x488bb510ffff	             mov rsi, qword [rbp - 0xf0]	       316	entry.c	FUNCTION_11	SWITCH_1	IF_8	CALL_12
0xf68	    0x488d8d30ffff	                   lea rcx, [rbp - 0xd0]	       316	entry.c	FUNCTION_11	SWITCH_1	IF_8	CALL_12
0xf6f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       316	entry.c	FUNCTION_11	SWITCH_1	IF_8	CALL_12
0xf76	          0x4989f0	                             mov r8, rsi	       316	entry.c	FUNCTION_11	SWITCH_1	IF_8	CALL_12
0xf79	          0x4889c6	                            mov rsi, rax	       316	entry.c	FUNCTION_11	SWITCH_1	IF_8	CALL_12
0xf7c	      0xe800000000	                          call 0x4000fc1	       316	entry.c	FUNCTION_11	SWITCH_1	IF_8	CALL_12
0xf81	    0x8985ecfeffff	            mov dword [rbp - 0x114], eax	       316	entry.c	FUNCTION_11	SWITCH_1	IF_8	CALL_12
0xf87	    0x83bdecfeffff	              cmp dword [rbp - 0x114], 0	       318	entry.c	FUNCTION_11	SWITCH_1	IF_8	IF_9	CALL_13
0xf8e	            0x7469	                            je 0x4001039	       318	entry.c	FUNCTION_11	SWITCH_1	IF_8	IF_9	CALL_13
0xf90	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       318	entry.c	FUNCTION_11	SWITCH_1	IF_8	IF_9	CALL_13
0xf97	        0x488d5058	                   lea rdx, [rax + 0x58]	       318	entry.c	FUNCTION_11	SWITCH_1	IF_8	IF_9	CALL_13
0xf9b	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       318	entry.c	FUNCTION_11	SWITCH_1	IF_8	IF_9	CALL_13
0xfa2	        0x4883c028	                           add rax, 0x28	       318	entry.c	FUNCTION_11	SWITCH_1	IF_8	IF_9	CALL_13
0xfa6	          0x4889d6	                            mov rsi, rdx	       318	entry.c	FUNCTION_11	SWITCH_1	IF_8	IF_9	CALL_13
0xfa9	          0x4889c7	                            mov rdi, rax	       318	entry.c	FUNCTION_11	SWITCH_1	IF_8	IF_9	CALL_13
0xfac	      0xe800000000	                          call 0x4000ff1	       318	entry.c	FUNCTION_11	SWITCH_1	IF_8	IF_9	CALL_13
0xfb1	            0x85c0	                           test eax, eax	       318	entry.c	FUNCTION_11	SWITCH_1	IF_8	IF_9	CALL_13
0xfb3	            0x7444	                            je 0x4001039	       318	entry.c	FUNCTION_11	SWITCH_1	IF_8	IF_9	CALL_13
0xfb5	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       319	entry.c	FUNCTION_11	SWITCH_1	IF_8	IF_9	CALL_14
0xfbc	          0x4889c7	                            mov rdi, rax	       319	entry.c	FUNCTION_11	SWITCH_1	IF_8	IF_9	CALL_14
0xfbf	      0xe800000000	                          call 0x4001004	       319	entry.c	FUNCTION_11	SWITCH_1	IF_8	IF_9	CALL_14
0xfc4	      0xe977030000	                           jmp 0x4001380	       320	entry.c	FUNCTION_11	SWITCH_1	IF_8	IF_9
0xfc9	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	       323	entry.c	FUNCTION_11	SWITCH_1	CALL_15
0xfd0	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       323	entry.c	FUNCTION_11	SWITCH_1	CALL_15
0xfd7	        0x488d7858	                   lea rdi, [rax + 0x58]	       323	entry.c	FUNCTION_11	SWITCH_1	CALL_15
0xfdb	    0x488d8d30ffff	                   lea rcx, [rbp - 0xd0]	       323	entry.c	FUNCTION_11	SWITCH_1	CALL_15
0xfe2	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       323	entry.c	FUNCTION_11	SWITCH_1	CALL_15
0xfe9	          0x4889c6	                            mov rsi, rax	       323	entry.c	FUNCTION_11	SWITCH_1	CALL_15
0xfec	      0xe800000000	                          call 0x4001031	       323	entry.c	FUNCTION_11	SWITCH_1	CALL_15
0xff1	    0x8985ecfeffff	            mov dword [rbp - 0x114], eax	       323	entry.c	FUNCTION_11	SWITCH_1	CALL_15
0xff7	            0xeb01	                           jmp 0x400103a	       323	entry.c	FUNCTION_11	SWITCH_1	CALL_15
0xff9	              0x90	                                     nop	       318	entry.c	FUNCTION_11	SWITCH_1	IF_8	IF_9	CALL_13
0xffa	    0x83bdecfeffff	              cmp dword [rbp - 0x114], 0	       325	entry.c	FUNCTION_11	SWITCH_1	IF_10
0x1001	            0x743d	                            je 0x4001080	       325	entry.c	FUNCTION_11	SWITCH_1	IF_10
0x1003	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       326	entry.c	FUNCTION_11	SWITCH_1	IF_10	CALL_16
0x100a	          0x4889c7	                            mov rdi, rax	       326	entry.c	FUNCTION_11	SWITCH_1	IF_10	CALL_16
0x100d	      0xe800000000	                          call 0x4001052	       326	entry.c	FUNCTION_11	SWITCH_1	IF_10	CALL_16
0x1012	    0x488d9500ffff	                  lea rdx, [rbp - 0x100]	       327	entry.c	FUNCTION_11	SWITCH_1	IF_10	CALL_17
0x1019	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	       327	entry.c	FUNCTION_11	SWITCH_1	IF_10	CALL_17
0x1020	          0x4889d6	                            mov rsi, rdx	       327	entry.c	FUNCTION_11	SWITCH_1	IF_10	CALL_17
0x1023	          0x4889c7	                            mov rdi, rax	       327	entry.c	FUNCTION_11	SWITCH_1	IF_10	CALL_17
0x1026	      0xe800000000	                          call 0x400106b	       327	entry.c	FUNCTION_11	SWITCH_1	IF_10	CALL_17
0x102b	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	       327	entry.c	FUNCTION_11	SWITCH_1	IF_10	CALL_17
0x1032	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	       328	entry.c	FUNCTION_11	SWITCH_1	IF_10
0x1039	    0x488985f8feff	            mov qword [rbp - 0x108], rax	       328	entry.c	FUNCTION_11	SWITCH_1	IF_10
0x1040	    0x8b95c4feffff	            mov edx, dword [rbp - 0x13c]	       337	entry.c	FUNCTION_11	SWITCH_1	CALL_18
0x1046	    0x488b8dd8feff	            mov rcx, qword [rbp - 0x128]	       337	entry.c	FUNCTION_11	SWITCH_1	CALL_18
0x104d	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       337	entry.c	FUNCTION_11	SWITCH_1	CALL_18
0x1054	          0x4889ce	                            mov rsi, rcx	       337	entry.c	FUNCTION_11	SWITCH_1	CALL_18
0x1057	          0x4889c7	                            mov rdi, rax	       337	entry.c	FUNCTION_11	SWITCH_1	CALL_18
0x105a	      0xe862f6ffff	                 call sym.open_output_fd	       337	entry.c	FUNCTION_11	SWITCH_1	CALL_18
0x105f	    0x8985f4feffff	            mov dword [rbp - 0x10c], eax	       337	entry.c	FUNCTION_11	SWITCH_1	CALL_18
0x1065	    0x83bdf4feffff	              cmp dword [rbp - 0x10c], 0	       338	entry.c	FUNCTION_11	SWITCH_1	IF_11
0x106c	            0x7932	                           jns 0x40010e0	       338	entry.c	FUNCTION_11	SWITCH_1	IF_11
0x106e	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       339	entry.c	FUNCTION_11	SWITCH_1	IF_11	CALL_19
0x1075	          0x4889c7	                            mov rdi, rax	       339	entry.c	FUNCTION_11	SWITCH_1	IF_11	CALL_19
0x1078	      0xe800000000	                          call 0x40010bd	       339	entry.c	FUNCTION_11	SWITCH_1	IF_11	CALL_19
0x107d	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       340	entry.c	FUNCTION_11	SWITCH_1	IF_11	CALL_20
0x1084	          0x4889c6	                            mov rsi, rax	       340	entry.c	FUNCTION_11	SWITCH_1	IF_11	CALL_20
0x1087	      0xbf00000000	                              mov edi, 0	       340	entry.c	FUNCTION_11	SWITCH_1	IF_11	CALL_20
0x108c	      0xb800000000	                              mov eax, 0	       340	entry.c	FUNCTION_11	SWITCH_1	IF_11	CALL_20
0x1091	      0xe800000000	                          call 0x40010d6	       340	entry.c	FUNCTION_11	SWITCH_1	IF_11	CALL_20
0x1096	      0xe865efffff	                    call sym.const_error	       340	entry.c	FUNCTION_11	SWITCH_1	IF_11	CALL_20
0x109b	      0xe9a5020000	                           jmp 0x4001385	       340	entry.c	FUNCTION_11	SWITCH_1	IF_11	CALL_20
0x10a0	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	       343	entry.c	FUNCTION_11	SWITCH_1	CALL_21
0x10a7	    0x488b8d08ffff	             mov rcx, qword [rbp - 0xf8]	       343	entry.c	FUNCTION_11	SWITCH_1	CALL_21
0x10ae	    0x8b85f4feffff	            mov eax, dword [rbp - 0x10c]	       343	entry.c	FUNCTION_11	SWITCH_1	CALL_21
0x10b4	          0x4889ce	                            mov rsi, rcx	       343	entry.c	FUNCTION_11	SWITCH_1	CALL_21
0x10b7	            0x89c7	                            mov edi, eax	       343	entry.c	FUNCTION_11	SWITCH_1	CALL_21
0x10b9	      0xe800000000	                          call 0x40010fe	       343	entry.c	FUNCTION_11	SWITCH_1	CALL_21
0x10be	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	       343	entry.c	FUNCTION_11	SWITCH_1	CALL_21
0x10c5	    0x83bdc4feffff	              cmp dword [rbp - 0x13c], 0	       344	entry.c	FUNCTION_11	SWITCH_1	IF_12
0x10cc	            0x7524	                           jne 0x4001132	       344	entry.c	FUNCTION_11	SWITCH_1	IF_12
0x10ce	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       345	entry.c	FUNCTION_11	SWITCH_1	CALL_22
0x10d5	    0x488b8dc8feff	            mov rcx, qword [rbp - 0x138]	       345	entry.c	FUNCTION_11	SWITCH_1	CALL_22
0x10dc	    0x8b85f4feffff	            mov eax, dword [rbp - 0x10c]	       345	entry.c	FUNCTION_11	SWITCH_1	CALL_22
0x10e2	          0x4889ce	                            mov rsi, rcx	       345	entry.c	FUNCTION_11	SWITCH_1	CALL_22
0x10e5	            0x89c7	                            mov edi, eax	       345	entry.c	FUNCTION_11	SWITCH_1	CALL_22
0x10e7	      0xe86af6ffff	                   call sym.fstat_output	       345	entry.c	FUNCTION_11	SWITCH_1	CALL_22
0x10ec	    0x8985e8feffff	            mov dword [rbp - 0x118], eax	       345	entry.c	FUNCTION_11	SWITCH_1	CALL_22
0x10f2	    0x8b85f4feffff	            mov eax, dword [rbp - 0x10c]	       346	entry.c	FUNCTION_11	SWITCH_1	CALL_23
0x10f8	            0x89c7	                            mov edi, eax	       346	entry.c	FUNCTION_11	SWITCH_1	CALL_23
0x10fa	      0xe800000000	                          call 0x400113f	       346	entry.c	FUNCTION_11	SWITCH_1	CALL_23
0x10ff	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       347	entry.c	FUNCTION_11	SWITCH_1	CALL_24
0x1106	          0x4889c7	                            mov rdi, rax	       347	entry.c	FUNCTION_11	SWITCH_1	CALL_24
0x1109	      0xe800000000	                          call 0x400114e	       347	entry.c	FUNCTION_11	SWITCH_1	CALL_24
0x110e	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	       348	entry.c	FUNCTION_11	SWITCH_1	IF_13
0x1116	     0xf8926010000	                           jns 0x4001282	       348	entry.c	FUNCTION_11	SWITCH_1	IF_13
0x111c	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       349	entry.c	FUNCTION_11	SWITCH_1	CALL_25
0x1123	          0x4889c6	                            mov rsi, rax	       349	entry.c	FUNCTION_11	SWITCH_1	CALL_25
0x1126	      0xbf00000000	                              mov edi, 0	       349	entry.c	FUNCTION_11	SWITCH_1	CALL_25
0x112b	      0xb800000000	                              mov eax, 0	       349	entry.c	FUNCTION_11	SWITCH_1	CALL_25
0x1130	      0xe800000000	                          call 0x4001175	       349	entry.c	FUNCTION_11	SWITCH_1	CALL_25
0x1135	      0xe8c6eeffff	                    call sym.const_error	       349	entry.c	FUNCTION_11	SWITCH_1	CALL_25
0x113a	      0xe906020000	                           jmp 0x4001385	       349	entry.c	FUNCTION_11	SWITCH_1	CALL_25
0x113f	    0x83bdc4feffff	              cmp dword [rbp - 0x13c], 0	       353	entry.c	FUNCTION_11	SWITCH_1	IF_14
0x1146	            0x7423	                            je 0x40011ab	       353	entry.c	FUNCTION_11	SWITCH_1	IF_14
0x1148	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       354	entry.c	FUNCTION_11	SWITCH_1	CALL_26
0x114f	          0x4889c6	                            mov rsi, rax	       354	entry.c	FUNCTION_11	SWITCH_1	CALL_26
0x1152	      0xbf00000000	                              mov edi, 0	       354	entry.c	FUNCTION_11	SWITCH_1	CALL_26
0x1157	      0xb800000000	                              mov eax, 0	       354	entry.c	FUNCTION_11	SWITCH_1	CALL_26
0x115c	      0xe800000000	                          call 0x40011a1	       354	entry.c	FUNCTION_11	SWITCH_1	CALL_26
0x1161	      0xe89aeeffff	                    call sym.const_error	       354	entry.c	FUNCTION_11	SWITCH_1	CALL_26
0x1166	      0xe9da010000	                           jmp 0x4001385	       354	entry.c	FUNCTION_11	SWITCH_1	CALL_26
0x116b	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       355	entry.c	FUNCTION_11	SWITCH_1	IF_15	CALL_27
0x1172	      0xbeff010000	                          mov esi, 0x1ff	       355	entry.c	FUNCTION_11	SWITCH_1	IF_15	CALL_27
0x1177	          0x4889c7	                            mov rdi, rax	       355	entry.c	FUNCTION_11	SWITCH_1	IF_15	CALL_27
0x117a	      0xe800000000	                          call 0x40011bf	       355	entry.c	FUNCTION_11	SWITCH_1	IF_15	CALL_27
0x117f	            0x85c0	                           test eax, eax	       355	entry.c	FUNCTION_11	SWITCH_1	IF_15	CALL_27
0x1181	            0x7923	                           jns 0x40011e6	       355	entry.c	FUNCTION_11	SWITCH_1	IF_15	CALL_27
0x1183	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       356	entry.c	FUNCTION_11	SWITCH_1	CALL_28
0x118a	          0x4889c6	                            mov rsi, rax	       356	entry.c	FUNCTION_11	SWITCH_1	CALL_28
0x118d	      0xbf00000000	                              mov edi, 0	       356	entry.c	FUNCTION_11	SWITCH_1	CALL_28
0x1192	      0xb800000000	                              mov eax, 0	       356	entry.c	FUNCTION_11	SWITCH_1	CALL_28
0x1197	      0xe800000000	                          call 0x40011dc	       356	entry.c	FUNCTION_11	SWITCH_1	CALL_28
0x119c	      0xe85feeffff	                    call sym.const_error	       356	entry.c	FUNCTION_11	SWITCH_1	CALL_28
0x11a1	      0xe99f010000	                           jmp 0x4001385	       356	entry.c	FUNCTION_11	SWITCH_1	CALL_28
0x11a6	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       357	entry.c	FUNCTION_11	SWITCH_1	CALL_29
0x11ad	          0x4889c7	                            mov rdi, rax	       357	entry.c	FUNCTION_11	SWITCH_1	CALL_29
0x11b0	      0xe800000000	                          call 0x40011f5	       357	entry.c	FUNCTION_11	SWITCH_1	CALL_29
0x11b5	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	       357	entry.c	FUNCTION_11	SWITCH_1	CALL_29
0x11bc	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	       358	entry.c	FUNCTION_11	SWITCH_1	IF_16
0x11c4	            0x747f	                            je 0x4001285	       358	entry.c	FUNCTION_11	SWITCH_1	IF_16
0x11c6	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       361	entry.c	FUNCTION_11	SWITCH_1	IF_16
0x11cd	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       361	entry.c	FUNCTION_11	SWITCH_1	IF_16
0x11d1	          0x83e001	                              and eax, 1	       361	entry.c	FUNCTION_11	SWITCH_1	IF_16
0x11d4	            0x84c0	                             test al, al	       359	entry.c	FUNCTION_11	SWITCH_1	IF_16	CALL_30
0x11d6	            0x7407	                            je 0x400121f	       359	entry.c	FUNCTION_11	SWITCH_1	IF_16	CALL_30
0x11d8	      0xbb02000000	                              mov ebx, 2	       359	entry.c	FUNCTION_11	SWITCH_1	IF_16	CALL_30
0x11dd	            0xeb05	                           jmp 0x4001224	       359	entry.c	FUNCTION_11	SWITCH_1	IF_16	CALL_30
0x11df	      0xbb00000000	                              mov ebx, 0	       359	entry.c	FUNCTION_11	SWITCH_1	IF_16	CALL_30
0x11e4	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       360	entry.c	FUNCTION_11	SWITCH_1	IF_16	CALL_31
0x11eb	        0x4883c044	                           add rax, 0x44	       360	entry.c	FUNCTION_11	SWITCH_1	IF_16	CALL_31
0x11ef	          0x4889c7	                            mov rdi, rax	       360	entry.c	FUNCTION_11	SWITCH_1	IF_16	CALL_31
0x11f2	      0xe800000000	                          call 0x4001237	       360	entry.c	FUNCTION_11	SWITCH_1	IF_16	CALL_31
0x11f7	          0x4889c2	                            mov rdx, rax	       360	entry.c	FUNCTION_11	SWITCH_1	IF_16	CALL_31
0x11fa	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       359	entry.c	FUNCTION_11	SWITCH_1	IF_16	CALL_30
0x1201	        0x4883c058	                           add rax, 0x58	       359	entry.c	FUNCTION_11	SWITCH_1	IF_16	CALL_30
0x1205	            0x89d9	                            mov ecx, ebx	       359	entry.c	FUNCTION_11	SWITCH_1	IF_16	CALL_30
0x1207	      0xbe00000000	                              mov esi, 0	       359	entry.c	FUNCTION_11	SWITCH_1	IF_16	CALL_30
0x120c	          0x4889c7	                            mov rdi, rax	       359	entry.c	FUNCTION_11	SWITCH_1	IF_16	CALL_30
0x120f	      0xe800000000	                          call 0x4001254	       359	entry.c	FUNCTION_11	SWITCH_1	IF_16	CALL_30
0x1214	      0xe92c010000	                           jmp 0x4001385	       359	entry.c	FUNCTION_11	SWITCH_1	IF_16	CALL_30
0x1219	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       365	entry.c	FUNCTION_11	SWITCH_1	CALL_32
0x1220	          0x4889c6	                            mov rsi, rax	       365	entry.c	FUNCTION_11	SWITCH_1	CALL_32
0x1223	      0xbf00000000	                              mov edi, 0	       365	entry.c	FUNCTION_11	SWITCH_1	CALL_32
0x1228	      0xb800000000	                              mov eax, 0	       365	entry.c	FUNCTION_11	SWITCH_1	CALL_32
0x122d	      0xe800000000	                          call 0x4001272	       365	entry.c	FUNCTION_11	SWITCH_1	CALL_32
0x1232	      0xe8c9edffff	                    call sym.const_error	       365	entry.c	FUNCTION_11	SWITCH_1	CALL_32
0x1237	      0xe909010000	                           jmp 0x4001385	       365	entry.c	FUNCTION_11	SWITCH_1	CALL_32
0x123c	              0x90	                                     nop	       274	entry.c	FUNCTION_11	IF_1	IF_2
0x123d	            0xeb07	                           jmp 0x4001286	       274	entry.c	FUNCTION_11	IF_1	IF_2
0x123f	              0x90	                                     nop	       295	entry.c	FUNCTION_11	SWITCH_1
0x1240	            0xeb04	                           jmp 0x4001286	       295	entry.c	FUNCTION_11	SWITCH_1
0x1242	              0x90	                                     nop	       350	entry.c	FUNCTION_11	SWITCH_1
0x1243	            0xeb01	                           jmp 0x4001286	       350	entry.c	FUNCTION_11	SWITCH_1
0x1245	              0x90	                                     nop	       362	entry.c	FUNCTION_11	SWITCH_1
0x1246	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       369	entry.c	FUNCTION_11	IF_17
0x124d	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       369	entry.c	FUNCTION_11	IF_17
0x1251	          0x83e008	                              and eax, 8	       369	entry.c	FUNCTION_11	IF_17
0x1254	            0x84c0	                             test al, al	       369	entry.c	FUNCTION_11	IF_17
0x1256	     0xf84e4000000	                            je 0x4001380	       369	entry.c	FUNCTION_11	IF_17
0x125c	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       370	entry.c	FUNCTION_11	IF_17	CALL_33
0x1263	          0x488b00	                    mov rax, qword [rax]	       370	entry.c	FUNCTION_11	IF_17	CALL_33
0x1266	          0x4885c0	                           test rax, rax	       370	entry.c	FUNCTION_11	IF_17	CALL_33
0x1269	            0x7519	                           jne 0x40012c4	       370	entry.c	FUNCTION_11	IF_17	CALL_33
0x126b	      0xb900000000	                              mov ecx, 0	       370	entry.c	FUNCTION_11	IF_17	CALL_33
0x1270	      0xba72010000	                          mov edx, 0x172	       370	entry.c	FUNCTION_11	IF_17	CALL_33
0x1275	      0xbe00000000	                              mov esi, 0	       370	entry.c	FUNCTION_11	IF_17	CALL_33
0x127a	      0xbf00000000	                              mov edi, 0	       370	entry.c	FUNCTION_11	IF_17	CALL_33
0x127f	      0xe800000000	                          call 0x40012c4	       370	entry.c	FUNCTION_11	IF_17	CALL_33
0x1284	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	       371	entry.c	FUNCTION_11	IF_17	IF_18
0x128a	            0x85c0	                           test eax, eax	       371	entry.c	FUNCTION_11	IF_17	IF_18
0x128c	            0x7545	                           jne 0x4001313	       371	entry.c	FUNCTION_11	IF_17	IF_18
0x128e	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       372	entry.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_34
0x1295	        0x488d5058	                   lea rdx, [rax + 0x58]	       372	entry.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_34
0x1299	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       372	entry.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_34
0x12a0	          0x4889c6	                            mov rsi, rax	       372	entry.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_34
0x12a3	          0x4889d7	                            mov rdi, rdx	       372	entry.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_34
0x12a6	      0xe800000000	                          call 0x40012eb	       372	entry.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_34
0x12ab	            0x85c0	                           test eax, eax	       372	entry.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_34
0x12ad	            0x7924	                           jns 0x4001313	       372	entry.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_34
0x12af	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       373	entry.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_35
0x12b6	        0x4883c058	                           add rax, 0x58	       373	entry.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_35
0x12ba	          0x4889c6	                            mov rsi, rax	       373	entry.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_35
0x12bd	      0xbf00000000	                              mov edi, 0	       373	entry.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_35
0x12c2	      0xb800000000	                              mov eax, 0	       373	entry.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_35
0x12c7	      0xe800000000	                          call 0x400130c	       373	entry.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_35
0x12cc	      0xe82fedffff	                    call sym.const_error	       373	entry.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_35
0x12d1	            0xeb72	                           jmp 0x4001385	       373	entry.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_35
0x12d3	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       375	entry.c	FUNCTION_11	IF_17	CALL_36
0x12da	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       375	entry.c	FUNCTION_11	IF_17	CALL_36
0x12e1	          0x4889d6	                            mov rsi, rdx	       375	entry.c	FUNCTION_11	IF_17	CALL_36
0x12e4	          0x4889c7	                            mov rdi, rax	       375	entry.c	FUNCTION_11	IF_17	CALL_36
0x12e7	      0xe800000000	                          call 0x400132c	       375	entry.c	FUNCTION_11	IF_17	CALL_36
0x12ec	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       376	entry.c	FUNCTION_11	IF_17
0x12f3	          0x8b4038	            mov eax, dword [rax + 0x38] 	       376	entry.c	FUNCTION_11	IF_17
0x12f6	       0xd00000008	                    or eax, section_end.	       376	entry.c	FUNCTION_11	IF_17
0x12fb	            0x89c2	                            mov edx, eax	       376	entry.c	FUNCTION_11	IF_17
0x12fd	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       376	entry.c	FUNCTION_11	IF_17
0x1304	          0x895038	             mov dword [rax + 0x38], edx	       376	entry.c	FUNCTION_11	IF_17
0x1307	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       377	entry.c	FUNCTION_11	IF_17	CALL_37
0x130e	          0x488b00	                    mov rax, qword [rax]	       377	entry.c	FUNCTION_11	IF_17	CALL_37
0x1311	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	       377	entry.c	FUNCTION_11	IF_17	CALL_37
0x1318	          0x4889d6	                            mov rsi, rdx	       377	entry.c	FUNCTION_11	IF_17	CALL_37
0x131b	          0x4889c7	                            mov rdi, rax	       377	entry.c	FUNCTION_11	IF_17	CALL_37
0x131e	      0xe834efffff	         call sym.mark_fsmonitor_invalid	       377	entry.c	FUNCTION_11	IF_17	CALL_37
0x1323	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       378	entry.c	FUNCTION_11	IF_17
0x132a	          0x488b00	                    mov rax, qword [rax]	       378	entry.c	FUNCTION_11	IF_17
0x132d	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	       378	entry.c	FUNCTION_11	IF_17
0x1334	          0x488b12	                    mov rdx, qword [rdx]	       378	entry.c	FUNCTION_11	IF_17
0x1337	          0x8b5214	            mov edx, dword [rdx + 0x14] 	       378	entry.c	FUNCTION_11	IF_17
0x133a	          0x83ca02	                               or edx, 2	       378	entry.c	FUNCTION_11	IF_17
0x133d	          0x895014	             mov dword [rax + 0x14], edx	       378	entry.c	FUNCTION_11	IF_17
0x1340	      0xb800000000	                              mov eax, 0	       381	entry.c	FUNCTION_11
0x1345	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       382	entry.c	FUNCTION_11
0x1349	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       382	entry.c	FUNCTION_11
0x1352	            0x7405	                            je 0x4001399	       382	entry.c	FUNCTION_11
0x1354	      0xe800000000	                          call 0x4001399	       382	entry.c	FUNCTION_11
0x1359	        0x488b5df8	                mov rbx, qword [rbp - 8]	       382	entry.c	FUNCTION_11
0x135d	              0xc9	                                   leave	       382	entry.c	FUNCTION_11
0x135e	              0xc3	                                     ret	       382	entry.c	FUNCTION_11
checkout_entry	WHILE,0:functions,0:SWITCH,0:IF,14:ELSE,3:DO,0:FOR,0:CALL,26	213
0x13ee	              0x55	                                push rbp	       411	entry.c	FUNCTION_13
0x13ef	          0x4889e5	                            mov rbp, rsp	       411	entry.c	FUNCTION_13
0x13f2	              0x53	                                push rbx	       411	entry.c	FUNCTION_13
0x13f3	    0x4881ec680100	                          sub rsp, 0x168	       411	entry.c	FUNCTION_13
0x13fa	    0x4889bda8feff	            mov qword [rbp - 0x158], rdi	       411	entry.c	FUNCTION_13
0x1401	    0x4889b5a0feff	            mov qword [rbp - 0x160], rsi	       411	entry.c	FUNCTION_13
0x1408	    0x48899598feff	            mov qword [rbp - 0x168], rdx	       411	entry.c	FUNCTION_13
0x140f	    0x64488b042528	                mov rax, qword fs:[0x28]	       411	entry.c	FUNCTION_13
0x1418	        0x488945e8	             mov qword [rbp - 0x18], rax	       411	entry.c	FUNCTION_13
0x141c	            0x31c0	                            xor eax, eax	       411	entry.c	FUNCTION_13
0x141e	    0x4883bd98feff	              cmp qword [rbp - 0x168], 0	       415	entry.c	FUNCTION_13	IF_1
0x1426	            0x7427	                            je 0x400148f	       415	entry.c	FUNCTION_13	IF_1
0x1428	    0x488b95a0feff	            mov rdx, qword [rbp - 0x160]	       416	entry.c	FUNCTION_13	CALL_1
0x142f	    0x488bb598feff	            mov rsi, qword [rbp - 0x168]	       416	entry.c	FUNCTION_13	CALL_1
0x1436	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       416	entry.c	FUNCTION_13	CALL_1
0x143d	      0xb901000000	                              mov ecx, 1	       416	entry.c	FUNCTION_13	CALL_1
0x1442	          0x4889c7	                            mov rdi, rax	       416	entry.c	FUNCTION_13	CALL_1
0x1445	      0xe838f8ffff	                    call sym.write_entry	       416	entry.c	FUNCTION_13	CALL_1
0x144a	      0xe94e030000	                           jmp 0x40017dd	       416	entry.c	FUNCTION_13	CALL_1
0x144f	      0xbe00000000	                              mov esi, 0	       418	entry.c	FUNCTION_13	CALL_2
0x1454	      0xbf00000000	                              mov edi, 0	       418	entry.c	FUNCTION_13	CALL_2
0x1459	      0xe8e3ebffff	                  call sym.strbuf_setlen	       418	entry.c	FUNCTION_13	CALL_2
0x145e	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       419	entry.c	FUNCTION_13	CALL_3
0x1465	          0x8b4010	            mov eax, dword [rax + 0x10] 	       419	entry.c	FUNCTION_13	CALL_3
0x1468	          0x4863d0	                         movsxd rdx, eax	       419	entry.c	FUNCTION_13	CALL_3
0x146b	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       419	entry.c	FUNCTION_13	CALL_3
0x1472	        0x488b4008	                mov rax, qword [rax + 8]	       419	entry.c	FUNCTION_13	CALL_3
0x1476	          0x4889c6	                            mov rsi, rax	       419	entry.c	FUNCTION_13	CALL_3
0x1479	      0xbf00000000	                              mov edi, 0	       419	entry.c	FUNCTION_13	CALL_3
0x147e	      0xe800000000	                          call 0x40014c3	       419	entry.c	FUNCTION_13	CALL_3
0x1483	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       420	entry.c	FUNCTION_13	CALL_5
0x148a	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       420	entry.c	FUNCTION_13	CALL_5
0x148d	            0x89c2	                            mov edx, eax	       420	entry.c	FUNCTION_13	CALL_5
0x148f	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       420	entry.c	FUNCTION_13	CALL_5
0x1496	        0x4883c058	                           add rax, 0x58	       420	entry.c	FUNCTION_13	CALL_5
0x149a	          0x4889c6	                            mov rsi, rax	       420	entry.c	FUNCTION_13	CALL_5
0x149d	      0xbf00000000	                              mov edi, 0	       420	entry.c	FUNCTION_13	CALL_5
0x14a2	      0xe800000000	                          call 0x40014e7	       420	entry.c	FUNCTION_13	CALL_5
0x14a7	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       422	entry.c	FUNCTION_13	IF_2	CALL_6
0x14ae	          0x8b4810	            mov ecx, dword [rax + 0x10] 	       422	entry.c	FUNCTION_13	IF_2	CALL_6
0x14b1	    0x488b05000000	            mov rax, qword [0x040014f8] 	       422	entry.c	FUNCTION_13	IF_2	CALL_6
0x14b8	            0x89c6	                            mov esi, eax	       422	entry.c	FUNCTION_13	IF_2	CALL_6
0x14ba	    0x488b05000000	            mov rax, qword [0x04001501] 	       422	entry.c	FUNCTION_13	IF_2	CALL_6
0x14c1	    0x488d95c0feff	                  lea rdx, [rbp - 0x140]	       422	entry.c	FUNCTION_13	IF_2	CALL_6
0x14c8	          0x4889c7	                            mov rdi, rax	       422	entry.c	FUNCTION_13	IF_2	CALL_6
0x14cb	      0xe88ffeffff	                     call sym.check_path	       422	entry.c	FUNCTION_13	IF_2	CALL_6
0x14d0	            0x85c0	                           test eax, eax	       422	entry.c	FUNCTION_13	IF_2	CALL_6
0x14d2	     0xf8569020000	                           jne 0x4001781	       422	entry.c	FUNCTION_13	IF_2	CALL_6
0x14d8	    0x488d95c0feff	                  lea rdx, [rbp - 0x140]	       424	entry.c	FUNCTION_13	IF_2	CALL_7
0x14df	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       424	entry.c	FUNCTION_13	IF_2	CALL_7
0x14e6	      0xb905000000	                              mov ecx, 5	       424	entry.c	FUNCTION_13	IF_2	CALL_7
0x14eb	          0x4889c6	                            mov rsi, rax	       424	entry.c	FUNCTION_13	IF_2	CALL_7
0x14ee	      0xbf00000000	                              mov edi, 0	       424	entry.c	FUNCTION_13	IF_2	CALL_7
0x14f3	      0xe800000000	                          call 0x4001538	       424	entry.c	FUNCTION_13	IF_2	CALL_7
0x14f8	    0x8985b4feffff	            mov dword [rbp - 0x14c], eax	       424	entry.c	FUNCTION_13	IF_2	CALL_7
0x14fe	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       429	entry.c	FUNCTION_13	IF_2	CALL_8
0x1505	          0x4889c7	                            mov rdi, rax	       429	entry.c	FUNCTION_13	IF_2	CALL_8
0x1508	      0xe800000000	                          call 0x400154d	       429	entry.c	FUNCTION_13	IF_2	CALL_8
0x150d	    0x488985b8feff	            mov qword [rbp - 0x148], rax	       429	entry.c	FUNCTION_13	IF_2	CALL_8
0x1514	    0x4883bdb8feff	              cmp qword [rbp - 0x148], 0	       430	entry.c	FUNCTION_13	IF_2	IF_3
0x151c	     0xf8418010000	                            je 0x400167a	       430	entry.c	FUNCTION_13	IF_2	IF_3
0x1522	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       432	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_9
0x1529	        0x488d5058	                   lea rdx, [rax + 0x58]	       432	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_9
0x152d	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       432	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_9
0x1534	          0x4889c6	                            mov rsi, rax	       432	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_9
0x1537	          0x4889d7	                            mov rdi, rdx	       432	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_9
0x153a	      0xe800000000	                          call 0x400157f	       432	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_9
0x153f	            0x85c0	                           test eax, eax	       432	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_9
0x1541	     0xf85a0000000	                           jne 0x4001627	       432	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_9
0x1547	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       434	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	IF_5	CALL_10
0x154e	        0x488d5058	                   lea rdx, [rax + 0x58]	       434	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	IF_5	CALL_10
0x1552	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       434	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	IF_5	CALL_10
0x1559	          0x4889c6	                            mov rsi, rax	       434	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	IF_5	CALL_10
0x155c	          0x4889d7	                            mov rdi, rdx	       434	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	IF_5	CALL_10
0x155f	      0xe800000000	                          call 0x40015a4	       434	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	IF_5	CALL_10
0x1564	            0x85c0	                           test eax, eax	       434	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	IF_5	CALL_10
0x1566	            0x7425	                            je 0x40015cd	       434	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	IF_5	CALL_10
0x1568	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       435	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_12
0x156f	        0x488d5858	                   lea rbx, [rax + 0x58]	       435	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_12
0x1573	      0xbf00000000	                              mov edi, 0	       435	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_12
0x1578	      0xe801ecffff	                               call sym.	       435	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_12
0x157d	          0x4889de	                            mov rsi, rbx	       435	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_12
0x1580	          0x4889c7	                            mov rdi, rax	       435	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_12
0x1583	      0xb800000000	                              mov eax, 0	       435	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_12
0x1588	      0xe800000000	                          call 0x40015cd	       435	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_12
0x158d	    0x8b85d8feffff	            mov eax, dword [rbp - 0x128]	       436	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	IF_6
0x1593	      0x2500400000	                         and eax, 0x4000	       436	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	IF_6
0x1598	            0x85c0	                           test eax, eax	       436	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	IF_6
0x159a	            0x7513	                           jne 0x40015ef	       436	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	IF_6
0x159c	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       437	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_13
0x15a3	        0x4883c058	                           add rax, 0x58	       437	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_13
0x15a7	          0x4889c7	                            mov rdi, rax	       437	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_13
0x15aa	      0xe800000000	                          call 0x40015ef	       437	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_13
0x15af	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       440	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_15
0x15b6	        0x4883c044	                           add rax, 0x44	       440	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_15
0x15ba	          0x4889c7	                            mov rdi, rax	       440	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_15
0x15bd	      0xe800000000	                          call 0x4001602	       440	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_15
0x15c2	          0x4889c2	                            mov rdx, rax	       440	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_15
0x15c5	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       439	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_14
0x15cc	        0x4883c058	                           add rax, 0x58	       439	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_14
0x15d0	      0xb900000000	                              mov ecx, 0	       439	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_14
0x15d5	      0xbe00000000	                              mov esi, 0	       439	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_14
0x15da	          0x4889c7	                            mov rdi, rax	       439	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_14
0x15dd	      0xe800000000	                          call 0x4001622	       439	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_14
0x15e2	      0xe9b6010000	                           jmp 0x40017dd	       439	entry.c	FUNCTION_13	IF_2	IF_3	IF_4	CALL_14
0x15e7	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       444	entry.c	FUNCTION_13	IF_2	IF_3	ELSE_1
0x15ee	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       444	entry.c	FUNCTION_13	IF_2	IF_3	ELSE_1
0x15f2	          0x83e001	                              and eax, 1	       444	entry.c	FUNCTION_13	IF_2	IF_3	ELSE_1
0x15f5	            0x84c0	                             test al, al	       442	entry.c	FUNCTION_13	IF_2	IF_3	ELSE_1	CALL_16
0x15f7	            0x7407	                            je 0x4001640	       442	entry.c	FUNCTION_13	IF_2	IF_3	ELSE_1	CALL_16
0x15f9	      0xbb02000000	                              mov ebx, 2	       442	entry.c	FUNCTION_13	IF_2	IF_3	ELSE_1	CALL_16
0x15fe	            0xeb05	                           jmp 0x4001645	       442	entry.c	FUNCTION_13	IF_2	IF_3	ELSE_1	CALL_16
0x1600	      0xbb00000000	                              mov ebx, 0	       442	entry.c	FUNCTION_13	IF_2	IF_3	ELSE_1	CALL_16
0x1605	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       443	entry.c	FUNCTION_13	IF_2	IF_3	ELSE_1	CALL_17
0x160c	        0x4883c044	                           add rax, 0x44	       443	entry.c	FUNCTION_13	IF_2	IF_3	ELSE_1	CALL_17
0x1610	          0x4889c7	                            mov rdi, rax	       443	entry.c	FUNCTION_13	IF_2	IF_3	ELSE_1	CALL_17
0x1613	      0xe800000000	                          call 0x4001658	       443	entry.c	FUNCTION_13	IF_2	IF_3	ELSE_1	CALL_17
0x1618	          0x4889c2	                            mov rdx, rax	       443	entry.c	FUNCTION_13	IF_2	IF_3	ELSE_1	CALL_17
0x161b	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       442	entry.c	FUNCTION_13	IF_2	IF_3	ELSE_1	CALL_16
0x1622	        0x4883c058	                           add rax, 0x58	       442	entry.c	FUNCTION_13	IF_2	IF_3	ELSE_1	CALL_16
0x1626	            0x89d9	                            mov ecx, ebx	       442	entry.c	FUNCTION_13	IF_2	IF_3	ELSE_1	CALL_16
0x1628	      0xbe00000000	                              mov esi, 0	       442	entry.c	FUNCTION_13	IF_2	IF_3	ELSE_1	CALL_16
0x162d	          0x4889c7	                            mov rdi, rax	       442	entry.c	FUNCTION_13	IF_2	IF_3	ELSE_1	CALL_16
0x1630	      0xe800000000	                          call 0x4001675	       442	entry.c	FUNCTION_13	IF_2	IF_3	ELSE_1	CALL_16
0x1635	      0xe963010000	                           jmp 0x40017dd	       442	entry.c	FUNCTION_13	IF_2	IF_3	ELSE_1	CALL_16
0x163a	    0x83bdb4feffff	              cmp dword [rbp - 0x14c], 0	       447	entry.c	FUNCTION_13	IF_2	IF_7
0x1641	            0x750a	                           jne 0x400168d	       447	entry.c	FUNCTION_13	IF_2	IF_7
0x1643	      0xb800000000	                              mov eax, 0	       448	entry.c	FUNCTION_13	IF_2	IF_7
0x1648	      0xe950010000	                           jmp 0x40017dd	       448	entry.c	FUNCTION_13	IF_2	IF_7
0x164d	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       449	entry.c	FUNCTION_13	IF_2	IF_8
0x1654	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       449	entry.c	FUNCTION_13	IF_2	IF_8
0x1658	          0x83e001	                              and eax, 1	       449	entry.c	FUNCTION_13	IF_2	IF_8
0x165b	            0x84c0	                             test al, al	       449	entry.c	FUNCTION_13	IF_2	IF_8
0x165d	            0x753c	                           jne 0x40016db	       449	entry.c	FUNCTION_13	IF_2	IF_8
0x165f	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       450	entry.c	FUNCTION_13	IF_2	IF_8	IF_9
0x1666	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       450	entry.c	FUNCTION_13	IF_2	IF_8	IF_9
0x166a	          0x83e002	                              and eax, 2	       450	entry.c	FUNCTION_13	IF_2	IF_8	IF_9
0x166d	            0x84c0	                             test al, al	       450	entry.c	FUNCTION_13	IF_2	IF_8	IF_9
0x166f	            0x7520	                           jne 0x40016d1	       450	entry.c	FUNCTION_13	IF_2	IF_8	IF_9
0x1671	    0x488b15000000	            mov rdx, qword [0x040016b8] 	       451	entry.c	FUNCTION_13	IF_2	IF_8	IF_9	CALL_18
0x1678	    0x488b05000000	            mov rax, qword [0x040016bf] 	       451	entry.c	FUNCTION_13	IF_2	IF_8	IF_9	CALL_18
0x167f	      0xbe00000000	                              mov esi, 0	       451	entry.c	FUNCTION_13	IF_2	IF_8	IF_9	CALL_18
0x1684	          0x4889c7	                            mov rdi, rax	       451	entry.c	FUNCTION_13	IF_2	IF_8	IF_9	CALL_18
0x1687	      0xb800000000	                              mov eax, 0	       451	entry.c	FUNCTION_13	IF_2	IF_8	IF_9	CALL_18
0x168c	      0xe800000000	                          call 0x40016d1	       451	entry.c	FUNCTION_13	IF_2	IF_8	IF_9	CALL_18
0x1691	      0xb8ffffffff	                     mov eax, 0xffffffff	       454	entry.c	FUNCTION_13	IF_2	IF_8
0x1696	      0xe902010000	                           jmp 0x40017dd	       454	entry.c	FUNCTION_13	IF_2	IF_8
0x169b	    0x8b85d8feffff	            mov eax, dword [rbp - 0x128]	       463	entry.c	FUNCTION_13	IF_2	IF_10	CALL_19
0x16a1	      0x2500f00000	                         and eax, 0xf000	       463	entry.c	FUNCTION_13	IF_2	IF_10	CALL_19
0x16a6	      0x3d00400000	                         cmp eax, 0x4000	       463	entry.c	FUNCTION_13	IF_2	IF_10	CALL_19
0x16ab	            0x7561	                           jne 0x400174e	       463	entry.c	FUNCTION_13	IF_2	IF_10	CALL_19
0x16ad	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       465	entry.c	FUNCTION_13	IF_2	IF_10	IF_11	CALL_20
0x16b4	          0x8b4034	            mov eax, dword [rax + 0x34] 	       465	entry.c	FUNCTION_13	IF_2	IF_10	IF_11	CALL_20
0x16b7	      0x2500f00000	                         and eax, 0xf000	       465	entry.c	FUNCTION_13	IF_2	IF_10	IF_11	CALL_20
0x16bc	      0x3d00e00000	                         cmp eax, 0xe000	       465	entry.c	FUNCTION_13	IF_2	IF_10	IF_11	CALL_20
0x16c1	            0x750a	                           jne 0x400170d	       465	entry.c	FUNCTION_13	IF_2	IF_10	IF_11	CALL_20
0x16c3	      0xb800000000	                              mov eax, 0	       466	entry.c	FUNCTION_13	IF_2	IF_10	IF_11
0x16c8	      0xe9d0000000	                           jmp 0x40017dd	       466	entry.c	FUNCTION_13	IF_2	IF_10	IF_11
0x16cd	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       467	entry.c	FUNCTION_13	IF_2	IF_10	IF_12
0x16d4	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       467	entry.c	FUNCTION_13	IF_2	IF_10	IF_12
0x16d8	          0x83e001	                              and eax, 1	       467	entry.c	FUNCTION_13	IF_2	IF_10	IF_12
0x16db	            0x84c0	                             test al, al	       467	entry.c	FUNCTION_13	IF_2	IF_10	IF_12
0x16dd	            0x7523	                           jne 0x4001742	       467	entry.c	FUNCTION_13	IF_2	IF_10	IF_12
0x16df	    0x488b05000000	            mov rax, qword [0x04001726] 	       468	entry.c	FUNCTION_13	IF_2	IF_10	CALL_21
0x16e6	          0x4889c6	                            mov rsi, rax	       468	entry.c	FUNCTION_13	IF_2	IF_10	CALL_21
0x16e9	      0xbf00000000	                              mov edi, 0	       468	entry.c	FUNCTION_13	IF_2	IF_10	CALL_21
0x16ee	      0xb800000000	                              mov eax, 0	       468	entry.c	FUNCTION_13	IF_2	IF_10	CALL_21
0x16f3	      0xe800000000	                          call 0x4001738	       468	entry.c	FUNCTION_13	IF_2	IF_10	CALL_21
0x16f8	      0xe803e9ffff	                    call sym.const_error	       468	entry.c	FUNCTION_13	IF_2	IF_10	CALL_21
0x16fd	      0xe99b000000	                           jmp 0x40017dd	       468	entry.c	FUNCTION_13	IF_2	IF_10	CALL_21
0x1702	      0xbf00000000	                              mov edi, 0	       469	entry.c	FUNCTION_13	IF_2	IF_10	CALL_22
0x1707	      0xe806edffff	                 call sym.remove_subtree	       469	entry.c	FUNCTION_13	IF_2	IF_10	CALL_22
0x170c	            0xeb4c	                           jmp 0x400179a	       469	entry.c	FUNCTION_13	IF_2	IF_10	CALL_22
0x170e	    0x488b05000000	            mov rax, qword [0x04001755] 	       470	entry.c	FUNCTION_13	IF_2	ELSE_2	IF_13	CALL_23
0x1715	          0x4889c7	                            mov rdi, rax	       470	entry.c	FUNCTION_13	IF_2	ELSE_2	IF_13	CALL_23
0x1718	      0xe800000000	                          call 0x400175d	       470	entry.c	FUNCTION_13	IF_2	ELSE_2	IF_13	CALL_23
0x171d	            0x85c0	                           test eax, eax	       470	entry.c	FUNCTION_13	IF_2	ELSE_2	IF_13	CALL_23
0x171f	            0x7439	                            je 0x400179a	       470	entry.c	FUNCTION_13	IF_2	ELSE_2	IF_13	CALL_23
0x1721	    0x488b05000000	            mov rax, qword [0x04001768] 	       471	entry.c	FUNCTION_13	IF_2	ELSE_2	IF_13
0x1728	          0x4889c6	                            mov rsi, rax	       471	entry.c	FUNCTION_13	IF_2	ELSE_2	IF_13
0x172b	      0xbf00000000	                              mov edi, 0	       471	entry.c	FUNCTION_13	IF_2	ELSE_2	IF_13
0x1730	      0xb800000000	                              mov eax, 0	       471	entry.c	FUNCTION_13	IF_2	ELSE_2	IF_13
0x1735	      0xe800000000	                          call 0x400177a	       471	entry.c	FUNCTION_13	IF_2	ELSE_2	IF_13
0x173a	      0xe8c1e8ffff	                    call sym.const_error	       471	entry.c	FUNCTION_13	IF_2	ELSE_2	IF_13
0x173f	            0xeb5c	                           jmp 0x40017dd	       471	entry.c	FUNCTION_13	IF_2	ELSE_2	IF_13
0x1741	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       472	entry.c	FUNCTION_13	ELSE_3	IF_14
0x1748	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       472	entry.c	FUNCTION_13	ELSE_3	IF_14
0x174c	          0x83e004	                              and eax, 4	       472	entry.c	FUNCTION_13	ELSE_3	IF_14
0x174f	            0x84c0	                             test al, al	       472	entry.c	FUNCTION_13	ELSE_3	IF_14
0x1751	            0x7407	                            je 0x400179a	       472	entry.c	FUNCTION_13	ELSE_3	IF_14
0x1753	      0xb800000000	                              mov eax, 0	       473	entry.c	FUNCTION_13	ELSE_3	IF_14
0x1758	            0xeb43	                           jmp 0x40017dd	       473	entry.c	FUNCTION_13	ELSE_3	IF_14
0x175a	    0x488b05000000	            mov rax, qword [0x040017a1] 	       475	entry.c	FUNCTION_13	CALL_25
0x1761	            0x89c1	                            mov ecx, eax	       475	entry.c	FUNCTION_13	CALL_25
0x1763	    0x488b05000000	            mov rax, qword [0x040017aa] 	       475	entry.c	FUNCTION_13	CALL_25
0x176a	    0x488b95a0feff	            mov rdx, qword [rbp - 0x160]	       475	entry.c	FUNCTION_13	CALL_25
0x1771	            0x89ce	                            mov esi, ecx	       475	entry.c	FUNCTION_13	CALL_25
0x1773	          0x4889c7	                            mov rdi, rax	       475	entry.c	FUNCTION_13	CALL_25
0x1776	      0xe863ebffff	             call sym.create_directories	       475	entry.c	FUNCTION_13	CALL_25
0x177b	    0x488b35000000	            mov rsi, qword [0x040017c2] 	       476	entry.c	FUNCTION_13	CALL_26
0x1782	    0x488b95a0feff	            mov rdx, qword [rbp - 0x160]	       476	entry.c	FUNCTION_13	CALL_26
0x1789	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       476	entry.c	FUNCTION_13	CALL_26
0x1790	      0xb900000000	                              mov ecx, 0	       476	entry.c	FUNCTION_13	CALL_26
0x1795	          0x4889c7	                            mov rdi, rax	       476	entry.c	FUNCTION_13	CALL_26
0x1798	      0xe8e5f4ffff	                    call sym.write_entry	       476	entry.c	FUNCTION_13	CALL_26
0x179d	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       477	entry.c	FUNCTION_13
0x17a1	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       477	entry.c	FUNCTION_13
0x17aa	            0x7405	                            je 0x40017f1	       477	entry.c	FUNCTION_13
0x17ac	      0xe800000000	                          call 0x40017f1	       477	entry.c	FUNCTION_13
0x17b1	    0x4881c4680100	                          add rsp, 0x168	       477	entry.c	FUNCTION_13
0x17b8	              0x5b	                                 pop rbx	       477	entry.c	FUNCTION_13
0x17b9	              0x5d	                                 pop rbp	       477	entry.c	FUNCTION_13
0x17ba	              0xc3	                                     ret	       477	entry.c	FUNCTION_13
strbuf_setlen	WHILE,0:functions,0:SWITCH,0:IF,2:ELSE,1:DO,0:FOR,0:CALL,2	43
0x41	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_16
0x42	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_16
0x45	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_16
0x49	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_16
0x4d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_16
0x51	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_16	IF_1
0x55	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_16	IF_1
0x58	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_16	IF_1
0x5b	            0x740d	                            je 0x40000aa	       162	strbuf.h	FUNCTION_16	IF_1
0x5d	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_16	IF_1
0x61	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_16	IF_1
0x64	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_16	IF_1
0x68	            0xeb05	                           jmp 0x40000af	       162	strbuf.h	FUNCTION_16	IF_1
0x6a	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_16	IF_1
0x6f	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_16	IF_1
0x73	            0x730f	                           jae 0x40000c4	       162	strbuf.h	FUNCTION_16	IF_1
0x75	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_16	CALL_1
0x7a	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_16	CALL_1
0x7f	      0xe800000000	                          call 0x40000c4	       163	strbuf.h	FUNCTION_16	CALL_1
0x84	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_16
0x88	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_16
0x8c	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_16
0x90	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_16	IF_2
0x94	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_16	IF_2
0x98	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_16	IF_2
0x9e	            0x7414	                            je 0x40000f4	       165	strbuf.h	FUNCTION_16	IF_2
0xa0	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_16	IF_2
0xa4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_16	IF_2
0xa8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_16	IF_2
0xac	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_16	IF_2
0xaf	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_16	IF_2
0xb2	            0xeb24	                           jmp 0x4000118	       169	strbuf.h	FUNCTION_16
0xb4	     0xfb605000000	           movzx eax, byte [0x040000fb] 	       168	strbuf.h	FUNCTION_16	CALL_2
0xbb	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_16	CALL_2
0xbd	            0x7419	                            je 0x4000118	       168	strbuf.h	FUNCTION_16	CALL_2
0xbf	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_16	CALL_2
0xc4	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_16	CALL_2
0xc9	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_16	CALL_2
0xce	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_16	CALL_2
0xd3	      0xe800000000	                          call 0x4000118	       168	strbuf.h	FUNCTION_16	CALL_2
0xd8	              0x90	                                     nop	       169	strbuf.h	FUNCTION_16
0xd9	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_16
0xda	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_16
_	WHILE,0:functions,0:SWITCH,0:IF,1:ELSE,0:DO,0:FOR,0:CALL,2	15
0x17e	              0x55	                                push rbp	        51	gettext.h	FUNCTION_27
0x17f	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_27
0x182	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_27
0x186	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_27
0x18a	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_27	IF_1
0x18e	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_27	IF_1
0x191	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_27	IF_1
0x193	            0x7507	                           jne 0x40001dc	        52	gettext.h	FUNCTION_27	IF_1
0x195	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_27	IF_1
0x19a	            0xeb0c	                           jmp 0x40001e8	        53	gettext.h	FUNCTION_27	IF_1
0x19c	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_27	CALL_2
0x1a0	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_27	CALL_2
0x1a3	      0xe800000000	                          call 0x40001e8	        54	gettext.h	FUNCTION_27	CALL_2
0x1a8	              0xc9	                                   leave	        55	gettext.h	FUNCTION_27
0x1a9	              0xc3	                                     ret	        55	gettext.h	FUNCTION_27
create_directories	WHILE,1:functions,0:SWITCH,0:IF,4:ELSE,0:DO,1:FOR,0:CALL,7	95
0x2de	              0x55	                                push rbp	        11	entry.c	FUNCTION_1
0x2df	          0x4889e5	                            mov rbp, rsp	        11	entry.c	FUNCTION_1
0x2e2	        0x4883ec30	                           sub rsp, 0x30	        11	entry.c	FUNCTION_1
0x2e6	        0x48897de8	             mov qword [rbp - 0x18], rdi	        11	entry.c	FUNCTION_1
0x2ea	          0x8975e4	             mov dword [rbp - 0x1c], esi	        11	entry.c	FUNCTION_1
0x2ed	        0x488955d8	             mov qword [rbp - 0x28], rdx	        11	entry.c	FUNCTION_1
0x2f1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        12	entry.c	FUNCTION_1	CALL_1
0x2f4	            0x4898	                                    cdqe	        12	entry.c	FUNCTION_1	CALL_1
0x2f6	          0x4889c7	                            mov rdi, rax	        12	entry.c	FUNCTION_1	CALL_1
0x2f9	      0xe800000000	                          call 0x400033e	        12	entry.c	FUNCTION_1	CALL_1
0x2fe	        0x488945f8	                mov qword [rbp - 8], rax	        12	entry.c	FUNCTION_1	CALL_1
0x302	    0xc745f4000000	                mov dword [rbp - 0xc], 0	        13	entry.c	FUNCTION_1
0x309	      0xe9e6000000	                           jmp 0x4000434	        15	entry.c	FUNCTION_1	WHILE_1
0x30e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        17	entry.c	FUNCTION_1	WHILE_1	DO_1
0x311	          0x4863d0	                         movsxd rdx, eax	        17	entry.c	FUNCTION_1	WHILE_1	DO_1
0x314	        0x488b45f8	                mov rax, qword [rbp - 8]	        17	entry.c	FUNCTION_1	WHILE_1	DO_1
0x318	          0x4801c2	                            add rdx, rax	        17	entry.c	FUNCTION_1	WHILE_1	DO_1
0x31b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        17	entry.c	FUNCTION_1	WHILE_1	DO_1
0x31e	          0x4863c8	                         movsxd rcx, eax	        17	entry.c	FUNCTION_1	WHILE_1	DO_1
0x321	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        17	entry.c	FUNCTION_1	WHILE_1	DO_1
0x325	          0x4801c8	                            add rax, rcx	        17	entry.c	FUNCTION_1	WHILE_1	DO_1
0x328	           0xfb600	                   movzx eax, byte [rax]	        17	entry.c	FUNCTION_1	WHILE_1	DO_1
0x32b	            0x8802	                      mov byte [rdx], al	        17	entry.c	FUNCTION_1	WHILE_1	DO_1
0x32d	        0x8345f401	                add dword [rbp - 0xc], 1	        18	entry.c	FUNCTION_1	WHILE_1	DO_1
0x331	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        19	entry.c	FUNCTION_1	WHILE_1	DO_1
0x334	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	        19	entry.c	FUNCTION_1	WHILE_1	DO_1
0x337	            0x7d14	                           jge 0x400038d	        19	entry.c	FUNCTION_1	WHILE_1	DO_1
0x339	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        19	entry.c	FUNCTION_1	WHILE_1	DO_1
0x33c	          0x4863d0	                         movsxd rdx, eax	        19	entry.c	FUNCTION_1	WHILE_1	DO_1
0x33f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        19	entry.c	FUNCTION_1	WHILE_1	DO_1
0x343	          0x4801d0	                            add rax, rdx	        19	entry.c	FUNCTION_1	WHILE_1	DO_1
0x346	           0xfb600	                   movzx eax, byte [rax]	        19	entry.c	FUNCTION_1	WHILE_1	DO_1
0x349	            0x3c2f	                            cmp al, 0x2f	        19	entry.c	FUNCTION_1	WHILE_1	DO_1
0x34b	            0x75c1	                           jne 0x400034e	        19	entry.c	FUNCTION_1	WHILE_1	DO_1
0x34d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        20	entry.c	FUNCTION_1	WHILE_1	IF_1
0x350	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	        20	entry.c	FUNCTION_1	WHILE_1	IF_1
0x353	     0xf8da9000000	                           jge 0x4000442	        20	entry.c	FUNCTION_1	WHILE_1	IF_1
0x359	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        22	entry.c	FUNCTION_1	WHILE_1
0x35c	          0x4863d0	                         movsxd rdx, eax	        22	entry.c	FUNCTION_1	WHILE_1
0x35f	        0x488b45f8	                mov rax, qword [rbp - 8]	        22	entry.c	FUNCTION_1	WHILE_1
0x363	          0x4801d0	                            add rax, rdx	        22	entry.c	FUNCTION_1	WHILE_1
0x366	          0xc60000	                       mov byte [rax], 0	        22	entry.c	FUNCTION_1	WHILE_1
0x369	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        31	entry.c	FUNCTION_1	WHILE_1	IF_2	CALL_2
0x36d	          0x8b5010	            mov edx, dword [rax + 0x10] 	        31	entry.c	FUNCTION_1	WHILE_1	IF_2	CALL_2
0x370	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	        31	entry.c	FUNCTION_1	WHILE_1	IF_2	CALL_2
0x373	        0x488b45f8	                mov rax, qword [rbp - 8]	        31	entry.c	FUNCTION_1	WHILE_1	IF_2	CALL_2
0x377	            0x89ce	                            mov esi, ecx	        31	entry.c	FUNCTION_1	WHILE_1	IF_2	CALL_2
0x379	          0x4889c7	                            mov rdi, rax	        31	entry.c	FUNCTION_1	WHILE_1	IF_2	CALL_2
0x37c	      0xe800000000	                          call 0x40003c1	        31	entry.c	FUNCTION_1	WHILE_1	IF_2	CALL_2
0x381	            0x85c0	                           test eax, eax	        31	entry.c	FUNCTION_1	WHILE_1	IF_2	CALL_2
0x383	            0x7402	                            je 0x40003c7	        31	entry.c	FUNCTION_1	WHILE_1	IF_2	CALL_2
0x385	            0xeb6d	                           jmp 0x4000434	        32	entry.c	FUNCTION_1	WHILE_1	IF_2
0x387	        0x488b45f8	                mov rax, qword [rbp - 8]	        40	entry.c	FUNCTION_1	WHILE_1	IF_3	CALL_3
0x38b	      0xbeff010000	                          mov esi, 0x1ff	        40	entry.c	FUNCTION_1	WHILE_1	IF_3	CALL_3
0x390	          0x4889c7	                            mov rdi, rax	        40	entry.c	FUNCTION_1	WHILE_1	IF_3	CALL_3
0x393	      0xe800000000	                          call 0x40003d8	        40	entry.c	FUNCTION_1	WHILE_1	IF_3	CALL_3
0x398	            0x85c0	                           test eax, eax	        40	entry.c	FUNCTION_1	WHILE_1	IF_3	CALL_3
0x39a	            0x7458	                            je 0x4000434	        40	entry.c	FUNCTION_1	WHILE_1	IF_3	CALL_3
0x39c	      0xe800000000	                          call 0x40003e1	        41	entry.c	FUNCTION_1	WHILE_1	IF_3	IF_4
0x3a1	            0x8b00	                    mov eax, dword [rax]	        41	entry.c	FUNCTION_1	WHILE_1	IF_3	IF_4
0x3a3	          0x83f811	                           cmp eax, 0x11	        41	entry.c	FUNCTION_1	WHILE_1	IF_3	IF_4
0x3a6	            0x7536	                           jne 0x400041e	        41	entry.c	FUNCTION_1	WHILE_1	IF_3	IF_4
0x3a8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        41	entry.c	FUNCTION_1	WHILE_1	IF_3	IF_4
0x3ac	         0xfb64020	           movzx eax, byte [rax + 0x20] 	        41	entry.c	FUNCTION_1	WHILE_1	IF_3	IF_4
0x3b0	          0x83e001	                              and eax, 1	        41	entry.c	FUNCTION_1	WHILE_1	IF_3	IF_4
0x3b3	            0x84c0	                             test al, al	        41	entry.c	FUNCTION_1	WHILE_1	IF_3	IF_4
0x3b5	            0x7427	                            je 0x400041e	        41	entry.c	FUNCTION_1	WHILE_1	IF_3	IF_4
0x3b7	        0x488b45f8	                mov rax, qword [rbp - 8]	        42	entry.c	FUNCTION_1	WHILE_1	IF_3	IF_4	CALL_5
0x3bb	          0x4889c7	                            mov rdi, rax	        42	entry.c	FUNCTION_1	WHILE_1	IF_3	IF_4	CALL_5
0x3be	      0xe800000000	                          call 0x4000403	        42	entry.c	FUNCTION_1	WHILE_1	IF_3	IF_4	CALL_5
0x3c3	            0x85c0	                           test eax, eax	        41	entry.c	FUNCTION_1	WHILE_1	IF_3	IF_4
0x3c5	            0x7517	                           jne 0x400041e	        41	entry.c	FUNCTION_1	WHILE_1	IF_3	IF_4
0x3c7	        0x488b45f8	                mov rax, qword [rbp - 8]	        42	entry.c	FUNCTION_1	WHILE_1	IF_3	IF_4	CALL_5
0x3cb	      0xbeff010000	                          mov esi, 0x1ff	        42	entry.c	FUNCTION_1	WHILE_1	IF_3	IF_4	CALL_5
0x3d0	          0x4889c7	                            mov rdi, rax	        42	entry.c	FUNCTION_1	WHILE_1	IF_3	IF_4	CALL_5
0x3d3	      0xe800000000	                          call 0x4000418	        42	entry.c	FUNCTION_1	WHILE_1	IF_3	IF_4	CALL_5
0x3d8	            0x85c0	                           test eax, eax	        42	entry.c	FUNCTION_1	WHILE_1	IF_3	IF_4	CALL_5
0x3da	            0x7502	                           jne 0x400041e	        42	entry.c	FUNCTION_1	WHILE_1	IF_3	IF_4	CALL_5
0x3dc	            0xeb16	                           jmp 0x4000434	        43	entry.c	FUNCTION_1	WHILE_1	IF_3	IF_4
0x3de	        0x488b45f8	                mov rax, qword [rbp - 8]	        44	entry.c	FUNCTION_1	WHILE_1	IF_3	CALL_6
0x3e2	          0x4889c6	                            mov rsi, rax	        44	entry.c	FUNCTION_1	WHILE_1	IF_3	CALL_6
0x3e5	      0xbf00000000	                              mov edi, 0	        44	entry.c	FUNCTION_1	WHILE_1	IF_3	CALL_6
0x3ea	      0xb800000000	                              mov eax, 0	        44	entry.c	FUNCTION_1	WHILE_1	IF_3	CALL_6
0x3ef	      0xe800000000	                          call 0x4000434	        44	entry.c	FUNCTION_1	WHILE_1	IF_3	CALL_6
0x3f4	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        15	entry.c	FUNCTION_1	WHILE_1
0x3f7	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	        15	entry.c	FUNCTION_1	WHILE_1
0x3fa	     0xf8c0effffff	                            jl 0x400034e	        15	entry.c	FUNCTION_1	WHILE_1
0x400	            0xeb01	                           jmp 0x4000443	        15	entry.c	FUNCTION_1	WHILE_1
0x402	              0x90	                                     nop	        21	entry.c	FUNCTION_1	WHILE_1	IF_1
0x403	        0x488b45f8	                mov rax, qword [rbp - 8]	        47	entry.c	FUNCTION_1	CALL_7
0x407	          0x4889c7	                            mov rdi, rax	        47	entry.c	FUNCTION_1	CALL_7
0x40a	      0xe800000000	                          call 0x400044f	        47	entry.c	FUNCTION_1	CALL_7
0x40f	              0x90	                                     nop	        48	entry.c	FUNCTION_1
0x410	              0xc9	                                   leave	        48	entry.c	FUNCTION_1
0x411	              0xc3	                                     ret	        48	entry.c	FUNCTION_1
remove_subtree	WHILE,1:functions,0:SWITCH,0:IF,6:ELSE,1:DO,0:FOR,0:CALL,16	108
0x412	              0x55	                                push rbp	        51	entry.c	FUNCTION_2
0x413	          0x4889e5	                            mov rbp, rsp	        51	entry.c	FUNCTION_2
0x416	    0x4881ecd00000	                           sub rsp, 0xd0	        51	entry.c	FUNCTION_2
0x41d	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	        51	entry.c	FUNCTION_2
0x424	    0x64488b042528	                mov rax, qword fs:[0x28]	        51	entry.c	FUNCTION_2
0x42d	        0x488945f8	                mov qword [rbp - 8], rax	        51	entry.c	FUNCTION_2
0x431	            0x31c0	                            xor eax, eax	        51	entry.c	FUNCTION_2
0x433	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        52	entry.c	FUNCTION_2	CALL_1
0x43a	        0x488b4010	            mov rax, qword [rax + 0x10] 	        52	entry.c	FUNCTION_2	CALL_1
0x43e	          0x4889c7	                            mov rdi, rax	        52	entry.c	FUNCTION_2	CALL_1
0x441	      0xe800000000	                          call 0x4000486	        52	entry.c	FUNCTION_2	CALL_1
0x446	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	        52	entry.c	FUNCTION_2	CALL_1
0x44d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        54	entry.c	FUNCTION_2
0x454	        0x488b4008	                mov rax, qword [rax + 8]	        54	entry.c	FUNCTION_2
0x458	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	        54	entry.c	FUNCTION_2
0x45e	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	        56	entry.c	FUNCTION_2	IF_1
0x466	     0xf851a010000	                           jne 0x40005c6	        56	entry.c	FUNCTION_2	IF_1
0x46c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        57	entry.c	FUNCTION_2	CALL_2
0x473	        0x488b4010	            mov rax, qword [rax + 0x10] 	        57	entry.c	FUNCTION_2	CALL_2
0x477	          0x4889c6	                            mov rsi, rax	        57	entry.c	FUNCTION_2	CALL_2
0x47a	      0xbf00000000	                              mov edi, 0	        57	entry.c	FUNCTION_2	CALL_2
0x47f	      0xb800000000	                              mov eax, 0	        57	entry.c	FUNCTION_2	CALL_2
0x484	      0xe800000000	                          call 0x40004c9	        57	entry.c	FUNCTION_2	CALL_2
0x489	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        61	entry.c	FUNCTION_2	WHILE_1	IF_2	CALL_4
0x490	        0x4883c013	                           add rax, 0x13	        61	entry.c	FUNCTION_2	WHILE_1	IF_2	CALL_4
0x494	          0x4889c7	                            mov rdi, rax	        61	entry.c	FUNCTION_2	WHILE_1	IF_2	CALL_4
0x497	      0xe86dfdffff	               call sym.is_dot_or_dotdot	        61	entry.c	FUNCTION_2	WHILE_1	IF_2	CALL_4
0x49c	            0x85c0	                           test eax, eax	        61	entry.c	FUNCTION_2	WHILE_1	IF_2	CALL_4
0x49e	            0x7405	                            je 0x40004e5	        61	entry.c	FUNCTION_2	WHILE_1	IF_2	CALL_4
0x4a0	      0xe9e1000000	                           jmp 0x40005c6	        61	entry.c	FUNCTION_2	WHILE_1	IF_2	CALL_4
0x4a5	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        64	entry.c	FUNCTION_2	WHILE_1	CALL_5
0x4ac	      0xbe2f000000	                           mov esi, 0x2f	        64	entry.c	FUNCTION_2	WHILE_1	CALL_5
0x4b1	          0x4889c7	                            mov rdi, rax	        64	entry.c	FUNCTION_2	WHILE_1	CALL_5
0x4b4	      0xe822fcffff	                   call sym.strbuf_addch	        64	entry.c	FUNCTION_2	WHILE_1	CALL_5
0x4b9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        65	entry.c	FUNCTION_2	WHILE_1	CALL_6
0x4c0	        0x488d5013	                   lea rdx, [rax + 0x13]	        65	entry.c	FUNCTION_2	WHILE_1	CALL_6
0x4c4	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        65	entry.c	FUNCTION_2	WHILE_1	CALL_6
0x4cb	          0x4889d6	                            mov rsi, rdx	        65	entry.c	FUNCTION_2	WHILE_1	CALL_6
0x4ce	          0x4889c7	                            mov rdi, rax	        65	entry.c	FUNCTION_2	WHILE_1	CALL_6
0x4d1	      0xe873fcffff	                  call sym.strbuf_addstr	        65	entry.c	FUNCTION_2	WHILE_1	CALL_6
0x4d6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        66	entry.c	FUNCTION_2	WHILE_1	IF_3	CALL_7
0x4dd	        0x488b4010	            mov rax, qword [rax + 0x10] 	        66	entry.c	FUNCTION_2	WHILE_1	IF_3	CALL_7
0x4e1	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	        66	entry.c	FUNCTION_2	WHILE_1	IF_3	CALL_7
0x4e8	          0x4889d6	                            mov rsi, rdx	        66	entry.c	FUNCTION_2	WHILE_1	IF_3	CALL_7
0x4eb	          0x4889c7	                            mov rdi, rax	        66	entry.c	FUNCTION_2	WHILE_1	IF_3	CALL_7
0x4ee	      0xe800000000	                          call 0x4000533	        66	entry.c	FUNCTION_2	WHILE_1	IF_3	CALL_7
0x4f3	            0x85c0	                           test eax, eax	        66	entry.c	FUNCTION_2	WHILE_1	IF_3	CALL_7
0x4f5	            0x741d	                            je 0x4000554	        66	entry.c	FUNCTION_2	WHILE_1	IF_3	CALL_7
0x4f7	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        67	entry.c	FUNCTION_2	WHILE_1	CALL_8
0x4fe	        0x488b4010	            mov rax, qword [rax + 0x10] 	        67	entry.c	FUNCTION_2	WHILE_1	CALL_8
0x502	          0x4889c6	                            mov rsi, rax	        67	entry.c	FUNCTION_2	WHILE_1	CALL_8
0x505	      0xbf00000000	                              mov edi, 0	        67	entry.c	FUNCTION_2	WHILE_1	CALL_8
0x50a	      0xb800000000	                              mov eax, 0	        67	entry.c	FUNCTION_2	WHILE_1	CALL_8
0x50f	      0xe800000000	                          call 0x4000554	        67	entry.c	FUNCTION_2	WHILE_1	CALL_8
0x514	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	        68	entry.c	FUNCTION_2	WHILE_1	IF_4	CALL_9
0x51a	      0x2500f00000	                         and eax, 0xf000	        68	entry.c	FUNCTION_2	WHILE_1	IF_4	CALL_9
0x51f	      0x3d00400000	                         cmp eax, 0x4000	        68	entry.c	FUNCTION_2	WHILE_1	IF_4	CALL_9
0x524	            0x7511	                           jne 0x4000577	        68	entry.c	FUNCTION_2	WHILE_1	IF_4	CALL_9
0x526	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        69	entry.c	FUNCTION_2	WHILE_1	CALL_10
0x52d	          0x4889c7	                            mov rdi, rax	        69	entry.c	FUNCTION_2	WHILE_1	CALL_10
0x530	      0xe8ddfeffff	                 call sym.remove_subtree	        69	entry.c	FUNCTION_2	WHILE_1	CALL_10
0x535	            0xeb34	                           jmp 0x40005ab	        69	entry.c	FUNCTION_2	WHILE_1	CALL_10
0x537	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        70	entry.c	FUNCTION_2	WHILE_1	ELSE_1	IF_5	CALL_11
0x53e	        0x488b4010	            mov rax, qword [rax + 0x10] 	        70	entry.c	FUNCTION_2	WHILE_1	ELSE_1	IF_5	CALL_11
0x542	          0x4889c7	                            mov rdi, rax	        70	entry.c	FUNCTION_2	WHILE_1	ELSE_1	IF_5	CALL_11
0x545	      0xe800000000	                          call 0x400058a	        70	entry.c	FUNCTION_2	WHILE_1	ELSE_1	IF_5	CALL_11
0x54a	            0x85c0	                           test eax, eax	        70	entry.c	FUNCTION_2	WHILE_1	ELSE_1	IF_5	CALL_11
0x54c	            0x741d	                            je 0x40005ab	        70	entry.c	FUNCTION_2	WHILE_1	ELSE_1	IF_5	CALL_11
0x54e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        71	entry.c	FUNCTION_2	WHILE_1	ELSE_1	IF_5
0x555	        0x488b4010	            mov rax, qword [rax + 0x10] 	        71	entry.c	FUNCTION_2	WHILE_1	ELSE_1	IF_5
0x559	          0x4889c6	                            mov rsi, rax	        71	entry.c	FUNCTION_2	WHILE_1	ELSE_1	IF_5
0x55c	      0xbf00000000	                              mov edi, 0	        71	entry.c	FUNCTION_2	WHILE_1	ELSE_1	IF_5
0x561	      0xb800000000	                              mov eax, 0	        71	entry.c	FUNCTION_2	WHILE_1	ELSE_1	IF_5
0x566	      0xe800000000	                          call 0x40005ab	        71	entry.c	FUNCTION_2	WHILE_1	ELSE_1	IF_5
0x56b	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	        72	entry.c	FUNCTION_2	WHILE_1	CALL_13
0x571	          0x4863d0	                         movsxd rdx, eax	        72	entry.c	FUNCTION_2	WHILE_1	CALL_13
0x574	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        72	entry.c	FUNCTION_2	WHILE_1	CALL_13
0x57b	          0x4889d6	                            mov rsi, rdx	        72	entry.c	FUNCTION_2	WHILE_1	CALL_13
0x57e	          0x4889c7	                            mov rdi, rax	        72	entry.c	FUNCTION_2	WHILE_1	CALL_13
0x581	      0xe8bbfaffff	                  call sym.strbuf_setlen	        72	entry.c	FUNCTION_2	WHILE_1	CALL_13
0x586	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	        58	entry.c	FUNCTION_2	WHILE_1	CALL_3
0x58d	          0x4889c7	                            mov rdi, rax	        58	entry.c	FUNCTION_2	WHILE_1	CALL_3
0x590	      0xe800000000	                          call 0x40005d5	        58	entry.c	FUNCTION_2	WHILE_1	CALL_3
0x595	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	        58	entry.c	FUNCTION_2	WHILE_1	CALL_3
0x59c	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	        58	entry.c	FUNCTION_2	WHILE_1	CALL_3
0x5a4	     0xf85dffeffff	                           jne 0x40004c9	        58	entry.c	FUNCTION_2	WHILE_1	CALL_3
0x5aa	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	        74	entry.c	FUNCTION_2	CALL_14
0x5b1	          0x4889c7	                            mov rdi, rax	        74	entry.c	FUNCTION_2	CALL_14
0x5b4	      0xe800000000	                          call 0x40005f9	        74	entry.c	FUNCTION_2	CALL_14
0x5b9	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        75	entry.c	FUNCTION_2	IF_6	CALL_15
0x5c0	        0x488b4010	            mov rax, qword [rax + 0x10] 	        75	entry.c	FUNCTION_2	IF_6	CALL_15
0x5c4	          0x4889c7	                            mov rdi, rax	        75	entry.c	FUNCTION_2	IF_6	CALL_15
0x5c7	      0xe800000000	                          call 0x400060c	        75	entry.c	FUNCTION_2	IF_6	CALL_15
0x5cc	            0x85c0	                           test eax, eax	        75	entry.c	FUNCTION_2	IF_6	CALL_15
0x5ce	            0x741d	                            je 0x400062d	        75	entry.c	FUNCTION_2	IF_6	CALL_15
0x5d0	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        76	entry.c	FUNCTION_2	CALL_16
0x5d7	        0x488b4010	            mov rax, qword [rax + 0x10] 	        76	entry.c	FUNCTION_2	CALL_16
0x5db	          0x4889c6	                            mov rsi, rax	        76	entry.c	FUNCTION_2	CALL_16
0x5de	      0xbf00000000	                              mov edi, 0	        76	entry.c	FUNCTION_2	CALL_16
0x5e3	      0xb800000000	                              mov eax, 0	        76	entry.c	FUNCTION_2	CALL_16
0x5e8	      0xe800000000	                          call 0x400062d	        76	entry.c	FUNCTION_2	CALL_16
0x5ed	              0x90	                                     nop	        77	entry.c	FUNCTION_2
0x5ee	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	entry.c	FUNCTION_2
0x5f2	    0x644833042528	                xor rax, qword fs:[0x28]	        77	entry.c	FUNCTION_2
0x5fb	            0x7405	                            je 0x4000642	        77	entry.c	FUNCTION_2
0x5fd	      0xe800000000	                          call 0x4000642	        77	entry.c	FUNCTION_2
0x602	              0xc9	                                   leave	        77	entry.c	FUNCTION_2
0x603	              0xc3	                                     ret	        77	entry.c	FUNCTION_2
strbuf_addstr	WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0:FOR,0:CALL,2	17
0x149	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_18
0x14a	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_18
0x14d	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_18
0x151	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_18
0x155	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_18
0x159	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_18	CALL_2
0x15d	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_18	CALL_2
0x160	      0xe800000000	                          call 0x40001a5	       279	strbuf.h	FUNCTION_18	CALL_2
0x165	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_18	CALL_2
0x168	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_18	CALL_2
0x16c	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_18	CALL_2
0x170	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_18	CALL_2
0x173	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_18	CALL_2
0x176	      0xe800000000	                          call 0x40001bb	       279	strbuf.h	FUNCTION_18	CALL_2
0x17b	              0x90	                                     nop	       280	strbuf.h	FUNCTION_18
0x17c	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_18
0x17d	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_18
strbuf_avail	WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0:FOR,0:CALL,0	18
0xb	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_15
0xc	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_15
0xf	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_15
0x13	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_15
0x17	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_15
0x1a	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_15
0x1d	            0x741b	                            je 0x400007a	       141	strbuf.h	FUNCTION_15
0x1f	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_15
0x23	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_15
0x26	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_15
0x2a	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_15
0x2e	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_15
0x31	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_15
0x34	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_15
0x38	            0xeb05	                           jmp 0x400007f	       141	strbuf.h	FUNCTION_15
0x3a	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_15
0x3f	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_15
0x40	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_15
create_file	WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0:FOR,0:CALL,1	21
0x604	              0x55	                                push rbp	        80	entry.c	FUNCTION_3
0x605	          0x4889e5	                            mov rbp, rsp	        80	entry.c	FUNCTION_3
0x608	        0x4883ec10	                           sub rsp, 0x10	        80	entry.c	FUNCTION_3
0x60c	        0x48897df8	                mov qword [rbp - 8], rdi	        80	entry.c	FUNCTION_3
0x610	          0x8975f4	              mov dword [rbp - 0xc], esi	        80	entry.c	FUNCTION_3
0x613	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        81	entry.c	FUNCTION_3
0x616	          0x83e040	                           and eax, 0x40	        81	entry.c	FUNCTION_3
0x619	            0x85c0	                           test eax, eax	        81	entry.c	FUNCTION_3
0x61b	            0x7407	                            je 0x4000664	        81	entry.c	FUNCTION_3
0x61d	      0xb8ff010000	                          mov eax, 0x1ff	        81	entry.c	FUNCTION_3
0x622	            0xeb05	                           jmp 0x4000669	        81	entry.c	FUNCTION_3
0x624	      0xb8b6010000	                          mov eax, 0x1b6	        81	entry.c	FUNCTION_3
0x629	          0x8945f4	              mov dword [rbp - 0xc], eax	        81	entry.c	FUNCTION_3
0x62c	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        82	entry.c	FUNCTION_3	CALL_1
0x62f	        0x488b45f8	                mov rax, qword [rbp - 8]	        82	entry.c	FUNCTION_3	CALL_1
0x633	      0xbec1000000	                           mov esi, 0xc1	        82	entry.c	FUNCTION_3	CALL_1
0x638	          0x4889c7	                            mov rdi, rax	        82	entry.c	FUNCTION_3	CALL_1
0x63b	      0xb800000000	                              mov eax, 0	        82	entry.c	FUNCTION_3	CALL_1
0x640	      0xe800000000	                          call 0x4000685	        82	entry.c	FUNCTION_3	CALL_1
0x645	              0xc9	                                   leave	        83	entry.c	FUNCTION_3
0x646	              0xc3	                                     ret	        83	entry.c	FUNCTION_3
open_output_fd	WHILE,0:functions,0:SWITCH,0:IF,1:ELSE,1:DO,0:FOR,0:CALL,3	43
0x6c1	              0x55	                                push rbp	        99	entry.c	FUNCTION_5
0x6c2	          0x4889e5	                            mov rbp, rsp	        99	entry.c	FUNCTION_5
0x6c5	        0x4883ec30	                           sub rsp, 0x30	        99	entry.c	FUNCTION_5
0x6c9	        0x48897de8	             mov qword [rbp - 0x18], rdi	        99	entry.c	FUNCTION_5
0x6cd	        0x488975e0	             mov qword [rbp - 0x20], rsi	        99	entry.c	FUNCTION_5
0x6d1	          0x8955dc	             mov dword [rbp - 0x24], edx	        99	entry.c	FUNCTION_5
0x6d4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       100	entry.c	FUNCTION_5
0x6d8	          0x8b4034	            mov eax, dword [rax + 0x34] 	       100	entry.c	FUNCTION_5
0x6db	      0x2500f00000	                         and eax, 0xf000	       100	entry.c	FUNCTION_5
0x6e0	      0x3d00800000	                         cmp eax, 0x8000	       100	entry.c	FUNCTION_5
0x6e5	           0xf95c0	                                setne al	       100	entry.c	FUNCTION_5
0x6e8	           0xfb6c0	                           movzx eax, al	       100	entry.c	FUNCTION_5
0x6eb	          0x8945fc	                mov dword [rbp - 4], eax	       100	entry.c	FUNCTION_5
0x6ee	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       101	entry.c	FUNCTION_5	IF_1
0x6f2	            0x743e	                            je 0x4000772	       101	entry.c	FUNCTION_5	IF_1
0x6f4	        0x837dfc00	                  cmp dword [rbp - 4], 0	       102	entry.c	FUNCTION_5	IF_1	CALL_1
0x6f8	            0x7407	                            je 0x4000741	       102	entry.c	FUNCTION_5	IF_1	CALL_1
0x6fa	      0xba00000000	                              mov edx, 0	       102	entry.c	FUNCTION_5	IF_1	CALL_1
0x6ff	            0xeb05	                           jmp 0x4000746	       102	entry.c	FUNCTION_5	IF_1	CALL_1
0x701	      0xba00000000	                              mov edx, 0	       102	entry.c	FUNCTION_5	IF_1	CALL_1
0x706	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       102	entry.c	FUNCTION_5	IF_1	CALL_1
0x70a	          0x4889d1	                            mov rcx, rdx	       102	entry.c	FUNCTION_5	IF_1	CALL_1
0x70d	      0xba00000000	                              mov edx, 0	       102	entry.c	FUNCTION_5	IF_1	CALL_1
0x712	      0xbe19000000	                           mov esi, 0x19	       102	entry.c	FUNCTION_5	IF_1	CALL_1
0x717	          0x4889c7	                            mov rdi, rax	       102	entry.c	FUNCTION_5	IF_1	CALL_1
0x71a	      0xb800000000	                              mov eax, 0	       102	entry.c	FUNCTION_5	IF_1	CALL_1
0x71f	      0xe800000000	                          call 0x4000764	       102	entry.c	FUNCTION_5	IF_1	CALL_1
0x724	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       104	entry.c	FUNCTION_5	IF_1	CALL_2
0x728	          0x4889c7	                            mov rdi, rax	       104	entry.c	FUNCTION_5	IF_1	CALL_2
0x72b	      0xe800000000	                          call 0x4000770	       104	entry.c	FUNCTION_5	IF_1	CALL_2
0x730	            0xeb22	                           jmp 0x4000794	       104	entry.c	FUNCTION_5	IF_1	CALL_2
0x732	        0x837dfc00	                  cmp dword [rbp - 4], 0	       106	entry.c	FUNCTION_5	ELSE_1	CALL_3
0x736	            0x7509	                           jne 0x4000781	       106	entry.c	FUNCTION_5	ELSE_1	CALL_3
0x738	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       106	entry.c	FUNCTION_5	ELSE_1	CALL_3
0x73c	          0x8b4034	            mov eax, dword [rax + 0x34] 	       106	entry.c	FUNCTION_5	ELSE_1	CALL_3
0x73f	            0xeb05	                           jmp 0x4000786	       106	entry.c	FUNCTION_5	ELSE_1	CALL_3
0x741	      0xb8b6010000	                          mov eax, 0x1b6	       106	entry.c	FUNCTION_5	ELSE_1	CALL_3
0x746	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       106	entry.c	FUNCTION_5	ELSE_1	CALL_3
0x74a	            0x89c6	                            mov esi, eax	       106	entry.c	FUNCTION_5	ELSE_1	CALL_3
0x74c	          0x4889d7	                            mov rdi, rdx	       106	entry.c	FUNCTION_5	ELSE_1	CALL_3
0x74f	      0xe8b0feffff	                    call sym.create_file	       106	entry.c	FUNCTION_5	ELSE_1	CALL_3
0x754	              0xc9	                                   leave	       108	entry.c	FUNCTION_5
0x755	              0xc3	                                     ret	       108	entry.c	FUNCTION_5
const_error	WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0:FOR,0:CALL,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_34
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_34
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_34
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_34
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_34
trace_pass_fl	WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0:FOR,0:CALL,0	17
0x1aa	              0x55	                                push rbp	       134	trace.h	FUNCTION_56
0x1ab	          0x4889e5	                            mov rbp, rsp	       134	trace.h	FUNCTION_56
0x1ae	        0x48897df8	                mov qword [rbp - 8], rdi	       134	trace.h	FUNCTION_56
0x1b2	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	trace.h	FUNCTION_56
0x1b6	          0x8b4008	                mov eax, dword [rax + 8]	       135	trace.h	FUNCTION_56
0x1b9	            0x85c0	                           test eax, eax	       135	trace.h	FUNCTION_56
0x1bb	            0x750f	                           jne 0x400020c	       135	trace.h	FUNCTION_56
0x1bd	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	trace.h	FUNCTION_56
0x1c1	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	       135	trace.h	FUNCTION_56
0x1c5	          0x83e001	                              and eax, 1	       135	trace.h	FUNCTION_56
0x1c8	            0x84c0	                             test al, al	       135	trace.h	FUNCTION_56
0x1ca	            0x7507	                           jne 0x4000213	       135	trace.h	FUNCTION_56
0x1cc	      0xb801000000	                              mov eax, 1	       135	trace.h	FUNCTION_56
0x1d1	            0xeb05	                           jmp 0x4000218	       135	trace.h	FUNCTION_56
0x1d3	      0xb800000000	                              mov eax, 0	       135	trace.h	FUNCTION_56
0x1d8	              0x5d	                                 pop rbp	       136	trace.h	FUNCTION_56
0x1d9	              0xc3	                                     ret	       136	trace.h	FUNCTION_56
fstat_output	WHILE,0:functions,0:SWITCH,0:IF,1:ELSE,0:DO,0:FOR,0:CALL,2	25
0x756	              0x55	                                push rbp	       111	entry.c	FUNCTION_6
0x757	          0x4889e5	                            mov rbp, rsp	       111	entry.c	FUNCTION_6
0x75a	        0x4883ec20	                           sub rsp, 0x20	       111	entry.c	FUNCTION_6
0x75e	          0x897dfc	                mov dword [rbp - 4], edi	       111	entry.c	FUNCTION_6
0x761	        0x488975f0	             mov qword [rbp - 0x10], rsi	       111	entry.c	FUNCTION_6
0x765	        0x488955e8	             mov qword [rbp - 0x18], rdx	       111	entry.c	FUNCTION_6
0x769	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       113	entry.c	FUNCTION_6	IF_1	CALL_1
0x76d	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       113	entry.c	FUNCTION_6	IF_1	CALL_1
0x771	          0x83e008	                              and eax, 8	       113	entry.c	FUNCTION_6	IF_1	CALL_1
0x774	            0x84c0	                             test al, al	       113	entry.c	FUNCTION_6	IF_1	CALL_1
0x776	            0x7423	                            je 0x40007db	       113	entry.c	FUNCTION_6	IF_1	CALL_1
0x778	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       114	entry.c	FUNCTION_6	IF_1
0x77c	          0x8b4010	            mov eax, dword [rax + 0x10] 	       114	entry.c	FUNCTION_6	IF_1
0x77f	            0x85c0	                           test eax, eax	       114	entry.c	FUNCTION_6	IF_1
0x781	            0x7518	                           jne 0x40007db	       114	entry.c	FUNCTION_6	IF_1
0x783	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       115	entry.c	FUNCTION_6	IF_1	CALL_2
0x787	          0x8b45fc	                mov eax, dword [rbp - 4]	       115	entry.c	FUNCTION_6	IF_1	CALL_2
0x78a	          0x4889d6	                            mov rsi, rdx	       115	entry.c	FUNCTION_6	IF_1	CALL_2
0x78d	            0x89c7	                            mov edi, eax	       115	entry.c	FUNCTION_6	IF_1	CALL_2
0x78f	      0xe800000000	                          call 0x40007d4	       115	entry.c	FUNCTION_6	IF_1	CALL_2
0x794	      0xb801000000	                              mov eax, 1	       116	entry.c	FUNCTION_6	IF_1
0x799	            0xeb05	                           jmp 0x40007e0	       116	entry.c	FUNCTION_6	IF_1
0x79b	      0xb800000000	                              mov eax, 0	       118	entry.c	FUNCTION_6
0x7a0	              0xc9	                                   leave	       119	entry.c	FUNCTION_6
0x7a1	              0xc3	                                     ret	       119	entry.c	FUNCTION_6
strbuf_addch	WHILE,0:functions,0:SWITCH,0:IF,1:ELSE,0:DO,0:FOR,0:CALL,2	33
0xdb	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_17
0xdc	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_17
0xdf	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_17
0xe3	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_17
0xe7	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_17
0xea	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_17	IF_1	CALL_1
0xee	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_17	IF_1	CALL_1
0xf1	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_17	IF_1	CALL_1
0xf6	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_17	IF_1	CALL_1
0xf9	            0x7511	                           jne 0x400014c	       227	strbuf.h	FUNCTION_17	IF_1	CALL_1
0xfb	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_17	CALL_2
0xff	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_17	CALL_2
0x104	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_17	CALL_2
0x107	      0xe800000000	                          call 0x400014c	       228	strbuf.h	FUNCTION_17	CALL_2
0x10c	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_17
0x110	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_17
0x114	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_17
0x118	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_17
0x11c	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_17
0x120	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_17
0x124	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_17
0x128	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_17
0x12b	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_17
0x12e	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_17
0x130	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_17
0x134	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_17
0x138	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_17
0x13c	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_17
0x140	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_17
0x143	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_17
0x146	              0x90	                                     nop	       231	strbuf.h	FUNCTION_17
0x147	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_17
0x148	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_17
finish_delayed_checkout	WHILE,1:functions,2:SWITCH,0:IF,1:ELSE,0:DO,0:FOR,0:CALL,7	217
0x914	              0x55	                                push rbp	       164	entry.c	FUNCTION_10
0x915	          0x4889e5	                            mov rbp, rsp	       164	entry.c	FUNCTION_10
0x918	              0x53	                                push rbx	       164	entry.c	FUNCTION_10
0x919	    0x4881ec880000	                           sub rsp, 0x88	       164	entry.c	FUNCTION_10
0x920	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       164	entry.c	FUNCTION_10
0x927	    0x64488b042528	                mov rax, qword fs:[0x28]	       164	entry.c	FUNCTION_10
0x930	        0x488945e8	             mov qword [rbp - 0x18], rax	       164	entry.c	FUNCTION_10
0x934	            0x31c0	                            xor eax, eax	       164	entry.c	FUNCTION_10
0x936	    0xc74588000000	               mov dword [rbp - 0x78], 0	       165	entry.c	FUNCTION_10
0x93d	    0x48c745980000	               mov qword [rbp - 0x68], 0	       167	entry.c	FUNCTION_10
0x945	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       170	entry.c	FUNCTION_10
0x94c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       170	entry.c	FUNCTION_10
0x950	        0x488945b0	             mov qword [rbp - 0x50], rax	       170	entry.c	FUNCTION_10
0x954	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       172	entry.c	FUNCTION_10	IF_1
0x95b	        0x488b4018	            mov rax, qword [rax + 0x18] 	       172	entry.c	FUNCTION_10	IF_1
0x95f	          0x4885c0	                           test rax, rax	       172	entry.c	FUNCTION_10	IF_1
0x962	            0x7508	                           jne 0x40009ac	       172	entry.c	FUNCTION_10	IF_1
0x964	          0x8b4588	             mov eax, dword [rbp - 0x78]	       173	entry.c	FUNCTION_10	IF_1
0x967	      0xe9f8020000	                           jmp 0x4000ca4	       173	entry.c	FUNCTION_10	IF_1
0x96c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       175	entry.c	FUNCTION_10
0x970	    0xc70002000000	                      mov dword [rax], 2	       175	entry.c	FUNCTION_10
0x976	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       176	entry.c	FUNCTION_10
0x97a	          0x8b4030	            mov eax, dword [rax + 0x30] 	       176	entry.c	FUNCTION_10
0x97d	          0x89458c	             mov dword [rbp - 0x74], eax	       176	entry.c	FUNCTION_10
0x980	          0x8b5d8c	             mov ebx, dword [rbp - 0x74]	       177	entry.c	FUNCTION_10	CALL_2
0x983	      0xbf00000000	                              mov edi, 0	       177	entry.c	FUNCTION_10	CALL_2
0x988	      0xe8f1f7ffff	                               call sym.	       177	entry.c	FUNCTION_10	CALL_2
0x98d	          0x4889de	                            mov rsi, rbx	       177	entry.c	FUNCTION_10	CALL_2
0x990	          0x4889c7	                            mov rdi, rax	       177	entry.c	FUNCTION_10	CALL_2
0x993	      0xe800000000	                          call 0x40009d8	       177	entry.c	FUNCTION_10	CALL_2
0x998	        0x48894590	             mov qword [rbp - 0x70], rax	       177	entry.c	FUNCTION_10	CALL_2
0x99c	      0xe9fb010000	                           jmp 0x4000bdc	       178	entry.c	FUNCTION_10	WHILE_1
0x9a1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x9a5	        0x488b4008	                mov rax, qword [rax + 8]	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x9a9	        0x488945a0	             mov qword [rbp - 0x60], rax	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x9ad	      0xe9ac010000	                           jmp 0x4000b9e	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x9b2	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       180	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x9ba	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       180	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x9c1	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       180	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x9c8	         0xfb645d0	            movzx eax, byte [rbp - 0x30]	       180	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x9cc	          0x83e0fe	                     and eax, 0xfffffffe	       180	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x9cf	          0x8845d0	               mov byte [rbp - 0x30], al	       180	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x9d2	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       180	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0x9da	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       181	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_1
0x9de	          0x8b4030	            mov eax, dword [rax + 0x30] 	       181	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_1
0x9e1	          0x8b558c	             mov edx, dword [rbp - 0x74]	       181	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_1
0x9e4	            0x29c2	                            sub edx, eax	       181	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_1
0x9e6	            0x89d0	                            mov eax, edx	       181	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_1
0x9e8	            0x89c2	                            mov edx, eax	       181	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_1
0x9ea	        0x488b4590	             mov rax, qword [rbp - 0x70]	       181	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_1
0x9ee	          0x4889d6	                            mov rsi, rdx	       181	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_1
0x9f1	          0x4889c7	                            mov rdi, rax	       181	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_1
0x9f4	      0xe800000000	                          call 0x4000a39	       181	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_1
0x9f9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       183	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1	CALL_2
0x9fd	          0x488b00	                    mov rax, qword [rax]	       183	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1	CALL_2
0xa00	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       183	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1	CALL_2
0xa04	          0x4889d6	                            mov rsi, rdx	       183	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1	CALL_2
0xa07	          0x4889c7	                            mov rdi, rax	       183	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1	CALL_2
0xa0a	      0xe800000000	                          call 0x4000a4f	       183	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1	CALL_2
0xa0f	            0x85c0	                           test eax, eax	       183	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1	CALL_2
0xa11	            0x7517	                           jne 0x4000a6a	       183	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1	CALL_2
0xa13	    0xc74588010000	               mov dword [rbp - 0x78], 1	       185	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1
0xa1a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       186	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1
0xa1e	    0x48c700000000	                      mov qword [rax], 0	       186	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1
0xa25	      0xe92f010000	                           jmp 0x4000b99	       187	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_1
0xa2a	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       189	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_2
0xa2d	            0x85c0	                           test eax, eax	       189	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_2
0xa2f	            0x7510	                           jne 0x4000a81	       189	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_2
0xa31	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       196	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_2
0xa35	    0x48c700000000	                      mov qword [rax], 0	       196	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_2
0xa3c	      0xe918010000	                           jmp 0x4000b99	       197	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	IF_2
0xa41	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       205	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_3
0xa45	        0x488d7828	                   lea rdi, [rax + 0x28]	       205	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_3
0xa49	        0x488d45c0	                   lea rax, [rbp - 0x40]	       205	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_3
0xa4d	          0x4889c1	                            mov rcx, rax	       205	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_3
0xa50	      0xba00000000	                              mov edx, 0	       205	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_3
0xa55	      0xbe00000000	                              mov esi, 0	       205	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_3
0xa5a	      0xe800000000	                          call 0x4000a9f	       205	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1	CALL_3
0xa5f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xa63	        0x488945a8	             mov qword [rbp - 0x58], rax	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xa67	      0xe9cc000000	                           jmp 0x4000b78	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xa6c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       211	entry.c	FUNCTION_10	WHILE_1	IF_1
0xa70	        0x488b4008	                mov rax, qword [rax + 8]	       211	entry.c	FUNCTION_10	WHILE_1	IF_1
0xa74	          0x4885c0	                           test rax, rax	       211	entry.c	FUNCTION_10	WHILE_1	IF_1
0xa77	            0x7539	                           jne 0x4000af2	       211	entry.c	FUNCTION_10	WHILE_1	IF_1
0xa79	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       212	entry.c	FUNCTION_10	WHILE_1	IF_1	CALL_1
0xa7d	          0x488b10	                    mov rdx, qword [rax]	       212	entry.c	FUNCTION_10	WHILE_1	IF_1	CALL_1
0xa80	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       212	entry.c	FUNCTION_10	WHILE_1	IF_1	CALL_1
0xa84	          0x488b00	                    mov rax, qword [rax]	       212	entry.c	FUNCTION_10	WHILE_1	IF_1	CALL_1
0xa87	          0x4889c6	                            mov rsi, rax	       212	entry.c	FUNCTION_10	WHILE_1	IF_1	CALL_1
0xa8a	      0xbf00000000	                              mov edi, 0	       212	entry.c	FUNCTION_10	WHILE_1	IF_1	CALL_1
0xa8f	      0xb800000000	                              mov eax, 0	       212	entry.c	FUNCTION_10	WHILE_1	IF_1	CALL_1
0xa94	      0xe800000000	                          call 0x4000ad9	       212	entry.c	FUNCTION_10	WHILE_1	IF_1	CALL_1
0xa99	      0xe862f5ffff	                    call sym.const_error	       212	entry.c	FUNCTION_10	WHILE_1	IF_1	CALL_1
0xa9e	        0x834d8801	                or dword [rbp - 0x78], 1	       216	entry.c	FUNCTION_10	WHILE_1	IF_1
0xaa2	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       222	entry.c	FUNCTION_10	WHILE_1	IF_1
0xaa6	    0x48c700000000	                      mov qword [rax], 0	       222	entry.c	FUNCTION_10	WHILE_1	IF_1
0xaad	      0xe981000000	                           jmp 0x4000b73	       223	entry.c	FUNCTION_10	WHILE_1	IF_1
0xab2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       226	entry.c	FUNCTION_10	WHILE_1	CALL_3
0xab6	          0x488b00	                    mov rax, qword [rax]	       226	entry.c	FUNCTION_10	WHILE_1	CALL_3
0xab9	          0x4889c7	                            mov rdi, rax	       226	entry.c	FUNCTION_10	WHILE_1	CALL_3
0xabc	      0xe800000000	                          call 0x4000b01	       226	entry.c	FUNCTION_10	WHILE_1	CALL_3
0xac1	            0x89c2	                            mov edx, eax	       225	entry.c	FUNCTION_10	WHILE_1	CALL_2
0xac3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       225	entry.c	FUNCTION_10	WHILE_1	CALL_2
0xac7	          0x488b30	                    mov rsi, qword [rax]	       225	entry.c	FUNCTION_10	WHILE_1	CALL_2
0xaca	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       225	entry.c	FUNCTION_10	WHILE_1	CALL_2
0xad1	          0x488b00	                    mov rax, qword [rax]	       225	entry.c	FUNCTION_10	WHILE_1	CALL_2
0xad4	      0xb900000000	                              mov ecx, 0	       225	entry.c	FUNCTION_10	WHILE_1	CALL_2
0xad9	          0x4889c7	                            mov rdi, rax	       225	entry.c	FUNCTION_10	WHILE_1	CALL_2
0xadc	      0xe800000000	                          call 0x4000b21	       225	entry.c	FUNCTION_10	WHILE_1	CALL_2
0xae1	        0x488945b8	             mov qword [rbp - 0x48], rax	       225	entry.c	FUNCTION_10	WHILE_1	CALL_2
0xae5	      0x48837db800	               cmp qword [rbp - 0x48], 0	       227	entry.c	FUNCTION_10	WHILE_1	IF_2
0xaea	            0x7440	                            je 0x4000b6c	       227	entry.c	FUNCTION_10	WHILE_1	IF_2
0xaec	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	       228	entry.c	FUNCTION_10	WHILE_1	IF_2	CALL_4
0xaf3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       228	entry.c	FUNCTION_10	WHILE_1	IF_2	CALL_4
0xaf7	      0xba00000000	                              mov edx, 0	       228	entry.c	FUNCTION_10	WHILE_1	IF_2	CALL_4
0xafc	          0x4889ce	                            mov rsi, rcx	       228	entry.c	FUNCTION_10	WHILE_1	IF_2	CALL_4
0xaff	          0x4889c7	                            mov rdi, rax	       228	entry.c	FUNCTION_10	WHILE_1	IF_2	CALL_4
0xb02	      0xe800000000	                          call 0x4000b47	       228	entry.c	FUNCTION_10	WHILE_1	IF_2	CALL_4
0xb07	           0x94588	              or dword [rbp - 0x78], eax	       228	entry.c	FUNCTION_10	WHILE_1	IF_2	CALL_4
0xb0a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       229	entry.c	FUNCTION_10	WHILE_1	IF_2
0xb0e	          0x8b4030	            mov eax, dword [rax + 0x30] 	       229	entry.c	FUNCTION_10	WHILE_1	IF_2
0xb11	            0x89c0	                            mov eax, eax	       229	entry.c	FUNCTION_10	WHILE_1	IF_2
0xb13	        0x48014598	            add qword [rbp - 0x68], rax 	       229	entry.c	FUNCTION_10	WHILE_1	IF_2
0xb17	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       230	entry.c	FUNCTION_10	WHILE_1	IF_2	CALL_5
0xb1b	        0x488b4590	             mov rax, qword [rbp - 0x70]	       230	entry.c	FUNCTION_10	WHILE_1	IF_2	CALL_5
0xb1f	          0x4889d6	                            mov rsi, rdx	       230	entry.c	FUNCTION_10	WHILE_1	IF_2	CALL_5
0xb22	          0x4889c7	                            mov rdi, rax	       230	entry.c	FUNCTION_10	WHILE_1	IF_2	CALL_5
0xb25	      0xe800000000	                          call 0x4000b6a	       230	entry.c	FUNCTION_10	WHILE_1	IF_2	CALL_5
0xb2a	            0xeb07	                           jmp 0x4000b73	       230	entry.c	FUNCTION_10	WHILE_1	IF_2	CALL_5
0xb2c	    0xc74588010000	               mov dword [rbp - 0x78], 1	       232	entry.c	FUNCTION_10	WHILE_1	ELSE_1
0xb33	      0x488345a810	            add qword [rbp - 0x58], 0x10	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xb38	      0x48837da800	               cmp qword [rbp - 0x58], 0	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xb3d	            0x741a	                            je 0x4000b99	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xb3f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xb43	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xb46	            0x89d2	                            mov edx, edx	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xb48	        0x48c1e204	                              shl rdx, 4	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xb4c	          0x4801d0	                            add rax, rdx	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xb4f	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xb53	     0xf8713ffffff	                            ja 0x4000aac	       208	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xb59	      0x488345a010	            add qword [rbp - 0x60], 0x10	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xb5e	      0x48837da000	               cmp qword [rbp - 0x60], 0	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xb63	            0x7422	                            je 0x4000bc7	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xb65	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xb69	        0x488b5008	                mov rdx, qword [rax + 8]	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xb6d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xb71	          0x8b4010	            mov eax, dword [rax + 0x10] 	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xb74	            0x89c0	                            mov eax, eax	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xb76	        0x48c1e004	                              shl rax, 4	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xb7a	          0x4801d0	                            add rax, rdx	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xb7d	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xb81	     0xf872bfeffff	                            ja 0x40009f2	       179	entry.c	FUNCTION_10	WHILE_1	FUNCTION_1
0xb87	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       235	entry.c	FUNCTION_10	WHILE_1	CALL_3
0xb8b	        0x4883c008	                              add rax, 8	       235	entry.c	FUNCTION_10	WHILE_1	CALL_3
0xb8f	      0xbe00000000	                              mov esi, 0	       235	entry.c	FUNCTION_10	WHILE_1	CALL_3
0xb94	          0x4889c7	                            mov rdi, rax	       235	entry.c	FUNCTION_10	WHILE_1	CALL_3
0xb97	      0xe800000000	                          call 0x4000bdc	       235	entry.c	FUNCTION_10	WHILE_1	CALL_3
0xb9c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       178	entry.c	FUNCTION_10	WHILE_1
0xba0	          0x8b4010	            mov eax, dword [rax + 0x10] 	       178	entry.c	FUNCTION_10	WHILE_1
0xba3	            0x85c0	                           test eax, eax	       178	entry.c	FUNCTION_10	WHILE_1
0xba5	     0xf85f6fdffff	                           jne 0x40009e1	       178	entry.c	FUNCTION_10	WHILE_1
0xbab	        0x488d4590	                   lea rax, [rbp - 0x70]	       237	entry.c	FUNCTION_10	CALL_4
0xbaf	          0x4889c7	                            mov rdi, rax	       237	entry.c	FUNCTION_10	CALL_4
0xbb2	      0xe800000000	                          call 0x4000bf7	       237	entry.c	FUNCTION_10	CALL_4
0xbb7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       238	entry.c	FUNCTION_10	CALL_5
0xbbb	        0x4883c008	                              add rax, 8	       238	entry.c	FUNCTION_10	CALL_5
0xbbf	      0xbe00000000	                              mov esi, 0	       238	entry.c	FUNCTION_10	CALL_5
0xbc4	          0x4889c7	                            mov rdi, rax	       238	entry.c	FUNCTION_10	CALL_5
0xbc7	      0xe800000000	                          call 0x4000c0c	       238	entry.c	FUNCTION_10	CALL_5
0xbcc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       241	entry.c	FUNCTION_10
0xbd0	          0x8b5030	            mov edx, dword [rax + 0x30] 	       241	entry.c	FUNCTION_10
0xbd3	          0x8b4588	             mov eax, dword [rbp - 0x78]	       241	entry.c	FUNCTION_10
0xbd6	             0x9d0	                             or eax, edx	       241	entry.c	FUNCTION_10
0xbd8	          0x894588	             mov dword [rbp - 0x78], eax	       241	entry.c	FUNCTION_10
0xbdb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       242	entry.c	FUNCTION_10	FUNCTION_2
0xbdf	        0x488b4028	            mov rax, qword [rax + 0x28] 	       242	entry.c	FUNCTION_10	FUNCTION_2
0xbe3	        0x488945a8	             mov qword [rbp - 0x58], rax	       242	entry.c	FUNCTION_10	FUNCTION_2
0xbe7	            0xeb23	                           jmp 0x4000c4c	       242	entry.c	FUNCTION_10	FUNCTION_2
0xbe9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       243	entry.c	FUNCTION_10	FUNCTION_2	CALL_1
0xbed	          0x488b00	                    mov rax, qword [rax]	       243	entry.c	FUNCTION_10	FUNCTION_2	CALL_1
0xbf0	          0x4889c6	                            mov rsi, rax	       243	entry.c	FUNCTION_10	FUNCTION_2	CALL_1
0xbf3	      0xbf00000000	                              mov edi, 0	       243	entry.c	FUNCTION_10	FUNCTION_2	CALL_1
0xbf8	      0xb800000000	                              mov eax, 0	       243	entry.c	FUNCTION_10	FUNCTION_2	CALL_1
0xbfd	      0xe800000000	                          call 0x4000c42	       243	entry.c	FUNCTION_10	FUNCTION_2	CALL_1
0xc02	      0xe8f9f3ffff	                    call sym.const_error	       243	entry.c	FUNCTION_10	FUNCTION_2	CALL_1
0xc07	      0x488345a810	            add qword [rbp - 0x58], 0x10	       242	entry.c	FUNCTION_10	FUNCTION_2
0xc0c	      0x48837da800	               cmp qword [rbp - 0x58], 0	       242	entry.c	FUNCTION_10	FUNCTION_2
0xc11	            0x741e	                            je 0x4000c71	       242	entry.c	FUNCTION_10	FUNCTION_2
0xc13	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       242	entry.c	FUNCTION_10	FUNCTION_2
0xc17	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       242	entry.c	FUNCTION_10	FUNCTION_2
0xc1b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       242	entry.c	FUNCTION_10	FUNCTION_2
0xc1f	          0x8b4030	            mov eax, dword [rax + 0x30] 	       242	entry.c	FUNCTION_10	FUNCTION_2
0xc22	            0x89c0	                            mov eax, eax	       242	entry.c	FUNCTION_10	FUNCTION_2
0xc24	        0x48c1e004	                              shl rax, 4	       242	entry.c	FUNCTION_10	FUNCTION_2
0xc28	          0x4801d0	                            add rax, rdx	       242	entry.c	FUNCTION_10	FUNCTION_2
0xc2b	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       242	entry.c	FUNCTION_10	FUNCTION_2
0xc2f	            0x77b8	                            ja 0x4000c29	       242	entry.c	FUNCTION_10	FUNCTION_2
0xc31	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       245	entry.c	FUNCTION_10	CALL_6
0xc35	        0x4883c028	                           add rax, 0x28	       245	entry.c	FUNCTION_10	CALL_6
0xc39	      0xbe00000000	                              mov esi, 0	       245	entry.c	FUNCTION_10	CALL_6
0xc3e	          0x4889c7	                            mov rdi, rax	       245	entry.c	FUNCTION_10	CALL_6
0xc41	      0xe800000000	                          call 0x4000c86	       245	entry.c	FUNCTION_10	CALL_6
0xc46	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       247	entry.c	FUNCTION_10	CALL_7
0xc4a	          0x4889c7	                            mov rdi, rax	       247	entry.c	FUNCTION_10	CALL_7
0xc4d	      0xe800000000	                          call 0x4000c92	       247	entry.c	FUNCTION_10	CALL_7
0xc52	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       248	entry.c	FUNCTION_10
0xc59	    0x48c740180000	               mov qword [rax + 0x18], 0	       248	entry.c	FUNCTION_10
0xc61	          0x8b4588	             mov eax, dword [rbp - 0x78]	       250	entry.c	FUNCTION_10
0xc64	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       251	entry.c	FUNCTION_10
0xc68	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       251	entry.c	FUNCTION_10
0xc71	            0x7405	                            je 0x4000cb8	       251	entry.c	FUNCTION_10
0xc73	      0xe800000000	                          call 0x4000cb8	       251	entry.c	FUNCTION_10
0xc78	    0x4881c4880000	                           add rsp, 0x88	       251	entry.c	FUNCTION_10
0xc7f	              0x5b	                                 pop rbx	       251	entry.c	FUNCTION_10
0xc80	              0x5d	                                 pop rbp	       251	entry.c	FUNCTION_10
0xc81	              0xc3	                                     ret	       251	entry.c	FUNCTION_10
is_dot_or_dotdot	WHILE,0:functions,0:SWITCH,0:IF,0:ELSE,0:DO,0:FOR,0:CALL,0	27
0x209	              0x55	                                push rbp	       276	dir.h	FUNCTION_57
0x20a	          0x4889e5	                            mov rbp, rsp	       276	dir.h	FUNCTION_57
0x20d	        0x48897df8	                mov qword [rbp - 8], rdi	       276	dir.h	FUNCTION_57
0x211	        0x488b45f8	                mov rax, qword [rbp - 8]	       277	dir.h	FUNCTION_57
0x215	           0xfb600	                   movzx eax, byte [rax]	       277	dir.h	FUNCTION_57
0x218	            0x3c2e	                            cmp al, 0x2e	       277	dir.h	FUNCTION_57
0x21a	            0x7534	                           jne 0x4000290	       277	dir.h	FUNCTION_57
0x21c	        0x488b45f8	                mov rax, qword [rbp - 8]	       278	dir.h	FUNCTION_57
0x220	        0x4883c001	                              add rax, 1	       278	dir.h	FUNCTION_57
0x224	           0xfb600	                   movzx eax, byte [rax]	       278	dir.h	FUNCTION_57
0x227	            0x84c0	                             test al, al	       277	dir.h	FUNCTION_57
0x229	            0x741e	                            je 0x4000289	       277	dir.h	FUNCTION_57
0x22b	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	dir.h	FUNCTION_57
0x22f	        0x4883c001	                              add rax, 1	       279	dir.h	FUNCTION_57
0x233	           0xfb600	                   movzx eax, byte [rax]	       279	dir.h	FUNCTION_57
0x236	            0x3c2e	                            cmp al, 0x2e	       278	dir.h	FUNCTION_57
0x238	            0x7516	                           jne 0x4000290	       278	dir.h	FUNCTION_57
0x23a	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	dir.h	FUNCTION_57
0x23e	        0x4883c002	                              add rax, 2	       279	dir.h	FUNCTION_57
0x242	           0xfb600	                   movzx eax, byte [rax]	       279	dir.h	FUNCTION_57
0x245	            0x84c0	                             test al, al	       279	dir.h	FUNCTION_57
0x247	            0x7507	                           jne 0x4000290	       279	dir.h	FUNCTION_57
0x249	      0xb801000000	                              mov eax, 1	       277	dir.h	FUNCTION_57
0x24e	            0xeb05	                           jmp 0x4000295	       277	dir.h	FUNCTION_57
0x250	      0xb800000000	                              mov eax, 0	       277	dir.h	FUNCTION_57
0x255	              0x5d	                                 pop rbp	       280	dir.h	FUNCTION_57
0x256	              0xc3	                                     ret	       280	dir.h	FUNCTION_57
mark_fsmonitor_invalid	WHILE,0:functions,0:SWITCH,0:IF,1:ELSE,0:DO,0:FOR,0:CALL,2	37
0x257	              0x55	                                push rbp	        65	fsmonitor.h	FUNCTION_61
0x258	          0x4889e5	                            mov rbp, rsp	        65	fsmonitor.h	FUNCTION_61
0x25b	        0x4883ec10	                           sub rsp, 0x10	        65	fsmonitor.h	FUNCTION_61
0x25f	        0x48897df8	                mov qword [rbp - 8], rdi	        65	fsmonitor.h	FUNCTION_61
0x263	        0x488975f0	             mov qword [rbp - 0x10], rsi	        65	fsmonitor.h	FUNCTION_61
0x267	    0x488b05000000	            mov rax, qword [0x040002ae] 	        66	fsmonitor.h	FUNCTION_61	IF_1
0x26e	          0x4885c0	                           test rax, rax	        66	fsmonitor.h	FUNCTION_61	IF_1
0x271	            0x7468	                            je 0x400031b	        66	fsmonitor.h	FUNCTION_61	IF_1
0x273	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        67	fsmonitor.h	FUNCTION_61	IF_1
0x277	          0x8b4038	            mov eax, dword [rax + 0x38] 	        67	fsmonitor.h	FUNCTION_61	IF_1
0x27a	      0x25ffffdfff	                     and eax, 0xffdfffff	        67	fsmonitor.h	FUNCTION_61	IF_1
0x27f	            0x89c2	                            mov edx, eax	        67	fsmonitor.h	FUNCTION_61	IF_1
0x281	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        67	fsmonitor.h	FUNCTION_61	IF_1
0x285	          0x895038	             mov dword [rax + 0x38], edx	        67	fsmonitor.h	FUNCTION_61	IF_1
0x288	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        68	fsmonitor.h	FUNCTION_61	IF_1	CALL_1
0x28c	        0x488d4858	                   lea rcx, [rax + 0x58]	        68	fsmonitor.h	FUNCTION_61	IF_1	CALL_1
0x290	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	fsmonitor.h	FUNCTION_61	IF_1	CALL_1
0x294	      0xba01000000	                              mov edx, 1	        68	fsmonitor.h	FUNCTION_61	IF_1	CALL_1
0x299	          0x4889ce	                            mov rsi, rcx	        68	fsmonitor.h	FUNCTION_61	IF_1	CALL_1
0x29c	          0x4889c7	                            mov rdi, rax	        68	fsmonitor.h	FUNCTION_61	IF_1	CALL_1
0x29f	      0xe800000000	                          call 0x40002e4	        68	fsmonitor.h	FUNCTION_61	IF_1	CALL_1
0x2a4	      0xbf00000000	                              mov edi, 0	        69	fsmonitor.h	FUNCTION_61	IF_1	CALL_2
0x2a9	      0xe8fcfeffff	                  call sym.trace_pass_fl	        69	fsmonitor.h	FUNCTION_61	IF_1	CALL_2
0x2ae	            0x85c0	                           test eax, eax	        69	fsmonitor.h	FUNCTION_61	IF_1	CALL_2
0x2b0	            0x7429	                            je 0x400031b	        69	fsmonitor.h	FUNCTION_61	IF_1	CALL_2
0x2b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        69	fsmonitor.h	FUNCTION_61	IF_1	CALL_2
0x2b6	        0x4883c058	                           add rax, 0x58	        69	fsmonitor.h	FUNCTION_61	IF_1	CALL_2
0x2ba	          0x4989c0	                             mov r8, rax	        69	fsmonitor.h	FUNCTION_61	IF_1	CALL_2
0x2bd	      0xb900000000	                              mov ecx, 0	        69	fsmonitor.h	FUNCTION_61	IF_1	CALL_2
0x2c2	      0xba00000000	                              mov edx, 0	        69	fsmonitor.h	FUNCTION_61	IF_1	CALL_2
0x2c7	      0xbe45000000	                           mov esi, 0x45	        69	fsmonitor.h	FUNCTION_61	IF_1	CALL_2
0x2cc	      0xbf00000000	                              mov edi, 0	        69	fsmonitor.h	FUNCTION_61	IF_1	CALL_2
0x2d1	      0xb800000000	                              mov eax, 0	        69	fsmonitor.h	FUNCTION_61	IF_1	CALL_2
0x2d6	      0xe800000000	                          call 0x400031b	        69	fsmonitor.h	FUNCTION_61	IF_1	CALL_2
0x2db	              0x90	                                     nop	        71	fsmonitor.h	FUNCTION_61
0x2dc	              0xc9	                                   leave	        71	fsmonitor.h	FUNCTION_61
0x2dd	              0xc3	                                     ret	        71	fsmonitor.h	FUNCTION_61
streaming_write_entry	WHILE,0:functions,0:SWITCH,0:IF,2:ELSE,0:DO,0:FOR,0:CALL,5	50
0x7a2	              0x55	                                push rbp	       125	entry.c	FUNCTION_7
0x7a3	          0x4889e5	                            mov rbp, rsp	       125	entry.c	FUNCTION_7
0x7a6	        0x4883ec40	                           sub rsp, 0x40	       125	entry.c	FUNCTION_7
0x7aa	        0x48897de8	             mov qword [rbp - 0x18], rdi	       125	entry.c	FUNCTION_7
0x7ae	        0x488975e0	             mov qword [rbp - 0x20], rsi	       125	entry.c	FUNCTION_7
0x7b2	        0x488955d8	             mov qword [rbp - 0x28], rdx	       125	entry.c	FUNCTION_7
0x7b6	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       125	entry.c	FUNCTION_7
0x7ba	        0x448945cc	             mov dword [rbp - 0x34], r8d	       125	entry.c	FUNCTION_7
0x7be	        0x4c894dc0	              mov qword [rbp - 0x40], r9	       125	entry.c	FUNCTION_7
0x7c2	    0xc745f8000000	                  mov dword [rbp - 8], 0	       126	entry.c	FUNCTION_7
0x7c9	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       129	entry.c	FUNCTION_7	CALL_1
0x7cc	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       129	entry.c	FUNCTION_7	CALL_1
0x7d0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       129	entry.c	FUNCTION_7	CALL_1
0x7d4	          0x4889ce	                            mov rsi, rcx	       129	entry.c	FUNCTION_7	CALL_1
0x7d7	          0x4889c7	                            mov rdi, rax	       129	entry.c	FUNCTION_7	CALL_1
0x7da	      0xe8e2feffff	                 call sym.open_output_fd	       129	entry.c	FUNCTION_7	CALL_1
0x7df	          0x8945fc	                mov dword [rbp - 4], eax	       129	entry.c	FUNCTION_7	CALL_1
0x7e2	        0x837dfc00	                  cmp dword [rbp - 4], 0	       130	entry.c	FUNCTION_7	IF_1
0x7e6	            0x7907	                           jns 0x400082f	       130	entry.c	FUNCTION_7	IF_1
0x7e8	      0xb8ffffffff	                     mov eax, 0xffffffff	       131	entry.c	FUNCTION_7	IF_1
0x7ed	            0xeb5d	                           jmp 0x400088c	       131	entry.c	FUNCTION_7	IF_1
0x7ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       133	entry.c	FUNCTION_7	CALL_2
0x7f3	        0x488d7044	                   lea rsi, [rax + 0x44]	       133	entry.c	FUNCTION_7	CALL_2
0x7f7	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       133	entry.c	FUNCTION_7	CALL_2
0x7fb	          0x8b45fc	                mov eax, dword [rbp - 4]	       133	entry.c	FUNCTION_7	CALL_2
0x7fe	      0xb901000000	                              mov ecx, 1	       133	entry.c	FUNCTION_7	CALL_2
0x803	            0x89c7	                            mov edi, eax	       133	entry.c	FUNCTION_7	CALL_2
0x805	      0xe800000000	                          call 0x400084a	       133	entry.c	FUNCTION_7	CALL_2
0x80a	           0x945f8	                 or dword [rbp - 8], eax	       133	entry.c	FUNCTION_7	CALL_2
0x80d	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       134	entry.c	FUNCTION_7	CALL_3
0x811	          0x8b45fc	                mov eax, dword [rbp - 4]	       134	entry.c	FUNCTION_7	CALL_3
0x814	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       134	entry.c	FUNCTION_7	CALL_3
0x818	          0x4889ce	                            mov rsi, rcx	       134	entry.c	FUNCTION_7	CALL_3
0x81b	            0x89c7	                            mov edi, eax	       134	entry.c	FUNCTION_7	CALL_3
0x81d	      0xe834ffffff	                   call sym.fstat_output	       134	entry.c	FUNCTION_7	CALL_3
0x822	            0x89c2	                            mov edx, eax	       134	entry.c	FUNCTION_7	CALL_3
0x824	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       134	entry.c	FUNCTION_7	CALL_3
0x828	            0x8910	                    mov dword [rax], edx	       134	entry.c	FUNCTION_7	CALL_3
0x82a	          0x8b45fc	                mov eax, dword [rbp - 4]	       135	entry.c	FUNCTION_7	CALL_4
0x82d	            0x89c7	                            mov edi, eax	       135	entry.c	FUNCTION_7	CALL_4
0x82f	      0xe800000000	                          call 0x4000874	       135	entry.c	FUNCTION_7	CALL_4
0x834	           0x945f8	                 or dword [rbp - 8], eax	       135	entry.c	FUNCTION_7	CALL_4
0x837	        0x837df800	                  cmp dword [rbp - 8], 0	       137	entry.c	FUNCTION_7	IF_2
0x83b	            0x740c	                            je 0x4000889	       137	entry.c	FUNCTION_7	IF_2
0x83d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       138	entry.c	FUNCTION_7	CALL_5
0x841	          0x4889c7	                            mov rdi, rax	       138	entry.c	FUNCTION_7	CALL_5
0x844	      0xe800000000	                          call 0x4000889	       138	entry.c	FUNCTION_7	CALL_5
0x849	          0x8b45f8	                mov eax, dword [rbp - 8]	       139	entry.c	FUNCTION_7
0x84c	              0xc9	                                   leave	       140	entry.c	FUNCTION_7
0x84d	              0xc3	                                     ret	       140	entry.c	FUNCTION_7
read_blob_entry	WHILE,0:functions,0:SWITCH,0:IF,2:ELSE,0:DO,0:FOR,0:CALL,2	33
0x647	              0x55	                                push rbp	        86	entry.c	FUNCTION_4
0x648	          0x4889e5	                            mov rbp, rsp	        86	entry.c	FUNCTION_4
0x64b	        0x4883ec30	                           sub rsp, 0x30	        86	entry.c	FUNCTION_4
0x64f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        86	entry.c	FUNCTION_4
0x653	        0x488975d0	             mov qword [rbp - 0x30], rsi	        86	entry.c	FUNCTION_4
0x657	    0x64488b042528	                mov rax, qword fs:[0x28]	        86	entry.c	FUNCTION_4
0x660	        0x488945f8	                mov qword [rbp - 8], rax	        86	entry.c	FUNCTION_4
0x664	            0x31c0	                            xor eax, eax	        86	entry.c	FUNCTION_4
0x666	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        88	entry.c	FUNCTION_4	CALL_1
0x66a	        0x488d4844	                   lea rcx, [rax + 0x44]	        88	entry.c	FUNCTION_4	CALL_1
0x66e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        88	entry.c	FUNCTION_4	CALL_1
0x672	        0x488d45ec	                   lea rax, [rbp - 0x14]	        88	entry.c	FUNCTION_4	CALL_1
0x676	          0x4889c6	                            mov rsi, rax	        88	entry.c	FUNCTION_4	CALL_1
0x679	          0x4889cf	                            mov rdi, rcx	        88	entry.c	FUNCTION_4	CALL_1
0x67c	      0xe859fbffff	               call sym.read_object_file	        88	entry.c	FUNCTION_4	CALL_1
0x681	        0x488945f0	             mov qword [rbp - 0x10], rax	        88	entry.c	FUNCTION_4	CALL_1
0x685	      0x48837df000	               cmp qword [rbp - 0x10], 0	        90	entry.c	FUNCTION_4	IF_1
0x68a	            0x741a	                            je 0x40006e6	        90	entry.c	FUNCTION_4	IF_1
0x68c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        91	entry.c	FUNCTION_4	IF_1	IF_2
0x68f	          0x83f803	                              cmp eax, 3	        91	entry.c	FUNCTION_4	IF_1	IF_2
0x692	            0x7506	                           jne 0x40006da	        91	entry.c	FUNCTION_4	IF_1	IF_2
0x694	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        92	entry.c	FUNCTION_4	IF_1	IF_2
0x698	            0xeb11	                           jmp 0x40006eb	        92	entry.c	FUNCTION_4	IF_1	IF_2
0x69a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        93	entry.c	FUNCTION_4	IF_1	CALL_2
0x69e	          0x4889c7	                            mov rdi, rax	        93	entry.c	FUNCTION_4	IF_1	CALL_2
0x6a1	      0xe800000000	                          call 0x40006e6	        93	entry.c	FUNCTION_4	IF_1	CALL_2
0x6a6	      0xb800000000	                              mov eax, 0	        95	entry.c	FUNCTION_4
0x6ab	        0x488b4df8	                mov rcx, qword [rbp - 8]	        96	entry.c	FUNCTION_4
0x6af	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        96	entry.c	FUNCTION_4
0x6b8	            0x7405	                            je 0x40006ff	        96	entry.c	FUNCTION_4
0x6ba	      0xe800000000	                          call 0x40006ff	        96	entry.c	FUNCTION_4
0x6bf	              0xc9	                                   leave	        96	entry.c	FUNCTION_4
0x6c0	              0xc3	                                     ret	        96	entry.c	FUNCTION_4
