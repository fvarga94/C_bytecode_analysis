diff_buf_idx	SWITCH,0:functions,0:WHILE,0:ELSE,0:IF,1:CALL,0:FOR,1:DO,0	20
0x25a	              0x55	                                push rbp	       165	diff.c	FUNCTION_5
0x25b	          0x4889e5	                            mov rbp, rsp	       165	diff.c	FUNCTION_5
0x25e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       165	diff.c	FUNCTION_5
0x262	    0xc745fc000000	                  mov dword [rbp - 4], 0	       168	diff.c	FUNCTION_5	FOR_1
0x269	            0xeb1f	                           jmp 0x40002ca	       168	diff.c	FUNCTION_5	FOR_1
0x26b	    0x488b05000000	            mov rax, qword [0x040002b2] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x272	          0x8b55fc	                mov edx, dword [rbp - 4]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x275	          0x4863d2	                         movsxd rdx, edx	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x278	        0x4883c20c	                            add rdx, 0xc	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x27c	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x280	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x284	            0x740c	                            je 0x40002d2	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x286	        0x8345fc01	                  add dword [rbp - 4], 1	       168	diff.c	FUNCTION_5	FOR_1
0x28a	        0x837dfc07	                  cmp dword [rbp - 4], 7	       168	diff.c	FUNCTION_5	FOR_1
0x28e	            0x7edb	                           jle 0x40002ab	       168	diff.c	FUNCTION_5	FOR_1
0x290	            0xeb01	                           jmp 0x40002d3	       168	diff.c	FUNCTION_5	FOR_1
0x292	              0x90	                                     nop	       170	diff.c	FUNCTION_5	FOR_1	IF_1
0x293	          0x8b45fc	                mov eax, dword [rbp - 4]	       171	diff.c	FUNCTION_5
0x296	              0x5d	                                 pop rbp	       172	diff.c	FUNCTION_5
0x297	              0xc3	                                     ret	       172	diff.c	FUNCTION_5
diff_cmp	SWITCH,0:functions,0:WHILE,1:ELSE,1:IF,5:CALL,9:FOR,0:DO,0	112
0x3568	              0x55	                                push rbp	      1679	diff.c	FUNCTION_29
0x3569	          0x4889e5	                            mov rbp, rsp	      1679	diff.c	FUNCTION_29
0x356c	        0x4883ec30	                           sub rsp, 0x30	      1679	diff.c	FUNCTION_29
0x3570	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1679	diff.c	FUNCTION_29
0x3574	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1679	diff.c	FUNCTION_29
0x3578	    0x64488b042528	                mov rax, qword fs:[0x28]	      1679	diff.c	FUNCTION_29
0x3581	        0x488945f8	                mov qword [rbp - 8], rax	      1679	diff.c	FUNCTION_29
0x3585	            0x31c0	                            xor eax, eax	      1679	diff.c	FUNCTION_29
0x3587	    0x8b0500000000	            mov eax, dword [0x040035cd] 	      1683	diff.c	FUNCTION_29	IF_1
0x358d	          0x83e006	                              and eax, 6	      1683	diff.c	FUNCTION_29	IF_1
0x3590	            0x85c0	                           test eax, eax	      1683	diff.c	FUNCTION_29	IF_1
0x3592	            0x7518	                           jne 0x40035ec	      1683	diff.c	FUNCTION_29	IF_1
0x3594	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1684	diff.c	FUNCTION_29	CALL_1
0x3598	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1684	diff.c	FUNCTION_29	CALL_1
0x359c	          0x4889d6	                            mov rsi, rdx	      1684	diff.c	FUNCTION_29	CALL_1
0x359f	          0x4889c7	                            mov rdi, rax	      1684	diff.c	FUNCTION_29	CALL_1
0x35a2	      0xe800000000	                          call 0x40035e7	      1684	diff.c	FUNCTION_29	CALL_1
0x35a7	      0xe923010000	                           jmp 0x400370f	      1684	diff.c	FUNCTION_29	CALL_1
0x35ac	    0x8b0500000000	            mov eax, dword [0x040035f2] 	      1685	diff.c	FUNCTION_29	IF_2
0x35b2	          0x83e002	                              and eax, 2	      1685	diff.c	FUNCTION_29	IF_2
0x35b5	            0x85c0	                           test eax, eax	      1685	diff.c	FUNCTION_29	IF_2
0x35b7	            0x742a	                            je 0x4003623	      1685	diff.c	FUNCTION_29	IF_2
0x35b9	    0x8b0500000000	            mov eax, dword [0x040035ff] 	      1685	diff.c	FUNCTION_29	IF_2
0x35bf	          0x83e004	                              and eax, 4	      1685	diff.c	FUNCTION_29	IF_2
0x35c2	            0x85c0	                           test eax, eax	      1685	diff.c	FUNCTION_29	IF_2
0x35c4	            0x751d	                           jne 0x4003623	      1685	diff.c	FUNCTION_29	IF_2
0x35c6	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1686	diff.c	FUNCTION_29	CALL_2
0x35ca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1686	diff.c	FUNCTION_29	CALL_2
0x35ce	      0xbaffffff7f	                     mov edx, 0x7fffffff	      1686	diff.c	FUNCTION_29	CALL_2
0x35d3	          0x4889ce	                            mov rsi, rcx	      1686	diff.c	FUNCTION_29	CALL_2
0x35d6	          0x4889c7	                            mov rdi, rax	      1686	diff.c	FUNCTION_29	CALL_2
0x35d9	      0xe800000000	                          call 0x400361e	      1686	diff.c	FUNCTION_29	CALL_2
0x35de	      0xe9ec000000	                           jmp 0x400370f	      1686	diff.c	FUNCTION_29	CALL_2
0x35e3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1689	diff.c	FUNCTION_29
0x35e7	        0x488945e8	             mov qword [rbp - 0x18], rax	      1689	diff.c	FUNCTION_29
0x35eb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1690	diff.c	FUNCTION_29
0x35ef	        0x488945f0	             mov qword [rbp - 0x10], rax	      1690	diff.c	FUNCTION_29
0x35f3	            0xeb7b	                           jmp 0x40036b0	      1691	diff.c	FUNCTION_29	WHILE_1
0x35f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x35f9	           0xfb600	                   movzx eax, byte [rax]	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x35fc	            0x3c20	                            cmp al, 0x20	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x35fe	            0x740b	                            je 0x400364b	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x3600	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x3604	           0xfb600	                   movzx eax, byte [rax]	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x3607	            0x3c09	                               cmp al, 9	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x3609	            0x7538	                           jne 0x4003683	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x360b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x360f	           0xfb600	                   movzx eax, byte [rax]	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x3612	            0x3c20	                            cmp al, 0x20	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x3614	            0x740b	                            je 0x4003661	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x3616	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x361a	           0xfb600	                   movzx eax, byte [rax]	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x361d	            0x3c09	                               cmp al, 9	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x361f	            0x7522	                           jne 0x4003683	      1693	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_4
0x3621	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1695	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_5
0x3625	          0x4889c7	                            mov rdi, rax	      1695	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_5
0x3628	      0xe800000000	                          call 0x400366d	      1695	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_5
0x362d	        0x488945e8	             mov qword [rbp - 0x18], rax	      1695	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_5
0x3631	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1696	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_6
0x3635	          0x4889c7	                            mov rdi, rax	      1696	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_6
0x3638	      0xe800000000	                          call 0x400367d	      1696	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_6
0x363d	        0x488945f0	             mov qword [rbp - 0x10], rax	      1696	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_6
0x3641	            0xeb2d	                           jmp 0x40036b0	      1696	diff.c	FUNCTION_29	WHILE_1	IF_3	CALL_6
0x3643	        0x488d55e4	                   lea rdx, [rbp - 0x1c]	      1700	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4	CALL_7
0x3647	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1700	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4	CALL_7
0x364b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1700	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4	CALL_7
0x364f	          0x4889ce	                            mov rsi, rcx	      1700	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4	CALL_7
0x3652	          0x4889c7	                            mov rdi, rax	      1700	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4	CALL_7
0x3655	      0xe8ebfdffff	                call sym.diff_equal_char	      1700	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4	CALL_7
0x365a	            0x85c0	                           test eax, eax	      1700	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4	CALL_7
0x365c	            0x742e	                            je 0x40036cc	      1700	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4	CALL_7
0x365e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1702	diff.c	FUNCTION_29	WHILE_1	ELSE_1
0x3661	            0x4898	                                    cdqe	      1702	diff.c	FUNCTION_29	WHILE_1	ELSE_1
0x3663	        0x480145e8	            add qword [rbp - 0x18], rax 	      1702	diff.c	FUNCTION_29	WHILE_1	ELSE_1
0x3667	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1703	diff.c	FUNCTION_29	WHILE_1	ELSE_1
0x366a	            0x4898	                                    cdqe	      1703	diff.c	FUNCTION_29	WHILE_1	ELSE_1
0x366c	        0x480145f0	            add qword [rbp - 0x10], rax 	      1703	diff.c	FUNCTION_29	WHILE_1	ELSE_1
0x3670	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1691	diff.c	FUNCTION_29	WHILE_1
0x3674	           0xfb600	                   movzx eax, byte [rax]	      1691	diff.c	FUNCTION_29	WHILE_1
0x3677	            0x84c0	                             test al, al	      1691	diff.c	FUNCTION_29	WHILE_1
0x3679	            0x7412	                            je 0x40036cd	      1691	diff.c	FUNCTION_29	WHILE_1
0x367b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1691	diff.c	FUNCTION_29	WHILE_1
0x367f	           0xfb600	                   movzx eax, byte [rax]	      1691	diff.c	FUNCTION_29	WHILE_1
0x3682	            0x84c0	                             test al, al	      1691	diff.c	FUNCTION_29	WHILE_1
0x3684	     0xf856bffffff	                           jne 0x4003635	      1691	diff.c	FUNCTION_29	WHILE_1
0x368a	            0xeb01	                           jmp 0x40036cd	      1691	diff.c	FUNCTION_29	WHILE_1
0x368c	              0x90	                                     nop	      1701	diff.c	FUNCTION_29	WHILE_1	ELSE_1	IF_4
0x368d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1708	diff.c	FUNCTION_29	CALL_8
0x3691	          0x4889c7	                            mov rdi, rax	      1708	diff.c	FUNCTION_29	CALL_8
0x3694	      0xe800000000	                          call 0x40036d9	      1708	diff.c	FUNCTION_29	CALL_8
0x3699	        0x488945e8	             mov qword [rbp - 0x18], rax	      1708	diff.c	FUNCTION_29	CALL_8
0x369d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1709	diff.c	FUNCTION_29	CALL_9
0x36a1	          0x4889c7	                            mov rdi, rax	      1709	diff.c	FUNCTION_29	CALL_9
0x36a4	      0xe800000000	                          call 0x40036e9	      1709	diff.c	FUNCTION_29	CALL_9
0x36a9	        0x488945f0	             mov qword [rbp - 0x10], rax	      1709	diff.c	FUNCTION_29	CALL_9
0x36ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1710	diff.c	FUNCTION_29	IF_5
0x36b1	           0xfb600	                   movzx eax, byte [rax]	      1710	diff.c	FUNCTION_29	IF_5
0x36b4	            0x84c0	                             test al, al	      1710	diff.c	FUNCTION_29	IF_5
0x36b6	            0x750b	                           jne 0x4003703	      1710	diff.c	FUNCTION_29	IF_5
0x36b8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1710	diff.c	FUNCTION_29	IF_5
0x36bc	           0xfb600	                   movzx eax, byte [rax]	      1710	diff.c	FUNCTION_29	IF_5
0x36bf	            0x84c0	                             test al, al	      1710	diff.c	FUNCTION_29	IF_5
0x36c1	            0x7407	                            je 0x400370a	      1710	diff.c	FUNCTION_29	IF_5
0x36c3	      0xb801000000	                              mov eax, 1	      1711	diff.c	FUNCTION_29	IF_5
0x36c8	            0xeb05	                           jmp 0x400370f	      1711	diff.c	FUNCTION_29	IF_5
0x36ca	      0xb800000000	                              mov eax, 0	      1712	diff.c	FUNCTION_29
0x36cf	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1713	diff.c	FUNCTION_29
0x36d3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1713	diff.c	FUNCTION_29
0x36dc	            0x7405	                            je 0x4003723	      1713	diff.c	FUNCTION_29
0x36de	      0xe800000000	                          call 0x4003723	      1713	diff.c	FUNCTION_29
0x36e3	              0xc9	                                   leave	      1713	diff.c	FUNCTION_29
0x36e4	              0xc3	                                     ret	      1713	diff.c	FUNCTION_29
set_diff_option	SWITCH,0:functions,0:WHILE,0:ELSE,0:IF,0:CALL,1:FOR,0:DO,0	33
0x201f	              0x55	                                push rbp	      1134	diff.c	FUNCTION_20
0x2020	          0x4889e5	                            mov rbp, rsp	      1134	diff.c	FUNCTION_20
0x2023	        0x4883ec20	                           sub rsp, 0x20	      1134	diff.c	FUNCTION_20
0x2027	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1134	diff.c	FUNCTION_20
0x202b	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1134	diff.c	FUNCTION_20
0x202e	    0x488b05000000	            mov rax, qword [0x04002075] 	      1135	diff.c	FUNCTION_20
0x2035	        0x488945f8	                mov qword [rbp - 8], rax	      1135	diff.c	FUNCTION_20
0x2039	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1137	diff.c	FUNCTION_20
0x203d	    0x488905000000	            mov qword [0x04002084], rax 	      1137	diff.c	FUNCTION_20
0x2044	    0x488b05000000	            mov rax, qword [0x0400208b] 	      1138	diff.c	FUNCTION_20
0x204b	        0x488b4008	                mov rax, qword [rax + 8]	      1138	diff.c	FUNCTION_20
0x204f	    0x488905000000	            mov qword [0x04002096], rax 	      1138	diff.c	FUNCTION_20
0x2056	    0x8b0500000000	            mov eax, dword [0x0400209c] 	      1139	diff.c	FUNCTION_20
0x205c	          0x83c001	                              add eax, 1	      1139	diff.c	FUNCTION_20
0x205f	    0x890500000000	            mov dword [0x040020a5], eax 	      1139	diff.c	FUNCTION_20
0x2065	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1140	diff.c	FUNCTION_20	CALL_1
0x2068	            0x4898	                                    cdqe	      1140	diff.c	FUNCTION_20	CALL_1
0x206a	      0xb904000000	                              mov ecx, 4	      1140	diff.c	FUNCTION_20	CALL_1
0x206f	      0xba00000000	                              mov edx, 0	      1140	diff.c	FUNCTION_20	CALL_1
0x2074	          0x4889c6	                            mov rsi, rax	      1140	diff.c	FUNCTION_20	CALL_1
0x2077	      0xbf00000000	                              mov edi, 0	      1140	diff.c	FUNCTION_20	CALL_1
0x207c	      0xe800000000	                          call 0x40020c1	      1140	diff.c	FUNCTION_20	CALL_1
0x2081	    0x8b0500000000	            mov eax, dword [0x040020c7] 	      1141	diff.c	FUNCTION_20
0x2087	          0x83e801	                              sub eax, 1	      1141	diff.c	FUNCTION_20
0x208a	    0x890500000000	            mov dword [0x040020d0], eax 	      1141	diff.c	FUNCTION_20
0x2090	        0x488b45f8	                mov rax, qword [rbp - 8]	      1142	diff.c	FUNCTION_20
0x2094	    0x488905000000	            mov qword [0x040020db], rax 	      1142	diff.c	FUNCTION_20
0x209b	    0x488b05000000	            mov rax, qword [0x040020e2] 	      1143	diff.c	FUNCTION_20
0x20a2	        0x488b4008	                mov rax, qword [rax + 8]	      1143	diff.c	FUNCTION_20
0x20a6	    0x488905000000	            mov qword [0x040020ed], rax 	      1143	diff.c	FUNCTION_20
0x20ad	              0x90	                                     nop	      1144	diff.c	FUNCTION_20
0x20ae	              0xc9	                                   leave	      1144	diff.c	FUNCTION_20
0x20af	              0xc3	                                     ret	      1144	diff.c	FUNCTION_20
diff_read	SWITCH,0:functions,0:WHILE,3:ELSE,7:IF,21:CALL,15:FOR,5:DO,0	485
0x2571	              0x55	                                push rbp	      1288	diff.c	FUNCTION_23
0x2572	          0x4889e5	                            mov rbp, rsp	      1288	diff.c	FUNCTION_23
0x2575	    0x4881ece00000	                           sub rsp, 0xe0	      1288	diff.c	FUNCTION_23
0x257c	    0x89bd2cffffff	             mov dword [rbp - 0xd4], edi	      1288	diff.c	FUNCTION_23
0x2582	    0x89b528ffffff	             mov dword [rbp - 0xd8], esi	      1288	diff.c	FUNCTION_23
0x2588	    0x48899520ffff	             mov qword [rbp - 0xe0], rdx	      1288	diff.c	FUNCTION_23
0x258f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1288	diff.c	FUNCTION_23
0x2598	        0x488945f8	                mov qword [rbp - 8], rax	      1288	diff.c	FUNCTION_23
0x259c	            0x31c0	                            xor eax, eax	      1288	diff.c	FUNCTION_23
0x259e	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      1290	diff.c	FUNCTION_23
0x25a9	    0x488b05000000	            mov rax, qword [0x040025f0] 	      1291	diff.c	FUNCTION_23
0x25b0	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1291	diff.c	FUNCTION_23
0x25b4	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      1291	diff.c	FUNCTION_23
0x25bb	    0xc78540ffffff	               mov dword [rbp - 0xc0], 1	      1301	diff.c	FUNCTION_23
0x25c5	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1303	diff.c	FUNCTION_23	CALL_1
0x25cc	      0xbe00000000	                              mov esi, 0	      1303	diff.c	FUNCTION_23	CALL_1
0x25d1	          0x4889c7	                            mov rdi, rax	      1303	diff.c	FUNCTION_23	CALL_1
0x25d4	      0xe800000000	                          call 0x4002619	      1303	diff.c	FUNCTION_23	CALL_1
0x25d9	        0x488945a8	             mov qword [rbp - 0x58], rax	      1303	diff.c	FUNCTION_23	CALL_1
0x25dd	      0x48837da800	               cmp qword [rbp - 0x58], 0	      1304	diff.c	FUNCTION_23	IF_1
0x25e2	            0x7517	                           jne 0x400263b	      1304	diff.c	FUNCTION_23	IF_1
0x25e4	      0xbf00000000	                              mov edi, 0	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x25e9	      0xe800000000	                          call 0x400262e	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x25ee	          0x4889c7	                            mov rdi, rax	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x25f1	      0xe800000000	                          call 0x4002636	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x25f6	      0xe96c080000	                           jmp 0x4002ea7	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x25fb	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1312	diff.c	FUNCTION_23	FOR_1	IF_2	CALL_4
0x25ff	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1312	diff.c	FUNCTION_23	FOR_1	IF_2	CALL_4
0x2603	      0xbe32000000	                           mov esi, 0x32	      1312	diff.c	FUNCTION_23	FOR_1	IF_2	CALL_4
0x2608	          0x4889c7	                            mov rdi, rax	      1312	diff.c	FUNCTION_23	FOR_1	IF_2	CALL_4
0x260b	      0xe800000000	                          call 0x4002650	      1312	diff.c	FUNCTION_23	FOR_1	IF_2	CALL_4
0x2610	            0x85c0	                           test eax, eax	      1312	diff.c	FUNCTION_23	FOR_1	IF_2	CALL_4
0x2612	     0xf85df070000	                           jne 0x4002e37	      1312	diff.c	FUNCTION_23	FOR_1	IF_2	CALL_4
0x2618	      0xe800000000	                          call 0x400265d	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_5
0x261d	          0x488b00	                    mov rax, qword [rax]	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_5
0x2620	         0xfb655c0	            movzx edx, byte [rbp - 0x40]	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_5
0x2624	           0xfb6d2	                           movzx edx, dl	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_5
0x2627	          0x4801d2	                            add rdx, rdx	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_5
0x262a	          0x4801d0	                            add rax, rdx	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_5
0x262d	           0xfb700	                   movzx eax, word [rax]	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_5
0x2630	           0xfb7c0	                           movzx eax, ax	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_5
0x2633	      0x2500080000	                          and eax, 0x800	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_5
0x2638	            0x85c0	                           test eax, eax	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_5
0x263a	     0xf84a5070000	                            je 0x4002e25	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_5
0x2640	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1322	diff.c	FUNCTION_23	FOR_1
0x2644	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1322	diff.c	FUNCTION_23	FOR_1
0x264b	    0x488d8548ffff	                   lea rax, [rbp - 0xb8]	      1323	diff.c	FUNCTION_23	FOR_1	CALL_6
0x2652	          0x4889c7	                            mov rdi, rax	      1323	diff.c	FUNCTION_23	FOR_1	CALL_6
0x2655	      0xe800000000	                          call 0x400269a	      1323	diff.c	FUNCTION_23	FOR_1	CALL_6
0x265a	        0x488945b0	             mov qword [rbp - 0x50], rax	      1323	diff.c	FUNCTION_23	FOR_1	CALL_6
0x265e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1324	diff.c	FUNCTION_23	FOR_1	IF_4
0x2665	           0xfb600	                   movzx eax, byte [rax]	      1324	diff.c	FUNCTION_23	FOR_1	IF_4
0x2668	            0x3c2c	                            cmp al, 0x2c	      1324	diff.c	FUNCTION_23	FOR_1	IF_4
0x266a	            0x752a	                           jne 0x40026d6	      1324	diff.c	FUNCTION_23	FOR_1	IF_4
0x266c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1326	diff.c	FUNCTION_23	FOR_1	IF_4
0x2673	        0x4883c001	                              add rax, 1	      1326	diff.c	FUNCTION_23	FOR_1	IF_4
0x2677	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1326	diff.c	FUNCTION_23	FOR_1	IF_4
0x267e	    0x488d8548ffff	                   lea rax, [rbp - 0xb8]	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_7
0x2685	          0x4889c7	                            mov rdi, rax	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_7
0x2688	      0xe800000000	                          call 0x40026cd	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_7
0x268d	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_7
0x2694	            0xeb0b	                           jmp 0x40026e1	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_7
0x2696	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1330	diff.c	FUNCTION_23	FOR_1	ELSE_1
0x269a	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1330	diff.c	FUNCTION_23	FOR_1	ELSE_1
0x26a1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x26a8	           0xfb600	                   movzx eax, byte [rax]	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x26ab	            0x3c61	                            cmp al, 0x61	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x26ad	            0x7420	                            je 0x400270f	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x26af	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x26b6	           0xfb600	                   movzx eax, byte [rax]	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x26b9	            0x3c63	                            cmp al, 0x63	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x26bb	            0x7412	                            je 0x400270f	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x26bd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x26c4	           0xfb600	                   movzx eax, byte [rax]	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x26c7	            0x3c64	                            cmp al, 0x64	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x26c9	     0xf851c070000	                           jne 0x4002e2b	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x26cf	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1333	diff.c	FUNCTION_23	FOR_1
0x26d6	        0x488d5001	                      lea rdx, [rax + 1]	      1333	diff.c	FUNCTION_23	FOR_1
0x26da	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	      1333	diff.c	FUNCTION_23	FOR_1
0x26e1	           0xfb600	                   movzx eax, byte [rax]	      1333	diff.c	FUNCTION_23	FOR_1
0x26e4	           0xfb6c0	                           movzx eax, al	      1333	diff.c	FUNCTION_23	FOR_1
0x26e7	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	      1333	diff.c	FUNCTION_23	FOR_1
0x26ed	    0x488d8548ffff	                   lea rax, [rbp - 0xb8]	      1334	diff.c	FUNCTION_23	FOR_1	CALL_8
0x26f4	          0x4889c7	                            mov rdi, rax	      1334	diff.c	FUNCTION_23	FOR_1	CALL_8
0x26f7	      0xe800000000	                          call 0x400273c	      1334	diff.c	FUNCTION_23	FOR_1	CALL_8
0x26fc	        0x488945b8	             mov qword [rbp - 0x48], rax	      1334	diff.c	FUNCTION_23	FOR_1	CALL_8
0x2700	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1335	diff.c	FUNCTION_23	FOR_1	IF_6
0x2707	           0xfb600	                   movzx eax, byte [rax]	      1335	diff.c	FUNCTION_23	FOR_1	IF_6
0x270a	            0x3c2c	                            cmp al, 0x2c	      1335	diff.c	FUNCTION_23	FOR_1	IF_6
0x270c	            0x752a	                           jne 0x4002778	      1335	diff.c	FUNCTION_23	FOR_1	IF_6
0x270e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1337	diff.c	FUNCTION_23	FOR_1	IF_6
0x2715	        0x4883c001	                              add rax, 1	      1337	diff.c	FUNCTION_23	FOR_1	IF_6
0x2719	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1337	diff.c	FUNCTION_23	FOR_1	IF_6
0x2720	    0x488d8548ffff	                   lea rax, [rbp - 0xb8]	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_9
0x2727	          0x4889c7	                            mov rdi, rax	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_9
0x272a	      0xe800000000	                          call 0x400276f	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_9
0x272f	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_9
0x2736	            0xeb0b	                           jmp 0x4002783	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_9
0x2738	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1341	diff.c	FUNCTION_23	FOR_1	ELSE_2
0x273c	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      1341	diff.c	FUNCTION_23	FOR_1	ELSE_2
0x2743	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x274a	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x274e	     0xf8c9d060000	                            jl 0x4002e31	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x2754	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x275b	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x275f	     0xf8c8c060000	                            jl 0x4002e31	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x2765	    0x83bd44ffffff	           cmp dword [rbp - 0xbc], 0x61 	      1345	diff.c	FUNCTION_23	FOR_1	IF_8
0x276c	            0x7516	                           jne 0x40027c4	      1345	diff.c	FUNCTION_23	FOR_1	IF_8
0x276e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1347	diff.c	FUNCTION_23	FOR_1	IF_8
0x2772	        0x4883c001	                              add rax, 1	      1347	diff.c	FUNCTION_23	FOR_1	IF_8
0x2776	        0x48894588	             mov qword [rbp - 0x78], rax	      1347	diff.c	FUNCTION_23	FOR_1	IF_8
0x277a	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1348	diff.c	FUNCTION_23	FOR_1	IF_8
0x2782	            0xeb1b	                           jmp 0x40027df	      1348	diff.c	FUNCTION_23	FOR_1	IF_8
0x2784	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1352	diff.c	FUNCTION_23	FOR_1	ELSE_3
0x2788	        0x48894588	             mov qword [rbp - 0x78], rax	      1352	diff.c	FUNCTION_23	FOR_1	ELSE_3
0x278c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1353	diff.c	FUNCTION_23	FOR_1	ELSE_3
0x2793	        0x482b45b0	             sub rax, qword [rbp - 0x50]	      1353	diff.c	FUNCTION_23	FOR_1	ELSE_3
0x2797	        0x4883c001	                              add rax, 1	      1353	diff.c	FUNCTION_23	FOR_1	ELSE_3
0x279b	        0x48894598	             mov qword [rbp - 0x68], rax	      1353	diff.c	FUNCTION_23	FOR_1	ELSE_3
0x279f	    0x83bd44ffffff	           cmp dword [rbp - 0xbc], 0x64 	      1355	diff.c	FUNCTION_23	FOR_1	IF_9
0x27a6	            0x7516	                           jne 0x40027fe	      1355	diff.c	FUNCTION_23	FOR_1	IF_9
0x27a8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1357	diff.c	FUNCTION_23	FOR_1	IF_9
0x27ac	        0x4883c001	                              add rax, 1	      1357	diff.c	FUNCTION_23	FOR_1	IF_9
0x27b0	        0x48894590	             mov qword [rbp - 0x70], rax	      1357	diff.c	FUNCTION_23	FOR_1	IF_9
0x27b4	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1358	diff.c	FUNCTION_23	FOR_1	IF_9
0x27bc	            0xeb71	                           jmp 0x400286f	      1358	diff.c	FUNCTION_23	FOR_1	IF_9
0x27be	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1362	diff.c	FUNCTION_23	FOR_1	ELSE_4
0x27c2	        0x48894590	             mov qword [rbp - 0x70], rax	      1362	diff.c	FUNCTION_23	FOR_1	ELSE_4
0x27c6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1363	diff.c	FUNCTION_23	FOR_1	ELSE_4
0x27cd	        0x482b45b8	             sub rax, qword [rbp - 0x48]	      1363	diff.c	FUNCTION_23	FOR_1	ELSE_4
0x27d1	        0x4883c001	                              add rax, 1	      1363	diff.c	FUNCTION_23	FOR_1	ELSE_4
0x27d5	        0x488945a0	             mov qword [rbp - 0x60], rax	      1363	diff.c	FUNCTION_23	FOR_1	ELSE_4
0x27d9	            0xeb54	                           jmp 0x400286f	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x27db	    0x83bd40ffffff	               cmp dword [rbp - 0xc0], 0	      1371	diff.c	FUNCTION_23	FOR_1	WHILE_1	IF_10
0x27e2	            0x7422	                            je 0x4002846	      1371	diff.c	FUNCTION_23	FOR_1	WHILE_1	IF_10
0x27e4	    0x8b8d28ffffff	             mov ecx, dword [rbp - 0xd8]	      1372	diff.c	FUNCTION_23	FOR_1	WHILE_1	CALL_10
0x27ea	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1372	diff.c	FUNCTION_23	FOR_1	WHILE_1	CALL_10
0x27f0	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	      1372	diff.c	FUNCTION_23	FOR_1	WHILE_1	CALL_10
0x27f7	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1372	diff.c	FUNCTION_23	FOR_1	WHILE_1	CALL_10
0x27fe	          0x4889c7	                            mov rdi, rax	      1372	diff.c	FUNCTION_23	FOR_1	WHILE_1	CALL_10
0x2801	      0xe877060000	                call sym.diff_copy_entry	      1372	diff.c	FUNCTION_23	FOR_1	WHILE_1	CALL_10
0x2806	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1373	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x280d	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      1373	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x2814	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1374	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x281b	          0x488b00	                    mov rax, qword [rax]	      1374	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x281e	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      1374	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x2825	    0xc78540ffffff	               mov dword [rbp - 0xc0], 1	      1375	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x282f	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x2837	            0x743b	                            je 0x40028b4	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x2839	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x2840	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x2846	          0x4863d2	                         movsxd rdx, edx	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x2849	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x284e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x2855	    0x8b8d2cffffff	             mov ecx, dword [rbp - 0xd4]	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x285b	          0x4863c9	                         movsxd rcx, ecx	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x285e	        0x4883c108	                              add rcx, 8	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x2862	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x2867	          0x4801d0	                            add rax, rdx	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x286a	        0x483b4588	             cmp rax, qword [rbp - 0x78]	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x286e	     0xf8c67ffffff	                            jl 0x400281b	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x2874	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      1378	diff.c	FUNCTION_23	FOR_1	IF_11
0x287c	     0xf844e040000	                            je 0x4002d10	      1378	diff.c	FUNCTION_23	FOR_1	IF_11
0x2882	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x2889	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x288f	          0x4863d2	                         movsxd rdx, edx	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x2892	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x2897	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x289e	    0x8b8d2cffffff	             mov ecx, dword [rbp - 0xd4]	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x28a4	          0x4863c9	                         movsxd rcx, ecx	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x28a7	        0x4883c108	                              add rcx, 8	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x28ab	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x28b0	          0x4801d0	                            add rax, rdx	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x28b3	        0x483b4588	             cmp rax, qword [rbp - 0x78]	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x28b7	     0xf8c13040000	                            jl 0x4002d10	      1379	diff.c	FUNCTION_23	FOR_1	IF_11
0x28bd	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x28c1	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x28c5	        0x488d0c02	                    lea rcx, [rdx + rax]	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x28c9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x28d0	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x28d6	          0x4863d2	                         movsxd rdx, edx	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x28d9	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x28de	          0x4839c1	                            cmp rcx, rax	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x28e1	     0xf8ce9030000	                            jl 0x4002d10	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x28e7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x28ee	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x28f5	            0xeb3a	                           jmp 0x4002971	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x28f7	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x28fb	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x28ff	        0x488d0c02	                    lea rcx, [rdx + rax]	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x2903	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x290a	          0x488b00	                    mov rax, qword [rax]	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x290d	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x2913	          0x4863d2	                         movsxd rdx, edx	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x2916	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x291b	          0x4839c1	                            cmp rcx, rax	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x291e	            0x7c22	                            jl 0x4002982	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x2920	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x2927	          0x488b00	                    mov rax, qword [rax]	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x292a	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x2931	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x2938	          0x488b00	                    mov rax, qword [rax]	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x293b	          0x4885c0	                           test rax, rax	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x293e	            0x75b7	                           jne 0x4002937	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x2940	            0xeb01	                           jmp 0x4002983	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x2942	              0x90	                                     nop	      1386	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x2943	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1390	diff.c	FUNCTION_23	FOR_1	IF_11
0x294a	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1390	diff.c	FUNCTION_23	FOR_1	IF_11
0x2950	          0x4863d2	                         movsxd rdx, edx	      1390	diff.c	FUNCTION_23	FOR_1	IF_11
0x2953	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1390	diff.c	FUNCTION_23	FOR_1	IF_11
0x2958	        0x482b4588	             sub rax, qword [rbp - 0x78]	      1390	diff.c	FUNCTION_23	FOR_1	IF_11
0x295c	        0x48894580	             mov qword [rbp - 0x80], rax	      1390	diff.c	FUNCTION_23	FOR_1	IF_11
0x2960	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      1391	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x2965	     0xf8eac000000	                           jle 0x4002a57	      1391	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x296b	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x2971	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x2977	            0xeb55	                           jmp 0x4002a0e	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x2979	    0x488b05000000	            mov rax, qword [0x040029c0] 	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x2980	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x2986	          0x4863d2	                         movsxd rdx, edx	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x2989	        0x4883c20c	                            add rdx, 0xc	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x298d	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x2991	          0x4885c0	                           test rax, rax	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x2994	            0x7431	                            je 0x4002a07	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x2996	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x299d	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x29a3	          0x4863d2	                         movsxd rdx, edx	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x29a6	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x29ab	        0x482b4580	             sub rax, qword [rbp - 0x80]	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x29af	          0x4889c1	                            mov rcx, rax	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x29b2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x29b9	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x29bf	          0x4863d2	                         movsxd rdx, edx	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x29c2	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x29c7	    0x83853cffffff	               add dword [rbp - 0xc4], 1	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x29ce	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x29d4	    0x3b8528ffffff	             cmp eax, dword [rbp - 0xd8]	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x29da	            0x7c9d	                            jl 0x40029b9	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x29dc	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1396	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x29e3	    0x8b9528ffffff	             mov edx, dword [rbp - 0xd8]	      1396	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x29e9	          0x4863d2	                         movsxd rdx, edx	      1396	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x29ec	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      1396	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x29f0	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	      1396	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x29f5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1397	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x29fc	    0x8b9528ffffff	             mov edx, dword [rbp - 0xd8]	      1397	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x2a02	          0x4863d2	                         movsxd rdx, edx	      1397	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x2a05	        0x488d4a08	                      lea rcx, [rdx + 8]	      1397	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x2a09	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1397	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x2a0d	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	      1397	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x2a12	      0xe9ff000000	                           jmp 0x4002b56	      1397	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x2a17	    0x83bd40ffffff	               cmp dword [rbp - 0xc0], 0	      1399	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x2a1e	            0x744a	                            je 0x4002aaa	      1399	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x2a20	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1402	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x2a24	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1402	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x2a28	        0x488d0c02	                    lea rcx, [rdx + rax]	      1402	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x2a2c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1402	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x2a33	    0x8b9528ffffff	             mov edx, dword [rbp - 0xd8]	      1402	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x2a39	          0x4863d2	                         movsxd rdx, edx	      1402	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x2a3c	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	      1402	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x2a41	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x2a45	        0x482b4580	             sub rax, qword [rbp - 0x80]	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x2a49	          0x4889c2	                            mov rdx, rax	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x2a4c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x2a53	    0x8b8d28ffffff	             mov ecx, dword [rbp - 0xd8]	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x2a59	          0x4863c9	                         movsxd rcx, ecx	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x2a5c	        0x4883c108	                              add rcx, 8	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x2a60	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x2a65	      0xe9ac000000	                           jmp 0x4002b56	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x2a6a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2a71	    0x8b9528ffffff	             mov edx, dword [rbp - 0xd8]	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2a77	          0x4863d2	                         movsxd rdx, edx	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2a7a	        0x4883c208	                              add rdx, 8	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2a7e	      0x488b4cd008	       mov rcx, qword [rax + rdx*8 + 8] 	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2a83	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2a87	        0x482b4598	             sub rax, qword [rbp - 0x68]	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2a8b	          0x4889c6	                            mov rsi, rax	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2a8e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1408	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2a95	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1408	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2a9b	          0x4863d2	                         movsxd rdx, edx	      1408	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2a9e	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1408	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2aa3	          0x4801c6	                            add rsi, rax	      1408	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2aa6	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1408	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2aad	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1408	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2ab3	          0x4863d2	                         movsxd rdx, edx	      1408	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2ab6	        0x4883c208	                              add rdx, 8	      1408	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2aba	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1408	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2abf	        0x488d3c06	                    lea rdi, [rsi + rax]	      1408	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2ac3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2aca	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2ad0	          0x4863d2	                         movsxd rdx, edx	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2ad3	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2ad8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2adf	    0x8bb52cffffff	             mov esi, dword [rbp - 0xd4]	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2ae5	          0x4863f6	                         movsxd rsi, esi	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2ae8	        0x4883c608	                              add rsi, 8	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2aec	      0x488b44f008	       mov rax, qword [rax + rsi*8 + 8] 	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2af1	          0x4801d0	                            add rax, rdx	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2af4	          0x4829c7	                            sub rdi, rax	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2af7	          0x4889f8	                            mov rax, rdi	      1409	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2afa	          0x4801c1	                            add rcx, rax	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2afd	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2b04	    0x8b9528ffffff	             mov edx, dword [rbp - 0xd8]	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2b0a	          0x4863d2	                         movsxd rdx, edx	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2b0d	        0x4883c208	                              add rdx, 8	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2b11	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x2b16	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1413	diff.c	FUNCTION_23	FOR_1	IF_11
0x2b1a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1413	diff.c	FUNCTION_23	FOR_1	IF_11
0x2b1e	        0x488d3402	                    lea rsi, [rdx + rax]	      1413	diff.c	FUNCTION_23	FOR_1	IF_11
0x2b22	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1414	diff.c	FUNCTION_23	FOR_1	IF_11
0x2b29	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1414	diff.c	FUNCTION_23	FOR_1	IF_11
0x2b2f	          0x4863d2	                         movsxd rdx, edx	      1414	diff.c	FUNCTION_23	FOR_1	IF_11
0x2b32	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1414	diff.c	FUNCTION_23	FOR_1	IF_11
0x2b37	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1414	diff.c	FUNCTION_23	FOR_1	IF_11
0x2b3e	    0x8b8d2cffffff	             mov ecx, dword [rbp - 0xd4]	      1414	diff.c	FUNCTION_23	FOR_1	IF_11
0x2b44	          0x4863c9	                         movsxd rcx, ecx	      1414	diff.c	FUNCTION_23	FOR_1	IF_11
0x2b47	        0x4883c108	                              add rcx, 8	      1414	diff.c	FUNCTION_23	FOR_1	IF_11
0x2b4b	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1414	diff.c	FUNCTION_23	FOR_1	IF_11
0x2b50	          0x4801d0	                            add rax, rdx	      1414	diff.c	FUNCTION_23	FOR_1	IF_11
0x2b53	          0x4829c6	                            sub rsi, rax	      1413	diff.c	FUNCTION_23	FOR_1	IF_11
0x2b56	          0x4889f0	                            mov rax, rsi	      1413	diff.c	FUNCTION_23	FOR_1	IF_11
0x2b59	        0x48894580	             mov qword [rbp - 0x80], rax	      1413	diff.c	FUNCTION_23	FOR_1	IF_11
0x2b5d	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      1415	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x2b62	            0x794a	                           jns 0x4002bee	      1415	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x2b64	    0x83bd40ffffff	               cmp dword [rbp - 0xc0], 0	      1419	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x2b6b	            0x7439	                            je 0x4002be6	      1419	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x2b6d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x2b74	    0x8b9528ffffff	             mov edx, dword [rbp - 0xd8]	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x2b7a	          0x4863d2	                         movsxd rdx, edx	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x2b7d	        0x4883c208	                              add rdx, 8	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x2b81	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x2b86	        0x482b4580	             sub rax, qword [rbp - 0x80]	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x2b8a	          0x4889c2	                            mov rdx, rax	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x2b8d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x2b94	    0x8b8d28ffffff	             mov ecx, dword [rbp - 0xd8]	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x2b9a	          0x4863c9	                         movsxd rcx, ecx	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x2b9d	        0x4883c108	                              add rcx, 8	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x2ba1	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x2ba6	    0x48c745800000	               mov qword [rbp - 0x80], 0	      1421	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x2bae	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x2bb4	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x2bba	      0xe992000000	                           jmp 0x4002c91	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x2bbf	    0x488b05000000	            mov rax, qword [0x04002c06] 	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2bc6	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2bcc	          0x4863d2	                         movsxd rdx, edx	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2bcf	        0x4883c20c	                            add rdx, 0xc	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2bd3	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2bd7	          0x4885c0	                           test rax, rax	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2bda	            0x746e	                            je 0x4002c8a	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2bdc	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2be3	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2be9	          0x4863d2	                         movsxd rdx, edx	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2bec	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2bf1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2bf8	    0x8b8d3cffffff	             mov ecx, dword [rbp - 0xc4]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2bfe	          0x4863c9	                         movsxd rcx, ecx	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2c01	        0x4883c108	                              add rcx, 8	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2c05	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2c0a	        0x488d0c02	                    lea rcx, [rdx + rax]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2c0e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1426	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2c15	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      1426	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2c1b	          0x4863d2	                         movsxd rdx, edx	      1426	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2c1e	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1426	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2c23	          0x4829c1	                            sub rcx, rax	      1426	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2c26	          0x4889ca	                            mov rdx, rcx	      1426	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2c29	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1426	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2c2d	        0x488d0c02	                    lea rcx, [rdx + rax]	      1426	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2c31	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2c38	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2c3e	          0x4863d2	                         movsxd rdx, edx	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2c41	        0x4883c208	                              add rdx, 8	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2c45	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x2c4a	    0x83853cffffff	               add dword [rbp - 0xc4], 1	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x2c51	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x2c57	    0x3b8528ffffff	             cmp eax, dword [rbp - 0xd8]	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x2c5d	     0xf8c5cffffff	                            jl 0x4002bff	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x2c63	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1429	diff.c	FUNCTION_23	FOR_1	IF_11
0x2c6a	          0x488b00	                    mov rax, qword [rax]	      1429	diff.c	FUNCTION_23	FOR_1	IF_11
0x2c6d	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      1429	diff.c	FUNCTION_23	FOR_1	IF_11
0x2c74	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1430	diff.c	FUNCTION_23	FOR_1	IF_11
0x2c7b	          0x488b10	                    mov rdx, qword [rax]	      1430	diff.c	FUNCTION_23	FOR_1	IF_11
0x2c7e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1430	diff.c	FUNCTION_23	FOR_1	IF_11
0x2c85	          0x488910	                    mov qword [rax], rdx	      1430	diff.c	FUNCTION_23	FOR_1	IF_11
0x2c88	            0xeb2e	                           jmp 0x4002cf8	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x2c8a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1433	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x2c91	          0x488b00	                    mov rax, qword [rax]	      1433	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x2c94	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1433	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x2c9b	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1434	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2	CALL_11
0x2ca2	          0x4889c7	                            mov rdi, rax	      1434	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2	CALL_11
0x2ca5	      0xe800000000	                          call 0x4002cea	      1434	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2	CALL_11
0x2caa	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1435	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x2cb1	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      1435	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x2cb8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x2cbf	          0x488b00	                    mov rax, qword [rax]	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x2cc2	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x2cc9	            0x75bf	                           jne 0x4002cca	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x2ccb	      0xe906010000	                           jmp 0x4002e16	      1378	diff.c	FUNCTION_23	FOR_1	IF_11
0x2cd0	    0x488b05000000	            mov rax, qword [0x04002d17] 	      1441	diff.c	FUNCTION_23	FOR_1	ELSE_7	CALL_12
0x2cd7	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      1441	diff.c	FUNCTION_23	FOR_1	ELSE_7	CALL_12
0x2cde	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	      1441	diff.c	FUNCTION_23	FOR_1	ELSE_7	CALL_12
0x2ce5	          0x4889ce	                            mov rsi, rcx	      1441	diff.c	FUNCTION_23	FOR_1	ELSE_7	CALL_12
0x2ce8	          0x4889c7	                            mov rdi, rax	      1441	diff.c	FUNCTION_23	FOR_1	ELSE_7	CALL_12
0x2ceb	      0xe84adfffff	                 call sym.diff_alloc_new	      1441	diff.c	FUNCTION_23	FOR_1	ELSE_7	CALL_12
0x2cf0	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      1441	diff.c	FUNCTION_23	FOR_1	ELSE_7	CALL_12
0x2cf7	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      1442	diff.c	FUNCTION_23	FOR_1	ELSE_7	IF_19
0x2cff	     0xf8455010000	                            je 0x4002e9a	      1442	diff.c	FUNCTION_23	FOR_1	ELSE_7	IF_19
0x2d05	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1445	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x2d0c	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1445	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x2d12	          0x4863d2	                         movsxd rdx, edx	      1445	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x2d15	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      1445	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x2d19	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	      1445	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x2d1e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1446	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x2d25	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1446	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x2d2b	          0x4863d2	                         movsxd rdx, edx	      1446	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x2d2e	        0x488d4a08	                      lea rcx, [rdx + 8]	      1446	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x2d32	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1446	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x2d36	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	      1446	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x2d3b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1447	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x2d42	    0x8b9528ffffff	             mov edx, dword [rbp - 0xd8]	      1447	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x2d48	          0x4863d2	                         movsxd rdx, edx	      1447	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x2d4b	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      1447	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x2d4f	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	      1447	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x2d54	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1448	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x2d5b	    0x8b9528ffffff	             mov edx, dword [rbp - 0xd8]	      1448	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x2d61	          0x4863d2	                         movsxd rdx, edx	      1448	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x2d64	        0x488d4a08	                      lea rcx, [rdx + 8]	      1448	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x2d68	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1448	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x2d6c	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	      1448	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x2d71	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x2d77	          0x83c001	                              add eax, 1	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x2d7a	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x2d80	            0xeb46	                           jmp 0x4002e08	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x2d82	    0x488b05000000	            mov rax, qword [0x04002dc9] 	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x2d89	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x2d8f	          0x4863d2	                         movsxd rdx, edx	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x2d92	        0x4883c20c	                            add rdx, 0xc	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x2d96	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x2d9a	          0x4885c0	                           test rax, rax	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x2d9d	            0x7422	                            je 0x4002e01	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x2d9f	    0x8b8d3cffffff	             mov ecx, dword [rbp - 0xc4]	      1455	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x2da5	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1455	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x2dab	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	      1455	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x2db2	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1455	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x2db9	          0x4889c7	                            mov rdi, rax	      1455	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x2dbc	      0xe8bc000000	                call sym.diff_copy_entry	      1455	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x2dc1	    0x83853cffffff	               add dword [rbp - 0xc4], 1	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x2dc8	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x2dce	    0x3b8528ffffff	             cmp eax, dword [rbp - 0xd8]	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x2dd4	            0x7cac	                            jl 0x4002dc2	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x2dd6	    0xc78540ffffff	               mov dword [rbp - 0xc0], 0	      1457	diff.c	FUNCTION_23	FOR_1
0x2de0	      0xe916f8ffff	                           jmp 0x400263b	      1457	diff.c	FUNCTION_23	FOR_1
0x2de5	              0x90	                                     nop	      1315	diff.c	FUNCTION_23	FOR_1	IF_3
0x2de6	      0xe910f8ffff	                           jmp 0x400263b	      1315	diff.c	FUNCTION_23	FOR_1	IF_3
0x2deb	              0x90	                                     nop	      1332	diff.c	FUNCTION_23	FOR_1	IF_5
0x2dec	      0xe90af8ffff	                           jmp 0x400263b	      1332	diff.c	FUNCTION_23	FOR_1	IF_5
0x2df1	              0x90	                                     nop	      1343	diff.c	FUNCTION_23	FOR_1	IF_7
0x2df2	      0xe904f8ffff	                           jmp 0x400263b	      1458	diff.c	FUNCTION_23	FOR_1
0x2df7	              0x90	                                     nop	      1313	diff.c	FUNCTION_23	FOR_1	IF_2
0x2df8	            0xeb54	                           jmp 0x4002e8e	      1461	diff.c	FUNCTION_23	WHILE_3
0x2dfa	    0x83bd40ffffff	               cmp dword [rbp - 0xc0], 0	      1463	diff.c	FUNCTION_23	WHILE_3	IF_21
0x2e01	            0x7422	                            je 0x4002e65	      1463	diff.c	FUNCTION_23	WHILE_3	IF_21
0x2e03	    0x8b8d28ffffff	             mov ecx, dword [rbp - 0xd8]	      1464	diff.c	FUNCTION_23	WHILE_3	CALL_14
0x2e09	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1464	diff.c	FUNCTION_23	WHILE_3	CALL_14
0x2e0f	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	      1464	diff.c	FUNCTION_23	WHILE_3	CALL_14
0x2e16	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      1464	diff.c	FUNCTION_23	WHILE_3	CALL_14
0x2e1d	          0x4889c7	                            mov rdi, rax	      1464	diff.c	FUNCTION_23	WHILE_3	CALL_14
0x2e20	      0xe858000000	                call sym.diff_copy_entry	      1464	diff.c	FUNCTION_23	WHILE_3	CALL_14
0x2e25	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1465	diff.c	FUNCTION_23	WHILE_3
0x2e2c	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      1465	diff.c	FUNCTION_23	WHILE_3
0x2e33	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1466	diff.c	FUNCTION_23	WHILE_3
0x2e3a	          0x488b00	                    mov rax, qword [rax]	      1466	diff.c	FUNCTION_23	WHILE_3
0x2e3d	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      1466	diff.c	FUNCTION_23	WHILE_3
0x2e44	    0xc78540ffffff	               mov dword [rbp - 0xc0], 1	      1467	diff.c	FUNCTION_23	WHILE_3
0x2e4e	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      1461	diff.c	FUNCTION_23	WHILE_3
0x2e56	            0x75a2	                           jne 0x4002e3a	      1461	diff.c	FUNCTION_23	WHILE_3
0x2e58	            0xeb01	                           jmp 0x4002e9b	      1461	diff.c	FUNCTION_23	WHILE_3
0x2e5a	              0x90	                                     nop	      1443	diff.c	FUNCTION_23	FOR_1	ELSE_7	IF_19
0x2e5b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1471	diff.c	FUNCTION_23	CALL_15
0x2e5f	          0x4889c7	                            mov rdi, rax	      1471	diff.c	FUNCTION_23	CALL_15
0x2e62	      0xe800000000	                          call 0x4002ea7	      1471	diff.c	FUNCTION_23	CALL_15
0x2e67	        0x488b45f8	                mov rax, qword [rbp - 8]	      1472	diff.c	FUNCTION_23
0x2e6b	    0x644833042528	                xor rax, qword fs:[0x28]	      1472	diff.c	FUNCTION_23
0x2e74	            0x7405	                            je 0x4002ebb	      1472	diff.c	FUNCTION_23
0x2e76	      0xe800000000	                          call 0x4002ebb	      1472	diff.c	FUNCTION_23
0x2e7b	              0xc9	                                   leave	      1472	diff.c	FUNCTION_23
0x2e7c	              0xc3	                                     ret	      1472	diff.c	FUNCTION_23
diff_check_sanity	SWITCH,0:functions,0:WHILE,0:ELSE,0:IF,2:CALL,0:FOR,1:DO,0	40
0xf22	              0x55	                                push rbp	       591	diff.c	FUNCTION_12
0xf23	          0x4889e5	                            mov rbp, rsp	       591	diff.c	FUNCTION_12
0xf26	        0x48897de8	             mov qword [rbp - 0x18], rdi	       591	diff.c	FUNCTION_12
0xf2a	        0x488975e0	             mov qword [rbp - 0x20], rsi	       591	diff.c	FUNCTION_12
0xf2e	    0xc745fc000000	                  mov dword [rbp - 4], 0	       594	diff.c	FUNCTION_12	FOR_1
0xf35	            0xeb65	                           jmp 0x4000fdc	       594	diff.c	FUNCTION_12	FOR_1
0xf37	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0xf3b	          0x8b55fc	                mov edx, dword [rbp - 4]	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0xf3e	          0x4863d2	                         movsxd rdx, edx	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0xf41	        0x4883c20c	                            add rdx, 0xc	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0xf45	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0xf49	          0x4885c0	                           test rax, rax	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0xf4c	            0x744a	                            je 0x4000fd8	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0xf4e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0xf52	          0x8b55fc	                mov edx, dword [rbp - 4]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0xf55	          0x4863d2	                         movsxd rdx, edx	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0xf58	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0xf5d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0xf61	          0x8b4dfc	                mov ecx, dword [rbp - 4]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0xf64	          0x4863c9	                         movsxd rcx, ecx	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0xf67	        0x4883c108	                              add rcx, 8	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0xf6b	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0xf70	          0x4801d0	                            add rax, rdx	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0xf73	        0x488d48ff	                      lea rcx, [rax - 1]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0xf77	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       597	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0xf7b	          0x8b55fc	                mov edx, dword [rbp - 4]	       597	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0xf7e	          0x4863d2	                         movsxd rdx, edx	       597	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0xf81	        0x4883c20c	                            add rdx, 0xc	       597	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0xf85	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       597	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0xf89	          0x488b00	                    mov rax, qword [rax]	       597	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0xf8c	          0x4839c1	                            cmp rcx, rax	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0xf8f	            0x7e07	                           jle 0x4000fd8	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0xf91	      0xb800000000	                              mov eax, 0	       598	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0xf96	            0xeb0f	                           jmp 0x4000fe7	       598	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0xf98	        0x8345fc01	                  add dword [rbp - 4], 1	       594	diff.c	FUNCTION_12	FOR_1
0xf9c	        0x837dfc07	                  cmp dword [rbp - 4], 7	       594	diff.c	FUNCTION_12	FOR_1
0xfa0	            0x7e95	                           jle 0x4000f77	       594	diff.c	FUNCTION_12	FOR_1
0xfa2	      0xb801000000	                              mov eax, 1	       599	diff.c	FUNCTION_12
0xfa7	              0x5d	                                 pop rbp	       600	diff.c	FUNCTION_12
0xfa8	              0xc3	                                     ret	       600	diff.c	FUNCTION_12
diff_mark_adjust_tp	SWITCH,0:functions,0:WHILE,1:ELSE,14:IF,25:CALL,5:FOR,5:DO,0	586
0x3c4	              0x55	                                push rbp	       248	diff.c	FUNCTION_9
0x3c5	          0x4889e5	                            mov rbp, rsp	       248	diff.c	FUNCTION_9
0x3c8	        0x4883ec70	                           sub rsp, 0x70	       248	diff.c	FUNCTION_9
0x3cc	        0x48897db8	             mov qword [rbp - 0x48], rdi	       248	diff.c	FUNCTION_9
0x3d0	          0x8975b4	             mov dword [rbp - 0x4c], esi	       248	diff.c	FUNCTION_9
0x3d3	        0x488955a8	             mov qword [rbp - 0x58], rdx	       248	diff.c	FUNCTION_9
0x3d7	        0x48894da0	             mov qword [rbp - 0x60], rcx	       248	diff.c	FUNCTION_9
0x3db	        0x4c894598	              mov qword [rbp - 0x68], r8	       248	diff.c	FUNCTION_9
0x3df	        0x4c894d90	              mov qword [rbp - 0x70], r9	       248	diff.c	FUNCTION_9
0x3e3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       256	diff.c	FUNCTION_9
0x3e7	        0x488945e8	             mov qword [rbp - 0x18], rax	       256	diff.c	FUNCTION_9
0x3eb	    0x48817da0ffff	     cmp qword [rbp - 0x60], 0x7fffffff 	       259	diff.c	FUNCTION_9	IF_1
0x3f3	            0x7510	                           jne 0x4000445	       259	diff.c	FUNCTION_9	IF_1
0x3f5	        0x488b4598	             mov rax, qword [rbp - 0x68]	       262	diff.c	FUNCTION_9	IF_1
0x3f9	          0x8945c4	             mov dword [rbp - 0x3c], eax	       262	diff.c	FUNCTION_9	IF_1
0x3fc	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       263	diff.c	FUNCTION_9	IF_1
0x403	            0xeb27	                           jmp 0x400046c	       263	diff.c	FUNCTION_9	IF_1
0x405	      0x48837d9000	               cmp qword [rbp - 0x70], 0	       265	diff.c	FUNCTION_9	ELSE_1	IF_2
0x40a	            0x7e10	                           jle 0x400045c	       265	diff.c	FUNCTION_9	ELSE_1	IF_2
0x40c	        0x488b4590	             mov rax, qword [rbp - 0x70]	       268	diff.c	FUNCTION_9	ELSE_1	IF_2
0x410	          0x8945c4	             mov dword [rbp - 0x3c], eax	       268	diff.c	FUNCTION_9	ELSE_1	IF_2
0x413	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       269	diff.c	FUNCTION_9	ELSE_1	IF_2
0x41a	            0xeb10	                           jmp 0x400046c	       269	diff.c	FUNCTION_9	ELSE_1	IF_2
0x41c	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       274	diff.c	FUNCTION_9	ELSE_2
0x423	        0x488b4590	             mov rax, qword [rbp - 0x70]	       275	diff.c	FUNCTION_9	ELSE_2
0x427	            0xf7d8	                                 neg eax	       275	diff.c	FUNCTION_9	ELSE_2
0x429	          0x8945c8	             mov dword [rbp - 0x38], eax	       275	diff.c	FUNCTION_9	ELSE_2
0x42c	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       278	diff.c	FUNCTION_9
0x434	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       279	diff.c	FUNCTION_9
0x438	        0x488b4058	            mov rax, qword [rax + 0x58] 	       279	diff.c	FUNCTION_9
0x43c	        0x488945d8	             mov qword [rbp - 0x28], rax	       279	diff.c	FUNCTION_9
0x440	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x445	            0x7440	                            je 0x40004c7	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x447	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x44b	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x44e	          0x4863d2	                         movsxd rdx, edx	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x451	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x456	        0x4883e801	                              sub rax, 1	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x45a	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x45e	            0x7f27	                            jg 0x40004c7	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x460	    0x48817da0ffff	     cmp qword [rbp - 0x60], 0x7fffffff 	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x468	     0xf858c010000	                           jne 0x400063a	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x46e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x472	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x475	          0x4863d2	                         movsxd rdx, edx	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x478	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x47d	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x481	     0xf8e73010000	                           jle 0x400063a	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x487	      0x48837de000	               cmp qword [rbp - 0x20], 0	       287	diff.c	FUNCTION_9	FOR_1	IF_3
0x48c	            0x742f	                            je 0x40004fd	       287	diff.c	FUNCTION_9	FOR_1	IF_3
0x48e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x492	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x495	          0x4863d2	                         movsxd rdx, edx	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x498	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x49d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x4a1	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x4a4	          0x4863c9	                         movsxd rcx, ecx	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x4a7	        0x4883c108	                              add rcx, 8	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x4ab	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x4b0	          0x4801d0	                            add rax, rdx	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x4b3	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x4b7	     0xf8d3d010000	                           jge 0x400063a	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x4bd	    0x8b0500000000	            mov eax, dword [0x04000503] 	       289	diff.c	FUNCTION_9	FOR_1	IF_3
0x4c3	            0x85c0	                           test eax, eax	       289	diff.c	FUNCTION_9	FOR_1	IF_3
0x4c5	     0xf852f010000	                           jne 0x400063a	       289	diff.c	FUNCTION_9	FOR_1	IF_3
0x4cb	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       291	diff.c	FUNCTION_9	FOR_1	IF_3	CALL_1
0x4cf	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       291	diff.c	FUNCTION_9	FOR_1	IF_3	CALL_1
0x4d3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       291	diff.c	FUNCTION_9	FOR_1	IF_3	CALL_1
0x4d7	          0x4889ce	                            mov rsi, rcx	       291	diff.c	FUNCTION_9	FOR_1	IF_3	CALL_1
0x4da	          0x4889c7	                            mov rdi, rax	       291	diff.c	FUNCTION_9	FOR_1	IF_3	CALL_1
0x4dd	      0xe858070000	                 call sym.diff_alloc_new	       291	diff.c	FUNCTION_9	FOR_1	IF_3	CALL_1
0x4e2	        0x488945f8	                mov qword [rbp - 8], rax	       291	diff.c	FUNCTION_9	FOR_1	IF_3	CALL_1
0x4e6	      0x48837df800	                  cmp qword [rbp - 8], 0	       292	diff.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x4eb	     0xf8446070000	                            je 0x4000c77	       292	diff.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x4f1	        0x488b45f8	                mov rax, qword [rbp - 8]	       295	diff.c	FUNCTION_9	FOR_1	IF_3
0x4f5	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       295	diff.c	FUNCTION_9	FOR_1	IF_3
0x4f8	          0x4863d2	                         movsxd rdx, edx	       295	diff.c	FUNCTION_9	FOR_1	IF_3
0x4fb	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       295	diff.c	FUNCTION_9	FOR_1	IF_3
0x4ff	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       295	diff.c	FUNCTION_9	FOR_1	IF_3
0x504	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x507	          0x4863d0	                         movsxd rdx, eax	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x50a	        0x488b45f8	                mov rax, qword [rbp - 8]	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x50e	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x511	          0x4863c9	                         movsxd rcx, ecx	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x514	        0x4883c108	                              add rcx, 8	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x518	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x51d	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       297	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2
0x524	      0xe9c7000000	                           jmp 0x4000630	       297	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2
0x529	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x52d	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x530	          0x4863d2	                         movsxd rdx, edx	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x533	        0x4883c20c	                            add rdx, 0xc	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x537	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x53b	          0x4885c0	                           test rax, rax	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x53e	     0xf84a8000000	                            je 0x400062c	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x544	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x547	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x54a	     0xf849c000000	                            je 0x400062c	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x550	      0x48837de000	               cmp qword [rbp - 0x20], 0	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x555	            0x7515	                           jne 0x40005ac	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x557	        0x488b45f8	                mov rax, qword [rbp - 8]	       301	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x55b	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       301	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x55e	          0x4863d2	                         movsxd rdx, edx	       301	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x561	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       301	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x565	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       301	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x56a	            0xeb67	                           jmp 0x4000613	       301	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x56c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x570	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x573	          0x4863d2	                         movsxd rdx, edx	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x576	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x57b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x57f	          0x8b4dc0	             mov ecx, dword [rbp - 0x40]	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x582	          0x4863c9	                         movsxd rcx, ecx	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x585	        0x4883c108	                              add rcx, 8	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x589	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x58e	          0x4801c2	                            add rdx, rax	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x591	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x595	        0x488d3402	                    lea rsi, [rdx + rax]	       304	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x599	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x59d	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x5a0	          0x4863d2	                         movsxd rdx, edx	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x5a3	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x5a8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x5ac	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x5af	          0x4863c9	                         movsxd rcx, ecx	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x5b2	        0x4883c108	                              add rcx, 8	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x5b6	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x5bb	          0x4801d0	                            add rax, rdx	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x5be	          0x4829c6	                            sub rsi, rax	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x5c1	          0x4889f1	                            mov rcx, rsi	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x5c4	        0x488b45f8	                mov rax, qword [rbp - 8]	       303	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x5c8	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       303	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x5cb	          0x4863d2	                         movsxd rdx, edx	       303	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x5ce	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       303	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x5d3	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x5d6	          0x4863d0	                         movsxd rdx, eax	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x5d9	        0x488b45f8	                mov rax, qword [rbp - 8]	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x5dd	          0x8b4dc0	             mov ecx, dword [rbp - 0x40]	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x5e0	          0x4863c9	                         movsxd rcx, ecx	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x5e3	        0x4883c108	                              add rcx, 8	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x5e7	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x5ec	        0x8345c001	               add dword [rbp - 0x40], 1	       297	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2
0x5f0	        0x837dc007	               cmp dword [rbp - 0x40], 7	       297	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2
0x5f4	     0xf8e2fffffff	                           jle 0x4000569	       297	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2
0x5fa	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x5ff	     0xf8448050000	                            je 0x4000b8d	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x605	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       326	diff.c	FUNCTION_9	FOR_1
0x609	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       326	diff.c	FUNCTION_9	FOR_1
0x60c	          0x4863d2	                         movsxd rdx, edx	       326	diff.c	FUNCTION_9	FOR_1
0x60f	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       326	diff.c	FUNCTION_9	FOR_1
0x614	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       326	diff.c	FUNCTION_9	FOR_1
0x618	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	       326	diff.c	FUNCTION_9	FOR_1
0x61b	          0x4863c9	                         movsxd rcx, ecx	       326	diff.c	FUNCTION_9	FOR_1
0x61e	        0x4883c108	                              add rcx, 8	       326	diff.c	FUNCTION_9	FOR_1
0x622	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	       326	diff.c	FUNCTION_9	FOR_1
0x627	          0x4801d0	                            add rax, rdx	       326	diff.c	FUNCTION_9	FOR_1
0x62a	        0x4883e801	                              sub rax, 1	       326	diff.c	FUNCTION_9	FOR_1
0x62e	        0x488945f0	             mov qword [rbp - 0x10], rax	       326	diff.c	FUNCTION_9	FOR_1
0x632	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       329	diff.c	FUNCTION_9	FOR_1	IF_8
0x636	        0x4883e801	                              sub rax, 1	       329	diff.c	FUNCTION_9	FOR_1	IF_8
0x63a	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       329	diff.c	FUNCTION_9	FOR_1	IF_8
0x63e	     0xf8f1a040000	                            jg 0x4000a9e	       329	diff.c	FUNCTION_9	FOR_1	IF_8
0x644	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x648	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x64b	          0x4863d2	                         movsxd rdx, edx	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x64e	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x653	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x656	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x659	             0x1c8	                            add eax, ecx	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x65b	            0x85c0	                           test eax, eax	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x65d	           0xf95c0	                                setne al	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x660	           0xfb6c0	                           movzx eax, al	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x663	          0x4829c2	                            sub rdx, rax	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x666	          0x4889d0	                            mov rax, rdx	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x669	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x66d	            0x7e36	                           jle 0x40006e5	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x66f	      0x48837d9000	               cmp qword [rbp - 0x70], 0	       335	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9	IF_10
0x674	     0xf84d6040000	                            je 0x4000b90	       335	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9	IF_10
0x67a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x67e	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x681	          0x4863d2	                         movsxd rdx, edx	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x684	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x689	        0x488b4590	             mov rax, qword [rbp - 0x70]	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x68d	        0x488d0c02	                    lea rcx, [rdx + rax]	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x691	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x695	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x698	          0x4863d2	                         movsxd rdx, edx	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x69b	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x6a0	      0xe9b9030000	                           jmp 0x4000a9e	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x6a5	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       341	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4
0x6ac	        0x837dc800	               cmp dword [rbp - 0x38], 0	       344	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11
0x6b0	     0xf8e1b030000	                           jle 0x4000a11	       344	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11
0x6b6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       346	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x6ba	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       346	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x6bd	          0x4863d2	                         movsxd rdx, edx	       346	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x6c0	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       346	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x6c5	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       346	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x6c9	     0xf8c4d010000	                            jl 0x400085c	       346	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x6cf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x6d3	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x6d6	          0x4863d2	                         movsxd rdx, edx	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x6d9	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x6de	            0x89c2	                            mov edx, eax	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x6e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x6e4	            0x29c2	                            sub edx, eax	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x6e6	            0x89d0	                            mov eax, edx	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x6e8	          0x8945d0	             mov dword [rbp - 0x30], eax	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x6eb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       349	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13
0x6ef	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       349	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13
0x6f3	     0xf8fb8000000	                            jg 0x40007f1	       349	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13
0x6f9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       352	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x6fd	          0x488b00	                    mov rax, qword [rax]	       352	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x700	          0x4885c0	                           test rax, rax	       352	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x703	            0x7476	                            je 0x40007bb	       352	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x705	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x709	          0x488b00	                    mov rax, qword [rax]	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x70c	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x70f	          0x4863d2	                         movsxd rdx, edx	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x712	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x717	        0x4883e801	                              sub rax, 1	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x71b	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x71f	            0x7f5a	                            jg 0x40007bb	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x721	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x725	          0x488b00	                    mov rax, qword [rax]	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x728	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x72b	          0x4863d2	                         movsxd rdx, edx	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x72e	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x733	            0x89c2	                            mov edx, eax	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x735	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x739	            0x29c2	                            sub edx, eax	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x73b	            0x89d0	                            mov eax, edx	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x73d	          0x8945cc	             mov dword [rbp - 0x34], eax	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x740	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       358	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x743	          0x2945c8	             sub dword [rbp - 0x38], eax	       358	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x746	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       359	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x749	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       359	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x74d	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	       359	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x750	          0x4863c9	                         movsxd rcx, ecx	       359	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x753	        0x4883c108	                              add rcx, 8	       359	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x757	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	       359	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x75c	            0x29c2	                            sub edx, eax	       359	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x75e	            0x89d0	                            mov eax, edx	       359	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x760	          0x8945cc	             mov dword [rbp - 0x34], eax	       359	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x763	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       360	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x767	          0x488b00	                    mov rax, qword [rax]	       360	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x76a	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       360	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x76d	          0x4863d2	                         movsxd rdx, edx	       360	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x770	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       360	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x775	        0x488945e8	             mov qword [rbp - 0x18], rax	       360	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x779	            0xeb1d	                           jmp 0x40007d8	       360	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x77b	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x77e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x782	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x785	          0x4863c9	                         movsxd rcx, ecx	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x788	        0x4883c108	                              add rcx, 8	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x78c	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x791	            0x29c2	                            sub edx, eax	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x793	            0x89d0	                            mov eax, edx	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x795	          0x8945cc	             mov dword [rbp - 0x34], eax	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x798	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       364	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x79c	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       364	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x79f	          0x4863d2	                         movsxd rdx, edx	       364	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x7a2	        0x4883c208	                              add rdx, 8	       364	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x7a6	    0x48c744d00800	          mov qword [rax + rdx*8 + 8], 0	       364	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x7af	            0xeb53	                           jmp 0x4000844	       364	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x7b1	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       369	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x7b4	          0x8945cc	             mov dword [rbp - 0x34], eax	       369	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x7b7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x7bb	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x7be	          0x4863d2	                         movsxd rdx, edx	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x7c1	        0x4883c208	                              add rdx, 8	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x7c5	      0x488b4cd008	       mov rcx, qword [rax + rdx*8 + 8] 	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x7ca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x7ce	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x7d1	          0x4863d2	                         movsxd rdx, edx	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x7d4	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x7d9	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x7dd	          0x4829c2	                            sub rdx, rax	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x7e0	          0x4889d0	                            mov rax, rdx	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x7e3	        0x4883c001	                              add rax, 1	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x7e7	          0x4829c1	                            sub rcx, rax	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x7ea	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x7ee	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x7f1	          0x4863d2	                         movsxd rdx, edx	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x7f4	        0x4883c208	                              add rdx, 8	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x7f8	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x7fd	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	       371	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x804	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       373	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5
0x808	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       373	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5
0x80b	          0x4863d2	                         movsxd rdx, edx	       373	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5
0x80e	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       373	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5
0x812	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       373	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5
0x817	      0xe925010000	                           jmp 0x4000981	       373	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5
0x81c	    0xc745d0000000	               mov dword [rbp - 0x30], 0	       377	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7
0x823	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       378	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x827	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       378	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x82b	     0xf8dd8000000	                           jge 0x4000949	       378	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x831	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x835	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x838	          0x4863d2	                         movsxd rdx, edx	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x83b	        0x4883c208	                              add rdx, 8	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x83f	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x844	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x848	        0x482b45e8	             sub rax, qword [rbp - 0x18]	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x84c	        0x4883c001	                              add rax, 1	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x850	          0x4889d1	                            mov rcx, rdx	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x853	          0x4829c1	                            sub rcx, rax	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x856	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x85a	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x85d	          0x4863d2	                         movsxd rdx, edx	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x860	        0x4883c208	                              add rdx, 8	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x864	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x869	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       382	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x86d	          0x488b00	                    mov rax, qword [rax]	       382	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x870	          0x4885c0	                           test rax, rax	       382	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x873	            0x747a	                            je 0x400092f	       382	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x875	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x879	          0x488b00	                    mov rax, qword [rax]	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x87c	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x87f	          0x4863d2	                         movsxd rdx, edx	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x882	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x887	        0x4883e801	                              sub rax, 1	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x88b	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x88f	            0x7f5e	                            jg 0x400092f	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x891	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x895	          0x488b00	                    mov rax, qword [rax]	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x898	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x89b	          0x4863d2	                         movsxd rdx, edx	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x89e	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8a3	            0x89c2	                            mov edx, eax	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8a9	            0x29c2	                            sub edx, eax	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8ab	            0x89d0	                            mov eax, edx	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8ad	          0x83e801	                              sub eax, 1	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8b0	          0x8945cc	             mov dword [rbp - 0x34], eax	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8b7	            0x89c1	                            mov ecx, eax	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8bd	          0x488b00	                    mov rax, qword [rax]	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8c0	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8c3	          0x4863d2	                         movsxd rdx, edx	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8c6	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8cb	            0x29c1	                            sub ecx, eax	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8cd	            0x89ca	                            mov edx, ecx	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8cf	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8d2	             0x1d0	                            add eax, edx	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8d4	          0x8945c8	             mov dword [rbp - 0x38], eax	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8d7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       390	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8db	          0x488b00	                    mov rax, qword [rax]	       390	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8de	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       390	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8e1	          0x4863d2	                         movsxd rdx, edx	       390	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8e4	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       390	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8e9	        0x488945e8	             mov qword [rbp - 0x18], rax	       390	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8ed	            0xeb11	                           jmp 0x4000940	       390	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x8ef	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       393	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	ELSE_8
0x8f3	            0x89c2	                            mov edx, eax	       393	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	ELSE_8
0x8f5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       393	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	ELSE_8
0x8f9	            0x29c2	                            sub edx, eax	       393	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	ELSE_8
0x8fb	            0x89d0	                            mov eax, edx	       393	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	ELSE_8
0x8fd	          0x8945cc	             mov dword [rbp - 0x34], eax	       393	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	ELSE_8
0x900	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	       394	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x907	            0xeb38	                           jmp 0x4000981	       394	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x909	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       399	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x910	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x914	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x917	          0x4863d2	                         movsxd rdx, edx	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x91a	        0x4883c208	                              add rdx, 8	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x91e	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x923	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x926	            0x4898	                                    cdqe	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x928	          0x4889d1	                            mov rcx, rdx	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x92b	          0x4829c1	                            sub rcx, rax	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x92e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x932	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x935	          0x4863d2	                         movsxd rdx, edx	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x938	        0x4883c208	                              add rdx, 8	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x93c	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x941	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       404	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3
0x948	            0xeb7b	                           jmp 0x4000a05	       404	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3
0x94a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x94e	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x951	          0x4863d2	                         movsxd rdx, edx	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x954	        0x4883c20c	                            add rdx, 0xc	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x958	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x95c	          0x4885c0	                           test rax, rax	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x95f	            0x7460	                            je 0x4000a01	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x961	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x964	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x967	            0x7458	                            je 0x4000a01	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x969	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x96d	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x970	          0x4863d2	                         movsxd rdx, edx	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x973	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x978	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x97b	            0x4898	                                    cdqe	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x97d	          0x4889d1	                            mov rcx, rdx	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x980	          0x4829c1	                            sub rcx, rax	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x983	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x987	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x98a	          0x4863d2	                         movsxd rdx, edx	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x98d	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x992	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x996	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x999	          0x4863d2	                         movsxd rdx, edx	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x99c	        0x4883c208	                              add rdx, 8	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x9a0	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x9a5	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x9a8	            0x4898	                                    cdqe	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x9aa	        0x488d0c02	                    lea rcx, [rdx + rax]	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x9ae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x9b2	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x9b5	          0x4863d2	                         movsxd rdx, edx	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x9b8	        0x4883c208	                              add rdx, 8	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x9bc	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x9c1	        0x8345c001	               add dword [rbp - 0x40], 1	       404	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3
0x9c5	        0x837dc007	               cmp dword [rbp - 0x40], 7	       404	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3
0x9c9	     0xf8e7bffffff	                           jle 0x400098a	       404	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3
0x9cf	            0xeb74	                           jmp 0x4000a85	       404	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3
0x9d1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       413	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x9d5	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       413	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x9d8	          0x4863d2	                         movsxd rdx, edx	       413	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x9db	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       413	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x9e0	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       413	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x9e4	            0x7f38	                            jg 0x4000a5e	       413	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x9e6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x9ea	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x9ed	          0x4863d2	                         movsxd rdx, edx	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x9f0	        0x4883c208	                              add rdx, 8	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x9f4	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x9f9	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x9fc	            0x4898	                                    cdqe	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x9fe	        0x488d0c02	                    lea rcx, [rdx + rax]	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0xa02	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0xa06	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0xa09	          0x4863d2	                         movsxd rdx, edx	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0xa0c	        0x4883c208	                              add rdx, 8	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0xa10	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0xa15	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	       417	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0xa1c	            0xeb27	                           jmp 0x4000a85	       417	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0xa1e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0xa22	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0xa25	          0x4863d2	                         movsxd rdx, edx	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0xa28	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0xa2d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0xa30	            0x4898	                                    cdqe	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0xa32	        0x488d0c02	                    lea rcx, [rdx + rax]	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0xa36	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0xa3a	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0xa3d	          0x4863d2	                         movsxd rdx, edx	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0xa40	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0xa45	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       424	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_19
0xa49	            0x7413	                            je 0x4000a9e	       424	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_19
0xa4b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       428	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	CALL_2
0xa4f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       428	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	CALL_2
0xa53	          0x4889d6	                            mov rsi, rdx	       428	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	CALL_2
0xa56	          0x4889c7	                            mov rdi, rax	       428	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	CALL_2
0xa59	      0xe836020000	           call sym.diff_check_unchanged	       428	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	CALL_2
0xa5e	      0x48837de000	               cmp qword [rbp - 0x20], 0	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0xa63	     0xf84cc000000	                            je 0x4000b75	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0xa69	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0xa6d	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0xa70	          0x4863d2	                         movsxd rdx, edx	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0xa73	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0xa78	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0xa7c	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0xa7f	          0x4863c9	                         movsxd rcx, ecx	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0xa82	        0x4883c108	                              add rcx, 8	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0xa86	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0xa8b	        0x488d0c02	                    lea rcx, [rdx + rax]	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0xa8f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       434	diff.c	FUNCTION_9	FOR_1	IF_20
0xa93	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       434	diff.c	FUNCTION_9	FOR_1	IF_20
0xa96	          0x4863d2	                         movsxd rdx, edx	       434	diff.c	FUNCTION_9	FOR_1	IF_20
0xa99	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       434	diff.c	FUNCTION_9	FOR_1	IF_20
0xa9e	          0x4839c1	                            cmp rcx, rax	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0xaa1	     0xf858e000000	                           jne 0x4000b75	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0xaa7	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       436	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4
0xaae	            0xeb58	                           jmp 0x4000b48	       436	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4
0xab0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0xab4	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0xab7	          0x4863d2	                         movsxd rdx, edx	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0xaba	        0x4883c20c	                            add rdx, 0xc	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0xabe	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0xac2	          0x4885c0	                           test rax, rax	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0xac5	            0x743d	                            je 0x4000b44	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0xac7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0xacb	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0xace	          0x4863d2	                         movsxd rdx, edx	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0xad1	        0x4883c208	                              add rdx, 8	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0xad5	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0xada	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0xade	          0x8b4dc0	             mov ecx, dword [rbp - 0x40]	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0xae1	          0x4863c9	                         movsxd rcx, ecx	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0xae4	        0x4883c108	                              add rcx, 8	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0xae8	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0xaed	        0x488d0c02	                    lea rcx, [rdx + rax]	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0xaf1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0xaf5	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0xaf8	          0x4863d2	                         movsxd rdx, edx	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0xafb	        0x4883c208	                              add rdx, 8	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0xaff	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0xb04	        0x8345c001	               add dword [rbp - 0x40], 1	       436	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4
0xb08	        0x837dc007	               cmp dword [rbp - 0x40], 7	       436	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4
0xb0c	            0x7ea2	                           jle 0x4000af0	       436	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4
0xb0e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       439	diff.c	FUNCTION_9	FOR_1	IF_20
0xb12	          0x488b10	                    mov rdx, qword [rax]	       439	diff.c	FUNCTION_9	FOR_1	IF_20
0xb15	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       439	diff.c	FUNCTION_9	FOR_1	IF_20
0xb19	          0x488910	                    mov qword [rax], rdx	       439	diff.c	FUNCTION_9	FOR_1	IF_20
0xb1c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       440	diff.c	FUNCTION_9	FOR_1	IF_20	CALL_3
0xb20	          0x4889c7	                            mov rdi, rax	       440	diff.c	FUNCTION_9	FOR_1	IF_20	CALL_3
0xb23	      0xe800000000	                          call 0x4000b68	       440	diff.c	FUNCTION_9	FOR_1	IF_20	CALL_3
0xb28	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       441	diff.c	FUNCTION_9	FOR_1	IF_20
0xb2c	          0x488b00	                    mov rax, qword [rax]	       441	diff.c	FUNCTION_9	FOR_1	IF_20
0xb2f	        0x488945d8	             mov qword [rbp - 0x28], rax	       441	diff.c	FUNCTION_9	FOR_1	IF_20
0xb33	            0xeb13	                           jmp 0x4000b88	       441	diff.c	FUNCTION_9	FOR_1	IF_20
0xb35	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       446	diff.c	FUNCTION_9	FOR_1	ELSE_12
0xb39	        0x488945e0	             mov qword [rbp - 0x20], rax	       446	diff.c	FUNCTION_9	FOR_1	ELSE_12
0xb3d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       447	diff.c	FUNCTION_9	FOR_1	ELSE_12
0xb41	          0x488b00	                    mov rax, qword [rax]	       447	diff.c	FUNCTION_9	FOR_1	ELSE_12
0xb44	        0x488945d8	             mov qword [rbp - 0x28], rax	       447	diff.c	FUNCTION_9	FOR_1	ELSE_12
0xb48	      0xe9f3f8ffff	                           jmp 0x4000480	       449	diff.c	FUNCTION_9	FOR_1
0xb4d	              0x90	                                     nop	       312	diff.c	FUNCTION_9	FOR_1	IF_7
0xb4e	            0xeb01	                           jmp 0x4000b91	       312	diff.c	FUNCTION_9	FOR_1	IF_7
0xb50	              0x90	                                     nop	       336	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9	IF_10
0xb51	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       451	diff.c	FUNCTION_9
0xb59	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       452	diff.c	FUNCTION_9
0xb5d	        0x488b4058	            mov rax, qword [rax + 0x58] 	       452	diff.c	FUNCTION_9
0xb61	        0x488945d8	             mov qword [rbp - 0x28], rax	       452	diff.c	FUNCTION_9
0xb65	      0xe99f000000	                           jmp 0x4000c49	       453	diff.c	FUNCTION_9	WHILE_1
0xb6a	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       456	diff.c	FUNCTION_9	WHILE_1	FOR_5
0xb71	            0xeb33	                           jmp 0x4000be6	       456	diff.c	FUNCTION_9	WHILE_1	FOR_5
0xb73	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0xb77	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0xb7a	          0x4863d2	                         movsxd rdx, edx	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0xb7d	        0x4883c20c	                            add rdx, 0xc	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0xb81	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0xb85	          0x4885c0	                           test rax, rax	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0xb88	            0x7418	                            je 0x4000be2	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0xb8a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0xb8e	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0xb91	          0x4863d2	                         movsxd rdx, edx	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0xb94	        0x4883c208	                              add rdx, 8	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0xb98	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0xb9d	          0x4885c0	                           test rax, rax	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0xba0	            0x750c	                           jne 0x4000bee	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0xba2	        0x8345c001	               add dword [rbp - 0x40], 1	       456	diff.c	FUNCTION_9	WHILE_1	FOR_5
0xba6	        0x837dc007	               cmp dword [rbp - 0x40], 7	       456	diff.c	FUNCTION_9	WHILE_1	FOR_5
0xbaa	            0x7ec7	                           jle 0x4000bb3	       456	diff.c	FUNCTION_9	WHILE_1	FOR_5
0xbac	            0xeb01	                           jmp 0x4000bef	       456	diff.c	FUNCTION_9	WHILE_1	FOR_5
0xbae	              0x90	                                     nop	       458	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0xbaf	        0x837dc008	               cmp dword [rbp - 0x40], 8	       459	diff.c	FUNCTION_9	WHILE_1	IF_23
0xbb3	            0x7541	                           jne 0x4000c36	       459	diff.c	FUNCTION_9	WHILE_1	IF_23
0xbb5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       461	diff.c	FUNCTION_9	WHILE_1	IF_23
0xbb9	          0x488b00	                    mov rax, qword [rax]	       461	diff.c	FUNCTION_9	WHILE_1	IF_23
0xbbc	        0x488945f8	                mov qword [rbp - 8], rax	       461	diff.c	FUNCTION_9	WHILE_1	IF_23
0xbc0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       462	diff.c	FUNCTION_9	WHILE_1	IF_23	CALL_4
0xbc4	          0x4889c7	                            mov rdi, rax	       462	diff.c	FUNCTION_9	WHILE_1	IF_23	CALL_4
0xbc7	      0xe800000000	                          call 0x4000c0c	       462	diff.c	FUNCTION_9	WHILE_1	IF_23	CALL_4
0xbcc	        0x488b45f8	                mov rax, qword [rbp - 8]	       463	diff.c	FUNCTION_9	WHILE_1	IF_23
0xbd0	        0x488945d8	             mov qword [rbp - 0x28], rax	       463	diff.c	FUNCTION_9	WHILE_1	IF_23
0xbd4	      0x48837de000	               cmp qword [rbp - 0x20], 0	       464	diff.c	FUNCTION_9	WHILE_1	IF_23	IF_24
0xbd9	            0x750e	                           jne 0x4000c29	       464	diff.c	FUNCTION_9	WHILE_1	IF_23	IF_24
0xbdb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       465	diff.c	FUNCTION_9	WHILE_1	IF_23	IF_24
0xbdf	        0x488b55f8	                mov rdx, qword [rbp - 8]	       465	diff.c	FUNCTION_9	WHILE_1	IF_23	IF_24
0xbe3	        0x48895058	             mov qword [rax + 0x58], rdx	       465	diff.c	FUNCTION_9	WHILE_1	IF_23	IF_24
0xbe7	            0xeb20	                           jmp 0x4000c49	       465	diff.c	FUNCTION_9	WHILE_1	IF_23	IF_24
0xbe9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       467	diff.c	FUNCTION_9	WHILE_1	IF_23	ELSE_13
0xbed	        0x488b55f8	                mov rdx, qword [rbp - 8]	       467	diff.c	FUNCTION_9	WHILE_1	IF_23	ELSE_13
0xbf1	          0x488910	                    mov qword [rax], rdx	       467	diff.c	FUNCTION_9	WHILE_1	IF_23	ELSE_13
0xbf4	            0xeb13	                           jmp 0x4000c49	       467	diff.c	FUNCTION_9	WHILE_1	IF_23	ELSE_13
0xbf6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       472	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0xbfa	        0x488945e0	             mov qword [rbp - 0x20], rax	       472	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0xbfe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       473	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0xc02	          0x488b00	                    mov rax, qword [rax]	       473	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0xc05	        0x488945d8	             mov qword [rbp - 0x28], rax	       473	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0xc09	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       453	diff.c	FUNCTION_9	WHILE_1
0xc0e	     0xf8556ffffff	                           jne 0x4000baa	       453	diff.c	FUNCTION_9	WHILE_1
0xc14	    0x488b05000000	            mov rax, qword [0x04000c5b] 	       478	diff.c	FUNCTION_9	ELSE_13	IF_25
0xc1b	        0x483945b8	            cmp qword [rbp - 0x48], rax 	       478	diff.c	FUNCTION_9	ELSE_13	IF_25
0xc1f	            0x7517	                           jne 0x4000c78	       478	diff.c	FUNCTION_9	ELSE_13	IF_25
0xc21	      0xbf01000000	                              mov edi, 1	       480	diff.c	FUNCTION_9	ELSE_13	IF_25	CALL_5
0xc26	      0xe87e030000	                    call sym.diff_redraw	       480	diff.c	FUNCTION_9	ELSE_13	IF_25	CALL_5
0xc2b	    0xc70500000000	               mov dword [0x04000c75], 1	       485	diff.c	FUNCTION_9	ELSE_13	IF_25
0xc35	            0xeb01	                           jmp 0x4000c78	       485	diff.c	FUNCTION_9	ELSE_13	IF_25
0xc37	              0x90	                                     nop	       293	diff.c	FUNCTION_9	FOR_1	IF_3	IF_4
0xc38	              0xc9	                                   leave	       487	diff.c	FUNCTION_9
0xc39	              0xc3	                                     ret	       487	diff.c	FUNCTION_9
ex_diffgetput	SWITCH,0:functions,0:WHILE,1:ELSE,12:IF,43:CALL,45:FOR,7:DO,0	742
0x469e	              0x55	                                push rbp	      2167	diff.c	FUNCTION_38
0x469f	          0x4889e5	                            mov rbp, rsp	      2167	diff.c	FUNCTION_38
0x46a2	              0x53	                                push rbx	      2167	diff.c	FUNCTION_38
0x46a3	    0x4881ecc80000	                           sub rsp, 0xc8	      2167	diff.c	FUNCTION_38
0x46aa	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	      2167	diff.c	FUNCTION_38
0x46b1	    0x64488b042528	                mov rax, qword fs:[0x28]	      2167	diff.c	FUNCTION_38
0x46ba	        0x488945e8	             mov qword [rbp - 0x18], rax	      2167	diff.c	FUNCTION_38
0x46be	            0x31c0	                            xor eax, eax	      2167	diff.c	FUNCTION_38
0x46c0	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      2170	diff.c	FUNCTION_38
0x46cb	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	      2186	diff.c	FUNCTION_38
0x46d5	    0x488b05000000	            mov rax, qword [0x0400471c] 	      2189	diff.c	FUNCTION_38	CALL_1
0x46dc	          0x4889c7	                            mov rdi, rax	      2189	diff.c	FUNCTION_38	CALL_1
0x46df	      0xe876bbffff	                   call sym.diff_buf_idx	      2189	diff.c	FUNCTION_38	CALL_1
0x46e4	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      2189	diff.c	FUNCTION_38	CALL_1
0x46ea	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 8	      2190	diff.c	FUNCTION_38	IF_1
0x46f1	            0x7517	                           jne 0x400474a	      2190	diff.c	FUNCTION_38	IF_1
0x46f3	      0xbf00000000	                              mov edi, 0	      2192	diff.c	FUNCTION_38	IF_1	CALL_3
0x46f8	      0xe800000000	                          call 0x400473d	      2192	diff.c	FUNCTION_38	IF_1	CALL_3
0x46fd	          0x4889c7	                            mov rdi, rax	      2192	diff.c	FUNCTION_38	IF_1	CALL_3
0x4700	      0xe800000000	                          call 0x4004745	      2192	diff.c	FUNCTION_38	IF_1	CALL_3
0x4705	      0xe9830c0000	                           jmp 0x40053cd	      2193	diff.c	FUNCTION_38	IF_1
0x470a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2196	diff.c	FUNCTION_38	IF_2
0x4711	          0x488b00	                    mov rax, qword [rax]	      2196	diff.c	FUNCTION_38	IF_2
0x4714	           0xfb600	                   movzx eax, byte [rax]	      2196	diff.c	FUNCTION_38	IF_2
0x4717	            0x84c0	                             test al, al	      2196	diff.c	FUNCTION_38	IF_2
0x4719	     0xf8595010000	                           jne 0x40048f4	      2196	diff.c	FUNCTION_38	IF_2
0x471f	    0xc78544ffffff	               mov dword [rbp - 0xbc], 0	      2199	diff.c	FUNCTION_38	IF_2	FOR_1
0x4729	      0xe983000000	                           jmp 0x40047f1	      2199	diff.c	FUNCTION_38	IF_2	FOR_1
0x472e	    0x488b05000000	            mov rax, qword [0x04004775] 	      2200	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x4735	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2200	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x473b	          0x4863d2	                         movsxd rdx, edx	      2200	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x473e	        0x4883c20c	                            add rdx, 0xc	      2200	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x4742	        0x488b14d0	            mov rdx, qword [rax + rdx*8]	      2200	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x4746	    0x488b05000000	            mov rax, qword [0x0400478d] 	      2200	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x474d	          0x4839c2	                            cmp rdx, rax	      2200	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x4750	            0x7458	                            je 0x40047ea	      2200	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x4752	    0x488b05000000	            mov rax, qword [0x04004799] 	      2201	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x4759	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2201	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x475f	          0x4863d2	                         movsxd rdx, edx	      2201	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x4762	        0x4883c20c	                            add rdx, 0xc	      2201	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x4766	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      2201	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x476a	          0x4885c0	                           test rax, rax	      2201	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x476d	            0x743b	                            je 0x40047ea	      2201	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x476f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2203	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x4776	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2203	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x4779	          0x83f872	                           cmp eax, 0x72	      2203	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x477c	            0x7540	                           jne 0x40047fe	      2203	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x477e	    0x488b05000000	            mov rax, qword [0x040047c5] 	      2204	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x4785	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2204	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x478b	          0x4863d2	                         movsxd rdx, edx	      2204	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x478e	        0x4883c20c	                            add rdx, 0xc	      2204	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x4792	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      2204	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x4796	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      2204	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x479c	            0x85c0	                           test eax, eax	      2204	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x479e	            0x751e	                           jne 0x40047fe	      2204	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3	IF_4
0x47a0	    0xc78564ffffff	               mov dword [rbp - 0x9c], 1	      2206	diff.c	FUNCTION_38	IF_2	FOR_1	IF_3
0x47aa	    0x838544ffffff	               add dword [rbp - 0xbc], 1	      2199	diff.c	FUNCTION_38	IF_2	FOR_1
0x47b1	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 7	      2199	diff.c	FUNCTION_38	IF_2	FOR_1
0x47b8	     0xf8e70ffffff	                           jle 0x400476e	      2199	diff.c	FUNCTION_38	IF_2	FOR_1
0x47be	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 8	      2208	diff.c	FUNCTION_38	IF_2	IF_5
0x47c5	            0x7537	                           jne 0x400483e	      2208	diff.c	FUNCTION_38	IF_2	IF_5
0x47c7	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      2210	diff.c	FUNCTION_38	IF_2	IF_5	IF_6
0x47ce	            0x7417	                            je 0x4004827	      2210	diff.c	FUNCTION_38	IF_2	IF_5	IF_6
0x47d0	      0xbf00000000	                              mov edi, 0	      2211	diff.c	FUNCTION_38	IF_2	IF_5	CALL_5
0x47d5	      0xe800000000	                          call 0x400481a	      2211	diff.c	FUNCTION_38	IF_2	IF_5	CALL_5
0x47da	          0x4889c7	                            mov rdi, rax	      2211	diff.c	FUNCTION_38	IF_2	IF_5	CALL_5
0x47dd	      0xe800000000	                          call 0x4004822	      2211	diff.c	FUNCTION_38	IF_2	IF_5	CALL_5
0x47e2	      0xe9a60b0000	                           jmp 0x40053cd	      2214	diff.c	FUNCTION_38	IF_2	IF_5
0x47e7	      0xbf00000000	                              mov edi, 0	      2213	diff.c	FUNCTION_38	IF_2	IF_5	CALL_7
0x47ec	      0xe800000000	                          call 0x4004831	      2213	diff.c	FUNCTION_38	IF_2	IF_5	CALL_7
0x47f1	          0x4889c7	                            mov rdi, rax	      2213	diff.c	FUNCTION_38	IF_2	IF_5	CALL_7
0x47f4	      0xe800000000	                          call 0x4004839	      2213	diff.c	FUNCTION_38	IF_2	IF_5	CALL_7
0x47f9	      0xe98f0b0000	                           jmp 0x40053cd	      2214	diff.c	FUNCTION_38	IF_2	IF_5
0x47fe	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      2218	diff.c	FUNCTION_38	IF_2	FOR_2
0x4804	          0x83c001	                              add eax, 1	      2218	diff.c	FUNCTION_38	IF_2	FOR_2
0x4807	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	      2218	diff.c	FUNCTION_38	IF_2	FOR_2
0x480d	      0xe990000000	                           jmp 0x40048e2	      2218	diff.c	FUNCTION_38	IF_2	FOR_2
0x4812	    0x488b05000000	            mov rax, qword [0x04004859] 	      2219	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4819	    0x8b9550ffffff	             mov edx, dword [rbp - 0xb0]	      2219	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x481f	          0x4863d2	                         movsxd rdx, edx	      2219	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4822	        0x4883c20c	                            add rdx, 0xc	      2219	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4826	        0x488b14d0	            mov rdx, qword [rax + rdx*8]	      2219	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x482a	    0x488b05000000	            mov rax, qword [0x04004871] 	      2219	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4831	          0x4839c2	                            cmp rdx, rax	      2219	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4834	            0x7465	                            je 0x40048db	      2219	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4836	    0x488b05000000	            mov rax, qword [0x0400487d] 	      2220	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x483d	    0x8b9550ffffff	             mov edx, dword [rbp - 0xb0]	      2220	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4843	          0x4863d2	                         movsxd rdx, edx	      2220	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4846	        0x4883c20c	                            add rdx, 0xc	      2220	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x484a	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      2220	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x484e	          0x4885c0	                           test rax, rax	      2220	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4851	            0x7448	                            je 0x40048db	      2220	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4853	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x485a	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x485d	          0x83f872	                           cmp eax, 0x72	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4860	            0x7522	                           jne 0x40048c4	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4862	    0x488b05000000	            mov rax, qword [0x040048a9] 	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4869	    0x8b9550ffffff	             mov edx, dword [rbp - 0xb0]	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x486f	          0x4863d2	                         movsxd rdx, edx	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4872	        0x4883c20c	                            add rdx, 0xc	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4876	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x487a	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4880	            0x85c0	                           test eax, eax	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4882	            0x7417	                            je 0x40048db	      2221	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x4884	      0xbf00000000	                              mov edi, 0	      2223	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7	CALL_9
0x4889	      0xe800000000	                          call 0x40048ce	      2223	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7	CALL_9
0x488e	          0x4889c7	                            mov rdi, rax	      2223	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7	CALL_9
0x4891	      0xe800000000	                          call 0x40048d6	      2223	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7	CALL_9
0x4896	      0xe9f20a0000	                           jmp 0x40053cd	      2224	diff.c	FUNCTION_38	IF_2	FOR_2	IF_7
0x489b	    0x838550ffffff	               add dword [rbp - 0xb0], 1	      2218	diff.c	FUNCTION_38	IF_2	FOR_2
0x48a2	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 7	      2218	diff.c	FUNCTION_38	IF_2	FOR_2
0x48a9	     0xf8e63ffffff	                           jle 0x4004852	      2218	diff.c	FUNCTION_38	IF_2	FOR_2
0x48af	      0xe9a6010000	                           jmp 0x4004a9a	      2218	diff.c	FUNCTION_38	IF_2	FOR_2
0x48b4	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2230	diff.c	FUNCTION_38	ELSE_2	CALL_10
0x48bb	          0x488b18	                    mov rbx, qword [rax]	      2230	diff.c	FUNCTION_38	ELSE_2	CALL_10
0x48be	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2230	diff.c	FUNCTION_38	ELSE_2	CALL_10
0x48c5	          0x488b00	                    mov rax, qword [rax]	      2230	diff.c	FUNCTION_38	ELSE_2	CALL_10
0x48c8	          0x4889c7	                            mov rdi, rax	      2230	diff.c	FUNCTION_38	ELSE_2	CALL_10
0x48cb	      0xe800000000	                          call 0x4004910	      2230	diff.c	FUNCTION_38	ELSE_2	CALL_10
0x48d0	          0x4801d8	                            add rax, rbx	      2230	diff.c	FUNCTION_38	ELSE_2	CALL_10
0x48d3	        0x48894598	             mov qword [rbp - 0x68], rax	      2230	diff.c	FUNCTION_38	ELSE_2	CALL_10
0x48d7	            0xeb05	                           jmp 0x400491e	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x48d9	      0x48836d9801	               sub qword [rbp - 0x68], 1	      2232	diff.c	FUNCTION_38	ELSE_2	WHILE_1
0x48de	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x48e5	          0x488b00	                    mov rax, qword [rax]	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x48e8	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x48ec	            0x731e	                           jae 0x400494c	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x48ee	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x48f2	        0x4883e801	                              sub rax, 1	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x48f6	           0xfb600	                   movzx eax, byte [rax]	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x48f9	            0x3c20	                            cmp al, 0x20	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x48fb	            0x74dc	                            je 0x4004919	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x48fd	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x4901	        0x4883e801	                              sub rax, 1	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x4905	           0xfb600	                   movzx eax, byte [rax]	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x4908	            0x3c09	                               cmp al, 9	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x490a	            0x74cd	                            je 0x4004919	      2231	diff.c	FUNCTION_38	ELSE_2	WHILE_1	CALL_11
0x490c	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4916	            0xeb07	                           jmp 0x400495f	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4918	    0x838550ffffff	               add dword [rbp - 0xb0], 1	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x491f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4926	          0x488b10	                    mov rdx, qword [rax]	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4929	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x492f	            0x4898	                                    cdqe	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4931	          0x4801d0	                            add rax, rdx	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4934	           0xfb600	                   movzx eax, byte [rax]	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4937	           0xfb6c0	                           movzx eax, al	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x493a	            0x89c7	                            mov edi, eax	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x493c	      0xe800000000	                          call 0x4004981	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4941	            0x85c0	                           test eax, eax	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4943	            0x741b	                            je 0x40049a0	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4945	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x494c	          0x488b10	                    mov rdx, qword [rax]	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x494f	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4955	            0x4898	                                    cdqe	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4957	          0x4801d0	                            add rax, rdx	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x495a	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x495e	            0x72b8	                            jb 0x4004958	      2233	diff.c	FUNCTION_38	ELSE_2	FOR_3	CALL_12
0x4960	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2235	diff.c	FUNCTION_38	ELSE_2	IF_8
0x4967	          0x488b10	                    mov rdx, qword [rax]	      2235	diff.c	FUNCTION_38	ELSE_2	IF_8
0x496a	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2235	diff.c	FUNCTION_38	ELSE_2	IF_8
0x4970	            0x4898	                                    cdqe	      2235	diff.c	FUNCTION_38	ELSE_2	IF_8
0x4972	          0x4801d0	                            add rax, rdx	      2235	diff.c	FUNCTION_38	ELSE_2	IF_8
0x4975	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      2235	diff.c	FUNCTION_38	ELSE_2	IF_8
0x4979	            0x751a	                           jne 0x40049d5	      2235	diff.c	FUNCTION_38	ELSE_2	IF_8
0x497b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2236	diff.c	FUNCTION_38	ELSE_2	CALL_13
0x4982	          0x488b00	                    mov rax, qword [rax]	      2236	diff.c	FUNCTION_38	ELSE_2	CALL_13
0x4985	          0x4889c7	                            mov rdi, rax	      2236	diff.c	FUNCTION_38	ELSE_2	CALL_13
0x4988	      0xe800000000	                          call 0x40049cd	      2236	diff.c	FUNCTION_38	ELSE_2	CALL_13
0x498d	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	      2236	diff.c	FUNCTION_38	ELSE_2	CALL_13
0x4993	            0xeb39	                           jmp 0x4004a0e	      2236	diff.c	FUNCTION_38	ELSE_2	CALL_13
0x4995	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2239	diff.c	FUNCTION_38	ELSE_2	ELSE_3	CALL_14
0x499c	          0x488b00	                    mov rax, qword [rax]	      2239	diff.c	FUNCTION_38	ELSE_2	ELSE_3	CALL_14
0x499f	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2239	diff.c	FUNCTION_38	ELSE_2	ELSE_3	CALL_14
0x49a3	    0x41b800000000	                              mov r8d, 0	      2239	diff.c	FUNCTION_38	ELSE_2	ELSE_3	CALL_14
0x49a9	      0xb901000000	                              mov ecx, 1	      2239	diff.c	FUNCTION_38	ELSE_2	ELSE_3	CALL_14
0x49ae	      0xba00000000	                              mov edx, 0	      2239	diff.c	FUNCTION_38	ELSE_2	ELSE_3	CALL_14
0x49b3	          0x4889c7	                            mov rdi, rax	      2239	diff.c	FUNCTION_38	ELSE_2	ELSE_3	CALL_14
0x49b6	      0xe800000000	                          call 0x40049fb	      2239	diff.c	FUNCTION_38	ELSE_2	ELSE_3	CALL_14
0x49bb	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	      2239	diff.c	FUNCTION_38	ELSE_2	ELSE_3	CALL_14
0x49c1	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 0	      2240	diff.c	FUNCTION_38	ELSE_2	ELSE_3	IF_9
0x49c8	     0xf88bb090000	                            js 0x40053c9	      2240	diff.c	FUNCTION_38	ELSE_2	ELSE_3	IF_9
0x49ce	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2243	diff.c	FUNCTION_38	ELSE_2	CALL_15
0x49d4	            0x89c7	                            mov edi, eax	      2243	diff.c	FUNCTION_38	ELSE_2	CALL_15
0x49d6	      0xe800000000	                          call 0x4004a1b	      2243	diff.c	FUNCTION_38	ELSE_2	CALL_15
0x49db	        0x488945a0	             mov qword [rbp - 0x60], rax	      2243	diff.c	FUNCTION_38	ELSE_2	CALL_15
0x49df	      0x48837da000	               cmp qword [rbp - 0x60], 0	      2244	diff.c	FUNCTION_38	ELSE_2	IF_10
0x49e4	            0x7524	                           jne 0x4004a4a	      2244	diff.c	FUNCTION_38	ELSE_2	IF_10
0x49e6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2246	diff.c	FUNCTION_38	ELSE_2	IF_10	CALL_17
0x49ed	          0x488b18	                    mov rbx, qword [rax]	      2246	diff.c	FUNCTION_38	ELSE_2	IF_10	CALL_17
0x49f0	      0xbf00000000	                              mov edi, 0	      2246	diff.c	FUNCTION_38	ELSE_2	IF_10	CALL_17
0x49f5	      0xe800000000	                          call 0x4004a3a	      2246	diff.c	FUNCTION_38	ELSE_2	IF_10	CALL_17
0x49fa	          0x4889de	                            mov rsi, rbx	      2246	diff.c	FUNCTION_38	ELSE_2	IF_10	CALL_17
0x49fd	          0x4889c7	                            mov rdi, rax	      2246	diff.c	FUNCTION_38	ELSE_2	IF_10	CALL_17
0x4a00	      0xe800000000	                          call 0x4004a45	      2246	diff.c	FUNCTION_38	ELSE_2	IF_10	CALL_17
0x4a05	      0xe983090000	                           jmp 0x40053cd	      2247	diff.c	FUNCTION_38	ELSE_2	IF_10
0x4a0a	    0x488b05000000	            mov rax, qword [0x04004a51] 	      2249	diff.c	FUNCTION_38	ELSE_2	IF_11
0x4a11	        0x483945a0	            cmp qword [rbp - 0x60], rax 	      2249	diff.c	FUNCTION_38	ELSE_2	IF_11
0x4a15	     0xf8471090000	                            je 0x40053cc	      2249	diff.c	FUNCTION_38	ELSE_2	IF_11
0x4a1b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2251	diff.c	FUNCTION_38	ELSE_2	CALL_18
0x4a1f	          0x4889c7	                            mov rdi, rax	      2251	diff.c	FUNCTION_38	ELSE_2	CALL_18
0x4a22	      0xe833b8ffff	                   call sym.diff_buf_idx	      2251	diff.c	FUNCTION_38	ELSE_2	CALL_18
0x4a27	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	      2251	diff.c	FUNCTION_38	ELSE_2	CALL_18
0x4a2d	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 8	      2252	diff.c	FUNCTION_38	ELSE_2	IF_12
0x4a34	            0x7524	                           jne 0x4004a9a	      2252	diff.c	FUNCTION_38	ELSE_2	IF_12
0x4a36	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2254	diff.c	FUNCTION_38	ELSE_2	IF_12	CALL_20
0x4a3d	          0x488b18	                    mov rbx, qword [rax]	      2254	diff.c	FUNCTION_38	ELSE_2	IF_12	CALL_20
0x4a40	      0xbf00000000	                              mov edi, 0	      2254	diff.c	FUNCTION_38	ELSE_2	IF_12	CALL_20
0x4a45	      0xe800000000	                          call 0x4004a8a	      2254	diff.c	FUNCTION_38	ELSE_2	IF_12	CALL_20
0x4a4a	          0x4889de	                            mov rsi, rbx	      2254	diff.c	FUNCTION_38	ELSE_2	IF_12	CALL_20
0x4a4d	          0x4889c7	                            mov rdi, rax	      2254	diff.c	FUNCTION_38	ELSE_2	IF_12	CALL_20
0x4a50	      0xe800000000	                          call 0x4004a95	      2254	diff.c	FUNCTION_38	ELSE_2	IF_12	CALL_20
0x4a55	      0xe933090000	                           jmp 0x40053cd	      2255	diff.c	FUNCTION_38	ELSE_2	IF_12
0x4a5a	    0xc70500000000	               mov dword [0x04004aa4], 1	      2259	diff.c	FUNCTION_38
0x4a64	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2262	diff.c	FUNCTION_38	IF_13
0x4a6b	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2262	diff.c	FUNCTION_38	IF_13
0x4a6e	            0x85c0	                           test eax, eax	      2262	diff.c	FUNCTION_38	IF_13
0x4a70	     0xf85ca000000	                           jne 0x4004b80	      2262	diff.c	FUNCTION_38	IF_13
0x4a76	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2266	diff.c	FUNCTION_38	IF_13	IF_14
0x4a7d	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2266	diff.c	FUNCTION_38	IF_13	IF_14
0x4a80	          0x83f86f	                           cmp eax, 0x6f	      2266	diff.c	FUNCTION_38	IF_13	IF_14
0x4a83	     0xf858d000000	                           jne 0x4004b56	      2266	diff.c	FUNCTION_38	IF_13	IF_14
0x4a89	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2267	diff.c	FUNCTION_38	IF_13	IF_14
0x4a90	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2267	diff.c	FUNCTION_38	IF_13	IF_14
0x4a94	    0x488b05000000	            mov rax, qword [0x04004adb] 	      2267	diff.c	FUNCTION_38	IF_13	IF_14
0x4a9b	          0x488b00	                    mov rax, qword [rax]	      2267	diff.c	FUNCTION_38	IF_13	IF_14
0x4a9e	          0x4839c2	                            cmp rdx, rax	      2267	diff.c	FUNCTION_38	IF_13	IF_14
0x4aa1	            0x7573	                           jne 0x4004b56	      2267	diff.c	FUNCTION_38	IF_13	IF_14
0x4aa3	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2268	diff.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x4aaa	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2268	diff.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x4aae	    0x488b05000000	            mov rax, qword [0x04004af5] 	      2268	diff.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x4ab5	          0x4889d6	                            mov rsi, rdx	      2268	diff.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x4ab8	          0x4889c7	                            mov rdi, rax	      2268	diff.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x4abb	      0xe800000000	                          call 0x4004b00	      2268	diff.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x4ac0	            0x85c0	                           test eax, eax	      2268	diff.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x4ac2	            0x7552	                           jne 0x4004b56	      2268	diff.c	FUNCTION_38	IF_13	IF_14	CALL_21
0x4ac4	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4acb	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4acf	        0x4883f801	                              cmp rax, 1	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4ad3	            0x7425	                            je 0x4004b3a	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4ad5	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4adc	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4ae0	        0x488d50ff	                      lea rdx, [rax - 1]	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4ae4	    0x488b05000000	            mov rax, qword [0x04004b2b] 	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4aeb	          0x4889d6	                            mov rsi, rdx	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4aee	          0x4889c7	                            mov rdi, rax	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4af1	      0xe800000000	                          call 0x4004b36	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4af6	            0x85c0	                           test eax, eax	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4af8	            0x751c	                           jne 0x4004b56	      2269	diff.c	FUNCTION_38	IF_13	IF_14	CALL_22
0x4afa	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2270	diff.c	FUNCTION_38	IF_13	IF_14
0x4b01	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2270	diff.c	FUNCTION_38	IF_13	IF_14
0x4b05	        0x488d5001	                      lea rdx, [rax + 1]	      2270	diff.c	FUNCTION_38	IF_13	IF_14
0x4b09	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2270	diff.c	FUNCTION_38	IF_13	IF_14
0x4b10	        0x48895048	             mov qword [rax + 0x48], rdx	      2270	diff.c	FUNCTION_38	IF_13	IF_14
0x4b14	            0xeb2a	                           jmp 0x4004b80	      2270	diff.c	FUNCTION_38	IF_13	IF_14
0x4b16	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2271	diff.c	FUNCTION_38	IF_13	ELSE_4	IF_15
0x4b1d	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2271	diff.c	FUNCTION_38	IF_13	ELSE_4	IF_15
0x4b21	          0x4885c0	                           test rax, rax	      2271	diff.c	FUNCTION_38	IF_13	ELSE_4	IF_15
0x4b24	            0x7e1a	                           jle 0x4004b80	      2271	diff.c	FUNCTION_38	IF_13	ELSE_4	IF_15
0x4b26	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2272	diff.c	FUNCTION_38	IF_13	ELSE_4	IF_15
0x4b2d	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2272	diff.c	FUNCTION_38	IF_13	ELSE_4	IF_15
0x4b31	        0x488d50ff	                      lea rdx, [rax - 1]	      2272	diff.c	FUNCTION_38	IF_13	ELSE_4	IF_15
0x4b35	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2272	diff.c	FUNCTION_38	IF_13	ELSE_4	IF_15
0x4b3c	        0x48895040	             mov qword [rax + 0x40], rdx	      2272	diff.c	FUNCTION_38	IF_13	ELSE_4	IF_15
0x4b40	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2275	diff.c	FUNCTION_38	IF_16
0x4b47	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2275	diff.c	FUNCTION_38	IF_16
0x4b4a	          0x83f86f	                           cmp eax, 0x6f	      2275	diff.c	FUNCTION_38	IF_16
0x4b4d	            0x751a	                           jne 0x4004ba9	      2275	diff.c	FUNCTION_38	IF_16
0x4b4f	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      2277	diff.c	FUNCTION_38	IF_16
0x4b55	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      2277	diff.c	FUNCTION_38	IF_16
0x4b5b	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2278	diff.c	FUNCTION_38	IF_16
0x4b61	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	      2278	diff.c	FUNCTION_38	IF_16
0x4b67	            0xeb3f	                           jmp 0x4004be8	      2278	diff.c	FUNCTION_38	IF_16
0x4b69	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2282	diff.c	FUNCTION_38	ELSE_5
0x4b6f	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      2282	diff.c	FUNCTION_38	ELSE_5
0x4b75	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      2283	diff.c	FUNCTION_38	ELSE_5
0x4b7b	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	      2283	diff.c	FUNCTION_38	ELSE_5
0x4b81	    0x488b05000000	            mov rax, qword [0x04004bc8] 	      2287	diff.c	FUNCTION_38	ELSE_5	CALL_23
0x4b88	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2287	diff.c	FUNCTION_38	ELSE_5	CALL_23
0x4b8e	          0x4863d2	                         movsxd rdx, edx	      2287	diff.c	FUNCTION_38	ELSE_5	CALL_23
0x4b91	        0x4883c20c	                            add rdx, 0xc	      2287	diff.c	FUNCTION_38	ELSE_5	CALL_23
0x4b95	        0x488b14d0	            mov rdx, qword [rax + rdx*8]	      2287	diff.c	FUNCTION_38	ELSE_5	CALL_23
0x4b99	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2287	diff.c	FUNCTION_38	ELSE_5	CALL_23
0x4b9d	          0x4889d6	                            mov rsi, rdx	      2287	diff.c	FUNCTION_38	ELSE_5	CALL_23
0x4ba0	          0x4889c7	                            mov rdi, rax	      2287	diff.c	FUNCTION_38	ELSE_5	CALL_23
0x4ba3	      0xe800000000	                          call 0x4004be8	      2287	diff.c	FUNCTION_38	ELSE_5	CALL_23
0x4ba8	    0x488b05000000	            mov rax, qword [0x04004bef] 	      2293	diff.c	FUNCTION_38	IF_17
0x4baf	    0x8b80c8000000	            mov eax, dword [rax + 0xc8] 	      2293	diff.c	FUNCTION_38	IF_17
0x4bb5	            0x85c0	                           test eax, eax	      2293	diff.c	FUNCTION_38	IF_17
0x4bb7	            0x7538	                           jne 0x4004c31	      2293	diff.c	FUNCTION_38	IF_17
0x4bb9	      0xbf00000000	                              mov edi, 0	      2295	diff.c	FUNCTION_38	IF_17	CALL_24
0x4bbe	      0xe800000000	                          call 0x4004c03	      2295	diff.c	FUNCTION_38	IF_17	CALL_24
0x4bc3	    0x488b05000000	            mov rax, qword [0x04004c0a] 	      2296	diff.c	FUNCTION_38	IF_17	IF_18	CALL_25
0x4bca	          0x4889c7	                            mov rdi, rax	      2296	diff.c	FUNCTION_38	IF_17	IF_18	CALL_25
0x4bcd	      0xe888b6ffff	                   call sym.diff_buf_idx	      2296	diff.c	FUNCTION_38	IF_17	IF_18	CALL_25
0x4bd2	    0x3b854cffffff	             cmp eax, dword [rbp - 0xb4]	      2296	diff.c	FUNCTION_38	IF_17	IF_18	CALL_25
0x4bd8	            0x7417	                            je 0x4004c31	      2296	diff.c	FUNCTION_38	IF_17	IF_18	CALL_25
0x4bda	      0xbf00000000	                              mov edi, 0	      2298	diff.c	FUNCTION_38	IF_17	IF_18	CALL_27
0x4bdf	      0xe800000000	                          call 0x4004c24	      2298	diff.c	FUNCTION_38	IF_17	IF_18	CALL_27
0x4be4	          0x4889c7	                            mov rdi, rax	      2298	diff.c	FUNCTION_38	IF_17	IF_18	CALL_27
0x4be7	      0xe800000000	                          call 0x4004c2c	      2298	diff.c	FUNCTION_38	IF_17	IF_18	CALL_27
0x4bec	      0xe99c070000	                           jmp 0x40053cd	      2299	diff.c	FUNCTION_38	IF_17	IF_18
0x4bf1	    0x48c745880000	               mov qword [rbp - 0x78], 0	      2303	diff.c	FUNCTION_38
0x4bf9	    0x488b05000000	            mov rax, qword [0x04004c40] 	      2304	diff.c	FUNCTION_38	FOR_4
0x4c00	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2304	diff.c	FUNCTION_38	FOR_4
0x4c04	        0x48894580	             mov qword [rbp - 0x80], rax	      2304	diff.c	FUNCTION_38	FOR_4
0x4c08	      0xe91f070000	                           jmp 0x400536c	      2304	diff.c	FUNCTION_38	FOR_4
0x4c0d	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2306	diff.c	FUNCTION_38	FOR_4	IF_19
0x4c11	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	      2306	diff.c	FUNCTION_38	FOR_4	IF_19
0x4c17	          0x4863d2	                         movsxd rdx, edx	      2306	diff.c	FUNCTION_38	FOR_4	IF_19
0x4c1a	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2306	diff.c	FUNCTION_38	FOR_4	IF_19
0x4c1f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2306	diff.c	FUNCTION_38	FOR_4	IF_19
0x4c26	        0x488b4848	            mov rcx, qword [rax + 0x48] 	      2306	diff.c	FUNCTION_38	FOR_4	IF_19
0x4c2a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2306	diff.c	FUNCTION_38	FOR_4	IF_19
0x4c31	          0x4801c8	                            add rax, rcx	      2306	diff.c	FUNCTION_38	FOR_4	IF_19
0x4c34	          0x4839c2	                            cmp rdx, rax	      2306	diff.c	FUNCTION_38	FOR_4	IF_19
0x4c37	     0xf8ffc060000	                            jg 0x4005379	      2306	diff.c	FUNCTION_38	FOR_4	IF_19
0x4c3d	    0x48c745900000	               mov qword [rbp - 0x70], 0	      2309	diff.c	FUNCTION_38	FOR_4
0x4c45	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2310	diff.c	FUNCTION_38	FOR_4
0x4c49	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	      2310	diff.c	FUNCTION_38	FOR_4
0x4c4f	          0x4863d2	                         movsxd rdx, edx	      2310	diff.c	FUNCTION_38	FOR_4
0x4c52	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2310	diff.c	FUNCTION_38	FOR_4
0x4c57	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2310	diff.c	FUNCTION_38	FOR_4
0x4c5e	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2311	diff.c	FUNCTION_38	FOR_4
0x4c62	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	      2311	diff.c	FUNCTION_38	FOR_4
0x4c68	          0x4863d2	                         movsxd rdx, edx	      2311	diff.c	FUNCTION_38	FOR_4
0x4c6b	        0x4883c208	                              add rdx, 8	      2311	diff.c	FUNCTION_38	FOR_4
0x4c6f	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2311	diff.c	FUNCTION_38	FOR_4
0x4c74	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	      2311	diff.c	FUNCTION_38	FOR_4
0x4c7a	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4c7e	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4c84	          0x4863d2	                         movsxd rdx, edx	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4c87	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4c8c	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4c90	    0x8b8d68ffffff	             mov ecx, dword [rbp - 0x98]	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4c96	          0x4863c9	                         movsxd rcx, ecx	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4c99	        0x4883c108	                              add rcx, 8	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4c9d	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4ca2	        0x488d0c02	                    lea rcx, [rdx + rax]	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4ca6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4cad	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4cb1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4cb8	          0x4801d0	                            add rax, rdx	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4cbb	          0x4839c1	                            cmp rcx, rax	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4cbe	     0xf8e4e060000	                           jle 0x4005352	      2312	diff.c	FUNCTION_38	FOR_4	IF_20
0x4cc4	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      2313	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_28
0x4cca	          0x4863d0	                         movsxd rdx, eax	      2313	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_28
0x4ccd	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2313	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_28
0x4cd4	          0x4801c2	                            add rdx, rax	      2313	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_28
0x4cd7	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2313	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_28
0x4cde	        0x4883e801	                              sub rax, 1	      2313	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_28
0x4ce2	          0x4889d6	                            mov rsi, rdx	      2313	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_28
0x4ce5	          0x4889c7	                            mov rdi, rax	      2313	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_28
0x4ce8	      0xe800000000	                          call 0x4004d2d	      2313	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_28
0x4ced	            0x85c0	                           test eax, eax	      2313	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_28
0x4cef	     0xf841d060000	                            je 0x4005352	      2313	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_28
0x4cf5	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	      2316	diff.c	FUNCTION_38	FOR_4	IF_20
0x4cff	    0xc7855cffffff	               mov dword [rbp - 0xa4], 0	      2317	diff.c	FUNCTION_38	FOR_4	IF_20
0x4d09	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2318	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4d10	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2318	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4d13	            0x85c0	                           test eax, eax	      2318	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4d15	     0xf8e9e010000	                           jle 0x4004ef9	      2318	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4d1b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4d22	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4d26	            0x89c2	                            mov edx, eax	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4d28	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4d2f	          0x8d0c02	                    lea ecx, [rdx + rax]	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4d32	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4d36	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4d3c	          0x4863d2	                         movsxd rdx, edx	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4d3f	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4d44	            0x29c1	                            sub ecx, eax	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4d46	            0x89c8	                            mov eax, ecx	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4d48	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2321	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4d4e	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	      2322	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22
0x4d55	            0x7e46	                           jle 0x4004ddd	      2322	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22
0x4d57	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2325	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	IF_23
0x4d5d	    0x3b8540ffffff	             cmp eax, dword [rbp - 0xc0]	      2325	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	IF_23
0x4d63	            0x7e1b	                           jle 0x4004dc0	      2325	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	IF_23
0x4d65	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      2327	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	IF_23
0x4d6b	            0x4898	                                    cdqe	      2327	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	IF_23
0x4d6d	    0x48018570ffff	            add qword [rbp - 0x90], rax 	      2327	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	IF_23
0x4d74	    0xc78540ffffff	               mov dword [rbp - 0xc0], 0	      2328	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	IF_23
0x4d7e	            0xeb27	                           jmp 0x4004de7	      2328	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	IF_23
0x4d80	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2332	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	ELSE_6
0x4d86	    0x298540ffffff	             sub dword [rbp - 0xc0], eax	      2332	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	ELSE_6
0x4d8c	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2333	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	ELSE_6
0x4d92	            0x4898	                                    cdqe	      2333	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	ELSE_6
0x4d94	    0x48018570ffff	            add qword [rbp - 0x90], rax 	      2333	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	ELSE_6
0x4d9b	            0xeb0a	                           jmp 0x4004de7	      2333	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_22	ELSE_6
0x4d9d	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	      2337	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	ELSE_7
0x4da7	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4dab	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4db1	          0x4863d2	                         movsxd rdx, edx	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4db4	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4db9	            0x89c1	                            mov ecx, eax	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4dbb	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4dbf	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4dc5	          0x4863d2	                         movsxd rdx, edx	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4dc8	        0x4883c208	                              add rdx, 8	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4dcc	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4dd1	          0x8d1401	                    lea edx, [rcx + rax]	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4dd4	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2340	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4ddb	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2340	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4ddf	            0x89c1	                            mov ecx, eax	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4de1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4de8	             0x1c8	                            add eax, ecx	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4dea	            0x29c2	                            sub edx, eax	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4dec	            0x89d0	                            mov eax, edx	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4dee	          0x83e801	                              sub eax, 1	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4df1	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      2339	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21
0x4df7	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      2341	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24
0x4dfe	     0xf8eab000000	                           jle 0x4004eef	      2341	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24
0x4e04	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2344	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4e0a	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	      2344	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4e10	            0x754c	                           jne 0x4004e9e	      2344	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4e12	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4e16	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4e1c	          0x4863d2	                         movsxd rdx, edx	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4e1f	        0x4883c208	                              add rdx, 8	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4e23	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4e28	            0x89c2	                            mov edx, eax	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4e2a	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4e30	            0x29c2	                            sub edx, eax	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4e32	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4e38	            0x29c2	                            sub edx, eax	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4e3a	            0x89d0	                            mov eax, edx	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4e3c	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	      2346	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25
0x4e42	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      2347	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25	IF_26
0x4e48	    0x3b8550ffffff	             cmp eax, dword [rbp - 0xb0]	      2347	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25	IF_26
0x4e4e	            0x7e69	                           jle 0x4004ef9	      2347	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25	IF_26
0x4e50	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2348	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25	IF_26
0x4e56	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	      2348	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25	IF_26
0x4e5c	            0xeb5b	                           jmp 0x4004ef9	      2348	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	IF_25	IF_26
0x4e5e	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2352	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4e64	    0x298540ffffff	             sub dword [rbp - 0xc0], eax	      2352	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4e6a	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4e6e	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4e74	          0x4863d2	                         movsxd rdx, edx	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4e77	        0x4883c208	                              add rdx, 8	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4e7b	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4e80	            0x89c2	                            mov edx, eax	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4e82	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4e88	            0x29c2	                            sub edx, eax	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4e8a	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4e90	            0x29c2	                            sub edx, eax	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4e92	            0x89d0	                            mov eax, edx	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4e94	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      2353	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8
0x4e9a	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      2354	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8	IF_27
0x4ea1	            0x7916	                           jns 0x4004ef9	      2354	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8	IF_27
0x4ea3	    0xc7855cffffff	               mov dword [rbp - 0xa4], 0	      2355	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8	IF_27
0x4ead	            0xeb0a	                           jmp 0x4004ef9	      2355	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	IF_24	ELSE_8	IF_27
0x4eaf	    0xc7855cffffff	               mov dword [rbp - 0xa4], 0	      2359	diff.c	FUNCTION_38	FOR_4	IF_20	IF_21	ELSE_9
0x4eb9	    0x488b05000000	            mov rax, qword [0x04004f00] 	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4ec0	          0x488b00	                    mov rax, qword [rax]	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4ec3	        0x4883f801	                              cmp rax, 1	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4ec7	            0x7518	                           jne 0x4004f21	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4ec9	      0xbf01000000	                              mov edi, 1	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4ece	      0xe800000000	                          call 0x4004f13	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4ed3	           0xfb600	                   movzx eax, byte [rax]	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4ed6	            0x84c0	                             test al, al	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4ed8	            0x7507	                           jne 0x4004f21	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4eda	      0xb801000000	                              mov eax, 1	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4edf	            0xeb05	                           jmp 0x4004f26	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4ee1	      0xb800000000	                              mov eax, 0	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4ee6	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	      2362	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_29
0x4eec	    0xc78554ffffff	               mov dword [rbp - 0xac], 0	      2363	diff.c	FUNCTION_38	FOR_4	IF_20
0x4ef6	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      2364	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4f00	            0xeb3c	                           jmp 0x4004f7e	      2364	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4f02	    0x488b05000000	            mov rax, qword [0x04004f49] 	      2367	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4f09	          0x488b00	                    mov rax, qword [rax]	      2367	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4f0c	        0x4883f801	                              cmp rax, 1	      2367	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4f10	           0xf94c0	                                 sete al	      2367	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4f13	           0xfb6c0	                           movzx eax, al	      2367	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4f16	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	      2367	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4f1c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2368	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5	CALL_30
0x4f23	      0xbe00000000	                              mov esi, 0	      2368	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5	CALL_30
0x4f28	          0x4889c7	                            mov rdi, rax	      2368	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5	CALL_30
0x4f2b	      0xe800000000	                          call 0x4004f70	      2368	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5	CALL_30
0x4f30	    0x83ad54ffffff	               sub dword [rbp - 0xac], 1	      2369	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4f37	    0x838550ffffff	               add dword [rbp - 0xb0], 1	      2364	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4f3e	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2364	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4f44	    0x3b8540ffffff	             cmp eax, dword [rbp - 0xc0]	      2364	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4f4a	            0x7cb6	                            jl 0x4004f42	      2364	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_5
0x4f4c	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4f56	      0xe909010000	                           jmp 0x40050a4	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4f5b	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2375	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4f5f	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	      2375	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4f65	          0x4863d2	                         movsxd rdx, edx	      2375	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4f68	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2375	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4f6d	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2375	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4f73	            0x4898	                                    cdqe	      2375	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4f75	          0x4801c2	                            add rdx, rax	      2375	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4f78	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2375	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4f7e	            0x4898	                                    cdqe	      2375	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4f80	          0x4801d0	                            add rax, rdx	      2375	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4f83	        0x488945a8	             mov qword [rbp - 0x58], rax	      2375	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x4f87	    0x488b05000000	            mov rax, qword [0x04004fce] 	      2376	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_28
0x4f8e	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	      2376	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_28
0x4f94	          0x4863d2	                         movsxd rdx, edx	      2376	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_28
0x4f97	        0x4883c20c	                            add rdx, 0xc	      2376	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_28
0x4f9b	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      2376	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_28
0x4f9f	          0x488b00	                    mov rax, qword [rax]	      2376	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_28
0x4fa2	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      2376	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_28
0x4fa6	     0xf8cfb000000	                            jl 0x40050e7	      2376	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_28
0x4fac	    0x488b05000000	            mov rax, qword [0x04004ff3] 	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4fb3	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4fb9	          0x4863d2	                         movsxd rdx, edx	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4fbc	        0x4883c20c	                            add rdx, 0xc	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4fc0	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4fc4	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4fc8	      0xba00000000	                              mov edx, 0	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4fcd	          0x4889ce	                            mov rsi, rcx	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4fd0	          0x4889c7	                            mov rdi, rax	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4fd3	      0xe800000000	                          call 0x4005018	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4fd8	          0x4889c7	                            mov rdi, rax	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4fdb	      0xe800000000	                          call 0x4005020	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4fe0	        0x48894598	             mov qword [rbp - 0x68], rax	      2378	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	CALL_32
0x4fe4	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      2380	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29
0x4fe9	            0x7472	                            je 0x400509d	      2380	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29
0x4feb	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2382	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_33
0x4ff1	          0x4863d0	                         movsxd rdx, eax	      2382	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_33
0x4ff4	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2382	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_33
0x4ffb	          0x4801d0	                            add rax, rdx	      2382	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_33
0x4ffe	        0x488d78ff	                      lea rdi, [rax - 1]	      2382	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_33
0x5002	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2382	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_33
0x5006	      0xb900000000	                              mov ecx, 0	      2382	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_33
0x500b	      0xba00000000	                              mov edx, 0	      2382	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_33
0x5010	          0x4889c6	                            mov rsi, rax	      2382	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_33
0x5013	      0xe800000000	                          call 0x4005058	      2382	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_33
0x5018	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2383	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_34
0x501c	          0x4889c7	                            mov rdi, rax	      2383	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_34
0x501f	      0xe800000000	                          call 0x4005064	      2383	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	CALL_34
0x5024	    0x838554ffffff	               add dword [rbp - 0xac], 1	      2384	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29
0x502b	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	      2385	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	IF_30
0x5032	            0x7429	                            je 0x400509d	      2385	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	IF_30
0x5034	    0x488b05000000	            mov rax, qword [0x0400507b] 	      2385	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	IF_30
0x503b	          0x488b00	                    mov rax, qword [rax]	      2385	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	IF_30
0x503e	        0x4883f802	                              cmp rax, 2	      2385	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	IF_30
0x5042	            0x7519	                           jne 0x400509d	      2385	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	IF_30
0x5044	    0xc78560ffffff	               mov dword [rbp - 0xa0], 0	      2389	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	IF_30
0x504e	      0xbe00000000	                              mov esi, 0	      2390	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	IF_30	CALL_35
0x5053	      0xbf02000000	                              mov edi, 2	      2390	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	IF_30	CALL_35
0x5058	      0xe800000000	                          call 0x400509d	      2390	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_29	IF_30	CALL_35
0x505d	    0x838550ffffff	               add dword [rbp - 0xb0], 1	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x5064	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x506a	          0x4863d0	                         movsxd rdx, eax	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x506d	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x5071	    0x8b8d48ffffff	             mov ecx, dword [rbp - 0xb8]	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x5077	          0x4863c9	                         movsxd rcx, ecx	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x507a	        0x4883c108	                              add rcx, 8	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x507e	      0x488b4cc808	       mov rcx, qword [rax + rcx*8 + 8] 	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x5083	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x5089	            0x4898	                                    cdqe	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x508b	          0x4829c1	                            sub rcx, rax	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x508e	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x5094	            0x4898	                                    cdqe	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x5096	          0x4829c1	                            sub rcx, rax	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x5099	          0x4889c8	                            mov rax, rcx	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x509c	          0x4839c2	                            cmp rdx, rax	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x509f	     0xf8cb6feffff	                            jl 0x4004f9b	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x50a5	            0xeb01	                           jmp 0x40050e8	      2371	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6
0x50a7	              0x90	                                     nop	      2377	diff.c	FUNCTION_38	FOR_4	IF_20	FOR_6	IF_28
0x50a8	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2394	diff.c	FUNCTION_38	FOR_4	IF_20
0x50ac	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	      2394	diff.c	FUNCTION_38	FOR_4	IF_20
0x50b2	          0x4863d2	                         movsxd rdx, edx	      2394	diff.c	FUNCTION_38	FOR_4	IF_20
0x50b5	        0x4883c208	                              add rdx, 8	      2394	diff.c	FUNCTION_38	FOR_4	IF_20
0x50b9	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2394	diff.c	FUNCTION_38	FOR_4	IF_20
0x50be	            0x89c2	                            mov edx, eax	      2394	diff.c	FUNCTION_38	FOR_4	IF_20
0x50c0	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2394	diff.c	FUNCTION_38	FOR_4	IF_20
0x50c6	             0x1d0	                            add eax, edx	      2394	diff.c	FUNCTION_38	FOR_4	IF_20
0x50c8	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      2394	diff.c	FUNCTION_38	FOR_4	IF_20
0x50ce	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      2395	diff.c	FUNCTION_38	FOR_4	IF_20
0x50d4	          0x4863d0	                         movsxd rdx, eax	      2395	diff.c	FUNCTION_38	FOR_4	IF_20
0x50d7	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2395	diff.c	FUNCTION_38	FOR_4	IF_20
0x50db	    0x8b8d4cffffff	             mov ecx, dword [rbp - 0xb4]	      2395	diff.c	FUNCTION_38	FOR_4	IF_20
0x50e1	          0x4863c9	                         movsxd rcx, ecx	      2395	diff.c	FUNCTION_38	FOR_4	IF_20
0x50e4	        0x4883c108	                              add rcx, 8	      2395	diff.c	FUNCTION_38	FOR_4	IF_20
0x50e8	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	      2395	diff.c	FUNCTION_38	FOR_4	IF_20
0x50ed	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	      2397	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31
0x50f4	     0xf85c2000000	                           jne 0x40051fc	      2397	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31
0x50fa	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      2397	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31
0x5101	     0xf85b5000000	                           jne 0x40051fc	      2397	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31
0x5107	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      2401	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7
0x5111	            0xeb5e	                           jmp 0x40051b1	      2401	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7
0x5113	    0x488b05000000	            mov rax, qword [0x0400515a] 	      2402	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x511a	    0x8b9550ffffff	             mov edx, dword [rbp - 0xb0]	      2402	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x5120	          0x4863d2	                         movsxd rdx, edx	      2402	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x5123	        0x4883c20c	                            add rdx, 0xc	      2402	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x5127	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      2402	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x512b	          0x4885c0	                           test rax, rax	      2402	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x512e	            0x743a	                            je 0x40051aa	      2402	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x5130	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2402	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x5136	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	      2402	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x513c	            0x742c	                            je 0x40051aa	      2402	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x513e	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2403	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x5144	    0x3b854cffffff	             cmp eax, dword [rbp - 0xb4]	      2403	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x514a	            0x741e	                            je 0x40051aa	      2403	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x514c	    0x8b9550ffffff	             mov edx, dword [rbp - 0xb0]	      2404	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32	CALL_36
0x5152	    0x8b8d48ffffff	             mov ecx, dword [rbp - 0xb8]	      2404	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32	CALL_36
0x5158	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2404	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32	CALL_36
0x515c	            0x89ce	                            mov esi, ecx	      2404	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32	CALL_36
0x515e	          0x4889c7	                            mov rdi, rax	      2404	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32	CALL_36
0x5161	      0xe876e1ffff	               call sym.diff_equal_entry	      2404	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32	CALL_36
0x5166	            0x85c0	                           test eax, eax	      2404	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32	CALL_36
0x5168	            0x7412	                            je 0x40051bc	      2404	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32	CALL_36
0x516a	    0x838550ffffff	               add dword [rbp - 0xb0], 1	      2401	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7
0x5171	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 7	      2401	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7
0x5178	            0x7e99	                           jle 0x4005153	      2401	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7
0x517a	            0xeb01	                           jmp 0x40051bd	      2401	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7
0x517c	              0x90	                                     nop	      2405	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	FOR_7	IF_32
0x517d	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 8	      2406	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33
0x5184	            0x7536	                           jne 0x40051fc	      2406	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33
0x5186	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2409	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33
0x518a	        0x48894590	             mov qword [rbp - 0x70], rax	      2409	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33
0x518e	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2410	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33
0x5192	          0x488b00	                    mov rax, qword [rax]	      2410	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33
0x5195	        0x48894580	             mov qword [rbp - 0x80], rax	      2410	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33
0x5199	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      2411	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33	IF_34
0x519e	            0x7511	                           jne 0x40051f1	      2411	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33	IF_34
0x51a0	    0x488b05000000	            mov rax, qword [0x040051e7] 	      2412	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33	IF_34
0x51a7	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2412	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33	IF_34
0x51ab	        0x48895058	             mov qword [rax + 0x58], rdx	      2412	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33	IF_34
0x51af	            0xeb0b	                           jmp 0x40051fc	      2412	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33	IF_34
0x51b1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2414	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33	ELSE_10
0x51b5	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      2414	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33	ELSE_10
0x51b9	          0x488910	                    mov qword [rax], rdx	      2414	diff.c	FUNCTION_38	FOR_4	IF_20	IF_31	IF_33	ELSE_10
0x51bc	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	      2419	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35
0x51c3	     0xf84ad000000	                            je 0x40052b6	      2419	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35
0x51c9	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x51cf	          0x4863d0	                         movsxd rdx, eax	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x51d2	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x51d8	          0x4863c8	                         movsxd rcx, eax	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x51db	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x51e2	          0x4801c8	                            add rax, rcx	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x51e5	        0x488d70ff	                      lea rsi, [rax - 1]	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x51e9	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x51f0	          0x4889d1	                            mov rcx, rdx	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x51f3	      0xbaffffff7f	                     mov edx, 0x7fffffff	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x51f8	          0x4889c7	                            mov rdi, rax	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x51fb	      0xe800000000	                          call 0x4005240	      2421	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	CALL_37
0x5200	    0x488b05000000	            mov rax, qword [0x04005247] 	      2422	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36
0x5207	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2422	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36
0x520b	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	      2422	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36
0x5212	            0x7c62	                            jl 0x40052b6	      2422	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36
0x5214	    0x488b05000000	            mov rax, qword [0x0400525b] 	      2426	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x521b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2426	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x521f	    0x8b9540ffffff	             mov edx, dword [rbp - 0xc0]	      2426	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x5225	          0x4863ca	                         movsxd rcx, edx	      2426	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x5228	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      2426	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x522f	          0x4801ca	                            add rdx, rcx	      2426	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x5232	          0x4839d0	                            cmp rax, rdx	      2426	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x5235	            0x7c24	                            jl 0x400529b	      2426	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x5237	    0x488b05000000	            mov rax, qword [0x0400527e] 	      2427	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x523e	    0x488b15000000	            mov rdx, qword [0x04005285] 	      2427	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x5245	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      2427	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x5249	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	      2427	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x524f	          0x4863d2	                         movsxd rdx, edx	      2427	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x5252	          0x4801ca	                            add rdx, rcx	      2427	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x5255	        0x48895038	             mov qword [rax + 0x38], rdx	      2427	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x5259	            0xeb1b	                           jmp 0x40052b6	      2427	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	IF_37
0x525b	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	      2428	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	ELSE_11	IF_38
0x5262	            0x7912	                           jns 0x40052b6	      2428	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	ELSE_11	IF_38
0x5264	    0x488b05000000	            mov rax, qword [0x040052ab] 	      2429	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	ELSE_11	IF_38
0x526b	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      2429	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	ELSE_11	IF_38
0x5272	        0x48895038	             mov qword [rax + 0x38], rdx	      2429	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_10	IF_35	IF_36	ELSE_11	IF_38
0x5276	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x527c	          0x4863d0	                         movsxd rdx, eax	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x527f	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x5285	          0x4863c8	                         movsxd rcx, eax	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x5288	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x528f	        0x488d3401	                    lea rsi, [rcx + rax]	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x5293	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x529a	          0x4889d1	                            mov rcx, rdx	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x529d	          0x4889f2	                            mov rdx, rsi	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x52a0	      0xbe00000000	                              mov esi, 0	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x52a5	          0x4889c7	                            mov rdi, rax	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x52a8	      0xe800000000	                          call 0x40052ed	      2432	diff.c	FUNCTION_38	FOR_4	IF_20	CALL_38
0x52ad	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      2434	diff.c	FUNCTION_38	FOR_4	IF_20	IF_39
0x52b2	            0x7422	                            je 0x4005316	      2434	diff.c	FUNCTION_38	FOR_4	IF_20	IF_39
0x52b4	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	      2438	diff.c	FUNCTION_38	FOR_4	IF_20	IF_39	CALL_39
0x52ba	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2438	diff.c	FUNCTION_38	FOR_4	IF_20	IF_39	CALL_39
0x52be	            0x89d6	                            mov esi, edx	      2438	diff.c	FUNCTION_38	FOR_4	IF_20	IF_39	CALL_39
0x52c0	          0x4889c7	                            mov rdi, rax	      2438	diff.c	FUNCTION_38	FOR_4	IF_20	IF_39	CALL_39
0x52c3	      0xe8e3000000	               call sym.diff_fold_update	      2438	diff.c	FUNCTION_38	FOR_4	IF_20	IF_39	CALL_39
0x52c8	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2440	diff.c	FUNCTION_38	FOR_4	IF_20	IF_39	CALL_40
0x52cc	          0x4889c7	                            mov rdi, rax	      2440	diff.c	FUNCTION_38	FOR_4	IF_20	IF_39	CALL_40
0x52cf	      0xe800000000	                          call 0x4005314	      2440	diff.c	FUNCTION_38	FOR_4	IF_20	IF_39	CALL_40
0x52d4	            0xeb1f	                           jmp 0x4005335	      2440	diff.c	FUNCTION_38	FOR_4	IF_20	IF_39	CALL_40
0x52d6	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      2444	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_12
0x52dc	          0x4863d0	                         movsxd rdx, eax	      2444	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_12
0x52df	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2444	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_12
0x52e3	    0x8b8d4cffffff	             mov ecx, dword [rbp - 0xb4]	      2444	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_12
0x52e9	          0x4863c9	                         movsxd rcx, ecx	      2444	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_12
0x52ec	        0x4883c108	                              add rcx, 8	      2444	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_12
0x52f0	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	      2444	diff.c	FUNCTION_38	FOR_4	IF_20	ELSE_12
0x52f5	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2447	diff.c	FUNCTION_38	FOR_4	IF_20	IF_40
0x52fb	    0x3b854cffffff	             cmp eax, dword [rbp - 0xb4]	      2447	diff.c	FUNCTION_38	FOR_4	IF_20	IF_40
0x5301	            0x750f	                           jne 0x4005352	      2447	diff.c	FUNCTION_38	FOR_4	IF_20	IF_40
0x5303	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2448	diff.c	FUNCTION_38	FOR_4	IF_20	IF_40
0x5309	            0x4898	                                    cdqe	      2448	diff.c	FUNCTION_38	FOR_4	IF_20	IF_40
0x530b	    0x48018578ffff	            add qword [rbp - 0x88], rax 	      2448	diff.c	FUNCTION_38	FOR_4	IF_20	IF_40
0x5312	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      2452	diff.c	FUNCTION_38	FOR_4	IF_41
0x5317	            0x7513	                           jne 0x400536c	      2452	diff.c	FUNCTION_38	FOR_4	IF_41
0x5319	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2454	diff.c	FUNCTION_38	FOR_4	IF_41
0x531d	        0x48894588	             mov qword [rbp - 0x78], rax	      2454	diff.c	FUNCTION_38	FOR_4	IF_41
0x5321	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2455	diff.c	FUNCTION_38	FOR_4	IF_41
0x5325	          0x488b00	                    mov rax, qword [rax]	      2455	diff.c	FUNCTION_38	FOR_4	IF_41
0x5328	        0x48894580	             mov qword [rbp - 0x80], rax	      2455	diff.c	FUNCTION_38	FOR_4	IF_41
0x532c	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      2304	diff.c	FUNCTION_38	FOR_4
0x5331	     0xf85d6f8ffff	                           jne 0x4004c4d	      2304	diff.c	FUNCTION_38	FOR_4
0x5337	            0xeb01	                           jmp 0x400537a	      2304	diff.c	FUNCTION_38	FOR_4
0x5339	              0x90	                                     nop	      2307	diff.c	FUNCTION_38	FOR_4	IF_19
0x533a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2460	diff.c	FUNCTION_38	IF_42
0x5341	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2460	diff.c	FUNCTION_38	IF_42
0x5344	          0x83f86f	                           cmp eax, 0x6f	      2460	diff.c	FUNCTION_38	IF_42
0x5347	            0x7420	                            je 0x40053a9	      2460	diff.c	FUNCTION_38	IF_42
0x5349	    0x8b0500000000	            mov eax, dword [0x0400538f] 	      2465	diff.c	FUNCTION_38	IF_42	IF_43
0x534f	            0x85c0	                           test eax, eax	      2465	diff.c	FUNCTION_38	IF_42	IF_43
0x5351	            0x740a	                            je 0x400539d	      2465	diff.c	FUNCTION_38	IF_42	IF_43
0x5353	      0xbf00000000	                              mov edi, 0	      2466	diff.c	FUNCTION_38	IF_42	CALL_41
0x5358	      0xe800000000	                          call 0x400539d	      2466	diff.c	FUNCTION_38	IF_42	CALL_41
0x535d	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2467	diff.c	FUNCTION_38	IF_42	CALL_42
0x5361	          0x4889c7	                            mov rdi, rax	      2467	diff.c	FUNCTION_38	IF_42	CALL_42
0x5364	      0xe800000000	                          call 0x40053a9	      2467	diff.c	FUNCTION_38	IF_42	CALL_42
0x5369	    0xc70500000000	               mov dword [0x040053b3], 0	      2470	diff.c	FUNCTION_38
0x5373	      0xe800000000	                          call 0x40053b8	      2474	diff.c	FUNCTION_38	CALL_43
0x5378	      0xe800000000	                          call 0x40053bd	      2475	diff.c	FUNCTION_38	CALL_44
0x537d	      0xbf00000000	                              mov edi, 0	      2478	diff.c	FUNCTION_38	CALL_45
0x5382	      0xe822bcffff	                    call sym.diff_redraw	      2478	diff.c	FUNCTION_38	CALL_45
0x5387	            0xeb04	                           jmp 0x40053cd	      2478	diff.c	FUNCTION_38	CALL_45
0x5389	              0x90	                                     nop	      2241	diff.c	FUNCTION_38	ELSE_2	ELSE_3	IF_9
0x538a	            0xeb01	                           jmp 0x40053cd	      2241	diff.c	FUNCTION_38	ELSE_2	ELSE_3	IF_9
0x538c	              0x90	                                     nop	      2250	diff.c	FUNCTION_38	ELSE_2	IF_11
0x538d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2479	diff.c	FUNCTION_38
0x5391	    0x644833042528	                xor rax, qword fs:[0x28]	      2479	diff.c	FUNCTION_38
0x539a	            0x7405	                            je 0x40053e1	      2479	diff.c	FUNCTION_38
0x539c	      0xe800000000	                          call 0x40053e1	      2479	diff.c	FUNCTION_38
0x53a1	    0x4881c4c80000	                           add rsp, 0xc8	      2479	diff.c	FUNCTION_38
0x53a8	              0x5b	                                 pop rbx	      2479	diff.c	FUNCTION_38
0x53a9	              0x5d	                                 pop rbp	      2479	diff.c	FUNCTION_38
0x53aa	              0xc3	                                     ret	      2479	diff.c	FUNCTION_38
diff_invalidate	SWITCH,0:functions,1:WHILE,0:ELSE,0:IF,0:CALL,0:FOR,0:DO,0	30
0x2d7	              0x55	                                push rbp	       195	diff.c	FUNCTION_7
0x2d8	          0x4889e5	                            mov rbp, rsp	       195	diff.c	FUNCTION_7
0x2db	        0x4883ec20	                           sub rsp, 0x20	       195	diff.c	FUNCTION_7
0x2df	        0x48897de8	             mov qword [rbp - 0x18], rdi	       195	diff.c	FUNCTION_7
0x2e3	    0x488b05000000	            mov rax, qword [0x0400032a] 	       199	diff.c	FUNCTION_7
0x2ea	        0x488945f8	                mov qword [rbp - 8], rax	       199	diff.c	FUNCTION_7
0x2ee	            0xeb4c	                           jmp 0x400037c	       199	diff.c	FUNCTION_7
0x2f0	        0x488b55f8	                mov rdx, qword [rbp - 8]	       201	diff.c	FUNCTION_7	FUNCTION_1	CALL_1
0x2f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       201	diff.c	FUNCTION_7	FUNCTION_1	CALL_1
0x2f8	          0x4889d6	                            mov rsi, rdx	       201	diff.c	FUNCTION_7	FUNCTION_1	CALL_1
0x2fb	          0x4889c7	                            mov rdi, rax	       201	diff.c	FUNCTION_7	FUNCTION_1	CALL_1
0x2fe	      0xe895ffffff	                call sym.diff_buf_idx_tp	       201	diff.c	FUNCTION_7	FUNCTION_1	CALL_1
0x303	          0x8945f4	              mov dword [rbp - 0xc], eax	       201	diff.c	FUNCTION_7	FUNCTION_1	CALL_1
0x306	        0x837df408	                cmp dword [rbp - 0xc], 8	       202	diff.c	FUNCTION_7	FUNCTION_1	IF_1
0x30a	            0x7425	                            je 0x4000371	       202	diff.c	FUNCTION_7	FUNCTION_1	IF_1
0x30c	        0x488b45f8	                mov rax, qword [rbp - 8]	       204	diff.c	FUNCTION_7	FUNCTION_1	IF_1
0x310	    0xc780a0000000	               mov dword [rax + 0xa0], 1	       204	diff.c	FUNCTION_7	FUNCTION_1	IF_1
0x31a	    0x488b05000000	            mov rax, qword [0x04000361] 	       205	diff.c	FUNCTION_7	FUNCTION_1	IF_1	IF_2
0x321	        0x483945f8	                cmp qword [rbp - 8], rax	       205	diff.c	FUNCTION_7	FUNCTION_1	IF_1	IF_2
0x325	            0x750a	                           jne 0x4000371	       205	diff.c	FUNCTION_7	FUNCTION_1	IF_1	IF_2
0x327	      0xbf01000000	                              mov edi, 1	       206	diff.c	FUNCTION_7	FUNCTION_1	IF_1	CALL_2
0x32c	      0xe8780c0000	                    call sym.diff_redraw	       206	diff.c	FUNCTION_7	FUNCTION_1	IF_1	CALL_2
0x331	        0x488b45f8	                mov rax, qword [rbp - 8]	       199	diff.c	FUNCTION_7
0x335	          0x488b00	                    mov rax, qword [rax]	       199	diff.c	FUNCTION_7
0x338	        0x488945f8	                mov qword [rbp - 8], rax	       199	diff.c	FUNCTION_7
0x33c	      0x48837df800	                  cmp qword [rbp - 8], 0	       199	diff.c	FUNCTION_7
0x341	            0x75ad	                           jne 0x4000330	       199	diff.c	FUNCTION_7
0x343	              0x90	                                     nop	       209	diff.c	FUNCTION_7
0x344	              0xc9	                                   leave	       209	diff.c	FUNCTION_7
0x345	              0xc3	                                     ret	       209	diff.c	FUNCTION_7
diff_equal_entry	SWITCH,0:functions,0:WHILE,0:ELSE,0:IF,4:CALL,6:FOR,1:DO,0	96
0x32dc	              0x55	                                push rbp	      1615	diff.c	FUNCTION_27
0x32dd	          0x4889e5	                            mov rbp, rsp	      1615	diff.c	FUNCTION_27
0x32e0	        0x4883ec20	                           sub rsp, 0x20	      1615	diff.c	FUNCTION_27
0x32e4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1615	diff.c	FUNCTION_27
0x32e8	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1615	diff.c	FUNCTION_27
0x32eb	          0x8955e0	             mov dword [rbp - 0x20], edx	      1615	diff.c	FUNCTION_27
0x32ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1620	diff.c	FUNCTION_27	IF_1
0x32f2	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1620	diff.c	FUNCTION_27	IF_1
0x32f5	          0x4863d2	                         movsxd rdx, edx	      1620	diff.c	FUNCTION_27	IF_1
0x32f8	        0x4883c208	                              add rdx, 8	      1620	diff.c	FUNCTION_27	IF_1
0x32fc	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1620	diff.c	FUNCTION_27	IF_1
0x3301	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1620	diff.c	FUNCTION_27	IF_1
0x3305	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	      1620	diff.c	FUNCTION_27	IF_1
0x3308	          0x4863c9	                         movsxd rcx, ecx	      1620	diff.c	FUNCTION_27	IF_1
0x330b	        0x4883c108	                              add rcx, 8	      1620	diff.c	FUNCTION_27	IF_1
0x330f	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1620	diff.c	FUNCTION_27	IF_1
0x3314	          0x4839c2	                            cmp rdx, rax	      1620	diff.c	FUNCTION_27	IF_1
0x3317	            0x740a	                            je 0x4003363	      1620	diff.c	FUNCTION_27	IF_1
0x3319	      0xb800000000	                              mov eax, 0	      1621	diff.c	FUNCTION_27	IF_1
0x331e	      0xe920010000	                           jmp 0x4003483	      1621	diff.c	FUNCTION_27	IF_1
0x3323	    0x488b05000000	            mov rax, qword [0x0400336a] 	      1622	diff.c	FUNCTION_27	IF_2	CALL_1
0x332a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1622	diff.c	FUNCTION_27	IF_2	CALL_1
0x332e	          0x4889d6	                            mov rsi, rdx	      1622	diff.c	FUNCTION_27	IF_2	CALL_1
0x3331	          0x4889c7	                            mov rdi, rax	      1622	diff.c	FUNCTION_27	IF_2	CALL_1
0x3334	      0xe8e9dbffff	              call sym.diff_check_sanity	      1622	diff.c	FUNCTION_27	IF_2	CALL_1
0x3339	            0x85c0	                           test eax, eax	      1622	diff.c	FUNCTION_27	IF_2	CALL_1
0x333b	            0x750a	                           jne 0x4003387	      1622	diff.c	FUNCTION_27	IF_2	CALL_1
0x333d	      0xb800000000	                              mov eax, 0	      1623	diff.c	FUNCTION_27	IF_2
0x3342	      0xe9fc000000	                           jmp 0x4003483	      1623	diff.c	FUNCTION_27	IF_2
0x3347	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      1624	diff.c	FUNCTION_27	FOR_1
0x334e	      0xe9c9000000	                           jmp 0x400345c	      1624	diff.c	FUNCTION_27	FOR_1
0x3353	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1627	diff.c	FUNCTION_27	FOR_1
0x3357	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1627	diff.c	FUNCTION_27	FOR_1
0x335a	          0x4863d2	                         movsxd rdx, edx	      1627	diff.c	FUNCTION_27	FOR_1
0x335d	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1627	diff.c	FUNCTION_27	FOR_1
0x3362	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x3365	            0x4898	                                    cdqe	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x3367	        0x488d0c02	                    lea rcx, [rdx + rax]	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x336b	    0x488b05000000	            mov rax, qword [0x040033b2] 	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x3372	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x3375	          0x4863d2	                         movsxd rdx, edx	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x3378	        0x4883c20c	                            add rdx, 0xc	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x337c	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x3380	      0xba00000000	                              mov edx, 0	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x3385	          0x4889ce	                            mov rsi, rcx	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x3388	          0x4889c7	                            mov rdi, rax	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x338b	      0xe800000000	                          call 0x40033d0	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x3390	          0x4889c7	                            mov rdi, rax	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x3393	      0xe800000000	                          call 0x40033d8	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x3398	        0x488945f8	                mov qword [rbp - 8], rax	      1626	diff.c	FUNCTION_27	FOR_1	CALL_3
0x339c	      0x48837df800	                  cmp qword [rbp - 8], 0	      1628	diff.c	FUNCTION_27	FOR_1	IF_3
0x33a1	            0x750a	                           jne 0x40033ed	      1628	diff.c	FUNCTION_27	FOR_1	IF_3
0x33a3	      0xb800000000	                              mov eax, 0	      1629	diff.c	FUNCTION_27	FOR_1	IF_3
0x33a8	      0xe996000000	                           jmp 0x4003483	      1629	diff.c	FUNCTION_27	FOR_1	IF_3
0x33ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1631	diff.c	FUNCTION_27	FOR_1
0x33b1	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1631	diff.c	FUNCTION_27	FOR_1
0x33b4	          0x4863d2	                         movsxd rdx, edx	      1631	diff.c	FUNCTION_27	FOR_1
0x33b7	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1631	diff.c	FUNCTION_27	FOR_1
0x33bc	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x33bf	            0x4898	                                    cdqe	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x33c1	        0x488d0c02	                    lea rcx, [rdx + rax]	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x33c5	    0x488b05000000	            mov rax, qword [0x0400340c] 	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x33cc	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x33cf	          0x4863d2	                         movsxd rdx, edx	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x33d2	        0x4883c20c	                            add rdx, 0xc	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x33d6	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x33da	      0xba00000000	                              mov edx, 0	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x33df	          0x4889ce	                            mov rsi, rcx	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x33e2	          0x4889c7	                            mov rdi, rax	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x33e5	      0xe800000000	                          call 0x400342a	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x33ea	          0x4889c2	                            mov rdx, rax	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x33ed	        0x488b45f8	                mov rax, qword [rbp - 8]	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x33f1	          0x4889d6	                            mov rsi, rdx	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x33f4	          0x4889c7	                            mov rdi, rax	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x33f7	      0xe86c010000	                       call sym.diff_cmp	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x33fc	          0x8945f4	              mov dword [rbp - 0xc], eax	      1630	diff.c	FUNCTION_27	FOR_1	CALL_5
0x33ff	        0x488b45f8	                mov rax, qword [rbp - 8]	      1632	diff.c	FUNCTION_27	FOR_1	CALL_6
0x3403	          0x4889c7	                            mov rdi, rax	      1632	diff.c	FUNCTION_27	FOR_1	CALL_6
0x3406	      0xe800000000	                          call 0x400344b	      1632	diff.c	FUNCTION_27	FOR_1	CALL_6
0x340b	        0x837df400	                cmp dword [rbp - 0xc], 0	      1633	diff.c	FUNCTION_27	FOR_1	IF_4
0x340f	            0x7407	                            je 0x4003458	      1633	diff.c	FUNCTION_27	FOR_1	IF_4
0x3411	      0xb800000000	                              mov eax, 0	      1634	diff.c	FUNCTION_27	FOR_1	IF_4
0x3416	            0xeb2b	                           jmp 0x4003483	      1634	diff.c	FUNCTION_27	FOR_1	IF_4
0x3418	        0x8345f001	               add dword [rbp - 0x10], 1	      1624	diff.c	FUNCTION_27	FOR_1
0x341c	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1624	diff.c	FUNCTION_27	FOR_1
0x341f	          0x4863d0	                         movsxd rdx, eax	      1624	diff.c	FUNCTION_27	FOR_1
0x3422	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1624	diff.c	FUNCTION_27	FOR_1
0x3426	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1624	diff.c	FUNCTION_27	FOR_1
0x3429	          0x4863c9	                         movsxd rcx, ecx	      1624	diff.c	FUNCTION_27	FOR_1
0x342c	        0x4883c108	                              add rcx, 8	      1624	diff.c	FUNCTION_27	FOR_1
0x3430	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1624	diff.c	FUNCTION_27	FOR_1
0x3435	          0x4839c2	                            cmp rdx, rax	      1624	diff.c	FUNCTION_27	FOR_1
0x3438	     0xf8c15ffffff	                            jl 0x4003393	      1624	diff.c	FUNCTION_27	FOR_1
0x343e	      0xb801000000	                              mov eax, 1	      1636	diff.c	FUNCTION_27
0x3443	              0xc9	                                   leave	      1637	diff.c	FUNCTION_27
0x3444	              0xc3	                                     ret	      1637	diff.c	FUNCTION_27
diff_alloc_new	SWITCH,0:functions,0:WHILE,0:ELSE,1:IF,2:CALL,1:FOR,0:DO,0	26
0xc3a	              0x55	                                push rbp	       494	diff.c	FUNCTION_10
0xc3b	          0x4889e5	                            mov rbp, rsp	       494	diff.c	FUNCTION_10
0xc3e	        0x4883ec30	                           sub rsp, 0x30	       494	diff.c	FUNCTION_10
0xc42	        0x48897de8	             mov qword [rbp - 0x18], rdi	       494	diff.c	FUNCTION_10
0xc46	        0x488975e0	             mov qword [rbp - 0x20], rsi	       494	diff.c	FUNCTION_10
0xc4a	        0x488955d8	             mov qword [rbp - 0x28], rdx	       494	diff.c	FUNCTION_10
0xc4e	      0xbf88000000	                           mov edi, 0x88	       497	diff.c	FUNCTION_10	CALL_1
0xc53	      0xe800000000	                          call 0x4000c98	       497	diff.c	FUNCTION_10	CALL_1
0xc58	        0x488945f8	                mov qword [rbp - 8], rax	       497	diff.c	FUNCTION_10	CALL_1
0xc5c	      0x48837df800	                  cmp qword [rbp - 8], 0	       498	diff.c	FUNCTION_10	IF_1
0xc61	            0x742b	                            je 0x4000cce	       498	diff.c	FUNCTION_10	IF_1
0xc63	        0x488b45f8	                mov rax, qword [rbp - 8]	       500	diff.c	FUNCTION_10	IF_1
0xc67	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       500	diff.c	FUNCTION_10	IF_1
0xc6b	          0x488910	                    mov qword [rax], rdx	       500	diff.c	FUNCTION_10	IF_1
0xc6e	      0x48837de000	               cmp qword [rbp - 0x20], 0	       501	diff.c	FUNCTION_10	IF_1	IF_2
0xc73	            0x750e	                           jne 0x4000cc3	       501	diff.c	FUNCTION_10	IF_1	IF_2
0xc75	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       502	diff.c	FUNCTION_10	IF_1	IF_2
0xc79	        0x488b55f8	                mov rdx, qword [rbp - 8]	       502	diff.c	FUNCTION_10	IF_1	IF_2
0xc7d	        0x48895058	             mov qword [rax + 0x58], rdx	       502	diff.c	FUNCTION_10	IF_1	IF_2
0xc81	            0xeb0b	                           jmp 0x4000cce	       502	diff.c	FUNCTION_10	IF_1	IF_2
0xc83	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       504	diff.c	FUNCTION_10	IF_1	ELSE_1
0xc87	        0x488b55f8	                mov rdx, qword [rbp - 8]	       504	diff.c	FUNCTION_10	IF_1	ELSE_1
0xc8b	          0x488910	                    mov qword [rax], rdx	       504	diff.c	FUNCTION_10	IF_1	ELSE_1
0xc8e	        0x488b45f8	                mov rax, qword [rbp - 8]	       506	diff.c	FUNCTION_10	ELSE_1
0xc92	              0xc9	                                   leave	       507	diff.c	FUNCTION_10	ELSE_1
0xc93	              0xc3	                                     ret	       507	diff.c	FUNCTION_10	ELSE_1
diff_set_topline	SWITCH,0:functions,0:WHILE,0:ELSE,5:IF,16:CALL,7:FOR,2:DO,0	310
0x3731	              0x55	                                push rbp	      1738	diff.c	FUNCTION_31
0x3732	          0x4889e5	                            mov rbp, rsp	      1738	diff.c	FUNCTION_31
0x3735	        0x4883ec40	                           sub rsp, 0x40	      1738	diff.c	FUNCTION_31
0x3739	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1738	diff.c	FUNCTION_31
0x373d	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1738	diff.c	FUNCTION_31
0x3741	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1739	diff.c	FUNCTION_31
0x3745	        0x488b4008	                mov rax, qword [rax + 8]	      1739	diff.c	FUNCTION_31
0x3749	        0x488945f0	             mov qword [rbp - 0x10], rax	      1739	diff.c	FUNCTION_31
0x374d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1740	diff.c	FUNCTION_31
0x3751	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1740	diff.c	FUNCTION_31
0x3755	        0x488945f8	                mov qword [rbp - 8], rax	      1740	diff.c	FUNCTION_31
0x3759	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1747	diff.c	FUNCTION_31	CALL_1
0x375d	          0x4889c7	                            mov rdi, rax	      1747	diff.c	FUNCTION_31	CALL_1
0x3760	      0xe8f5caffff	                   call sym.diff_buf_idx	      1747	diff.c	FUNCTION_31	CALL_1
0x3765	          0x8945e0	             mov dword [rbp - 0x20], eax	      1747	diff.c	FUNCTION_31	CALL_1
0x3768	        0x837de008	               cmp dword [rbp - 0x20], 8	      1748	diff.c	FUNCTION_31	IF_1
0x376c	     0xf8460040000	                            je 0x4003c12	      1748	diff.c	FUNCTION_31	IF_1
0x3772	    0x488b05000000	            mov rax, qword [0x040037b9] 	      1751	diff.c	FUNCTION_31	IF_2
0x3779	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1751	diff.c	FUNCTION_31	IF_2
0x377f	            0x85c0	                           test eax, eax	      1751	diff.c	FUNCTION_31	IF_2
0x3781	            0x740a	                            je 0x40037cd	      1751	diff.c	FUNCTION_31	IF_2
0x3783	      0xbf00000000	                              mov edi, 0	      1752	diff.c	FUNCTION_31	CALL_2
0x3788	      0xe800000000	                          call 0x40037cd	      1752	diff.c	FUNCTION_31	CALL_2
0x378d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1754	diff.c	FUNCTION_31
0x3791	    0xc78084000000	               mov dword [rax + 0x84], 0	      1754	diff.c	FUNCTION_31
0x379b	    0x488b05000000	            mov rax, qword [0x040037e2] 	      1757	diff.c	FUNCTION_31	FOR_1
0x37a2	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1757	diff.c	FUNCTION_31	FOR_1
0x37a6	        0x488945e8	             mov qword [rbp - 0x18], rax	      1757	diff.c	FUNCTION_31	FOR_1
0x37aa	            0xeb36	                           jmp 0x4003822	      1757	diff.c	FUNCTION_31	FOR_1
0x37ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x37b0	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x37b3	          0x4863d2	                         movsxd rdx, edx	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x37b6	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x37bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x37bf	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x37c2	          0x4863c9	                         movsxd rcx, ecx	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x37c5	        0x4883c108	                              add rcx, 8	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x37c9	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x37ce	          0x4801d0	                            add rax, rdx	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x37d1	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x37d5	            0x7d14	                           jge 0x400382b	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x37d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1757	diff.c	FUNCTION_31	FOR_1
0x37db	          0x488b00	                    mov rax, qword [rax]	      1757	diff.c	FUNCTION_31	FOR_1
0x37de	        0x488945e8	             mov qword [rbp - 0x18], rax	      1757	diff.c	FUNCTION_31	FOR_1
0x37e2	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1757	diff.c	FUNCTION_31	FOR_1
0x37e7	            0x75c3	                           jne 0x40037ec	      1757	diff.c	FUNCTION_31	FOR_1
0x37e9	            0xeb01	                           jmp 0x400382c	      1757	diff.c	FUNCTION_31	FOR_1
0x37eb	              0x90	                                     nop	      1759	diff.c	FUNCTION_31	FOR_1	IF_3
0x37ec	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1760	diff.c	FUNCTION_31	IF_4
0x37f1	            0x7526	                           jne 0x4003859	      1760	diff.c	FUNCTION_31	IF_4
0x37f3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1764	diff.c	FUNCTION_31	IF_4
0x37f7	        0x488b4008	                mov rax, qword [rax + 8]	      1764	diff.c	FUNCTION_31	IF_4
0x37fb	          0x488b10	                    mov rdx, qword [rax]	      1764	diff.c	FUNCTION_31	IF_4
0x37fe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1765	diff.c	FUNCTION_31	IF_4
0x3802	          0x488b00	                    mov rax, qword [rax]	      1765	diff.c	FUNCTION_31	IF_4
0x3805	        0x482b45f8	                sub rax, qword [rbp - 8]	      1765	diff.c	FUNCTION_31	IF_4
0x3809	          0x4829c2	                            sub rdx, rax	      1765	diff.c	FUNCTION_31	IF_4
0x380c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1764	diff.c	FUNCTION_31	IF_4
0x3810	        0x48895078	             mov qword [rax + 0x78], rdx	      1764	diff.c	FUNCTION_31	IF_4
0x3814	      0xe9f3020000	                           jmp 0x4003b4c	      1764	diff.c	FUNCTION_31	IF_4
0x3819	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1770	diff.c	FUNCTION_31	ELSE_1	CALL_3
0x381d	        0x488b4008	                mov rax, qword [rax + 8]	      1770	diff.c	FUNCTION_31	ELSE_1	CALL_3
0x3821	          0x4889c7	                            mov rdi, rax	      1770	diff.c	FUNCTION_31	ELSE_1	CALL_3
0x3824	      0xe831caffff	                   call sym.diff_buf_idx	      1770	diff.c	FUNCTION_31	ELSE_1	CALL_3
0x3829	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1770	diff.c	FUNCTION_31	ELSE_1	CALL_3
0x382c	        0x837de408	               cmp dword [rbp - 0x1c], 8	      1771	diff.c	FUNCTION_31	ELSE_1	IF_5
0x3830	     0xf849f030000	                            je 0x4003c15	      1771	diff.c	FUNCTION_31	ELSE_1	IF_5
0x3836	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1774	diff.c	FUNCTION_31	ELSE_1
0x383a	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1774	diff.c	FUNCTION_31	ELSE_1
0x383d	          0x4863d2	                         movsxd rdx, edx	      1774	diff.c	FUNCTION_31	ELSE_1
0x3840	      0x488b4cd008	       mov rcx, qword [rax + rdx*8 + 8] 	      1774	diff.c	FUNCTION_31	ELSE_1
0x3845	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1774	diff.c	FUNCTION_31	ELSE_1
0x3849	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1774	diff.c	FUNCTION_31	ELSE_1
0x384c	          0x4863d2	                         movsxd rdx, edx	      1774	diff.c	FUNCTION_31	ELSE_1
0x384f	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1774	diff.c	FUNCTION_31	ELSE_1
0x3854	          0x4829c1	                            sub rcx, rax	      1774	diff.c	FUNCTION_31	ELSE_1
0x3857	          0x4889ca	                            mov rdx, rcx	      1774	diff.c	FUNCTION_31	ELSE_1
0x385a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1774	diff.c	FUNCTION_31	ELSE_1
0x385e	          0x4801c2	                            add rdx, rax	      1774	diff.c	FUNCTION_31	ELSE_1
0x3861	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1774	diff.c	FUNCTION_31	ELSE_1
0x3865	        0x48895078	             mov qword [rax + 0x78], rdx	      1774	diff.c	FUNCTION_31	ELSE_1
0x3869	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x386d	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x3870	          0x4863d2	                         movsxd rdx, edx	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x3873	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x3878	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x387c	     0xf8f8a020000	                            jg 0x4003b4c	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x3882	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1779	diff.c	FUNCTION_31	ELSE_1	IF_6
0x3889	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1780	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2
0x3890	            0xeb52	                           jmp 0x4003924	      1780	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2
0x3892	    0x488b05000000	            mov rax, qword [0x040038d9] 	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x3899	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x389c	          0x4863d2	                         movsxd rdx, edx	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x389f	        0x4883c20c	                            add rdx, 0xc	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x38a3	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x38a7	          0x4885c0	                           test rax, rax	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x38aa	            0x7434	                            je 0x4003920	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x38ac	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x38af	          0x4863d0	                         movsxd rdx, eax	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x38b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x38b6	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x38b9	          0x4863c9	                         movsxd rcx, ecx	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x38bc	        0x4883c108	                              add rcx, 8	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x38c0	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x38c5	          0x4839c2	                            cmp rdx, rax	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x38c8	            0x7d16	                           jge 0x4003920	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x38ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x38ce	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x38d1	          0x4863d2	                         movsxd rdx, edx	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x38d4	        0x4883c208	                              add rdx, 8	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x38d8	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x38dd	          0x8945d8	             mov dword [rbp - 0x28], eax	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x38e0	        0x8345dc01	               add dword [rbp - 0x24], 1	      1780	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2
0x38e4	        0x837ddc07	               cmp dword [rbp - 0x24], 7	      1780	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2
0x38e8	            0x7ea8	                           jle 0x40038d2	      1780	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2
0x38ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x38ee	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x38f1	          0x4863d2	                         movsxd rdx, edx	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x38f4	        0x4883c208	                              add rdx, 8	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x38f8	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x38fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x3901	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x3904	          0x4863c9	                         movsxd rcx, ecx	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x3907	        0x4883c108	                              add rcx, 8	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x390b	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x3910	          0x4839c2	                            cmp rdx, rax	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x3913	            0x7519	                           jne 0x400396e	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x3915	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1788	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x3919	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      1788	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x391f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1788	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x3923	    0x899084000000	             mov dword [rax + 0x84], edx	      1788	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x3929	      0xe9de010000	                           jmp 0x4003b4c	      1788	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x392e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x3932	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x3935	          0x4863d2	                         movsxd rdx, edx	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x3938	        0x4883c208	                              add rdx, 8	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x393c	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x3941	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x3945	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x3948	          0x4863c9	                         movsxd rcx, ecx	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x394b	        0x4883c108	                              add rcx, 8	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x394f	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x3954	          0x4839c2	                            cmp rdx, rax	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x3957	     0xf8ed4000000	                           jle 0x4003a71	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x395d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x3961	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x3964	          0x4863d2	                         movsxd rdx, edx	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x3967	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x396c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x3970	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x3973	          0x4863c9	                         movsxd rcx, ecx	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x3976	        0x4883c108	                              add rcx, 8	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x397a	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x397f	          0x4801d0	                            add rax, rdx	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x3982	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x3986	     0xf8580010000	                           jne 0x4003b4c	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x398c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x3990	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x3996	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x3999	            0x29c2	                            sub edx, eax	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x399b	            0x89d0	                            mov eax, edx	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x399d	          0x4863d0	                         movsxd rdx, eax	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39a4	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39a7	          0x4863c9	                         movsxd rcx, ecx	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39aa	        0x4883c108	                              add rcx, 8	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39ae	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39b3	          0x4839c2	                            cmp rdx, rax	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39b6	            0x7c46	                            jl 0x4003a3e	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1799	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39bc	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1799	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39bf	          0x4863d2	                         movsxd rdx, edx	      1799	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39c2	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1799	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1800	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39cb	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1800	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39ce	          0x4863c9	                         movsxd rcx, ecx	      1800	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39d1	        0x4883c108	                              add rcx, 8	      1800	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39d5	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1800	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39da	          0x4801c2	                            add rdx, rax	      1800	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39dd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1799	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39e1	        0x48895078	             mov qword [rax + 0x78], rdx	      1799	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39e5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1801	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39e9	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      1801	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39ef	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1801	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39f3	    0x899084000000	             mov dword [rax + 0x84], edx	      1801	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39f9	      0xe90e010000	                           jmp 0x4003b4c	      1801	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x39fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x3a02	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x3a05	          0x4863d2	                         movsxd rdx, edx	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x3a08	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x3a0d	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1806	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x3a10	            0x4898	                                    cdqe	      1806	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x3a12	          0x4801c2	                            add rdx, rax	      1806	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x3a15	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1806	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x3a19	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1806	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x3a1f	            0x4898	                                    cdqe	      1806	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x3a21	          0x4829c2	                            sub rdx, rax	      1806	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x3a24	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x3a28	        0x48895078	             mov qword [rax + 0x78], rdx	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x3a2c	      0xe9db000000	                           jmp 0x4003b4c	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x3a31	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1809	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a35	        0x488b4878	            mov rcx, qword [rax + 0x78] 	      1809	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a39	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1809	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a3d	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1809	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a40	          0x4863d2	                         movsxd rdx, edx	      1809	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a43	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1809	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a48	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1810	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a4c	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	      1810	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a4f	          0x4863f6	                         movsxd rsi, esi	      1810	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a52	        0x4883c608	                              add rsi, 8	      1810	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a56	      0x488b44f008	       mov rax, qword [rax + rsi*8 + 8] 	      1810	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a5b	          0x4801d0	                            add rax, rdx	      1810	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a5e	          0x4839c1	                            cmp rcx, rax	      1809	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a61	     0xf8ca5000000	                            jl 0x4003b4c	      1809	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a67	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a6b	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a6e	          0x4863d2	                         movsxd rdx, edx	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a71	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a76	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a7a	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a7d	          0x4863c9	                         movsxd rcx, ecx	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a80	        0x4883c108	                              add rcx, 8	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a84	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a89	          0x4801c2	                            add rdx, rax	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a8c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a90	        0x48895078	             mov qword [rax + 0x78], rdx	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x3a94	    0x8b0500000000	            mov eax, dword [0x04003ada] 	      1815	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13
0x3a9a	          0x83e001	                              and eax, 1	      1815	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13
0x3a9d	            0x85c0	                           test eax, eax	      1815	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13
0x3a9f	            0x746b	                            je 0x4003b4c	      1815	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13
0x3aa1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x3aa5	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x3aa8	          0x4863d2	                         movsxd rdx, edx	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x3aab	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x3ab0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x3ab4	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x3ab7	          0x4863c9	                         movsxd rcx, ecx	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x3aba	        0x4883c108	                              add rcx, 8	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x3abe	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x3ac3	          0x4801d0	                            add rax, rdx	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x3ac6	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x3aca	            0x7516	                           jne 0x4003b22	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x3acc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1819	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x3ad0	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      1819	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x3ad6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1819	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x3ada	    0x899084000000	             mov dword [rax + 0x84], edx	      1819	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x3ae0	            0xeb2a	                           jmp 0x4003b4c	      1819	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x3ae2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x3ae6	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x3ae9	          0x4863d2	                         movsxd rdx, edx	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x3aec	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x3af1	            0x89c2	                            mov edx, eax	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x3af3	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x3af6	             0x1c2	                            add edx, eax	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x3af8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x3afc	            0x29c2	                            sub edx, eax	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x3afe	            0x89d0	                            mov eax, edx	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x3b00	            0x89c2	                            mov edx, eax	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x3b02	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x3b06	    0x899084000000	             mov dword [rax + 0x84], edx	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x3b0c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1830	diff.c	FUNCTION_31	ELSE_5
0x3b10	    0xc7808c000000	               mov dword [rax + 0x8c], 0	      1830	diff.c	FUNCTION_31	ELSE_5
0x3b1a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x3b1e	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x3b22	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x3b26	        0x488b4008	                mov rax, qword [rax + 8]	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x3b2a	          0x488b00	                    mov rax, qword [rax]	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x3b2d	          0x4839c2	                            cmp rdx, rax	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x3b30	            0x7e21	                           jle 0x4003b93	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x3b32	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1833	diff.c	FUNCTION_31	ELSE_5	IF_15
0x3b36	        0x488b4008	                mov rax, qword [rax + 8]	      1833	diff.c	FUNCTION_31	ELSE_5	IF_15
0x3b3a	          0x488b10	                    mov rdx, qword [rax]	      1833	diff.c	FUNCTION_31	ELSE_5	IF_15
0x3b3d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1833	diff.c	FUNCTION_31	ELSE_5	IF_15
0x3b41	        0x48895078	             mov qword [rax + 0x78], rdx	      1833	diff.c	FUNCTION_31	ELSE_5	IF_15
0x3b45	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1834	diff.c	FUNCTION_31	ELSE_5	IF_15
0x3b49	    0xc7808c000000	               mov dword [rax + 0x8c], 1	      1834	diff.c	FUNCTION_31	ELSE_5	IF_15
0x3b53	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1836	diff.c	FUNCTION_31	IF_16
0x3b57	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1836	diff.c	FUNCTION_31	IF_16
0x3b5b	          0x4885c0	                           test rax, rax	      1836	diff.c	FUNCTION_31	IF_16
0x3b5e	            0x7f1a	                            jg 0x4003bba	      1836	diff.c	FUNCTION_31	IF_16
0x3b60	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1838	diff.c	FUNCTION_31	IF_16
0x3b64	    0x48c740780100	               mov qword [rax + 0x78], 1	      1838	diff.c	FUNCTION_31	IF_16
0x3b6c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1839	diff.c	FUNCTION_31	IF_16
0x3b70	    0xc78084000000	               mov dword [rax + 0x84], 0	      1839	diff.c	FUNCTION_31	IF_16
0x3b7a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1843	diff.c	FUNCTION_31	CALL_4
0x3b7e	          0x4889c7	                            mov rdi, rax	      1843	diff.c	FUNCTION_31	CALL_4
0x3b81	      0xe800000000	                          call 0x4003bc6	      1843	diff.c	FUNCTION_31	CALL_4
0x3b86	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1844	diff.c	FUNCTION_31	CALL_5
0x3b8a	          0x4889c7	                            mov rdi, rax	      1844	diff.c	FUNCTION_31	CALL_5
0x3b8d	      0xe800000000	                          call 0x4003bd2	      1844	diff.c	FUNCTION_31	CALL_5
0x3b92	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1846	diff.c	FUNCTION_31	CALL_6
0x3b96	      0xbe00000000	                              mov esi, 0	      1846	diff.c	FUNCTION_31	CALL_6
0x3b9b	          0x4889c7	                            mov rdi, rax	      1846	diff.c	FUNCTION_31	CALL_6
0x3b9e	      0xe800000000	                          call 0x4003be3	      1846	diff.c	FUNCTION_31	CALL_6
0x3ba3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1848	diff.c	FUNCTION_31	CALL_7
0x3ba7	        0x488d5078	                   lea rdx, [rax + 0x78]	      1848	diff.c	FUNCTION_31	CALL_7
0x3bab	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1848	diff.c	FUNCTION_31	CALL_7
0x3baf	        0x488b7078	            mov rsi, qword [rax + 0x78] 	      1848	diff.c	FUNCTION_31	CALL_7
0x3bb3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1848	diff.c	FUNCTION_31	CALL_7
0x3bb7	    0x41b900000000	                              mov r9d, 0	      1848	diff.c	FUNCTION_31	CALL_7
0x3bbd	    0x41b801000000	                              mov r8d, 1	      1848	diff.c	FUNCTION_31	CALL_7
0x3bc3	      0xb900000000	                              mov ecx, 0	      1848	diff.c	FUNCTION_31	CALL_7
0x3bc8	          0x4889c7	                            mov rdi, rax	      1848	diff.c	FUNCTION_31	CALL_7
0x3bcb	      0xe800000000	                          call 0x4003c10	      1848	diff.c	FUNCTION_31	CALL_7
0x3bd0	            0xeb04	                           jmp 0x4003c16	      1848	diff.c	FUNCTION_31	CALL_7
0x3bd2	              0x90	                                     nop	      1749	diff.c	FUNCTION_31	IF_1
0x3bd3	            0xeb01	                           jmp 0x4003c16	      1749	diff.c	FUNCTION_31	IF_1
0x3bd5	              0x90	                                     nop	      1772	diff.c	FUNCTION_31	ELSE_1	IF_5
0x3bd6	              0xc9	                                   leave	      1851	diff.c	FUNCTION_31
0x3bd7	              0xc3	                                     ret	      1851	diff.c	FUNCTION_31
ex_diffpatch	SWITCH,0:functions,0:WHILE,0:ELSE,4:IF,20:CALL,56:FOR,0:DO,0	381
0x1776	              0x55	                                push rbp	       890	diff.c	FUNCTION_17
0x1777	          0x4889e5	                            mov rbp, rsp	       890	diff.c	FUNCTION_17
0x177a	            0x4154	                                push r12	       890	diff.c	FUNCTION_17
0x177c	              0x53	                                push rbx	       890	diff.c	FUNCTION_17
0x177d	    0x4881ec001100	                         sub rsp, 0x1100	       890	diff.c	FUNCTION_17
0x1784	    0x4889bdf8eeff	           mov qword [rbp - 0x1108], rdi	       890	diff.c	FUNCTION_17
0x178b	    0x64488b042528	                mov rax, qword fs:[0x28]	       890	diff.c	FUNCTION_17
0x1794	        0x488945e8	             mov qword [rbp - 0x18], rax	       890	diff.c	FUNCTION_17
0x1798	            0x31c0	                            xor eax, eax	       890	diff.c	FUNCTION_17
0x179a	    0x48c78508efff	             mov qword [rbp - 0x10f8], 0	       893	diff.c	FUNCTION_17
0x17a5	    0x488b05000000	            mov rax, qword [0x040017ec] 	       895	diff.c	FUNCTION_17
0x17ac	    0x48898530efff	           mov qword [rbp - 0x10d0], rax	       895	diff.c	FUNCTION_17
0x17b3	    0x48c78510efff	             mov qword [rbp - 0x10f0], 0	       896	diff.c	FUNCTION_17
0x17be	    0x48c78518efff	             mov qword [rbp - 0x10e8], 0	       899	diff.c	FUNCTION_17
0x17c9	    0x48c78520efff	             mov qword [rbp - 0x10e0], 0	       902	diff.c	FUNCTION_17
0x17d4	    0x8b0500000000	            mov eax, dword [0x0400181a] 	       903	diff.c	FUNCTION_17
0x17da	    0x898504efffff	           mov dword [rbp - 0x10fc], eax	       903	diff.c	FUNCTION_17
0x17e0	    0x48c78528efff	             mov qword [rbp - 0x10d8], 0	       906	diff.c	FUNCTION_17
0x17eb	    0x8b0500000000	            mov eax, dword [0x04001831] 	       909	diff.c	FUNCTION_17	IF_1
0x17f1	            0x85c0	                           test eax, eax	       909	diff.c	FUNCTION_17	IF_1
0x17f3	            0x7479	                            je 0x40018ae	       909	diff.c	FUNCTION_17	IF_1
0x17f5	      0xbf00000000	                              mov edi, 0	       913	diff.c	FUNCTION_17	IF_1	CALL_3
0x17fa	      0xe800000000	                          call 0x400183f	       913	diff.c	FUNCTION_17	IF_1	CALL_3
0x17ff	          0x4989c4	                            mov r12, rax	       913	diff.c	FUNCTION_17	IF_1	CALL_3
0x1802	    0x488b85f8eeff	           mov rax, qword [rbp - 0x1108]	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x1809	          0x488b18	                    mov rbx, qword [rax]	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x180c	      0xbf00000000	                              mov edi, 0	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x1811	      0xe800000000	                          call 0x4001856	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x1816	        0x4883ec08	                              sub rsp, 8	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x181a	            0x6a00	                                  push 0	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x181c	          0x4d89e1	                             mov r9, r12	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x181f	    0x41b800000000	                              mov r8d, 0	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x1825	      0xb900000000	                              mov ecx, 0	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x182a	          0x4889da	                            mov rdx, rbx	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x182d	          0x4889c6	                            mov rsi, rax	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x1830	      0xbf00000000	                              mov edi, 0	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x1835	      0xe800000000	                          call 0x400187a	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x183a	        0x4883c410	                           add rsp, 0x10	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x183e	    0x48898520efff	           mov qword [rbp - 0x10e0], rax	       911	diff.c	FUNCTION_17	IF_1	CALL_2
0x1845	    0x4883bd20efff	             cmp qword [rbp - 0x10e0], 0	       914	diff.c	FUNCTION_17	IF_1	IF_2
0x184d	     0xf8418060000	                            je 0x4001eab	       914	diff.c	FUNCTION_17	IF_1	IF_2
0x1853	    0x488b85f8eeff	           mov rax, qword [rbp - 0x1108]	       916	diff.c	FUNCTION_17	IF_1
0x185a	    0x488b9520efff	           mov rdx, qword [rbp - 0x10e0]	       916	diff.c	FUNCTION_17	IF_1
0x1861	          0x488910	                    mov qword [rax], rdx	       916	diff.c	FUNCTION_17	IF_1
0x1864	    0xc70500000000	               mov dword [0x040018ae], 0	       917	diff.c	FUNCTION_17	IF_1
0x186e	      0xbe00000000	                              mov esi, 0	       922	diff.c	FUNCTION_17	CALL_4
0x1873	      0xbf6f000000	                           mov edi, 0x6f	       922	diff.c	FUNCTION_17	CALL_4
0x1878	      0xe800000000	                          call 0x40018bd	       922	diff.c	FUNCTION_17	CALL_4
0x187d	    0x48898538efff	           mov qword [rbp - 0x10c8], rax	       922	diff.c	FUNCTION_17	CALL_4
0x1884	      0xbe00000000	                              mov esi, 0	       923	diff.c	FUNCTION_17	CALL_5
0x1889	      0xbf6e000000	                           mov edi, 0x6e	       923	diff.c	FUNCTION_17	CALL_5
0x188e	      0xe800000000	                          call 0x40018d3	       923	diff.c	FUNCTION_17	CALL_5
0x1893	    0x48898540efff	           mov qword [rbp - 0x10c0], rax	       923	diff.c	FUNCTION_17	CALL_5
0x189a	    0x4883bd38efff	             cmp qword [rbp - 0x10c8], 0	       924	diff.c	FUNCTION_17	IF_3
0x18a2	     0xf841a050000	                            je 0x4001e02	       924	diff.c	FUNCTION_17	IF_3
0x18a8	    0x4883bd40efff	             cmp qword [rbp - 0x10c0], 0	       924	diff.c	FUNCTION_17	IF_3
0x18b0	     0xf840c050000	                            je 0x4001e02	       924	diff.c	FUNCTION_17	IF_3
0x18b6	    0x488b05000000	            mov rax, qword [0x040018fd] 	       929	diff.c	FUNCTION_17	IF_4
0x18bd	          0x488b10	                    mov rdx, qword [rax]	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x18c0	    0x488b05000000	            mov rax, qword [0x04001907] 	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x18c7	    0x488bb538efff	           mov rsi, qword [rbp - 0x10c8]	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x18ce	            0x6a01	                                  push 1	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x18d0	            0x6a00	                                  push 0	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x18d2	            0x6a00	                                  push 0	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x18d4	            0x6a00	                                  push 0	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x18d6	    0x41b900000000	                              mov r9d, 0	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x18dc	          0x4989d0	                             mov r8, rdx	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x18df	      0xb901000000	                              mov ecx, 1	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x18e4	      0xba00000000	                              mov edx, 0	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x18e9	          0x4889c7	                            mov rdi, rax	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x18ec	      0xe800000000	                          call 0x4001931	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x18f1	        0x4883c420	                           add rsp, 0x20	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x18f5	            0x85c0	                           test eax, eax	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x18f7	     0xf84be040000	                            je 0x4001dfb	       928	diff.c	FUNCTION_17	IF_4	CALL_6
0x18fd	    0x488b85f8eeff	           mov rax, qword [rbp - 0x1108]	       935	diff.c	FUNCTION_17	CALL_7
0x1904	          0x488b00	                    mov rax, qword [rax]	       935	diff.c	FUNCTION_17	CALL_7
0x1907	      0xbe00000000	                              mov esi, 0	       935	diff.c	FUNCTION_17	CALL_7
0x190c	          0x4889c7	                            mov rdi, rax	       935	diff.c	FUNCTION_17	CALL_7
0x190f	      0xe800000000	                          call 0x4001954	       935	diff.c	FUNCTION_17	CALL_7
0x1914	    0x48898518efff	           mov qword [rbp - 0x10e8], rax	       935	diff.c	FUNCTION_17	CALL_7
0x191b	    0x4883bd18efff	             cmp qword [rbp - 0x10e8], 0	       937	diff.c	FUNCTION_17	CALL_8
0x1923	            0x750c	                           jne 0x4001971	       937	diff.c	FUNCTION_17	CALL_8
0x1925	    0x488b85f8eeff	           mov rax, qword [rbp - 0x1108]	       937	diff.c	FUNCTION_17	CALL_8
0x192c	          0x488b00	                    mov rax, qword [rax]	       937	diff.c	FUNCTION_17	CALL_8
0x192f	            0xeb07	                           jmp 0x4001978	       937	diff.c	FUNCTION_17	CALL_8
0x1931	    0x488b8518efff	           mov rax, qword [rbp - 0x10e8]	       937	diff.c	FUNCTION_17	CALL_8
0x1938	      0xba01000000	                              mov edx, 1	       937	diff.c	FUNCTION_17	CALL_8
0x193d	      0xbe01000000	                              mov esi, 1	       937	diff.c	FUNCTION_17	CALL_8
0x1942	          0x4889c7	                            mov rdi, rax	       937	diff.c	FUNCTION_17	CALL_8
0x1945	      0xe800000000	                          call 0x400198a	       937	diff.c	FUNCTION_17	CALL_8
0x194a	    0x48898528efff	           mov qword [rbp - 0x10d8], rax	       937	diff.c	FUNCTION_17	CALL_8
0x1951	    0x4883bd28efff	             cmp qword [rbp - 0x10d8], 0	       942	diff.c	FUNCTION_17	IF_5
0x1959	     0xf845f040000	                            je 0x4001dfe	       942	diff.c	FUNCTION_17	IF_5
0x195f	    0x488b8538efff	           mov rax, qword [rbp - 0x10c8]	       944	diff.c	FUNCTION_17	CALL_11
0x1966	          0x4889c7	                            mov rdi, rax	       944	diff.c	FUNCTION_17	CALL_11
0x1969	      0xe800000000	                          call 0x40019ae	       944	diff.c	FUNCTION_17	CALL_11
0x196e	          0x4889c3	                            mov rbx, rax	       944	diff.c	FUNCTION_17	CALL_11
0x1971	    0x488b8528efff	           mov rax, qword [rbp - 0x10d8]	       944	diff.c	FUNCTION_17	CALL_11
0x1978	          0x4889c7	                            mov rdi, rax	       944	diff.c	FUNCTION_17	CALL_11
0x197b	      0xe800000000	                          call 0x40019c0	       944	diff.c	FUNCTION_17	CALL_11
0x1980	          0x4801c3	                            add rbx, rax	       944	diff.c	FUNCTION_17	CALL_11
0x1983	    0x488b8540efff	           mov rax, qword [rbp - 0x10c0]	       944	diff.c	FUNCTION_17	CALL_11
0x198a	          0x4889c7	                            mov rdi, rax	       944	diff.c	FUNCTION_17	CALL_11
0x198d	      0xe800000000	                          call 0x40019d2	       944	diff.c	FUNCTION_17	CALL_11
0x1992	          0x4801d8	                            add rax, rbx	       944	diff.c	FUNCTION_17	CALL_11
0x1995	        0x4883c010	                           add rax, 0x10	       944	diff.c	FUNCTION_17	CALL_11
0x1999	    0x48898548efff	           mov qword [rbp - 0x10b8], rax	       944	diff.c	FUNCTION_17	CALL_11
0x19a0	    0x488b8548efff	           mov rax, qword [rbp - 0x10b8]	       945	diff.c	FUNCTION_17	CALL_12
0x19a7	            0x89c7	                            mov edi, eax	       945	diff.c	FUNCTION_17	CALL_12
0x19a9	      0xe800000000	                          call 0x40019ee	       945	diff.c	FUNCTION_17	CALL_12
0x19ae	    0x48898508efff	           mov qword [rbp - 0x10f8], rax	       945	diff.c	FUNCTION_17	CALL_12
0x19b5	    0x4883bd08efff	             cmp qword [rbp - 0x10f8], 0	       946	diff.c	FUNCTION_17	IF_6
0x19bd	     0xf84fe030000	                            je 0x4001e01	       946	diff.c	FUNCTION_17	IF_6
0x19c3	    0x488d85e0efff	                 lea rax, [rbp - 0x1020]	       955	diff.c	FUNCTION_17	IF_7	CALL_14
0x19ca	      0xbe00100000	                         mov esi, 0x1000	       955	diff.c	FUNCTION_17	IF_7	CALL_14
0x19cf	          0x4889c7	                            mov rdi, rax	       955	diff.c	FUNCTION_17	IF_7	CALL_14
0x19d2	      0xe800000000	                          call 0x4001a17	       955	diff.c	FUNCTION_17	IF_7	CALL_14
0x19d7	          0x83f801	                              cmp eax, 1	       955	diff.c	FUNCTION_17	IF_7	CALL_14
0x19da	            0x7513	                           jne 0x4001a2f	       955	diff.c	FUNCTION_17	IF_7	CALL_14
0x19dc	    0x488d85e0efff	                 lea rax, [rbp - 0x1020]	       955	diff.c	FUNCTION_17	IF_7	CALL_14
0x19e3	          0x4889c7	                            mov rdi, rax	       955	diff.c	FUNCTION_17	IF_7	CALL_14
0x19e6	      0xe800000000	                          call 0x4001a2b	       955	diff.c	FUNCTION_17	IF_7	CALL_14
0x19eb	            0x85c0	                           test eax, eax	       955	diff.c	FUNCTION_17	IF_7	CALL_14
0x19ed	            0x7409	                            je 0x4001a38	       955	diff.c	FUNCTION_17	IF_7	CALL_14
0x19ef	    0xc685e0efffff	              mov byte [rbp - 0x1020], 0	       956	diff.c	FUNCTION_17	IF_7
0x19f6	            0xeb3d	                           jmp 0x4001a75	       956	diff.c	FUNCTION_17	IF_7
0x19f8	    0x488b05000000	            mov rax, qword [0x04001a3f] 	       960	diff.c	FUNCTION_17	ELSE_1	IF_8
0x19ff	          0x4885c0	                           test rax, rax	       960	diff.c	FUNCTION_17	ELSE_1	IF_8
0x1a02	            0x7417	                            je 0x4001a5b	       960	diff.c	FUNCTION_17	ELSE_1	IF_8
0x1a04	    0x488b05000000	            mov rax, qword [0x04001a4b] 	       961	diff.c	FUNCTION_17	ELSE_1	CALL_15
0x1a0b	          0x4889c7	                            mov rdi, rax	       961	diff.c	FUNCTION_17	ELSE_1	CALL_15
0x1a0e	      0xe800000000	                          call 0x4001a53	       961	diff.c	FUNCTION_17	ELSE_1	CALL_15
0x1a13	    0x890500000000	            mov dword [0x04001a59], eax 	       961	diff.c	FUNCTION_17	ELSE_1	CALL_15
0x1a19	            0xeb10	                           jmp 0x4001a6b	       961	diff.c	FUNCTION_17	ELSE_1	CALL_15
0x1a1b	      0xbf00000000	                              mov edi, 0	       964	diff.c	FUNCTION_17	ELSE_1	CALL_16
0x1a20	      0xe800000000	                          call 0x4001a65	       964	diff.c	FUNCTION_17	ELSE_1	CALL_16
0x1a25	    0x890500000000	            mov dword [0x04001a6b], eax 	       964	diff.c	FUNCTION_17	ELSE_1	CALL_16
0x1a2b	      0xbf01000000	                              mov edi, 1	       965	diff.c	FUNCTION_17	ELSE_1	CALL_17
0x1a30	      0xe800000000	                          call 0x4001a75	       965	diff.c	FUNCTION_17	ELSE_1	CALL_17
0x1a35	    0x488b05000000	            mov rax, qword [0x04001a7c] 	       970	diff.c	FUNCTION_17	IF_9
0x1a3c	           0xfb600	                   movzx eax, byte [rax]	       970	diff.c	FUNCTION_17	IF_9
0x1a3f	            0x84c0	                             test al, al	       970	diff.c	FUNCTION_17	IF_9
0x1a41	            0x7438	                            je 0x4001abb	       970	diff.c	FUNCTION_17	IF_9
0x1a43	    0x4883bd18efff	             cmp qword [rbp - 0x10e8], 0	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x1a4b	            0x750c	                           jne 0x4001a99	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x1a4d	    0x488b85f8eeff	           mov rax, qword [rbp - 0x1108]	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x1a54	          0x488b00	                    mov rax, qword [rax]	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x1a57	            0xeb07	                           jmp 0x4001aa0	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x1a59	    0x488b8518efff	           mov rax, qword [rbp - 0x10e8]	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x1a60	    0x488b9540efff	           mov rdx, qword [rbp - 0x10c0]	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x1a67	    0x488b8d38efff	           mov rcx, qword [rbp - 0x10c8]	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x1a6e	          0x4889c6	                            mov rsi, rax	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x1a71	          0x4889cf	                            mov rdi, rcx	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x1a74	      0xe800000000	                          call 0x4001ab9	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x1a79	            0xeb5c	                           jmp 0x4001b17	       972	diff.c	FUNCTION_17	IF_9	CALL_18
0x1a7b	    0x488bbd28efff	           mov rdi, qword [rbp - 0x10d8]	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x1a82	    0x488b8d38efff	           mov rcx, qword [rbp - 0x10c8]	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x1a89	    0x488b9540efff	           mov rdx, qword [rbp - 0x10c0]	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x1a90	    0x488bb548efff	           mov rsi, qword [rbp - 0x10b8]	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x1a97	    0x488b8508efff	           mov rax, qword [rbp - 0x10f8]	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x1a9e	          0x4989f9	                             mov r9, rdi	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x1aa1	          0x4989c8	                             mov r8, rcx	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x1aa4	          0x4889d1	                            mov rcx, rdx	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x1aa7	      0xba00000000	                              mov edx, 0	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x1aac	          0x4889c7	                            mov rdi, rax	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x1aaf	      0xb800000000	                              mov eax, 0	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x1ab4	      0xe800000000	                          call 0x4001af9	       982	diff.c	FUNCTION_17	ELSE_3	CALL_19
0x1ab9	      0xe800000000	                          call 0x4001afe	       984	diff.c	FUNCTION_17	ELSE_3	CALL_20
0x1abe	    0x488b8508efff	           mov rax, qword [rbp - 0x10f8]	       985	diff.c	FUNCTION_17	ELSE_3	CALL_21
0x1ac5	      0xbe05000000	                              mov esi, 5	       985	diff.c	FUNCTION_17	ELSE_3	CALL_21
0x1aca	          0x4889c7	                            mov rdi, rax	       985	diff.c	FUNCTION_17	ELSE_3	CALL_21
0x1acd	      0xe800000000	                          call 0x4001b12	       985	diff.c	FUNCTION_17	ELSE_3	CALL_21
0x1ad2	      0xe800000000	                          call 0x4001b17	       986	diff.c	FUNCTION_17	ELSE_3	CALL_22
0x1ad7	     0xfb685e0efff	          movzx eax, byte [rbp - 0x1020]	       990	diff.c	FUNCTION_17	IF_10
0x1ade	            0x84c0	                             test al, al	       990	diff.c	FUNCTION_17	IF_10
0x1ae0	            0x742f	                            je 0x4001b51	       990	diff.c	FUNCTION_17	IF_10
0x1ae2	    0x488d85e0efff	                 lea rax, [rbp - 0x1020]	       992	diff.c	FUNCTION_17	IF_10	IF_11	CALL_23
0x1ae9	          0x4889c7	                            mov rdi, rax	       992	diff.c	FUNCTION_17	IF_10	IF_11	CALL_23
0x1aec	      0xe800000000	                          call 0x4001b31	       992	diff.c	FUNCTION_17	IF_10	IF_11	CALL_23
0x1af1	            0x85c0	                           test eax, eax	       992	diff.c	FUNCTION_17	IF_10	IF_11	CALL_23
0x1af3	            0x7412	                            je 0x4001b47	       992	diff.c	FUNCTION_17	IF_10	IF_11	CALL_23
0x1af5	      0xbf00000000	                              mov edi, 0	       993	diff.c	FUNCTION_17	IF_10	CALL_25
0x1afa	      0xe800000000	                          call 0x4001b3f	       993	diff.c	FUNCTION_17	IF_10	CALL_25
0x1aff	          0x4889c7	                            mov rdi, rax	       993	diff.c	FUNCTION_17	IF_10	CALL_25
0x1b02	      0xe800000000	                          call 0x4001b47	       993	diff.c	FUNCTION_17	IF_10	CALL_25
0x1b07	      0xbf01000000	                              mov edi, 1	       994	diff.c	FUNCTION_17	IF_10	CALL_26
0x1b0c	      0xe800000000	                          call 0x4001b51	       994	diff.c	FUNCTION_17	IF_10	CALL_26
0x1b11	      0xbf32000000	                           mov edi, 0x32	       999	diff.c	FUNCTION_17	CALL_27
0x1b16	      0xe800000000	                          call 0x4001b5b	       999	diff.c	FUNCTION_17	CALL_27
0x1b1b	    0x488b9540efff	           mov rdx, qword [rbp - 0x10c0]	      1002	diff.c	FUNCTION_17	CALL_28
0x1b22	    0x488b8508efff	           mov rax, qword [rbp - 0x10f8]	      1002	diff.c	FUNCTION_17	CALL_28
0x1b29	          0x4889d6	                            mov rsi, rdx	      1002	diff.c	FUNCTION_17	CALL_28
0x1b2c	          0x4889c7	                            mov rdi, rax	      1002	diff.c	FUNCTION_17	CALL_28
0x1b2f	      0xe800000000	                          call 0x4001b74	      1002	diff.c	FUNCTION_17	CALL_28
0x1b34	    0x488b8508efff	           mov rax, qword [rbp - 0x10f8]	      1003	diff.c	FUNCTION_17	CALL_29
0x1b3b	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1003	diff.c	FUNCTION_17	CALL_29
0x1b42	          0x4889c2	                            mov rdx, rax	      1003	diff.c	FUNCTION_17	CALL_29
0x1b45	      0xb800000000	                              mov eax, 0	      1003	diff.c	FUNCTION_17	CALL_29
0x1b4a	          0x4889d7	                            mov rdi, rdx	      1003	diff.c	FUNCTION_17	CALL_29
0x1b4d	            0xf2ae	              repne scasb al, byte [rdi]	      1003	diff.c	FUNCTION_17	CALL_29
0x1b4f	          0x4889c8	                            mov rax, rcx	      1003	diff.c	FUNCTION_17	CALL_29
0x1b52	          0x48f7d0	                                 not rax	      1003	diff.c	FUNCTION_17	CALL_29
0x1b55	        0x488d50ff	                      lea rdx, [rax - 1]	      1003	diff.c	FUNCTION_17	CALL_29
0x1b59	    0x488b8508efff	           mov rax, qword [rbp - 0x10f8]	      1003	diff.c	FUNCTION_17	CALL_29
0x1b60	          0x4801d0	                            add rax, rdx	      1003	diff.c	FUNCTION_17	CALL_29
0x1b63	    0xc7002e6f7269	            mov dword [rax], 0x69726f2e 	      1003	diff.c	FUNCTION_17	CALL_29
0x1b69	    0x66c740046700	                mov word [rax + 4], 0x67	      1003	diff.c	FUNCTION_17	CALL_29
0x1b6f	    0x488b8508efff	           mov rax, qword [rbp - 0x10f8]	      1004	diff.c	FUNCTION_17	CALL_30
0x1b76	          0x4889c7	                            mov rdi, rax	      1004	diff.c	FUNCTION_17	CALL_30
0x1b79	      0xe800000000	                          call 0x4001bbe	      1004	diff.c	FUNCTION_17	CALL_30
0x1b7e	    0x488b9540efff	           mov rdx, qword [rbp - 0x10c0]	      1005	diff.c	FUNCTION_17	CALL_31
0x1b85	    0x488b8508efff	           mov rax, qword [rbp - 0x10f8]	      1005	diff.c	FUNCTION_17	CALL_31
0x1b8c	          0x4889d6	                            mov rsi, rdx	      1005	diff.c	FUNCTION_17	CALL_31
0x1b8f	          0x4889c7	                            mov rdi, rax	      1005	diff.c	FUNCTION_17	CALL_31
0x1b92	      0xe800000000	                          call 0x4001bd7	      1005	diff.c	FUNCTION_17	CALL_31
0x1b97	    0x488b8508efff	           mov rax, qword [rbp - 0x10f8]	      1006	diff.c	FUNCTION_17	CALL_32
0x1b9e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1006	diff.c	FUNCTION_17	CALL_32
0x1ba5	          0x4889c2	                            mov rdx, rax	      1006	diff.c	FUNCTION_17	CALL_32
0x1ba8	      0xb800000000	                              mov eax, 0	      1006	diff.c	FUNCTION_17	CALL_32
0x1bad	          0x4889d7	                            mov rdi, rdx	      1006	diff.c	FUNCTION_17	CALL_32
0x1bb0	            0xf2ae	              repne scasb al, byte [rdi]	      1006	diff.c	FUNCTION_17	CALL_32
0x1bb2	          0x4889c8	                            mov rax, rcx	      1006	diff.c	FUNCTION_17	CALL_32
0x1bb5	          0x48f7d0	                                 not rax	      1006	diff.c	FUNCTION_17	CALL_32
0x1bb8	        0x488d50ff	                      lea rdx, [rax - 1]	      1006	diff.c	FUNCTION_17	CALL_32
0x1bbc	    0x488b8508efff	           mov rax, qword [rbp - 0x10f8]	      1006	diff.c	FUNCTION_17	CALL_32
0x1bc3	          0x4801d0	                            add rax, rdx	      1006	diff.c	FUNCTION_17	CALL_32
0x1bc6	    0xc7002e72656a	            mov dword [rax], 0x6a65722e 	      1006	diff.c	FUNCTION_17	CALL_32
0x1bcc	        0xc6400400	                   mov byte [rax + 4], 0	      1006	diff.c	FUNCTION_17	CALL_32
0x1bd0	    0x488b8508efff	           mov rax, qword [rbp - 0x10f8]	      1007	diff.c	FUNCTION_17	CALL_33
0x1bd7	          0x4889c7	                            mov rdi, rax	      1007	diff.c	FUNCTION_17	CALL_33
0x1bda	      0xe800000000	                          call 0x4001c1f	      1007	diff.c	FUNCTION_17	CALL_33
0x1bdf	    0x488d9550efff	                 lea rdx, [rbp - 0x10b0]	      1010	diff.c	FUNCTION_17	IF_12	CALL_34
0x1be6	    0x488b8540efff	           mov rax, qword [rbp - 0x10c0]	      1010	diff.c	FUNCTION_17	IF_12	CALL_34
0x1bed	          0x4889d6	                            mov rsi, rdx	      1010	diff.c	FUNCTION_17	IF_12	CALL_34
0x1bf0	          0x4889c7	                            mov rdi, rax	      1010	diff.c	FUNCTION_17	IF_12	CALL_34
0x1bf3	      0xe800000000	                          call 0x4001c38	      1010	diff.c	FUNCTION_17	IF_12	CALL_34
0x1bf8	            0x85c0	                           test eax, eax	      1010	diff.c	FUNCTION_17	IF_12	CALL_34
0x1bfa	            0x780c	                            js 0x4001c48	      1010	diff.c	FUNCTION_17	IF_12	CALL_34
0x1bfc	    0x488b8580efff	           mov rax, qword [rbp - 0x1080]	      1010	diff.c	FUNCTION_17	IF_12	CALL_34
0x1c03	          0x4885c0	                           test rax, rax	      1010	diff.c	FUNCTION_17	IF_12	CALL_34
0x1c06	            0x7517	                           jne 0x4001c5f	      1010	diff.c	FUNCTION_17	IF_12	CALL_34
0x1c08	      0xbf00000000	                              mov edi, 0	      1011	diff.c	FUNCTION_17	CALL_36
0x1c0d	      0xe800000000	                          call 0x4001c52	      1011	diff.c	FUNCTION_17	CALL_36
0x1c12	          0x4889c7	                            mov rdi, rax	      1011	diff.c	FUNCTION_17	CALL_36
0x1c15	      0xe800000000	                          call 0x4001c5a	      1011	diff.c	FUNCTION_17	CALL_36
0x1c1a	      0xe9a3010000	                           jmp 0x4001e02	      1011	diff.c	FUNCTION_17	CALL_36
0x1c1f	    0x488b05000000	            mov rax, qword [0x04001c66] 	      1014	diff.c	FUNCTION_17	ELSE_4	IF_13
0x1c26	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1014	diff.c	FUNCTION_17	ELSE_4	IF_13
0x1c2d	          0x4885c0	                           test rax, rax	      1014	diff.c	FUNCTION_17	ELSE_4	IF_13
0x1c30	            0x747d	                            je 0x4001cef	      1014	diff.c	FUNCTION_17	ELSE_4	IF_13
0x1c32	    0x488b05000000	            mov rax, qword [0x04001c79] 	      1017	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_38
0x1c39	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1017	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_38
0x1c40	          0x4889c7	                            mov rdi, rax	      1017	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_38
0x1c43	      0xe800000000	                          call 0x4001c88	      1017	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_38
0x1c48	          0x83c004	                              add eax, 4	      1016	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_37
0x1c4b	            0x89c2	                            mov edx, eax	      1016	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_37
0x1c4d	    0x488b05000000	            mov rax, qword [0x04001c94] 	      1016	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_37
0x1c54	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1016	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_37
0x1c5b	            0x89d6	                            mov esi, edx	      1016	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_37
0x1c5d	          0x4889c7	                            mov rdi, rax	      1016	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_37
0x1c60	      0xe800000000	                          call 0x4001ca5	      1016	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_37
0x1c65	    0x48898510efff	           mov qword [rbp - 0x10f0], rax	      1016	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_37
0x1c6c	    0x4883bd10efff	             cmp qword [rbp - 0x10f0], 0	      1018	diff.c	FUNCTION_17	ELSE_4	IF_13	IF_14
0x1c74	            0x7439	                            je 0x4001cef	      1018	diff.c	FUNCTION_17	ELSE_4	IF_13	IF_14
0x1c76	    0x488b8510efff	           mov rax, qword [rbp - 0x10f0]	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x1c7d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x1c84	          0x4889c2	                            mov rdx, rax	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x1c87	      0xb800000000	                              mov eax, 0	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x1c8c	          0x4889d7	                            mov rdi, rdx	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x1c8f	            0xf2ae	              repne scasb al, byte [rdi]	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x1c91	          0x4889c8	                            mov rax, rcx	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x1c94	          0x48f7d0	                                 not rax	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x1c97	        0x488d50ff	                      lea rdx, [rax - 1]	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x1c9b	    0x488b8510efff	           mov rax, qword [rbp - 0x10f0]	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x1ca2	          0x4801d0	                            add rax, rdx	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x1ca5	    0xc7002e6e6577	            mov dword [rax], 0x77656e2e 	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x1cab	        0xc6400400	                   mov byte [rax + 4], 0	      1019	diff.c	FUNCTION_17	ELSE_4	IF_13	CALL_39
0x1caf	    0xc70500000000	               mov dword [0x04001cf9], 1	      1023	diff.c	FUNCTION_17	ELSE_4
0x1cb9	    0xc70500000000	               mov dword [0x04001d03], 0	      1026	diff.c	FUNCTION_17	ELSE_4
0x1cc3	    0x8b0500000000	            mov eax, dword [0x04001d09] 	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x1cc9	          0x83e010	                           and eax, 0x10	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x1ccc	            0x85c0	                           test eax, eax	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x1cce	            0x7407	                            je 0x4001d17	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x1cd0	      0xb802000000	                              mov eax, 2	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x1cd5	            0xeb05	                           jmp 0x4001d1c	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x1cd7	      0xb800000000	                              mov eax, 0	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x1cdc	            0x89c6	                            mov esi, eax	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x1cde	      0xbf00000000	                              mov edi, 0	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x1ce3	      0xe800000000	                          call 0x4001d28	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x1ce8	            0x85c0	                           test eax, eax	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x1cea	     0xf84d2000000	                            je 0x4001e02	      1028	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_40
0x1cf0	    0x488b85f8eeff	           mov rax, qword [rbp - 0x1108]	      1031	diff.c	FUNCTION_17	ELSE_4	IF_15
0x1cf7	    0xc740209a0100	          mov dword [rax + 0x20], 0x19a 	      1031	diff.c	FUNCTION_17	ELSE_4	IF_15
0x1cfe	    0x488b85f8eeff	           mov rax, qword [rbp - 0x1108]	      1032	diff.c	FUNCTION_17	ELSE_4	IF_15
0x1d05	    0x488b9540efff	           mov rdx, qword [rbp - 0x10c0]	      1032	diff.c	FUNCTION_17	ELSE_4	IF_15
0x1d0c	          0x488910	                    mov qword [rax], rdx	      1032	diff.c	FUNCTION_17	ELSE_4	IF_15
0x1d0f	    0x488b9530efff	           mov rdx, qword [rbp - 0x10d0]	      1033	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_41
0x1d16	    0x488b85f8eeff	           mov rax, qword [rbp - 0x1108]	      1033	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_41
0x1d1d	          0x4889d6	                            mov rsi, rdx	      1033	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_41
0x1d20	          0x4889c7	                            mov rdi, rax	      1033	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_41
0x1d23	      0xe800000000	                          call 0x4001d68	      1033	diff.c	FUNCTION_17	ELSE_4	IF_15	CALL_41
0x1d28	    0x488b05000000	            mov rax, qword [0x04001d6f] 	      1036	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_42
0x1d2f	    0x483b8530efff	           cmp rax, qword [rbp - 0x10d0]	      1036	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_42
0x1d36	     0xf8486000000	                            je 0x4001e02	      1036	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_42
0x1d3c	    0x488b8530efff	           mov rax, qword [rbp - 0x10d0]	      1036	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_42
0x1d43	          0x4889c7	                            mov rdi, rax	      1036	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_42
0x1d46	      0xe800000000	                          call 0x4001d8b	      1036	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_42
0x1d4b	            0x85c0	                           test eax, eax	      1036	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_42
0x1d4d	            0x7473	                            je 0x4001e02	      1036	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_42
0x1d4f	    0x488b05000000	            mov rax, qword [0x04001d96] 	      1039	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_43
0x1d56	      0xbe01000000	                              mov esi, 1	      1039	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_43
0x1d5b	          0x4889c7	                            mov rdi, rax	      1039	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_43
0x1d5e	      0xe800000000	                          call 0x4001da3	      1039	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_43
0x1d63	    0x488b8530efff	           mov rax, qword [rbp - 0x10d0]	      1040	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_44
0x1d6a	      0xbe01000000	                              mov esi, 1	      1040	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_44
0x1d6f	          0x4889c7	                            mov rdi, rax	      1040	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_44
0x1d72	      0xe800000000	                          call 0x4001db7	      1040	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	CALL_44
0x1d77	    0x4883bd10efff	             cmp qword [rbp - 0x10f0], 0	      1042	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17
0x1d7f	            0x7441	                            je 0x4001e02	      1042	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17
0x1d81	    0x488b85f8eeff	           mov rax, qword [rbp - 0x1108]	      1045	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17
0x1d88	    0x488b9510efff	           mov rdx, qword [rbp - 0x10f0]	      1045	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17
0x1d8f	          0x488910	                    mov qword [rax], rdx	      1045	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17
0x1d92	    0x488b85f8eeff	           mov rax, qword [rbp - 0x1108]	      1046	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17	CALL_45
0x1d99	          0x4889c7	                            mov rdi, rax	      1046	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17	CALL_45
0x1d9c	      0xe800000000	                          call 0x4001de1	      1046	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17	CALL_45
0x1da1	      0xbf00000000	                              mov edi, 0	      1049	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17	IF_18	CALL_46
0x1da6	      0xe800000000	                          call 0x4001deb	      1049	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17	IF_18	CALL_46
0x1dab	            0x85c0	                           test eax, eax	      1049	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17	IF_18	CALL_46
0x1dad	            0x7413	                            je 0x4001e02	      1049	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17	IF_18	CALL_46
0x1daf	      0xbf00000000	                              mov edi, 0	      1050	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17	CALL_47
0x1db4	      0xe800000000	                          call 0x4001df9	      1050	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17	CALL_47
0x1db9	            0xeb07	                           jmp 0x4001e02	      1050	diff.c	FUNCTION_17	ELSE_4	IF_15	IF_16	IF_17	CALL_47
0x1dbb	              0x90	                                     nop	       931	diff.c	FUNCTION_17	IF_4
0x1dbc	            0xeb04	                           jmp 0x4001e02	       931	diff.c	FUNCTION_17	IF_4
0x1dbe	              0x90	                                     nop	       943	diff.c	FUNCTION_17	IF_5
0x1dbf	            0xeb01	                           jmp 0x4001e02	       943	diff.c	FUNCTION_17	IF_5
0x1dc1	              0x90	                                     nop	       947	diff.c	FUNCTION_17	IF_6
0x1dc2	    0x4883bd38efff	             cmp qword [rbp - 0x10c8], 0	      1057	diff.c	FUNCTION_17	IF_19
0x1dca	            0x740f	                            je 0x4001e1b	      1057	diff.c	FUNCTION_17	IF_19
0x1dcc	    0x488b8538efff	           mov rax, qword [rbp - 0x10c8]	      1058	diff.c	FUNCTION_17	CALL_48
0x1dd3	          0x4889c7	                            mov rdi, rax	      1058	diff.c	FUNCTION_17	CALL_48
0x1dd6	      0xe800000000	                          call 0x4001e1b	      1058	diff.c	FUNCTION_17	CALL_48
0x1ddb	    0x488b8538efff	           mov rax, qword [rbp - 0x10c8]	      1059	diff.c	FUNCTION_17	CALL_49
0x1de2	          0x4889c7	                            mov rdi, rax	      1059	diff.c	FUNCTION_17	CALL_49
0x1de5	      0xe800000000	                          call 0x4001e2a	      1059	diff.c	FUNCTION_17	CALL_49
0x1dea	    0x4883bd40efff	             cmp qword [rbp - 0x10c0], 0	      1060	diff.c	FUNCTION_17	IF_20
0x1df2	            0x740f	                            je 0x4001e43	      1060	diff.c	FUNCTION_17	IF_20
0x1df4	    0x488b8540efff	           mov rax, qword [rbp - 0x10c0]	      1061	diff.c	FUNCTION_17	CALL_50
0x1dfb	          0x4889c7	                            mov rdi, rax	      1061	diff.c	FUNCTION_17	CALL_50
0x1dfe	      0xe800000000	                          call 0x4001e43	      1061	diff.c	FUNCTION_17	CALL_50
0x1e03	    0x488b8540efff	           mov rax, qword [rbp - 0x10c0]	      1062	diff.c	FUNCTION_17	CALL_51
0x1e0a	          0x4889c7	                            mov rdi, rax	      1062	diff.c	FUNCTION_17	CALL_51
0x1e0d	      0xe800000000	                          call 0x4001e52	      1062	diff.c	FUNCTION_17	CALL_51
0x1e12	    0x488b8510efff	           mov rax, qword [rbp - 0x10f0]	      1063	diff.c	FUNCTION_17	CALL_52
0x1e19	          0x4889c7	                            mov rdi, rax	      1063	diff.c	FUNCTION_17	CALL_52
0x1e1c	      0xe800000000	                          call 0x4001e61	      1063	diff.c	FUNCTION_17	CALL_52
0x1e21	    0x488b8508efff	           mov rax, qword [rbp - 0x10f8]	      1064	diff.c	FUNCTION_17	CALL_53
0x1e28	          0x4889c7	                            mov rdi, rax	      1064	diff.c	FUNCTION_17	CALL_53
0x1e2b	      0xe800000000	                          call 0x4001e70	      1064	diff.c	FUNCTION_17	CALL_53
0x1e30	    0x488b8518efff	           mov rax, qword [rbp - 0x10e8]	      1066	diff.c	FUNCTION_17	CALL_54
0x1e37	          0x4889c7	                            mov rdi, rax	      1066	diff.c	FUNCTION_17	CALL_54
0x1e3a	      0xe800000000	                          call 0x4001e7f	      1066	diff.c	FUNCTION_17	CALL_54
0x1e3f	    0x488b8528efff	           mov rax, qword [rbp - 0x10d8]	      1068	diff.c	FUNCTION_17	CALL_55
0x1e46	          0x4889c7	                            mov rdi, rax	      1068	diff.c	FUNCTION_17	CALL_55
0x1e49	      0xe800000000	                          call 0x4001e8e	      1068	diff.c	FUNCTION_17	CALL_55
0x1e4e	    0x488b8520efff	           mov rax, qword [rbp - 0x10e0]	      1070	diff.c	FUNCTION_17	CALL_56
0x1e55	          0x4889c7	                            mov rdi, rax	      1070	diff.c	FUNCTION_17	CALL_56
0x1e58	      0xe800000000	                          call 0x4001e9d	      1070	diff.c	FUNCTION_17	CALL_56
0x1e5d	    0x8b8504efffff	           mov eax, dword [rbp - 0x10fc]	      1071	diff.c	FUNCTION_17
0x1e63	    0x890500000000	            mov dword [0x04001ea9], eax 	      1071	diff.c	FUNCTION_17
0x1e69	            0xeb01	                           jmp 0x4001eac	      1071	diff.c	FUNCTION_17
0x1e6b	              0x90	                                     nop	       915	diff.c	FUNCTION_17	IF_1	IF_2
0x1e6c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1073	diff.c	FUNCTION_17
0x1e70	    0x644833042528	                xor rax, qword fs:[0x28]	      1073	diff.c	FUNCTION_17
0x1e79	            0x7405	                            je 0x4001ec0	      1073	diff.c	FUNCTION_17
0x1e7b	      0xe800000000	                          call 0x4001ec0	      1073	diff.c	FUNCTION_17
0x1e80	        0x488d65f0	                   lea rsp, [rbp - 0x10]	      1073	diff.c	FUNCTION_17
0x1e84	              0x5b	                                 pop rbx	      1073	diff.c	FUNCTION_17
0x1e85	            0x415c	                                 pop r12	      1073	diff.c	FUNCTION_17
0x1e87	              0x5d	                                 pop rbp	      1073	diff.c	FUNCTION_17
0x1e88	              0xc3	                                     ret	      1073	diff.c	FUNCTION_17
diff_clear	SWITCH,0:functions,0:WHILE,0:ELSE,0:IF,0:CALL,1:FOR,1:DO,0	23
0x2f43	              0x55	                                push rbp	      1500	diff.c	FUNCTION_25
0x2f44	          0x4889e5	                            mov rbp, rsp	      1500	diff.c	FUNCTION_25
0x2f47	        0x4883ec20	                           sub rsp, 0x20	      1500	diff.c	FUNCTION_25
0x2f4b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1500	diff.c	FUNCTION_25
0x2f4f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1503	diff.c	FUNCTION_25	FOR_1
0x2f53	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1503	diff.c	FUNCTION_25	FOR_1
0x2f57	        0x488945f0	             mov qword [rbp - 0x10], rax	      1503	diff.c	FUNCTION_25	FOR_1
0x2f5b	            0xeb1f	                           jmp 0x4002fbc	      1503	diff.c	FUNCTION_25	FOR_1
0x2f5d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1505	diff.c	FUNCTION_25	FOR_1
0x2f61	          0x488b00	                    mov rax, qword [rax]	      1505	diff.c	FUNCTION_25	FOR_1
0x2f64	        0x488945f8	                mov qword [rbp - 8], rax	      1505	diff.c	FUNCTION_25	FOR_1
0x2f68	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1506	diff.c	FUNCTION_25	FOR_1	CALL_1
0x2f6c	          0x4889c7	                            mov rdi, rax	      1506	diff.c	FUNCTION_25	FOR_1	CALL_1
0x2f6f	      0xe800000000	                          call 0x4002fb4	      1506	diff.c	FUNCTION_25	FOR_1	CALL_1
0x2f74	        0x488b45f8	                mov rax, qword [rbp - 8]	      1503	diff.c	FUNCTION_25	FOR_1
0x2f78	        0x488945f0	             mov qword [rbp - 0x10], rax	      1503	diff.c	FUNCTION_25	FOR_1
0x2f7c	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1503	diff.c	FUNCTION_25	FOR_1
0x2f81	            0x75da	                           jne 0x4002f9d	      1503	diff.c	FUNCTION_25	FOR_1
0x2f83	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1508	diff.c	FUNCTION_25
0x2f87	    0x48c740580000	               mov qword [rax + 0x58], 0	      1508	diff.c	FUNCTION_25
0x2f8f	              0x90	                                     nop	      1509	diff.c	FUNCTION_25
0x2f90	              0xc9	                                   leave	      1509	diff.c	FUNCTION_25
0x2f91	              0xc3	                                     ret	      1509	diff.c	FUNCTION_25
diff_write	SWITCH,0:functions,0:WHILE,0:ELSE,0:IF,0:CALL,3:FOR,0:DO,0	39
0x10bb	              0x55	                                push rbp	       641	diff.c	FUNCTION_14
0x10bc	          0x4889e5	                            mov rbp, rsp	       641	diff.c	FUNCTION_14
0x10bf	        0x4883ec20	                           sub rsp, 0x20	       641	diff.c	FUNCTION_14
0x10c3	        0x48897de8	             mov qword [rbp - 0x18], rdi	       641	diff.c	FUNCTION_14
0x10c7	        0x488975e0	             mov qword [rbp - 0x20], rsi	       641	diff.c	FUNCTION_14
0x10cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	diff.c	FUNCTION_14
0x10cf	    0x488b80901400	          mov rax, qword [rax + 0x1490] 	       645	diff.c	FUNCTION_14
0x10d6	        0x488945f8	                mov qword [rbp - 8], rax	       645	diff.c	FUNCTION_14
0x10da	      0xbf00000000	                              mov edi, 0	       646	diff.c	FUNCTION_14	CALL_1
0x10df	      0xe800000000	                          call 0x4001124	       646	diff.c	FUNCTION_14	CALL_1
0x10e4	          0x4889c2	                            mov rdx, rax	       646	diff.c	FUNCTION_14	CALL_1
0x10e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       646	diff.c	FUNCTION_14	CALL_1
0x10eb	    0x488990901400	          mov qword [rax + 0x1490], rdx 	       646	diff.c	FUNCTION_14	CALL_1
0x10f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       647	diff.c	FUNCTION_14	CALL_2
0x10f6	          0x488b10	                    mov rdx, qword [rax]	       647	diff.c	FUNCTION_14	CALL_2
0x10f9	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       647	diff.c	FUNCTION_14	CALL_2
0x10fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       647	diff.c	FUNCTION_14	CALL_2
0x1101	            0x6a01	                                  push 1	       647	diff.c	FUNCTION_14	CALL_2
0x1103	            0x6a00	                                  push 0	       647	diff.c	FUNCTION_14	CALL_2
0x1105	            0x6a00	                                  push 0	       647	diff.c	FUNCTION_14	CALL_2
0x1107	            0x6a00	                                  push 0	       647	diff.c	FUNCTION_14	CALL_2
0x1109	    0x41b900000000	                              mov r9d, 0	       647	diff.c	FUNCTION_14	CALL_2
0x110f	          0x4989d0	                             mov r8, rdx	       647	diff.c	FUNCTION_14	CALL_2
0x1112	      0xb901000000	                              mov ecx, 1	       647	diff.c	FUNCTION_14	CALL_2
0x1117	      0xba00000000	                              mov edx, 0	       647	diff.c	FUNCTION_14	CALL_2
0x111c	          0x4889c7	                            mov rdi, rax	       647	diff.c	FUNCTION_14	CALL_2
0x111f	      0xe800000000	                          call 0x4001164	       647	diff.c	FUNCTION_14	CALL_2
0x1124	        0x4883c420	                           add rsp, 0x20	       647	diff.c	FUNCTION_14	CALL_2
0x1128	          0x8945f4	              mov dword [rbp - 0xc], eax	       647	diff.c	FUNCTION_14	CALL_2
0x112b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       649	diff.c	FUNCTION_14	CALL_3
0x112f	    0x488b80901400	          mov rax, qword [rax + 0x1490] 	       649	diff.c	FUNCTION_14	CALL_3
0x1136	          0x4889c7	                            mov rdi, rax	       649	diff.c	FUNCTION_14	CALL_3
0x1139	      0xe800000000	                          call 0x400117e	       649	diff.c	FUNCTION_14	CALL_3
0x113e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       650	diff.c	FUNCTION_14
0x1142	        0x488b55f8	                mov rdx, qword [rbp - 8]	       650	diff.c	FUNCTION_14
0x1146	    0x488990901400	          mov qword [rax + 0x1490], rdx 	       650	diff.c	FUNCTION_14
0x114d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       651	diff.c	FUNCTION_14
0x1150	              0xc9	                                   leave	       652	diff.c	FUNCTION_14
0x1151	              0xc3	                                     ret	       652	diff.c	FUNCTION_14
ex_diffoff	SWITCH,0:functions,1:WHILE,0:ELSE,0:IF,2:CALL,3:FOR,0:DO,0	144
0x2323	              0x55	                                push rbp	      1217	diff.c	FUNCTION_22
0x2324	          0x4889e5	                            mov rbp, rsp	      1217	diff.c	FUNCTION_22
0x2327	        0x4883ec20	                           sub rsp, 0x20	      1217	diff.c	FUNCTION_22
0x232b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1217	diff.c	FUNCTION_22
0x232f	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1219	diff.c	FUNCTION_22
0x2336	    0x488b05000000	            mov rax, qword [0x0400237d] 	      1221	diff.c	FUNCTION_22
0x233d	        0x488945f8	                mov qword [rbp - 8], rax	      1221	diff.c	FUNCTION_22
0x2341	      0xe9e4010000	                           jmp 0x400256a	      1221	diff.c	FUNCTION_22
0x2346	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x234a	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x234d	            0x85c0	                           test eax, eax	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x234f	            0x7411	                            je 0x40023a2	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x2351	        0x488b45f8	                mov rax, qword [rbp - 8]	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x2355	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x235b	            0x85c0	                           test eax, eax	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x235d	           0xf95c0	                                setne al	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x2360	            0xeb0e	                           jmp 0x40023b0	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x2362	    0x488b05000000	            mov rax, qword [0x040023a9] 	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x2369	        0x483945f8	                cmp qword [rbp - 8], rax	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x236d	           0xf94c0	                                 sete al	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x2370	            0x84c0	                             test al, al	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x2372	     0xf8499010000	                            je 0x4002551	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x2378	        0x488b45f8	                mov rax, qword [rbp - 8]	      1228	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_1
0x237c	      0xbe00000000	                              mov esi, 0	      1228	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_1
0x2381	          0x4889c7	                            mov rdi, rax	      1228	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_1
0x2384	      0xe896fcffff	                call sym.set_diff_option	      1228	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_1
0x2389	        0x488b45f8	                mov rax, qword [rbp - 8]	      1230	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x238d	    0x8b808c020000	           mov eax, dword [rax + 0x28c] 	      1230	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x2393	            0x85c0	                           test eax, eax	      1230	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x2395	     0xf8450010000	                            je 0x400252b	      1230	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x239b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1233	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x239f	    0x8b8088020000	           mov eax, dword [rax + 0x288] 	      1233	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x23a5	            0x85c0	                           test eax, eax	      1233	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x23a7	            0x7414	                            je 0x40023fd	      1233	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x23a9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1234	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x23ad	    0x8b9090020000	           mov edx, dword [rax + 0x290] 	      1234	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x23b3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1234	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x23b7	    0x899088020000	            mov dword [rax + 0x288], edx	      1234	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x23bd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1235	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x23c1	    0x8b80b0020000	           mov eax, dword [rax + 0x2b0] 	      1235	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x23c7	            0x85c0	                           test eax, eax	      1235	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x23c9	            0x7414	                            je 0x400241f	      1235	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x23cb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1236	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x23cf	    0x8b90b4020000	           mov edx, dword [rax + 0x2b4] 	      1236	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x23d5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1236	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x23d9	    0x8990b0020000	            mov dword [rax + 0x2b0], edx	      1236	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x23df	        0x488b45f8	                mov rax, qword [rbp - 8]	      1237	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x23e3	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      1237	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x23e9	            0x85c0	                           test eax, eax	      1237	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x23eb	            0x7514	                           jne 0x4002441	      1237	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x23ed	        0x488b45f8	                mov rax, qword [rbp - 8]	      1238	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x23f1	    0x8b9098020000	           mov edx, dword [rax + 0x298] 	      1238	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x23f7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1238	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x23fb	    0x899094020000	            mov dword [rax + 0x294], edx	      1238	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x2401	        0x488b45f8	                mov rax, qword [rbp - 8]	      1240	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_2
0x2405	    0x488b80f80100	           mov rax, qword [rax + 0x1f8] 	      1240	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_2
0x240c	          0x4889c7	                            mov rdi, rax	      1240	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_2
0x240f	      0xe800000000	                          call 0x4002454	      1240	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_2
0x2414	        0x488b45f8	                mov rax, qword [rbp - 8]	      1242	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x2418	    0x488b80000200	           mov rax, qword [rax + 0x200] 	      1242	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x241f	           0xfb600	                   movzx eax, byte [rax]	      1242	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x2422	            0x84c0	                             test al, al	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x2424	            0x740d	                            je 0x4002473	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x2426	        0x488b45f8	                mov rax, qword [rbp - 8]	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x242a	    0x488b80000200	           mov rax, qword [rax + 0x200] 	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x2431	            0xeb05	                           jmp 0x4002478	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x2433	      0xb800000000	                              mov eax, 0	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x2438	          0x4889c7	                            mov rdi, rax	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x243b	      0xe800000000	                          call 0x4002480	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x2440	          0x4889c2	                            mov rdx, rax	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x2443	        0x488b45f8	                mov rax, qword [rbp - 8]	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x2447	    0x488990f80100	            mov qword [rax + 0x1f8], rdx	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x244e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1244	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x2452	    0x488b90c80100	           mov rdx, qword [rax + 0x1c8] 	      1244	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x2459	    0x8b0500000000	            mov eax, dword [0x0400249f] 	      1244	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x245f	            0x4898	                                    cdqe	      1244	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x2461	          0x4839c2	                            cmp rdx, rax	      1244	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x2464	            0x7518	                           jne 0x40024be	      1244	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x2466	        0x488b45f8	                mov rax, qword [rbp - 8]	      1245	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x246a	    0x8b80d0010000	           mov eax, dword [rax + 0x1d0] 	      1245	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x2470	          0x4863d0	                         movsxd rdx, eax	      1245	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x2473	        0x488b45f8	                mov rax, qword [rbp - 8]	      1245	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x2477	    0x488990c80100	            mov qword [rax + 0x1c8], rdx	      1245	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x247e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1246	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x2482	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1246	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x2489	          0x4885c0	                           test rax, rax	      1246	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x248c	            0x7518	                           jne 0x40024e6	      1246	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x248e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1247	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x2492	    0x8b80f0010000	           mov eax, dword [rax + 0x1f0] 	      1247	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x2498	          0x4863d0	                         movsxd rdx, eax	      1247	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x249b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1247	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x249f	    0x488990e80100	            mov qword [rax + 0x1e8], rdx	      1247	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x24a6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1251	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x24aa	    0x8b80d4010000	           mov eax, dword [rax + 0x1d4] 	      1251	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x24b0	            0x85c0	                           test eax, eax	      1251	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x24b2	            0x742b	                            je 0x400251f	      1251	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x24b4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1252	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8	CALL_4
0x24b8	          0x4889c7	                            mov rdi, rax	      1252	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8	CALL_4
0x24bb	      0xe800000000	                          call 0x4002500	      1252	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8	CALL_4
0x24c0	            0x85c0	                           test eax, eax	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x24c2	            0x750c	                           jne 0x4002510	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x24c4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x24c8	    0x8b80d8010000	           mov eax, dword [rax + 0x1d8] 	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x24ce	            0xeb05	                           jmp 0x4002515	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x24d0	      0xb800000000	                              mov eax, 0	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x24d5	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1252	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8	CALL_4
0x24d9	    0x8982d4010000	            mov dword [rdx + 0x1d4], eax	      1252	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8	CALL_4
0x24df	        0x488b45f8	                mov rax, qword [rbp - 8]	      1255	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_5
0x24e3	          0x4889c7	                            mov rdi, rax	      1255	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_5
0x24e6	      0xe800000000	                          call 0x400252b	      1255	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_5
0x24eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1259	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x24ef	    0xc78084000000	               mov dword [rax + 0x84], 0	      1259	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x24f9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1263	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_6
0x24fd	          0x4889c7	                            mov rdi, rax	      1263	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_6
0x2500	      0xe800000000	                          call 0x4002545	      1263	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_6
0x2505	        0x488b45f8	                mov rax, qword [rbp - 8]	      1266	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_7
0x2509	          0x4889c7	                            mov rdi, rax	      1266	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_7
0x250c	      0xe800000000	                          call 0x4002551	      1266	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_7
0x2511	        0x488b45f8	                mov rax, qword [rbp - 8]	      1268	diff.c	FUNCTION_22	FUNCTION_1
0x2515	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      1268	diff.c	FUNCTION_22	FUNCTION_1
0x251b	           0x945f4	               or dword [rbp - 0xc], eax	      1268	diff.c	FUNCTION_22	FUNCTION_1
0x251e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1221	diff.c	FUNCTION_22
0x2522	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1221	diff.c	FUNCTION_22
0x2526	        0x488945f8	                mov qword [rbp - 8], rax	      1221	diff.c	FUNCTION_22
0x252a	      0x48837df800	                  cmp qword [rbp - 8], 0	      1221	diff.c	FUNCTION_22
0x252f	     0xf8511feffff	                           jne 0x4002386	      1221	diff.c	FUNCTION_22
0x2535	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1272	diff.c	FUNCTION_22	IF_1
0x2539	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1272	diff.c	FUNCTION_22	IF_1
0x253c	            0x85c0	                           test eax, eax	      1272	diff.c	FUNCTION_22	IF_1
0x253e	            0x7405	                            je 0x4002585	      1272	diff.c	FUNCTION_22	IF_1
0x2540	      0xe8a9dcffff	                 call sym.diff_buf_clear	      1273	diff.c	FUNCTION_22	CALL_1
0x2545	        0x837df400	                cmp dword [rbp - 0xc], 0	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x2549	            0x7523	                           jne 0x40025ae	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x254b	    0x488b05000000	            mov rax, qword [0x04002592] 	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x2552	      0xbe68000000	                           mov esi, 0x68	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x2557	          0x4889c7	                            mov rdi, rax	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x255a	      0xe800000000	                          call 0x400259f	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x255f	          0x4885c0	                           test rax, rax	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x2562	            0x740a	                            je 0x40025ae	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x2564	      0xbf00000000	                              mov edi, 0	      1277	diff.c	FUNCTION_22	CALL_3
0x2569	      0xe800000000	                          call 0x40025ae	      1277	diff.c	FUNCTION_22	CALL_3
0x256e	              0x90	                                     nop	      1278	diff.c	FUNCTION_22
0x256f	              0xc9	                                   leave	      1278	diff.c	FUNCTION_22
0x2570	              0xc3	                                     ret	      1278	diff.c	FUNCTION_22
diff_buf_add	SWITCH,0:functions,0:WHILE,0:ELSE,0:IF,2:CALL,4:FOR,1:DO,0	41
0x152	              0x55	                                push rbp	       124	diff.c	FUNCTION_3
0x153	          0x4889e5	                            mov rbp, rsp	       124	diff.c	FUNCTION_3
0x156	        0x4883ec20	                           sub rsp, 0x20	       124	diff.c	FUNCTION_3
0x15a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       124	diff.c	FUNCTION_3
0x15e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       127	diff.c	FUNCTION_3	IF_1	CALL_1
0x162	          0x4889c7	                            mov rdi, rax	       127	diff.c	FUNCTION_3	IF_1	CALL_1
0x165	      0xe8f0000000	                   call sym.diff_buf_idx	       127	diff.c	FUNCTION_3	IF_1	CALL_1
0x16a	          0x83f808	                              cmp eax, 8	       127	diff.c	FUNCTION_3	IF_1	CALL_1
0x16d	            0x757c	                           jne 0x400022b	       127	diff.c	FUNCTION_3	IF_1	CALL_1
0x16f	    0xc745fc000000	                  mov dword [rbp - 4], 0	       130	diff.c	FUNCTION_3	FOR_1
0x176	            0xeb54	                           jmp 0x400020c	       130	diff.c	FUNCTION_3	FOR_1
0x178	    0x488b05000000	            mov rax, qword [0x040001bf] 	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x17f	          0x8b55fc	                mov edx, dword [rbp - 4]	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x182	          0x4863d2	                         movsxd rdx, edx	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x185	        0x4883c20c	                            add rdx, 0xc	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x189	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x18d	          0x4885c0	                           test rax, rax	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x190	            0x7536	                           jne 0x4000208	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x192	    0x488b05000000	            mov rax, qword [0x040001d9] 	       133	diff.c	FUNCTION_3	FOR_1	IF_2
0x199	          0x8b55fc	                mov edx, dword [rbp - 4]	       133	diff.c	FUNCTION_3	FOR_1	IF_2
0x19c	          0x4863d2	                         movsxd rdx, edx	       133	diff.c	FUNCTION_3	FOR_1	IF_2
0x19f	        0x488d4a0c	                    lea rcx, [rdx + 0xc]	       133	diff.c	FUNCTION_3	FOR_1	IF_2
0x1a3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       133	diff.c	FUNCTION_3	FOR_1	IF_2
0x1a7	        0x488914c8	            mov qword [rax + rcx*8], rdx	       133	diff.c	FUNCTION_3	FOR_1	IF_2
0x1ab	    0x488b05000000	            mov rax, qword [0x040001f2] 	       134	diff.c	FUNCTION_3	FOR_1	IF_2
0x1b2	    0xc780a0000000	               mov dword [rax + 0xa0], 1	       134	diff.c	FUNCTION_3	FOR_1	IF_2
0x1bc	      0xbf01000000	                              mov edi, 1	       135	diff.c	FUNCTION_3	FOR_1	IF_2	CALL_2
0x1c1	      0xe8e30d0000	                    call sym.diff_redraw	       135	diff.c	FUNCTION_3	FOR_1	IF_2	CALL_2
0x1c6	            0xeb24	                           jmp 0x400022c	       136	diff.c	FUNCTION_3	FOR_1	IF_2
0x1c8	        0x8345fc01	                  add dword [rbp - 4], 1	       130	diff.c	FUNCTION_3	FOR_1
0x1cc	        0x837dfc07	                  cmp dword [rbp - 4], 7	       130	diff.c	FUNCTION_3	FOR_1
0x1d0	            0x7ea6	                           jle 0x40001b8	       130	diff.c	FUNCTION_3	FOR_1
0x1d2	      0xbf00000000	                              mov edi, 0	       139	diff.c	FUNCTION_3	CALL_4
0x1d7	      0xe800000000	                          call 0x400021c	       139	diff.c	FUNCTION_3	CALL_4
0x1dc	      0xbe08000000	                              mov esi, 8	       139	diff.c	FUNCTION_3	CALL_4
0x1e1	          0x4889c7	                            mov rdi, rax	       139	diff.c	FUNCTION_3	CALL_4
0x1e4	      0xe800000000	                          call 0x4000229	       139	diff.c	FUNCTION_3	CALL_4
0x1e9	            0xeb01	                           jmp 0x400022c	       139	diff.c	FUNCTION_3	CALL_4
0x1eb	              0x90	                                     nop	       128	diff.c	FUNCTION_3	IF_1
0x1ec	              0xc9	                                   leave	       140	diff.c	FUNCTION_3
0x1ed	              0xc3	                                     ret	       140	diff.c	FUNCTION_3
diff_buf_clear	SWITCH,0:functions,0:WHILE,0:ELSE,0:IF,1:CALL,1:FOR,1:DO,0	27
0x1ee	              0x55	                                push rbp	       147	diff.c	FUNCTION_4
0x1ef	          0x4889e5	                            mov rbp, rsp	       147	diff.c	FUNCTION_4
0x1f2	        0x4883ec10	                           sub rsp, 0x10	       147	diff.c	FUNCTION_4
0x1f6	    0xc745fc000000	                  mov dword [rbp - 4], 0	       150	diff.c	FUNCTION_4	FOR_1
0x1fd	            0xeb52	                           jmp 0x4000291	       150	diff.c	FUNCTION_4	FOR_1
0x1ff	    0x488b05000000	            mov rax, qword [0x04000246] 	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x206	          0x8b55fc	                mov edx, dword [rbp - 4]	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x209	          0x4863d2	                         movsxd rdx, edx	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x20c	        0x4883c20c	                            add rdx, 0xc	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x210	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x214	          0x4885c0	                           test rax, rax	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x217	            0x7434	                            je 0x400028d	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x219	    0x488b05000000	            mov rax, qword [0x04000260] 	       153	diff.c	FUNCTION_4	FOR_1	IF_1
0x220	          0x8b55fc	                mov edx, dword [rbp - 4]	       153	diff.c	FUNCTION_4	FOR_1	IF_1
0x223	          0x4863d2	                         movsxd rdx, edx	       153	diff.c	FUNCTION_4	FOR_1	IF_1
0x226	        0x4883c20c	                            add rdx, 0xc	       153	diff.c	FUNCTION_4	FOR_1	IF_1
0x22a	    0x48c704d00000	              mov qword [rax + rdx*8], 0	       153	diff.c	FUNCTION_4	FOR_1	IF_1
0x232	    0x488b05000000	            mov rax, qword [0x04000279] 	       154	diff.c	FUNCTION_4	FOR_1	IF_1
0x239	    0xc780a0000000	               mov dword [rax + 0xa0], 1	       154	diff.c	FUNCTION_4	FOR_1	IF_1
0x243	      0xbf01000000	                              mov edi, 1	       155	diff.c	FUNCTION_4	FOR_1	IF_1	CALL_1
0x248	      0xe85c0d0000	                    call sym.diff_redraw	       155	diff.c	FUNCTION_4	FOR_1	IF_1	CALL_1
0x24d	        0x8345fc01	                  add dword [rbp - 4], 1	       150	diff.c	FUNCTION_4	FOR_1
0x251	        0x837dfc07	                  cmp dword [rbp - 4], 7	       150	diff.c	FUNCTION_4	FOR_1
0x255	            0x7ea8	                           jle 0x400023f	       150	diff.c	FUNCTION_4	FOR_1
0x257	              0x90	                                     nop	       157	diff.c	FUNCTION_4
0x258	              0xc9	                                   leave	       157	diff.c	FUNCTION_4
0x259	              0xc3	                                     ret	       157	diff.c	FUNCTION_4
diff_mark_adjust	SWITCH,0:functions,1:WHILE,0:ELSE,0:IF,0:CALL,0:FOR,0:DO,0	36
0x346	              0x55	                                push rbp	       220	diff.c	FUNCTION_8
0x347	          0x4889e5	                            mov rbp, rsp	       220	diff.c	FUNCTION_8
0x34a	        0x4883ec30	                           sub rsp, 0x30	       220	diff.c	FUNCTION_8
0x34e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       220	diff.c	FUNCTION_8
0x352	        0x488975e0	             mov qword [rbp - 0x20], rsi	       220	diff.c	FUNCTION_8
0x356	        0x488955d8	             mov qword [rbp - 0x28], rdx	       220	diff.c	FUNCTION_8
0x35a	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       220	diff.c	FUNCTION_8
0x35e	    0x488b05000000	            mov rax, qword [0x040003a5] 	       225	diff.c	FUNCTION_8
0x365	        0x488945f8	                mov qword [rbp - 8], rax	       225	diff.c	FUNCTION_8
0x369	            0xeb4f	                           jmp 0x40003fa	       225	diff.c	FUNCTION_8
0x36b	    0x488b05000000	            mov rax, qword [0x040003b2] 	       227	diff.c	FUNCTION_8	FUNCTION_1	CALL_1
0x372	        0x488b55f8	                mov rdx, qword [rbp - 8]	       227	diff.c	FUNCTION_8	FUNCTION_1	CALL_1
0x376	          0x4889d6	                            mov rsi, rdx	       227	diff.c	FUNCTION_8	FUNCTION_1	CALL_1
0x379	          0x4889c7	                            mov rdi, rax	       227	diff.c	FUNCTION_8	FUNCTION_1	CALL_1
0x37c	      0xe817ffffff	                call sym.diff_buf_idx_tp	       227	diff.c	FUNCTION_8	FUNCTION_1	CALL_1
0x381	          0x8945f4	              mov dword [rbp - 0xc], eax	       227	diff.c	FUNCTION_8	FUNCTION_1	CALL_1
0x384	        0x837df408	                cmp dword [rbp - 0xc], 8	       228	diff.c	FUNCTION_8	FUNCTION_1	IF_1
0x388	            0x7425	                            je 0x40003ef	       228	diff.c	FUNCTION_8	FUNCTION_1	IF_1
0x38a	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	       229	diff.c	FUNCTION_8	FUNCTION_1	CALL_2
0x38e	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	       229	diff.c	FUNCTION_8	FUNCTION_1	CALL_2
0x392	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       229	diff.c	FUNCTION_8	FUNCTION_1	CALL_2
0x396	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       229	diff.c	FUNCTION_8	FUNCTION_1	CALL_2
0x39a	          0x8b75f4	              mov esi, dword [rbp - 0xc]	       229	diff.c	FUNCTION_8	FUNCTION_1	CALL_2
0x39d	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	diff.c	FUNCTION_8	FUNCTION_1	CALL_2
0x3a1	          0x4d89c1	                              mov r9, r8	       229	diff.c	FUNCTION_8	FUNCTION_1	CALL_2
0x3a4	          0x4989f8	                             mov r8, rdi	       229	diff.c	FUNCTION_8	FUNCTION_1	CALL_2
0x3a7	          0x4889c7	                            mov rdi, rax	       229	diff.c	FUNCTION_8	FUNCTION_1	CALL_2
0x3aa	      0xe815000000	            call sym.diff_mark_adjust_tp	       229	diff.c	FUNCTION_8	FUNCTION_1	CALL_2
0x3af	        0x488b45f8	                mov rax, qword [rbp - 8]	       225	diff.c	FUNCTION_8
0x3b3	          0x488b00	                    mov rax, qword [rax]	       225	diff.c	FUNCTION_8
0x3b6	        0x488945f8	                mov qword [rbp - 8], rax	       225	diff.c	FUNCTION_8
0x3ba	      0x48837df800	                  cmp qword [rbp - 8], 0	       225	diff.c	FUNCTION_8
0x3bf	            0x75aa	                           jne 0x40003ab	       225	diff.c	FUNCTION_8
0x3c1	              0x90	                                     nop	       231	diff.c	FUNCTION_8
0x3c2	              0xc9	                                   leave	       231	diff.c	FUNCTION_8
0x3c3	              0xc3	                                     ret	       231	diff.c	FUNCTION_8
diff_move_to	SWITCH,0:functions,0:WHILE,1:ELSE,0:IF,8:CALL,3:FOR,1:DO,0	105
0x54b9	              0x55	                                push rbp	      2521	diff.c	FUNCTION_41
0x54ba	          0x4889e5	                            mov rbp, rsp	      2521	diff.c	FUNCTION_41
0x54bd	        0x4883ec30	                           sub rsp, 0x30	      2521	diff.c	FUNCTION_41
0x54c1	          0x897ddc	             mov dword [rbp - 0x24], edi	      2521	diff.c	FUNCTION_41
0x54c4	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2521	diff.c	FUNCTION_41
0x54c8	    0x488b05000000	            mov rax, qword [0x0400550f] 	      2523	diff.c	FUNCTION_41
0x54cf	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2523	diff.c	FUNCTION_41
0x54d3	        0x488945f0	             mov qword [rbp - 0x10], rax	      2523	diff.c	FUNCTION_41
0x54d7	    0x488b05000000	            mov rax, qword [0x0400551e] 	      2526	diff.c	FUNCTION_41	CALL_1
0x54de	          0x4889c7	                            mov rdi, rax	      2526	diff.c	FUNCTION_41	CALL_1
0x54e1	      0xe874adffff	                   call sym.diff_buf_idx	      2526	diff.c	FUNCTION_41	CALL_1
0x54e6	          0x8945ec	             mov dword [rbp - 0x14], eax	      2526	diff.c	FUNCTION_41	CALL_1
0x54e9	        0x837dec08	               cmp dword [rbp - 0x14], 8	      2527	diff.c	FUNCTION_41	IF_1
0x54ed	            0x7410	                            je 0x400553f	      2527	diff.c	FUNCTION_41	IF_1
0x54ef	    0x488b05000000	            mov rax, qword [0x04005536] 	      2527	diff.c	FUNCTION_41	IF_1
0x54f6	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2527	diff.c	FUNCTION_41	IF_1
0x54fa	          0x4885c0	                           test rax, rax	      2527	diff.c	FUNCTION_41	IF_1
0x54fd	            0x750a	                           jne 0x4005549	      2527	diff.c	FUNCTION_41	IF_1
0x54ff	      0xb800000000	                              mov eax, 0	      2528	diff.c	FUNCTION_41	IF_1
0x5504	      0xe94e010000	                           jmp 0x4005697	      2528	diff.c	FUNCTION_41	IF_1
0x5509	    0x488b05000000	            mov rax, qword [0x04005550] 	      2530	diff.c	FUNCTION_41	IF_2
0x5510	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2530	diff.c	FUNCTION_41	IF_2
0x5516	            0x85c0	                           test eax, eax	      2530	diff.c	FUNCTION_41	IF_2
0x5518	            0x740a	                            je 0x4005564	      2530	diff.c	FUNCTION_41	IF_2
0x551a	      0xbf00000000	                              mov edi, 0	      2531	diff.c	FUNCTION_41	CALL_2
0x551f	      0xe800000000	                          call 0x4005564	      2531	diff.c	FUNCTION_41	CALL_2
0x5524	    0x488b05000000	            mov rax, qword [0x0400556b] 	      2533	diff.c	FUNCTION_41	IF_3
0x552b	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2533	diff.c	FUNCTION_41	IF_3
0x552f	          0x4885c0	                           test rax, rax	      2533	diff.c	FUNCTION_41	IF_3
0x5532	     0xf85af000000	                           jne 0x4005627	      2533	diff.c	FUNCTION_41	IF_3
0x5538	      0xb800000000	                              mov eax, 0	      2534	diff.c	FUNCTION_41	IF_3
0x553d	      0xe915010000	                           jmp 0x4005697	      2534	diff.c	FUNCTION_41	IF_3
0x5542	        0x837ddcff	cmp dword [rbp - 0x24], 0xffffffffffffffff	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x5546	            0x7520	                           jne 0x40055a8	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x5548	    0x488b05000000	            mov rax, qword [0x0400558f] 	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x554f	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x5553	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x5556	          0x4863d2	                         movsxd rdx, edx	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x5559	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x555e	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x5562	     0xf8d91000000	                           jge 0x4005639	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x5568	    0x488b05000000	            mov rax, qword [0x040055af] 	      2542	diff.c	FUNCTION_41	WHILE_1	FOR_1
0x556f	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2542	diff.c	FUNCTION_41	WHILE_1	FOR_1
0x5573	        0x488945f8	                mov qword [rbp - 8], rax	      2542	diff.c	FUNCTION_41	WHILE_1	FOR_1
0x5577	      0x48837df800	                  cmp qword [rbp - 8], 0	      2544	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_5
0x557c	            0x7502	                           jne 0x40055c0	      2544	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_5
0x557e	            0xeb67	                           jmp 0x4005627	      2545	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_5
0x5580	        0x837ddc01	               cmp dword [rbp - 0x24], 1	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x5584	            0x7515	                           jne 0x40055db	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x5586	        0x488b45f8	                mov rax, qword [rbp - 8]	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x558a	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x558d	          0x4863d2	                         movsxd rdx, edx	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x5590	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x5595	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x5599	            0x7f2a	                            jg 0x4005605	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x559b	        0x837ddcff	cmp dword [rbp - 0x24], 0xffffffffffffffff	      2547	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x559f	            0x7539	                           jne 0x400561a	      2547	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x55a1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x55a5	          0x488b00	                    mov rax, qword [rax]	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x55a8	          0x4885c0	                           test rax, rax	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x55ab	            0x7418	                            je 0x4005605	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x55ad	        0x488b45f8	                mov rax, qword [rbp - 8]	      2549	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x55b1	          0x488b00	                    mov rax, qword [rax]	      2549	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x55b4	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2549	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x55b7	          0x4863d2	                         movsxd rdx, edx	      2549	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x55ba	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2549	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x55bf	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      2549	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x55c3	            0x7c15	                            jl 0x400561a	      2549	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x55c5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2551	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x55c9	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2551	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x55cc	          0x4863d2	                         movsxd rdx, edx	      2551	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x55cf	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2551	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x55d4	        0x488945f0	             mov qword [rbp - 0x10], rax	      2551	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x55d8	            0xeb0d	                           jmp 0x4005627	      2552	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x55da	        0x488b45f8	                mov rax, qword [rbp - 8]	      2542	diff.c	FUNCTION_41	WHILE_1	FOR_1
0x55de	          0x488b00	                    mov rax, qword [rax]	      2542	diff.c	FUNCTION_41	WHILE_1	FOR_1
0x55e1	        0x488945f8	                mov qword [rbp - 8], rax	      2542	diff.c	FUNCTION_41	WHILE_1	FOR_1
0x55e5	            0xeb90	                           jmp 0x40055b7	      2554	diff.c	FUNCTION_41	WHILE_1	FOR_1
0x55e7	      0x48836dd001	               sub qword [rbp - 0x30], 1	      2536	diff.c	FUNCTION_41	WHILE_1
0x55ec	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      2536	diff.c	FUNCTION_41	WHILE_1
0x55f1	     0xf894bffffff	                           jns 0x4005582	      2536	diff.c	FUNCTION_41	WHILE_1
0x55f7	            0xeb01	                           jmp 0x400563a	      2536	diff.c	FUNCTION_41	WHILE_1
0x55f9	              0x90	                                     nop	      2540	diff.c	FUNCTION_41	WHILE_1	IF_4
0x55fa	    0x488b05000000	            mov rax, qword [0x04005641] 	      2558	diff.c	FUNCTION_41	IF_7
0x5601	          0x488b00	                    mov rax, qword [rax]	      2558	diff.c	FUNCTION_41	IF_7
0x5604	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      2558	diff.c	FUNCTION_41	IF_7
0x5608	            0x7d0e	                           jge 0x4005658	      2558	diff.c	FUNCTION_41	IF_7
0x560a	    0x488b05000000	            mov rax, qword [0x04005651] 	      2559	diff.c	FUNCTION_41	IF_7
0x5611	          0x488b00	                    mov rax, qword [rax]	      2559	diff.c	FUNCTION_41	IF_7
0x5614	        0x488945f0	             mov qword [rbp - 0x10], rax	      2559	diff.c	FUNCTION_41	IF_7
0x5618	    0x488b05000000	            mov rax, qword [0x0400565f] 	      2562	diff.c	FUNCTION_41	IF_8
0x561f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2562	diff.c	FUNCTION_41	IF_8
0x5623	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      2562	diff.c	FUNCTION_41	IF_8
0x5627	            0x7507	                           jne 0x4005670	      2562	diff.c	FUNCTION_41	IF_8
0x5629	      0xb800000000	                              mov eax, 0	      2563	diff.c	FUNCTION_41	IF_8
0x562e	            0xeb27	                           jmp 0x4005697	      2563	diff.c	FUNCTION_41	IF_8
0x5630	      0xe800000000	                          call 0x4005675	      2565	diff.c	FUNCTION_41	CALL_3
0x5635	    0x488b05000000	            mov rax, qword [0x0400567c] 	      2566	diff.c	FUNCTION_41
0x563c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      2566	diff.c	FUNCTION_41
0x5640	        0x48895038	             mov qword [rax + 0x38], rdx	      2566	diff.c	FUNCTION_41
0x5644	    0x488b05000000	            mov rax, qword [0x0400568b] 	      2567	diff.c	FUNCTION_41
0x564b	    0xc74040000000	               mov dword [rax + 0x40], 0	      2567	diff.c	FUNCTION_41
0x5652	      0xb801000000	                              mov eax, 1	      2569	diff.c	FUNCTION_41
0x5657	              0xc9	                                   leave	      2570	diff.c	FUNCTION_41
0x5658	              0xc3	                                     ret	      2570	diff.c	FUNCTION_41
diff_check_unchanged	SWITCH,0:functions,0:WHILE,1:ELSE,0:IF,13:CALL,6:FOR,4:DO,0	185
0xc94	              0x55	                                push rbp	       517	diff.c	ELSE_1	FUNCTION_11
0xc95	          0x4889e5	                            mov rbp, rsp	       517	diff.c	ELSE_1	FUNCTION_11
0xc98	        0x4883ec30	                           sub rsp, 0x30	       517	diff.c	ELSE_1	FUNCTION_11
0xc9c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       517	diff.c	ELSE_1	FUNCTION_11
0xca0	        0x488975d0	             mov qword [rbp - 0x30], rsi	       517	diff.c	ELSE_1	FUNCTION_11
0xca4	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       522	diff.c	ELSE_1	FUNCTION_11
0xcab	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0xcb2	            0xeb1b	                           jmp 0x4000d0f	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0xcb4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0xcb8	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0xcbb	          0x4863d2	                         movsxd rdx, edx	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0xcbe	        0x4883c20c	                            add rdx, 0xc	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0xcc2	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0xcc6	          0x4885c0	                           test rax, rax	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0xcc9	            0x750c	                           jne 0x4000d17	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0xccb	        0x8345e401	               add dword [rbp - 0x1c], 1	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0xccf	        0x837de407	               cmp dword [rbp - 0x1c], 7	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0xcd3	            0x7edf	                           jle 0x4000cf4	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0xcd5	            0xeb01	                           jmp 0x4000d18	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0xcd7	              0x90	                                     nop	       528	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0xcd8	        0x837de408	               cmp dword [rbp - 0x1c], 8	       529	diff.c	ELSE_1	FUNCTION_11	IF_2
0xcdc	     0xf8434020000	                            je 0x4000f56	       529	diff.c	ELSE_1	FUNCTION_11	IF_2
0xce2	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0xce6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0xcea	          0x4889d6	                            mov rsi, rdx	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0xced	          0x4889c7	                            mov rdi, rax	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0xcf0	      0xe82d020000	              call sym.diff_check_sanity	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0xcf5	            0x85c0	                           test eax, eax	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0xcf7	     0xf841c020000	                            je 0x4000f59	       532	diff.c	ELSE_1	FUNCTION_11	IF_3	CALL_1
0xcfd	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       536	diff.c	ELSE_1	FUNCTION_11
0xd04	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       537	diff.c	ELSE_1	FUNCTION_11
0xd0b	      0xe9d5010000	                           jmp 0x4000f25	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0xd10	        0x837df4ff	cmp dword [rbp - 0xc], 0xffffffffffffffff	       545	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0xd14	            0x7519	                           jne 0x4000d6f	       545	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0xd16	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0xd1a	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0xd1d	          0x4863d2	                         movsxd rdx, edx	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0xd20	        0x4883c208	                              add rdx, 8	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0xd24	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0xd29	          0x83e801	                              sub eax, 1	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0xd2c	          0x8945ec	             mov dword [rbp - 0x14], eax	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0xd2f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       548	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0xd33	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       548	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0xd36	          0x4863d2	                         movsxd rdx, edx	       548	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0xd39	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       548	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0xd3e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0xd41	            0x4898	                                    cdqe	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0xd43	        0x488d0c02	                    lea rcx, [rdx + rax]	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0xd47	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0xd4b	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0xd4e	          0x4863d2	                         movsxd rdx, edx	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0xd51	        0x4883c20c	                            add rdx, 0xc	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0xd55	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0xd59	      0xba00000000	                              mov edx, 0	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0xd5e	          0x4889ce	                            mov rsi, rcx	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0xd61	          0x4889c7	                            mov rdi, rax	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0xd64	      0xe800000000	                          call 0x4000da9	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0xd69	          0x4889c7	                            mov rdi, rax	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0xd6c	      0xe800000000	                          call 0x4000db1	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0xd71	        0x488945f8	                mov qword [rbp - 8], rax	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0xd75	      0x48837df800	                  cmp qword [rbp - 8], 0	       549	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_5
0xd7a	     0xf849c010000	                            je 0x4000f5c	       549	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_5
0xd80	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0xd83	          0x83c001	                              add eax, 1	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0xd86	          0x8945e8	             mov dword [rbp - 0x18], eax	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0xd89	      0xe9b9000000	                           jmp 0x4000e87	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0xd8e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0xd92	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0xd95	          0x4863d2	                         movsxd rdx, edx	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0xd98	        0x4883c20c	                            add rdx, 0xc	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0xd9c	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0xda0	          0x4885c0	                           test rax, rax	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0xda3	     0xf8499000000	                            je 0x4000e82	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0xda9	        0x837df4ff	cmp dword [rbp - 0xc], 0xffffffffffffffff	       555	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0xdad	            0x7519	                           jne 0x4000e08	       555	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0xdaf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       556	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0xdb3	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       556	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0xdb6	          0x4863d2	                         movsxd rdx, edx	       556	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0xdb9	        0x4883c208	                              add rdx, 8	       556	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0xdbd	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       556	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0xdc2	          0x83e801	                              sub eax, 1	       556	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0xdc5	          0x8945f0	             mov dword [rbp - 0x10], eax	       556	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0xdc8	        0x837df000	               cmp dword [rbp - 0x10], 0	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0xdcc	     0xf8882000000	                            js 0x4000e94	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0xdd2	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0xdd5	          0x4863d0	                         movsxd rdx, eax	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0xdd8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0xddc	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0xddf	          0x4863c9	                         movsxd rcx, ecx	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0xde2	        0x4883c108	                              add rcx, 8	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0xde6	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0xdeb	          0x4839c2	                            cmp rdx, rax	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0xdee	            0x7d64	                           jge 0x4000e94	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0xdf0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       561	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9
0xdf4	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       561	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9
0xdf7	          0x4863d2	                         movsxd rdx, edx	       561	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9
0xdfa	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	       561	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9
0xdff	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0xe02	            0x4898	                                    cdqe	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0xe04	        0x488d0c02	                    lea rcx, [rdx + rax]	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0xe08	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0xe0c	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0xe0f	          0x4863d2	                         movsxd rdx, edx	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0xe12	        0x4883c20c	                            add rdx, 0xc	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0xe16	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0xe1a	      0xba00000000	                              mov edx, 0	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0xe1f	          0x4889ce	                            mov rsi, rcx	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0xe22	          0x4889c7	                            mov rdi, rax	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0xe25	      0xe800000000	                          call 0x4000e6a	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0xe2a	          0x4889c2	                            mov rdx, rax	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0xe2d	        0x488b45f8	                mov rax, qword [rbp - 8]	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0xe31	          0x4889d6	                            mov rsi, rdx	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0xe34	          0x4889c7	                            mov rdi, rax	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0xe37	      0xe82c270000	                       call sym.diff_cmp	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0xe3c	            0x85c0	                           test eax, eax	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0xe3e	            0x7513	                           jne 0x4000e93	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0xe40	            0xeb01	                           jmp 0x4000e83	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0xe42	              0x90	                                     nop	       554	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0xe43	        0x8345e801	               add dword [rbp - 0x18], 1	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0xe47	        0x837de807	               cmp dword [rbp - 0x18], 7	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0xe4b	     0xf8e3dffffff	                           jle 0x4000dce	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0xe51	            0xeb01	                           jmp 0x4000e94	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0xe53	              0x90	                                     nop	       562	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9
0xe54	        0x488b45f8	                mov rax, qword [rbp - 8]	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0xe58	          0x4889c7	                            mov rdi, rax	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0xe5b	      0xe800000000	                          call 0x4000ea0	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0xe60	        0x837de808	               cmp dword [rbp - 0x18], 8	       567	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_10
0xe64	     0xf8599000000	                           jne 0x4000f43	       567	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_10
0xe6a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0xe6d	          0x8945e8	             mov dword [rbp - 0x18], eax	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0xe70	            0xeb6d	                           jmp 0x4000f1f	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0xe72	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0xe76	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0xe79	          0x4863d2	                         movsxd rdx, edx	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0xe7c	        0x4883c20c	                            add rdx, 0xc	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0xe80	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0xe84	          0x4885c0	                           test rax, rax	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0xe87	            0x7452	                            je 0x4000f1b	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0xe89	        0x837df401	                cmp dword [rbp - 0xc], 1	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0xe8d	            0x7522	                           jne 0x4000ef1	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0xe8f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0xe93	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0xe96	          0x4863d2	                         movsxd rdx, edx	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0xe99	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0xe9e	        0x488d4801	                      lea rcx, [rax + 1]	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0xea2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0xea6	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0xea9	          0x4863d2	                         movsxd rdx, edx	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0xeac	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0xeb1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0xeb5	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0xeb8	          0x4863d2	                         movsxd rdx, edx	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0xebb	        0x4883c208	                              add rdx, 8	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0xebf	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0xec4	        0x488d48ff	                      lea rcx, [rax - 1]	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0xec8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0xecc	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0xecf	          0x4863d2	                         movsxd rdx, edx	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0xed2	        0x4883c208	                              add rdx, 8	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0xed6	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0xedb	        0x8345e801	               add dword [rbp - 0x18], 1	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0xedf	        0x837de807	               cmp dword [rbp - 0x18], 7	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0xee3	            0x7e8d	                           jle 0x4000eb2	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0xee5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0xee9	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0xeec	          0x4863d2	                         movsxd rdx, edx	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0xeef	        0x4883c208	                              add rdx, 8	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0xef3	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0xef8	          0x4885c0	                           test rax, rax	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0xefb	     0xf8f0ffeffff	                            jg 0x4000d50	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0xf01	            0xeb01	                           jmp 0x4000f44	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0xf03	              0x90	                                     nop	       568	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_10
0xf04	        0x837df4ff	cmp dword [rbp - 0xc], 0xffffffffffffffff	       579	diff.c	ELSE_1	FUNCTION_11	FOR_2	IF_13
0xf08	            0x7415	                            je 0x4000f5f	       579	diff.c	ELSE_1	FUNCTION_11	FOR_2	IF_13
0xf0a	    0xc745f4ffffff	      mov dword [rbp - 0xc], 0xffffffff 	       581	diff.c	ELSE_1	FUNCTION_11	FOR_2
0xf11	      0xe9f5fdffff	                           jmp 0x4000d4b	       582	diff.c	ELSE_1	FUNCTION_11	FOR_2
0xf16	              0x90	                                     nop	       530	diff.c	ELSE_1	FUNCTION_11	IF_2
0xf17	            0xeb07	                           jmp 0x4000f60	       530	diff.c	ELSE_1	FUNCTION_11	IF_2
0xf19	              0x90	                                     nop	       533	diff.c	ELSE_1	FUNCTION_11	IF_3
0xf1a	            0xeb04	                           jmp 0x4000f60	       533	diff.c	ELSE_1	FUNCTION_11	IF_3
0xf1c	              0x90	                                     nop	       550	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_5
0xf1d	            0xeb01	                           jmp 0x4000f60	       550	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_5
0xf1f	              0x90	                                     nop	       580	diff.c	ELSE_1	FUNCTION_11	FOR_2	IF_13
0xf20	              0xc9	                                   leave	       583	diff.c	ELSE_1	FUNCTION_11
0xf21	              0xc3	                                     ret	       583	diff.c	ELSE_1	FUNCTION_11
diffopt_hiddenoff	SWITCH,0:functions,0:WHILE,0:ELSE,0:IF,0:CALL,0:FOR,0:DO,0	9
0x3ec2	              0x55	                                push rbp	      1950	diff.c	FUNCTION_34
0x3ec3	          0x4889e5	                            mov rbp, rsp	      1950	diff.c	FUNCTION_34
0x3ec6	    0x8b0500000000	            mov eax, dword [0x04003f0c] 	      1951	diff.c	FUNCTION_34
0x3ecc	          0x83e020	                           and eax, 0x20	      1951	diff.c	FUNCTION_34
0x3ecf	            0x85c0	                           test eax, eax	      1951	diff.c	FUNCTION_34
0x3ed1	           0xf95c0	                                setne al	      1951	diff.c	FUNCTION_34
0x3ed4	           0xfb6c0	                           movzx eax, al	      1951	diff.c	FUNCTION_34
0x3ed7	              0x5d	                                 pop rbp	      1952	diff.c	FUNCTION_34
0x3ed8	              0xc3	                                     ret	      1952	diff.c	FUNCTION_34
diff_file	SWITCH,0:functions,0:WHILE,0:ELSE,1:IF,3:CALL,14:FOR,0:DO,0	103
0x15f0	              0x55	                                push rbp	       841	diff.c	FUNCTION_16
0x15f1	          0x4889e5	                            mov rbp, rsp	       841	diff.c	FUNCTION_16
0x15f4	              0x53	                                push rbx	       841	diff.c	FUNCTION_16
0x15f5	        0x4883ec38	                           sub rsp, 0x38	       841	diff.c	FUNCTION_16
0x15f9	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       841	diff.c	FUNCTION_16
0x15fd	        0x488975d0	             mov qword [rbp - 0x30], rsi	       841	diff.c	FUNCTION_16
0x1601	        0x488955c8	             mov qword [rbp - 0x38], rdx	       841	diff.c	FUNCTION_16
0x1605	    0x488b05000000	            mov rax, qword [0x0400164c] 	       846	diff.c	FUNCTION_16	IF_1
0x160c	           0xfb600	                   movzx eax, byte [rax]	       846	diff.c	FUNCTION_16	IF_1
0x160f	            0x84c0	                             test al, al	       846	diff.c	FUNCTION_16	IF_1
0x1611	            0x741c	                            je 0x400166f	       846	diff.c	FUNCTION_16	IF_1
0x1613	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       848	diff.c	FUNCTION_16	CALL_1
0x1617	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       848	diff.c	FUNCTION_16	CALL_1
0x161b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       848	diff.c	FUNCTION_16	CALL_1
0x161f	          0x4889ce	                            mov rsi, rcx	       848	diff.c	FUNCTION_16	CALL_1
0x1622	          0x4889c7	                            mov rdi, rax	       848	diff.c	FUNCTION_16	CALL_1
0x1625	      0xe800000000	                          call 0x400166a	       848	diff.c	FUNCTION_16	CALL_1
0x162a	      0xe940010000	                           jmp 0x40017af	       881	diff.c	FUNCTION_16
0x162f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x1633	          0x4889c7	                            mov rdi, rax	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x1636	      0xe800000000	                          call 0x400167b	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x163b	          0x4889c3	                            mov rbx, rax	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x163e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x1642	          0x4889c7	                            mov rdi, rax	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x1645	      0xe800000000	                          call 0x400168a	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x164a	          0x4801c3	                            add rbx, rax	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x164d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x1651	          0x4889c7	                            mov rdi, rax	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x1654	      0xe800000000	                          call 0x4001699	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x1659	          0x4801c3	                            add rbx, rax	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x165c	    0x488b05000000	            mov rax, qword [0x040016a3] 	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x1663	          0x4889c7	                            mov rdi, rax	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x1666	      0xe800000000	                          call 0x40016ab	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x166b	          0x4801d8	                            add rax, rbx	       853	diff.c	FUNCTION_16	ELSE_1	CALL_5
0x166e	        0x4883c01b	                           add rax, 0x1b	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x1672	        0x488945e0	             mov qword [rbp - 0x20], rax	       852	diff.c	FUNCTION_16	ELSE_1	CALL_3
0x1676	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       854	diff.c	FUNCTION_16	ELSE_1	CALL_6
0x167a	            0x89c7	                            mov edi, eax	       854	diff.c	FUNCTION_16	ELSE_1	CALL_6
0x167c	      0xe800000000	                          call 0x40016c1	       854	diff.c	FUNCTION_16	ELSE_1	CALL_6
0x1681	        0x488945e8	             mov qword [rbp - 0x18], rax	       854	diff.c	FUNCTION_16	ELSE_1	CALL_6
0x1685	      0x48837de800	               cmp qword [rbp - 0x18], 0	       855	diff.c	FUNCTION_16	ELSE_1	IF_2
0x168a	     0xf84df000000	                            je 0x40017af	       855	diff.c	FUNCTION_16	ELSE_1	IF_2
0x1690	      0xbf00000000	                              mov edi, 0	       858	diff.c	FUNCTION_16	ELSE_1	IF_2	IF_3	CALL_7
0x1695	      0xe800000000	                          call 0x40016da	       858	diff.c	FUNCTION_16	ELSE_1	IF_2	IF_3	CALL_7
0x169a	          0x4885c0	                           test rax, rax	       858	diff.c	FUNCTION_16	ELSE_1	IF_2	IF_3	CALL_7
0x169d	            0x740f	                            je 0x40016ee	       858	diff.c	FUNCTION_16	ELSE_1	IF_2	IF_3	CALL_7
0x169f	      0xbe00000000	                              mov esi, 0	       859	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_8
0x16a4	      0xbf00000000	                              mov edi, 0	       859	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_8
0x16a9	      0xe800000000	                          call 0x40016ee	       859	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_8
0x16ae	    0x8b0500000000	            mov eax, dword [0x040016f4] 	       872	diff.c	FUNCTION_16	ELSE_1	IF_2
0x16b4	          0x83e002	                              and eax, 2	       872	diff.c	FUNCTION_16	ELSE_1	IF_2
0x16b7	            0x85c0	                           test eax, eax	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x16b9	            0x7407	                            je 0x4001702	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x16bb	      0xb900000000	                              mov ecx, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x16c0	            0xeb05	                           jmp 0x4001707	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x16c2	      0xb900000000	                              mov ecx, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x16c7	    0x8b0500000000	            mov eax, dword [0x0400170d] 	       871	diff.c	FUNCTION_16	ELSE_1	IF_2
0x16cd	          0x83e004	                              and eax, 4	       871	diff.c	FUNCTION_16	ELSE_1	IF_2
0x16d0	            0x85c0	                           test eax, eax	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x16d2	            0x7407	                            je 0x400171b	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x16d4	      0xbf00000000	                              mov edi, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x16d9	            0xeb05	                           jmp 0x4001720	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x16db	      0xbf00000000	                              mov edi, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x16e0	    0x8b0500000000	            mov eax, dword [0x04001726] 	       865	diff.c	FUNCTION_16	ELSE_1	IF_2
0x16e6	            0x85c0	                           test eax, eax	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x16e8	            0x7507	                           jne 0x4001731	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x16ea	      0xba00000000	                              mov edx, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x16ef	            0xeb05	                           jmp 0x4001736	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x16f1	      0xba00000000	                              mov edx, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x16f6	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x16fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x16fe	        0x4883ec08	                              sub rsp, 8	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x1702	          0xff75d0	                 push qword [rbp - 0x30]	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x1705	          0xff75d8	                 push qword [rbp - 0x28]	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x1708	              0x51	                                push rcx	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x1709	          0x4989f9	                             mov r9, rdi	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x170c	    0x41b800000000	                              mov r8d, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x1712	          0x4889d1	                            mov rcx, rdx	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x1715	      0xba00000000	                              mov edx, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x171a	          0x4889c7	                            mov rdi, rax	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x171d	      0xb800000000	                              mov eax, 0	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x1722	      0xe800000000	                          call 0x4001767	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x1727	        0x4883c420	                           add rsp, 0x20	       864	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_9
0x172b	    0x488b15000000	            mov rdx, qword [0x04001772] 	       874	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_10
0x1732	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       874	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_10
0x1736	            0x89c6	                            mov esi, eax	       874	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_10
0x1738	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       874	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_10
0x173c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       874	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_10
0x1740	          0x4889c7	                            mov rdi, rax	       874	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_10
0x1743	      0xe800000000	                          call 0x4001788	       874	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_10
0x1748	      0xe800000000	                          call 0x400178d	       875	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_11
0x174d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       876	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_12
0x1751	      0xbe19000000	                           mov esi, 0x19	       876	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_12
0x1756	          0x4889c7	                            mov rdi, rax	       876	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_12
0x1759	      0xe800000000	                          call 0x400179e	       876	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_12
0x175e	      0xe800000000	                          call 0x40017a3	       877	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_13
0x1763	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       878	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_14
0x1767	          0x4889c7	                            mov rdi, rax	       878	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_14
0x176a	      0xe800000000	                          call 0x40017af	       878	diff.c	FUNCTION_16	ELSE_1	IF_2	CALL_14
0x176f	              0x90	                                     nop	       881	diff.c	FUNCTION_16
0x1770	        0x488b5df8	                mov rbx, qword [rbp - 8]	       881	diff.c	FUNCTION_16
0x1774	              0xc9	                                   leave	       881	diff.c	FUNCTION_16
0x1775	              0xc3	                                     ret	       881	diff.c	FUNCTION_16
diff_find_change	SWITCH,0:functions,0:WHILE,4:ELSE,2:IF,14:CALL,20:FOR,2:DO,0	408
0x3ed9	              0x55	                                push rbp	      1964	diff.c	FUNCTION_35
0x3eda	          0x4889e5	                            mov rbp, rsp	      1964	diff.c	FUNCTION_35
0x3edd	        0x4883c480	             add rsp, 0xffffffffffffff80	      1964	diff.c	FUNCTION_35
0x3ee1	        0x48897d98	             mov qword [rbp - 0x68], rdi	      1964	diff.c	FUNCTION_35
0x3ee5	        0x48897590	             mov qword [rbp - 0x70], rsi	      1964	diff.c	FUNCTION_35
0x3ee9	        0x48895588	             mov qword [rbp - 0x78], rdx	      1964	diff.c	FUNCTION_35
0x3eed	        0x48894d80	             mov qword [rbp - 0x80], rcx	      1964	diff.c	FUNCTION_35
0x3ef1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1964	diff.c	FUNCTION_35
0x3efa	        0x488945f8	                mov qword [rbp - 8], rax	      1964	diff.c	FUNCTION_35
0x3efe	            0x31c0	                            xor eax, eax	      1964	diff.c	FUNCTION_35
0x3f00	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	      1973	diff.c	FUNCTION_35
0x3f07	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1978	diff.c	FUNCTION_35	CALL_2
0x3f0b	        0x488b4008	                mov rax, qword [rax + 8]	      1978	diff.c	FUNCTION_35	CALL_2
0x3f0f	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      1978	diff.c	FUNCTION_35	CALL_2
0x3f13	      0xba00000000	                              mov edx, 0	      1978	diff.c	FUNCTION_35	CALL_2
0x3f18	          0x4889ce	                            mov rsi, rcx	      1978	diff.c	FUNCTION_35	CALL_2
0x3f1b	          0x4889c7	                            mov rdi, rax	      1978	diff.c	FUNCTION_35	CALL_2
0x3f1e	      0xe800000000	                          call 0x4003f63	      1978	diff.c	FUNCTION_35	CALL_2
0x3f23	          0x4889c7	                            mov rdi, rax	      1978	diff.c	FUNCTION_35	CALL_2
0x3f26	      0xe800000000	                          call 0x4003f6b	      1978	diff.c	FUNCTION_35	CALL_2
0x3f2b	        0x488945d8	             mov qword [rbp - 0x28], rax	      1978	diff.c	FUNCTION_35	CALL_2
0x3f2f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1979	diff.c	FUNCTION_35	IF_1
0x3f34	            0x750a	                           jne 0x4003f80	      1979	diff.c	FUNCTION_35	IF_1
0x3f36	      0xb800000000	                              mov eax, 0	      1980	diff.c	FUNCTION_35	IF_1
0x3f3b	      0xe9fb040000	                           jmp 0x400447b	      1980	diff.c	FUNCTION_35	IF_1
0x3f40	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1982	diff.c	FUNCTION_35	CALL_3
0x3f44	        0x488b4008	                mov rax, qword [rax + 8]	      1982	diff.c	FUNCTION_35	CALL_3
0x3f48	          0x4889c7	                            mov rdi, rax	      1982	diff.c	FUNCTION_35	CALL_3
0x3f4b	      0xe80ac3ffff	                   call sym.diff_buf_idx	      1982	diff.c	FUNCTION_35	CALL_3
0x3f50	          0x8945c8	             mov dword [rbp - 0x38], eax	      1982	diff.c	FUNCTION_35	CALL_3
0x3f53	        0x837dc808	               cmp dword [rbp - 0x38], 8	      1983	diff.c	FUNCTION_35	IF_2
0x3f57	            0x7516	                           jne 0x4003faf	      1983	diff.c	FUNCTION_35	IF_2
0x3f59	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1985	diff.c	FUNCTION_35	IF_2	CALL_4
0x3f5d	          0x4889c7	                            mov rdi, rax	      1985	diff.c	FUNCTION_35	IF_2	CALL_4
0x3f60	      0xe800000000	                          call 0x4003fa5	      1985	diff.c	FUNCTION_35	IF_2	CALL_4
0x3f65	      0xb800000000	                              mov eax, 0	      1986	diff.c	FUNCTION_35	IF_2
0x3f6a	      0xe9cc040000	                           jmp 0x400447b	      1986	diff.c	FUNCTION_35	IF_2
0x3f6f	    0x488b05000000	            mov rax, qword [0x04003fb6] 	      1990	diff.c	FUNCTION_35	FOR_1
0x3f76	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1990	diff.c	FUNCTION_35	FOR_1
0x3f7a	        0x488945d0	             mov qword [rbp - 0x30], rax	      1990	diff.c	FUNCTION_35	FOR_1
0x3f7e	            0xeb36	                           jmp 0x4003ff6	      1990	diff.c	FUNCTION_35	FOR_1
0x3f80	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x3f84	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x3f87	          0x4863d2	                         movsxd rdx, edx	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x3f8a	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x3f8f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x3f93	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x3f96	          0x4863c9	                         movsxd rcx, ecx	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x3f99	        0x4883c108	                              add rcx, 8	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x3f9d	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x3fa2	          0x4801d0	                            add rax, rdx	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x3fa5	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x3fa9	            0x7d14	                           jge 0x4003fff	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x3fab	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1990	diff.c	FUNCTION_35	FOR_1
0x3faf	          0x488b00	                    mov rax, qword [rax]	      1990	diff.c	FUNCTION_35	FOR_1
0x3fb2	        0x488945d0	             mov qword [rbp - 0x30], rax	      1990	diff.c	FUNCTION_35	FOR_1
0x3fb6	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1990	diff.c	FUNCTION_35	FOR_1
0x3fbb	            0x75c3	                           jne 0x4003fc0	      1990	diff.c	FUNCTION_35	FOR_1
0x3fbd	            0xeb01	                           jmp 0x4004000	      1990	diff.c	FUNCTION_35	FOR_1
0x3fbf	              0x90	                                     nop	      1992	diff.c	FUNCTION_35	FOR_1	IF_3
0x3fc0	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1993	diff.c	FUNCTION_35	IF_4	CALL_5
0x3fc5	            0x741a	                            je 0x4004021	      1993	diff.c	FUNCTION_35	IF_4	CALL_5
0x3fc7	    0x488b05000000	            mov rax, qword [0x0400400e] 	      1993	diff.c	FUNCTION_35	IF_4	CALL_5
0x3fce	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1993	diff.c	FUNCTION_35	IF_4	CALL_5
0x3fd2	          0x4889d6	                            mov rsi, rdx	      1993	diff.c	FUNCTION_35	IF_4	CALL_5
0x3fd5	          0x4889c7	                            mov rdi, rax	      1993	diff.c	FUNCTION_35	IF_4	CALL_5
0x3fd8	      0xe845cfffff	              call sym.diff_check_sanity	      1993	diff.c	FUNCTION_35	IF_4	CALL_5
0x3fdd	            0x85c0	                           test eax, eax	      1993	diff.c	FUNCTION_35	IF_4	CALL_5
0x3fdf	            0x7516	                           jne 0x4004037	      1993	diff.c	FUNCTION_35	IF_4	CALL_5
0x3fe1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1995	diff.c	FUNCTION_35	IF_4	CALL_6
0x3fe5	          0x4889c7	                            mov rdi, rax	      1995	diff.c	FUNCTION_35	IF_4	CALL_6
0x3fe8	      0xe800000000	                          call 0x400402d	      1995	diff.c	FUNCTION_35	IF_4	CALL_6
0x3fed	      0xb800000000	                              mov eax, 0	      1996	diff.c	FUNCTION_35	IF_4
0x3ff2	      0xe944040000	                           jmp 0x400447b	      1996	diff.c	FUNCTION_35	IF_4
0x3ff7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1999	diff.c	FUNCTION_35
0x3ffb	            0x89c1	                            mov ecx, eax	      1999	diff.c	FUNCTION_35
0x3ffd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1999	diff.c	FUNCTION_35
0x4001	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      1999	diff.c	FUNCTION_35
0x4004	          0x4863d2	                         movsxd rdx, edx	      1999	diff.c	FUNCTION_35
0x4007	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1999	diff.c	FUNCTION_35
0x400c	            0x29c1	                            sub ecx, eax	      1999	diff.c	FUNCTION_35
0x400e	            0x89c8	                            mov eax, ecx	      1999	diff.c	FUNCTION_35
0x4010	          0x8945cc	             mov dword [rbp - 0x34], eax	      1999	diff.c	FUNCTION_35
0x4013	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      2001	diff.c	FUNCTION_35	FOR_2
0x401a	      0xe903040000	                           jmp 0x4004462	      2001	diff.c	FUNCTION_35	FOR_2
0x401f	    0x488b05000000	            mov rax, qword [0x04004066] 	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4026	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4029	          0x4863d2	                         movsxd rdx, edx	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x402c	        0x4883c20c	                            add rdx, 0xc	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4030	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4034	          0x4885c0	                           test rax, rax	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4037	     0xf84e1030000	                            je 0x400445e	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x403d	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4040	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4043	     0xf84d5030000	                            je 0x400445e	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x4049	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x404c	          0x4863d0	                         movsxd rdx, eax	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x404f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x4053	          0x8b4db0	             mov ecx, dword [rbp - 0x50]	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x4056	          0x4863c9	                         movsxd rcx, ecx	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x4059	        0x4883c108	                              add rcx, 8	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x405d	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x4062	          0x4839c2	                            cmp rdx, rax	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x4065	     0xf8db2030000	                           jge 0x400445d	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x406b	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      2007	diff.c	FUNCTION_35	FOR_2	IF_5
0x4072	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2009	diff.c	FUNCTION_35	FOR_2	IF_5
0x4076	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2009	diff.c	FUNCTION_35	FOR_2	IF_5
0x4079	          0x4863d2	                         movsxd rdx, edx	      2009	diff.c	FUNCTION_35	FOR_2	IF_5
0x407c	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2009	diff.c	FUNCTION_35	FOR_2	IF_5
0x4081	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x4084	            0x4898	                                    cdqe	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x4086	        0x488d0c02	                    lea rcx, [rdx + rax]	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x408a	    0x488b05000000	            mov rax, qword [0x040040d1] 	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x4091	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x4094	          0x4863d2	                         movsxd rdx, edx	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x4097	        0x4883c20c	                            add rdx, 0xc	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x409b	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x409f	      0xba00000000	                              mov edx, 0	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x40a4	          0x4889ce	                            mov rsi, rcx	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x40a7	          0x4889c7	                            mov rdi, rax	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x40aa	      0xe800000000	                          call 0x40040ef	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x40af	        0x488945e0	             mov qword [rbp - 0x20], rax	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x40b3	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      2012	diff.c	FUNCTION_35	FOR_2	IF_5
0x40ba	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2012	diff.c	FUNCTION_35	FOR_2	IF_5
0x40bd	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2012	diff.c	FUNCTION_35	FOR_2	IF_5
0x40c0	      0xe9e8000000	                           jmp 0x40041ed	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x40c5	    0x8b0500000000	            mov eax, dword [0x0400410b] 	      2015	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7
0x40cb	          0x83e004	                              and eax, 4	      2015	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7
0x40ce	            0x85c0	                           test eax, eax	      2015	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7
0x40d0	     0xf849c000000	                            je 0x40041b2	      2015	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7
0x40d6	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x40d9	          0x4863d0	                         movsxd rdx, eax	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x40dc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x40e0	          0x4801d0	                            add rax, rdx	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x40e3	           0xfb600	                   movzx eax, byte [rax]	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x40e6	            0x3c20	                            cmp al, 0x20	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x40e8	            0x7414	                            je 0x400413e	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x40ea	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x40ed	          0x4863d0	                         movsxd rdx, eax	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x40f0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x40f4	          0x4801d0	                            add rax, rdx	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x40f7	           0xfb600	                   movzx eax, byte [rax]	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x40fa	            0x3c09	                               cmp al, 9	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x40fc	            0x7574	                           jne 0x40041b2	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x40fe	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4101	          0x4863d0	                         movsxd rdx, eax	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4104	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4108	          0x4801d0	                            add rax, rdx	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x410b	           0xfb600	                   movzx eax, byte [rax]	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x410e	            0x3c20	                            cmp al, 0x20	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4110	            0x7414	                            je 0x4004166	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4112	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4115	          0x4863d0	                         movsxd rdx, eax	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4118	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x411c	          0x4801d0	                            add rax, rdx	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x411f	           0xfb600	                   movzx eax, byte [rax]	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4122	            0x3c09	                               cmp al, 9	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4124	            0x754c	                           jne 0x40041b2	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4126	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4129	          0x4863d0	                         movsxd rdx, eax	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x412c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4130	          0x4801d0	                            add rax, rdx	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4133	          0x4889c7	                            mov rdi, rax	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4136	      0xe800000000	                          call 0x400417b	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x413b	          0x4889c2	                            mov rdx, rax	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x413e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4142	          0x4829c2	                            sub rdx, rax	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4145	          0x4889d0	                            mov rax, rdx	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4148	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x414b	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x414e	          0x4863d0	                         movsxd rdx, eax	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4151	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4155	          0x4801d0	                            add rax, rdx	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4158	          0x4889c7	                            mov rdi, rax	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x415b	      0xe800000000	                          call 0x40041a0	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4160	          0x4889c2	                            mov rdx, rax	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4163	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4167	          0x4829c2	                            sub rdx, rax	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x416a	          0x4889d0	                            mov rax, rdx	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x416d	          0x8945b8	             mov dword [rbp - 0x48], eax	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4170	            0xeb3b	                           jmp 0x40041ed	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4172	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x4175	          0x4863d0	                         movsxd rdx, eax	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x4178	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x417c	        0x488d3402	                    lea rsi, [rdx + rax]	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x4180	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x4183	          0x4863d0	                         movsxd rdx, eax	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x4186	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x418a	        0x488d0c02	                    lea rcx, [rdx + rax]	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x418e	        0x488d45ac	                   lea rax, [rbp - 0x54]	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x4192	          0x4889c2	                            mov rdx, rax	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x4195	          0x4889cf	                            mov rdi, rcx	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x4198	      0xe8a8f2ffff	                call sym.diff_equal_char	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x419d	            0x85c0	                           test eax, eax	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x419f	            0x7426	                            je 0x4004207	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x41a1	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2027	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1
0x41a4	           0x145b4	             add dword [rbp - 0x4c], eax	      2027	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1
0x41a7	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2028	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1
0x41aa	           0x145b8	             add dword [rbp - 0x48], eax	      2028	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1
0x41ad	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x41b0	          0x4863d0	                         movsxd rdx, eax	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x41b3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x41b7	          0x4801d0	                            add rax, rdx	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x41ba	           0xfb600	                   movzx eax, byte [rax]	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x41bd	            0x84c0	                             test al, al	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x41bf	     0xf8500ffffff	                           jne 0x4004105	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x41c5	            0xeb01	                           jmp 0x4004208	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x41c7	              0x90	                                     nop	      2026	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8
0x41c8	    0x8b0500000000	            mov eax, dword [0x0400420e] 	      2032	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x41ce	            0x85c0	                           test eax, eax	      2032	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x41d0	            0x7446	                            je 0x4004258	      2032	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x41d2	    0x488b05000000	            mov rax, qword [0x04004219] 	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x41d9	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x41dc	          0x4863ca	                         movsxd rcx, edx	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x41df	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x41e3	          0x4801d1	                            add rcx, rdx	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x41e6	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x41ea	          0x4889ce	                            mov rsi, rcx	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x41ed	          0x4889d7	                            mov rdi, rdx	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x41f0	            0xffd0	                                call rax	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x41f2	          0x2945b4	             sub dword [rbp - 0x4c], eax	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x41f5	    0x488b05000000	            mov rax, qword [0x0400423c] 	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x41fc	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x41ff	          0x4863ca	                         movsxd rcx, edx	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4202	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4206	          0x4801d1	                            add rcx, rdx	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4209	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x420d	          0x4889ce	                            mov rsi, rcx	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4210	          0x4889d7	                            mov rdi, rdx	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4213	            0xffd0	                                call rax	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4215	          0x2945b8	             sub dword [rbp - 0x48], eax	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4218	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2040	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x421c	            0x8b00	                    mov eax, dword [rax]	      2040	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x421e	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      2040	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x4221	            0x7e09	                           jle 0x400426c	      2040	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x4223	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2041	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x4227	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      2041	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x422a	            0x8910	                    mov dword [rax], edx	      2041	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x422c	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x422f	          0x4863d0	                         movsxd rdx, eax	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4232	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4236	          0x4801d0	                            add rax, rdx	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4239	           0xfb600	                   movzx eax, byte [rax]	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x423c	            0x84c0	                             test al, al	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x423e	            0x7518	                           jne 0x4004298	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4240	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4243	          0x4863d0	                         movsxd rdx, eax	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4246	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x424a	          0x4801d0	                            add rax, rdx	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x424d	           0xfb600	                   movzx eax, byte [rax]	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4250	            0x84c0	                             test al, al	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4252	     0xf84c6010000	                            je 0x400445e	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x4258	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2046	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_13
0x425c	          0x4889c7	                            mov rdi, rax	      2046	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_13
0x425f	      0xe800000000	                          call 0x40042a4	      2046	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_13
0x4264	          0x8945bc	             mov dword [rbp - 0x44], eax	      2046	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_13
0x4267	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x426b	          0x4889c7	                            mov rdi, rax	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x426e	      0xe800000000	                          call 0x40042b3	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x4273	          0x8945c0	             mov dword [rbp - 0x40], eax	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x4276	      0xe966010000	                           jmp 0x4004421	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x427b	    0x8b0500000000	            mov eax, dword [0x040042c1] 	      2051	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12
0x4281	          0x83e004	                              and eax, 4	      2051	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12
0x4284	            0x85c0	                           test eax, eax	      2051	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12
0x4286	     0xf84cc000000	                            je 0x4004398	      2051	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12
0x428c	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x428f	          0x4863d0	                         movsxd rdx, eax	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x4292	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x4296	          0x4801d0	                            add rax, rdx	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x4299	           0xfb600	                   movzx eax, byte [rax]	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x429c	            0x3c20	                            cmp al, 0x20	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x429e	            0x7418	                            je 0x40042f8	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x42a0	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x42a3	          0x4863d0	                         movsxd rdx, eax	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x42a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x42aa	          0x4801d0	                            add rax, rdx	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x42ad	           0xfb600	                   movzx eax, byte [rax]	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x42b0	            0x3c09	                               cmp al, 9	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x42b2	     0xf85a0000000	                           jne 0x4004398	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x42b8	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x42bb	          0x4863d0	                         movsxd rdx, eax	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x42be	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x42c2	          0x4801d0	                            add rax, rdx	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x42c5	           0xfb600	                   movzx eax, byte [rax]	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x42c8	            0x3c20	                            cmp al, 0x20	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x42ca	            0x741a	                            je 0x4004326	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x42cc	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x42cf	          0x4863d0	                         movsxd rdx, eax	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x42d2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x42d6	          0x4801d0	                            add rax, rdx	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x42d9	           0xfb600	                   movzx eax, byte [rax]	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x42dc	            0x3c09	                               cmp al, 9	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x42de	            0x7578	                           jne 0x4004398	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x42e0	            0xeb04	                           jmp 0x4004326	      2055	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3
0x42e2	        0x836dbc01	               sub dword [rbp - 0x44], 1	      2057	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3
0x42e6	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2055	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3
0x42ea	            0x8b00	                    mov eax, dword [rax]	      2055	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3
0x42ec	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      2055	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3
0x42ef	            0x7f2e	                            jg 0x400435f	      2055	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3
0x42f1	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x42f4	          0x4863d0	                         movsxd rdx, eax	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x42f7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x42fb	          0x4801d0	                            add rax, rdx	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x42fe	           0xfb600	                   movzx eax, byte [rax]	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4301	            0x3c20	                            cmp al, 0x20	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4303	            0x74dd	                            je 0x4004322	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4305	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4308	          0x4863d0	                         movsxd rdx, eax	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x430b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x430f	          0x4801d0	                            add rax, rdx	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4312	           0xfb600	                   movzx eax, byte [rax]	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4315	            0x3c09	                               cmp al, 9	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4317	            0x74c9	                            je 0x4004322	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x4319	            0xeb04	                           jmp 0x400435f	      2058	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4
0x431b	        0x836dc001	               sub dword [rbp - 0x40], 1	      2060	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4
0x431f	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2058	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4
0x4322	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      2058	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4
0x4325	     0xf8cb6000000	                            jl 0x4004421	      2058	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4
0x432b	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x432e	          0x4863d0	                         movsxd rdx, eax	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4331	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4335	          0x4801d0	                            add rax, rdx	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4338	           0xfb600	                   movzx eax, byte [rax]	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x433b	            0x3c20	                            cmp al, 0x20	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x433d	            0x74dc	                            je 0x400435b	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x433f	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4342	          0x4863d0	                         movsxd rdx, eax	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4345	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4349	          0x4801d0	                            add rax, rdx	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x434c	           0xfb600	                   movzx eax, byte [rax]	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x434f	            0x3c09	                               cmp al, 9	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4351	            0x74c8	                            je 0x400435b	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4353	      0xe989000000	                           jmp 0x4004421	      2051	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12
0x4358	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2064	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x435b	          0x4863d0	                         movsxd rdx, eax	      2064	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x435e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2064	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4362	          0x4801d0	                            add rax, rdx	      2064	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4365	        0x488945e8	             mov qword [rbp - 0x18], rax	      2064	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4369	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2065	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x436c	          0x4863d0	                         movsxd rdx, eax	      2065	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x436f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2065	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4373	          0x4801d0	                            add rax, rdx	      2065	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4376	        0x488945f0	             mov qword [rbp - 0x10], rax	      2065	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x437a	    0x488b05000000	            mov rax, qword [0x040043c1] 	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4381	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4385	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4389	          0x4889ce	                            mov rsi, rcx	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x438c	          0x4889d7	                            mov rdi, rdx	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x438f	            0xffd0	                                call rax	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4391	            0x4898	                                    cdqe	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4393	          0x48f7d8	                                 neg rax	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4396	        0x480145e8	            add qword [rbp - 0x18], rax 	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x439a	    0x488b05000000	            mov rax, qword [0x040043e1] 	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x43a1	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x43a5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x43a9	          0x4889ce	                            mov rsi, rcx	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x43ac	          0x4889d7	                            mov rdi, rdx	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x43af	            0xffd0	                                call rax	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x43b1	            0x4898	                                    cdqe	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x43b3	          0x48f7d8	                                 neg rax	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x43b6	        0x480145f0	            add qword [rbp - 0x10], rax 	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x43ba	        0x488d55ac	                   lea rdx, [rbp - 0x54]	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x43be	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x43c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x43c6	          0x4889ce	                            mov rsi, rcx	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x43c9	          0x4889c7	                            mov rdi, rax	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x43cc	      0xe874f0ffff	                call sym.diff_equal_char	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x43d1	            0x85c0	                           test eax, eax	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x43d3	            0x7431	                            je 0x4004446	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x43d5	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2072	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x43d8	          0x2945bc	             sub dword [rbp - 0x44], eax	      2072	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x43db	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2073	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x43de	          0x2945c0	             sub dword [rbp - 0x40], eax	      2073	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x43e1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x43e5	            0x8b00	                    mov eax, dword [rax]	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x43e7	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x43ea	            0x7f1b	                            jg 0x4004447	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x43ec	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x43ef	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x43f2	            0x7c13	                            jl 0x4004447	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x43f4	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x43f8	            0x780d	                            js 0x4004447	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x43fa	        0x837dc000	               cmp dword [rbp - 0x40], 0	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x43fe	     0xf8977feffff	                           jns 0x40042bb	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4404	            0xeb01	                           jmp 0x4004447	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4406	              0x90	                                     nop	      2071	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13
0x4407	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2076	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x440b	            0x8b00	                    mov eax, dword [rax]	      2076	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x440d	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      2076	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x4410	            0x7d0c	                           jge 0x400445e	      2076	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x4412	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2077	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x4416	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      2077	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x4419	            0x8910	                    mov dword [rax], edx	      2077	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x441b	            0xeb01	                           jmp 0x400445e	      2077	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x441d	              0x90	                                     nop	      2006	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x441e	        0x8345b001	               add dword [rbp - 0x50], 1	      2001	diff.c	FUNCTION_35	FOR_2
0x4422	        0x837db007	               cmp dword [rbp - 0x50], 7	      2001	diff.c	FUNCTION_35	FOR_2
0x4426	     0xf8ef3fbffff	                           jle 0x400405f	      2001	diff.c	FUNCTION_35	FOR_2
0x442c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2081	diff.c	FUNCTION_35	CALL_20
0x4430	          0x4889c7	                            mov rdi, rax	      2081	diff.c	FUNCTION_35	CALL_20
0x4433	      0xe800000000	                          call 0x4004478	      2081	diff.c	FUNCTION_35	CALL_20
0x4438	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2082	diff.c	FUNCTION_35
0x443b	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2083	diff.c	FUNCTION_35
0x443f	    0x644833342528	                xor rsi, qword fs:[0x28]	      2083	diff.c	FUNCTION_35
0x4448	            0x7405	                            je 0x400448f	      2083	diff.c	FUNCTION_35
0x444a	      0xe800000000	                          call 0x400448f	      2083	diff.c	FUNCTION_35
0x444f	              0xc9	                                   leave	      2083	diff.c	FUNCTION_35
0x4450	              0xc3	                                     ret	      2083	diff.c	FUNCTION_35
nv_diffgetput	SWITCH,0:functions,0:WHILE,0:ELSE,2:IF,2:CALL,2:FOR,0:DO,0	44
0x45bd	              0x55	                                push rbp	      2140	diff.c	FUNCTION_37
0x45be	          0x4889e5	                            mov rbp, rsp	      2140	diff.c	FUNCTION_37
0x45c1	    0x4881ecf00000	                           sub rsp, 0xf0	      2140	diff.c	FUNCTION_37
0x45c8	    0x89bd1cffffff	             mov dword [rbp - 0xe4], edi	      2140	diff.c	FUNCTION_37
0x45ce	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	      2140	diff.c	FUNCTION_37
0x45d5	    0x64488b042528	                mov rax, qword fs:[0x28]	      2140	diff.c	FUNCTION_37
0x45de	        0x488945f8	                mov qword [rbp - 8], rax	      2140	diff.c	FUNCTION_37
0x45e2	            0x31c0	                            xor eax, eax	      2140	diff.c	FUNCTION_37
0x45e4	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	      2144	diff.c	FUNCTION_37	IF_1
0x45ec	            0x750d	                           jne 0x400463b	      2144	diff.c	FUNCTION_37	IF_1
0x45ee	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	      2145	diff.c	FUNCTION_37	IF_1
0x45f9	            0xeb30	                           jmp 0x400466b	      2145	diff.c	FUNCTION_37	IF_1
0x45fb	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4602	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4606	          0x4889d1	                            mov rcx, rdx	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4609	      0xba00000000	                              mov edx, 0	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x460e	      0xbe1e000000	                           mov esi, 0x1e	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4613	          0x4889c7	                            mov rdi, rax	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4616	      0xb800000000	                              mov eax, 0	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x461b	      0xe800000000	                          call 0x4004660	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4620	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2149	diff.c	FUNCTION_37	ELSE_1
0x4624	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      2149	diff.c	FUNCTION_37	ELSE_1
0x462b	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      2151	diff.c	FUNCTION_37	IF_2
0x4632	            0x740c	                            je 0x4004680	      2151	diff.c	FUNCTION_37	IF_2
0x4634	    0xc78540ffffff	           mov dword [rbp - 0xc0], 0x72 	      2152	diff.c	FUNCTION_37	IF_2
0x463e	            0xeb0a	                           jmp 0x400468a	      2152	diff.c	FUNCTION_37	IF_2
0x4640	    0xc78540ffffff	           mov dword [rbp - 0xc0], 0x6f 	      2154	diff.c	FUNCTION_37	ELSE_2
0x464a	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	      2155	diff.c	FUNCTION_37
0x4654	    0x488b05000000	            mov rax, qword [0x0400469b] 	      2156	diff.c	FUNCTION_37
0x465b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2156	diff.c	FUNCTION_37
0x465f	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2156	diff.c	FUNCTION_37
0x4666	    0x488b05000000	            mov rax, qword [0x040046ad] 	      2157	diff.c	FUNCTION_37
0x466d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2157	diff.c	FUNCTION_37
0x4671	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      2157	diff.c	FUNCTION_37
0x4678	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      2158	diff.c	FUNCTION_37	CALL_2
0x467f	          0x4889c7	                            mov rdi, rax	      2158	diff.c	FUNCTION_37	CALL_2
0x4682	      0xe800000000	                          call 0x40046c7	      2158	diff.c	FUNCTION_37	CALL_2
0x4687	              0x90	                                     nop	      2159	diff.c	FUNCTION_37
0x4688	        0x488b45f8	                mov rax, qword [rbp - 8]	      2159	diff.c	FUNCTION_37
0x468c	    0x644833042528	                xor rax, qword fs:[0x28]	      2159	diff.c	FUNCTION_37
0x4695	            0x7405	                            je 0x40046dc	      2159	diff.c	FUNCTION_37
0x4697	      0xe800000000	                          call 0x40046dc	      2159	diff.c	FUNCTION_37
0x469c	              0xc9	                                   leave	      2159	diff.c	FUNCTION_37
0x469d	              0xc3	                                     ret	      2159	diff.c	FUNCTION_37
diff_redraw	SWITCH,0:functions,0:WHILE,0:ELSE,1:IF,5:CALL,6:FOR,0:DO,0	73
0xfa9	              0x55	                                push rbp	       608	diff.c	FUNCTION_13
0xfaa	          0x4889e5	                            mov rbp, rsp	       608	diff.c	FUNCTION_13
0xfad	        0x4883ec20	                           sub rsp, 0x20	       608	diff.c	FUNCTION_13
0xfb1	          0x897dec	             mov dword [rbp - 0x14], edi	       608	diff.c	FUNCTION_13
0xfb4	    0x488b05000000	            mov rax, qword [0x04000ffb] 	       612	diff.c	FUNCTION_13	CALL_1
0xfbb	        0x488945f8	                mov qword [rbp - 8], rax	       612	diff.c	FUNCTION_13	CALL_1
0xfbf	      0xe9e9000000	                           jmp 0x40010ed	       612	diff.c	FUNCTION_13	CALL_1
0xfc4	        0x488b45f8	                mov rax, qword [rbp - 8]	       613	diff.c	FUNCTION_13	IF_1
0xfc8	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	       613	diff.c	FUNCTION_13	IF_1
0xfce	            0x85c0	                           test eax, eax	       613	diff.c	FUNCTION_13	IF_1
0xfd0	     0xf84cb000000	                            je 0x40010e1	       613	diff.c	FUNCTION_13	IF_1
0xfd6	        0x488b45f8	                mov rax, qword [rbp - 8]	       615	diff.c	FUNCTION_13	IF_1	CALL_2
0xfda	      0xbe23000000	                           mov esi, 0x23	       615	diff.c	FUNCTION_13	IF_1	CALL_2
0xfdf	          0x4889c7	                            mov rdi, rax	       615	diff.c	FUNCTION_13	IF_1	CALL_2
0xfe2	      0xe800000000	                          call 0x4001027	       615	diff.c	FUNCTION_13	IF_1	CALL_2
0xfe7	        0x837dec00	               cmp dword [rbp - 0x14], 0	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0xfeb	            0x741c	                            je 0x4001049	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0xfed	        0x488b45f8	                mov rax, qword [rbp - 8]	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0xff1	          0x4889c7	                            mov rdi, rax	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0xff4	      0xe800000000	                          call 0x4001039	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0xff9	            0x85c0	                           test eax, eax	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0xffb	            0x740c	                            je 0x4001049	       617	diff.c	FUNCTION_13	IF_1	IF_2	CALL_3
0xffd	        0x488b45f8	                mov rax, qword [rbp - 8]	       618	diff.c	FUNCTION_13	IF_1	CALL_4
0x1001	          0x4889c7	                            mov rdi, rax	       618	diff.c	FUNCTION_13	IF_1	CALL_4
0x1004	      0xe800000000	                          call 0x4001049	       618	diff.c	FUNCTION_13	IF_1	CALL_4
0x1009	        0x488b45f8	                mov rax, qword [rbp - 8]	       622	diff.c	FUNCTION_13	IF_1	CALL_5
0x100d	        0x488b5078	            mov rdx, qword [rax + 0x78] 	       622	diff.c	FUNCTION_13	IF_1	CALL_5
0x1011	        0x488b45f8	                mov rax, qword [rbp - 8]	       622	diff.c	FUNCTION_13	IF_1	CALL_5
0x1015	          0x4889d6	                            mov rsi, rdx	       622	diff.c	FUNCTION_13	IF_1	CALL_5
0x1018	          0x4889c7	                            mov rdi, rax	       622	diff.c	FUNCTION_13	IF_1	CALL_5
0x101b	      0xe800000000	                          call 0x4001060	       622	diff.c	FUNCTION_13	IF_1	CALL_5
0x1020	          0x8945f4	              mov dword [rbp - 0xc], eax	       622	diff.c	FUNCTION_13	IF_1	CALL_5
0x1023	    0x488b05000000	            mov rax, qword [0x0400106a] 	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x102a	        0x483945f8	                cmp qword [rbp - 8], rax	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x102e	            0x740e	                            je 0x400107e	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x1030	        0x488b45f8	                mov rax, qword [rbp - 8]	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x1034	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x103a	            0x85c0	                           test eax, eax	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x103c	            0x7f06	                            jg 0x4001084	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x103e	        0x837df400	                cmp dword [rbp - 0xc], 0	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x1042	            0x7e5d	                           jle 0x40010e1	       623	diff.c	FUNCTION_13	IF_1	IF_3
0x1044	        0x488b45f8	                mov rax, qword [rbp - 8]	       625	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x1048	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	       625	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x104e	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       625	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x1051	            0x7e1b	                           jle 0x40010ae	       625	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x1053	      0xb800000000	                              mov eax, 0	       626	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x1058	        0x837df400	                cmp dword [rbp - 0xc], 0	       626	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x105c	         0xf4945f4	           cmovns eax, dword [rbp - 0xc]	       626	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x1060	            0x89c2	                            mov edx, eax	       626	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x1062	        0x488b45f8	                mov rax, qword [rbp - 8]	       626	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x1066	    0x899084000000	             mov dword [rax + 0x84], edx	       626	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x106c	            0xeb22	                           jmp 0x40010d0	       626	diff.c	FUNCTION_13	IF_1	IF_3	IF_4
0x106e	        0x837df400	                cmp dword [rbp - 0xc], 0	       627	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x1072	            0x7e1c	                           jle 0x40010d0	       627	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x1074	        0x488b45f8	                mov rax, qword [rbp - 8]	       627	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x1078	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	       627	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x107e	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       627	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x1081	            0x7d0d	                           jge 0x40010d0	       627	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x1083	        0x488b45f8	                mov rax, qword [rbp - 8]	       628	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x1087	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       628	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x108a	    0x899084000000	             mov dword [rax + 0x84], edx	       628	diff.c	FUNCTION_13	IF_1	IF_3	ELSE_1	IF_5
0x1090	        0x488b45f8	                mov rax, qword [rbp - 8]	       629	diff.c	FUNCTION_13	IF_1	IF_3	CALL_6
0x1094	      0xbe00000000	                              mov esi, 0	       629	diff.c	FUNCTION_13	IF_1	IF_3	CALL_6
0x1099	          0x4889c7	                            mov rdi, rax	       629	diff.c	FUNCTION_13	IF_1	IF_3	CALL_6
0x109c	      0xe800000000	                          call 0x40010e1	       629	diff.c	FUNCTION_13	IF_1	IF_3	CALL_6
0x10a1	        0x488b45f8	                mov rax, qword [rbp - 8]	       612	diff.c	FUNCTION_13	CALL_1
0x10a5	        0x488b4020	            mov rax, qword [rax + 0x20] 	       612	diff.c	FUNCTION_13	CALL_1
0x10a9	        0x488945f8	                mov qword [rbp - 8], rax	       612	diff.c	FUNCTION_13	CALL_1
0x10ad	      0x48837df800	                  cmp qword [rbp - 8], 0	       612	diff.c	FUNCTION_13	CALL_1
0x10b2	     0xf850cffffff	                           jne 0x4001004	       612	diff.c	FUNCTION_13	CALL_1
0x10b8	              0x90	                                     nop	       632	diff.c	FUNCTION_13
0x10b9	              0xc9	                                   leave	       632	diff.c	FUNCTION_13
0x10ba	              0xc3	                                     ret	       632	diff.c	FUNCTION_13
diff_lnum_win	SWITCH,0:functions,0:WHILE,0:ELSE,0:IF,6:CALL,3:FOR,1:DO,0	101
0x590f	              0x55	                                push rbp	      2652	diff.c	FUNCTION_44
0x5910	          0x4889e5	                            mov rbp, rsp	      2652	diff.c	FUNCTION_44
0x5913	        0x4883ec30	                           sub rsp, 0x30	      2652	diff.c	FUNCTION_44
0x5917	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2652	diff.c	FUNCTION_44
0x591b	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2652	diff.c	FUNCTION_44
0x591f	    0x488b05000000	            mov rax, qword [0x04005966] 	      2658	diff.c	FUNCTION_44	CALL_1
0x5926	          0x4889c7	                            mov rdi, rax	      2658	diff.c	FUNCTION_44	CALL_1
0x5929	      0xe82ca9ffff	                   call sym.diff_buf_idx	      2658	diff.c	FUNCTION_44	CALL_1
0x592e	          0x8945e8	             mov dword [rbp - 0x18], eax	      2658	diff.c	FUNCTION_44	CALL_1
0x5931	        0x837de808	               cmp dword [rbp - 0x18], 8	      2659	diff.c	FUNCTION_44	IF_1
0x5935	            0x750a	                           jne 0x4005981	      2659	diff.c	FUNCTION_44	IF_1
0x5937	      0xb800000000	                              mov eax, 0	      2660	diff.c	FUNCTION_44	IF_1
0x593c	      0xe941010000	                           jmp 0x4005ac2	      2660	diff.c	FUNCTION_44	IF_1
0x5941	    0x488b05000000	            mov rax, qword [0x04005988] 	      2662	diff.c	FUNCTION_44	IF_2
0x5948	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2662	diff.c	FUNCTION_44	IF_2
0x594e	            0x85c0	                           test eax, eax	      2662	diff.c	FUNCTION_44	IF_2
0x5950	            0x740a	                            je 0x400599c	      2662	diff.c	FUNCTION_44	IF_2
0x5952	      0xbf00000000	                              mov edi, 0	      2663	diff.c	FUNCTION_44	CALL_2
0x5957	      0xe800000000	                          call 0x400599c	      2663	diff.c	FUNCTION_44	CALL_2
0x595c	    0x488b05000000	            mov rax, qword [0x040059a3] 	      2666	diff.c	FUNCTION_44	FOR_1
0x5963	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2666	diff.c	FUNCTION_44	FOR_1
0x5967	        0x488945f0	             mov qword [rbp - 0x10], rax	      2666	diff.c	FUNCTION_44	FOR_1
0x596b	            0xeb36	                           jmp 0x40059e3	      2666	diff.c	FUNCTION_44	FOR_1
0x596d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x5971	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x5974	          0x4863d2	                         movsxd rdx, edx	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x5977	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x597c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x5980	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x5983	          0x4863c9	                         movsxd rcx, ecx	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x5986	        0x4883c108	                              add rcx, 8	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x598a	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x598f	          0x4801d0	                            add rax, rdx	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x5992	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x5996	            0x7d14	                           jge 0x40059ec	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x5998	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2666	diff.c	FUNCTION_44	FOR_1
0x599c	          0x488b00	                    mov rax, qword [rax]	      2666	diff.c	FUNCTION_44	FOR_1
0x599f	        0x488945f0	             mov qword [rbp - 0x10], rax	      2666	diff.c	FUNCTION_44	FOR_1
0x59a3	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2666	diff.c	FUNCTION_44	FOR_1
0x59a8	            0x75c3	                           jne 0x40059ad	      2666	diff.c	FUNCTION_44	FOR_1
0x59aa	            0xeb01	                           jmp 0x40059ed	      2666	diff.c	FUNCTION_44	FOR_1
0x59ac	              0x90	                                     nop	      2668	diff.c	FUNCTION_44	FOR_1	IF_3
0x59ad	      0x48837df000	               cmp qword [rbp - 0x10], 0	      2671	diff.c	FUNCTION_44	IF_4
0x59b2	            0x7524	                           jne 0x4005a18	      2671	diff.c	FUNCTION_44	IF_4
0x59b4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2672	diff.c	FUNCTION_44	IF_4
0x59b8	        0x488b4008	                mov rax, qword [rax + 8]	      2672	diff.c	FUNCTION_44	IF_4
0x59bc	          0x488b10	                    mov rdx, qword [rax]	      2672	diff.c	FUNCTION_44	IF_4
0x59bf	    0x488b05000000	            mov rax, qword [0x04005a06] 	      2673	diff.c	FUNCTION_44	IF_4
0x59c6	          0x488b00	                    mov rax, qword [rax]	      2673	diff.c	FUNCTION_44	IF_4
0x59c9	        0x482b45d8	             sub rax, qword [rbp - 0x28]	      2673	diff.c	FUNCTION_44	IF_4
0x59cd	          0x4829c2	                            sub rdx, rax	      2672	diff.c	FUNCTION_44	IF_4
0x59d0	          0x4889d0	                            mov rax, rdx	      2672	diff.c	FUNCTION_44	IF_4
0x59d3	      0xe9aa000000	                           jmp 0x4005ac2	      2672	diff.c	FUNCTION_44	IF_4
0x59d8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2676	diff.c	FUNCTION_44	CALL_3
0x59dc	        0x488b4008	                mov rax, qword [rax + 8]	      2676	diff.c	FUNCTION_44	CALL_3
0x59e0	          0x4889c7	                            mov rdi, rax	      2676	diff.c	FUNCTION_44	CALL_3
0x59e3	      0xe872a8ffff	                   call sym.diff_buf_idx	      2676	diff.c	FUNCTION_44	CALL_3
0x59e8	          0x8945ec	             mov dword [rbp - 0x14], eax	      2676	diff.c	FUNCTION_44	CALL_3
0x59eb	        0x837dec08	               cmp dword [rbp - 0x14], 8	      2677	diff.c	FUNCTION_44	IF_5
0x59ef	            0x750a	                           jne 0x4005a3b	      2677	diff.c	FUNCTION_44	IF_5
0x59f1	      0xb800000000	                              mov eax, 0	      2678	diff.c	FUNCTION_44	IF_5
0x59f6	      0xe987000000	                           jmp 0x4005ac2	      2678	diff.c	FUNCTION_44	IF_5
0x59fb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2680	diff.c	FUNCTION_44
0x59ff	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2680	diff.c	FUNCTION_44
0x5a02	          0x4863d2	                         movsxd rdx, edx	      2680	diff.c	FUNCTION_44
0x5a05	      0x488b4cd008	       mov rcx, qword [rax + rdx*8 + 8] 	      2680	diff.c	FUNCTION_44
0x5a0a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2680	diff.c	FUNCTION_44
0x5a0e	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      2680	diff.c	FUNCTION_44
0x5a11	          0x4863d2	                         movsxd rdx, edx	      2680	diff.c	FUNCTION_44
0x5a14	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2680	diff.c	FUNCTION_44
0x5a19	          0x4829c1	                            sub rcx, rax	      2680	diff.c	FUNCTION_44
0x5a1c	          0x4889ca	                            mov rdx, rcx	      2680	diff.c	FUNCTION_44
0x5a1f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2680	diff.c	FUNCTION_44
0x5a23	          0x4801d0	                            add rax, rdx	      2680	diff.c	FUNCTION_44
0x5a26	        0x488945f8	                mov qword [rbp - 8], rax	      2680	diff.c	FUNCTION_44
0x5a2a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2681	diff.c	FUNCTION_44	IF_6
0x5a2e	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2681	diff.c	FUNCTION_44	IF_6
0x5a31	          0x4863d2	                         movsxd rdx, edx	      2681	diff.c	FUNCTION_44	IF_6
0x5a34	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2681	diff.c	FUNCTION_44	IF_6
0x5a39	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2681	diff.c	FUNCTION_44	IF_6
0x5a3d	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      2681	diff.c	FUNCTION_44	IF_6
0x5a40	          0x4863c9	                         movsxd rcx, ecx	      2681	diff.c	FUNCTION_44	IF_6
0x5a43	        0x4883c108	                              add rcx, 8	      2681	diff.c	FUNCTION_44	IF_6
0x5a47	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      2681	diff.c	FUNCTION_44	IF_6
0x5a4c	          0x4801d0	                            add rax, rdx	      2681	diff.c	FUNCTION_44	IF_6
0x5a4f	        0x483b45f8	                cmp rax, qword [rbp - 8]	      2681	diff.c	FUNCTION_44	IF_6
0x5a53	            0x7d29	                           jge 0x4005abe	      2681	diff.c	FUNCTION_44	IF_6
0x5a55	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2682	diff.c	FUNCTION_44	IF_6
0x5a59	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2682	diff.c	FUNCTION_44	IF_6
0x5a5c	          0x4863d2	                         movsxd rdx, edx	      2682	diff.c	FUNCTION_44	IF_6
0x5a5f	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2682	diff.c	FUNCTION_44	IF_6
0x5a64	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2682	diff.c	FUNCTION_44	IF_6
0x5a68	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      2682	diff.c	FUNCTION_44	IF_6
0x5a6b	          0x4863c9	                         movsxd rcx, ecx	      2682	diff.c	FUNCTION_44	IF_6
0x5a6e	        0x4883c108	                              add rcx, 8	      2682	diff.c	FUNCTION_44	IF_6
0x5a72	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      2682	diff.c	FUNCTION_44	IF_6
0x5a77	          0x4801d0	                            add rax, rdx	      2682	diff.c	FUNCTION_44	IF_6
0x5a7a	        0x488945f8	                mov qword [rbp - 8], rax	      2682	diff.c	FUNCTION_44	IF_6
0x5a7e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2683	diff.c	FUNCTION_44
0x5a82	              0xc9	                                   leave	      2684	diff.c	FUNCTION_44
0x5a83	              0xc3	                                     ret	      2684	diff.c	FUNCTION_44
diff_buf_idx_tp	SWITCH,0:functions,0:WHILE,0:ELSE,0:IF,1:CALL,0:FOR,1:DO,0	21
0x298	              0x55	                                push rbp	       180	diff.c	FUNCTION_6
0x299	          0x4889e5	                            mov rbp, rsp	       180	diff.c	FUNCTION_6
0x29c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       180	diff.c	FUNCTION_6
0x2a0	        0x488975e0	             mov qword [rbp - 0x20], rsi	       180	diff.c	FUNCTION_6
0x2a4	    0xc745fc000000	                  mov dword [rbp - 4], 0	       183	diff.c	FUNCTION_6	FOR_1
0x2ab	            0xeb1c	                           jmp 0x4000309	       183	diff.c	FUNCTION_6	FOR_1
0x2ad	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x2b1	          0x8b55fc	                mov edx, dword [rbp - 4]	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x2b4	          0x4863d2	                         movsxd rdx, edx	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x2b7	        0x4883c20c	                            add rdx, 0xc	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x2bb	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x2bf	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x2c3	            0x740c	                            je 0x4000311	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x2c5	        0x8345fc01	                  add dword [rbp - 4], 1	       183	diff.c	FUNCTION_6	FOR_1
0x2c9	        0x837dfc07	                  cmp dword [rbp - 4], 7	       183	diff.c	FUNCTION_6	FOR_1
0x2cd	            0x7ede	                           jle 0x40002ed	       183	diff.c	FUNCTION_6	FOR_1
0x2cf	            0xeb01	                           jmp 0x4000312	       183	diff.c	FUNCTION_6	FOR_1
0x2d1	              0x90	                                     nop	       185	diff.c	FUNCTION_6	FOR_1	IF_1
0x2d2	          0x8b45fc	                mov eax, dword [rbp - 4]	       186	diff.c	FUNCTION_6
0x2d5	              0x5d	                                 pop rbp	       187	diff.c	FUNCTION_6
0x2d6	              0xc3	                                     ret	       187	diff.c	FUNCTION_6
diff_mode_buf	SWITCH,0:functions,0:WHILE,0:ELSE,0:IF,1:CALL,2:FOR,0:DO,0	24
0x5468	              0x55	                                push rbp	      2506	diff.c	FUNCTION_40
0x5469	          0x4889e5	                            mov rbp, rsp	      2506	diff.c	FUNCTION_40
0x546c	        0x4883ec18	                           sub rsp, 0x18	      2506	diff.c	FUNCTION_40
0x5470	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2506	diff.c	FUNCTION_40
0x5474	    0x488b05000000	            mov rax, qword [0x040054bb] 	      2509	diff.c	FUNCTION_40	CALL_1
0x547b	        0x488945f8	                mov qword [rbp - 8], rax	      2509	diff.c	FUNCTION_40	CALL_1
0x547f	            0xeb2a	                           jmp 0x40054eb	      2509	diff.c	FUNCTION_40	CALL_1
0x5481	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2510	diff.c	FUNCTION_40	IF_1	CALL_2
0x5485	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2510	diff.c	FUNCTION_40	IF_1	CALL_2
0x5489	          0x4889d6	                            mov rsi, rdx	      2510	diff.c	FUNCTION_40	IF_1	CALL_2
0x548c	          0x4889c7	                            mov rdi, rax	      2510	diff.c	FUNCTION_40	IF_1	CALL_2
0x548f	      0xe804aeffff	                call sym.diff_buf_idx_tp	      2510	diff.c	FUNCTION_40	IF_1	CALL_2
0x5494	          0x83f808	                              cmp eax, 8	      2510	diff.c	FUNCTION_40	IF_1	CALL_2
0x5497	            0x7407	                            je 0x40054e0	      2510	diff.c	FUNCTION_40	IF_1	CALL_2
0x5499	      0xb801000000	                              mov eax, 1	      2511	diff.c	FUNCTION_40	IF_1
0x549e	            0xeb17	                           jmp 0x40054f7	      2511	diff.c	FUNCTION_40	IF_1
0x54a0	        0x488b45f8	                mov rax, qword [rbp - 8]	      2509	diff.c	FUNCTION_40	CALL_1
0x54a4	          0x488b00	                    mov rax, qword [rax]	      2509	diff.c	FUNCTION_40	CALL_1
0x54a7	        0x488945f8	                mov qword [rbp - 8], rax	      2509	diff.c	FUNCTION_40	CALL_1
0x54ab	      0x48837df800	                  cmp qword [rbp - 8], 0	      2509	diff.c	FUNCTION_40	CALL_1
0x54b0	            0x75cf	                           jne 0x40054c1	      2509	diff.c	FUNCTION_40	CALL_1
0x54b2	      0xb800000000	                              mov eax, 0	      2512	diff.c	FUNCTION_40
0x54b7	              0xc9	                                   leave	      2513	diff.c	FUNCTION_40
0x54b8	              0xc3	                                     ret	      2513	diff.c	FUNCTION_40
ex_diffthis	SWITCH,0:functions,0:WHILE,0:ELSE,0:IF,0:CALL,1:FOR,0:DO,0	11
0x1ffc	              0x55	                                push rbp	      1127	diff.c	FUNCTION_19
0x1ffd	          0x4889e5	                            mov rbp, rsp	      1127	diff.c	FUNCTION_19
0x2000	        0x4883ec10	                           sub rsp, 0x10	      1127	diff.c	FUNCTION_19
0x2004	        0x48897df8	                mov qword [rbp - 8], rdi	      1127	diff.c	FUNCTION_19
0x2008	    0x488b05000000	            mov rax, qword [0x0400204f] 	      1129	diff.c	FUNCTION_19	CALL_1
0x200f	      0xbe01000000	                              mov esi, 1	      1129	diff.c	FUNCTION_19	CALL_1
0x2014	          0x4889c7	                            mov rdi, rax	      1129	diff.c	FUNCTION_19	CALL_1
0x2017	      0xe800000000	                          call 0x400205c	      1129	diff.c	FUNCTION_19	CALL_1
0x201c	              0x90	                                     nop	      1130	diff.c	FUNCTION_19
0x201d	              0xc9	                                   leave	      1130	diff.c	FUNCTION_19
0x201e	              0xc3	                                     ret	      1130	diff.c	FUNCTION_19
diff_get_corresponding_line	SWITCH,0:functions,0:WHILE,0:ELSE,0:IF,1:CALL,1:FOR,0:DO,0	21
0x58c6	              0x55	                                push rbp	      2637	diff.c	FUNCTION_43
0x58c7	          0x4889e5	                            mov rbp, rsp	      2637	diff.c	FUNCTION_43
0x58ca	        0x4883ec20	                           sub rsp, 0x20	      2637	diff.c	FUNCTION_43
0x58ce	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2637	diff.c	FUNCTION_43
0x58d2	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2637	diff.c	FUNCTION_43
0x58d6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2638	diff.c	FUNCTION_43	CALL_1
0x58da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2638	diff.c	FUNCTION_43	CALL_1
0x58de	          0x4889d6	                            mov rsi, rdx	      2638	diff.c	FUNCTION_43	CALL_1
0x58e1	          0x4889c7	                            mov rdi, rax	      2638	diff.c	FUNCTION_43	CALL_1
0x58e4	      0xe870fdffff	call sym.diff_get_corresponding_line_int	      2638	diff.c	FUNCTION_43	CALL_1
0x58e9	        0x488945f8	                mov qword [rbp - 8], rax	      2638	diff.c	FUNCTION_43	CALL_1
0x58ed	    0x488b05000000	            mov rax, qword [0x04005934] 	      2641	diff.c	FUNCTION_43	IF_1
0x58f4	          0x488b00	                    mov rax, qword [rax]	      2641	diff.c	FUNCTION_43	IF_1
0x58f7	        0x483b45f8	                cmp rax, qword [rbp - 8]	      2641	diff.c	FUNCTION_43	IF_1
0x58fb	            0x7d0c	                           jge 0x4005949	      2641	diff.c	FUNCTION_43	IF_1
0x58fd	    0x488b05000000	            mov rax, qword [0x04005944] 	      2642	diff.c	FUNCTION_43	IF_1
0x5904	          0x488b00	                    mov rax, qword [rax]	      2642	diff.c	FUNCTION_43	IF_1
0x5907	            0xeb04	                           jmp 0x400594d	      2642	diff.c	FUNCTION_43	IF_1
0x5909	        0x488b45f8	                mov rax, qword [rbp - 8]	      2643	diff.c	FUNCTION_43
0x590d	              0xc9	                                   leave	      2644	diff.c	FUNCTION_43
0x590e	              0xc3	                                     ret	      2644	diff.c	FUNCTION_43
diff_buf_adjust	SWITCH,0:functions,0:WHILE,0:ELSE,1:IF,4:CALL,4:FOR,0:DO,0	54
0x85	              0x55	                                push rbp	        88	diff.c	FUNCTION_2
0x86	          0x4889e5	                            mov rbp, rsp	        88	diff.c	FUNCTION_2
0x89	        0x4883ec20	                           sub rsp, 0x20	        88	diff.c	FUNCTION_2
0x8d	        0x48897de8	             mov qword [rbp - 0x18], rdi	        88	diff.c	FUNCTION_2
0x91	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        92	diff.c	FUNCTION_2	IF_1
0x95	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	        92	diff.c	FUNCTION_2	IF_1
0x9b	            0x85c0	                           test eax, eax	        92	diff.c	FUNCTION_2	IF_1
0x9d	     0xf859c000000	                           jne 0x400017f	        92	diff.c	FUNCTION_2	IF_1
0xa3	    0x488b05000000	            mov rax, qword [0x040000ea] 	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0xaa	        0x488945f8	                mov qword [rbp - 8], rax	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0xae	            0xeb2f	                           jmp 0x400011f	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0xb0	        0x488b45f8	                mov rax, qword [rbp - 8]	        97	diff.c	FUNCTION_2	IF_1	IF_2
0xb4	        0x488b5008	                mov rdx, qword [rax + 8]	        97	diff.c	FUNCTION_2	IF_1	IF_2
0xb8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        97	diff.c	FUNCTION_2	IF_1	IF_2
0xbc	        0x488b4008	                mov rax, qword [rax + 8]	        97	diff.c	FUNCTION_2	IF_1	IF_2
0xc0	          0x4839c2	                            cmp rdx, rax	        97	diff.c	FUNCTION_2	IF_1	IF_2
0xc3	            0x750e	                           jne 0x4000113	        97	diff.c	FUNCTION_2	IF_1	IF_2
0xc5	        0x488b45f8	                mov rax, qword [rbp - 8]	        97	diff.c	FUNCTION_2	IF_1	IF_2
0xc9	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	        97	diff.c	FUNCTION_2	IF_1	IF_2
0xcf	            0x85c0	                           test eax, eax	        97	diff.c	FUNCTION_2	IF_1	IF_2
0xd1	            0x7515	                           jne 0x4000128	        97	diff.c	FUNCTION_2	IF_1	IF_2
0xd3	        0x488b45f8	                mov rax, qword [rbp - 8]	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0xd7	        0x488b4020	            mov rax, qword [rax + 0x20] 	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0xdb	        0x488945f8	                mov qword [rbp - 8], rax	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0xdf	      0x48837df800	                  cmp qword [rbp - 8], 0	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0xe4	            0x75ca	                           jne 0x40000f0	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0xe6	            0xeb01	                           jmp 0x4000129	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0xe8	              0x90	                                     nop	        98	diff.c	FUNCTION_2	IF_1	IF_2
0xe9	      0x48837df800	                  cmp qword [rbp - 8], 0	        99	diff.c	FUNCTION_2	IF_1	IF_3
0xee	            0x755f	                           jne 0x400018f	        99	diff.c	FUNCTION_2	IF_1	IF_3
0xf0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       101	diff.c	FUNCTION_2	IF_1	IF_3	CALL_2
0xf4	        0x488b4008	                mov rax, qword [rax + 8]	       101	diff.c	FUNCTION_2	IF_1	IF_3	CALL_2
0xf8	          0x4889c7	                            mov rdi, rax	       101	diff.c	FUNCTION_2	IF_1	IF_3	CALL_2
0xfb	      0xe85a010000	                   call sym.diff_buf_idx	       101	diff.c	FUNCTION_2	IF_1	IF_3	CALL_2
0x100	          0x8945f4	              mov dword [rbp - 0xc], eax	       101	diff.c	FUNCTION_2	IF_1	IF_3	CALL_2
0x103	        0x837df408	                cmp dword [rbp - 0xc], 8	       102	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x107	            0x7446	                            je 0x400018f	       102	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x109	    0x488b05000000	            mov rax, qword [0x04000150] 	       104	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x110	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       104	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x113	          0x4863d2	                         movsxd rdx, edx	       104	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x116	        0x4883c20c	                            add rdx, 0xc	       104	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x11a	    0x48c704d00000	              mov qword [rax + rdx*8], 0	       104	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x122	    0x488b05000000	            mov rax, qword [0x04000169] 	       105	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x129	    0xc780a0000000	               mov dword [rax + 0xa0], 1	       105	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x133	      0xbf01000000	                              mov edi, 1	       106	diff.c	FUNCTION_2	IF_1	IF_3	IF_4	CALL_3
0x138	      0xe86c0e0000	                    call sym.diff_redraw	       106	diff.c	FUNCTION_2	IF_1	IF_3	IF_4	CALL_3
0x13d	            0xeb10	                           jmp 0x400018f	       112	diff.c	FUNCTION_2
0x13f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       111	diff.c	FUNCTION_2	CALL_4
0x143	        0x488b4008	                mov rax, qword [rax + 8]	       111	diff.c	FUNCTION_2	CALL_4
0x147	          0x4889c7	                            mov rdi, rax	       111	diff.c	FUNCTION_2	CALL_4
0x14a	      0xe800000000	                          call 0x400018f	       111	diff.c	FUNCTION_2	CALL_4
0x14f	              0x90	                                     nop	       112	diff.c	FUNCTION_2
0x150	              0xc9	                                   leave	       112	diff.c	FUNCTION_2
0x151	              0xc3	                                     ret	       112	diff.c	FUNCTION_2
diff_copy_entry	SWITCH,0:functions,0:WHILE,0:ELSE,1:IF,1:CALL,0:FOR,0:DO,0	56
0x2e7d	              0x55	                                push rbp	      1483	diff.c	FUNCTION_24
0x2e7e	          0x4889e5	                            mov rbp, rsp	      1483	diff.c	FUNCTION_24
0x2e81	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1483	diff.c	FUNCTION_24
0x2e85	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1483	diff.c	FUNCTION_24
0x2e89	          0x8955dc	             mov dword [rbp - 0x24], edx	      1483	diff.c	FUNCTION_24
0x2e8c	          0x894dd8	             mov dword [rbp - 0x28], ecx	      1483	diff.c	FUNCTION_24
0x2e8f	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1486	diff.c	FUNCTION_24	IF_1
0x2e94	            0x750a	                           jne 0x4002ee0	      1486	diff.c	FUNCTION_24	IF_1
0x2e96	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1487	diff.c	FUNCTION_24	IF_1
0x2e9e	            0xeb55	                           jmp 0x4002f35	      1487	diff.c	FUNCTION_24	IF_1
0x2ea0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1489	diff.c	FUNCTION_24	ELSE_1
0x2ea4	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1489	diff.c	FUNCTION_24	ELSE_1
0x2ea7	          0x4863d2	                         movsxd rdx, edx	      1489	diff.c	FUNCTION_24	ELSE_1
0x2eaa	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1489	diff.c	FUNCTION_24	ELSE_1
0x2eaf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1489	diff.c	FUNCTION_24	ELSE_1
0x2eb3	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	      1489	diff.c	FUNCTION_24	ELSE_1
0x2eb6	          0x4863c9	                         movsxd rcx, ecx	      1489	diff.c	FUNCTION_24	ELSE_1
0x2eb9	        0x4883c108	                              add rcx, 8	      1489	diff.c	FUNCTION_24	ELSE_1
0x2ebd	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1489	diff.c	FUNCTION_24	ELSE_1
0x2ec2	        0x488d3402	                    lea rsi, [rdx + rax]	      1489	diff.c	FUNCTION_24	ELSE_1
0x2ec6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1490	diff.c	FUNCTION_24	ELSE_1
0x2eca	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1490	diff.c	FUNCTION_24	ELSE_1
0x2ecd	          0x4863d2	                         movsxd rdx, edx	      1490	diff.c	FUNCTION_24	ELSE_1
0x2ed0	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1490	diff.c	FUNCTION_24	ELSE_1
0x2ed5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1490	diff.c	FUNCTION_24	ELSE_1
0x2ed9	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      1490	diff.c	FUNCTION_24	ELSE_1
0x2edc	          0x4863c9	                         movsxd rcx, ecx	      1490	diff.c	FUNCTION_24	ELSE_1
0x2edf	        0x4883c108	                              add rcx, 8	      1490	diff.c	FUNCTION_24	ELSE_1
0x2ee3	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1490	diff.c	FUNCTION_24	ELSE_1
0x2ee8	          0x4801d0	                            add rax, rdx	      1490	diff.c	FUNCTION_24	ELSE_1
0x2eeb	          0x4829c6	                            sub rsi, rax	      1489	diff.c	FUNCTION_24	ELSE_1
0x2eee	          0x4889f0	                            mov rax, rsi	      1489	diff.c	FUNCTION_24	ELSE_1
0x2ef1	        0x488945f8	                mov qword [rbp - 8], rax	      1489	diff.c	FUNCTION_24	ELSE_1
0x2ef5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1491	diff.c	FUNCTION_24
0x2ef9	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1491	diff.c	FUNCTION_24
0x2efc	          0x4863d2	                         movsxd rdx, edx	      1491	diff.c	FUNCTION_24
0x2eff	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1491	diff.c	FUNCTION_24
0x2f04	        0x482b45f8	                sub rax, qword [rbp - 8]	      1491	diff.c	FUNCTION_24
0x2f08	          0x4889c1	                            mov rcx, rax	      1491	diff.c	FUNCTION_24
0x2f0b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1491	diff.c	FUNCTION_24
0x2f0f	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1491	diff.c	FUNCTION_24
0x2f12	          0x4863d2	                         movsxd rdx, edx	      1491	diff.c	FUNCTION_24
0x2f15	      0x48894cd008	        mov qword [rax + rdx*8 + 8], rcx	      1491	diff.c	FUNCTION_24
0x2f1a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1492	diff.c	FUNCTION_24
0x2f1e	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1492	diff.c	FUNCTION_24
0x2f21	          0x4863d2	                         movsxd rdx, edx	      1492	diff.c	FUNCTION_24
0x2f24	        0x4883c208	                              add rdx, 8	      1492	diff.c	FUNCTION_24
0x2f28	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1492	diff.c	FUNCTION_24
0x2f2d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1492	diff.c	FUNCTION_24
0x2f31	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      1492	diff.c	FUNCTION_24
0x2f34	          0x4863c9	                         movsxd rcx, ecx	      1492	diff.c	FUNCTION_24
0x2f37	        0x4883c108	                              add rcx, 8	      1492	diff.c	FUNCTION_24
0x2f3b	      0x488954c808	        mov qword [rax + rcx*8 + 8], rdx	      1492	diff.c	FUNCTION_24
0x2f40	              0x90	                                     nop	      1493	diff.c	FUNCTION_24
0x2f41	              0x5d	                                 pop rbp	      1493	diff.c	FUNCTION_24
0x2f42	              0xc3	                                     ret	      1493	diff.c	FUNCTION_24
diff_check_fill	SWITCH,0:functions,0:WHILE,0:ELSE,0:IF,2:CALL,1:FOR,0:DO,0	24
0x36e5	              0x55	                                push rbp	      1720	diff.c	FUNCTION_30
0x36e6	          0x4889e5	                            mov rbp, rsp	      1720	diff.c	FUNCTION_30
0x36e9	        0x4883ec20	                           sub rsp, 0x20	      1720	diff.c	FUNCTION_30
0x36ed	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1720	diff.c	FUNCTION_30
0x36f1	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1720	diff.c	FUNCTION_30
0x36f5	    0x8b0500000000	            mov eax, dword [0x0400373b] 	      1724	diff.c	FUNCTION_30	IF_1
0x36fb	          0x83e001	                              and eax, 1	      1724	diff.c	FUNCTION_30	IF_1
0x36fe	            0x85c0	                           test eax, eax	      1724	diff.c	FUNCTION_30	IF_1
0x3700	            0x7507	                           jne 0x4003749	      1724	diff.c	FUNCTION_30	IF_1
0x3702	      0xb800000000	                              mov eax, 0	      1725	diff.c	FUNCTION_30	IF_1
0x3707	            0xeb26	                           jmp 0x400376f	      1725	diff.c	FUNCTION_30	IF_1
0x3709	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1726	diff.c	FUNCTION_30	CALL_1
0x370d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1726	diff.c	FUNCTION_30	CALL_1
0x3711	          0x4889d6	                            mov rsi, rdx	      1726	diff.c	FUNCTION_30	CALL_1
0x3714	          0x4889c7	                            mov rdi, rax	      1726	diff.c	FUNCTION_30	CALL_1
0x3717	      0xe800000000	                          call 0x400375c	      1726	diff.c	FUNCTION_30	CALL_1
0x371c	          0x8945fc	                mov dword [rbp - 4], eax	      1726	diff.c	FUNCTION_30	CALL_1
0x371f	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1727	diff.c	FUNCTION_30	IF_2
0x3723	            0x7f07	                            jg 0x400376c	      1727	diff.c	FUNCTION_30	IF_2
0x3725	      0xb800000000	                              mov eax, 0	      1728	diff.c	FUNCTION_30	IF_2
0x372a	            0xeb03	                           jmp 0x400376f	      1728	diff.c	FUNCTION_30	IF_2
0x372c	          0x8b45fc	                mov eax, dword [rbp - 4]	      1729	diff.c	FUNCTION_30
0x372f	              0xc9	                                   leave	      1730	diff.c	FUNCTION_30
0x3730	              0xc3	                                     ret	      1730	diff.c	FUNCTION_30
ex_diffupdate	SWITCH,0:functions,0:WHILE,0:ELSE,3:IF,24:CALL,35:FOR,6:DO,0	299
0x1152	              0x55	                                push rbp	       663	diff.c	FUNCTION_15
0x1153	          0x4889e5	                            mov rbp, rsp	       663	diff.c	FUNCTION_15
0x1156	    0x4881ec900000	                           sub rsp, 0x90	       663	diff.c	FUNCTION_15
0x115d	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       663	diff.c	FUNCTION_15
0x1164	    0x64488b042528	                mov rax, qword fs:[0x28]	       663	diff.c	FUNCTION_15
0x116d	        0x488945f8	                mov qword [rbp - 8], rax	       663	diff.c	FUNCTION_15
0x1171	            0x31c0	                            xor eax, eax	       663	diff.c	FUNCTION_15
0x1173	    0xc74594000000	               mov dword [rbp - 0x6c], 0	       672	diff.c	FUNCTION_15
0x117a	    0x488b05000000	            mov rax, qword [0x040011c1] 	       675	diff.c	FUNCTION_15	CALL_1
0x1181	          0x4889c7	                            mov rdi, rax	       675	diff.c	FUNCTION_15	CALL_1
0x1184	      0xe800000000	                          call 0x40011c9	       675	diff.c	FUNCTION_15	CALL_1
0x1189	    0x488b05000000	            mov rax, qword [0x040011d0] 	       676	diff.c	FUNCTION_15
0x1190	    0xc780a0000000	               mov dword [rax + 0xa0], 0	       676	diff.c	FUNCTION_15
0x119a	    0xc74588000000	               mov dword [rbp - 0x78], 0	       679	diff.c	FUNCTION_15	FOR_1
0x11a1	            0xeb1e	                           jmp 0x4001201	       679	diff.c	FUNCTION_15	FOR_1
0x11a3	    0x488b05000000	            mov rax, qword [0x040011ea] 	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x11aa	          0x8b5588	             mov edx, dword [rbp - 0x78]	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x11ad	          0x4863d2	                         movsxd rdx, edx	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x11b0	        0x4883c20c	                            add rdx, 0xc	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x11b4	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x11b8	          0x4885c0	                           test rax, rax	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x11bb	            0x750c	                           jne 0x4001209	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x11bd	        0x83458801	               add dword [rbp - 0x78], 1	       679	diff.c	FUNCTION_15	FOR_1
0x11c1	        0x837d8807	               cmp dword [rbp - 0x78], 7	       679	diff.c	FUNCTION_15	FOR_1
0x11c5	            0x7edc	                           jle 0x40011e3	       679	diff.c	FUNCTION_15	FOR_1
0x11c7	            0xeb01	                           jmp 0x400120a	       679	diff.c	FUNCTION_15	FOR_1
0x11c9	              0x90	                                     nop	       681	diff.c	FUNCTION_15	FOR_1	IF_1
0x11ca	        0x837d8808	               cmp dword [rbp - 0x78], 8	       682	diff.c	FUNCTION_15	IF_2
0x11ce	     0xf8402040000	                            je 0x4001616	       682	diff.c	FUNCTION_15	IF_2
0x11d4	          0x8b4588	             mov eax, dword [rbp - 0x78]	       686	diff.c	FUNCTION_15	FOR_2
0x11d7	          0x83c001	                              add eax, 1	       686	diff.c	FUNCTION_15	FOR_2
0x11da	          0x89458c	             mov dword [rbp - 0x74], eax	       686	diff.c	FUNCTION_15	FOR_2
0x11dd	            0xeb1e	                           jmp 0x400123d	       686	diff.c	FUNCTION_15	FOR_2
0x11df	    0x488b05000000	            mov rax, qword [0x04001226] 	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x11e6	          0x8b558c	             mov edx, dword [rbp - 0x74]	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x11e9	          0x4863d2	                         movsxd rdx, edx	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x11ec	        0x4883c20c	                            add rdx, 0xc	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x11f0	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x11f4	          0x4885c0	                           test rax, rax	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x11f7	            0x750c	                           jne 0x4001245	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x11f9	        0x83458c01	               add dword [rbp - 0x74], 1	       686	diff.c	FUNCTION_15	FOR_2
0x11fd	        0x837d8c07	               cmp dword [rbp - 0x74], 7	       686	diff.c	FUNCTION_15	FOR_2
0x1201	            0x7edc	                           jle 0x400121f	       686	diff.c	FUNCTION_15	FOR_2
0x1203	            0xeb01	                           jmp 0x4001246	       686	diff.c	FUNCTION_15	FOR_2
0x1205	              0x90	                                     nop	       688	diff.c	FUNCTION_15	FOR_2	IF_3
0x1206	        0x837d8c08	               cmp dword [rbp - 0x74], 8	       689	diff.c	FUNCTION_15	IF_4
0x120a	     0xf84c9030000	                            je 0x4001619	       689	diff.c	FUNCTION_15	IF_4
0x1210	      0xbe01000000	                              mov esi, 1	       693	diff.c	FUNCTION_15	CALL_2
0x1215	      0xbf6f000000	                           mov edi, 0x6f	       693	diff.c	FUNCTION_15	CALL_2
0x121a	      0xe800000000	                          call 0x400125f	       693	diff.c	FUNCTION_15	CALL_2
0x121f	        0x48894598	             mov qword [rbp - 0x68], rax	       693	diff.c	FUNCTION_15	CALL_2
0x1223	      0xbe01000000	                              mov esi, 1	       694	diff.c	FUNCTION_15	CALL_3
0x1228	      0xbf6e000000	                           mov edi, 0x6e	       694	diff.c	FUNCTION_15	CALL_3
0x122d	      0xe800000000	                          call 0x4001272	       694	diff.c	FUNCTION_15	CALL_3
0x1232	        0x488945a0	             mov qword [rbp - 0x60], rax	       694	diff.c	FUNCTION_15	CALL_3
0x1236	      0xbe01000000	                              mov esi, 1	       695	diff.c	FUNCTION_15	CALL_4
0x123b	      0xbf64000000	                           mov edi, 0x64	       695	diff.c	FUNCTION_15	CALL_4
0x1240	      0xe800000000	                          call 0x4001285	       695	diff.c	FUNCTION_15	CALL_4
0x1245	        0x488945a8	             mov qword [rbp - 0x58], rax	       695	diff.c	FUNCTION_15	CALL_4
0x1249	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       696	diff.c	FUNCTION_15	IF_5
0x124e	     0xf845c030000	                            je 0x40015f0	       696	diff.c	FUNCTION_15	IF_5
0x1254	      0x48837da000	               cmp qword [rbp - 0x60], 0	       696	diff.c	FUNCTION_15	IF_5
0x1259	     0xf8451030000	                            je 0x40015f0	       696	diff.c	FUNCTION_15	IF_5
0x125f	      0x48837da800	               cmp qword [rbp - 0x58], 0	       696	diff.c	FUNCTION_15	IF_5
0x1264	     0xf8446030000	                            je 0x40015f0	       696	diff.c	FUNCTION_15	IF_5
0x126a	    0xc74590000000	               mov dword [rbp - 0x70], 0	       707	diff.c	FUNCTION_15	FOR_3
0x1271	        0x488b4598	             mov rax, qword [rbp - 0x68]	       708	diff.c	FUNCTION_15	FOR_3	CALL_5
0x1275	      0xbe00000000	                              mov esi, 0	       708	diff.c	FUNCTION_15	FOR_3	CALL_5
0x127a	          0x4889c7	                            mov rdi, rax	       708	diff.c	FUNCTION_15	FOR_3	CALL_5
0x127d	      0xe800000000	                          call 0x40012c2	       708	diff.c	FUNCTION_15	FOR_3	CALL_5
0x1282	        0x488945b0	             mov qword [rbp - 0x50], rax	       708	diff.c	FUNCTION_15	FOR_3	CALL_5
0x1286	      0x48837db000	               cmp qword [rbp - 0x50], 0	       709	diff.c	FUNCTION_15	FOR_3	IF_6
0x128b	            0x750c	                           jne 0x40012d9	       709	diff.c	FUNCTION_15	FOR_3	IF_6
0x128d	    0xc74594010000	               mov dword [rbp - 0x6c], 1	       710	diff.c	FUNCTION_15	FOR_3	IF_6
0x1294	      0xe939010000	                           jmp 0x4001412	       710	diff.c	FUNCTION_15	FOR_3	IF_6
0x1299	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x129d	          0x4889c1	                            mov rcx, rax	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x12a0	      0xba01000000	                              mov edx, 1	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x12a5	      0xbe06000000	                              mov esi, 6	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x12aa	      0xbf00000000	                              mov edi, 0	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x12af	      0xe800000000	                          call 0x40012f4	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x12b4	        0x4883f801	                              cmp rax, 1	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x12b8	            0x7407	                            je 0x4001301	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x12ba	    0xc74594010000	               mov dword [rbp - 0x6c], 1	       714	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7
0x12c1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       715	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_7
0x12c5	          0x4889c7	                            mov rdi, rax	       715	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_7
0x12c8	      0xe800000000	                          call 0x400130d	       715	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_7
0x12cd	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       716	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_8
0x12d1	      0xbe00000000	                              mov esi, 0	       716	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_8
0x12d6	          0x4889c7	                            mov rdi, rax	       716	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_8
0x12d9	      0xe800000000	                          call 0x400131e	       716	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_8
0x12de	        0x488945b0	             mov qword [rbp - 0x50], rax	       716	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_8
0x12e2	      0x48837db000	               cmp qword [rbp - 0x50], 0	       717	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_8
0x12e7	            0x750c	                           jne 0x4001335	       717	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_8
0x12e9	    0xc74594010000	               mov dword [rbp - 0x6c], 1	       718	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_8
0x12f0	      0xe9d1000000	                           jmp 0x4001406	       718	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_8
0x12f5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x12f9	          0x4889c1	                            mov rcx, rax	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x12fc	      0xba01000000	                              mov edx, 1	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x1301	      0xbe06000000	                              mov esi, 6	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x1306	      0xbf00000000	                              mov edi, 0	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x130b	      0xe800000000	                          call 0x4001350	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x1310	        0x4883f801	                              cmp rax, 1	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x1314	            0x7407	                            je 0x400135d	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x1316	    0xc74594010000	               mov dword [rbp - 0x6c], 1	       722	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9
0x131d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       723	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_10
0x1321	          0x4889c7	                            mov rdi, rax	       723	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_10
0x1324	      0xe800000000	                          call 0x4001369	       723	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_10
0x1329	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       724	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_11
0x132d	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       724	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_11
0x1331	        0x488b4598	             mov rax, qword [rbp - 0x68]	       724	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_11
0x1335	          0x4889ce	                            mov rsi, rcx	       724	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_11
0x1338	          0x4889c7	                            mov rdi, rax	       724	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_11
0x133b	      0xe8b0020000	                      call sym.diff_file	       724	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_11
0x1340	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       725	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_12
0x1344	      0xbe00000000	                              mov esi, 0	       725	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_12
0x1349	          0x4889c7	                            mov rdi, rax	       725	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_12
0x134c	      0xe800000000	                          call 0x4001391	       725	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_12
0x1351	        0x488945b0	             mov qword [rbp - 0x50], rax	       725	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_12
0x1355	      0x48837db000	               cmp qword [rbp - 0x50], 0	       726	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_10
0x135a	            0x7509	                           jne 0x40013a5	       726	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_10
0x135c	    0xc74594010000	               mov dword [rbp - 0x6c], 1	       727	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_10
0x1363	            0xeb49	                           jmp 0x40013ee	       727	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_10
0x1365	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11	CALL_13
0x1369	        0x488d45c0	                   lea rax, [rbp - 0x40]	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11	CALL_13
0x136d	      0xbe32000000	                           mov esi, 0x32	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11	CALL_13
0x1372	          0x4889c7	                            mov rdi, rax	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11	CALL_13
0x1375	      0xe800000000	                          call 0x40013ba	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11	CALL_13
0x137a	            0x85c0	                           test eax, eax	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11	CALL_13
0x137c	            0x7523	                           jne 0x40013e1	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11	CALL_13
0x137e	        0x488d45c0	                   lea rax, [rbp - 0x40]	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_14
0x1382	      0xba03000000	                              mov edx, 3	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_14
0x1387	      0xbe00000000	                              mov esi, 0	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_14
0x138c	          0x4889c7	                            mov rdi, rax	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_14
0x138f	      0xe800000000	                          call 0x40013d4	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_14
0x1394	            0x85c0	                           test eax, eax	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_14
0x1396	            0x75cd	                           jne 0x40013a5	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_14
0x1398	    0xc74590010000	               mov dword [rbp - 0x70], 1	       738	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12
0x139f	            0xebc4	                           jmp 0x40013a5	       739	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4
0x13a1	              0x90	                                     nop	       736	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x13a2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       740	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	CALL_15
0x13a6	          0x4889c7	                            mov rdi, rax	       740	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	CALL_15
0x13a9	      0xe800000000	                          call 0x40013ee	       740	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	CALL_15
0x13ae	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       742	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_16
0x13b2	          0x4889c7	                            mov rdi, rax	       742	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_16
0x13b5	      0xe800000000	                          call 0x40013fa	       742	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_16
0x13ba	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       743	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_17
0x13be	          0x4889c7	                            mov rdi, rax	       743	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_17
0x13c1	      0xe800000000	                          call 0x4001406	       743	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_17
0x13c6	        0x488b4598	             mov rax, qword [rbp - 0x68]	       745	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_18
0x13ca	          0x4889c7	                            mov rdi, rax	       745	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_18
0x13cd	      0xe800000000	                          call 0x4001412	       745	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_18
0x13d2	    0x488b05000000	            mov rax, qword [0x04001419] 	       750	diff.c	FUNCTION_15	FOR_3	IF_13
0x13d9	           0xfb600	                   movzx eax, byte [rax]	       750	diff.c	FUNCTION_15	FOR_3	IF_13
0x13dc	            0x84c0	                             test al, al	       750	diff.c	FUNCTION_15	FOR_3	IF_13
0x13de	            0x751f	                           jne 0x400143f	       750	diff.c	FUNCTION_15	FOR_3	IF_13
0x13e0	    0x8b0500000000	            mov eax, dword [0x04001426] 	       771	diff.c	FUNCTION_15	FOR_3	IF_16
0x13e6	          0x83f802	                              cmp eax, 2	       771	diff.c	FUNCTION_15	FOR_3	IF_16
0x13e9	            0x7517	                           jne 0x4001442	       771	diff.c	FUNCTION_15	FOR_3	IF_16
0x13eb	          0x8b4590	             mov eax, dword [rbp - 0x70]	       773	diff.c	FUNCTION_15	FOR_3
0x13ee	    0x890500000000	            mov dword [0x04001434], eax 	       773	diff.c	FUNCTION_15	FOR_3
0x13f4	        0x837d9000	               cmp dword [rbp - 0x70], 0	       776	diff.c	FUNCTION_15	FOR_3	IF_17
0x13f8	            0x750b	                           jne 0x4001445	       776	diff.c	FUNCTION_15	FOR_3	IF_17
0x13fa	      0xe96bfeffff	                           jmp 0x40012aa	       778	diff.c	FUNCTION_15	FOR_3
0x13ff	              0x90	                                     nop	       751	diff.c	FUNCTION_15	FOR_3	IF_13
0x1400	            0xeb04	                           jmp 0x4001446	       751	diff.c	FUNCTION_15	FOR_3	IF_13
0x1402	              0x90	                                     nop	       772	diff.c	FUNCTION_15	FOR_3	IF_16
0x1403	            0xeb01	                           jmp 0x4001446	       772	diff.c	FUNCTION_15	FOR_3	IF_16
0x1405	              0x90	                                     nop	       777	diff.c	FUNCTION_15	FOR_3	IF_17
0x1406	        0x837d9000	               cmp dword [rbp - 0x70], 0	       779	diff.c	FUNCTION_15	IF_18
0x140a	            0x7539	                           jne 0x4001485	       779	diff.c	FUNCTION_15	IF_18
0x140c	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       781	diff.c	FUNCTION_15	IF_18	IF_19
0x1410	            0x7412	                            je 0x4001464	       781	diff.c	FUNCTION_15	IF_18	IF_19
0x1412	      0xbf00000000	                              mov edi, 0	       782	diff.c	FUNCTION_15	IF_18	CALL_20
0x1417	      0xe800000000	                          call 0x400145c	       782	diff.c	FUNCTION_15	IF_18	CALL_20
0x141c	          0x4889c7	                            mov rdi, rax	       782	diff.c	FUNCTION_15	IF_18	CALL_20
0x141f	      0xe800000000	                          call 0x4001464	       782	diff.c	FUNCTION_15	IF_18	CALL_20
0x1424	      0xbf00000000	                              mov edi, 0	       783	diff.c	FUNCTION_15	IF_18	CALL_22
0x1429	      0xe800000000	                          call 0x400146e	       783	diff.c	FUNCTION_15	IF_18	CALL_22
0x142e	          0x4889c7	                            mov rdi, rax	       783	diff.c	FUNCTION_15	IF_18	CALL_22
0x1431	      0xe800000000	                          call 0x4001476	       783	diff.c	FUNCTION_15	IF_18	CALL_22
0x1436	    0xc70500000000	               mov dword [0x04001480], 2	       784	diff.c	FUNCTION_15	IF_18
0x1440	      0xe96b010000	                           jmp 0x40015f0	       788	diff.c	FUNCTION_15	IF_18
0x1445	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       792	diff.c	FUNCTION_15	IF_20
0x144d	            0x745a	                            je 0x40014e9	       792	diff.c	FUNCTION_15	IF_20
0x144f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       792	diff.c	FUNCTION_15	IF_20
0x1456	          0x8b4034	            mov eax, dword [rax + 0x34] 	       792	diff.c	FUNCTION_15	IF_20
0x1459	            0x85c0	                           test eax, eax	       792	diff.c	FUNCTION_15	IF_20
0x145b	            0x744c	                            je 0x40014e9	       792	diff.c	FUNCTION_15	IF_20
0x145d	          0x8b4588	             mov eax, dword [rbp - 0x78]	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x1460	          0x89458c	             mov dword [rbp - 0x74], eax	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x1463	            0xeb3e	                           jmp 0x40014e3	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x1465	    0x488b05000000	            mov rax, qword [0x040014ac] 	       795	diff.c	FUNCTION_15	IF_20	FOR_5
0x146c	          0x8b558c	             mov edx, dword [rbp - 0x74]	       795	diff.c	FUNCTION_15	IF_20	FOR_5
0x146f	          0x4863d2	                         movsxd rdx, edx	       795	diff.c	FUNCTION_15	IF_20	FOR_5
0x1472	        0x4883c20c	                            add rdx, 0xc	       795	diff.c	FUNCTION_15	IF_20	FOR_5
0x1476	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       795	diff.c	FUNCTION_15	IF_20	FOR_5
0x147a	        0x488945b8	             mov qword [rbp - 0x48], rax	       795	diff.c	FUNCTION_15	IF_20	FOR_5
0x147e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       796	diff.c	FUNCTION_15	IF_20	FOR_5	IF_21	CALL_23
0x1482	          0x4889c7	                            mov rdi, rax	       796	diff.c	FUNCTION_15	IF_20	FOR_5	IF_21	CALL_23
0x1485	      0xe800000000	                          call 0x40014ca	       796	diff.c	FUNCTION_15	IF_20	FOR_5	IF_21	CALL_23
0x148a	            0x85c0	                           test eax, eax	       796	diff.c	FUNCTION_15	IF_20	FOR_5	IF_21	CALL_23
0x148c	            0x7411	                            je 0x40014df	       796	diff.c	FUNCTION_15	IF_20	FOR_5	IF_21	CALL_23
0x148e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       797	diff.c	FUNCTION_15	IF_20	FOR_5	CALL_24
0x1492	      0xbe00000000	                              mov esi, 0	       797	diff.c	FUNCTION_15	IF_20	FOR_5	CALL_24
0x1497	          0x4889c7	                            mov rdi, rax	       797	diff.c	FUNCTION_15	IF_20	FOR_5	CALL_24
0x149a	      0xe800000000	                          call 0x40014df	       797	diff.c	FUNCTION_15	IF_20	FOR_5	CALL_24
0x149f	        0x83458c01	               add dword [rbp - 0x74], 1	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x14a3	        0x837d8c07	               cmp dword [rbp - 0x74], 7	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x14a7	            0x7ebc	                           jle 0x40014a5	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x14a9	    0x488b05000000	            mov rax, qword [0x040014f0] 	       801	diff.c	FUNCTION_15
0x14b0	          0x8b5588	             mov edx, dword [rbp - 0x78]	       801	diff.c	FUNCTION_15
0x14b3	          0x4863d2	                         movsxd rdx, edx	       801	diff.c	FUNCTION_15
0x14b6	        0x4883c20c	                            add rdx, 0xc	       801	diff.c	FUNCTION_15
0x14ba	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       801	diff.c	FUNCTION_15
0x14be	        0x488945b8	             mov qword [rbp - 0x48], rax	       801	diff.c	FUNCTION_15
0x14c2	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       802	diff.c	FUNCTION_15	IF_22	CALL_25
0x14c6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       802	diff.c	FUNCTION_15	IF_22	CALL_25
0x14ca	          0x4889d6	                            mov rsi, rdx	       802	diff.c	FUNCTION_15	IF_22	CALL_25
0x14cd	          0x4889c7	                            mov rdi, rax	       802	diff.c	FUNCTION_15	IF_22	CALL_25
0x14d0	      0xe8e6fbffff	                     call sym.diff_write	       802	diff.c	FUNCTION_15	IF_22	CALL_25
0x14d5	            0x85c0	                           test eax, eax	       802	diff.c	FUNCTION_15	IF_22	CALL_25
0x14d7	     0xf84d2000000	                            je 0x40015ef	       802	diff.c	FUNCTION_15	IF_22	CALL_25
0x14dd	          0x8b4588	             mov eax, dword [rbp - 0x78]	       806	diff.c	FUNCTION_15	FOR_6
0x14e0	          0x83c001	                              add eax, 1	       806	diff.c	FUNCTION_15	FOR_6
0x14e3	          0x89458c	             mov dword [rbp - 0x74], eax	       806	diff.c	FUNCTION_15	FOR_6
0x14e6	      0xe990000000	                           jmp 0x40015bb	       806	diff.c	FUNCTION_15	FOR_6
0x14eb	    0x488b05000000	            mov rax, qword [0x04001532] 	       808	diff.c	FUNCTION_15	FOR_6
0x14f2	          0x8b558c	             mov edx, dword [rbp - 0x74]	       808	diff.c	FUNCTION_15	FOR_6
0x14f5	          0x4863d2	                         movsxd rdx, edx	       808	diff.c	FUNCTION_15	FOR_6
0x14f8	        0x4883c20c	                            add rdx, 0xc	       808	diff.c	FUNCTION_15	FOR_6
0x14fc	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       808	diff.c	FUNCTION_15	FOR_6
0x1500	        0x488945b8	             mov qword [rbp - 0x48], rax	       808	diff.c	FUNCTION_15	FOR_6
0x1504	      0x48837db800	               cmp qword [rbp - 0x48], 0	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x1509	            0x7468	                            je 0x40015b3	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x150b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x150f	        0x488b4008	                mov rax, qword [rax + 8]	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x1513	          0x4885c0	                           test rax, rax	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x1516	            0x745b	                            je 0x40015b3	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x1518	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_26
0x151c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_26
0x1520	          0x4889d6	                            mov rsi, rdx	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_26
0x1523	          0x4889c7	                            mov rdi, rax	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_26
0x1526	      0xe890fbffff	                     call sym.diff_write	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_26
0x152b	            0x85c0	                           test eax, eax	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_26
0x152d	            0x7447	                            je 0x40015b6	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_26
0x152f	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       813	diff.c	FUNCTION_15	FOR_6	CALL_27
0x1533	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       813	diff.c	FUNCTION_15	FOR_6	CALL_27
0x1537	        0x488b4598	             mov rax, qword [rbp - 0x68]	       813	diff.c	FUNCTION_15	FOR_6	CALL_27
0x153b	          0x4889ce	                            mov rsi, rcx	       813	diff.c	FUNCTION_15	FOR_6	CALL_27
0x153e	          0x4889c7	                            mov rdi, rax	       813	diff.c	FUNCTION_15	FOR_6	CALL_27
0x1541	      0xe8aa000000	                      call sym.diff_file	       813	diff.c	FUNCTION_15	FOR_6	CALL_27
0x1546	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       816	diff.c	FUNCTION_15	FOR_6	CALL_28
0x154a	          0x8b4d8c	             mov ecx, dword [rbp - 0x74]	       816	diff.c	FUNCTION_15	FOR_6	CALL_28
0x154d	          0x8b4588	             mov eax, dword [rbp - 0x78]	       816	diff.c	FUNCTION_15	FOR_6	CALL_28
0x1550	            0x89ce	                            mov esi, ecx	       816	diff.c	FUNCTION_15	FOR_6	CALL_28
0x1552	            0x89c7	                            mov edi, eax	       816	diff.c	FUNCTION_15	FOR_6	CALL_28
0x1554	      0xe818100000	                      call sym.diff_read	       816	diff.c	FUNCTION_15	FOR_6	CALL_28
0x1559	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       817	diff.c	FUNCTION_15	FOR_6	CALL_29
0x155d	          0x4889c7	                            mov rdi, rax	       817	diff.c	FUNCTION_15	FOR_6	CALL_29
0x1560	      0xe800000000	                          call 0x40015a5	       817	diff.c	FUNCTION_15	FOR_6	CALL_29
0x1565	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       818	diff.c	FUNCTION_15	FOR_6	CALL_30
0x1569	          0x4889c7	                            mov rdi, rax	       818	diff.c	FUNCTION_15	FOR_6	CALL_30
0x156c	      0xe800000000	                          call 0x40015b1	       818	diff.c	FUNCTION_15	FOR_6	CALL_30
0x1571	            0xeb04	                           jmp 0x40015b7	       818	diff.c	FUNCTION_15	FOR_6	CALL_30
0x1573	              0x90	                                     nop	       810	diff.c	FUNCTION_15	FOR_6	IF_23
0x1574	            0xeb01	                           jmp 0x40015b7	       810	diff.c	FUNCTION_15	FOR_6	IF_23
0x1576	              0x90	                                     nop	       812	diff.c	FUNCTION_15	FOR_6	IF_24
0x1577	        0x83458c01	               add dword [rbp - 0x74], 1	       806	diff.c	FUNCTION_15	FOR_6
0x157b	        0x837d8c07	               cmp dword [rbp - 0x74], 7	       806	diff.c	FUNCTION_15	FOR_6
0x157f	     0xf8e66ffffff	                           jle 0x400152b	       806	diff.c	FUNCTION_15	FOR_6
0x1585	        0x488b4598	             mov rax, qword [rbp - 0x68]	       820	diff.c	FUNCTION_15	CALL_31
0x1589	          0x4889c7	                            mov rdi, rax	       820	diff.c	FUNCTION_15	CALL_31
0x158c	      0xe800000000	                          call 0x40015d1	       820	diff.c	FUNCTION_15	CALL_31
0x1591	    0x488b05000000	            mov rax, qword [0x040015d8] 	       823	diff.c	FUNCTION_15
0x1598	    0x48c780b80000	               mov qword [rax + 0xb8], 0	       823	diff.c	FUNCTION_15
0x15a3	      0xbf01000000	                              mov edi, 1	       825	diff.c	FUNCTION_15	CALL_32
0x15a8	      0xe8fcf9ffff	                    call sym.diff_redraw	       825	diff.c	FUNCTION_15	CALL_32
0x15ad	            0xeb01	                           jmp 0x40015f0	       825	diff.c	FUNCTION_15	CALL_32
0x15af	              0x90	                                     nop	       803	diff.c	FUNCTION_15	IF_22
0x15b0	        0x488b4598	             mov rax, qword [rbp - 0x68]	       828	diff.c	FUNCTION_15	CALL_33
0x15b4	          0x4889c7	                            mov rdi, rax	       828	diff.c	FUNCTION_15	CALL_33
0x15b7	      0xe800000000	                          call 0x40015fc	       828	diff.c	FUNCTION_15	CALL_33
0x15bc	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       829	diff.c	FUNCTION_15	CALL_34
0x15c0	          0x4889c7	                            mov rdi, rax	       829	diff.c	FUNCTION_15	CALL_34
0x15c3	      0xe800000000	                          call 0x4001608	       829	diff.c	FUNCTION_15	CALL_34
0x15c8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       830	diff.c	FUNCTION_15	CALL_35
0x15cc	          0x4889c7	                            mov rdi, rax	       830	diff.c	FUNCTION_15	CALL_35
0x15cf	      0xe800000000	                          call 0x4001614	       830	diff.c	FUNCTION_15	CALL_35
0x15d4	            0xeb04	                           jmp 0x400161a	       830	diff.c	FUNCTION_15	CALL_35
0x15d6	              0x90	                                     nop	       683	diff.c	FUNCTION_15	IF_2
0x15d7	            0xeb01	                           jmp 0x400161a	       683	diff.c	FUNCTION_15	IF_2
0x15d9	              0x90	                                     nop	       690	diff.c	FUNCTION_15	IF_4
0x15da	        0x488b45f8	                mov rax, qword [rbp - 8]	       831	diff.c	FUNCTION_15
0x15de	    0x644833042528	                xor rax, qword fs:[0x28]	       831	diff.c	FUNCTION_15
0x15e7	            0x7405	                            je 0x400162e	       831	diff.c	FUNCTION_15
0x15e9	      0xe800000000	                          call 0x400162e	       831	diff.c	FUNCTION_15
0x15ee	              0xc9	                                   leave	       831	diff.c	FUNCTION_15
0x15ef	              0xc3	                                     ret	       831	diff.c	FUNCTION_15
diff_equal_char	SWITCH,0:functions,0:WHILE,0:ELSE,1:IF,4:CALL,7:FOR,0:DO,0	89
0x3445	              0x55	                                push rbp	      1645	diff.c	FUNCTION_28
0x3446	          0x4889e5	                            mov rbp, rsp	      1645	diff.c	FUNCTION_28
0x3449	              0x53	                                push rbx	      1645	diff.c	FUNCTION_28
0x344a	        0x4883ec38	                           sub rsp, 0x38	      1645	diff.c	FUNCTION_28
0x344e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1645	diff.c	FUNCTION_28
0x3452	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1645	diff.c	FUNCTION_28
0x3456	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1645	diff.c	FUNCTION_28
0x345a	    0x488b05000000	            mov rax, qword [0x040034a1] 	      1647	diff.c	FUNCTION_28
0x3461	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1647	diff.c	FUNCTION_28
0x3465	          0x4889d7	                            mov rdi, rdx	      1647	diff.c	FUNCTION_28
0x3468	            0xffd0	                                call rax	      1647	diff.c	FUNCTION_28
0x346a	          0x8945ec	             mov dword [rbp - 0x14], eax	      1647	diff.c	FUNCTION_28
0x346d	    0x488b05000000	            mov rax, qword [0x040034b4] 	      1649	diff.c	FUNCTION_28	IF_1
0x3474	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1649	diff.c	FUNCTION_28	IF_1
0x3478	          0x4889d7	                            mov rdi, rdx	      1649	diff.c	FUNCTION_28	IF_1
0x347b	            0xffd0	                                call rax	      1649	diff.c	FUNCTION_28	IF_1
0x347d	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1649	diff.c	FUNCTION_28	IF_1
0x3480	            0x740a	                            je 0x40034cc	      1649	diff.c	FUNCTION_28	IF_1
0x3482	      0xb800000000	                              mov eax, 0	      1650	diff.c	FUNCTION_28	IF_1
0x3487	      0xe9d5000000	                           jmp 0x40035a1	      1650	diff.c	FUNCTION_28	IF_1
0x348c	        0x837dec01	               cmp dword [rbp - 0x14], 1	      1651	diff.c	FUNCTION_28	IF_2
0x3490	            0x7e72	                           jle 0x4003544	      1651	diff.c	FUNCTION_28	IF_2
0x3492	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x3495	          0x4863d0	                         movsxd rdx, eax	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x3498	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x349c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x34a0	          0x4889ce	                            mov rsi, rcx	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x34a3	          0x4889c7	                            mov rdi, rax	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x34a6	      0xe800000000	                          call 0x40034eb	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x34ab	            0x85c0	                           test eax, eax	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x34ad	            0x744a	                            je 0x4003539	      1653	diff.c	FUNCTION_28	IF_2	IF_3	CALL_1
0x34af	    0x8b0500000000	            mov eax, dword [0x040034f5] 	      1654	diff.c	FUNCTION_28	IF_2	IF_3
0x34b5	            0x85c0	                           test eax, eax	      1654	diff.c	FUNCTION_28	IF_2	IF_3
0x34b7	            0x7439	                            je 0x4003532	      1654	diff.c	FUNCTION_28	IF_2	IF_3
0x34b9	    0x8b0500000000	            mov eax, dword [0x040034ff] 	      1655	diff.c	FUNCTION_28	IF_2	IF_3
0x34bf	          0x83e002	                              and eax, 2	      1655	diff.c	FUNCTION_28	IF_2	IF_3
0x34c2	            0x85c0	                           test eax, eax	      1655	diff.c	FUNCTION_28	IF_2	IF_3
0x34c4	            0x742c	                            je 0x4003532	      1655	diff.c	FUNCTION_28	IF_2	IF_3
0x34c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x34ca	          0x4889c7	                            mov rdi, rax	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x34cd	      0xe800000000	                          call 0x4003512	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x34d2	            0x89c7	                            mov edi, eax	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x34d4	      0xe800000000	                          call 0x4003519	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x34d9	            0x89c3	                            mov ebx, eax	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x34db	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1657	diff.c	FUNCTION_28	IF_2	IF_3	CALL_5
0x34df	          0x4889c7	                            mov rdi, rax	      1657	diff.c	FUNCTION_28	IF_2	IF_3	CALL_5
0x34e2	      0xe800000000	                          call 0x4003527	      1657	diff.c	FUNCTION_28	IF_2	IF_3	CALL_5
0x34e7	            0x89c7	                            mov edi, eax	      1657	diff.c	FUNCTION_28	IF_2	IF_3	CALL_5
0x34e9	      0xe800000000	                          call 0x400352e	      1657	diff.c	FUNCTION_28	IF_2	IF_3	CALL_5
0x34ee	            0x39c3	                            cmp ebx, eax	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x34f0	            0x7407	                            je 0x4003539	      1656	diff.c	FUNCTION_28	IF_2	IF_3	CALL_3
0x34f2	      0xb800000000	                              mov eax, 0	      1658	diff.c	FUNCTION_28	IF_2	IF_3
0x34f7	            0xeb68	                           jmp 0x40035a1	      1658	diff.c	FUNCTION_28	IF_2	IF_3
0x34f9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1659	diff.c	FUNCTION_28	IF_2
0x34fd	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1659	diff.c	FUNCTION_28	IF_2
0x3500	            0x8910	                    mov dword [rax], edx	      1659	diff.c	FUNCTION_28	IF_2
0x3502	            0xeb58	                           jmp 0x400359c	      1659	diff.c	FUNCTION_28	IF_2
0x3504	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1664	diff.c	FUNCTION_28	ELSE_1	IF_4
0x3508	           0xfb610	                   movzx edx, byte [rax]	      1664	diff.c	FUNCTION_28	ELSE_1	IF_4
0x350b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1664	diff.c	FUNCTION_28	ELSE_1	IF_4
0x350f	           0xfb600	                   movzx eax, byte [rax]	      1664	diff.c	FUNCTION_28	ELSE_1	IF_4
0x3512	            0x38c2	                              cmp dl, al	      1664	diff.c	FUNCTION_28	ELSE_1	IF_4
0x3514	            0x743c	                            je 0x4003592	      1664	diff.c	FUNCTION_28	ELSE_1	IF_4
0x3516	    0x8b0500000000	            mov eax, dword [0x0400355c] 	      1665	diff.c	FUNCTION_28	ELSE_1	IF_4
0x351c	          0x83e002	                              and eax, 2	      1665	diff.c	FUNCTION_28	ELSE_1	IF_4
0x351f	            0x85c0	                           test eax, eax	      1665	diff.c	FUNCTION_28	ELSE_1	IF_4
0x3521	            0x7428	                            je 0x400358b	      1665	diff.c	FUNCTION_28	ELSE_1	IF_4
0x3523	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x3527	           0xfb600	                   movzx eax, byte [rax]	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x352a	           0xfb6c0	                           movzx eax, al	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x352d	            0x89c7	                            mov edi, eax	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x352f	      0xe800000000	                          call 0x4003574	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x3534	            0x89c3	                            mov ebx, eax	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x3536	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x353a	           0xfb600	                   movzx eax, byte [rax]	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x353d	           0xfb6c0	                           movzx eax, al	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x3540	            0x89c7	                            mov edi, eax	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x3542	      0xe800000000	                          call 0x4003587	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x3547	            0x39c3	                            cmp ebx, eax	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x3549	            0x7407	                            je 0x4003592	      1666	diff.c	FUNCTION_28	ELSE_1	IF_4	CALL_7
0x354b	      0xb800000000	                              mov eax, 0	      1667	diff.c	FUNCTION_28	ELSE_1	IF_4
0x3550	            0xeb0f	                           jmp 0x40035a1	      1667	diff.c	FUNCTION_28	ELSE_1	IF_4
0x3552	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1668	diff.c	FUNCTION_28	ELSE_1
0x3556	    0xc70001000000	                      mov dword [rax], 1	      1668	diff.c	FUNCTION_28	ELSE_1
0x355c	      0xb801000000	                              mov eax, 1	      1670	diff.c	FUNCTION_28
0x3561	        0x4883c438	                           add rsp, 0x38	      1671	diff.c	FUNCTION_28
0x3565	              0x5b	                                 pop rbx	      1671	diff.c	FUNCTION_28
0x3566	              0x5d	                                 pop rbp	      1671	diff.c	FUNCTION_28
0x3567	              0xc3	                                     ret	      1671	diff.c	FUNCTION_28
diff_win_options	SWITCH,0:functions,0:WHILE,0:ELSE,0:IF,8:CALL,11:FOR,0:DO,0	136
0x20b0	              0x55	                                push rbp	      1153	diff.c	FUNCTION_21
0x20b1	          0x4889e5	                            mov rbp, rsp	      1153	diff.c	FUNCTION_21
0x20b4	        0x4883ec20	                           sub rsp, 0x20	      1153	diff.c	FUNCTION_21
0x20b8	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1153	diff.c	FUNCTION_21
0x20bc	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1153	diff.c	FUNCTION_21
0x20bf	    0x488b05000000	            mov rax, qword [0x04002106] 	      1155	diff.c	FUNCTION_21
0x20c6	        0x488945f8	                mov qword [rbp - 8], rax	      1155	diff.c	FUNCTION_21
0x20ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1158	diff.c	FUNCTION_21
0x20ce	    0x488905000000	            mov qword [0x04002115], rax 	      1158	diff.c	FUNCTION_21
0x20d5	      0xe800000000	                          call 0x400211a	      1159	diff.c	FUNCTION_21	CALL_1
0x20da	        0x488b45f8	                mov rax, qword [rbp - 8]	      1160	diff.c	FUNCTION_21
0x20de	    0x488905000000	            mov qword [0x04002125], rax 	      1160	diff.c	FUNCTION_21
0x20e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1164	diff.c	FUNCTION_21	IF_1
0x20e9	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      1164	diff.c	FUNCTION_21	IF_1
0x20ef	            0x85c0	                           test eax, eax	      1164	diff.c	FUNCTION_21	IF_1
0x20f1	            0x7514	                           jne 0x4002147	      1164	diff.c	FUNCTION_21	IF_1
0x20f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1165	diff.c	FUNCTION_21	IF_1
0x20f7	    0x8b9088020000	           mov edx, dword [rax + 0x288] 	      1165	diff.c	FUNCTION_21	IF_1
0x20fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1165	diff.c	FUNCTION_21	IF_1
0x2101	    0x899090020000	            mov dword [rax + 0x290], edx	      1165	diff.c	FUNCTION_21	IF_1
0x2107	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1166	diff.c	FUNCTION_21
0x210b	    0xc78088020000	              mov dword [rax + 0x288], 1	      1166	diff.c	FUNCTION_21
0x2115	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1167	diff.c	FUNCTION_21	IF_2
0x2119	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      1167	diff.c	FUNCTION_21	IF_2
0x211f	            0x85c0	                           test eax, eax	      1167	diff.c	FUNCTION_21	IF_2
0x2121	            0x7514	                           jne 0x4002177	      1167	diff.c	FUNCTION_21	IF_2
0x2123	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1168	diff.c	FUNCTION_21	IF_2
0x2127	    0x8b90b0020000	           mov edx, dword [rax + 0x2b0] 	      1168	diff.c	FUNCTION_21	IF_2
0x212d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1168	diff.c	FUNCTION_21	IF_2
0x2131	    0x8990b4020000	            mov dword [rax + 0x2b4], edx	      1168	diff.c	FUNCTION_21	IF_2
0x2137	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1169	diff.c	FUNCTION_21
0x213b	    0xc780b0020000	              mov dword [rax + 0x2b0], 1	      1169	diff.c	FUNCTION_21
0x2145	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1170	diff.c	FUNCTION_21	IF_3
0x2149	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      1170	diff.c	FUNCTION_21	IF_3
0x214f	            0x85c0	                           test eax, eax	      1170	diff.c	FUNCTION_21	IF_3
0x2151	            0x7514	                           jne 0x40021a7	      1170	diff.c	FUNCTION_21	IF_3
0x2153	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1171	diff.c	FUNCTION_21	IF_3
0x2157	    0x8b9094020000	           mov edx, dword [rax + 0x294] 	      1171	diff.c	FUNCTION_21	IF_3
0x215d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1171	diff.c	FUNCTION_21	IF_3
0x2161	    0x899098020000	            mov dword [rax + 0x298], edx	      1171	diff.c	FUNCTION_21	IF_3
0x2167	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1172	diff.c	FUNCTION_21
0x216b	    0xc78094020000	              mov dword [rax + 0x294], 0	      1172	diff.c	FUNCTION_21
0x2175	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1174	diff.c	FUNCTION_21
0x2179	    0x488905000000	            mov qword [0x040021c0], rax 	      1174	diff.c	FUNCTION_21
0x2180	    0x488b05000000	            mov rax, qword [0x040021c7] 	      1175	diff.c	FUNCTION_21
0x2187	        0x488b4008	                mov rax, qword [rax + 8]	      1175	diff.c	FUNCTION_21
0x218b	    0x488905000000	            mov qword [0x040021d2], rax 	      1175	diff.c	FUNCTION_21
0x2192	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1176	diff.c	FUNCTION_21	IF_4
0x2196	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      1176	diff.c	FUNCTION_21	IF_4
0x219c	            0x85c0	                           test eax, eax	      1176	diff.c	FUNCTION_21	IF_4
0x219e	            0x7542	                           jne 0x4002222	      1176	diff.c	FUNCTION_21	IF_4
0x21a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1178	diff.c	FUNCTION_21	IF_4	IF_5
0x21a4	    0x8b808c020000	           mov eax, dword [rax + 0x28c] 	      1178	diff.c	FUNCTION_21	IF_4	IF_5
0x21aa	            0x85c0	                           test eax, eax	      1178	diff.c	FUNCTION_21	IF_4	IF_5
0x21ac	            0x7413	                            je 0x4002201	      1178	diff.c	FUNCTION_21	IF_4	IF_5
0x21ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1179	diff.c	FUNCTION_21	IF_4	CALL_2
0x21b2	    0x488b80000200	           mov rax, qword [rax + 0x200] 	      1179	diff.c	FUNCTION_21	IF_4	CALL_2
0x21b9	          0x4889c7	                            mov rdi, rax	      1179	diff.c	FUNCTION_21	IF_4	CALL_2
0x21bc	      0xe800000000	                          call 0x4002201	      1179	diff.c	FUNCTION_21	IF_4	CALL_2
0x21c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1180	diff.c	FUNCTION_21	IF_4	CALL_3
0x21c5	    0x488b80f80100	           mov rax, qword [rax + 0x1f8] 	      1180	diff.c	FUNCTION_21	IF_4	CALL_3
0x21cc	          0x4889c7	                            mov rdi, rax	      1180	diff.c	FUNCTION_21	IF_4	CALL_3
0x21cf	      0xe800000000	                          call 0x4002214	      1180	diff.c	FUNCTION_21	IF_4	CALL_3
0x21d4	          0x4889c2	                            mov rdx, rax	      1180	diff.c	FUNCTION_21	IF_4	CALL_3
0x21d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1180	diff.c	FUNCTION_21	IF_4	CALL_3
0x21db	    0x488990000200	            mov qword [rax + 0x200], rdx	      1180	diff.c	FUNCTION_21	IF_4	CALL_3
0x21e2	    0x41b800000000	                              mov r8d, 0	      1182	diff.c	FUNCTION_21	CALL_4
0x21e8	      0xb905000000	                              mov ecx, 5	      1182	diff.c	FUNCTION_21	CALL_4
0x21ed	      0xba00000000	                              mov edx, 0	      1182	diff.c	FUNCTION_21	CALL_4
0x21f2	      0xbeffffffff	                     mov esi, 0xffffffff	      1182	diff.c	FUNCTION_21	CALL_4
0x21f7	      0xbf00000000	                              mov edi, 0	      1182	diff.c	FUNCTION_21	CALL_4
0x21fc	      0xe800000000	                          call 0x4002241	      1182	diff.c	FUNCTION_21	CALL_4
0x2201	        0x488b45f8	                mov rax, qword [rbp - 8]	      1184	diff.c	FUNCTION_21
0x2205	    0x488905000000	            mov qword [0x0400224c], rax 	      1184	diff.c	FUNCTION_21
0x220c	    0x488b05000000	            mov rax, qword [0x04002253] 	      1185	diff.c	FUNCTION_21
0x2213	        0x488b4008	                mov rax, qword [rax + 8]	      1185	diff.c	FUNCTION_21
0x2217	    0x488905000000	            mov qword [0x0400225e], rax 	      1185	diff.c	FUNCTION_21
0x221e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1186	diff.c	FUNCTION_21	IF_6
0x2222	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      1186	diff.c	FUNCTION_21	IF_6
0x2228	            0x85c0	                           test eax, eax	      1186	diff.c	FUNCTION_21	IF_6
0x222a	            0x7542	                           jne 0x40022ae	      1186	diff.c	FUNCTION_21	IF_6
0x222c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1188	diff.c	FUNCTION_21	IF_6
0x2230	    0x488b80c80100	           mov rax, qword [rax + 0x1c8] 	      1188	diff.c	FUNCTION_21	IF_6
0x2237	            0x89c2	                            mov edx, eax	      1188	diff.c	FUNCTION_21	IF_6
0x2239	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1188	diff.c	FUNCTION_21	IF_6
0x223d	    0x8990d0010000	            mov dword [rax + 0x1d0], edx	      1188	diff.c	FUNCTION_21	IF_6
0x2243	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1189	diff.c	FUNCTION_21	IF_6
0x2247	    0x8b90d4010000	           mov edx, dword [rax + 0x1d4] 	      1189	diff.c	FUNCTION_21	IF_6
0x224d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1189	diff.c	FUNCTION_21	IF_6
0x2251	    0x8990d8010000	            mov dword [rax + 0x1d8], edx	      1189	diff.c	FUNCTION_21	IF_6
0x2257	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1190	diff.c	FUNCTION_21	IF_6
0x225b	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1190	diff.c	FUNCTION_21	IF_6
0x2262	            0x89c2	                            mov edx, eax	      1190	diff.c	FUNCTION_21	IF_6
0x2264	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1190	diff.c	FUNCTION_21	IF_6
0x2268	    0x8990f0010000	            mov dword [rax + 0x1f0], edx	      1190	diff.c	FUNCTION_21	IF_6
0x226e	    0x8b0500000000	            mov eax, dword [0x040022b4] 	      1192	diff.c	FUNCTION_21
0x2274	          0x4863d0	                         movsxd rdx, eax	      1192	diff.c	FUNCTION_21
0x2277	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1192	diff.c	FUNCTION_21
0x227b	    0x488990c80100	            mov qword [rax + 0x1c8], rdx	      1192	diff.c	FUNCTION_21
0x2282	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1193	diff.c	FUNCTION_21
0x2286	    0xc780d4010000	              mov dword [rax + 0x1d4], 1	      1193	diff.c	FUNCTION_21
0x2290	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1194	diff.c	FUNCTION_21
0x2294	    0x48c780e80100	              mov qword [rax + 0x1e8], 0	      1194	diff.c	FUNCTION_21
0x229f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1195	diff.c	FUNCTION_21	CALL_5
0x22a3	          0x4889c7	                            mov rdi, rax	      1195	diff.c	FUNCTION_21	CALL_5
0x22a6	      0xe800000000	                          call 0x40022eb	      1195	diff.c	FUNCTION_21	CALL_5
0x22ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1197	diff.c	FUNCTION_21	CALL_6
0x22af	          0x4889c7	                            mov rdi, rax	      1197	diff.c	FUNCTION_21	CALL_6
0x22b2	      0xe800000000	                          call 0x40022f7	      1197	diff.c	FUNCTION_21	CALL_6
0x22b7	    0x488b05000000	            mov rax, qword [0x040022fe] 	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x22be	      0xbe68000000	                           mov esi, 0x68	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x22c3	          0x4889c7	                            mov rdi, rax	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x22c6	      0xe800000000	                          call 0x400230b	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x22cb	          0x4885c0	                           test rax, rax	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x22ce	            0x750a	                           jne 0x400231a	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x22d0	      0xbf00000000	                              mov edi, 0	      1200	diff.c	FUNCTION_21	CALL_8
0x22d5	      0xe800000000	                          call 0x400231a	      1200	diff.c	FUNCTION_21	CALL_8
0x22da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1202	diff.c	FUNCTION_21
0x22de	    0xc7808c020000	              mov dword [rax + 0x28c], 1	      1202	diff.c	FUNCTION_21
0x22e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1204	diff.c	FUNCTION_21	CALL_9
0x22ec	      0xbe01000000	                              mov esi, 1	      1204	diff.c	FUNCTION_21	CALL_9
0x22f1	          0x4889c7	                            mov rdi, rax	      1204	diff.c	FUNCTION_21	CALL_9
0x22f4	      0xe826fdffff	                call sym.set_diff_option	      1204	diff.c	FUNCTION_21	CALL_9
0x22f9	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1206	diff.c	FUNCTION_21	IF_8
0x22fd	            0x7410	                            je 0x400234f	      1206	diff.c	FUNCTION_21	IF_8
0x22ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1207	diff.c	FUNCTION_21	CALL_10
0x2303	        0x488b4008	                mov rax, qword [rax + 8]	      1207	diff.c	FUNCTION_21	CALL_10
0x2307	          0x4889c7	                            mov rdi, rax	      1207	diff.c	FUNCTION_21	CALL_10
0x230a	      0xe800000000	                          call 0x400234f	      1207	diff.c	FUNCTION_21	CALL_10
0x230f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1208	diff.c	FUNCTION_21	CALL_11
0x2313	      0xbe28000000	                           mov esi, 0x28	      1208	diff.c	FUNCTION_21	CALL_11
0x2318	          0x4889c7	                            mov rdi, rax	      1208	diff.c	FUNCTION_21	CALL_11
0x231b	      0xe800000000	                          call 0x4002360	      1208	diff.c	FUNCTION_21	CALL_11
0x2320	              0x90	                                     nop	      1209	diff.c	FUNCTION_21
0x2321	              0xc9	                                   leave	      1209	diff.c	FUNCTION_21
0x2322	              0xc3	                                     ret	      1209	diff.c	FUNCTION_21
diff_fold_update	SWITCH,0:functions,0:WHILE,0:ELSE,0:IF,1:CALL,2:FOR,1:DO,0	52
0x53ab	              0x55	                                push rbp	      2489	diff.c	FUNCTION_39
0x53ac	          0x4889e5	                            mov rbp, rsp	      2489	diff.c	FUNCTION_39
0x53af	        0x4883ec20	                           sub rsp, 0x20	      2489	diff.c	FUNCTION_39
0x53b3	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2489	diff.c	FUNCTION_39
0x53b7	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2489	diff.c	FUNCTION_39
0x53ba	    0x488b05000000	            mov rax, qword [0x04005401] 	      2493	diff.c	FUNCTION_39	CALL_1
0x53c1	        0x488945f8	                mov qword [rbp - 8], rax	      2493	diff.c	FUNCTION_39	CALL_1
0x53c5	      0xe990000000	                           jmp 0x400549a	      2493	diff.c	FUNCTION_39	CALL_1
0x53ca	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      2494	diff.c	FUNCTION_39	FOR_1
0x53d1	            0xeb75	                           jmp 0x4005488	      2494	diff.c	FUNCTION_39	FOR_1
0x53d3	    0x488b05000000	            mov rax, qword [0x0400541a] 	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x53da	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x53dd	          0x4863d2	                         movsxd rdx, edx	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x53e0	        0x4883c20c	                            add rdx, 0xc	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x53e4	        0x488b14d0	            mov rdx, qword [rax + rdx*8]	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x53e8	        0x488b45f8	                mov rax, qword [rbp - 8]	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x53ec	        0x488b4008	                mov rax, qword [rax + 8]	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x53f0	          0x4839c2	                            cmp rdx, rax	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x53f3	            0x754f	                           jne 0x4005484	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x53f5	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x53f8	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x53fb	            0x7447	                            je 0x4005484	      2495	diff.c	FUNCTION_39	FOR_1	IF_1
0x53fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2497	diff.c	FUNCTION_39	FOR_1	IF_1
0x5401	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2497	diff.c	FUNCTION_39	FOR_1	IF_1
0x5404	          0x4863d2	                         movsxd rdx, edx	      2497	diff.c	FUNCTION_39	FOR_1	IF_1
0x5407	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2497	diff.c	FUNCTION_39	FOR_1	IF_1
0x540c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2497	diff.c	FUNCTION_39	FOR_1	IF_1
0x5410	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      2497	diff.c	FUNCTION_39	FOR_1	IF_1
0x5413	          0x4863c9	                         movsxd rcx, ecx	      2497	diff.c	FUNCTION_39	FOR_1	IF_1
0x5416	        0x4883c108	                              add rcx, 8	      2497	diff.c	FUNCTION_39	FOR_1	IF_1
0x541a	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      2497	diff.c	FUNCTION_39	FOR_1	IF_1
0x541f	        0x488d3402	                    lea rsi, [rdx + rax]	      2496	diff.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x5423	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2496	diff.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x5427	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2496	diff.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x542a	          0x4863d2	                         movsxd rdx, edx	      2496	diff.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x542d	      0x488b4cd008	       mov rcx, qword [rax + rdx*8 + 8] 	      2496	diff.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x5432	        0x488b45f8	                mov rax, qword [rbp - 8]	      2496	diff.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x5436	          0x4889f2	                            mov rdx, rsi	      2496	diff.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x5439	          0x4889ce	                            mov rsi, rcx	      2496	diff.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x543c	          0x4889c7	                            mov rdi, rax	      2496	diff.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x543f	      0xe800000000	                          call 0x4005484	      2496	diff.c	FUNCTION_39	FOR_1	IF_1	CALL_2
0x5444	        0x8345f401	                add dword [rbp - 0xc], 1	      2494	diff.c	FUNCTION_39	FOR_1
0x5448	        0x837df407	                cmp dword [rbp - 0xc], 7	      2494	diff.c	FUNCTION_39	FOR_1
0x544c	            0x7e85	                           jle 0x4005413	      2494	diff.c	FUNCTION_39	FOR_1
0x544e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2493	diff.c	FUNCTION_39	CALL_1
0x5452	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2493	diff.c	FUNCTION_39	CALL_1
0x5456	        0x488945f8	                mov qword [rbp - 8], rax	      2493	diff.c	FUNCTION_39	CALL_1
0x545a	      0x48837df800	                  cmp qword [rbp - 8], 0	      2493	diff.c	FUNCTION_39	CALL_1
0x545f	     0xf8565ffffff	                           jne 0x400540a	      2493	diff.c	FUNCTION_39	CALL_1
0x5465	              0x90	                                     nop	      2498	diff.c	FUNCTION_39
0x5466	              0xc9	                                   leave	      2498	diff.c	FUNCTION_39
0x5467	              0xc3	                                     ret	      2498	diff.c	FUNCTION_39
diffopt_horizontal	SWITCH,0:functions,0:WHILE,0:ELSE,0:IF,0:CALL,0:FOR,0:DO,0	9
0x3eab	              0x55	                                push rbp	      1941	diff.c	FUNCTION_33
0x3eac	          0x4889e5	                            mov rbp, rsp	      1941	diff.c	FUNCTION_33
0x3eaf	    0x8b0500000000	            mov eax, dword [0x04003ef5] 	      1942	diff.c	FUNCTION_33
0x3eb5	          0x83e008	                              and eax, 8	      1942	diff.c	FUNCTION_33
0x3eb8	            0x85c0	                           test eax, eax	      1942	diff.c	FUNCTION_33
0x3eba	           0xf95c0	                                setne al	      1942	diff.c	FUNCTION_33
0x3ebd	           0xfb6c0	                           movzx eax, al	      1942	diff.c	FUNCTION_33
0x3ec0	              0x5d	                                 pop rbp	      1943	diff.c	FUNCTION_33
0x3ec1	              0xc3	                                     ret	      1943	diff.c	FUNCTION_33
diff_get_corresponding_line_int	SWITCH,0:functions,0:WHILE,0:ELSE,0:IF,7:CALL,3:FOR,1:DO,0	171
0x5659	              0x55	                                push rbp	      2580	diff.c	FUNCTION_42
0x565a	          0x4889e5	                            mov rbp, rsp	      2580	diff.c	FUNCTION_42
0x565d	        0x4883ec30	                           sub rsp, 0x30	      2580	diff.c	FUNCTION_42
0x5661	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2580	diff.c	FUNCTION_42
0x5665	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2580	diff.c	FUNCTION_42
0x5669	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      2584	diff.c	FUNCTION_42
0x5670	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2586	diff.c	FUNCTION_42	CALL_1
0x5674	          0x4889c7	                            mov rdi, rax	      2586	diff.c	FUNCTION_42	CALL_1
0x5677	      0xe8deabffff	                   call sym.diff_buf_idx	      2586	diff.c	FUNCTION_42	CALL_1
0x567c	          0x8945f0	             mov dword [rbp - 0x10], eax	      2586	diff.c	FUNCTION_42	CALL_1
0x567f	    0x488b05000000	            mov rax, qword [0x040056c6] 	      2587	diff.c	FUNCTION_42	CALL_2
0x5686	          0x4889c7	                            mov rdi, rax	      2587	diff.c	FUNCTION_42	CALL_2
0x5689	      0xe8ccabffff	                   call sym.diff_buf_idx	      2587	diff.c	FUNCTION_42	CALL_2
0x568e	          0x8945f4	              mov dword [rbp - 0xc], eax	      2587	diff.c	FUNCTION_42	CALL_2
0x5691	        0x837df008	               cmp dword [rbp - 0x10], 8	      2588	diff.c	FUNCTION_42	IF_1
0x5695	            0x7416	                            je 0x40056ed	      2588	diff.c	FUNCTION_42	IF_1
0x5697	        0x837df408	                cmp dword [rbp - 0xc], 8	      2588	diff.c	FUNCTION_42	IF_1
0x569b	            0x7410	                            je 0x40056ed	      2588	diff.c	FUNCTION_42	IF_1
0x569d	    0x488b05000000	            mov rax, qword [0x040056e4] 	      2588	diff.c	FUNCTION_42	IF_1
0x56a4	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2588	diff.c	FUNCTION_42	IF_1
0x56a8	          0x4885c0	                           test rax, rax	      2588	diff.c	FUNCTION_42	IF_1
0x56ab	            0x7509	                           jne 0x40056f6	      2588	diff.c	FUNCTION_42	IF_1
0x56ad	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2589	diff.c	FUNCTION_42	IF_1
0x56b1	      0xe90e020000	                           jmp 0x4005904	      2589	diff.c	FUNCTION_42	IF_1
0x56b6	    0x488b05000000	            mov rax, qword [0x040056fd] 	      2591	diff.c	FUNCTION_42	IF_2
0x56bd	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2591	diff.c	FUNCTION_42	IF_2
0x56c3	            0x85c0	                           test eax, eax	      2591	diff.c	FUNCTION_42	IF_2
0x56c5	            0x740a	                            je 0x4005711	      2591	diff.c	FUNCTION_42	IF_2
0x56c7	      0xbf00000000	                              mov edi, 0	      2592	diff.c	FUNCTION_42	CALL_3
0x56cc	      0xe800000000	                          call 0x4005711	      2592	diff.c	FUNCTION_42	CALL_3
0x56d1	    0x488b05000000	            mov rax, qword [0x04005718] 	      2594	diff.c	FUNCTION_42	IF_3
0x56d8	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2594	diff.c	FUNCTION_42	IF_3
0x56dc	          0x4885c0	                           test rax, rax	      2594	diff.c	FUNCTION_42	IF_3
0x56df	            0x7509	                           jne 0x400572a	      2594	diff.c	FUNCTION_42	IF_3
0x56e1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2595	diff.c	FUNCTION_42	IF_3
0x56e5	      0xe9da010000	                           jmp 0x4005904	      2595	diff.c	FUNCTION_42	IF_3
0x56ea	    0x488b05000000	            mov rax, qword [0x04005731] 	      2597	diff.c	FUNCTION_42	FOR_1
0x56f1	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2597	diff.c	FUNCTION_42	FOR_1
0x56f5	        0x488945f8	                mov qword [rbp - 8], rax	      2597	diff.c	FUNCTION_42	FOR_1
0x56f9	      0xe9ac010000	                           jmp 0x40058ea	      2597	diff.c	FUNCTION_42	FOR_1
0x56fe	        0x488b45f8	                mov rax, qword [rbp - 8]	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x5702	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x5705	          0x4863d2	                         movsxd rdx, edx	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x5708	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x570d	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x5711	            0x7e14	                           jle 0x4005767	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x5713	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2600	diff.c	FUNCTION_42	FOR_1	IF_4
0x5716	            0x4898	                                    cdqe	      2600	diff.c	FUNCTION_42	FOR_1	IF_4
0x5718	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2600	diff.c	FUNCTION_42	FOR_1	IF_4
0x571c	          0x4829c2	                            sub rdx, rax	      2600	diff.c	FUNCTION_42	FOR_1	IF_4
0x571f	          0x4889d0	                            mov rax, rdx	      2600	diff.c	FUNCTION_42	FOR_1	IF_4
0x5722	      0xe99d010000	                           jmp 0x4005904	      2600	diff.c	FUNCTION_42	FOR_1	IF_4
0x5727	        0x488b45f8	                mov rax, qword [rbp - 8]	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x572b	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x572e	          0x4863d2	                         movsxd rdx, edx	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x5731	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x5736	        0x488b45f8	                mov rax, qword [rbp - 8]	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x573a	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x573d	          0x4863c9	                         movsxd rcx, ecx	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x5740	        0x4883c108	                              add rcx, 8	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x5744	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x5749	          0x4801d0	                            add rax, rdx	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x574c	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x5750	            0x7e6c	                           jle 0x40057fe	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x5752	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2604	diff.c	FUNCTION_42	FOR_1	IF_5
0x5756	            0x89c1	                            mov ecx, eax	      2604	diff.c	FUNCTION_42	FOR_1	IF_5
0x5758	        0x488b45f8	                mov rax, qword [rbp - 8]	      2604	diff.c	FUNCTION_42	FOR_1	IF_5
0x575c	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2604	diff.c	FUNCTION_42	FOR_1	IF_5
0x575f	          0x4863d2	                         movsxd rdx, edx	      2604	diff.c	FUNCTION_42	FOR_1	IF_5
0x5762	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2604	diff.c	FUNCTION_42	FOR_1	IF_5
0x5767	            0x29c1	                            sub ecx, eax	      2604	diff.c	FUNCTION_42	FOR_1	IF_5
0x5769	            0x89c8	                            mov eax, ecx	      2604	diff.c	FUNCTION_42	FOR_1	IF_5
0x576b	          0x8945ec	             mov dword [rbp - 0x14], eax	      2604	diff.c	FUNCTION_42	FOR_1	IF_5
0x576e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x5771	          0x4863d0	                         movsxd rdx, eax	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x5774	        0x488b45f8	                mov rax, qword [rbp - 8]	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x5778	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x577b	          0x4863c9	                         movsxd rcx, ecx	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x577e	        0x4883c108	                              add rcx, 8	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x5782	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x5787	          0x4839c2	                            cmp rdx, rax	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x578a	            0x7e16	                           jle 0x40057e2	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x578c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2606	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x5790	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2606	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x5793	          0x4863d2	                         movsxd rdx, edx	      2606	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x5796	        0x4883c208	                              add rdx, 8	      2606	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x579a	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2606	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x579f	          0x8945ec	             mov dword [rbp - 0x14], eax	      2606	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x57a2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2608	diff.c	FUNCTION_42	FOR_1	IF_5
0x57a6	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2608	diff.c	FUNCTION_42	FOR_1	IF_5
0x57a9	          0x4863d2	                         movsxd rdx, edx	      2608	diff.c	FUNCTION_42	FOR_1	IF_5
0x57ac	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2608	diff.c	FUNCTION_42	FOR_1	IF_5
0x57b1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2608	diff.c	FUNCTION_42	FOR_1	IF_5
0x57b4	            0x4898	                                    cdqe	      2608	diff.c	FUNCTION_42	FOR_1	IF_5
0x57b6	          0x4801d0	                            add rax, rdx	      2608	diff.c	FUNCTION_42	FOR_1	IF_5
0x57b9	      0xe906010000	                           jmp 0x4005904	      2608	diff.c	FUNCTION_42	FOR_1	IF_5
0x57be	        0x488b45f8	                mov rax, qword [rbp - 8]	      2610	diff.c	FUNCTION_42	FOR_1	IF_7
0x57c2	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2610	diff.c	FUNCTION_42	FOR_1	IF_7
0x57c5	          0x4863d2	                         movsxd rdx, edx	      2610	diff.c	FUNCTION_42	FOR_1	IF_7
0x57c8	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2610	diff.c	FUNCTION_42	FOR_1	IF_7
0x57cd	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2610	diff.c	FUNCTION_42	FOR_1	IF_7
0x57d1	            0x7579	                           jne 0x400588c	      2610	diff.c	FUNCTION_42	FOR_1	IF_7
0x57d3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x57d7	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x57da	          0x4863d2	                         movsxd rdx, edx	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x57dd	        0x4883c208	                              add rdx, 8	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x57e1	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x57e6	          0x4885c0	                           test rax, rax	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x57e9	            0x7561	                           jne 0x400588c	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x57eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x57ef	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x57f2	          0x4863d2	                         movsxd rdx, edx	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x57f5	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x57fa	    0x488b05000000	            mov rax, qword [0x04005841] 	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x5801	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x5805	          0x4839c2	                            cmp rdx, rax	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x5808	            0x7f42	                            jg 0x400588c	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x580a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x580e	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x5811	          0x4863d2	                         movsxd rdx, edx	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x5814	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x5819	        0x488b45f8	                mov rax, qword [rbp - 8]	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x581d	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x5820	          0x4863c9	                         movsxd rcx, ecx	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x5823	        0x4883c108	                              add rcx, 8	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x5827	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x582c	          0x4801c2	                            add rdx, rax	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x582f	    0x488b05000000	            mov rax, qword [0x04005876] 	      2614	diff.c	FUNCTION_42	FOR_1	IF_7
0x5836	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2614	diff.c	FUNCTION_42	FOR_1	IF_7
0x583a	          0x4839c2	                            cmp rdx, rax	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x583d	            0x7e0d	                           jle 0x400588c	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x583f	    0x488b05000000	            mov rax, qword [0x04005886] 	      2622	diff.c	FUNCTION_42	FOR_1	IF_7
0x5846	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2622	diff.c	FUNCTION_42	FOR_1	IF_7
0x584a	            0xeb78	                           jmp 0x4005904	      2622	diff.c	FUNCTION_42	FOR_1	IF_7
0x584c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2623	diff.c	FUNCTION_42	FOR_1
0x5850	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2623	diff.c	FUNCTION_42	FOR_1
0x5853	          0x4863d2	                         movsxd rdx, edx	      2623	diff.c	FUNCTION_42	FOR_1
0x5856	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2623	diff.c	FUNCTION_42	FOR_1
0x585b	            0x89c1	                            mov ecx, eax	      2623	diff.c	FUNCTION_42	FOR_1
0x585d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2623	diff.c	FUNCTION_42	FOR_1
0x5861	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2623	diff.c	FUNCTION_42	FOR_1
0x5864	          0x4863d2	                         movsxd rdx, edx	      2623	diff.c	FUNCTION_42	FOR_1
0x5867	        0x4883c208	                              add rdx, 8	      2623	diff.c	FUNCTION_42	FOR_1
0x586b	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2623	diff.c	FUNCTION_42	FOR_1
0x5870	             0x1c1	                            add ecx, eax	      2623	diff.c	FUNCTION_42	FOR_1
0x5872	        0x488b45f8	                mov rax, qword [rbp - 8]	      2624	diff.c	FUNCTION_42	FOR_1
0x5876	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2624	diff.c	FUNCTION_42	FOR_1
0x5879	          0x4863d2	                         movsxd rdx, edx	      2624	diff.c	FUNCTION_42	FOR_1
0x587c	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2624	diff.c	FUNCTION_42	FOR_1
0x5881	            0x89c6	                            mov esi, eax	      2623	diff.c	FUNCTION_42	FOR_1
0x5883	        0x488b45f8	                mov rax, qword [rbp - 8]	      2624	diff.c	FUNCTION_42	FOR_1
0x5887	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2624	diff.c	FUNCTION_42	FOR_1
0x588a	          0x4863d2	                         movsxd rdx, edx	      2624	diff.c	FUNCTION_42	FOR_1
0x588d	        0x4883c208	                              add rdx, 8	      2624	diff.c	FUNCTION_42	FOR_1
0x5891	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      2624	diff.c	FUNCTION_42	FOR_1
0x5896	             0x1f0	                            add eax, esi	      2623	diff.c	FUNCTION_42	FOR_1
0x5898	            0x29c1	                            sub ecx, eax	      2623	diff.c	FUNCTION_42	FOR_1
0x589a	            0x89c8	                            mov eax, ecx	      2623	diff.c	FUNCTION_42	FOR_1
0x589c	          0x8945ec	             mov dword [rbp - 0x14], eax	      2623	diff.c	FUNCTION_42	FOR_1
0x589f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2597	diff.c	FUNCTION_42	FOR_1
0x58a3	          0x488b00	                    mov rax, qword [rax]	      2597	diff.c	FUNCTION_42	FOR_1
0x58a6	        0x488945f8	                mov qword [rbp - 8], rax	      2597	diff.c	FUNCTION_42	FOR_1
0x58aa	      0x48837df800	                  cmp qword [rbp - 8], 0	      2597	diff.c	FUNCTION_42	FOR_1
0x58af	     0xf8549feffff	                           jne 0x400573e	      2597	diff.c	FUNCTION_42	FOR_1
0x58b5	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2628	diff.c	FUNCTION_42
0x58b8	            0x4898	                                    cdqe	      2628	diff.c	FUNCTION_42
0x58ba	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2628	diff.c	FUNCTION_42
0x58be	          0x4829c2	                            sub rdx, rax	      2628	diff.c	FUNCTION_42
0x58c1	          0x4889d0	                            mov rax, rdx	      2628	diff.c	FUNCTION_42
0x58c4	              0xc9	                                   leave	      2629	diff.c	FUNCTION_42
0x58c5	              0xc3	                                     ret	      2629	diff.c	FUNCTION_42
diffopt_changed	SWITCH,0:functions,0:WHILE,1:ELSE,7:IF,12:CALL,15:FOR,0:DO,0	189
0x3bd8	              0x55	                                push rbp	      1858	diff.c	FUNCTION_32
0x3bd9	          0x4889e5	                            mov rbp, rsp	      1858	diff.c	FUNCTION_32
0x3bdc	        0x4883ec30	                           sub rsp, 0x30	      1858	diff.c	FUNCTION_32
0x3be0	    0x64488b042528	                mov rax, qword fs:[0x28]	      1858	diff.c	FUNCTION_32
0x3be9	        0x488945f8	                mov qword [rbp - 8], rax	      1858	diff.c	FUNCTION_32
0x3bed	            0x31c0	                            xor eax, eax	      1858	diff.c	FUNCTION_32
0x3bef	    0xc745dc060000	               mov dword [rbp - 0x24], 6	      1860	diff.c	FUNCTION_32
0x3bf6	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1861	diff.c	FUNCTION_32
0x3bfd	    0xc745e4020000	               mov dword [rbp - 0x1c], 2	      1862	diff.c	FUNCTION_32
0x3c04	    0x488b05000000	            mov rax, qword [0x04003c4b] 	      1865	diff.c	FUNCTION_32
0x3c0b	        0x488945e8	             mov qword [rbp - 0x18], rax	      1865	diff.c	FUNCTION_32
0x3c0f	      0xe9e6010000	                           jmp 0x4003e3a	      1866	diff.c	FUNCTION_32	WHILE_1
0x3c14	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x3c18	      0xba06000000	                              mov edx, 6	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x3c1d	      0xbe00000000	                              mov esi, 0	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x3c22	          0x4889c7	                            mov rdi, rax	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x3c25	      0xe800000000	                          call 0x4003c6a	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x3c2a	            0x85c0	                           test eax, eax	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x3c2c	            0x7515	                           jne 0x4003c83	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x3c2e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1870	diff.c	FUNCTION_32	WHILE_1	IF_1
0x3c32	        0x4883c006	                              add rax, 6	      1870	diff.c	FUNCTION_32	WHILE_1	IF_1
0x3c36	        0x488945e8	             mov qword [rbp - 0x18], rax	      1870	diff.c	FUNCTION_32	WHILE_1	IF_1
0x3c3a	        0x834de001	                or dword [rbp - 0x20], 1	      1871	diff.c	FUNCTION_32	WHILE_1	IF_1
0x3c3e	      0xe980010000	                           jmp 0x4003e03	      1871	diff.c	FUNCTION_32	WHILE_1	IF_1
0x3c43	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x3c47	      0xba08000000	                              mov edx, 8	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x3c4c	      0xbe00000000	                              mov esi, 0	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x3c51	          0x4889c7	                            mov rdi, rax	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x3c54	      0xe800000000	                          call 0x4003c99	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x3c59	            0x85c0	                           test eax, eax	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x3c5b	            0x7536	                           jne 0x4003cd3	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x3c5d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x3c61	        0x4883c008	                              add rax, 8	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x3c65	           0xfb600	                   movzx eax, byte [rax]	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x3c68	           0xfb6c0	                           movzx eax, al	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x3c6b	          0x83e830	                           sub eax, 0x30	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x3c6e	          0x83f809	                              cmp eax, 9	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x3c71	            0x7720	                            ja 0x4003cd3	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x3c73	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1875	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2
0x3c77	        0x4883c008	                              add rax, 8	      1875	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2
0x3c7b	        0x488945e8	             mov qword [rbp - 0x18], rax	      1875	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2
0x3c7f	        0x488d45e8	                   lea rax, [rbp - 0x18]	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x3c83	          0x4889c7	                            mov rdi, rax	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x3c86	      0xe800000000	                          call 0x4003ccb	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x3c8b	          0x8945dc	             mov dword [rbp - 0x24], eax	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x3c8e	      0xe930010000	                           jmp 0x4003e03	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x3c93	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x3c97	      0xba05000000	                              mov edx, 5	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x3c9c	      0xbe00000000	                              mov esi, 0	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x3ca1	          0x4889c7	                            mov rdi, rax	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x3ca4	      0xe800000000	                          call 0x4003ce9	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x3ca9	            0x85c0	                           test eax, eax	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x3cab	            0x7515	                           jne 0x4003d02	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x3cad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1880	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x3cb1	        0x4883c005	                              add rax, 5	      1880	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x3cb5	        0x488945e8	             mov qword [rbp - 0x18], rax	      1880	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x3cb9	        0x834de002	                or dword [rbp - 0x20], 2	      1881	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x3cbd	      0xe901010000	                           jmp 0x4003e03	      1881	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x3cc2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x3cc6	      0xba06000000	                              mov edx, 6	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x3ccb	      0xbe00000000	                              mov esi, 0	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x3cd0	          0x4889c7	                            mov rdi, rax	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x3cd3	      0xe800000000	                          call 0x4003d18	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x3cd8	            0x85c0	                           test eax, eax	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x3cda	            0x7515	                           jne 0x4003d31	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x3cdc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1885	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x3ce0	        0x4883c006	                              add rax, 6	      1885	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x3ce4	        0x488945e8	             mov qword [rbp - 0x18], rax	      1885	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x3ce8	        0x834de004	                or dword [rbp - 0x20], 4	      1886	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x3cec	      0xe9d2000000	                           jmp 0x4003e03	      1886	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x3cf1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x3cf5	      0xba0a000000	                            mov edx, 0xa	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x3cfa	      0xbe00000000	                              mov esi, 0	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x3cff	          0x4889c7	                            mov rdi, rax	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x3d02	      0xe800000000	                          call 0x4003d47	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x3d07	            0x85c0	                           test eax, eax	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x3d09	            0x7515	                           jne 0x4003d60	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x3d0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1890	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x3d0f	        0x4883c00a	                            add rax, 0xa	      1890	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x3d13	        0x488945e8	             mov qword [rbp - 0x18], rax	      1890	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x3d17	        0x834de008	                or dword [rbp - 0x20], 8	      1891	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x3d1b	      0xe9a3000000	                           jmp 0x4003e03	      1891	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x3d20	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x3d24	      0xba08000000	                              mov edx, 8	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x3d29	      0xbe00000000	                              mov esi, 0	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x3d2e	          0x4889c7	                            mov rdi, rax	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x3d31	      0xe800000000	                          call 0x4003d76	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x3d36	            0x85c0	                           test eax, eax	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x3d38	            0x7512	                           jne 0x4003d8c	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x3d3a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1895	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x3d3e	        0x4883c008	                              add rax, 8	      1895	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x3d42	        0x488945e8	             mov qword [rbp - 0x18], rax	      1895	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x3d46	        0x834de010	             or dword [rbp - 0x20], 0x10	      1896	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x3d4a	            0xeb77	                           jmp 0x4003e03	      1896	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x3d4c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x3d50	      0xba0b000000	                            mov edx, 0xb	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x3d55	      0xbe00000000	                              mov esi, 0	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x3d5a	          0x4889c7	                            mov rdi, rax	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x3d5d	      0xe800000000	                          call 0x4003da2	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x3d62	            0x85c0	                           test eax, eax	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x3d64	            0x7533	                           jne 0x4003dd9	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x3d66	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x3d6a	        0x4883c00b	                            add rax, 0xb	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x3d6e	           0xfb600	                   movzx eax, byte [rax]	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x3d71	           0xfb6c0	                           movzx eax, al	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x3d74	          0x83e830	                           sub eax, 0x30	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x3d77	          0x83f809	                              cmp eax, 9	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x3d7a	            0x771d	                            ja 0x4003dd9	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x3d7c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1900	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7
0x3d80	        0x4883c00b	                            add rax, 0xb	      1900	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7
0x3d84	        0x488945e8	             mov qword [rbp - 0x18], rax	      1900	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7
0x3d88	        0x488d45e8	                   lea rax, [rbp - 0x18]	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x3d8c	          0x4889c7	                            mov rdi, rax	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x3d8f	      0xe800000000	                          call 0x4003dd4	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x3d94	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x3d97	            0xeb2a	                           jmp 0x4003e03	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x3d99	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x3d9d	      0xba09000000	                              mov edx, 9	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x3da2	      0xbe00000000	                              mov esi, 0	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x3da7	          0x4889c7	                            mov rdi, rax	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x3daa	      0xe800000000	                          call 0x4003def	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x3daf	            0x85c0	                           test eax, eax	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x3db1	            0x7510	                           jne 0x4003e03	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x3db3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1905	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8
0x3db7	        0x4883c009	                              add rax, 9	      1905	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8
0x3dbb	        0x488945e8	             mov qword [rbp - 0x18], rax	      1905	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8
0x3dbf	        0x834de020	             or dword [rbp - 0x20], 0x20	      1906	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8
0x3dc3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x3dc7	           0xfb600	                   movzx eax, byte [rax]	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x3dca	            0x3c2c	                            cmp al, 0x2c	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x3dcc	            0x7415	                            je 0x4003e23	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x3dce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x3dd2	           0xfb600	                   movzx eax, byte [rax]	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x3dd5	            0x84c0	                             test al, al	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x3dd7	            0x740a	                            je 0x4003e23	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x3dd9	      0xb800000000	                              mov eax, 0	      1909	diff.c	FUNCTION_32	WHILE_1	IF_9
0x3dde	      0xe9b2000000	                           jmp 0x4003ed5	      1909	diff.c	FUNCTION_32	WHILE_1	IF_9
0x3de3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1910	diff.c	FUNCTION_32	WHILE_1	IF_10
0x3de7	           0xfb600	                   movzx eax, byte [rax]	      1910	diff.c	FUNCTION_32	WHILE_1	IF_10
0x3dea	            0x3c2c	                            cmp al, 0x2c	      1910	diff.c	FUNCTION_32	WHILE_1	IF_10
0x3dec	            0x750c	                           jne 0x4003e3a	      1910	diff.c	FUNCTION_32	WHILE_1	IF_10
0x3dee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1911	diff.c	FUNCTION_32	WHILE_1	IF_10
0x3df2	        0x4883c001	                              add rax, 1	      1911	diff.c	FUNCTION_32	WHILE_1	IF_10
0x3df6	        0x488945e8	             mov qword [rbp - 0x18], rax	      1911	diff.c	FUNCTION_32	WHILE_1	IF_10
0x3dfa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1866	diff.c	FUNCTION_32	WHILE_1
0x3dfe	           0xfb600	                   movzx eax, byte [rax]	      1866	diff.c	FUNCTION_32	WHILE_1
0x3e01	            0x84c0	                             test al, al	      1866	diff.c	FUNCTION_32	WHILE_1
0x3e03	     0xf850bfeffff	                           jne 0x4003c54	      1866	diff.c	FUNCTION_32	WHILE_1
0x3e09	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1915	diff.c	FUNCTION_32	IF_11
0x3e0c	          0x83e008	                              and eax, 8	      1915	diff.c	FUNCTION_32	IF_11
0x3e0f	            0x85c0	                           test eax, eax	      1915	diff.c	FUNCTION_32	IF_11
0x3e11	            0x7411	                            je 0x4003e64	      1915	diff.c	FUNCTION_32	IF_11
0x3e13	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1915	diff.c	FUNCTION_32	IF_11
0x3e16	          0x83e010	                           and eax, 0x10	      1915	diff.c	FUNCTION_32	IF_11
0x3e19	            0x85c0	                           test eax, eax	      1915	diff.c	FUNCTION_32	IF_11
0x3e1b	            0x7407	                            je 0x4003e64	      1915	diff.c	FUNCTION_32	IF_11
0x3e1d	      0xb800000000	                              mov eax, 0	      1916	diff.c	FUNCTION_32	IF_11
0x3e22	            0xeb71	                           jmp 0x4003ed5	      1916	diff.c	FUNCTION_32	IF_11
0x3e24	    0x8b0500000000	            mov eax, dword [0x04003e6a] 	      1919	diff.c	FUNCTION_32	IF_12
0x3e2a	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      1919	diff.c	FUNCTION_32	IF_12
0x3e2d	            0x742d	                            je 0x4003e9c	      1919	diff.c	FUNCTION_32	IF_12
0x3e2f	    0x488b05000000	            mov rax, qword [0x04003e76] 	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x3e36	        0x488945f0	             mov qword [rbp - 0x10], rax	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x3e3a	            0xeb19	                           jmp 0x4003e95	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x3e3c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1921	diff.c	FUNCTION_32	IF_12
0x3e40	    0xc780a0000000	               mov dword [rax + 0xa0], 1	      1921	diff.c	FUNCTION_32	IF_12
0x3e4a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x3e4e	          0x488b00	                    mov rax, qword [rax]	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x3e51	        0x488945f0	             mov qword [rbp - 0x10], rax	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x3e55	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x3e5a	            0x75e0	                           jne 0x4003e7c	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x3e5c	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1923	diff.c	FUNCTION_32
0x3e5f	    0x890500000000	            mov dword [0x04003ea5], eax 	      1923	diff.c	FUNCTION_32
0x3e65	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1924	diff.c	FUNCTION_32
0x3e68	    0x890500000000	            mov dword [0x04003eae], eax 	      1924	diff.c	FUNCTION_32
0x3e6e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1925	diff.c	FUNCTION_32
0x3e71	    0x890500000000	            mov dword [0x04003eb7], eax 	      1925	diff.c	FUNCTION_32
0x3e77	      0xbf01000000	                              mov edi, 1	      1927	diff.c	FUNCTION_32	CALL_14
0x3e7c	      0xe828d1ffff	                    call sym.diff_redraw	      1927	diff.c	FUNCTION_32	CALL_14
0x3e81	      0xbe00000000	                              mov esi, 0	      1931	diff.c	FUNCTION_32	CALL_15
0x3e86	      0xbf00000000	                              mov edi, 0	      1931	diff.c	FUNCTION_32	CALL_15
0x3e8b	      0xe800000000	                          call 0x4003ed0	      1931	diff.c	FUNCTION_32	CALL_15
0x3e90	      0xb801000000	                              mov eax, 1	      1933	diff.c	FUNCTION_32
0x3e95	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1934	diff.c	FUNCTION_32
0x3e99	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1934	diff.c	FUNCTION_32
0x3ea2	            0x7405	                            je 0x4003ee9	      1934	diff.c	FUNCTION_32
0x3ea4	      0xe800000000	                          call 0x4003ee9	      1934	diff.c	FUNCTION_32
0x3ea9	              0xc9	                                   leave	      1934	diff.c	FUNCTION_32
0x3eaa	              0xc3	                                     ret	      1934	diff.c	FUNCTION_32
diff_check	SWITCH,0:functions,0:WHILE,0:ELSE,1:IF,17:CALL,4:FOR,4:DO,0	223
0x2f92	              0x55	                                push rbp	      1522	diff.c	FUNCTION_26
0x2f93	          0x4889e5	                            mov rbp, rsp	      1522	diff.c	FUNCTION_26
0x2f96	        0x4883ec40	                           sub rsp, 0x40	      1522	diff.c	FUNCTION_26
0x2f9a	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1522	diff.c	FUNCTION_26
0x2f9e	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1522	diff.c	FUNCTION_26
0x2fa2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1527	diff.c	FUNCTION_26
0x2fa6	        0x488b4008	                mov rax, qword [rax + 8]	      1527	diff.c	FUNCTION_26
0x2faa	        0x488945f8	                mov qword [rbp - 8], rax	      1527	diff.c	FUNCTION_26
0x2fae	    0x488b05000000	            mov rax, qword [0x04002ff5] 	      1530	diff.c	FUNCTION_26	IF_1
0x2fb5	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1530	diff.c	FUNCTION_26	IF_1
0x2fbb	            0x85c0	                           test eax, eax	      1530	diff.c	FUNCTION_26	IF_1
0x2fbd	            0x740a	                            je 0x4003009	      1530	diff.c	FUNCTION_26	IF_1
0x2fbf	      0xbf00000000	                              mov edi, 0	      1531	diff.c	FUNCTION_26	CALL_1
0x2fc4	      0xe800000000	                          call 0x4003009	      1531	diff.c	FUNCTION_26	CALL_1
0x2fc9	    0x488b05000000	            mov rax, qword [0x04003010] 	      1533	diff.c	FUNCTION_26	IF_2
0x2fd0	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1533	diff.c	FUNCTION_26	IF_2
0x2fd4	          0x4885c0	                           test rax, rax	      1533	diff.c	FUNCTION_26	IF_2
0x2fd7	            0x740e	                            je 0x4003027	      1533	diff.c	FUNCTION_26	IF_2
0x2fd9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1533	diff.c	FUNCTION_26	IF_2
0x2fdd	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      1533	diff.c	FUNCTION_26	IF_2
0x2fe3	            0x85c0	                           test eax, eax	      1533	diff.c	FUNCTION_26	IF_2
0x2fe5	            0x750a	                           jne 0x4003031	      1533	diff.c	FUNCTION_26	IF_2
0x2fe7	      0xb800000000	                              mov eax, 0	      1534	diff.c	FUNCTION_26	IF_2
0x2fec	      0xe9e9020000	                           jmp 0x400331a	      1534	diff.c	FUNCTION_26	IF_2
0x2ff1	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1537	diff.c	FUNCTION_26	IF_3
0x2ff6	            0x7e11	                           jle 0x4003049	      1537	diff.c	FUNCTION_26	IF_3
0x2ff8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1537	diff.c	FUNCTION_26	IF_3
0x2ffc	          0x488b00	                    mov rax, qword [rax]	      1537	diff.c	FUNCTION_26	IF_3
0x2fff	        0x4883c001	                              add rax, 1	      1537	diff.c	FUNCTION_26	IF_3
0x3003	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1537	diff.c	FUNCTION_26	IF_3
0x3007	            0x7d0a	                           jge 0x4003053	      1537	diff.c	FUNCTION_26	IF_3
0x3009	      0xb800000000	                              mov eax, 0	      1538	diff.c	FUNCTION_26	IF_3
0x300e	      0xe9c7020000	                           jmp 0x400331a	      1538	diff.c	FUNCTION_26	IF_3
0x3013	        0x488b45f8	                mov rax, qword [rbp - 8]	      1540	diff.c	FUNCTION_26	CALL_2
0x3017	          0x4889c7	                            mov rdi, rax	      1540	diff.c	FUNCTION_26	CALL_2
0x301a	      0xe83bd2ffff	                   call sym.diff_buf_idx	      1540	diff.c	FUNCTION_26	CALL_2
0x301f	          0x8945ec	             mov dword [rbp - 0x14], eax	      1540	diff.c	FUNCTION_26	CALL_2
0x3022	        0x837dec08	               cmp dword [rbp - 0x14], 8	      1541	diff.c	FUNCTION_26	IF_4
0x3026	            0x750a	                           jne 0x4003072	      1541	diff.c	FUNCTION_26	IF_4
0x3028	      0xb800000000	                              mov eax, 0	      1542	diff.c	FUNCTION_26	IF_4
0x302d	      0xe9a8020000	                           jmp 0x400331a	      1542	diff.c	FUNCTION_26	IF_4
0x3032	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x3036	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x303a	    0x41b900000000	                              mov r9d, 0	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x3040	    0x41b801000000	                              mov r8d, 1	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x3046	      0xb900000000	                              mov ecx, 0	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x304b	      0xba00000000	                              mov edx, 0	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x3050	          0x4889c7	                            mov rdi, rax	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x3053	      0xe800000000	                          call 0x4003098	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x3058	            0x85c0	                           test eax, eax	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x305a	            0x740a	                            je 0x40030a6	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x305c	      0xb800000000	                              mov eax, 0	      1547	diff.c	FUNCTION_26	IF_5
0x3061	      0xe974020000	                           jmp 0x400331a	      1547	diff.c	FUNCTION_26	IF_5
0x3066	    0x488b05000000	            mov rax, qword [0x040030ad] 	      1551	diff.c	FUNCTION_26	FOR_1
0x306d	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1551	diff.c	FUNCTION_26	FOR_1
0x3071	        0x488945f0	             mov qword [rbp - 0x10], rax	      1551	diff.c	FUNCTION_26	FOR_1
0x3075	            0xeb36	                           jmp 0x40030ed	      1551	diff.c	FUNCTION_26	FOR_1
0x3077	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x307b	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x307e	          0x4863d2	                         movsxd rdx, edx	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x3081	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x3086	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x308a	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x308d	          0x4863c9	                         movsxd rcx, ecx	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x3090	        0x4883c108	                              add rcx, 8	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x3094	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x3099	          0x4801d0	                            add rax, rdx	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x309c	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x30a0	            0x7d14	                           jge 0x40030f6	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x30a2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1551	diff.c	FUNCTION_26	FOR_1
0x30a6	          0x488b00	                    mov rax, qword [rax]	      1551	diff.c	FUNCTION_26	FOR_1
0x30a9	        0x488945f0	             mov qword [rbp - 0x10], rax	      1551	diff.c	FUNCTION_26	FOR_1
0x30ad	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1551	diff.c	FUNCTION_26	FOR_1
0x30b2	            0x75c3	                           jne 0x40030b7	      1551	diff.c	FUNCTION_26	FOR_1
0x30b4	            0xeb01	                           jmp 0x40030f7	      1551	diff.c	FUNCTION_26	FOR_1
0x30b6	              0x90	                                     nop	      1553	diff.c	FUNCTION_26	FOR_1	IF_6
0x30b7	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1554	diff.c	FUNCTION_26	IF_7
0x30bc	            0x7415	                            je 0x4003113	      1554	diff.c	FUNCTION_26	IF_7
0x30be	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1554	diff.c	FUNCTION_26	IF_7
0x30c2	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1554	diff.c	FUNCTION_26	IF_7
0x30c5	          0x4863d2	                         movsxd rdx, edx	      1554	diff.c	FUNCTION_26	IF_7
0x30c8	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1554	diff.c	FUNCTION_26	IF_7
0x30cd	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1554	diff.c	FUNCTION_26	IF_7
0x30d1	            0x7e0a	                           jle 0x400311d	      1554	diff.c	FUNCTION_26	IF_7
0x30d3	      0xb800000000	                              mov eax, 0	      1555	diff.c	FUNCTION_26	IF_7
0x30d8	      0xe9fd010000	                           jmp 0x400331a	      1555	diff.c	FUNCTION_26	IF_7
0x30dd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1557	diff.c	FUNCTION_26	IF_8
0x30e1	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1557	diff.c	FUNCTION_26	IF_8
0x30e4	          0x4863d2	                         movsxd rdx, edx	      1557	diff.c	FUNCTION_26	IF_8
0x30e7	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1557	diff.c	FUNCTION_26	IF_8
0x30ec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1557	diff.c	FUNCTION_26	IF_8
0x30f0	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      1557	diff.c	FUNCTION_26	IF_8
0x30f3	          0x4863c9	                         movsxd rcx, ecx	      1557	diff.c	FUNCTION_26	IF_8
0x30f6	        0x4883c108	                              add rcx, 8	      1557	diff.c	FUNCTION_26	IF_8
0x30fa	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1557	diff.c	FUNCTION_26	IF_8
0x30ff	          0x4801d0	                            add rax, rdx	      1557	diff.c	FUNCTION_26	IF_8
0x3102	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1557	diff.c	FUNCTION_26	IF_8
0x3106	     0xf8e36010000	                           jle 0x4003282	      1557	diff.c	FUNCTION_26	IF_8
0x310c	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1559	diff.c	FUNCTION_26	IF_8
0x3113	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1564	diff.c	FUNCTION_26	IF_8
0x311a	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1565	diff.c	FUNCTION_26	IF_8	FOR_2
0x3121	      0xe983000000	                           jmp 0x40031e9	      1565	diff.c	FUNCTION_26	IF_8	FOR_2
0x3126	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x3129	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x312c	            0x7477	                            je 0x40031e5	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x312e	    0x488b05000000	            mov rax, qword [0x04003175] 	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x3135	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x3138	          0x4863d2	                         movsxd rdx, edx	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x313b	        0x4883c20c	                            add rdx, 0xc	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x313f	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x3143	          0x4885c0	                           test rax, rax	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x3146	            0x745d	                            je 0x40031e5	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x3148	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x314c	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x314f	          0x4863d2	                         movsxd rdx, edx	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x3152	        0x4883c208	                              add rdx, 8	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x3156	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x315b	          0x4885c0	                           test rax, rax	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x315e	            0x7509	                           jne 0x40031a9	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x3160	    0xc745e8010000	               mov dword [rbp - 0x18], 1	      1569	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x3167	            0xeb3c	                           jmp 0x40031e5	      1569	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x3169	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x316d	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x3170	          0x4863d2	                         movsxd rdx, edx	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x3173	        0x4883c208	                              add rdx, 8	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x3177	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x317c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x3180	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x3183	          0x4863c9	                         movsxd rcx, ecx	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x3186	        0x4883c108	                              add rcx, 8	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x318a	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x318f	          0x4839c2	                            cmp rdx, rax	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x3192	            0x740a	                            je 0x40031de	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x3194	      0xb8ffffffff	                     mov eax, 0xffffffff	      1573	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x3199	      0xe93c010000	                           jmp 0x400331a	      1573	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x319e	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      1574	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1
0x31a5	        0x8345e001	               add dword [rbp - 0x20], 1	      1565	diff.c	FUNCTION_26	IF_8	FOR_2
0x31a9	        0x837de007	               cmp dword [rbp - 0x20], 7	      1565	diff.c	FUNCTION_26	IF_8	FOR_2
0x31ad	     0xf8e73ffffff	                           jle 0x4003166	      1565	diff.c	FUNCTION_26	IF_8	FOR_2
0x31b3	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1577	diff.c	FUNCTION_26	IF_8	IF_12
0x31b7	            0x746f	                            je 0x4003268	      1577	diff.c	FUNCTION_26	IF_8	IF_12
0x31b9	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1581	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3
0x31c0	            0xeb60	                           jmp 0x4003262	      1581	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3
0x31c2	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x31c5	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x31c8	            0x7454	                            je 0x400325e	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x31ca	    0x488b05000000	            mov rax, qword [0x04003211] 	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x31d1	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x31d4	          0x4863d2	                         movsxd rdx, edx	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x31d7	        0x4883c20c	                            add rdx, 0xc	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x31db	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x31df	          0x4885c0	                           test rax, rax	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x31e2	            0x743a	                            je 0x400325e	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x31e4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x31e8	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x31eb	          0x4863d2	                         movsxd rdx, edx	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x31ee	        0x4883c208	                              add rdx, 8	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x31f2	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x31f7	          0x4885c0	                           test rax, rax	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x31fa	            0x7422	                            je 0x400325e	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x31fc	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x31ff	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x3202	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x3206	            0x89ce	                            mov esi, ecx	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x3208	          0x4889c7	                            mov rdi, rax	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x320b	      0xe8cc000000	               call sym.diff_equal_entry	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x3210	            0x85c0	                           test eax, eax	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x3212	            0x750a	                           jne 0x400325e	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x3214	      0xb8ffffffff	                     mov eax, 0xffffffff	      1585	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14
0x3219	      0xe9bc000000	                           jmp 0x400331a	      1585	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14
0x321e	        0x8345e001	               add dword [rbp - 0x20], 1	      1581	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3
0x3222	        0x837de007	               cmp dword [rbp - 0x20], 7	      1581	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3
0x3226	            0x7e9a	                           jle 0x4003202	      1581	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3
0x3228	        0x837de800	               cmp dword [rbp - 0x18], 0	      1592	diff.c	FUNCTION_26	IF_8	IF_15
0x322c	            0x750a	                           jne 0x4003278	      1592	diff.c	FUNCTION_26	IF_8	IF_15
0x322e	      0xb800000000	                              mov eax, 0	      1593	diff.c	FUNCTION_26	IF_8	IF_15
0x3233	      0xe9a2000000	                           jmp 0x400331a	      1593	diff.c	FUNCTION_26	IF_8	IF_15
0x3238	      0xb8feffffff	                     mov eax, 0xfffffffe	      1594	diff.c	FUNCTION_26	IF_8
0x323d	      0xe998000000	                           jmp 0x400331a	      1594	diff.c	FUNCTION_26	IF_8
0x3242	    0x8b0500000000	            mov eax, dword [0x04003288] 	      1598	diff.c	FUNCTION_26	IF_16
0x3248	          0x83e001	                              and eax, 1	      1598	diff.c	FUNCTION_26	IF_16
0x324b	            0x85c0	                           test eax, eax	      1598	diff.c	FUNCTION_26	IF_16
0x324d	            0x750a	                           jne 0x4003299	      1598	diff.c	FUNCTION_26	IF_16
0x324f	      0xb800000000	                              mov eax, 0	      1599	diff.c	FUNCTION_26	IF_16
0x3254	      0xe981000000	                           jmp 0x400331a	      1599	diff.c	FUNCTION_26	IF_16
0x3259	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1603	diff.c	FUNCTION_26
0x3260	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1604	diff.c	FUNCTION_26	FOR_4
0x3267	            0xeb51	                           jmp 0x40032fa	      1604	diff.c	FUNCTION_26	FOR_4
0x3269	    0x488b05000000	            mov rax, qword [0x040032b0] 	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x3270	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x3273	          0x4863d2	                         movsxd rdx, edx	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x3276	        0x4883c20c	                            add rdx, 0xc	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x327a	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x327e	          0x4885c0	                           test rax, rax	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x3281	            0x7433	                            je 0x40032f6	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x3283	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x3287	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x328a	          0x4863d2	                         movsxd rdx, edx	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x328d	        0x4883c208	                              add rdx, 8	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x3291	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x3296	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x3299	            0x4898	                                    cdqe	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x329b	          0x4839c2	                            cmp rdx, rax	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x329e	            0x7e16	                           jle 0x40032f6	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x32a0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x32a4	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x32a7	          0x4863d2	                         movsxd rdx, edx	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x32aa	        0x4883c208	                              add rdx, 8	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x32ae	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x32b3	          0x8945dc	             mov dword [rbp - 0x24], eax	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x32b6	        0x8345e001	               add dword [rbp - 0x20], 1	      1604	diff.c	FUNCTION_26	FOR_4
0x32ba	        0x837de007	               cmp dword [rbp - 0x20], 7	      1604	diff.c	FUNCTION_26	FOR_4
0x32be	            0x7ea9	                           jle 0x40032a9	      1604	diff.c	FUNCTION_26	FOR_4
0x32c0	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1607	diff.c	FUNCTION_26
0x32c3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1607	diff.c	FUNCTION_26
0x32c7	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      1607	diff.c	FUNCTION_26
0x32ca	          0x4863c9	                         movsxd rcx, ecx	      1607	diff.c	FUNCTION_26
0x32cd	        0x4883c108	                              add rcx, 8	      1607	diff.c	FUNCTION_26
0x32d1	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1607	diff.c	FUNCTION_26
0x32d6	            0x29c2	                            sub edx, eax	      1607	diff.c	FUNCTION_26
0x32d8	            0x89d0	                            mov eax, edx	      1607	diff.c	FUNCTION_26
0x32da	              0xc9	                                   leave	      1608	diff.c	FUNCTION_26
0x32db	              0xc3	                                     ret	      1608	diff.c	FUNCTION_26
ex_diffsplit	SWITCH,0:functions,0:WHILE,0:ELSE,0:IF,4:CALL,11:FOR,0:DO,0	86
0x1e89	              0x55	                                push rbp	      1080	diff.c	FUNCTION_18
0x1e8a	          0x4889e5	                            mov rbp, rsp	      1080	diff.c	FUNCTION_18
0x1e8d	              0x53	                                push rbx	      1080	diff.c	FUNCTION_18
0x1e8e	        0x4883ec48	                           sub rsp, 0x48	      1080	diff.c	FUNCTION_18
0x1e92	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1080	diff.c	FUNCTION_18
0x1e96	    0x64488b042528	                mov rax, qword fs:[0x28]	      1080	diff.c	FUNCTION_18
0x1e9f	        0x488945e8	             mov qword [rbp - 0x18], rax	      1080	diff.c	FUNCTION_18
0x1ea3	            0x31c0	                            xor eax, eax	      1080	diff.c	FUNCTION_18
0x1ea5	    0x488b05000000	            mov rax, qword [0x04001eec] 	      1081	diff.c	FUNCTION_18
0x1eac	        0x488945c8	             mov qword [rbp - 0x38], rax	      1081	diff.c	FUNCTION_18
0x1eb0	    0x488b15000000	            mov rdx, qword [0x04001ef7] 	      1084	diff.c	FUNCTION_18	CALL_1
0x1eb7	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1084	diff.c	FUNCTION_18	CALL_1
0x1ebb	          0x4889d6	                            mov rsi, rdx	      1084	diff.c	FUNCTION_18	CALL_1
0x1ebe	          0x4889c7	                            mov rdi, rax	      1084	diff.c	FUNCTION_18	CALL_1
0x1ec1	      0xe800000000	                          call 0x4001f06	      1084	diff.c	FUNCTION_18	CALL_1
0x1ec6	    0xc70500000000	               mov dword [0x04001f10], 1	      1086	diff.c	FUNCTION_18
0x1ed0	      0xe800000000	                          call 0x4001f15	      1089	diff.c	FUNCTION_18	CALL_2
0x1ed5	    0x488b05000000	            mov rax, qword [0x04001f1c] 	      1090	diff.c	FUNCTION_18	CALL_3
0x1edc	          0x4889c7	                            mov rdi, rax	      1090	diff.c	FUNCTION_18	CALL_3
0x1edf	      0xe800000000	                          call 0x4001f24	      1090	diff.c	FUNCTION_18	CALL_3
0x1ee4	    0xc70500000000	               mov dword [0x04001f2e], 0	      1093	diff.c	FUNCTION_18
0x1eee	    0x8b0500000000	            mov eax, dword [0x04001f34] 	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x1ef4	          0x83e010	                           and eax, 0x10	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x1ef7	            0x85c0	                           test eax, eax	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x1ef9	            0x7407	                            je 0x4001f42	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x1efb	      0xb802000000	                              mov eax, 2	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x1f00	            0xeb05	                           jmp 0x4001f47	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x1f02	      0xb800000000	                              mov eax, 0	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x1f07	            0x89c6	                            mov esi, eax	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x1f09	      0xbf00000000	                              mov edi, 0	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x1f0e	      0xe800000000	                          call 0x4001f53	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x1f13	            0x85c0	                           test eax, eax	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x1f15	     0xf84c5000000	                            je 0x4002020	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x1f1b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1098	diff.c	FUNCTION_18	IF_1
0x1f1f	    0xc740209a0100	          mov dword [rax + 0x20], 0x19a 	      1098	diff.c	FUNCTION_18	IF_1
0x1f26	    0x488b05000000	            mov rax, qword [0x04001f6d] 	      1099	diff.c	FUNCTION_18	IF_1
0x1f2d	    0xc780c0010000	              mov dword [rax + 0x1c0], 1	      1099	diff.c	FUNCTION_18	IF_1
0x1f37	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1100	diff.c	FUNCTION_18	IF_1	CALL_5
0x1f3b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1100	diff.c	FUNCTION_18	IF_1	CALL_5
0x1f3f	          0x4889d6	                            mov rsi, rdx	      1100	diff.c	FUNCTION_18	IF_1	CALL_5
0x1f42	          0x4889c7	                            mov rdi, rax	      1100	diff.c	FUNCTION_18	IF_1	CALL_5
0x1f45	      0xe800000000	                          call 0x4001f8a	      1100	diff.c	FUNCTION_18	IF_1	CALL_5
0x1f4a	    0x488b05000000	            mov rax, qword [0x04001f91] 	      1102	diff.c	FUNCTION_18	IF_1	IF_2
0x1f51	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      1102	diff.c	FUNCTION_18	IF_1	IF_2
0x1f55	     0xf8485000000	                            je 0x4002020	      1102	diff.c	FUNCTION_18	IF_1	IF_2
0x1f5b	    0x488b05000000	            mov rax, qword [0x04001fa2] 	      1105	diff.c	FUNCTION_18	IF_1	IF_2	CALL_6
0x1f62	      0xbe01000000	                              mov esi, 1	      1105	diff.c	FUNCTION_18	IF_1	IF_2	CALL_6
0x1f67	          0x4889c7	                            mov rdi, rax	      1105	diff.c	FUNCTION_18	IF_1	IF_2	CALL_6
0x1f6a	      0xe800000000	                          call 0x4001faf	      1105	diff.c	FUNCTION_18	IF_1	IF_2	CALL_6
0x1f6f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1106	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_7
0x1f73	          0x4889c7	                            mov rdi, rax	      1106	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_7
0x1f76	      0xe800000000	                          call 0x4001fbb	      1106	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_7
0x1f7b	            0x85c0	                           test eax, eax	      1106	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_7
0x1f7d	            0x7443	                            je 0x4002002	      1106	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_7
0x1f7f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1108	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_8
0x1f83	      0xbe01000000	                              mov esi, 1	      1108	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_8
0x1f88	          0x4889c7	                            mov rdi, rax	      1108	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_8
0x1f8b	      0xe800000000	                          call 0x4001fd0	      1108	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_8
0x1f90	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1110	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_9
0x1f94	          0x4889c7	                            mov rdi, rax	      1110	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_9
0x1f97	      0xe800000000	                          call 0x4001fdc	      1110	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_9
0x1f9c	            0x85c0	                           test eax, eax	      1110	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_9
0x1f9e	            0x7422	                            je 0x4002002	      1110	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_9
0x1fa0	    0x488b1d000000	            mov rbx, qword [0x04001fe7] 	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x1fa7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x1fab	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x1faf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x1fb3	          0x4889d6	                            mov rsi, rdx	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x1fb6	          0x4889c7	                            mov rdi, rax	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x1fb9	      0xe800000000	                          call 0x4001ffe	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x1fbe	        0x48894338	             mov qword [rbx + 0x38], rax	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x1fc2	    0x488b05000000	            mov rax, qword [0x04002009] 	      1117	diff.c	FUNCTION_18	IF_1	IF_2	CALL_11
0x1fc9	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      1117	diff.c	FUNCTION_18	IF_1	IF_2	CALL_11
0x1fcf	    0x488b05000000	            mov rax, qword [0x04002016] 	      1117	diff.c	FUNCTION_18	IF_1	IF_2	CALL_11
0x1fd6	            0x89d6	                            mov esi, edx	      1117	diff.c	FUNCTION_18	IF_1	IF_2	CALL_11
0x1fd8	          0x4889c7	                            mov rdi, rax	      1117	diff.c	FUNCTION_18	IF_1	IF_2	CALL_11
0x1fdb	      0xe800000000	                          call 0x4002020	      1117	diff.c	FUNCTION_18	IF_1	IF_2	CALL_11
0x1fe0	              0x90	                                     nop	      1120	diff.c	FUNCTION_18
0x1fe1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1120	diff.c	FUNCTION_18
0x1fe5	    0x644833042528	                xor rax, qword fs:[0x28]	      1120	diff.c	FUNCTION_18
0x1fee	            0x7405	                            je 0x4002035	      1120	diff.c	FUNCTION_18
0x1ff0	      0xe800000000	                          call 0x4002035	      1120	diff.c	FUNCTION_18
0x1ff5	        0x4883c448	                           add rsp, 0x48	      1120	diff.c	FUNCTION_18
0x1ff9	              0x5b	                                 pop rbx	      1120	diff.c	FUNCTION_18
0x1ffa	              0x5d	                                 pop rbp	      1120	diff.c	FUNCTION_18
0x1ffb	              0xc3	                                     ret	      1120	diff.c	FUNCTION_18
diff_infold	SWITCH,0:functions,0:WHILE,0:ELSE,1:IF,8:CALL,1:FOR,2:DO,0	97
0x4451	              0x55	                                push rbp	      2093	diff.c	FUNCTION_36
0x4452	          0x4889e5	                            mov rbp, rsp	      2093	diff.c	FUNCTION_36
0x4455	        0x4883ec30	                           sub rsp, 0x30	      2093	diff.c	FUNCTION_36
0x4459	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2093	diff.c	FUNCTION_36
0x445d	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2093	diff.c	FUNCTION_36
0x4461	    0xc745f0ffffff	     mov dword [rbp - 0x10], 0xffffffff 	      2095	diff.c	FUNCTION_36
0x4468	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      2096	diff.c	FUNCTION_36
0x446f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2100	diff.c	FUNCTION_36	IF_1
0x4473	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      2100	diff.c	FUNCTION_36	IF_1
0x4479	            0x85c0	                           test eax, eax	      2100	diff.c	FUNCTION_36	IF_1
0x447b	            0x750a	                           jne 0x40044c7	      2100	diff.c	FUNCTION_36	IF_1
0x447d	      0xb800000000	                              mov eax, 0	      2101	diff.c	FUNCTION_36	IF_1
0x4482	      0xe934010000	                           jmp 0x40045fb	      2101	diff.c	FUNCTION_36	IF_1
0x4487	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      2103	diff.c	FUNCTION_36	FOR_1
0x448e	            0xeb4f	                           jmp 0x400451f	      2103	diff.c	FUNCTION_36	FOR_1
0x4490	    0x488b05000000	            mov rax, qword [0x040044d7] 	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x4497	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x449a	          0x4863d2	                         movsxd rdx, edx	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x449d	        0x4883c20c	                            add rdx, 0xc	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x44a1	        0x488b14d0	            mov rdx, qword [rax + rdx*8]	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x44a5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x44a9	        0x488b4008	                mov rax, qword [rax + 8]	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x44ad	          0x4839c2	                            cmp rdx, rax	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x44b0	            0x7508	                           jne 0x40044fa	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x44b2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2106	diff.c	FUNCTION_36	FOR_1	IF_2
0x44b5	          0x8945f0	             mov dword [rbp - 0x10], eax	      2106	diff.c	FUNCTION_36	FOR_1	IF_2
0x44b8	            0xeb21	                           jmp 0x400451b	      2106	diff.c	FUNCTION_36	FOR_1	IF_2
0x44ba	    0x488b05000000	            mov rax, qword [0x04004501] 	      2107	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x44c1	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2107	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x44c4	          0x4863d2	                         movsxd rdx, edx	      2107	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x44c7	        0x4883c20c	                            add rdx, 0xc	      2107	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x44cb	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      2107	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x44cf	          0x4885c0	                           test rax, rax	      2107	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x44d2	            0x7407	                            je 0x400451b	      2107	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x44d4	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x44db	        0x8345ec01	               add dword [rbp - 0x14], 1	      2103	diff.c	FUNCTION_36	FOR_1
0x44df	        0x837dec07	               cmp dword [rbp - 0x14], 7	      2103	diff.c	FUNCTION_36	FOR_1
0x44e3	            0x7eab	                           jle 0x40044d0	      2103	diff.c	FUNCTION_36	FOR_1
0x44e5	        0x837df0ff	cmp dword [rbp - 0x10], 0xffffffffffffffff	      2112	diff.c	FUNCTION_36	IF_4
0x44e9	            0x7406	                            je 0x4004531	      2112	diff.c	FUNCTION_36	IF_4
0x44eb	        0x837df400	                cmp dword [rbp - 0xc], 0	      2112	diff.c	FUNCTION_36	IF_4
0x44ef	            0x750a	                           jne 0x400453b	      2112	diff.c	FUNCTION_36	IF_4
0x44f1	      0xb800000000	                              mov eax, 0	      2113	diff.c	FUNCTION_36	IF_4
0x44f6	      0xe9c0000000	                           jmp 0x40045fb	      2113	diff.c	FUNCTION_36	IF_4
0x44fb	    0x488b05000000	            mov rax, qword [0x04004542] 	      2115	diff.c	FUNCTION_36	IF_5
0x4502	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2115	diff.c	FUNCTION_36	IF_5
0x4508	            0x85c0	                           test eax, eax	      2115	diff.c	FUNCTION_36	IF_5
0x450a	            0x740a	                            je 0x4004556	      2115	diff.c	FUNCTION_36	IF_5
0x450c	      0xbf00000000	                              mov edi, 0	      2116	diff.c	FUNCTION_36	CALL_1
0x4511	      0xe800000000	                          call 0x4004556	      2116	diff.c	FUNCTION_36	CALL_1
0x4516	    0x488b05000000	            mov rax, qword [0x0400455d] 	      2119	diff.c	FUNCTION_36	IF_6
0x451d	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2119	diff.c	FUNCTION_36	IF_6
0x4521	          0x4885c0	                           test rax, rax	      2119	diff.c	FUNCTION_36	IF_6
0x4524	            0x750a	                           jne 0x4004570	      2119	diff.c	FUNCTION_36	IF_6
0x4526	      0xb801000000	                              mov eax, 1	      2120	diff.c	FUNCTION_36	IF_6
0x452b	      0xe98b000000	                           jmp 0x40045fb	      2120	diff.c	FUNCTION_36	IF_6
0x4530	    0x488b05000000	            mov rax, qword [0x04004577] 	      2122	diff.c	FUNCTION_36	FOR_2
0x4537	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2122	diff.c	FUNCTION_36	FOR_2
0x453b	        0x488945f8	                mov qword [rbp - 8], rax	      2122	diff.c	FUNCTION_36	FOR_2
0x453f	            0xeb6b	                           jmp 0x40045ec	      2122	diff.c	FUNCTION_36	FOR_2
0x4541	        0x488b45f8	                mov rax, qword [rbp - 8]	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4545	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4548	          0x4863d2	                         movsxd rdx, edx	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x454b	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4550	    0x8b0500000000	            mov eax, dword [0x04004596] 	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4556	            0x4898	                                    cdqe	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4558	          0x4829c2	                            sub rdx, rax	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x455b	          0x4889d0	                            mov rax, rdx	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x455e	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4562	            0x7f51	                            jg 0x40045f5	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x4564	        0x488b45f8	                mov rax, qword [rbp - 8]	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x4568	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x456b	          0x4863d2	                         movsxd rdx, edx	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x456e	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x4573	        0x488b45f8	                mov rax, qword [rbp - 8]	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x4577	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x457a	          0x4863c9	                         movsxd rcx, ecx	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x457d	        0x4883c108	                              add rcx, 8	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x4581	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x4586	          0x4801c2	                            add rdx, rax	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x4589	    0x8b0500000000	            mov eax, dword [0x040045cf] 	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x458f	            0x4898	                                    cdqe	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x4591	          0x4801d0	                            add rax, rdx	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x4594	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x4598	            0x7e07	                           jle 0x40045e1	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x459a	      0xb800000000	                              mov eax, 0	      2129	diff.c	FUNCTION_36	FOR_2	IF_8
0x459f	            0xeb1a	                           jmp 0x40045fb	      2129	diff.c	FUNCTION_36	FOR_2	IF_8
0x45a1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2122	diff.c	FUNCTION_36	FOR_2
0x45a5	          0x488b00	                    mov rax, qword [rax]	      2122	diff.c	FUNCTION_36	FOR_2
0x45a8	        0x488945f8	                mov qword [rbp - 8], rax	      2122	diff.c	FUNCTION_36	FOR_2
0x45ac	      0x48837df800	                  cmp qword [rbp - 8], 0	      2122	diff.c	FUNCTION_36	FOR_2
0x45b1	            0x758e	                           jne 0x4004581	      2122	diff.c	FUNCTION_36	FOR_2
0x45b3	            0xeb01	                           jmp 0x40045f6	      2122	diff.c	FUNCTION_36	FOR_2
0x45b5	              0x90	                                     nop	      2126	diff.c	FUNCTION_36	FOR_2	IF_7
0x45b6	      0xb801000000	                              mov eax, 1	      2131	diff.c	FUNCTION_36
0x45bb	              0xc9	                                   leave	      2132	diff.c	FUNCTION_36
0x45bc	              0xc3	                                     ret	      2132	diff.c	FUNCTION_36
diff_buf_delete	SWITCH,0:functions,1:WHILE,0:ELSE,0:IF,0:CALL,0:FOR,0:DO,0	35
0x0	              0x55	                                push rbp	        65	diff.c	FUNCTION_1
0x1	          0x4889e5	                            mov rbp, rsp	        65	diff.c	FUNCTION_1
0x4	        0x4883ec20	                           sub rsp, 0x20	        65	diff.c	FUNCTION_1
0x8	        0x48897de8	             mov qword [rbp - 0x18], rdi	        65	diff.c	FUNCTION_1
0xc	    0x488b05000000	            mov rax, qword [0x04000053] 	        69	diff.c	FUNCTION_1
0x13	        0x488945f8	                mov qword [rbp - 8], rax	        69	diff.c	FUNCTION_1
0x17	            0xeb62	                           jmp 0x40000bb	        69	diff.c	FUNCTION_1
0x19	        0x488b55f8	                mov rdx, qword [rbp - 8]	        71	diff.c	CALL_1
0x1d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        71	diff.c	CALL_1
0x21	          0x4889d6	                            mov rsi, rdx	        71	diff.c	CALL_1
0x24	          0x4889c7	                            mov rdi, rax	        71	diff.c	CALL_1
0x27	      0xe86c020000	                call sym.diff_buf_idx_tp	        71	diff.c	CALL_1
0x2c	          0x8945f4	              mov dword [rbp - 0xc], eax	        71	diff.c	CALL_1
0x2f	        0x837df408	                cmp dword [rbp - 0xc], 8	        72	diff.c	IF_1
0x33	            0x743b	                            je 0x40000b0	        72	diff.c	IF_1
0x35	        0x488b45f8	                mov rax, qword [rbp - 8]	        74	diff.c	IF_1
0x39	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        74	diff.c	IF_1
0x3c	          0x4863d2	                         movsxd rdx, edx	        74	diff.c	IF_1
0x3f	        0x4883c20c	                            add rdx, 0xc	        74	diff.c	IF_1
0x43	    0x48c704d00000	              mov qword [rax + rdx*8], 0	        74	diff.c	IF_1
0x4b	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	diff.c	IF_1
0x4f	    0xc780a0000000	               mov dword [rax + 0xa0], 1	        75	diff.c	IF_1
0x59	    0x488b05000000	            mov rax, qword [0x040000a0] 	        76	diff.c	IF_1	IF_2
0x60	        0x483945f8	                cmp qword [rbp - 8], rax	        76	diff.c	IF_1	IF_2
0x64	            0x750a	                           jne 0x40000b0	        76	diff.c	IF_1	IF_2
0x66	      0xbf01000000	                              mov edi, 1	        77	diff.c	IF_1	CALL_2
0x6b	      0xe8390f0000	                    call sym.diff_redraw	        77	diff.c	IF_1	CALL_2
0x70	        0x488b45f8	                mov rax, qword [rbp - 8]	        69	diff.c	FUNCTION_1
0x74	          0x488b00	                    mov rax, qword [rax]	        69	diff.c	FUNCTION_1
0x77	        0x488945f8	                mov qword [rbp - 8], rax	        69	diff.c	FUNCTION_1
0x7b	      0x48837df800	                  cmp qword [rbp - 8], 0	        69	diff.c	FUNCTION_1
0x80	            0x7597	                           jne 0x4000059	        69	diff.c	FUNCTION_1
0x82	              0x90	                                     nop	        80	diff.c	FUNCTION_1
0x83	              0xc9	                                   leave	        80	diff.c	FUNCTION_1
0x84	              0xc3	                                     ret	        80	diff.c	FUNCTION_1
