dbcs_ptr2cells_len	CALL,1:WHILE,0:functions,0:ELSE,0:IF,1:DO,0:SWITCH,0:FOR,0	23
0x1023	              0x55	                                push rbp	      1689	mbyte.c	FUNCTION_26
0x1024	          0x4889e5	                            mov rbp, rsp	      1689	mbyte.c	FUNCTION_26
0x1027	        0x48897df8	                mov qword [rbp - 8], rdi	      1689	mbyte.c	FUNCTION_26
0x102b	          0x8975f4	              mov dword [rbp - 0xc], esi	      1689	mbyte.c	FUNCTION_26
0x102e	        0x837df401	                cmp dword [rbp - 0xc], 1	      1692	mbyte.c	FUNCTION_26	IF_1
0x1032	            0x7e18	                           jle 0x400108c	      1692	mbyte.c	FUNCTION_26	IF_1
0x1034	    0x8b0500000000	            mov eax, dword [0x0400107a] 	      1692	mbyte.c	FUNCTION_26	IF_1
0x103a	      0x3dcc260000	                         cmp eax, 0x26cc	      1692	mbyte.c	FUNCTION_26	IF_1
0x103f	            0x7512	                           jne 0x4001093	      1692	mbyte.c	FUNCTION_26	IF_1
0x1041	        0x488b45f8	                mov rax, qword [rbp - 8]	      1692	mbyte.c	FUNCTION_26	IF_1
0x1045	           0xfb600	                   movzx eax, byte [rax]	      1692	mbyte.c	FUNCTION_26	IF_1
0x1048	            0x3c8e	                            cmp al, 0x8e	      1692	mbyte.c	FUNCTION_26	IF_1
0x104a	            0x7507	                           jne 0x4001093	      1692	mbyte.c	FUNCTION_26	IF_1
0x104c	      0xb801000000	                              mov eax, 1	      1693	mbyte.c	FUNCTION_26	IF_1
0x1051	            0xeb16	                           jmp 0x40010a9	      1693	mbyte.c	FUNCTION_26	IF_1
0x1053	        0x488b45f8	                mov rax, qword [rbp - 8]	      1694	mbyte.c	FUNCTION_26	CALL_1
0x1057	           0xfb600	                   movzx eax, byte [rax]	      1694	mbyte.c	FUNCTION_26	CALL_1
0x105a	           0xfb6c0	                           movzx eax, al	      1694	mbyte.c	FUNCTION_26	CALL_1
0x105d	            0x4898	                                    cdqe	      1694	mbyte.c	FUNCTION_26	CALL_1
0x105f	     0xfb680000000	                   movzx eax, byte [rax]	      1694	mbyte.c	FUNCTION_26	CALL_1
0x1066	           0xfbec0	                           movsx eax, al	      1694	mbyte.c	FUNCTION_26	CALL_1
0x1069	              0x5d	                                 pop rbp	      1695	mbyte.c	FUNCTION_26
0x106a	              0xc3	                                     ret	      1695	mbyte.c	FUNCTION_26
utf_toupper	CALL,4:WHILE,0:functions,0:ELSE,0:IF,3:DO,0:SWITCH,0:FOR,0	40
0x23b4	              0x55	                                push rbp	      3527	mbyte.c	FUNCTION_60
0x23b5	          0x4889e5	                            mov rbp, rsp	      3527	mbyte.c	FUNCTION_60
0x23b8	        0x4883ec10	                           sub rsp, 0x10	      3527	mbyte.c	FUNCTION_60
0x23bc	          0x897dfc	                mov dword [rbp - 4], edi	      3527	mbyte.c	FUNCTION_60
0x23bf	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      3529	mbyte.c	FUNCTION_60	IF_1
0x23c3	            0x7f26	                            jg 0x400242b	      3529	mbyte.c	FUNCTION_60	IF_1
0x23c5	    0x8b0500000000	            mov eax, dword [0x0400240b] 	      3529	mbyte.c	FUNCTION_60	IF_1
0x23cb	          0x83e002	                              and eax, 2	      3529	mbyte.c	FUNCTION_60	IF_1
0x23ce	            0x85c0	                           test eax, eax	      3529	mbyte.c	FUNCTION_60	IF_1
0x23d0	            0x7419	                            je 0x400242b	      3529	mbyte.c	FUNCTION_60	IF_1
0x23d2	        0x837dfc60	               cmp dword [rbp - 4], 0x60	      3530	mbyte.c	FUNCTION_60	CALL_1
0x23d6	            0x7e0e	                           jle 0x4002426	      3530	mbyte.c	FUNCTION_60	CALL_1
0x23d8	        0x837dfc7a	               cmp dword [rbp - 4], 0x7a	      3530	mbyte.c	FUNCTION_60	CALL_1
0x23dc	            0x7f08	                            jg 0x4002426	      3530	mbyte.c	FUNCTION_60	CALL_1
0x23de	          0x8b45fc	                mov eax, dword [rbp - 4]	      3530	mbyte.c	FUNCTION_60	CALL_1
0x23e1	          0x83e820	                           sub eax, 0x20	      3530	mbyte.c	FUNCTION_60	CALL_1
0x23e4	            0xeb44	                           jmp 0x400246a	      3530	mbyte.c	FUNCTION_60	CALL_1
0x23e6	          0x8b45fc	                mov eax, dword [rbp - 4]	      3530	mbyte.c	FUNCTION_60	CALL_1
0x23e9	            0xeb3f	                           jmp 0x400246a	      3530	mbyte.c	FUNCTION_60	CALL_1
0x23eb	    0x8b0500000000	            mov eax, dword [0x04002431] 	      3534	mbyte.c	FUNCTION_60	IF_2
0x23f1	          0x83e001	                              and eax, 1	      3534	mbyte.c	FUNCTION_60	IF_2
0x23f4	            0x85c0	                           test eax, eax	      3534	mbyte.c	FUNCTION_60	IF_2
0x23f6	            0x750c	                           jne 0x4002444	      3534	mbyte.c	FUNCTION_60	IF_2
0x23f8	          0x8b45fc	                mov eax, dword [rbp - 4]	      3535	mbyte.c	FUNCTION_60	CALL_2
0x23fb	            0x89c7	                            mov edi, eax	      3535	mbyte.c	FUNCTION_60	CALL_2
0x23fd	      0xe800000000	                          call 0x4002442	      3535	mbyte.c	FUNCTION_60	CALL_2
0x2402	            0xeb26	                           jmp 0x400246a	      3535	mbyte.c	FUNCTION_60	CALL_2
0x2404	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      3539	mbyte.c	FUNCTION_60	IF_3
0x2408	            0x7f0c	                            jg 0x4002456	      3539	mbyte.c	FUNCTION_60	IF_3
0x240a	          0x8b45fc	                mov eax, dword [rbp - 4]	      3540	mbyte.c	FUNCTION_60	CALL_3
0x240d	            0x89c7	                            mov edi, eax	      3540	mbyte.c	FUNCTION_60	CALL_3
0x240f	      0xe800000000	                          call 0x4002454	      3540	mbyte.c	FUNCTION_60	CALL_3
0x2414	            0xeb14	                           jmp 0x400246a	      3540	mbyte.c	FUNCTION_60	CALL_3
0x2416	          0x8b45fc	                mov eax, dword [rbp - 4]	      3543	mbyte.c	FUNCTION_60	CALL_4
0x2419	      0xba300b0000	                          mov edx, 0xb30	      3543	mbyte.c	FUNCTION_60	CALL_4
0x241e	      0xbe00000000	                              mov esi, 0	      3543	mbyte.c	FUNCTION_60	CALL_4
0x2423	            0x89c7	                            mov edi, eax	      3543	mbyte.c	FUNCTION_60	CALL_4
0x2425	      0xe83afeffff	                    call sym.utf_convert	      3543	mbyte.c	FUNCTION_60	CALL_4
0x242a	              0xc9	                                   leave	      3544	mbyte.c	FUNCTION_60
0x242b	              0xc3	                                     ret	      3544	mbyte.c	FUNCTION_60
enc_canon_search	CALL,1:WHILE,0:functions,0:ELSE,0:IF,1:DO,0:SWITCH,0:FOR,1	25
0x0	              0x55	                                push rbp	       452	mbyte.c	FUNCTION_2
0x1	          0x4889e5	                            mov rbp, rsp	       452	mbyte.c	FUNCTION_2
0x4	        0x4883ec20	                           sub rsp, 0x20	       452	mbyte.c	FUNCTION_2
0x8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       452	mbyte.c	FUNCTION_2
0xc	    0xc745fc000000	                  mov dword [rbp - 4], 0	       455	mbyte.c	FUNCTION_2	FOR_1
0x13	            0xeb2e	                           jmp 0x4000083	       455	mbyte.c	FUNCTION_2	FOR_1
0x15	          0x8b45fc	                mov eax, dword [rbp - 4]	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x18	            0x4898	                                    cdqe	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x1a	        0x48c1e004	                              shl rax, 4	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x1e	    0x480500000000	                              add rax, 0	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x24	          0x488b10	                    mov rdx, qword [rax]	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x27	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x2b	          0x4889d6	                            mov rsi, rdx	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x2e	          0x4889c7	                            mov rdi, rax	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x31	      0xe800000000	                          call 0x4000076	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x36	            0x85c0	                           test eax, eax	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x38	            0x7505	                           jne 0x400007f	       456	mbyte.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x3a	          0x8b45fc	                mov eax, dword [rbp - 4]	       457	mbyte.c	FUNCTION_2	FOR_1	IF_1
0x3d	            0xeb0f	                           jmp 0x400008e	       457	mbyte.c	FUNCTION_2	FOR_1	IF_1
0x3f	        0x8345fc01	                  add dword [rbp - 4], 1	       455	mbyte.c	FUNCTION_2	FOR_1
0x43	        0x837dfc3b	               cmp dword [rbp - 4], 0x3b	       455	mbyte.c	FUNCTION_2	FOR_1
0x47	            0x7ecc	                           jle 0x4000055	       455	mbyte.c	FUNCTION_2	FOR_1
0x49	      0xb8ffffffff	                     mov eax, 0xffffffff	       458	mbyte.c	FUNCTION_2
0x4e	              0xc9	                                   leave	       459	mbyte.c	FUNCTION_2
0x4f	              0xc3	                                     ret	       459	mbyte.c	FUNCTION_2
utfc_char2bytes	CALL,2:WHILE,0:functions,0:ELSE,0:IF,1:DO,0:SWITCH,0:FOR,1	54
0x1a54	              0x55	                                push rbp	      2060	mbyte.c	FUNCTION_44
0x1a55	          0x4889e5	                            mov rbp, rsp	      2060	mbyte.c	FUNCTION_44
0x1a58	        0x4883ec20	                           sub rsp, 0x20	      2060	mbyte.c	FUNCTION_44
0x1a5c	          0x897dec	             mov dword [rbp - 0x14], edi	      2060	mbyte.c	FUNCTION_44
0x1a5f	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2060	mbyte.c	FUNCTION_44
0x1a63	    0x488b05000000	            mov rax, qword [0x04001aaa] 	      2064	mbyte.c	FUNCTION_44	CALL_1
0x1a6a	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2064	mbyte.c	FUNCTION_44	CALL_1
0x1a6d	          0x4863d2	                         movsxd rdx, edx	      2064	mbyte.c	FUNCTION_44	CALL_1
0x1a70	        0x48c1e202	                              shl rdx, 2	      2064	mbyte.c	FUNCTION_44	CALL_1
0x1a74	          0x4801d0	                            add rax, rdx	      2064	mbyte.c	FUNCTION_44	CALL_1
0x1a77	            0x8b00	                    mov eax, dword [rax]	      2064	mbyte.c	FUNCTION_44	CALL_1
0x1a79	            0x89c2	                            mov edx, eax	      2064	mbyte.c	FUNCTION_44	CALL_1
0x1a7b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2064	mbyte.c	FUNCTION_44	CALL_1
0x1a7f	          0x4889c6	                            mov rsi, rax	      2064	mbyte.c	FUNCTION_44	CALL_1
0x1a82	            0x89d7	                            mov edi, edx	      2064	mbyte.c	FUNCTION_44	CALL_1
0x1a84	      0xe800000000	                          call 0x4001ac9	      2064	mbyte.c	FUNCTION_44	CALL_1
0x1a89	          0x8945f8	                mov dword [rbp - 8], eax	      2064	mbyte.c	FUNCTION_44	CALL_1
0x1a8c	    0xc745fc000000	                  mov dword [rbp - 4], 0	      2065	mbyte.c	FUNCTION_44	FOR_1
0x1a93	            0xeb5a	                           jmp 0x4001b2f	      2065	mbyte.c	FUNCTION_44	FOR_1
0x1a95	          0x8b45fc	                mov eax, dword [rbp - 4]	      2067	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x1a98	            0x4898	                                    cdqe	      2067	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x1a9a	    0x488b04c50000	                  mov rax, qword [rax*8]	      2067	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x1aa2	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2067	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x1aa5	          0x4863d2	                         movsxd rdx, edx	      2067	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x1aa8	        0x48c1e202	                              shl rdx, 2	      2067	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x1aac	          0x4801d0	                            add rax, rdx	      2067	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x1aaf	            0x8b00	                    mov eax, dword [rax]	      2067	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x1ab1	            0x85c0	                           test eax, eax	      2067	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x1ab3	            0x7447	                            je 0x4001b3c	      2067	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x1ab5	          0x8b45f8	                mov eax, dword [rbp - 8]	      2069	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x1ab8	          0x4863d0	                         movsxd rdx, eax	      2069	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x1abb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2069	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x1abf	          0x4801c2	                            add rdx, rax	      2069	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x1ac2	          0x8b45fc	                mov eax, dword [rbp - 4]	      2069	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x1ac5	            0x4898	                                    cdqe	      2069	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x1ac7	    0x488b04c50000	                  mov rax, qword [rax*8]	      2069	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x1acf	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      2069	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x1ad2	          0x4863c9	                         movsxd rcx, ecx	      2069	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x1ad5	        0x48c1e102	                              shl rcx, 2	      2069	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x1ad9	          0x4801c8	                            add rax, rcx	      2069	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x1adc	            0x8b00	                    mov eax, dword [rax]	      2069	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x1ade	          0x4889d6	                            mov rsi, rdx	      2069	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x1ae1	            0x89c7	                            mov edi, eax	      2069	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x1ae3	      0xe800000000	                          call 0x4001b28	      2069	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x1ae8	           0x145f8	                add dword [rbp - 8], eax	      2069	mbyte.c	FUNCTION_44	FOR_1	CALL_2
0x1aeb	        0x8345fc01	                  add dword [rbp - 4], 1	      2065	mbyte.c	FUNCTION_44	FOR_1
0x1aef	    0x8b0500000000	            mov eax, dword [0x04001b35] 	      2065	mbyte.c	FUNCTION_44	FOR_1
0x1af5	          0x3945fc	                cmp dword [rbp - 4], eax	      2065	mbyte.c	FUNCTION_44	FOR_1
0x1af8	            0x7c9b	                            jl 0x4001ad5	      2065	mbyte.c	FUNCTION_44	FOR_1
0x1afa	            0xeb01	                           jmp 0x4001b3d	      2065	mbyte.c	FUNCTION_44	FOR_1
0x1afc	              0x90	                                     nop	      2068	mbyte.c	FUNCTION_44	FOR_1	IF_1
0x1afd	          0x8b45f8	                mov eax, dword [rbp - 8]	      2071	mbyte.c	FUNCTION_44
0x1b00	              0xc9	                                   leave	      2072	mbyte.c	FUNCTION_44
0x1b01	              0xc3	                                     ret	      2072	mbyte.c	FUNCTION_44
enc_skip	CALL,2:WHILE,0:functions,0:ELSE,0:IF,2:DO,0:SWITCH,0:FOR,0	27
0x3723	              0x55	                                push rbp	      4284	mbyte.c	FUNCTION_85
0x3724	          0x4889e5	                            mov rbp, rsp	      4284	mbyte.c	FUNCTION_85
0x3727	        0x4883ec10	                           sub rsp, 0x10	      4284	mbyte.c	FUNCTION_85
0x372b	        0x48897df8	                mov qword [rbp - 8], rdi	      4284	mbyte.c	FUNCTION_85
0x372f	        0x488b45f8	                mov rax, qword [rbp - 8]	      4285	mbyte.c	FUNCTION_85	IF_1	CALL_1
0x3733	      0xba06000000	                              mov edx, 6	      4285	mbyte.c	FUNCTION_85	IF_1	CALL_1
0x3738	      0xbe00000000	                              mov esi, 0	      4285	mbyte.c	FUNCTION_85	IF_1	CALL_1
0x373d	          0x4889c7	                            mov rdi, rax	      4285	mbyte.c	FUNCTION_85	IF_1	CALL_1
0x3740	      0xe800000000	                          call 0x4003785	      4285	mbyte.c	FUNCTION_85	IF_1	CALL_1
0x3745	            0x85c0	                           test eax, eax	      4285	mbyte.c	FUNCTION_85	IF_1	CALL_1
0x3747	            0x750a	                           jne 0x4003793	      4285	mbyte.c	FUNCTION_85	IF_1	CALL_1
0x3749	        0x488b45f8	                mov rax, qword [rbp - 8]	      4286	mbyte.c	FUNCTION_85	IF_1
0x374d	        0x4883c006	                              add rax, 6	      4286	mbyte.c	FUNCTION_85	IF_1
0x3751	            0xeb28	                           jmp 0x40037bb	      4286	mbyte.c	FUNCTION_85	IF_1
0x3753	        0x488b45f8	                mov rax, qword [rbp - 8]	      4287	mbyte.c	FUNCTION_85	IF_2	CALL_2
0x3757	      0xba05000000	                              mov edx, 5	      4287	mbyte.c	FUNCTION_85	IF_2	CALL_2
0x375c	      0xbe00000000	                              mov esi, 0	      4287	mbyte.c	FUNCTION_85	IF_2	CALL_2
0x3761	          0x4889c7	                            mov rdi, rax	      4287	mbyte.c	FUNCTION_85	IF_2	CALL_2
0x3764	      0xe800000000	                          call 0x40037a9	      4287	mbyte.c	FUNCTION_85	IF_2	CALL_2
0x3769	            0x85c0	                           test eax, eax	      4287	mbyte.c	FUNCTION_85	IF_2	CALL_2
0x376b	            0x750a	                           jne 0x40037b7	      4287	mbyte.c	FUNCTION_85	IF_2	CALL_2
0x376d	        0x488b45f8	                mov rax, qword [rbp - 8]	      4288	mbyte.c	FUNCTION_85	IF_2
0x3771	        0x4883c005	                              add rax, 5	      4288	mbyte.c	FUNCTION_85	IF_2
0x3775	            0xeb04	                           jmp 0x40037bb	      4288	mbyte.c	FUNCTION_85	IF_2
0x3777	        0x488b45f8	                mov rax, qword [rbp - 8]	      4289	mbyte.c	FUNCTION_85
0x377b	              0xc9	                                   leave	      4290	mbyte.c	FUNCTION_85
0x377c	              0xc3	                                     ret	      4290	mbyte.c	FUNCTION_85
utf_printable	CALL,2:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	14
0x2096	              0x55	                                push rbp	      2609	mbyte.c	FUNCTION_54
0x2097	          0x4889e5	                            mov rbp, rsp	      2609	mbyte.c	FUNCTION_54
0x209a	        0x4883ec08	                              sub rsp, 8	      2609	mbyte.c	FUNCTION_54
0x209e	          0x897dfc	                mov dword [rbp - 4], edi	      2609	mbyte.c	FUNCTION_54
0x20a1	          0x8b45fc	                mov eax, dword [rbp - 4]	      2625	mbyte.c	FUNCTION_54	CALL_2
0x20a4	            0x89c2	                            mov edx, eax	      2625	mbyte.c	FUNCTION_54	CALL_2
0x20a6	      0xbe90000000	                           mov esi, 0x90	      2625	mbyte.c	FUNCTION_54	CALL_2
0x20ab	      0xbf00000000	                              mov edi, 0	      2625	mbyte.c	FUNCTION_54	CALL_2
0x20b0	      0xe838ecffff	                        call sym.intable	      2625	mbyte.c	FUNCTION_54	CALL_2
0x20b5	            0x85c0	                           test eax, eax	      2625	mbyte.c	FUNCTION_54	CALL_2
0x20b7	           0xf94c0	                                 sete al	      2625	mbyte.c	FUNCTION_54	CALL_2
0x20ba	           0xfb6c0	                           movzx eax, al	      2625	mbyte.c	FUNCTION_54	CALL_2
0x20bd	              0xc9	                                   leave	      2627	mbyte.c	FUNCTION_54
0x20be	              0xc3	                                     ret	      2627	mbyte.c	FUNCTION_54
dbcs_char2len	CALL,0:WHILE,0:functions,0:ELSE,0:IF,1:DO,0:SWITCH,0:FOR,0	10
0xb5a	              0x55	                                push rbp	      1089	mbyte.c	FUNCTION_11
0xb5b	          0x4889e5	                            mov rbp, rsp	      1089	mbyte.c	FUNCTION_11
0xb5e	          0x897dfc	                mov dword [rbp - 4], edi	      1089	mbyte.c	FUNCTION_11
0xb61	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	      1090	mbyte.c	FUNCTION_11	IF_1
0xb68	            0x7e07	                           jle 0x4000bb1	      1090	mbyte.c	FUNCTION_11	IF_1
0xb6a	      0xb802000000	                              mov eax, 2	      1091	mbyte.c	FUNCTION_11	IF_1
0xb6f	            0xeb05	                           jmp 0x4000bb6	      1091	mbyte.c	FUNCTION_11	IF_1
0xb71	      0xb801000000	                              mov eax, 1	      1092	mbyte.c	FUNCTION_11
0xb76	              0x5d	                                 pop rbp	      1093	mbyte.c	FUNCTION_11
0xb77	              0xc3	                                     ret	      1093	mbyte.c	FUNCTION_11
dbcs_ptr2len_len	CALL,1:WHILE,0:functions,0:ELSE,0:IF,3:DO,0:SWITCH,0:FOR,0	34
0xc83	              0x55	                                push rbp	      1165	mbyte.c	FUNCTION_17
0xc84	          0x4889e5	                            mov rbp, rsp	      1165	mbyte.c	FUNCTION_17
0xc87	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1165	mbyte.c	FUNCTION_17
0xc8b	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1165	mbyte.c	FUNCTION_17
0xc8e	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1168	mbyte.c	FUNCTION_17	IF_1
0xc92	            0x7e0b	                           jle 0x4000cdf	      1168	mbyte.c	FUNCTION_17	IF_1
0xc94	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1168	mbyte.c	FUNCTION_17	IF_1
0xc98	           0xfb600	                   movzx eax, byte [rax]	      1168	mbyte.c	FUNCTION_17	IF_1
0xc9b	            0x84c0	                             test al, al	      1168	mbyte.c	FUNCTION_17	IF_1
0xc9d	            0x7507	                           jne 0x4000ce6	      1168	mbyte.c	FUNCTION_17	IF_1
0xc9f	      0xb800000000	                              mov eax, 0	      1169	mbyte.c	FUNCTION_17	IF_1
0xca4	            0xeb45	                           jmp 0x4000d2b	      1169	mbyte.c	FUNCTION_17	IF_1
0xca6	        0x837de401	               cmp dword [rbp - 0x1c], 1	      1170	mbyte.c	FUNCTION_17	IF_2
0xcaa	            0x7507	                           jne 0x4000cf3	      1170	mbyte.c	FUNCTION_17	IF_2
0xcac	      0xb801000000	                              mov eax, 1	      1171	mbyte.c	FUNCTION_17	IF_2
0xcb1	            0xeb38	                           jmp 0x4000d2b	      1171	mbyte.c	FUNCTION_17	IF_2
0xcb3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1173	mbyte.c	FUNCTION_17	CALL_1
0xcb7	           0xfb600	                   movzx eax, byte [rax]	      1173	mbyte.c	FUNCTION_17	CALL_1
0xcba	           0xfb6c0	                           movzx eax, al	      1173	mbyte.c	FUNCTION_17	CALL_1
0xcbd	            0x4898	                                    cdqe	      1173	mbyte.c	FUNCTION_17	CALL_1
0xcbf	     0xfb680000000	                   movzx eax, byte [rax]	      1173	mbyte.c	FUNCTION_17	CALL_1
0xcc6	           0xfbec0	                           movsx eax, al	      1173	mbyte.c	FUNCTION_17	CALL_1
0xcc9	          0x8945fc	                mov dword [rbp - 4], eax	      1173	mbyte.c	FUNCTION_17	CALL_1
0xccc	        0x837dfc02	                  cmp dword [rbp - 4], 2	      1174	mbyte.c	FUNCTION_17	IF_3
0xcd0	            0x7516	                           jne 0x4000d28	      1174	mbyte.c	FUNCTION_17	IF_3
0xcd2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1174	mbyte.c	FUNCTION_17	IF_3
0xcd6	        0x4883c001	                              add rax, 1	      1174	mbyte.c	FUNCTION_17	IF_3
0xcda	           0xfb600	                   movzx eax, byte [rax]	      1174	mbyte.c	FUNCTION_17	IF_3
0xcdd	            0x84c0	                             test al, al	      1174	mbyte.c	FUNCTION_17	IF_3
0xcdf	            0x7507	                           jne 0x4000d28	      1174	mbyte.c	FUNCTION_17	IF_3
0xce1	    0xc745fc010000	                  mov dword [rbp - 4], 1	      1175	mbyte.c	FUNCTION_17	IF_3
0xce8	          0x8b45fc	                mov eax, dword [rbp - 4]	      1176	mbyte.c	FUNCTION_17
0xceb	              0x5d	                                 pop rbp	      1177	mbyte.c	FUNCTION_17
0xcec	              0xc3	                                     ret	      1177	mbyte.c	FUNCTION_17
latin_head_off	CALL,0:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	7
0x29ec	              0x55	                                push rbp	      3766	mbyte.c	FUNCTION_67
0x29ed	          0x4889e5	                            mov rbp, rsp	      3766	mbyte.c	FUNCTION_67
0x29f0	        0x48897df8	                mov qword [rbp - 8], rdi	      3766	mbyte.c	FUNCTION_67
0x29f4	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3766	mbyte.c	FUNCTION_67
0x29f8	      0xb800000000	                              mov eax, 0	      3767	mbyte.c	FUNCTION_67
0x29fd	              0x5d	                                 pop rbp	      3768	mbyte.c	FUNCTION_67
0x29fe	              0xc3	                                     ret	      3768	mbyte.c	FUNCTION_67
dbcs_off2cells	CALL,1:WHILE,0:functions,0:ELSE,0:IF,2:DO,0:SWITCH,0:FOR,0	30
0x1144	              0x55	                                push rbp	      1747	mbyte.c	FUNCTION_31
0x1145	          0x4889e5	                            mov rbp, rsp	      1747	mbyte.c	FUNCTION_31
0x1148	          0x897dfc	                mov dword [rbp - 4], edi	      1747	mbyte.c	FUNCTION_31
0x114b	          0x8975f8	                mov dword [rbp - 8], esi	      1747	mbyte.c	FUNCTION_31
0x114e	          0x8b45fc	                mov eax, dword [rbp - 4]	      1749	mbyte.c	FUNCTION_31	IF_1
0x1151	          0x3b45f8	                cmp eax, dword [rbp - 8]	      1749	mbyte.c	FUNCTION_31	IF_1
0x1154	            0x7207	                            jb 0x400119d	      1749	mbyte.c	FUNCTION_31	IF_1
0x1156	      0xb801000000	                              mov eax, 1	      1750	mbyte.c	FUNCTION_31	IF_1
0x115b	            0xeb47	                           jmp 0x40011e4	      1750	mbyte.c	FUNCTION_31	IF_1
0x115d	    0x8b0500000000	            mov eax, dword [0x040011a3] 	      1754	mbyte.c	FUNCTION_31	IF_2
0x1163	      0x3dcc260000	                         cmp eax, 0x26cc	      1754	mbyte.c	FUNCTION_31	IF_2
0x1168	            0x751b	                           jne 0x40011c5	      1754	mbyte.c	FUNCTION_31	IF_2
0x116a	    0x488b15000000	            mov rdx, qword [0x040011b1] 	      1754	mbyte.c	FUNCTION_31	IF_2
0x1171	          0x8b45fc	                mov eax, dword [rbp - 4]	      1754	mbyte.c	FUNCTION_31	IF_2
0x1174	          0x4801d0	                            add rax, rdx	      1754	mbyte.c	FUNCTION_31	IF_2
0x1177	           0xfb600	                   movzx eax, byte [rax]	      1754	mbyte.c	FUNCTION_31	IF_2
0x117a	            0x3c8e	                            cmp al, 0x8e	      1754	mbyte.c	FUNCTION_31	IF_2
0x117c	            0x7507	                           jne 0x40011c5	      1754	mbyte.c	FUNCTION_31	IF_2
0x117e	      0xb801000000	                              mov eax, 1	      1755	mbyte.c	FUNCTION_31	IF_2
0x1183	            0xeb1f	                           jmp 0x40011e4	      1755	mbyte.c	FUNCTION_31	IF_2
0x1185	    0x488b15000000	            mov rdx, qword [0x040011cc] 	      1756	mbyte.c	FUNCTION_31	CALL_1
0x118c	          0x8b45fc	                mov eax, dword [rbp - 4]	      1756	mbyte.c	FUNCTION_31	CALL_1
0x118f	          0x4801d0	                            add rax, rdx	      1756	mbyte.c	FUNCTION_31	CALL_1
0x1192	           0xfb600	                   movzx eax, byte [rax]	      1756	mbyte.c	FUNCTION_31	CALL_1
0x1195	           0xfb6c0	                           movzx eax, al	      1756	mbyte.c	FUNCTION_31	CALL_1
0x1198	            0x4898	                                    cdqe	      1756	mbyte.c	FUNCTION_31	CALL_1
0x119a	     0xfb680000000	                   movzx eax, byte [rax]	      1756	mbyte.c	FUNCTION_31	CALL_1
0x11a1	           0xfbec0	                           movsx eax, al	      1756	mbyte.c	FUNCTION_31	CALL_1
0x11a4	              0x5d	                                 pop rbp	      1757	mbyte.c	FUNCTION_31
0x11a5	              0xc3	                                     ret	      1757	mbyte.c	FUNCTION_31
latin_ptr2len_len	CALL,0:WHILE,0:functions,0:ELSE,0:IF,1:DO,0:SWITCH,0:FOR,0	15
0xc59	              0x55	                                push rbp	      1157	mbyte.c	FUNCTION_16
0xc5a	          0x4889e5	                            mov rbp, rsp	      1157	mbyte.c	FUNCTION_16
0xc5d	        0x48897df8	                mov qword [rbp - 8], rdi	      1157	mbyte.c	FUNCTION_16
0xc61	          0x8975f4	              mov dword [rbp - 0xc], esi	      1157	mbyte.c	FUNCTION_16
0xc64	        0x837df400	                cmp dword [rbp - 0xc], 0	      1158	mbyte.c	FUNCTION_16	IF_1
0xc68	            0x7e0b	                           jle 0x4000cb5	      1158	mbyte.c	FUNCTION_16	IF_1
0xc6a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1158	mbyte.c	FUNCTION_16	IF_1
0xc6e	           0xfb600	                   movzx eax, byte [rax]	      1158	mbyte.c	FUNCTION_16	IF_1
0xc71	            0x84c0	                             test al, al	      1158	mbyte.c	FUNCTION_16	IF_1
0xc73	            0x7507	                           jne 0x4000cbc	      1158	mbyte.c	FUNCTION_16	IF_1
0xc75	      0xb800000000	                              mov eax, 0	      1159	mbyte.c	FUNCTION_16	IF_1
0xc7a	            0xeb05	                           jmp 0x4000cc1	      1159	mbyte.c	FUNCTION_16	IF_1
0xc7c	      0xb801000000	                              mov eax, 1	      1160	mbyte.c	FUNCTION_16
0xc81	              0x5d	                                 pop rbp	      1161	mbyte.c	FUNCTION_16
0xc82	              0xc3	                                     ret	      1161	mbyte.c	FUNCTION_16
intable	CALL,0:WHILE,1:functions,0:ELSE,2:IF,3:DO,0:SWITCH,0:FOR,0	65
0xced	              0x55	                                push rbp	      1190	mbyte.c	FUNCTION_18
0xcee	          0x4889e5	                            mov rbp, rsp	      1190	mbyte.c	FUNCTION_18
0xcf1	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1190	mbyte.c	FUNCTION_18
0xcf5	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1190	mbyte.c	FUNCTION_18
0xcf9	          0x8955dc	             mov dword [rbp - 0x24], edx	      1190	mbyte.c	FUNCTION_18
0xcfc	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1194	mbyte.c	FUNCTION_18	IF_1
0xcff	          0x4863d0	                         movsxd rdx, eax	      1194	mbyte.c	FUNCTION_18	IF_1
0xd02	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1194	mbyte.c	FUNCTION_18	IF_1
0xd06	          0x488b00	                    mov rax, qword [rax]	      1194	mbyte.c	FUNCTION_18	IF_1
0xd09	          0x4839c2	                            cmp rdx, rax	      1194	mbyte.c	FUNCTION_18	IF_1
0xd0c	            0x7d0a	                           jge 0x4000d58	      1194	mbyte.c	FUNCTION_18	IF_1
0xd0e	      0xb800000000	                              mov eax, 0	      1195	mbyte.c	FUNCTION_18	IF_1
0xd13	      0xe996000000	                           jmp 0x4000dee	      1195	mbyte.c	FUNCTION_18	IF_1
0xd18	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1198	mbyte.c	FUNCTION_18
0xd1f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1199	mbyte.c	FUNCTION_18
0xd23	        0x48c1e804	                              shr rax, 4	      1199	mbyte.c	FUNCTION_18
0xd27	          0x83e801	                              sub eax, 1	      1199	mbyte.c	FUNCTION_18
0xd2a	          0x8945f8	                mov dword [rbp - 8], eax	      1199	mbyte.c	FUNCTION_18
0xd2d	            0xeb72	                           jmp 0x4000de1	      1200	mbyte.c	FUNCTION_18	WHILE_1
0xd2f	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1202	mbyte.c	FUNCTION_18	WHILE_1
0xd32	          0x8b45f8	                mov eax, dword [rbp - 8]	      1202	mbyte.c	FUNCTION_18	WHILE_1
0xd35	             0x1d0	                            add eax, edx	      1202	mbyte.c	FUNCTION_18	WHILE_1
0xd37	            0x89c2	                            mov edx, eax	      1202	mbyte.c	FUNCTION_18	WHILE_1
0xd39	          0xc1ea1f	                           shr edx, 0x1f	      1202	mbyte.c	FUNCTION_18	WHILE_1
0xd3c	             0x1d0	                            add eax, edx	      1202	mbyte.c	FUNCTION_18	WHILE_1
0xd3e	            0xd1f8	                              sar eax, 1	      1202	mbyte.c	FUNCTION_18	WHILE_1
0xd40	          0x8945fc	                mov dword [rbp - 4], eax	      1202	mbyte.c	FUNCTION_18	WHILE_1
0xd43	          0x8b45fc	                mov eax, dword [rbp - 4]	      1203	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0xd46	            0x4898	                                    cdqe	      1203	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0xd48	        0x48c1e004	                              shl rax, 4	      1203	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0xd4c	          0x4889c2	                            mov rdx, rax	      1203	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0xd4f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1203	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0xd53	          0x4801d0	                            add rax, rdx	      1203	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0xd56	        0x488b5008	                mov rdx, qword [rax + 8]	      1203	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0xd5a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1203	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0xd5d	            0x4898	                                    cdqe	      1203	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0xd5f	          0x4839c2	                            cmp rdx, rax	      1203	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0xd62	            0x7d0b	                           jge 0x4000daf	      1203	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0xd64	          0x8b45fc	                mov eax, dword [rbp - 4]	      1204	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0xd67	          0x83c001	                              add eax, 1	      1204	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0xd6a	          0x8945f4	              mov dword [rbp - 0xc], eax	      1204	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0xd6d	            0xeb32	                           jmp 0x4000de1	      1204	mbyte.c	FUNCTION_18	WHILE_1	IF_2
0xd6f	          0x8b45fc	                mov eax, dword [rbp - 4]	      1205	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0xd72	            0x4898	                                    cdqe	      1205	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0xd74	        0x48c1e004	                              shl rax, 4	      1205	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0xd78	          0x4889c2	                            mov rdx, rax	      1205	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0xd7b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1205	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0xd7f	          0x4801d0	                            add rax, rdx	      1205	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0xd82	          0x488b10	                    mov rdx, qword [rax]	      1205	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0xd85	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1205	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0xd88	            0x4898	                                    cdqe	      1205	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0xd8a	          0x4839c2	                            cmp rdx, rax	      1205	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0xd8d	            0x7e0b	                           jle 0x4000dda	      1205	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0xd8f	          0x8b45fc	                mov eax, dword [rbp - 4]	      1206	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0xd92	          0x83e801	                              sub eax, 1	      1206	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0xd95	          0x8945f8	                mov dword [rbp - 8], eax	      1206	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0xd98	            0xeb07	                           jmp 0x4000de1	      1206	mbyte.c	FUNCTION_18	WHILE_1	ELSE_1	IF_3
0xd9a	      0xb801000000	                              mov eax, 1	      1208	mbyte.c	FUNCTION_18	WHILE_1	ELSE_2
0xd9f	            0xeb0d	                           jmp 0x4000dee	      1208	mbyte.c	FUNCTION_18	WHILE_1	ELSE_2
0xda1	          0x8b45f8	                mov eax, dword [rbp - 8]	      1200	mbyte.c	FUNCTION_18	WHILE_1
0xda4	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      1200	mbyte.c	FUNCTION_18	WHILE_1
0xda7	            0x7d86	                           jge 0x4000d6f	      1200	mbyte.c	FUNCTION_18	WHILE_1
0xda9	      0xb800000000	                              mov eax, 0	      1210	mbyte.c	FUNCTION_18	ELSE_2
0xdae	              0x5d	                                 pop rbp	      1211	mbyte.c	FUNCTION_18	ELSE_2
0xdaf	              0xc3	                                     ret	      1211	mbyte.c	FUNCTION_18	ELSE_2
latin_off2cells	CALL,0:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	7
0x1133	              0x55	                                push rbp	      1741	mbyte.c	FUNCTION_30
0x1134	          0x4889e5	                            mov rbp, rsp	      1741	mbyte.c	FUNCTION_30
0x1137	          0x897dfc	                mov dword [rbp - 4], edi	      1741	mbyte.c	FUNCTION_30
0x113a	          0x8975f8	                mov dword [rbp - 8], esi	      1741	mbyte.c	FUNCTION_30
0x113d	      0xb801000000	                              mov eax, 1	      1742	mbyte.c	FUNCTION_30
0x1142	              0x5d	                                 pop rbp	      1743	mbyte.c	FUNCTION_30
0x1143	              0xc3	                                     ret	      1743	mbyte.c	FUNCTION_30
utf_char2bytes	CALL,0:WHILE,0:functions,0:ELSE,0:IF,5:DO,0:SWITCH,0:FOR,0	156
0x1e62	              0x55	                                push rbp	      2266	mbyte.c	FUNCTION_51
0x1e63	          0x4889e5	                            mov rbp, rsp	      2266	mbyte.c	FUNCTION_51
0x1e66	          0x897dfc	                mov dword [rbp - 4], edi	      2266	mbyte.c	FUNCTION_51
0x1e69	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2266	mbyte.c	FUNCTION_51
0x1e6d	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      2267	mbyte.c	FUNCTION_51	IF_1
0x1e71	            0x7f15	                            jg 0x4001ec8	      2267	mbyte.c	FUNCTION_51	IF_1
0x1e73	          0x8b45fc	                mov eax, dword [rbp - 4]	      2269	mbyte.c	FUNCTION_51	IF_1
0x1e76	            0x89c2	                            mov edx, eax	      2269	mbyte.c	FUNCTION_51	IF_1
0x1e78	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2269	mbyte.c	FUNCTION_51	IF_1
0x1e7c	            0x8810	                      mov byte [rax], dl	      2269	mbyte.c	FUNCTION_51	IF_1
0x1e7e	      0xb801000000	                              mov eax, 1	      2270	mbyte.c	FUNCTION_51	IF_1
0x1e83	      0xe9d4010000	                           jmp 0x400209c	      2270	mbyte.c	FUNCTION_51	IF_1
0x1e88	    0x817dfcff0700	              cmp dword [rbp - 4], 0x7ff	      2272	mbyte.c	FUNCTION_51	IF_2
0x1e8f	            0x7f2c	                            jg 0x4001efd	      2272	mbyte.c	FUNCTION_51	IF_2
0x1e91	          0x8b45fc	                mov eax, dword [rbp - 4]	      2274	mbyte.c	FUNCTION_51	IF_2
0x1e94	          0xc1e806	                              shr eax, 6	      2274	mbyte.c	FUNCTION_51	IF_2
0x1e97	          0x8d50c0	                   lea edx, [rax - 0x40]	      2274	mbyte.c	FUNCTION_51	IF_2
0x1e9a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2274	mbyte.c	FUNCTION_51	IF_2
0x1e9e	            0x8810	                      mov byte [rax], dl	      2274	mbyte.c	FUNCTION_51	IF_2
0x1ea0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2275	mbyte.c	FUNCTION_51	IF_2
0x1ea4	        0x4883c001	                              add rax, 1	      2275	mbyte.c	FUNCTION_51	IF_2
0x1ea8	          0x8b55fc	                mov edx, dword [rbp - 4]	      2275	mbyte.c	FUNCTION_51	IF_2
0x1eab	          0x83e23f	                           and edx, 0x3f	      2275	mbyte.c	FUNCTION_51	IF_2
0x1eae	          0x83c280	             add edx, 0xffffffffffffff80	      2275	mbyte.c	FUNCTION_51	IF_2
0x1eb1	            0x8810	                      mov byte [rax], dl	      2275	mbyte.c	FUNCTION_51	IF_2
0x1eb3	      0xb802000000	                              mov eax, 2	      2276	mbyte.c	FUNCTION_51	IF_2
0x1eb8	      0xe99f010000	                           jmp 0x400209c	      2276	mbyte.c	FUNCTION_51	IF_2
0x1ebd	    0x817dfcffff00	            cmp dword [rbp - 4], 0xffff 	      2278	mbyte.c	FUNCTION_51	IF_3
0x1ec4	            0x7f42	                            jg 0x4001f48	      2278	mbyte.c	FUNCTION_51	IF_3
0x1ec6	          0x8b45fc	                mov eax, dword [rbp - 4]	      2280	mbyte.c	FUNCTION_51	IF_3
0x1ec9	          0xc1e80c	                            shr eax, 0xc	      2280	mbyte.c	FUNCTION_51	IF_3
0x1ecc	          0x8d50e0	                   lea edx, [rax - 0x20]	      2280	mbyte.c	FUNCTION_51	IF_3
0x1ecf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2280	mbyte.c	FUNCTION_51	IF_3
0x1ed3	            0x8810	                      mov byte [rax], dl	      2280	mbyte.c	FUNCTION_51	IF_3
0x1ed5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2281	mbyte.c	FUNCTION_51	IF_3
0x1ed9	        0x4883c001	                              add rax, 1	      2281	mbyte.c	FUNCTION_51	IF_3
0x1edd	          0x8b55fc	                mov edx, dword [rbp - 4]	      2281	mbyte.c	FUNCTION_51	IF_3
0x1ee0	          0xc1ea06	                              shr edx, 6	      2281	mbyte.c	FUNCTION_51	IF_3
0x1ee3	          0x83e23f	                           and edx, 0x3f	      2281	mbyte.c	FUNCTION_51	IF_3
0x1ee6	          0x83c280	             add edx, 0xffffffffffffff80	      2281	mbyte.c	FUNCTION_51	IF_3
0x1ee9	            0x8810	                      mov byte [rax], dl	      2281	mbyte.c	FUNCTION_51	IF_3
0x1eeb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2282	mbyte.c	FUNCTION_51	IF_3
0x1eef	        0x4883c002	                              add rax, 2	      2282	mbyte.c	FUNCTION_51	IF_3
0x1ef3	          0x8b55fc	                mov edx, dword [rbp - 4]	      2282	mbyte.c	FUNCTION_51	IF_3
0x1ef6	          0x83e23f	                           and edx, 0x3f	      2282	mbyte.c	FUNCTION_51	IF_3
0x1ef9	          0x83c280	             add edx, 0xffffffffffffff80	      2282	mbyte.c	FUNCTION_51	IF_3
0x1efc	            0x8810	                      mov byte [rax], dl	      2282	mbyte.c	FUNCTION_51	IF_3
0x1efe	      0xb803000000	                              mov eax, 3	      2283	mbyte.c	FUNCTION_51	IF_3
0x1f03	      0xe954010000	                           jmp 0x400209c	      2283	mbyte.c	FUNCTION_51	IF_3
0x1f08	    0x817dfcffff1f	          cmp dword [rbp - 4], 0x1fffff 	      2285	mbyte.c	FUNCTION_51	IF_4
0x1f0f	            0x7f58	                            jg 0x4001fa9	      2285	mbyte.c	FUNCTION_51	IF_4
0x1f11	          0x8b45fc	                mov eax, dword [rbp - 4]	      2287	mbyte.c	FUNCTION_51	IF_4
0x1f14	          0xc1e812	                           shr eax, 0x12	      2287	mbyte.c	FUNCTION_51	IF_4
0x1f17	          0x8d50f0	                   lea edx, [rax - 0x10]	      2287	mbyte.c	FUNCTION_51	IF_4
0x1f1a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2287	mbyte.c	FUNCTION_51	IF_4
0x1f1e	            0x8810	                      mov byte [rax], dl	      2287	mbyte.c	FUNCTION_51	IF_4
0x1f20	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2288	mbyte.c	FUNCTION_51	IF_4
0x1f24	        0x4883c001	                              add rax, 1	      2288	mbyte.c	FUNCTION_51	IF_4
0x1f28	          0x8b55fc	                mov edx, dword [rbp - 4]	      2288	mbyte.c	FUNCTION_51	IF_4
0x1f2b	          0xc1ea0c	                            shr edx, 0xc	      2288	mbyte.c	FUNCTION_51	IF_4
0x1f2e	          0x83e23f	                           and edx, 0x3f	      2288	mbyte.c	FUNCTION_51	IF_4
0x1f31	          0x83c280	             add edx, 0xffffffffffffff80	      2288	mbyte.c	FUNCTION_51	IF_4
0x1f34	            0x8810	                      mov byte [rax], dl	      2288	mbyte.c	FUNCTION_51	IF_4
0x1f36	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2289	mbyte.c	FUNCTION_51	IF_4
0x1f3a	        0x4883c002	                              add rax, 2	      2289	mbyte.c	FUNCTION_51	IF_4
0x1f3e	          0x8b55fc	                mov edx, dword [rbp - 4]	      2289	mbyte.c	FUNCTION_51	IF_4
0x1f41	          0xc1ea06	                              shr edx, 6	      2289	mbyte.c	FUNCTION_51	IF_4
0x1f44	          0x83e23f	                           and edx, 0x3f	      2289	mbyte.c	FUNCTION_51	IF_4
0x1f47	          0x83c280	             add edx, 0xffffffffffffff80	      2289	mbyte.c	FUNCTION_51	IF_4
0x1f4a	            0x8810	                      mov byte [rax], dl	      2289	mbyte.c	FUNCTION_51	IF_4
0x1f4c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2290	mbyte.c	FUNCTION_51	IF_4
0x1f50	        0x4883c003	                              add rax, 3	      2290	mbyte.c	FUNCTION_51	IF_4
0x1f54	          0x8b55fc	                mov edx, dword [rbp - 4]	      2290	mbyte.c	FUNCTION_51	IF_4
0x1f57	          0x83e23f	                           and edx, 0x3f	      2290	mbyte.c	FUNCTION_51	IF_4
0x1f5a	          0x83c280	             add edx, 0xffffffffffffff80	      2290	mbyte.c	FUNCTION_51	IF_4
0x1f5d	            0x8810	                      mov byte [rax], dl	      2290	mbyte.c	FUNCTION_51	IF_4
0x1f5f	      0xb804000000	                              mov eax, 4	      2291	mbyte.c	FUNCTION_51	IF_4
0x1f64	      0xe9f3000000	                           jmp 0x400209c	      2291	mbyte.c	FUNCTION_51	IF_4
0x1f69	    0x817dfcffffff	         cmp dword [rbp - 4], 0x3ffffff 	      2293	mbyte.c	FUNCTION_51	IF_5
0x1f70	            0x7f6b	                            jg 0x400201d	      2293	mbyte.c	FUNCTION_51	IF_5
0x1f72	          0x8b45fc	                mov eax, dword [rbp - 4]	      2295	mbyte.c	FUNCTION_51	IF_5
0x1f75	          0xc1e818	                           shr eax, 0x18	      2295	mbyte.c	FUNCTION_51	IF_5
0x1f78	          0x8d50f8	                      lea edx, [rax - 8]	      2295	mbyte.c	FUNCTION_51	IF_5
0x1f7b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2295	mbyte.c	FUNCTION_51	IF_5
0x1f7f	            0x8810	                      mov byte [rax], dl	      2295	mbyte.c	FUNCTION_51	IF_5
0x1f81	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2296	mbyte.c	FUNCTION_51	IF_5
0x1f85	        0x4883c001	                              add rax, 1	      2296	mbyte.c	FUNCTION_51	IF_5
0x1f89	          0x8b55fc	                mov edx, dword [rbp - 4]	      2296	mbyte.c	FUNCTION_51	IF_5
0x1f8c	          0xc1ea12	                           shr edx, 0x12	      2296	mbyte.c	FUNCTION_51	IF_5
0x1f8f	          0x83e23f	                           and edx, 0x3f	      2296	mbyte.c	FUNCTION_51	IF_5
0x1f92	          0x83c280	             add edx, 0xffffffffffffff80	      2296	mbyte.c	FUNCTION_51	IF_5
0x1f95	            0x8810	                      mov byte [rax], dl	      2296	mbyte.c	FUNCTION_51	IF_5
0x1f97	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2297	mbyte.c	FUNCTION_51	IF_5
0x1f9b	        0x4883c002	                              add rax, 2	      2297	mbyte.c	FUNCTION_51	IF_5
0x1f9f	          0x8b55fc	                mov edx, dword [rbp - 4]	      2297	mbyte.c	FUNCTION_51	IF_5
0x1fa2	          0xc1ea0c	                            shr edx, 0xc	      2297	mbyte.c	FUNCTION_51	IF_5
0x1fa5	          0x83e23f	                           and edx, 0x3f	      2297	mbyte.c	FUNCTION_51	IF_5
0x1fa8	          0x83c280	             add edx, 0xffffffffffffff80	      2297	mbyte.c	FUNCTION_51	IF_5
0x1fab	            0x8810	                      mov byte [rax], dl	      2297	mbyte.c	FUNCTION_51	IF_5
0x1fad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2298	mbyte.c	FUNCTION_51	IF_5
0x1fb1	        0x4883c003	                              add rax, 3	      2298	mbyte.c	FUNCTION_51	IF_5
0x1fb5	          0x8b55fc	                mov edx, dword [rbp - 4]	      2298	mbyte.c	FUNCTION_51	IF_5
0x1fb8	          0xc1ea06	                              shr edx, 6	      2298	mbyte.c	FUNCTION_51	IF_5
0x1fbb	          0x83e23f	                           and edx, 0x3f	      2298	mbyte.c	FUNCTION_51	IF_5
0x1fbe	          0x83c280	             add edx, 0xffffffffffffff80	      2298	mbyte.c	FUNCTION_51	IF_5
0x1fc1	            0x8810	                      mov byte [rax], dl	      2298	mbyte.c	FUNCTION_51	IF_5
0x1fc3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2299	mbyte.c	FUNCTION_51	IF_5
0x1fc7	        0x4883c004	                              add rax, 4	      2299	mbyte.c	FUNCTION_51	IF_5
0x1fcb	          0x8b55fc	                mov edx, dword [rbp - 4]	      2299	mbyte.c	FUNCTION_51	IF_5
0x1fce	          0x83e23f	                           and edx, 0x3f	      2299	mbyte.c	FUNCTION_51	IF_5
0x1fd1	          0x83c280	             add edx, 0xffffffffffffff80	      2299	mbyte.c	FUNCTION_51	IF_5
0x1fd4	            0x8810	                      mov byte [rax], dl	      2299	mbyte.c	FUNCTION_51	IF_5
0x1fd6	      0xb805000000	                              mov eax, 5	      2300	mbyte.c	FUNCTION_51	IF_5
0x1fdb	            0xeb7f	                           jmp 0x400209c	      2300	mbyte.c	FUNCTION_51	IF_5
0x1fdd	          0x8b45fc	                mov eax, dword [rbp - 4]	      2303	mbyte.c	FUNCTION_51
0x1fe0	          0xc1e81e	                           shr eax, 0x1e	      2303	mbyte.c	FUNCTION_51
0x1fe3	          0x8d50fc	                      lea edx, [rax - 4]	      2303	mbyte.c	FUNCTION_51
0x1fe6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2303	mbyte.c	FUNCTION_51
0x1fea	            0x8810	                      mov byte [rax], dl	      2303	mbyte.c	FUNCTION_51
0x1fec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2304	mbyte.c	FUNCTION_51
0x1ff0	        0x4883c001	                              add rax, 1	      2304	mbyte.c	FUNCTION_51
0x1ff4	          0x8b55fc	                mov edx, dword [rbp - 4]	      2304	mbyte.c	FUNCTION_51
0x1ff7	          0xc1ea18	                           shr edx, 0x18	      2304	mbyte.c	FUNCTION_51
0x1ffa	          0x83e23f	                           and edx, 0x3f	      2304	mbyte.c	FUNCTION_51
0x1ffd	          0x83c280	             add edx, 0xffffffffffffff80	      2304	mbyte.c	FUNCTION_51
0x2000	            0x8810	                      mov byte [rax], dl	      2304	mbyte.c	FUNCTION_51
0x2002	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2305	mbyte.c	FUNCTION_51
0x2006	        0x4883c002	                              add rax, 2	      2305	mbyte.c	FUNCTION_51
0x200a	          0x8b55fc	                mov edx, dword [rbp - 4]	      2305	mbyte.c	FUNCTION_51
0x200d	          0xc1ea12	                           shr edx, 0x12	      2305	mbyte.c	FUNCTION_51
0x2010	          0x83e23f	                           and edx, 0x3f	      2305	mbyte.c	FUNCTION_51
0x2013	          0x83c280	             add edx, 0xffffffffffffff80	      2305	mbyte.c	FUNCTION_51
0x2016	            0x8810	                      mov byte [rax], dl	      2305	mbyte.c	FUNCTION_51
0x2018	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2306	mbyte.c	FUNCTION_51
0x201c	        0x4883c003	                              add rax, 3	      2306	mbyte.c	FUNCTION_51
0x2020	          0x8b55fc	                mov edx, dword [rbp - 4]	      2306	mbyte.c	FUNCTION_51
0x2023	          0xc1ea0c	                            shr edx, 0xc	      2306	mbyte.c	FUNCTION_51
0x2026	          0x83e23f	                           and edx, 0x3f	      2306	mbyte.c	FUNCTION_51
0x2029	          0x83c280	             add edx, 0xffffffffffffff80	      2306	mbyte.c	FUNCTION_51
0x202c	            0x8810	                      mov byte [rax], dl	      2306	mbyte.c	FUNCTION_51
0x202e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2307	mbyte.c	FUNCTION_51
0x2032	        0x4883c004	                              add rax, 4	      2307	mbyte.c	FUNCTION_51
0x2036	          0x8b55fc	                mov edx, dword [rbp - 4]	      2307	mbyte.c	FUNCTION_51
0x2039	          0xc1ea06	                              shr edx, 6	      2307	mbyte.c	FUNCTION_51
0x203c	          0x83e23f	                           and edx, 0x3f	      2307	mbyte.c	FUNCTION_51
0x203f	          0x83c280	             add edx, 0xffffffffffffff80	      2307	mbyte.c	FUNCTION_51
0x2042	            0x8810	                      mov byte [rax], dl	      2307	mbyte.c	FUNCTION_51
0x2044	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2308	mbyte.c	FUNCTION_51
0x2048	        0x4883c005	                              add rax, 5	      2308	mbyte.c	FUNCTION_51
0x204c	          0x8b55fc	                mov edx, dword [rbp - 4]	      2308	mbyte.c	FUNCTION_51
0x204f	          0x83e23f	                           and edx, 0x3f	      2308	mbyte.c	FUNCTION_51
0x2052	          0x83c280	             add edx, 0xffffffffffffff80	      2308	mbyte.c	FUNCTION_51
0x2055	            0x8810	                      mov byte [rax], dl	      2308	mbyte.c	FUNCTION_51
0x2057	      0xb806000000	                              mov eax, 6	      2309	mbyte.c	FUNCTION_51
0x205c	              0x5d	                                 pop rbp	      2310	mbyte.c	FUNCTION_51
0x205d	              0xc3	                                     ret	      2310	mbyte.c	FUNCTION_51
utf_off2cells	CALL,0:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	21
0x11a6	              0x55	                                push rbp	      1761	mbyte.c	FUNCTION_32
0x11a7	          0x4889e5	                            mov rbp, rsp	      1761	mbyte.c	FUNCTION_32
0x11aa	          0x897dfc	                mov dword [rbp - 4], edi	      1761	mbyte.c	FUNCTION_32
0x11ad	          0x8975f8	                mov dword [rbp - 8], esi	      1761	mbyte.c	FUNCTION_32
0x11b0	          0x8b45fc	                mov eax, dword [rbp - 4]	      1762	mbyte.c	FUNCTION_32
0x11b3	          0x83c001	                              add eax, 1	      1762	mbyte.c	FUNCTION_32
0x11b6	          0x3b45f8	                cmp eax, dword [rbp - 8]	      1762	mbyte.c	FUNCTION_32
0x11b9	            0x7320	                           jae 0x400121b	      1762	mbyte.c	FUNCTION_32
0x11bb	    0x488b05000000	            mov rax, qword [0x04001202] 	      1762	mbyte.c	FUNCTION_32
0x11c2	          0x8b55fc	                mov edx, dword [rbp - 4]	      1762	mbyte.c	FUNCTION_32
0x11c5	          0x83c201	                              add edx, 1	      1762	mbyte.c	FUNCTION_32
0x11c8	            0x89d2	                            mov edx, edx	      1762	mbyte.c	FUNCTION_32
0x11ca	          0x4801d0	                            add rax, rdx	      1762	mbyte.c	FUNCTION_32
0x11cd	           0xfb600	                   movzx eax, byte [rax]	      1762	mbyte.c	FUNCTION_32
0x11d0	            0x84c0	                             test al, al	      1762	mbyte.c	FUNCTION_32
0x11d2	            0x7507	                           jne 0x400121b	      1762	mbyte.c	FUNCTION_32
0x11d4	      0xb802000000	                              mov eax, 2	      1762	mbyte.c	FUNCTION_32
0x11d9	            0xeb05	                           jmp 0x4001220	      1762	mbyte.c	FUNCTION_32
0x11db	      0xb801000000	                              mov eax, 1	      1762	mbyte.c	FUNCTION_32
0x11e0	              0x5d	                                 pop rbp	      1763	mbyte.c	FUNCTION_32
0x11e1	              0xc3	                                     ret	      1763	mbyte.c	FUNCTION_32
utf_ptr2char	CALL,0:WHILE,0:functions,0:ELSE,0:IF,10:DO,0:SWITCH,0:FOR,0	204
0x1251	              0x55	                                push rbp	      1791	mbyte.c	FUNCTION_35
0x1252	          0x4889e5	                            mov rbp, rsp	      1791	mbyte.c	FUNCTION_35
0x1255	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1791	mbyte.c	FUNCTION_35
0x1259	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1794	mbyte.c	FUNCTION_35	IF_1
0x125d	           0xfb600	                   movzx eax, byte [rax]	      1794	mbyte.c	FUNCTION_35	IF_1
0x1260	            0x84c0	                             test al, al	      1794	mbyte.c	FUNCTION_35	IF_1
0x1262	            0x780f	                            js 0x40012b3	      1794	mbyte.c	FUNCTION_35	IF_1
0x1264	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1795	mbyte.c	FUNCTION_35	IF_1
0x1268	           0xfb600	                   movzx eax, byte [rax]	      1795	mbyte.c	FUNCTION_35	IF_1
0x126b	           0xfb6c0	                           movzx eax, al	      1795	mbyte.c	FUNCTION_35	IF_1
0x126e	      0xe98a020000	                           jmp 0x400153d	      1795	mbyte.c	FUNCTION_35	IF_1
0x1273	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1797	mbyte.c	FUNCTION_35
0x1277	           0xfb600	                   movzx eax, byte [rax]	      1797	mbyte.c	FUNCTION_35
0x127a	           0xfb6c0	                           movzx eax, al	      1797	mbyte.c	FUNCTION_35
0x127d	            0x4898	                                    cdqe	      1797	mbyte.c	FUNCTION_35
0x127f	     0xfb680000000	                   movzx eax, byte [rax]	      1797	mbyte.c	FUNCTION_35
0x1286	           0xfbec0	                           movsx eax, al	      1797	mbyte.c	FUNCTION_35
0x1289	          0x8945fc	                mov dword [rbp - 4], eax	      1797	mbyte.c	FUNCTION_35
0x128c	        0x837dfc01	                  cmp dword [rbp - 4], 1	      1798	mbyte.c	FUNCTION_35	IF_2
0x1290	     0xf8e5d020000	                           jle 0x4001533	      1798	mbyte.c	FUNCTION_35	IF_2
0x1296	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1798	mbyte.c	FUNCTION_35	IF_2
0x129a	        0x4883c001	                              add rax, 1	      1798	mbyte.c	FUNCTION_35	IF_2
0x129e	           0xfb600	                   movzx eax, byte [rax]	      1798	mbyte.c	FUNCTION_35	IF_2
0x12a1	           0xfb6c0	                           movzx eax, al	      1798	mbyte.c	FUNCTION_35	IF_2
0x12a4	      0x25c0000000	                           and eax, 0xc0	      1798	mbyte.c	FUNCTION_35	IF_2
0x12a9	      0x3d80000000	                           cmp eax, 0x80	      1798	mbyte.c	FUNCTION_35	IF_2
0x12ae	     0xf853f020000	                           jne 0x4001533	      1798	mbyte.c	FUNCTION_35	IF_2
0x12b4	        0x837dfc02	                  cmp dword [rbp - 4], 2	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x12b8	            0x752a	                           jne 0x4001324	      1800	mbyte.c	FUNCTION_35	IF_2	IF_3
0x12ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1801	mbyte.c	FUNCTION_35	IF_2	IF_3
0x12be	           0xfb600	                   movzx eax, byte [rax]	      1801	mbyte.c	FUNCTION_35	IF_2	IF_3
0x12c1	           0xfb6c0	                           movzx eax, al	      1801	mbyte.c	FUNCTION_35	IF_2	IF_3
0x12c4	          0x83e01f	                           and eax, 0x1f	      1801	mbyte.c	FUNCTION_35	IF_2	IF_3
0x12c7	          0xc1e006	                              shl eax, 6	      1801	mbyte.c	FUNCTION_35	IF_2	IF_3
0x12ca	            0x89c2	                            mov edx, eax	      1801	mbyte.c	FUNCTION_35	IF_2	IF_3
0x12cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1801	mbyte.c	FUNCTION_35	IF_2	IF_3
0x12d0	        0x4883c001	                              add rax, 1	      1801	mbyte.c	FUNCTION_35	IF_2	IF_3
0x12d4	           0xfb600	                   movzx eax, byte [rax]	      1801	mbyte.c	FUNCTION_35	IF_2	IF_3
0x12d7	           0xfb6c0	                           movzx eax, al	      1801	mbyte.c	FUNCTION_35	IF_2	IF_3
0x12da	          0x83e03f	                           and eax, 0x3f	      1801	mbyte.c	FUNCTION_35	IF_2	IF_3
0x12dd	             0x1d0	                            add eax, edx	      1801	mbyte.c	FUNCTION_35	IF_2	IF_3
0x12df	      0xe919020000	                           jmp 0x400153d	      1801	mbyte.c	FUNCTION_35	IF_2	IF_3
0x12e4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1802	mbyte.c	FUNCTION_35	IF_2	IF_4
0x12e8	        0x4883c002	                              add rax, 2	      1802	mbyte.c	FUNCTION_35	IF_2	IF_4
0x12ec	           0xfb600	                   movzx eax, byte [rax]	      1802	mbyte.c	FUNCTION_35	IF_2	IF_4
0x12ef	           0xfb6c0	                           movzx eax, al	      1802	mbyte.c	FUNCTION_35	IF_2	IF_4
0x12f2	      0x25c0000000	                           and eax, 0xc0	      1802	mbyte.c	FUNCTION_35	IF_2	IF_4
0x12f7	      0x3d80000000	                           cmp eax, 0x80	      1802	mbyte.c	FUNCTION_35	IF_2	IF_4
0x12fc	     0xf85f1010000	                           jne 0x4001533	      1802	mbyte.c	FUNCTION_35	IF_2	IF_4
0x1302	        0x837dfc03	                  cmp dword [rbp - 4], 3	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x1306	            0x753e	                           jne 0x4001386	      1804	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x1308	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1805	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x130c	           0xfb600	                   movzx eax, byte [rax]	      1805	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x130f	           0xfb6c0	                           movzx eax, al	      1805	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x1312	          0xc1e00c	                            shl eax, 0xc	      1805	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x1315	           0xfb7c0	                           movzx eax, ax	      1805	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x1318	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1805	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x131c	        0x4883c201	                              add rdx, 1	      1805	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x1320	           0xfb612	                   movzx edx, byte [rdx]	      1805	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x1323	           0xfb6d2	                           movzx edx, dl	      1805	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x1326	          0x83e23f	                           and edx, 0x3f	      1805	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x1329	          0xc1e206	                              shl edx, 6	      1805	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x132c	             0x1c2	                            add edx, eax	      1805	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x132e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1806	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x1332	        0x4883c002	                              add rax, 2	      1806	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x1336	           0xfb600	                   movzx eax, byte [rax]	      1806	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x1339	           0xfb6c0	                           movzx eax, al	      1806	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x133c	          0x83e03f	                           and eax, 0x3f	      1806	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x133f	             0x1d0	                            add eax, edx	      1805	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x1341	      0xe9b7010000	                           jmp 0x400153d	      1805	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_5
0x1346	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1807	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x134a	        0x4883c003	                              add rax, 3	      1807	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x134e	           0xfb600	                   movzx eax, byte [rax]	      1807	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x1351	           0xfb6c0	                           movzx eax, al	      1807	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x1354	      0x25c0000000	                           and eax, 0xc0	      1807	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x1359	      0x3d80000000	                           cmp eax, 0x80	      1807	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x135e	     0xf858f010000	                           jne 0x4001533	      1807	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6
0x1364	        0x837dfc04	                  cmp dword [rbp - 4], 4	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x1368	            0x7556	                           jne 0x4001400	      1809	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x136a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x136e	           0xfb600	                   movzx eax, byte [rax]	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x1371	           0xfb6c0	                           movzx eax, al	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x1374	          0x83e007	                              and eax, 7	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x1377	          0xc1e012	                           shl eax, 0x12	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x137a	            0x89c2	                            mov edx, eax	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x137c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x1380	        0x4883c001	                              add rax, 1	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x1384	           0xfb600	                   movzx eax, byte [rax]	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x1387	           0xfb6c0	                           movzx eax, al	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x138a	          0x83e03f	                           and eax, 0x3f	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x138d	          0xc1e00c	                            shl eax, 0xc	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x1390	             0x1c2	                            add edx, eax	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x1392	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x1396	        0x4883c002	                              add rax, 2	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x139a	           0xfb600	                   movzx eax, byte [rax]	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x139d	           0xfb6c0	                           movzx eax, al	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x13a0	          0x83e03f	                           and eax, 0x3f	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x13a3	          0xc1e006	                              shl eax, 6	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x13a6	             0x1c2	                            add edx, eax	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x13a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x13ac	        0x4883c003	                              add rax, 3	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x13b0	           0xfb600	                   movzx eax, byte [rax]	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x13b3	           0xfb6c0	                           movzx eax, al	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x13b6	          0x83e03f	                           and eax, 0x3f	      1811	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x13b9	             0x1d0	                            add eax, edx	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x13bb	      0xe93d010000	                           jmp 0x400153d	      1810	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_7
0x13c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1812	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x13c4	        0x4883c004	                              add rax, 4	      1812	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x13c8	           0xfb600	                   movzx eax, byte [rax]	      1812	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x13cb	           0xfb6c0	                           movzx eax, al	      1812	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x13ce	      0x25c0000000	                           and eax, 0xc0	      1812	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x13d3	      0x3d80000000	                           cmp eax, 0x80	      1812	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x13d8	     0xf8515010000	                           jne 0x4001533	      1812	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8
0x13de	        0x837dfc05	                  cmp dword [rbp - 4], 5	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x13e2	            0x756c	                           jne 0x4001490	      1814	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x13e4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x13e8	           0xfb600	                   movzx eax, byte [rax]	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x13eb	           0xfb6c0	                           movzx eax, al	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x13ee	          0x83e003	                              and eax, 3	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x13f1	          0xc1e018	                           shl eax, 0x18	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x13f4	            0x89c2	                            mov edx, eax	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x13f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x13fa	        0x4883c001	                              add rax, 1	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x13fe	           0xfb600	                   movzx eax, byte [rax]	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x1401	           0xfb6c0	                           movzx eax, al	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x1404	          0x83e03f	                           and eax, 0x3f	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x1407	          0xc1e012	                           shl eax, 0x12	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x140a	             0x1c2	                            add edx, eax	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x140c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1816	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x1410	        0x4883c002	                              add rax, 2	      1816	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x1414	           0xfb600	                   movzx eax, byte [rax]	      1816	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x1417	           0xfb6c0	                           movzx eax, al	      1816	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x141a	          0x83e03f	                           and eax, 0x3f	      1816	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x141d	          0xc1e00c	                            shl eax, 0xc	      1816	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x1420	             0x1c2	                            add edx, eax	      1816	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x1422	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1816	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x1426	        0x4883c003	                              add rax, 3	      1816	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x142a	           0xfb600	                   movzx eax, byte [rax]	      1816	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x142d	           0xfb6c0	                           movzx eax, al	      1816	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x1430	          0x83e03f	                           and eax, 0x3f	      1816	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x1433	          0xc1e006	                              shl eax, 6	      1816	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x1436	             0x1c2	                            add edx, eax	      1816	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x1438	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x143c	        0x4883c004	                              add rax, 4	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x1440	           0xfb600	                   movzx eax, byte [rax]	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x1443	           0xfb6c0	                           movzx eax, al	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x1446	          0x83e03f	                           and eax, 0x3f	      1817	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x1449	             0x1d0	                            add eax, edx	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x144b	      0xe9ad000000	                           jmp 0x400153d	      1815	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_9
0x1450	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x1454	        0x4883c005	                              add rax, 5	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x1458	           0xfb600	                   movzx eax, byte [rax]	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x145b	           0xfb6c0	                           movzx eax, al	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x145e	      0x25c0000000	                           and eax, 0xc0	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x1463	      0x3d80000000	                           cmp eax, 0x80	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x1468	     0xf8585000000	                           jne 0x4001533	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x146e	        0x837dfc06	                  cmp dword [rbp - 4], 6	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x1472	            0x757f	                           jne 0x4001533	      1818	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x1474	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x1478	           0xfb600	                   movzx eax, byte [rax]	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x147b	           0xfb6c0	                           movzx eax, al	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x147e	          0x83e001	                              and eax, 1	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x1481	          0xc1e01e	                           shl eax, 0x1e	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x1484	            0x89c2	                            mov edx, eax	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x1486	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x148a	        0x4883c001	                              add rax, 1	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x148e	           0xfb600	                   movzx eax, byte [rax]	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x1491	           0xfb6c0	                           movzx eax, al	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x1494	          0x83e03f	                           and eax, 0x3f	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x1497	          0xc1e018	                           shl eax, 0x18	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x149a	             0x1c2	                            add edx, eax	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x149c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14a0	        0x4883c002	                              add rax, 2	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14a4	           0xfb600	                   movzx eax, byte [rax]	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14a7	           0xfb6c0	                           movzx eax, al	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14aa	          0x83e03f	                           and eax, 0x3f	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14ad	          0xc1e012	                           shl eax, 0x12	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14b0	             0x1c2	                            add edx, eax	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14b6	        0x4883c003	                              add rax, 3	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14ba	           0xfb600	                   movzx eax, byte [rax]	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14bd	           0xfb6c0	                           movzx eax, al	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14c0	          0x83e03f	                           and eax, 0x3f	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14c3	          0xc1e00c	                            shl eax, 0xc	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14c6	             0x1c2	                            add edx, eax	      1820	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1821	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14cc	        0x4883c004	                              add rax, 4	      1821	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14d0	           0xfb600	                   movzx eax, byte [rax]	      1821	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14d3	           0xfb6c0	                           movzx eax, al	      1821	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14d6	          0x83e03f	                           and eax, 0x3f	      1821	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14d9	          0xc1e006	                              shl eax, 6	      1821	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14dc	             0x1c2	                            add edx, eax	      1821	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1821	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14e2	        0x4883c005	                              add rax, 5	      1821	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14e6	           0xfb600	                   movzx eax, byte [rax]	      1821	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14e9	           0xfb6c0	                           movzx eax, al	      1821	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14ec	          0x83e03f	                           and eax, 0x3f	      1821	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14ef	             0x1d0	                            add eax, edx	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14f1	            0xeb0a	                           jmp 0x400153d	      1819	mbyte.c	FUNCTION_35	IF_2	IF_4	IF_6	IF_8	IF_10
0x14f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1827	mbyte.c	FUNCTION_35
0x14f7	           0xfb600	                   movzx eax, byte [rax]	      1827	mbyte.c	FUNCTION_35
0x14fa	           0xfb6c0	                           movzx eax, al	      1827	mbyte.c	FUNCTION_35
0x14fd	              0x5d	                                 pop rbp	      1828	mbyte.c	FUNCTION_35
0x14fe	              0xc3	                                     ret	      1828	mbyte.c	FUNCTION_35
utf_class_buf	CALL,2:WHILE,1:functions,0:ELSE,2:IF,6:DO,0:SWITCH,0:FOR,0	92
0x20e0	              0x55	                                push rbp	      2789	mbyte.c	FUNCTION_56
0x20e1	          0x4889e5	                            mov rbp, rsp	      2789	mbyte.c	FUNCTION_56
0x20e4	        0x4883ec20	                           sub rsp, 0x20	      2789	mbyte.c	FUNCTION_56
0x20e8	          0x897dec	             mov dword [rbp - 0x14], edi	      2789	mbyte.c	FUNCTION_56
0x20eb	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2789	mbyte.c	FUNCTION_56
0x20ef	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      2867	mbyte.c	FUNCTION_56
0x20f6	    0xc745f8420000	               mov dword [rbp - 8], 0x42	      2868	mbyte.c	FUNCTION_56
0x20fd	    0x817decff0000	           cmp dword [rbp - 0x14], 0xff 	      2872	mbyte.c	FUNCTION_56	IF_1
0x2104	     0xf8fd9000000	                            jg 0x4002223	      2872	mbyte.c	FUNCTION_56	IF_1
0x210a	        0x837dec20	           cmp dword [rbp - 0x14], 0x20 	      2874	mbyte.c	FUNCTION_56	IF_1	IF_2
0x210e	            0x7415	                            je 0x4002165	      2874	mbyte.c	FUNCTION_56	IF_1	IF_2
0x2110	        0x837dec09	               cmp dword [rbp - 0x14], 9	      2874	mbyte.c	FUNCTION_56	IF_1	IF_2
0x2114	            0x740f	                            je 0x4002165	      2874	mbyte.c	FUNCTION_56	IF_1	IF_2
0x2116	        0x837dec00	               cmp dword [rbp - 0x14], 0	      2874	mbyte.c	FUNCTION_56	IF_1	IF_2
0x211a	            0x7409	                            je 0x4002165	      2874	mbyte.c	FUNCTION_56	IF_1	IF_2
0x211c	    0x817deca00000	           cmp dword [rbp - 0x14], 0xa0 	      2874	mbyte.c	FUNCTION_56	IF_1	IF_2
0x2123	            0x750a	                           jne 0x400216f	      2874	mbyte.c	FUNCTION_56	IF_1	IF_2
0x2125	      0xb800000000	                              mov eax, 0	      2875	mbyte.c	FUNCTION_56	IF_1	IF_2
0x212a	      0xe9e4000000	                           jmp 0x4002253	      2875	mbyte.c	FUNCTION_56	IF_1	IF_2
0x212f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2876	mbyte.c	FUNCTION_56	IF_1	IF_3	CALL_1
0x2133	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2876	mbyte.c	FUNCTION_56	IF_1	IF_3	CALL_1
0x2136	          0x4889d6	                            mov rsi, rdx	      2876	mbyte.c	FUNCTION_56	IF_1	IF_3	CALL_1
0x2139	            0x89c7	                            mov edi, eax	      2876	mbyte.c	FUNCTION_56	IF_1	IF_3	CALL_1
0x213b	      0xe800000000	                          call 0x4002180	      2876	mbyte.c	FUNCTION_56	IF_1	IF_3	CALL_1
0x2140	            0x85c0	                           test eax, eax	      2876	mbyte.c	FUNCTION_56	IF_1	IF_3	CALL_1
0x2142	            0x740a	                            je 0x400218e	      2876	mbyte.c	FUNCTION_56	IF_1	IF_3	CALL_1
0x2144	      0xb802000000	                              mov eax, 2	      2877	mbyte.c	FUNCTION_56	IF_1	IF_3
0x2149	      0xe9c5000000	                           jmp 0x4002253	      2877	mbyte.c	FUNCTION_56	IF_1	IF_3
0x214e	      0xb801000000	                              mov eax, 1	      2878	mbyte.c	FUNCTION_56	IF_1
0x2153	      0xe9bb000000	                           jmp 0x4002253	      2878	mbyte.c	FUNCTION_56	IF_1
0x2158	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2884	mbyte.c	FUNCTION_56	WHILE_1
0x215b	          0x8b45f8	                mov eax, dword [rbp - 8]	      2884	mbyte.c	FUNCTION_56	WHILE_1
0x215e	             0x1d0	                            add eax, edx	      2884	mbyte.c	FUNCTION_56	WHILE_1
0x2160	            0x89c2	                            mov edx, eax	      2884	mbyte.c	FUNCTION_56	WHILE_1
0x2162	          0xc1ea1f	                           shr edx, 0x1f	      2884	mbyte.c	FUNCTION_56	WHILE_1
0x2165	             0x1d0	                            add eax, edx	      2884	mbyte.c	FUNCTION_56	WHILE_1
0x2167	            0xd1f8	                              sar eax, 1	      2884	mbyte.c	FUNCTION_56	WHILE_1
0x2169	          0x8945fc	                mov dword [rbp - 4], eax	      2884	mbyte.c	FUNCTION_56	WHILE_1
0x216c	          0x8b45fc	                mov eax, dword [rbp - 4]	      2885	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x216f	          0x4863d0	                         movsxd rdx, eax	      2885	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x2172	          0x4889d0	                            mov rax, rdx	      2885	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x2175	          0x4801c0	                            add rax, rax	      2885	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x2178	          0x4801d0	                            add rax, rdx	      2885	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x217b	        0x48c1e002	                              shl rax, 2	      2885	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x217f	    0x480500000000	                              add rax, 0	      2885	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x2185	            0x8b10	                    mov edx, dword [rax]	      2885	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x2187	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2885	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x218a	            0x39c2	                            cmp edx, eax	      2885	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x218c	            0x730b	                           jae 0x40021d9	      2885	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x218e	          0x8b45fc	                mov eax, dword [rbp - 4]	      2886	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x2191	          0x83c001	                              add eax, 1	      2886	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x2194	          0x8945f4	              mov dword [rbp - 0xc], eax	      2886	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x2197	            0xeb4a	                           jmp 0x4002223	      2886	mbyte.c	FUNCTION_56	WHILE_1	IF_4
0x2199	          0x8b45fc	                mov eax, dword [rbp - 4]	      2887	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x219c	          0x4863d0	                         movsxd rdx, eax	      2887	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x219f	          0x4889d0	                            mov rax, rdx	      2887	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x21a2	          0x4801c0	                            add rax, rax	      2887	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x21a5	          0x4801d0	                            add rax, rdx	      2887	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x21a8	        0x48c1e002	                              shl rax, 2	      2887	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x21ac	    0x480500000000	                              add rax, 0	      2887	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x21b2	            0x8b10	                    mov edx, dword [rax]	      2887	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x21b4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2887	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x21b7	            0x39c2	                            cmp edx, eax	      2887	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x21b9	            0x760b	                           jbe 0x4002206	      2887	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x21bb	          0x8b45fc	                mov eax, dword [rbp - 4]	      2888	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x21be	          0x83e801	                              sub eax, 1	      2888	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x21c1	          0x8945f8	                mov dword [rbp - 8], eax	      2888	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x21c4	            0xeb1d	                           jmp 0x4002223	      2888	mbyte.c	FUNCTION_56	WHILE_1	ELSE_1	IF_5
0x21c6	          0x8b45fc	                mov eax, dword [rbp - 4]	      2890	mbyte.c	FUNCTION_56	WHILE_1	ELSE_2
0x21c9	          0x4863d0	                         movsxd rdx, eax	      2890	mbyte.c	FUNCTION_56	WHILE_1	ELSE_2
0x21cc	          0x4889d0	                            mov rax, rdx	      2890	mbyte.c	FUNCTION_56	WHILE_1	ELSE_2
0x21cf	          0x4801c0	                            add rax, rax	      2890	mbyte.c	FUNCTION_56	WHILE_1	ELSE_2
0x21d2	          0x4801d0	                            add rax, rdx	      2890	mbyte.c	FUNCTION_56	WHILE_1	ELSE_2
0x21d5	        0x48c1e002	                              shl rax, 2	      2890	mbyte.c	FUNCTION_56	WHILE_1	ELSE_2
0x21d9	    0x480500000000	                              add rax, 0	      2890	mbyte.c	FUNCTION_56	WHILE_1	ELSE_2
0x21df	            0x8b00	                    mov eax, dword [rax]	      2890	mbyte.c	FUNCTION_56	WHILE_1	ELSE_2
0x21e1	            0xeb30	                           jmp 0x4002253	      2890	mbyte.c	FUNCTION_56	WHILE_1	ELSE_2
0x21e3	          0x8b45f8	                mov eax, dword [rbp - 8]	      2882	mbyte.c	FUNCTION_56	WHILE_1
0x21e6	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      2882	mbyte.c	FUNCTION_56	WHILE_1
0x21e9	     0xf8d69ffffff	                           jge 0x4002198	      2882	mbyte.c	FUNCTION_56	WHILE_1
0x21ef	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2894	mbyte.c	FUNCTION_56	IF_6	CALL_2
0x21f2	            0x89c2	                            mov edx, eax	      2894	mbyte.c	FUNCTION_56	IF_6	CALL_2
0x21f4	      0xbec0080000	                          mov esi, 0x8c0	      2894	mbyte.c	FUNCTION_56	IF_6	CALL_2
0x21f9	      0xbf00000000	                              mov edi, 0	      2894	mbyte.c	FUNCTION_56	IF_6	CALL_2
0x21fe	      0xe8eaeaffff	                        call sym.intable	      2894	mbyte.c	FUNCTION_56	IF_6	CALL_2
0x2203	            0x85c0	                           test eax, eax	      2894	mbyte.c	FUNCTION_56	IF_6	CALL_2
0x2205	            0x7407	                            je 0x400224e	      2894	mbyte.c	FUNCTION_56	IF_6	CALL_2
0x2207	      0xb803000000	                              mov eax, 3	      2895	mbyte.c	FUNCTION_56	IF_6
0x220c	            0xeb05	                           jmp 0x4002253	      2895	mbyte.c	FUNCTION_56	IF_6
0x220e	      0xb802000000	                              mov eax, 2	      2898	mbyte.c	FUNCTION_56
0x2213	              0xc9	                                   leave	      2899	mbyte.c	FUNCTION_56
0x2214	              0xc3	                                     ret	      2899	mbyte.c	FUNCTION_56
dbcs_class	CALL,0:WHILE,0:functions,0:ELSE,8:IF,8:DO,0:SWITCH,4:FOR,0	120
0x98e	              0x55	                                push rbp	       908	mbyte.c	FUNCTION_9
0x98f	          0x4889e5	                            mov rbp, rsp	       908	mbyte.c	FUNCTION_9
0x992	          0x897dec	             mov dword [rbp - 0x14], edi	       908	mbyte.c	FUNCTION_9
0x995	          0x8975e8	             mov dword [rbp - 0x18], esi	       908	mbyte.c	FUNCTION_9
0x998	    0x8b0500000000	            mov eax, dword [0x040009de] 	       909	mbyte.c	FUNCTION_9	SWITCH_1
0x99e	      0x3db5030000	                          cmp eax, 0x3b5	       909	mbyte.c	FUNCTION_9	SWITCH_1
0x9a3	     0xf84f3000000	                            je 0x4000adc	       909	mbyte.c	FUNCTION_9	SWITCH_1
0x9a9	      0x3db5030000	                          cmp eax, 0x3b5	       909	mbyte.c	FUNCTION_9	SWITCH_1
0x9ae	            0x7f0c	                            jg 0x40009fc	       909	mbyte.c	FUNCTION_9	SWITCH_1
0x9b0	      0x3da4030000	                          cmp eax, 0x3a4	       909	mbyte.c	FUNCTION_9	SWITCH_1
0x9b5	            0x741c	                            je 0x4000a13	       909	mbyte.c	FUNCTION_9	SWITCH_1
0x9b7	      0xe988010000	                           jmp 0x4000b84	      1070	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_8
0x9bc	      0x3dcc260000	                         cmp eax, 0x26cc	       909	mbyte.c	FUNCTION_9	SWITCH_1
0x9c1	            0x7410	                            je 0x4000a13	       909	mbyte.c	FUNCTION_9	SWITCH_1
0x9c3	      0x3ddd260000	                         cmp eax, 0x26dd	       909	mbyte.c	FUNCTION_9	SWITCH_1
0x9c8	     0xf84ce000000	                            je 0x4000adc	       909	mbyte.c	FUNCTION_9	SWITCH_1
0x9ce	      0xe971010000	                           jmp 0x4000b84	      1070	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_8
0x9d3	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       917	mbyte.c	FUNCTION_9	SWITCH_1
0x9d6	          0x8845fc	                  mov byte [rbp - 4], al	       917	mbyte.c	FUNCTION_9	SWITCH_1
0x9d9	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       918	mbyte.c	FUNCTION_9	SWITCH_1
0x9dc	          0x8845fd	                  mov byte [rbp - 3], al	       918	mbyte.c	FUNCTION_9	SWITCH_1
0x9df	        0x8065fc7f	                and byte [rbp - 4], 0x7f	       947	mbyte.c	FUNCTION_9	SWITCH_1
0x9e3	        0x8065fd7f	                and byte [rbp - 3], 0x7f	       948	mbyte.c	FUNCTION_9	SWITCH_1
0x9e7	         0xfb645fc	               movzx eax, byte [rbp - 4]	       951	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x9eb	          0xc1e008	                              shl eax, 8	       951	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x9ee	            0x89c2	                            mov edx, eax	       951	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x9f0	         0xfb645fd	               movzx eax, byte [rbp - 3]	       951	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x9f4	             0x9d0	                             or eax, edx	       951	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x9f6	      0x3d25210000	                         cmp eax, 0x2125	       951	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x9fb	            0x7f10	                            jg 0x4000a4d	       951	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0x9fd	      0x3d22210000	                         cmp eax, 0x2122	       951	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0xa02	            0x7d1c	                           jge 0x4000a60	       951	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0xa04	      0x3d21210000	                         cmp eax, 0x2121	       951	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0xa09	            0x740b	                            je 0x4000a56	       951	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0xa0b	            0xeb27	                           jmp 0x4000a74	       951	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0xa0d	      0x3d3c210000	                         cmp eax, 0x213c	       951	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0xa12	            0x7416	                            je 0x4000a6a	       951	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0xa14	            0xeb1e	                           jmp 0x4000a74	       951	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0xa16	      0xb800000000	                              mov eax, 0	       954	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0xa1b	      0xe92a010000	                           jmp 0x4000b8a	       954	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0xa20	      0xb801000000	                              mov eax, 1	       959	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0xa25	      0xe920010000	                           jmp 0x4000b8a	       959	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0xa2a	      0xb80d000000	                            mov eax, 0xd	       961	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0xa2f	      0xe916010000	                           jmp 0x4000b8a	       961	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_2
0xa34	         0xfb645fc	               movzx eax, byte [rbp - 4]	       964	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0xa38	          0x83e821	                           sub eax, 0x21	       964	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0xa3b	          0x83f807	                              cmp eax, 7	       964	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0xa3e	            0x7752	                            ja 0x4000ad2	       964	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0xa40	            0x89c0	                            mov eax, eax	       964	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0xa42	    0x488b04c50000	                  mov rax, qword [rax*8]	       964	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0xa4a	            0xffe0	                                 jmp rax	       964	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0xa4c	      0xb80a000000	                            mov eax, 0xa	       969	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0xa51	      0xe9f4000000	                           jmp 0x4000b8a	       969	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0xa56	      0xb80b000000	                            mov eax, 0xb	       972	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0xa5b	      0xe9ea000000	                           jmp 0x4000b8a	       972	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0xa60	      0xb80c000000	                            mov eax, 0xc	       975	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0xa65	      0xe9e0000000	                           jmp 0x4000b8a	       975	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0xa6a	      0xb80d000000	                            mov eax, 0xd	       978	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0xa6f	      0xe9d6000000	                           jmp 0x4000b8a	       978	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0xa74	      0xb80e000000	                            mov eax, 0xe	       981	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0xa79	      0xe9cc000000	                           jmp 0x4000b8a	       981	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0xa7e	      0xb80f000000	                            mov eax, 0xf	       984	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0xa83	      0xe9c2000000	                           jmp 0x4000b8a	       984	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0xa88	      0xb810000000	                           mov eax, 0x10	       987	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0xa8d	      0xe9b8000000	                           jmp 0x4000b8a	       987	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0xa92	      0xb811000000	                           mov eax, 0x11	       990	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0xa97	      0xe9ae000000	                           jmp 0x4000b8a	       990	mbyte.c	FUNCTION_9	SWITCH_1	SWITCH_3
0xa9c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       998	mbyte.c	FUNCTION_9	SWITCH_1
0xa9f	          0x8845fe	                  mov byte [rbp - 2], al	       998	mbyte.c	FUNCTION_9	SWITCH_1
0xaa2	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       999	mbyte.c	FUNCTION_9	SWITCH_1
0xaa5	          0x8845ff	                  mov byte [rbp - 1], al	       999	mbyte.c	FUNCTION_9	SWITCH_1
0xaa8	        0x807dfeaf	                cmp byte [rbp - 2], 0xaf	      1015	mbyte.c	FUNCTION_9	SWITCH_1	IF_4
0xaac	            0x7610	                           jbe 0x4000afe	      1015	mbyte.c	FUNCTION_9	SWITCH_1	IF_4
0xaae	        0x807dfec8	                cmp byte [rbp - 2], 0xc8	      1015	mbyte.c	FUNCTION_9	SWITCH_1	IF_4
0xab2	            0x770a	                            ja 0x4000afe	      1015	mbyte.c	FUNCTION_9	SWITCH_1	IF_4
0xab4	      0xb814000000	                           mov eax, 0x14	      1017	mbyte.c	FUNCTION_9	SWITCH_1	IF_4
0xab9	      0xe98c000000	                           jmp 0x4000b8a	      1017	mbyte.c	FUNCTION_9	SWITCH_1	IF_4
0xabe	        0x807dfec9	                cmp byte [rbp - 2], 0xc9	      1027	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_5	IF_6
0xac2	            0x760d	                           jbe 0x4000b11	      1027	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_5	IF_6
0xac4	        0x807dfefd	                cmp byte [rbp - 2], 0xfd	      1027	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_5	IF_6
0xac8	            0x7707	                            ja 0x4000b11	      1027	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_5	IF_6
0xaca	      0xb815000000	                           mov eax, 0x15	      1029	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_5	IF_6
0xacf	            0xeb79	                           jmp 0x4000b8a	      1029	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_5	IF_6
0xad1	         0xfb645fe	               movzx eax, byte [rbp - 2]	      1030	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0xad5	      0x2da1000000	                           sub eax, 0xa1	      1030	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0xada	          0x83f80b	                            cmp eax, 0xb	      1030	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0xadd	            0x7765	                            ja 0x4000b84	      1030	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0xadf	            0x89c0	                            mov eax, eax	      1030	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0xae1	    0x488b04c50000	                  mov rax, qword [rax*8]	      1030	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0xae9	            0xffe0	                                 jmp rax	      1030	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0xaeb	      0xb816000000	                           mov eax, 0x16	      1035	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0xaf0	            0xeb58	                           jmp 0x4000b8a	      1035	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0xaf2	      0xb817000000	                           mov eax, 0x17	      1038	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0xaf7	            0xeb51	                           jmp 0x4000b8a	      1038	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0xaf9	      0xb818000000	                           mov eax, 0x18	      1041	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0xafe	            0xeb4a	                           jmp 0x4000b8a	      1041	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0xb00	      0xb819000000	                           mov eax, 0x19	      1044	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0xb05	            0xeb43	                           jmp 0x4000b8a	      1044	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0xb07	      0xb81a000000	                           mov eax, 0x1a	      1047	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0xb0c	            0xeb3c	                           jmp 0x4000b8a	      1047	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0xb0e	      0xb81b000000	                           mov eax, 0x1b	      1050	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0xb13	            0xeb35	                           jmp 0x4000b8a	      1050	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4
0xb15	        0x807dffaf	                cmp byte [rbp - 1], 0xaf	      1053	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	IF_7
0xb19	            0x7707	                            ja 0x4000b62	      1053	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	IF_7
0xb1b	      0xb819000000	                           mov eax, 0x19	      1054	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	IF_7
0xb20	            0xeb28	                           jmp 0x4000b8a	      1054	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	IF_7
0xb22	        0x807dfff5	                cmp byte [rbp - 1], 0xf5	      1055	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_7	IF_8
0xb26	            0x7607	                           jbe 0x4000b6f	      1055	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_7	IF_8
0xb28	      0xb816000000	                           mov eax, 0x16	      1056	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_7	IF_8
0xb2d	            0xeb1b	                           jmp 0x4000b8a	      1056	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_7	IF_8
0xb2f	      0xb81c000000	                           mov eax, 0x1c	      1059	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0xb34	            0xeb14	                           jmp 0x4000b8a	      1059	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0xb36	      0xb81d000000	                           mov eax, 0x1d	      1063	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0xb3b	            0xeb0d	                           jmp 0x4000b8a	      1063	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0xb3d	      0xb81e000000	                           mov eax, 0x1e	      1066	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0xb42	            0xeb06	                           jmp 0x4000b8a	      1066	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_6	SWITCH_4	ELSE_8
0xb44	              0x90	                                     nop	      1070	mbyte.c	FUNCTION_9	SWITCH_1	ELSE_8
0xb45	      0xb803000000	                              mov eax, 3	      1072	mbyte.c	FUNCTION_9	ELSE_8
0xb4a	              0x5d	                                 pop rbp	      1073	mbyte.c	FUNCTION_9	ELSE_8
0xb4b	              0xc3	                                     ret	      1073	mbyte.c	FUNCTION_9	ELSE_8
mb_copy_char	CALL,1:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	37
0x2cac	              0x55	                                push rbp	      3883	mbyte.c	FUNCTION_71
0x2cad	          0x4889e5	                            mov rbp, rsp	      3883	mbyte.c	FUNCTION_71
0x2cb0	        0x4883ec20	                           sub rsp, 0x20	      3883	mbyte.c	FUNCTION_71
0x2cb4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3883	mbyte.c	FUNCTION_71
0x2cb8	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3883	mbyte.c	FUNCTION_71
0x2cbc	    0x488b05000000	            mov rax, qword [0x04002d03] 	      3884	mbyte.c	FUNCTION_71
0x2cc3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3884	mbyte.c	FUNCTION_71
0x2cc7	          0x488b12	                    mov rdx, qword [rdx]	      3884	mbyte.c	FUNCTION_71
0x2cca	          0x4889d7	                            mov rdi, rdx	      3884	mbyte.c	FUNCTION_71
0x2ccd	            0xffd0	                                call rax	      3884	mbyte.c	FUNCTION_71
0x2ccf	          0x8945fc	                mov dword [rbp - 4], eax	      3884	mbyte.c	FUNCTION_71
0x2cd2	          0x8b45fc	                mov eax, dword [rbp - 4]	      3886	mbyte.c	FUNCTION_71	CALL_1
0x2cd5	          0x4863d0	                         movsxd rdx, eax	      3886	mbyte.c	FUNCTION_71	CALL_1
0x2cd8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3886	mbyte.c	FUNCTION_71	CALL_1
0x2cdc	          0x488b08	                    mov rcx, qword [rax]	      3886	mbyte.c	FUNCTION_71	CALL_1
0x2cdf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3886	mbyte.c	FUNCTION_71	CALL_1
0x2ce3	          0x488b00	                    mov rax, qword [rax]	      3886	mbyte.c	FUNCTION_71	CALL_1
0x2ce6	          0x4889ce	                            mov rsi, rcx	      3886	mbyte.c	FUNCTION_71	CALL_1
0x2ce9	          0x4889c7	                            mov rdi, rax	      3886	mbyte.c	FUNCTION_71	CALL_1
0x2cec	      0xe800000000	                          call 0x4002d31	      3886	mbyte.c	FUNCTION_71	CALL_1
0x2cf1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3887	mbyte.c	FUNCTION_71
0x2cf5	          0x488b10	                    mov rdx, qword [rax]	      3887	mbyte.c	FUNCTION_71
0x2cf8	          0x8b45fc	                mov eax, dword [rbp - 4]	      3887	mbyte.c	FUNCTION_71
0x2cfb	            0x4898	                                    cdqe	      3887	mbyte.c	FUNCTION_71
0x2cfd	          0x4801c2	                            add rdx, rax	      3887	mbyte.c	FUNCTION_71
0x2d00	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3887	mbyte.c	FUNCTION_71
0x2d04	          0x488910	                    mov qword [rax], rdx	      3887	mbyte.c	FUNCTION_71
0x2d07	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3888	mbyte.c	FUNCTION_71
0x2d0b	          0x488b10	                    mov rdx, qword [rax]	      3888	mbyte.c	FUNCTION_71
0x2d0e	          0x8b45fc	                mov eax, dword [rbp - 4]	      3888	mbyte.c	FUNCTION_71
0x2d11	            0x4898	                                    cdqe	      3888	mbyte.c	FUNCTION_71
0x2d13	          0x4801c2	                            add rdx, rax	      3888	mbyte.c	FUNCTION_71
0x2d16	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3888	mbyte.c	FUNCTION_71
0x2d1a	          0x488910	                    mov qword [rax], rdx	      3888	mbyte.c	FUNCTION_71
0x2d1d	              0x90	                                     nop	      3889	mbyte.c	FUNCTION_71
0x2d1e	              0xc9	                                   leave	      3889	mbyte.c	FUNCTION_71
0x2d1f	              0xc3	                                     ret	      3889	mbyte.c	FUNCTION_71
dbcs_char2cells	CALL,1:WHILE,0:functions,0:ELSE,0:IF,1:DO,0:SWITCH,0:FOR,0	19
0x1079	              0x55	                                push rbp	      1710	mbyte.c	FUNCTION_28
0x107a	          0x4889e5	                            mov rbp, rsp	      1710	mbyte.c	FUNCTION_28
0x107d	          0x897dfc	                mov dword [rbp - 4], edi	      1710	mbyte.c	FUNCTION_28
0x1080	    0x8b0500000000	            mov eax, dword [0x040010c6] 	      1713	mbyte.c	FUNCTION_28	IF_1
0x1086	      0x3dcc260000	                         cmp eax, 0x26cc	      1713	mbyte.c	FUNCTION_28	IF_1
0x108b	            0x7514	                           jne 0x40010e1	      1713	mbyte.c	FUNCTION_28	IF_1
0x108d	          0x8b45fc	                mov eax, dword [rbp - 4]	      1713	mbyte.c	FUNCTION_28	IF_1
0x1090	          0xc1e808	                              shr eax, 8	      1713	mbyte.c	FUNCTION_28	IF_1
0x1093	      0x3d8e000000	                           cmp eax, 0x8e	      1713	mbyte.c	FUNCTION_28	IF_1
0x1098	            0x7507	                           jne 0x40010e1	      1713	mbyte.c	FUNCTION_28	IF_1
0x109a	      0xb801000000	                              mov eax, 1	      1714	mbyte.c	FUNCTION_28	IF_1
0x109f	            0xeb12	                           jmp 0x40010f3	      1714	mbyte.c	FUNCTION_28	IF_1
0x10a1	          0x8b45fc	                mov eax, dword [rbp - 4]	      1716	mbyte.c	FUNCTION_28	CALL_1
0x10a4	          0xc1e808	                              shr eax, 8	      1716	mbyte.c	FUNCTION_28	CALL_1
0x10a7	            0x89c0	                            mov eax, eax	      1716	mbyte.c	FUNCTION_28	CALL_1
0x10a9	     0xfb680000000	                   movzx eax, byte [rax]	      1716	mbyte.c	FUNCTION_28	CALL_1
0x10b0	           0xfbec0	                           movsx eax, al	      1716	mbyte.c	FUNCTION_28	CALL_1
0x10b3	              0x5d	                                 pop rbp	      1717	mbyte.c	FUNCTION_28
0x10b4	              0xc3	                                     ret	      1717	mbyte.c	FUNCTION_28
im_get_status	CALL,1:WHILE,0:functions,0:ELSE,0:IF,1:DO,0:SWITCH,0:FOR,0	11
0x427e	              0x55	                                push rbp	      6488	mbyte.c	FUNCTION_137
0x427f	          0x4889e5	                            mov rbp, rsp	      6488	mbyte.c	FUNCTION_137
0x4282	    0x488b05000000	            mov rax, qword [0x040042c9] 	      6490	mbyte.c	FUNCTION_137	IF_1
0x4289	           0xfb600	                   movzx eax, byte [rax]	      6490	mbyte.c	FUNCTION_137	IF_1
0x428c	            0x84c0	                             test al, al	      6490	mbyte.c	FUNCTION_137	IF_1
0x428e	            0x7407	                            je 0x40042d7	      6490	mbyte.c	FUNCTION_137	IF_1
0x4290	      0xe87cffffff	              call sym.call_imstatusfunc	      6491	mbyte.c	FUNCTION_137	CALL_1
0x4295	            0xeb06	                           jmp 0x40042dd	      6491	mbyte.c	FUNCTION_137	CALL_1
0x4297	    0x8b0500000000	            mov eax, dword [0x040042dd] 	      6493	mbyte.c	FUNCTION_137
0x429d	              0x5d	                                 pop rbp	      6494	mbyte.c	FUNCTION_137
0x429e	              0xc3	                                     ret	      6494	mbyte.c	FUNCTION_137
call_imstatusfunc	CALL,2:WHILE,0:functions,0:ELSE,0:IF,1:DO,0:SWITCH,0:FOR,0	29
0x4211	              0x55	                                push rbp	      4808	mbyte.c	FUNCTION_96
0x4212	          0x4889e5	                            mov rbp, rsp	      4808	mbyte.c	FUNCTION_96
0x4215	        0x4883ec10	                           sub rsp, 0x10	      4808	mbyte.c	FUNCTION_96
0x4219	    0x8b0500000000	            mov eax, dword [0x0400425f] 	      4812	mbyte.c	FUNCTION_96	IF_1
0x421f	            0x85c0	                           test eax, eax	      4812	mbyte.c	FUNCTION_96	IF_1
0x4221	            0x7509	                           jne 0x400426c	      4812	mbyte.c	FUNCTION_96	IF_1
0x4223	      0xe800000000	                          call 0x4004268	      4814	mbyte.c	FUNCTION_96	IF_1	CALL_1
0x4228	            0x85c0	                           test eax, eax	      4814	mbyte.c	FUNCTION_96	IF_1	CALL_1
0x422a	            0x7407	                            je 0x4004273	      4814	mbyte.c	FUNCTION_96	IF_1	CALL_1
0x422c	      0xb800000000	                              mov eax, 0	      4817	mbyte.c	FUNCTION_96	IF_1
0x4231	            0xeb49	                           jmp 0x40042bc	      4817	mbyte.c	FUNCTION_96	IF_1
0x4233	    0x8b0500000000	            mov eax, dword [0x04004279] 	      4820	mbyte.c	FUNCTION_96
0x4239	          0x83c001	                              add eax, 1	      4820	mbyte.c	FUNCTION_96
0x423c	    0x890500000000	            mov dword [0x04004282], eax 	      4820	mbyte.c	FUNCTION_96
0x4242	    0x488b05000000	            mov rax, qword [0x04004289] 	      4821	mbyte.c	FUNCTION_96	CALL_2
0x4249	      0xb900000000	                              mov ecx, 0	      4821	mbyte.c	FUNCTION_96	CALL_2
0x424e	      0xba00000000	                              mov edx, 0	      4821	mbyte.c	FUNCTION_96	CALL_2
0x4253	      0xbe00000000	                              mov esi, 0	      4821	mbyte.c	FUNCTION_96	CALL_2
0x4258	          0x4889c7	                            mov rdi, rax	      4821	mbyte.c	FUNCTION_96	CALL_2
0x425b	      0xe800000000	                          call 0x40042a0	      4821	mbyte.c	FUNCTION_96	CALL_2
0x4260	          0x8945fc	                mov dword [rbp - 4], eax	      4821	mbyte.c	FUNCTION_96	CALL_2
0x4263	    0x8b0500000000	            mov eax, dword [0x040042a9] 	      4822	mbyte.c	FUNCTION_96
0x4269	          0x83e801	                              sub eax, 1	      4822	mbyte.c	FUNCTION_96
0x426c	    0x890500000000	            mov dword [0x040042b2], eax 	      4822	mbyte.c	FUNCTION_96
0x4272	        0x837dfc00	                  cmp dword [rbp - 4], 0	      4823	mbyte.c	FUNCTION_96
0x4276	           0xf9fc0	                                 setg al	      4823	mbyte.c	FUNCTION_96
0x4279	           0xfb6c0	                           movzx eax, al	      4823	mbyte.c	FUNCTION_96
0x427c	              0xc9	                                   leave	      4824	mbyte.c	FUNCTION_96
0x427d	              0xc3	                                     ret	      4824	mbyte.c	FUNCTION_96
convert_setup	CALL,1:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	16
0x42f7	              0x55	                                push rbp	      6533	mbyte.c	FUNCTION_140
0x42f8	          0x4889e5	                            mov rbp, rsp	      6533	mbyte.c	FUNCTION_140
0x42fb	        0x4883ec20	                           sub rsp, 0x20	      6533	mbyte.c	FUNCTION_140
0x42ff	        0x48897df8	                mov qword [rbp - 8], rdi	      6533	mbyte.c	FUNCTION_140
0x4303	        0x488975f0	             mov qword [rbp - 0x10], rsi	      6533	mbyte.c	FUNCTION_140
0x4307	        0x488955e8	             mov qword [rbp - 0x18], rdx	      6533	mbyte.c	FUNCTION_140
0x430b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6534	mbyte.c	FUNCTION_140	CALL_1
0x430f	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      6534	mbyte.c	FUNCTION_140	CALL_1
0x4313	        0x488b45f8	                mov rax, qword [rbp - 8]	      6534	mbyte.c	FUNCTION_140	CALL_1
0x4317	    0x41b801000000	                              mov r8d, 1	      6534	mbyte.c	FUNCTION_140	CALL_1
0x431d	          0x4889d1	                            mov rcx, rdx	      6534	mbyte.c	FUNCTION_140	CALL_1
0x4320	      0xba01000000	                              mov edx, 1	      6534	mbyte.c	FUNCTION_140	CALL_1
0x4325	          0x4889c7	                            mov rdi, rax	      6534	mbyte.c	FUNCTION_140	CALL_1
0x4328	      0xe800000000	                          call 0x400436d	      6534	mbyte.c	FUNCTION_140	CALL_1
0x432d	              0xc9	                                   leave	      6535	mbyte.c	FUNCTION_140
0x432e	              0xc3	                                     ret	      6535	mbyte.c	FUNCTION_140
utf_isupper	CALL,1:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	12
0x24d5	              0x55	                                push rbp	      3580	mbyte.c	FUNCTION_63
0x24d6	          0x4889e5	                            mov rbp, rsp	      3580	mbyte.c	FUNCTION_63
0x24d9	        0x4883ec10	                           sub rsp, 0x10	      3580	mbyte.c	FUNCTION_63
0x24dd	          0x897dfc	                mov dword [rbp - 4], edi	      3580	mbyte.c	FUNCTION_63
0x24e0	          0x8b45fc	                mov eax, dword [rbp - 4]	      3581	mbyte.c	FUNCTION_63	CALL_1
0x24e3	            0x89c7	                            mov edi, eax	      3581	mbyte.c	FUNCTION_63	CALL_1
0x24e5	      0xe800000000	                          call 0x400252a	      3581	mbyte.c	FUNCTION_63	CALL_1
0x24ea	          0x3b45fc	                cmp eax, dword [rbp - 4]	      3581	mbyte.c	FUNCTION_63	CALL_1
0x24ed	           0xf95c0	                                setne al	      3581	mbyte.c	FUNCTION_63	CALL_1
0x24f0	           0xfb6c0	                           movzx eax, al	      3581	mbyte.c	FUNCTION_63	CALL_1
0x24f3	              0xc9	                                   leave	      3582	mbyte.c	FUNCTION_63
0x24f4	              0xc3	                                     ret	      3582	mbyte.c	FUNCTION_63
utf_class	CALL,1:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	11
0x20bf	              0x55	                                push rbp	      2783	mbyte.c	FUNCTION_55
0x20c0	          0x4889e5	                            mov rbp, rsp	      2783	mbyte.c	FUNCTION_55
0x20c3	        0x4883ec10	                           sub rsp, 0x10	      2783	mbyte.c	FUNCTION_55
0x20c7	          0x897dfc	                mov dword [rbp - 4], edi	      2783	mbyte.c	FUNCTION_55
0x20ca	    0x488b15000000	            mov rdx, qword [0x04002111] 	      2784	mbyte.c	FUNCTION_55	CALL_1
0x20d1	          0x8b45fc	                mov eax, dword [rbp - 4]	      2784	mbyte.c	FUNCTION_55	CALL_1
0x20d4	          0x4889d6	                            mov rsi, rdx	      2784	mbyte.c	FUNCTION_55	CALL_1
0x20d7	            0x89c7	                            mov edi, eax	      2784	mbyte.c	FUNCTION_55	CALL_1
0x20d9	      0xe800000000	                          call 0x400211e	      2784	mbyte.c	FUNCTION_55	CALL_1
0x20de	              0xc9	                                   leave	      2785	mbyte.c	FUNCTION_55
0x20df	              0xc3	                                     ret	      2785	mbyte.c	FUNCTION_55
latin_char2bytes	CALL,0:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	11
0xb78	              0x55	                                push rbp	      1102	mbyte.c	FUNCTION_12
0xb79	          0x4889e5	                            mov rbp, rsp	      1102	mbyte.c	FUNCTION_12
0xb7c	          0x897dfc	                mov dword [rbp - 4], edi	      1102	mbyte.c	FUNCTION_12
0xb7f	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1102	mbyte.c	FUNCTION_12
0xb83	          0x8b45fc	                mov eax, dword [rbp - 4]	      1103	mbyte.c	FUNCTION_12
0xb86	            0x89c2	                            mov edx, eax	      1103	mbyte.c	FUNCTION_12
0xb88	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1103	mbyte.c	FUNCTION_12
0xb8c	            0x8810	                      mov byte [rax], dl	      1103	mbyte.c	FUNCTION_12
0xb8e	      0xb801000000	                              mov eax, 1	      1104	mbyte.c	FUNCTION_12
0xb93	              0x5d	                                 pop rbp	      1105	mbyte.c	FUNCTION_12
0xb94	              0xc3	                                     ret	      1105	mbyte.c	FUNCTION_12
string_convert_ext	CALL,30:WHILE,0:functions,0:ELSE,10:IF,29:DO,0:SWITCH,3:FOR,3	372
0x467f	              0x55	                                push rbp	      6734	mbyte.c	FUNCTION_145
0x4680	          0x4889e5	                            mov rbp, rsp	      6734	mbyte.c	FUNCTION_145
0x4683	        0x4883ec50	                           sub rsp, 0x50	      6734	mbyte.c	FUNCTION_145
0x4687	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      6734	mbyte.c	FUNCTION_145
0x468b	        0x488975c0	             mov qword [rbp - 0x40], rsi	      6734	mbyte.c	FUNCTION_145
0x468f	        0x488955b8	             mov qword [rbp - 0x48], rdx	      6734	mbyte.c	FUNCTION_145
0x4693	        0x48894db0	             mov qword [rbp - 0x50], rcx	      6734	mbyte.c	FUNCTION_145
0x4697	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      6735	mbyte.c	FUNCTION_145
0x469f	      0x48837db800	               cmp qword [rbp - 0x48], 0	      6742	mbyte.c	FUNCTION_145	IF_1
0x46a4	            0x7511	                           jne 0x40046f7	      6742	mbyte.c	FUNCTION_145	IF_1
0x46a6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6743	mbyte.c	FUNCTION_145	CALL_1
0x46aa	          0x4889c7	                            mov rdi, rax	      6743	mbyte.c	FUNCTION_145	CALL_1
0x46ad	      0xe800000000	                          call 0x40046f2	      6743	mbyte.c	FUNCTION_145	CALL_1
0x46b2	          0x8945dc	             mov dword [rbp - 0x24], eax	      6743	mbyte.c	FUNCTION_145	CALL_1
0x46b5	            0xeb09	                           jmp 0x4004700	      6743	mbyte.c	FUNCTION_145	CALL_1
0x46b7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6745	mbyte.c	FUNCTION_145	ELSE_1
0x46bb	            0x8b00	                    mov eax, dword [rax]	      6745	mbyte.c	FUNCTION_145	ELSE_1
0x46bd	          0x8945dc	             mov dword [rbp - 0x24], eax	      6745	mbyte.c	FUNCTION_145	ELSE_1
0x46c0	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      6746	mbyte.c	FUNCTION_145	IF_2
0x46c4	            0x750f	                           jne 0x4004715	      6746	mbyte.c	FUNCTION_145	IF_2
0x46c6	      0xbf00000000	                              mov edi, 0	      6747	mbyte.c	FUNCTION_145	CALL_2
0x46cb	      0xe800000000	                          call 0x4004710	      6747	mbyte.c	FUNCTION_145	CALL_2
0x46d0	      0xe9f2040000	                           jmp 0x4004c07	      6747	mbyte.c	FUNCTION_145	CALL_2
0x46d5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6749	mbyte.c	FUNCTION_145	SWITCH_1
0x46d9	            0x8b00	                    mov eax, dword [rax]	      6749	mbyte.c	FUNCTION_145	SWITCH_1
0x46db	          0x83f805	                              cmp eax, 5	      6749	mbyte.c	FUNCTION_145	SWITCH_1
0x46de	     0xf87df040000	                            ja 0x4004c03	      6749	mbyte.c	FUNCTION_145	SWITCH_1
0x46e4	            0x89c0	                            mov eax, eax	      6749	mbyte.c	FUNCTION_145	SWITCH_1
0x46e6	    0x488b04c50000	                  mov rax, qword [rax*8]	      6749	mbyte.c	FUNCTION_145	SWITCH_1
0x46ee	            0xffe0	                                 jmp rax	      6749	mbyte.c	FUNCTION_145	SWITCH_1
0x46f0	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6752	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x46f3	             0x1c0	                            add eax, eax	      6752	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x46f5	          0x83c001	                              add eax, 1	      6752	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x46f8	            0x89c7	                            mov edi, eax	      6752	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x46fa	      0xe800000000	                          call 0x400473f	      6752	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x46ff	        0x488945f0	             mov qword [rbp - 0x10], rax	      6752	mbyte.c	FUNCTION_145	SWITCH_1	CALL_3
0x4703	      0x48837df000	               cmp qword [rbp - 0x10], 0	      6753	mbyte.c	FUNCTION_145	SWITCH_1	IF_3
0x4708	     0xf84a5040000	                            je 0x4004bf3	      6753	mbyte.c	FUNCTION_145	SWITCH_1	IF_3
0x470e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6755	mbyte.c	FUNCTION_145	SWITCH_1
0x4712	        0x488945f8	                mov qword [rbp - 8], rax	      6755	mbyte.c	FUNCTION_145	SWITCH_1
0x4716	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      6756	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x471d	            0xeb61	                           jmp 0x40047c0	      6756	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x471f	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6758	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4722	          0x4863d0	                         movsxd rdx, eax	      6758	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4725	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6758	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4729	          0x4801d0	                            add rax, rdx	      6758	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x472c	           0xfb600	                   movzx eax, byte [rax]	      6758	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x472f	           0xfb6c0	                           movzx eax, al	      6758	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4732	          0x8945e4	             mov dword [rbp - 0x1c], eax	      6758	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4735	        0x837de47f	           cmp dword [rbp - 0x1c], 0x7f 	      6759	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x4739	            0x7f13	                            jg 0x400478e	      6759	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x473b	        0x488b45f8	                mov rax, qword [rbp - 8]	      6760	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x473f	        0x488d5001	                      lea rdx, [rax + 1]	      6760	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x4743	        0x488955f8	                mov qword [rbp - 8], rdx	      6760	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x4747	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      6760	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x474a	            0x8810	                      mov byte [rax], dl	      6760	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x474c	            0xeb2e	                           jmp 0x40047bc	      6760	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	IF_4
0x474e	        0x488b45f8	                mov rax, qword [rbp - 8]	      6763	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x4752	        0x488d5001	                      lea rdx, [rax + 1]	      6763	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x4756	        0x488955f8	                mov qword [rbp - 8], rdx	      6763	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x475a	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      6763	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x475d	          0xc1ea06	                              shr edx, 6	      6763	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x4760	          0x83ea40	                           sub edx, 0x40	      6763	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x4763	            0x8810	                      mov byte [rax], dl	      6763	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x4765	        0x488b45f8	                mov rax, qword [rbp - 8]	      6764	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x4769	        0x488d5001	                      lea rdx, [rax + 1]	      6764	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x476d	        0x488955f8	                mov qword [rbp - 8], rdx	      6764	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x4771	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      6764	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x4774	          0x83e23f	                           and edx, 0x3f	      6764	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x4777	          0x83c280	             add edx, 0xffffffffffffff80	      6764	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x477a	            0x8810	                      mov byte [rax], dl	      6764	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1	ELSE_2
0x477c	        0x8345e001	               add dword [rbp - 0x20], 1	      6756	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4780	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6756	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4783	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      6756	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4786	            0x7c97	                            jl 0x400475f	      6756	mbyte.c	FUNCTION_145	SWITCH_1	FOR_1
0x4788	        0x488b45f8	                mov rax, qword [rbp - 8]	      6767	mbyte.c	FUNCTION_145	SWITCH_1
0x478c	          0xc60000	                       mov byte [rax], 0	      6767	mbyte.c	FUNCTION_145	SWITCH_1
0x478f	      0x48837db800	               cmp qword [rbp - 0x48], 0	      6768	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x4794	     0xf841c040000	                            je 0x4004bf6	      6768	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x479a	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6769	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x479e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6769	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x47a2	          0x4829c2	                            sub rdx, rax	      6769	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x47a5	          0x4889d0	                            mov rax, rdx	      6769	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x47a8	            0x89c2	                            mov edx, eax	      6769	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x47aa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6769	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x47ae	            0x8910	                    mov dword [rax], edx	      6769	mbyte.c	FUNCTION_145	SWITCH_1	IF_5
0x47b0	      0xe901040000	                           jmp 0x4004bf6	      6770	mbyte.c	FUNCTION_145	SWITCH_1
0x47b5	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      6773	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x47b8	            0x89d0	                            mov eax, edx	      6773	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x47ba	             0x1c0	                            add eax, eax	      6773	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x47bc	             0x1d0	                            add eax, edx	      6773	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x47be	          0x83c001	                              add eax, 1	      6773	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x47c1	            0x89c7	                            mov edi, eax	      6773	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x47c3	      0xe800000000	                          call 0x4004808	      6773	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x47c8	        0x488945f0	             mov qword [rbp - 0x10], rax	      6773	mbyte.c	FUNCTION_145	SWITCH_1	CALL_4
0x47cc	      0x48837df000	               cmp qword [rbp - 0x10], 0	      6774	mbyte.c	FUNCTION_145	SWITCH_1	IF_6
0x47d1	     0xf84e2030000	                            je 0x4004bf9	      6774	mbyte.c	FUNCTION_145	SWITCH_1	IF_6
0x47d7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6776	mbyte.c	FUNCTION_145	SWITCH_1
0x47db	        0x488945f8	                mov qword [rbp - 8], rax	      6776	mbyte.c	FUNCTION_145	SWITCH_1
0x47df	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      6777	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x47e6	      0xe991000000	                           jmp 0x40048bc	      6777	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x47eb	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6779	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x47ee	          0x4863d0	                         movsxd rdx, eax	      6779	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x47f1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6779	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x47f5	          0x4801d0	                            add rax, rdx	      6779	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x47f8	           0xfb600	                   movzx eax, byte [rax]	      6779	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x47fb	           0xfb6c0	                           movzx eax, al	      6779	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x47fe	          0x8945e4	             mov dword [rbp - 0x1c], eax	      6779	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x4801	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6780	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4804	      0x2da4000000	                           sub eax, 0xa4	      6780	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4809	          0x83f81a	                           cmp eax, 0x1a	      6780	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x480c	            0x7753	                            ja 0x40048a1	      6780	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x480e	            0x89c0	                            mov eax, eax	      6780	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4810	    0x488b04c50000	                  mov rax, qword [rax*8]	      6780	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4818	            0xffe0	                                 jmp rax	      6780	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x481a	    0xc745e4ac2000	          mov dword [rbp - 0x1c], 0x20ac	      6782	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4821	            0xeb3e	                           jmp 0x40048a1	      6782	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4823	    0xc745e4600100	          mov dword [rbp - 0x1c], 0x160 	      6783	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x482a	            0xeb35	                           jmp 0x40048a1	      6783	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x482c	    0xc745e4610100	          mov dword [rbp - 0x1c], 0x161 	      6784	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4833	            0xeb2c	                           jmp 0x40048a1	      6784	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4835	    0xc745e47d0100	          mov dword [rbp - 0x1c], 0x17d 	      6785	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x483c	            0xeb23	                           jmp 0x40048a1	      6785	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x483e	    0xc745e47e0100	          mov dword [rbp - 0x1c], 0x17e 	      6786	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4845	            0xeb1a	                           jmp 0x40048a1	      6786	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4847	    0xc745e4520100	          mov dword [rbp - 0x1c], 0x152 	      6787	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x484e	            0xeb11	                           jmp 0x40048a1	      6787	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4850	    0xc745e4530100	          mov dword [rbp - 0x1c], 0x153 	      6788	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4857	            0xeb08	                           jmp 0x40048a1	      6788	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4859	    0xc745e4780100	          mov dword [rbp - 0x1c], 0x178 	      6789	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4860	              0x90	                                     nop	      6789	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	SWITCH_2
0x4861	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6791	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x4865	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6791	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x4868	          0x4889d6	                            mov rsi, rdx	      6791	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x486b	            0x89c7	                            mov edi, eax	      6791	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x486d	      0xe800000000	                          call 0x40048b2	      6791	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x4872	            0x4898	                                    cdqe	      6791	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x4874	        0x480145f8	                add qword [rbp - 8], rax	      6791	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2	CALL_5
0x4878	        0x8345e001	               add dword [rbp - 0x20], 1	      6777	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x487c	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6777	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x487f	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      6777	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x4882	     0xf8c63ffffff	                            jl 0x400482b	      6777	mbyte.c	FUNCTION_145	SWITCH_1	FOR_2
0x4888	        0x488b45f8	                mov rax, qword [rbp - 8]	      6793	mbyte.c	FUNCTION_145	SWITCH_1
0x488c	          0xc60000	                       mov byte [rax], 0	      6793	mbyte.c	FUNCTION_145	SWITCH_1
0x488f	      0x48837db800	               cmp qword [rbp - 0x48], 0	      6794	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x4894	     0xf8422030000	                            je 0x4004bfc	      6794	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x489a	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6795	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x489e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6795	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x48a2	          0x4829c2	                            sub rdx, rax	      6795	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x48a5	          0x4889d0	                            mov rax, rdx	      6795	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x48a8	            0x89c2	                            mov edx, eax	      6795	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x48aa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6795	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x48ae	            0x8910	                    mov dword [rax], edx	      6795	mbyte.c	FUNCTION_145	SWITCH_1	IF_7
0x48b0	      0xe907030000	                           jmp 0x4004bfc	      6796	mbyte.c	FUNCTION_145	SWITCH_1
0x48b5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6800	mbyte.c	FUNCTION_145	SWITCH_1	CALL_6
0x48b8	          0x83c001	                              add eax, 1	      6800	mbyte.c	FUNCTION_145	SWITCH_1	CALL_6
0x48bb	            0x89c7	                            mov edi, eax	      6800	mbyte.c	FUNCTION_145	SWITCH_1	CALL_6
0x48bd	      0xe800000000	                          call 0x4004902	      6800	mbyte.c	FUNCTION_145	SWITCH_1	CALL_6
0x48c2	        0x488945f0	             mov qword [rbp - 0x10], rax	      6800	mbyte.c	FUNCTION_145	SWITCH_1	CALL_6
0x48c6	      0x48837df000	               cmp qword [rbp - 0x10], 0	      6801	mbyte.c	FUNCTION_145	SWITCH_1	IF_8
0x48cb	     0xf84ee020000	                            je 0x4004bff	      6801	mbyte.c	FUNCTION_145	SWITCH_1	IF_8
0x48d1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6803	mbyte.c	FUNCTION_145	SWITCH_1
0x48d5	        0x488945f8	                mov qword [rbp - 8], rax	      6803	mbyte.c	FUNCTION_145	SWITCH_1
0x48d9	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      6804	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x48e0	      0xe978020000	                           jmp 0x4004b9d	      6804	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x48e5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6806	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x48e8	          0x2b45e0	             sub eax, dword [rbp - 0x20]	      6806	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x48eb	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      6806	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x48ee	          0x4863ca	                         movsxd rcx, edx	      6806	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x48f1	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      6806	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x48f5	          0x4801ca	                            add rdx, rcx	      6806	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x48f8	            0x89c6	                            mov esi, eax	      6806	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x48fa	          0x4889d7	                            mov rdi, rdx	      6806	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x48fd	      0xe800000000	                          call 0x4004942	      6806	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x4902	          0x8945e8	             mov dword [rbp - 0x18], eax	      6806	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	CALL_7
0x4905	        0x837de800	               cmp dword [rbp - 0x18], 0	      6807	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	IF_9
0x4909	            0x7514	                           jne 0x400495f	      6807	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	IF_9
0x490b	        0x488b45f8	                mov rax, qword [rbp - 8]	      6808	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	IF_9
0x490f	        0x488d5001	                      lea rdx, [rax + 1]	      6808	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	IF_9
0x4913	        0x488955f8	                mov qword [rbp - 8], rdx	      6808	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	IF_9
0x4917	          0xc60000	                       mov byte [rax], 0	      6808	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	IF_9
0x491a	      0xe93a020000	                           jmp 0x4004b99	      6808	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	IF_9
0x491f	        0x837de801	               cmp dword [rbp - 0x18], 1	      6809	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x4923	     0xf8586000000	                           jne 0x40049ef	      6809	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x4929	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6811	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x492c	          0x4863d0	                         movsxd rdx, eax	      6811	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x492f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6811	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x4933	          0x4801d0	                            add rax, rdx	      6811	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x4936	           0xfb600	                   movzx eax, byte [rax]	      6811	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x4939	           0xfb6c0	                           movzx eax, al	      6811	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x493c	            0x4898	                                    cdqe	      6811	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x493e	     0xfb680000000	                   movzx eax, byte [rax]	      6811	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x4945	           0xfbec0	                           movsx eax, al	      6811	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x4948	          0x8945ec	             mov dword [rbp - 0x14], eax	      6811	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x494b	        0x837dec00	               cmp dword [rbp - 0x14], 0	      6813	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_11
0x494f	            0x7516	                           jne 0x40049a7	      6813	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_11
0x4951	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6816	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_11	CALL_8
0x4955	          0x4889c7	                            mov rdi, rax	      6816	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_11	CALL_8
0x4958	      0xe800000000	                          call 0x400499d	      6816	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_11	CALL_8
0x495d	      0xb800000000	                              mov eax, 0	      6817	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_11
0x4962	      0xe960020000	                           jmp 0x4004c07	      6817	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_11
0x4967	      0x48837db000	               cmp qword [rbp - 0x50], 0	      6819	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x496c	            0x741e	                            je 0x40049cc	      6819	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x496e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6819	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4971	          0x2b45e0	             sub eax, dword [rbp - 0x20]	      6819	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4974	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      6819	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4977	            0x7d13	                           jge 0x40049cc	      6819	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4979	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6822	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x497c	          0x2b45e0	             sub eax, dword [rbp - 0x20]	      6822	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x497f	            0x89c2	                            mov edx, eax	      6822	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4981	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6822	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4985	            0x8910	                    mov dword [rax], edx	      6822	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x4987	      0xe9dd010000	                           jmp 0x4004ba9	      6823	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10	IF_12
0x498c	        0x488b45f8	                mov rax, qword [rbp - 8]	      6825	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x4990	        0x488d5001	                      lea rdx, [rax + 1]	      6825	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x4994	        0x488955f8	                mov qword [rbp - 8], rdx	      6825	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x4998	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      6825	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x499b	          0x4863ca	                         movsxd rcx, edx	      6825	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x499e	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      6825	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x49a2	          0x4801ca	                            add rdx, rcx	      6825	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x49a5	           0xfb612	                   movzx edx, byte [rdx]	      6825	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x49a8	            0x8810	                      mov byte [rax], dl	      6825	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x49aa	      0xe9aa010000	                           jmp 0x4004b99	      6825	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_3	IF_10
0x49af	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6829	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	CALL_9
0x49b2	          0x4863d0	                         movsxd rdx, eax	      6829	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	CALL_9
0x49b5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6829	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	CALL_9
0x49b9	          0x4801d0	                            add rax, rdx	      6829	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	CALL_9
0x49bc	          0x4889c7	                            mov rdi, rax	      6829	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	CALL_9
0x49bf	      0xe800000000	                          call 0x4004a04	      6829	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	CALL_9
0x49c4	          0x8945e4	             mov dword [rbp - 0x1c], eax	      6829	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	CALL_9
0x49c7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6830	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13
0x49cb	            0x8b00	                    mov eax, dword [rax]	      6830	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13
0x49cd	          0x83f804	                              cmp eax, 4	      6830	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13
0x49d0	     0xf8502010000	                           jne 0x4004b18	      6830	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13
0x49d6	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x49d9	      0x3d52010000	                          cmp eax, 0x152	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x49de	     0xf84d1000000	                            je 0x4004af5	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x49e4	      0x3d52010000	                          cmp eax, 0x152	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x49e9	            0x7f61	                            jg 0x4004a8c	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x49eb	      0x3db4000000	                           cmp eax, 0xb4	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x49f0	     0xf84da000000	                            je 0x4004b10	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x49f6	      0x3db4000000	                           cmp eax, 0xb4	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x49fb	            0x7f26	                            jg 0x4004a63	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x49fd	      0x3da6000000	                           cmp eax, 0xa6	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a02	     0xf84c8000000	                            je 0x4004b10	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a08	      0x3da8000000	                           cmp eax, 0xa8	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a0d	     0xf84bd000000	                            je 0x4004b10	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a13	      0x3da4000000	                           cmp eax, 0xa4	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a18	     0xf84b2000000	                            je 0x4004b10	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a1e	      0xe9b5000000	                           jmp 0x4004b18	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a23	      0x3db8000000	                           cmp eax, 0xb8	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a28	     0xf84a2000000	                            je 0x4004b10	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a2e	      0x3db8000000	                           cmp eax, 0xb8	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a33	     0xf8c9f000000	                            jl 0x4004b18	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a39	      0x2dbc000000	                           sub eax, 0xbc	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a3e	          0x83f802	                              cmp eax, 2	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a41	     0xf8791000000	                            ja 0x4004b18	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a47	      0xe984000000	                           jmp 0x4004b10	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a4c	      0x3d78010000	                          cmp eax, 0x178	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a51	            0x7474	                            je 0x4004b07	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a53	      0x3d78010000	                          cmp eax, 0x178	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a58	            0x7f17	                            jg 0x4004ab1	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a5a	      0x3d60010000	                          cmp eax, 0x160	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a5f	            0x7430	                            je 0x4004ad1	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a61	      0x3d61010000	                          cmp eax, 0x161	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a66	            0x7432	                            je 0x4004ada	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a68	      0x3d53010000	                          cmp eax, 0x153	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a6d	            0x744f	                            je 0x4004afe	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a6f	            0xeb67	                           jmp 0x4004b18	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a71	      0x3d7e010000	                          cmp eax, 0x17e	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a76	            0x7434	                            je 0x4004aec	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a78	      0x3dac200000	                         cmp eax, 0x20ac	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a7d	            0x7409	                            je 0x4004ac8	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a7f	      0x3d7d010000	                          cmp eax, 0x17d	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a84	            0x741d	                            je 0x4004ae3	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a86	            0xeb50	                           jmp 0x4004b18	      6831	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a88	    0xc745e4a40000	           mov dword [rbp - 0x1c], 0xa4 	      6833	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a8f	            0xeb47	                           jmp 0x4004b18	      6833	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a91	    0xc745e4a60000	           mov dword [rbp - 0x1c], 0xa6 	      6834	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a98	            0xeb3e	                           jmp 0x4004b18	      6834	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4a9a	    0xc745e4a80000	           mov dword [rbp - 0x1c], 0xa8 	      6835	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4aa1	            0xeb35	                           jmp 0x4004b18	      6835	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4aa3	    0xc745e4b40000	           mov dword [rbp - 0x1c], 0xb4 	      6836	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4aaa	            0xeb2c	                           jmp 0x4004b18	      6836	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4aac	    0xc745e4b80000	           mov dword [rbp - 0x1c], 0xb8 	      6837	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4ab3	            0xeb23	                           jmp 0x4004b18	      6837	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4ab5	    0xc745e4bc0000	           mov dword [rbp - 0x1c], 0xbc 	      6838	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4abc	            0xeb1a	                           jmp 0x4004b18	      6838	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4abe	    0xc745e4bd0000	           mov dword [rbp - 0x1c], 0xbd 	      6839	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4ac5	            0xeb11	                           jmp 0x4004b18	      6839	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4ac7	    0xc745e4be0000	           mov dword [rbp - 0x1c], 0xbe 	      6840	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4ace	            0xeb08	                           jmp 0x4004b18	      6840	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4ad0	    0xc745e4000100	          mov dword [rbp - 0x1c], 0x100 	      6848	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4ad7	              0x90	                                     nop	      6848	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_13	SWITCH_3
0x4ad8	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6850	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x4adb	            0x89c7	                            mov edi, eax	      6850	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x4add	      0xe800000000	                          call 0x4004b22	      6850	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x4ae2	            0x85c0	                           test eax, eax	      6850	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x4ae4	            0x756a	                           jne 0x4004b90	      6850	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	CALL_10
0x4ae6	    0x817de4ff0000	           cmp dword [rbp - 0x1c], 0xff 	      6852	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x4aed	            0x7f13	                            jg 0x4004b42	      6852	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x4aef	        0x488b45f8	                mov rax, qword [rbp - 8]	      6853	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x4af3	        0x488d5001	                      lea rdx, [rax + 1]	      6853	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x4af7	        0x488955f8	                mov qword [rbp - 8], rdx	      6853	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x4afb	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      6853	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x4afe	            0x8810	                      mov byte [rax], dl	      6853	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x4b00	            0xeb4e	                           jmp 0x4004b90	      6853	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	IF_15
0x4b02	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6854	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4b06	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6854	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4b09	            0x85c0	                           test eax, eax	      6854	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4b0b	            0x7416	                            je 0x4004b63	      6854	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4b0d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6856	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16	CALL_11
0x4b11	          0x4889c7	                            mov rdi, rax	      6856	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16	CALL_11
0x4b14	      0xe800000000	                          call 0x4004b59	      6856	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16	CALL_11
0x4b19	      0xb800000000	                              mov eax, 0	      6857	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4b1e	      0xe9a4000000	                           jmp 0x4004c07	      6857	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4b23	        0x488b45f8	                mov rax, qword [rbp - 8]	      6861	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6
0x4b27	        0x488d5001	                      lea rdx, [rax + 1]	      6861	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6
0x4b2b	        0x488955f8	                mov qword [rbp - 8], rdx	      6861	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6
0x4b2f	          0xc600bf	                    mov byte [rax], 0xbf	      6861	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6
0x4b32	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6862	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17	CALL_12
0x4b35	            0x89c7	                            mov edi, eax	      6862	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17	CALL_12
0x4b37	      0xe800000000	                          call 0x4004b7c	      6862	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17	CALL_12
0x4b3c	          0x83f801	                              cmp eax, 1	      6862	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17	CALL_12
0x4b3f	            0x7e0f	                           jle 0x4004b90	      6862	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17	CALL_12
0x4b41	        0x488b45f8	                mov rax, qword [rbp - 8]	      6863	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17
0x4b45	        0x488d5001	                      lea rdx, [rax + 1]	      6863	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17
0x4b49	        0x488955f8	                mov qword [rbp - 8], rdx	      6863	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17
0x4b4d	          0xc6003f	                    mov byte [rax], 0x3f	      6863	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4	IF_14	ELSE_6	IF_17
0x4b50	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      6866	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4
0x4b53	          0x83e801	                              sub eax, 1	      6866	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4
0x4b56	           0x145e0	             add dword [rbp - 0x20], eax	      6866	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3	ELSE_4
0x4b59	        0x8345e001	               add dword [rbp - 0x20], 1	      6804	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x4b5d	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6804	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x4b60	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      6804	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x4b63	     0xf8c7cfdffff	                            jl 0x4004925	      6804	mbyte.c	FUNCTION_145	SWITCH_1	FOR_3
0x4b69	        0x488b45f8	                mov rax, qword [rbp - 8]	      6869	mbyte.c	FUNCTION_145	SWITCH_1
0x4b6d	          0xc60000	                       mov byte [rax], 0	      6869	mbyte.c	FUNCTION_145	SWITCH_1
0x4b70	      0x48837db800	               cmp qword [rbp - 0x48], 0	      6870	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x4b75	            0x744b	                            je 0x4004c02	      6870	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x4b77	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6871	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x4b7b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6871	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x4b7f	          0x4829c2	                            sub rdx, rax	      6871	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x4b82	          0x4889d0	                            mov rax, rdx	      6871	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x4b85	            0x89c2	                            mov edx, eax	      6871	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x4b87	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6871	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x4b8b	            0x8910	                    mov dword [rax], edx	      6871	mbyte.c	FUNCTION_145	SWITCH_1	IF_18
0x4b8d	            0xeb33	                           jmp 0x4004c02	      6872	mbyte.c	FUNCTION_145	SWITCH_1
0x4b8f	        0x488b7db8	             mov rdi, qword [rbp - 0x48]	      6898	mbyte.c	FUNCTION_145	SWITCH_1	CALL_17
0x4b93	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      6898	mbyte.c	FUNCTION_145	SWITCH_1	CALL_17
0x4b97	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      6898	mbyte.c	FUNCTION_145	SWITCH_1	CALL_17
0x4b9a	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      6898	mbyte.c	FUNCTION_145	SWITCH_1	CALL_17
0x4b9e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6898	mbyte.c	FUNCTION_145	SWITCH_1	CALL_17
0x4ba2	          0x4989f8	                             mov r8, rdi	      6898	mbyte.c	FUNCTION_145	SWITCH_1	CALL_17
0x4ba5	          0x4889c7	                            mov rdi, rax	      6898	mbyte.c	FUNCTION_145	SWITCH_1	CALL_17
0x4ba8	      0xe839f3ffff	                   call sym.iconv_string	      6898	mbyte.c	FUNCTION_145	SWITCH_1	CALL_17
0x4bad	        0x488945f0	             mov qword [rbp - 0x10], rax	      6898	mbyte.c	FUNCTION_145	SWITCH_1	CALL_17
0x4bb1	            0xeb10	                           jmp 0x4004c03	      6899	mbyte.c	FUNCTION_145	SWITCH_1
0x4bb3	              0x90	                                     nop	      6754	mbyte.c	FUNCTION_145	SWITCH_1	IF_3
0x4bb4	            0xeb0d	                           jmp 0x4004c03	      6754	mbyte.c	FUNCTION_145	SWITCH_1	IF_3
0x4bb6	              0x90	                                     nop	      6770	mbyte.c	FUNCTION_145	SWITCH_1
0x4bb7	            0xeb0a	                           jmp 0x4004c03	      6770	mbyte.c	FUNCTION_145	SWITCH_1
0x4bb9	              0x90	                                     nop	      6775	mbyte.c	FUNCTION_145	SWITCH_1	IF_6
0x4bba	            0xeb07	                           jmp 0x4004c03	      6775	mbyte.c	FUNCTION_145	SWITCH_1	IF_6
0x4bbc	              0x90	                                     nop	      6796	mbyte.c	FUNCTION_145	SWITCH_1
0x4bbd	            0xeb04	                           jmp 0x4004c03	      6796	mbyte.c	FUNCTION_145	SWITCH_1
0x4bbf	              0x90	                                     nop	      6802	mbyte.c	FUNCTION_145	SWITCH_1	IF_8
0x4bc0	            0xeb01	                           jmp 0x4004c03	      6802	mbyte.c	FUNCTION_145	SWITCH_1	IF_8
0x4bc2	              0x90	                                     nop	      6872	mbyte.c	FUNCTION_145	SWITCH_1
0x4bc3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6963	mbyte.c	FUNCTION_145
0x4bc7	              0xc9	                                   leave	      6964	mbyte.c	FUNCTION_145
0x4bc8	              0xc3	                                     ret	      6964	mbyte.c	FUNCTION_145
utf_safe_read_char_adv	CALL,1:WHILE,0:functions,0:ELSE,0:IF,4:DO,0:SWITCH,0:FOR,0	78
0x14ff	              0x55	                                push rbp	      1848	mbyte.c	FUNCTION_36
0x1500	          0x4889e5	                            mov rbp, rsp	      1848	mbyte.c	FUNCTION_36
0x1503	        0x4883ec20	                           sub rsp, 0x20	      1848	mbyte.c	FUNCTION_36
0x1507	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1848	mbyte.c	FUNCTION_36
0x150b	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1848	mbyte.c	FUNCTION_36
0x150f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1851	mbyte.c	FUNCTION_36	IF_1
0x1513	          0x488b00	                    mov rax, qword [rax]	      1851	mbyte.c	FUNCTION_36	IF_1
0x1516	          0x4885c0	                           test rax, rax	      1851	mbyte.c	FUNCTION_36	IF_1
0x1519	            0x750a	                           jne 0x4001565	      1851	mbyte.c	FUNCTION_36	IF_1
0x151b	      0xb800000000	                              mov eax, 0	      1852	mbyte.c	FUNCTION_36	IF_1
0x1520	      0xe9d8000000	                           jmp 0x400163d	      1852	mbyte.c	FUNCTION_36	IF_1
0x1525	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1854	mbyte.c	FUNCTION_36
0x1529	          0x488b00	                    mov rax, qword [rax]	      1854	mbyte.c	FUNCTION_36
0x152c	           0xfb600	                   movzx eax, byte [rax]	      1854	mbyte.c	FUNCTION_36
0x152f	           0xfb6c0	                           movzx eax, al	      1854	mbyte.c	FUNCTION_36
0x1532	            0x4898	                                    cdqe	      1854	mbyte.c	FUNCTION_36
0x1534	     0xfb680000000	                   movzx eax, byte [rax]	      1854	mbyte.c	FUNCTION_36
0x153b	           0xfbec0	                           movsx eax, al	      1854	mbyte.c	FUNCTION_36
0x153e	          0x8945f8	                mov dword [rbp - 8], eax	      1854	mbyte.c	FUNCTION_36
0x1541	        0x837df801	                  cmp dword [rbp - 8], 1	      1856	mbyte.c	FUNCTION_36	IF_2
0x1545	            0x752f	                           jne 0x40015b6	      1856	mbyte.c	FUNCTION_36	IF_2
0x1547	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1859	mbyte.c	FUNCTION_36	IF_2
0x154b	          0x488b00	                    mov rax, qword [rax]	      1859	mbyte.c	FUNCTION_36	IF_2
0x154e	        0x488d50ff	                      lea rdx, [rax - 1]	      1859	mbyte.c	FUNCTION_36	IF_2
0x1552	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1859	mbyte.c	FUNCTION_36	IF_2
0x1556	          0x488910	                    mov qword [rax], rdx	      1859	mbyte.c	FUNCTION_36	IF_2
0x1559	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1860	mbyte.c	FUNCTION_36	IF_2
0x155d	          0x488b00	                    mov rax, qword [rax]	      1860	mbyte.c	FUNCTION_36	IF_2
0x1560	        0x488d4801	                      lea rcx, [rax + 1]	      1860	mbyte.c	FUNCTION_36	IF_2
0x1564	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1860	mbyte.c	FUNCTION_36	IF_2
0x1568	          0x48890a	                    mov qword [rdx], rcx	      1860	mbyte.c	FUNCTION_36	IF_2
0x156b	           0xfb600	                   movzx eax, byte [rax]	      1860	mbyte.c	FUNCTION_36	IF_2
0x156e	           0xfb6c0	                           movzx eax, al	      1860	mbyte.c	FUNCTION_36	IF_2
0x1571	      0xe987000000	                           jmp 0x400163d	      1860	mbyte.c	FUNCTION_36	IF_2
0x1576	          0x8b45f8	                mov eax, dword [rbp - 8]	      1863	mbyte.c	FUNCTION_36	IF_3
0x1579	          0x4863d0	                         movsxd rdx, eax	      1863	mbyte.c	FUNCTION_36	IF_3
0x157c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1863	mbyte.c	FUNCTION_36	IF_3
0x1580	          0x488b00	                    mov rax, qword [rax]	      1863	mbyte.c	FUNCTION_36	IF_3
0x1583	          0x4839c2	                            cmp rdx, rax	      1863	mbyte.c	FUNCTION_36	IF_3
0x1586	            0x7770	                            ja 0x4001638	      1863	mbyte.c	FUNCTION_36	IF_3
0x1588	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1868	mbyte.c	FUNCTION_36	IF_3	CALL_1
0x158c	          0x488b00	                    mov rax, qword [rax]	      1868	mbyte.c	FUNCTION_36	IF_3	CALL_1
0x158f	          0x4889c7	                            mov rdi, rax	      1868	mbyte.c	FUNCTION_36	IF_3	CALL_1
0x1592	      0xe800000000	                          call 0x40015d7	      1868	mbyte.c	FUNCTION_36	IF_3	CALL_1
0x1597	          0x8945fc	                mov dword [rbp - 4], eax	      1868	mbyte.c	FUNCTION_36	IF_3	CALL_1
0x159a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1875	mbyte.c	FUNCTION_36	IF_3	IF_4
0x159e	          0x488b00	                    mov rax, qword [rax]	      1875	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15a1	           0xfb600	                   movzx eax, byte [rax]	      1875	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15a4	           0xfb6c0	                           movzx eax, al	      1875	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15a7	          0x3b45fc	                cmp eax, dword [rbp - 4]	      1875	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15aa	            0x751b	                           jne 0x4001607	      1875	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15ac	    0x817dfcc30000	               cmp dword [rbp - 4], 0xc3	      1875	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15b3	            0x7543	                           jne 0x4001638	      1875	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1875	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15b9	          0x488b00	                    mov rax, qword [rax]	      1875	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15bc	        0x4883c001	                              add rax, 1	      1875	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15c0	           0xfb600	                   movzx eax, byte [rax]	      1875	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15c3	            0x3c83	                            cmp al, 0x83	      1875	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15c5	            0x7531	                           jne 0x4001638	      1875	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1878	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15cb	          0x488b10	                    mov rdx, qword [rax]	      1878	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15ce	          0x8b45f8	                mov eax, dword [rbp - 8]	      1878	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15d1	            0x4898	                                    cdqe	      1878	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15d3	          0x4801c2	                            add rdx, rax	      1878	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1878	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15da	          0x488910	                    mov qword [rax], rdx	      1878	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15dd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1879	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15e1	          0x488b10	                    mov rdx, qword [rax]	      1879	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15e4	          0x8b45f8	                mov eax, dword [rbp - 8]	      1879	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15e7	            0x4898	                                    cdqe	      1879	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15e9	          0x4829c2	                            sub rdx, rax	      1879	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15ec	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1879	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15f0	          0x488910	                    mov qword [rax], rdx	      1879	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15f3	          0x8b45fc	                mov eax, dword [rbp - 4]	      1880	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15f6	            0xeb05	                           jmp 0x400163d	      1880	mbyte.c	FUNCTION_36	IF_3	IF_4
0x15f8	      0xb8ffffffff	                     mov eax, 0xffffffff	      1885	mbyte.c	FUNCTION_36
0x15fd	              0xc9	                                   leave	      1886	mbyte.c	FUNCTION_36
0x15fe	              0xc3	                                     ret	      1886	mbyte.c	FUNCTION_36
remove_bom	CALL,2:WHILE,1:functions,0:ELSE,1:IF,2:DO,0:SWITCH,0:FOR,0	43
0x7e9	              0x55	                                push rbp	       856	mbyte.c	FUNCTION_6
0x7ea	          0x4889e5	                            mov rbp, rsp	       856	mbyte.c	FUNCTION_6
0x7ed	        0x4883ec20	                           sub rsp, 0x20	       856	mbyte.c	FUNCTION_6
0x7f1	        0x48897de8	             mov qword [rbp - 0x18], rdi	       856	mbyte.c	FUNCTION_6
0x7f5	    0x8b0500000000	            mov eax, dword [0x0400083b] 	       857	mbyte.c	FUNCTION_6	IF_1
0x7fb	            0x85c0	                           test eax, eax	       857	mbyte.c	FUNCTION_6	IF_1
0x7fd	            0x7476	                            je 0x40008b5	       857	mbyte.c	FUNCTION_6	IF_1
0x7ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       859	mbyte.c	FUNCTION_6	IF_1
0x803	        0x488945f8	                mov qword [rbp - 8], rax	       859	mbyte.c	FUNCTION_6	IF_1
0x807	            0xeb50	                           jmp 0x4000899	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x809	        0x488b45f8	                mov rax, qword [rbp - 8]	       863	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x80d	        0x4883c001	                              add rax, 1	       863	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x811	           0xfb600	                   movzx eax, byte [rax]	       863	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x814	            0x3cbb	                            cmp al, 0xbb	       863	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x816	            0x753c	                           jne 0x4000894	       863	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x818	        0x488b45f8	                mov rax, qword [rbp - 8]	       863	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x81c	        0x4883c002	                              add rax, 2	       863	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x820	           0xfb600	                   movzx eax, byte [rax]	       863	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x823	            0x3cbf	                            cmp al, 0xbf	       863	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x825	            0x752d	                           jne 0x4000894	       863	mbyte.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x827	        0x488b45f8	                mov rax, qword [rbp - 8]	       864	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x82b	        0x4883c003	                              add rax, 3	       864	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x82f	          0x4889c7	                            mov rdi, rax	       864	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x832	      0xe800000000	                          call 0x4000877	       864	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x837	        0x488d5001	                      lea rdx, [rax + 1]	       864	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x83b	        0x488b45f8	                mov rax, qword [rbp - 8]	       864	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x83f	        0x488d4803	                      lea rcx, [rax + 3]	       864	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x843	        0x488b45f8	                mov rax, qword [rbp - 8]	       864	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x847	          0x4889ce	                            mov rsi, rcx	       864	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x84a	          0x4889c7	                            mov rdi, rax	       864	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x84d	      0xe800000000	                          call 0x4000892	       864	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x852	            0xeb05	                           jmp 0x4000899	       864	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0x854	      0x488345f801	                  add qword [rbp - 8], 1	       866	mbyte.c	FUNCTION_6	IF_1	WHILE_1	ELSE_1
0x859	        0x488b45f8	                mov rax, qword [rbp - 8]	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x85d	      0xbeef000000	                           mov esi, 0xef	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x862	          0x4889c7	                            mov rdi, rax	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x865	      0xe800000000	                          call 0x40008aa	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x86a	        0x488945f8	                mov qword [rbp - 8], rax	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x86e	      0x48837df800	                  cmp qword [rbp - 8], 0	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x873	            0x7594	                           jne 0x4000849	       861	mbyte.c	FUNCTION_6	IF_1	WHILE_1	CALL_1
0x875	              0x90	                                     nop	       869	mbyte.c	FUNCTION_6	ELSE_1
0x876	              0xc9	                                   leave	       869	mbyte.c	FUNCTION_6	ELSE_1
0x877	              0xc3	                                     ret	       869	mbyte.c	FUNCTION_6	ELSE_1
utf_ptr2cells_len	CALL,5:WHILE,0:functions,0:ELSE,0:IF,4:DO,0:SWITCH,0:FOR,0	53
0xf79	              0x55	                                push rbp	      1667	mbyte.c	FUNCTION_25
0xf7a	          0x4889e5	                            mov rbp, rsp	      1667	mbyte.c	FUNCTION_25
0xf7d	        0x4883ec20	                           sub rsp, 0x20	      1667	mbyte.c	FUNCTION_25
0xf81	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1667	mbyte.c	FUNCTION_25
0xf85	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1667	mbyte.c	FUNCTION_25
0xf88	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1671	mbyte.c	FUNCTION_25	IF_1
0xf8c	     0xf8e8a000000	                           jle 0x400105c	      1671	mbyte.c	FUNCTION_25	IF_1
0xf92	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1671	mbyte.c	FUNCTION_25	IF_1
0xf96	           0xfb600	                   movzx eax, byte [rax]	      1671	mbyte.c	FUNCTION_25	IF_1
0xf99	            0x84c0	                             test al, al	      1671	mbyte.c	FUNCTION_25	IF_1
0xf9b	            0x797f	                           jns 0x400105c	      1671	mbyte.c	FUNCTION_25	IF_1
0xf9d	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1673	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0xfa0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1673	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0xfa4	            0x89d6	                            mov esi, edx	      1673	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0xfa6	          0x4889c7	                            mov rdi, rax	      1673	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0xfa9	      0xe800000000	                          call 0x4000fee	      1673	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0xfae	            0x89c2	                            mov edx, eax	      1673	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0xfb0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1673	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0xfb4	           0xfb600	                   movzx eax, byte [rax]	      1673	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0xfb7	           0xfb6c0	                           movzx eax, al	      1673	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0xfba	            0x4898	                                    cdqe	      1673	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0xfbc	     0xfb680000000	                   movzx eax, byte [rax]	      1673	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0xfc3	           0xfbec0	                           movsx eax, al	      1673	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0xfc6	            0x39c2	                            cmp edx, eax	      1673	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0xfc8	            0x7d07	                           jge 0x4001011	      1673	mbyte.c	FUNCTION_25	IF_1	IF_2	CALL_1
0xfca	      0xb801000000	                              mov eax, 1	      1674	mbyte.c	FUNCTION_25	IF_1	IF_2
0xfcf	            0xeb50	                           jmp 0x4001061	      1674	mbyte.c	FUNCTION_25	IF_1	IF_2
0xfd1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1675	mbyte.c	FUNCTION_25	IF_1	CALL_2
0xfd5	          0x4889c7	                            mov rdi, rax	      1675	mbyte.c	FUNCTION_25	IF_1	CALL_2
0xfd8	      0xe800000000	                          call 0x400101d	      1675	mbyte.c	FUNCTION_25	IF_1	CALL_2
0xfdd	          0x8945fc	                mov dword [rbp - 4], eax	      1675	mbyte.c	FUNCTION_25	IF_1	CALL_2
0xfe0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1677	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0xfe4	          0x4889c7	                            mov rdi, rax	      1677	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0xfe7	      0xe800000000	                          call 0x400102c	      1677	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0xfec	          0x83f801	                              cmp eax, 1	      1677	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0xfef	            0x7406	                            je 0x4001037	      1677	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0xff1	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1677	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0xff5	            0x7507	                           jne 0x400103e	      1677	mbyte.c	FUNCTION_25	IF_1	IF_3	CALL_3
0xff7	      0xb804000000	                              mov eax, 4	      1678	mbyte.c	FUNCTION_25	IF_1	IF_3
0xffc	            0xeb23	                           jmp 0x4001061	      1678	mbyte.c	FUNCTION_25	IF_1	IF_3
0xffe	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      1680	mbyte.c	FUNCTION_25	IF_1	IF_4
0x1002	            0x7f0c	                            jg 0x4001050	      1680	mbyte.c	FUNCTION_25	IF_1	IF_4
0x1004	          0x8b45fc	                mov eax, dword [rbp - 4]	      1681	mbyte.c	FUNCTION_25	IF_1	CALL_4
0x1007	            0x89c7	                            mov edi, eax	      1681	mbyte.c	FUNCTION_25	IF_1	CALL_4
0x1009	      0xe800000000	                          call 0x400104e	      1681	mbyte.c	FUNCTION_25	IF_1	CALL_4
0x100e	            0xeb11	                           jmp 0x4001061	      1681	mbyte.c	FUNCTION_25	IF_1	CALL_4
0x1010	          0x8b45fc	                mov eax, dword [rbp - 4]	      1682	mbyte.c	FUNCTION_25	IF_1	CALL_5
0x1013	            0x89c7	                            mov edi, eax	      1682	mbyte.c	FUNCTION_25	IF_1	CALL_5
0x1015	      0xe800000000	                          call 0x400105a	      1682	mbyte.c	FUNCTION_25	IF_1	CALL_5
0x101a	            0xeb05	                           jmp 0x4001061	      1682	mbyte.c	FUNCTION_25	IF_1	CALL_5
0x101c	      0xb801000000	                              mov eax, 1	      1684	mbyte.c	FUNCTION_25
0x1021	              0xc9	                                   leave	      1685	mbyte.c	FUNCTION_25
0x1022	              0xc3	                                     ret	      1685	mbyte.c	FUNCTION_25
latin_ptr2cells_len	CALL,0:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	7
0xf67	              0x55	                                push rbp	      1661	mbyte.c	FUNCTION_24
0xf68	          0x4889e5	                            mov rbp, rsp	      1661	mbyte.c	FUNCTION_24
0xf6b	        0x48897df8	                mov qword [rbp - 8], rdi	      1661	mbyte.c	FUNCTION_24
0xf6f	          0x8975f4	              mov dword [rbp - 0xc], esi	      1661	mbyte.c	FUNCTION_24
0xf72	      0xb801000000	                              mov eax, 1	      1662	mbyte.c	FUNCTION_24
0xf77	              0x5d	                                 pop rbp	      1663	mbyte.c	FUNCTION_24
0xf78	              0xc3	                                     ret	      1663	mbyte.c	FUNCTION_24
mb_string2cells	CALL,0:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,1	39
0x10b5	              0x55	                                push rbp	      1725	mbyte.c	FUNCTION_29
0x10b6	          0x4889e5	                            mov rbp, rsp	      1725	mbyte.c	FUNCTION_29
0x10b9	        0x4883ec20	                           sub rsp, 0x20	      1725	mbyte.c	FUNCTION_29
0x10bd	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1725	mbyte.c	FUNCTION_29
0x10c1	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1725	mbyte.c	FUNCTION_29
0x10c4	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1727	mbyte.c	FUNCTION_29
0x10cb	    0xc745f8000000	                  mov dword [rbp - 8], 0	      1729	mbyte.c	FUNCTION_29	FOR_1
0x10d2	            0xeb38	                           jmp 0x400114c	      1729	mbyte.c	FUNCTION_29	FOR_1
0x10d4	    0x488b05000000	            mov rax, qword [0x0400111b] 	      1730	mbyte.c	FUNCTION_29	FOR_1
0x10db	          0x8b55f8	                mov edx, dword [rbp - 8]	      1730	mbyte.c	FUNCTION_29	FOR_1
0x10de	          0x4863ca	                         movsxd rcx, edx	      1730	mbyte.c	FUNCTION_29	FOR_1
0x10e1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1730	mbyte.c	FUNCTION_29	FOR_1
0x10e5	          0x4801ca	                            add rdx, rcx	      1730	mbyte.c	FUNCTION_29	FOR_1
0x10e8	          0x4889d7	                            mov rdi, rdx	      1730	mbyte.c	FUNCTION_29	FOR_1
0x10eb	            0xffd0	                                call rax	      1730	mbyte.c	FUNCTION_29	FOR_1
0x10ed	           0x145fc	                add dword [rbp - 4], eax	      1730	mbyte.c	FUNCTION_29	FOR_1
0x10f0	    0x488b05000000	            mov rax, qword [0x04001137] 	      1729	mbyte.c	FUNCTION_29	FOR_1
0x10f7	          0x8b55f8	                mov edx, dword [rbp - 8]	      1729	mbyte.c	FUNCTION_29	FOR_1
0x10fa	          0x4863ca	                         movsxd rcx, edx	      1729	mbyte.c	FUNCTION_29	FOR_1
0x10fd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1729	mbyte.c	FUNCTION_29	FOR_1
0x1101	          0x4801ca	                            add rdx, rcx	      1729	mbyte.c	FUNCTION_29	FOR_1
0x1104	          0x4889d7	                            mov rdi, rdx	      1729	mbyte.c	FUNCTION_29	FOR_1
0x1107	            0xffd0	                                call rax	      1729	mbyte.c	FUNCTION_29	FOR_1
0x1109	           0x145f8	                add dword [rbp - 8], eax	      1729	mbyte.c	FUNCTION_29	FOR_1
0x110c	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1729	mbyte.c	FUNCTION_29	FOR_1
0x1110	            0x7808	                            js 0x400115a	      1729	mbyte.c	FUNCTION_29	FOR_1
0x1112	          0x8b45f8	                mov eax, dword [rbp - 8]	      1729	mbyte.c	FUNCTION_29	FOR_1
0x1115	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1729	mbyte.c	FUNCTION_29	FOR_1
0x1118	            0x7d14	                           jge 0x400116e	      1729	mbyte.c	FUNCTION_29	FOR_1
0x111a	          0x8b45f8	                mov eax, dword [rbp - 8]	      1729	mbyte.c	FUNCTION_29	FOR_1
0x111d	          0x4863d0	                         movsxd rdx, eax	      1729	mbyte.c	FUNCTION_29	FOR_1
0x1120	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1729	mbyte.c	FUNCTION_29	FOR_1
0x1124	          0x4801d0	                            add rax, rdx	      1729	mbyte.c	FUNCTION_29	FOR_1
0x1127	           0xfb600	                   movzx eax, byte [rax]	      1729	mbyte.c	FUNCTION_29	FOR_1
0x112a	            0x84c0	                             test al, al	      1729	mbyte.c	FUNCTION_29	FOR_1
0x112c	            0x75a6	                           jne 0x4001114	      1729	mbyte.c	FUNCTION_29	FOR_1
0x112e	          0x8b45fc	                mov eax, dword [rbp - 4]	      1731	mbyte.c	FUNCTION_29
0x1131	              0xc9	                                   leave	      1732	mbyte.c	FUNCTION_29
0x1132	              0xc3	                                     ret	      1732	mbyte.c	FUNCTION_29
utf_fold	CALL,1:WHILE,0:functions,0:ELSE,0:IF,1:DO,0:SWITCH,0:FOR,0	22
0x2374	              0x55	                                push rbp	      3162	mbyte.c	ELSE_2	FUNCTION_59
0x2375	          0x4889e5	                            mov rbp, rsp	      3162	mbyte.c	ELSE_2	FUNCTION_59
0x2378	        0x4883ec08	                              sub rsp, 8	      3162	mbyte.c	ELSE_2	FUNCTION_59
0x237c	          0x897dfc	                mov dword [rbp - 4], edi	      3162	mbyte.c	ELSE_2	FUNCTION_59
0x237f	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x2383	            0x7f19	                            jg 0x40023de	      3163	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x2385	        0x837dfc40	               cmp dword [rbp - 4], 0x40	      3165	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x2389	            0x7e0e	                           jle 0x40023d9	      3165	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x238b	        0x837dfc5a	               cmp dword [rbp - 4], 0x5a	      3165	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x238f	            0x7f08	                            jg 0x40023d9	      3165	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x2391	          0x8b45fc	                mov eax, dword [rbp - 4]	      3165	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x2394	          0x83c020	                           add eax, 0x20	      3165	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x2397	            0xeb19	                           jmp 0x40023f2	      3165	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x2399	          0x8b45fc	                mov eax, dword [rbp - 4]	      3165	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x239c	            0xeb14	                           jmp 0x40023f2	      3165	mbyte.c	ELSE_2	FUNCTION_59	IF_1
0x239e	          0x8b45fc	                mov eax, dword [rbp - 4]	      3166	mbyte.c	ELSE_2	FUNCTION_59	CALL_1
0x23a1	      0xba900b0000	                          mov edx, 0xb90	      3166	mbyte.c	ELSE_2	FUNCTION_59	CALL_1
0x23a6	      0xbe00000000	                              mov esi, 0	      3166	mbyte.c	ELSE_2	FUNCTION_59	CALL_1
0x23ab	            0x89c7	                            mov edi, eax	      3166	mbyte.c	ELSE_2	FUNCTION_59	CALL_1
0x23ad	      0xe8b2feffff	                    call sym.utf_convert	      3166	mbyte.c	ELSE_2	FUNCTION_59	CALL_1
0x23b2	              0xc9	                                   leave	      3167	mbyte.c	ELSE_2	FUNCTION_59
0x23b3	              0xc3	                                     ret	      3167	mbyte.c	ELSE_2	FUNCTION_59
mb_off_next	CALL,0:WHILE,0:functions,0:ELSE,0:IF,5:DO,0:SWITCH,0:FOR,2	78
0x2d20	              0x55	                                push rbp	      3898	mbyte.c	FUNCTION_72
0x2d21	          0x4889e5	                            mov rbp, rsp	      3898	mbyte.c	FUNCTION_72
0x2d24	        0x4883ec20	                           sub rsp, 0x20	      3898	mbyte.c	FUNCTION_72
0x2d28	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3898	mbyte.c	FUNCTION_72
0x2d2c	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3898	mbyte.c	FUNCTION_72
0x2d30	    0x8b0500000000	            mov eax, dword [0x04002d76] 	      3902	mbyte.c	FUNCTION_72	IF_1
0x2d36	            0x85c0	                           test eax, eax	      3902	mbyte.c	FUNCTION_72	IF_1
0x2d38	     0xf84c9000000	                            je 0x4002e47	      3902	mbyte.c	FUNCTION_72	IF_1
0x2d3e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3904	mbyte.c	FUNCTION_72	IF_1	IF_2
0x2d42	           0xfb600	                   movzx eax, byte [rax]	      3904	mbyte.c	FUNCTION_72	IF_1	IF_2
0x2d45	            0x84c0	                             test al, al	      3904	mbyte.c	FUNCTION_72	IF_1	IF_2
0x2d47	            0x780a	                            js 0x4002d93	      3904	mbyte.c	FUNCTION_72	IF_1	IF_2
0x2d49	      0xb800000000	                              mov eax, 0	      3905	mbyte.c	FUNCTION_72	IF_1	IF_2
0x2d4e	      0xe9cb000000	                           jmp 0x4002e5e	      3905	mbyte.c	FUNCTION_72	IF_1	IF_2
0x2d53	    0xc745f8000000	                  mov dword [rbp - 8], 0	      3908	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x2d5a	            0xeb04	                           jmp 0x4002da0	      3908	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x2d5c	        0x8345f801	                  add dword [rbp - 8], 1	      3908	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x2d60	          0x8b45f8	                mov eax, dword [rbp - 8]	      3908	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x2d63	          0x4863d0	                         movsxd rdx, eax	      3908	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x2d66	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3908	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x2d6a	          0x4801d0	                            add rax, rdx	      3908	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x2d6d	           0xfb600	                   movzx eax, byte [rax]	      3908	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x2d70	           0xfb6c0	                           movzx eax, al	      3908	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x2d73	      0x25c0000000	                           and eax, 0xc0	      3908	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x2d78	      0x3d80000000	                           cmp eax, 0x80	      3908	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x2d7d	            0x74dd	                            je 0x4002d9c	      3908	mbyte.c	FUNCTION_72	IF_1	FOR_1
0x2d7f	        0x837df800	                  cmp dword [rbp - 8], 0	      3910	mbyte.c	FUNCTION_72	IF_1	IF_3
0x2d83	            0x7e7d	                           jle 0x4002e42	      3910	mbyte.c	FUNCTION_72	IF_1	IF_3
0x2d85	    0xc745fc000000	                  mov dword [rbp - 4], 0	      3913	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x2d8c	            0xeb25	                           jmp 0x4002df3	      3913	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x2d8e	          0x8b45fc	                mov eax, dword [rbp - 4]	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x2d91	            0xf7d8	                                 neg eax	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x2d93	          0x4863d0	                         movsxd rdx, eax	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x2d96	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x2d9a	          0x4801d0	                            add rax, rdx	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x2d9d	           0xfb600	                   movzx eax, byte [rax]	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x2da0	           0xfb6c0	                           movzx eax, al	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x2da3	      0x25c0000000	                           and eax, 0xc0	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x2da8	      0x3d80000000	                           cmp eax, 0x80	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x2dad	            0x751e	                           jne 0x4002e0d	      3914	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x2daf	        0x8345fc01	                  add dword [rbp - 4], 1	      3913	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x2db3	          0x8b45fc	                mov eax, dword [rbp - 4]	      3913	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x2db6	            0x4898	                                    cdqe	      3913	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x2db8	          0x48f7d8	                                 neg rax	      3913	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x2dbb	          0x4889c2	                            mov rdx, rax	      3913	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x2dbe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3913	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x2dc2	          0x4801d0	                            add rax, rdx	      3913	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x2dc5	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3913	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x2dc9	            0x77c3	                            ja 0x4002dce	      3913	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x2dcb	            0xeb01	                           jmp 0x4002e0e	      3913	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2
0x2dcd	              0x90	                                     nop	      3915	mbyte.c	FUNCTION_72	IF_1	IF_3	FOR_2	IF_4
0x2dce	          0x8b45fc	                mov eax, dword [rbp - 4]	      3916	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x2dd1	            0xf7d8	                                 neg eax	      3916	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x2dd3	          0x4863d0	                         movsxd rdx, eax	      3916	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x2dd6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3916	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x2dda	          0x4801d0	                            add rax, rdx	      3916	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x2ddd	           0xfb600	                   movzx eax, byte [rax]	      3916	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x2de0	           0xfb6c0	                           movzx eax, al	      3916	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x2de3	            0x4898	                                    cdqe	      3916	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x2de5	     0xfb680000000	                   movzx eax, byte [rax]	      3916	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x2dec	           0xfbec0	                           movsx eax, al	      3916	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x2def	          0x8b4df8	                mov ecx, dword [rbp - 8]	      3916	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x2df2	          0x8b55fc	                mov edx, dword [rbp - 4]	      3916	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x2df5	             0x1ca	                            add edx, ecx	      3916	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x2df7	            0x39d0	                            cmp eax, edx	      3916	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x2df9	            0x7407	                            je 0x4002e42	      3916	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x2dfb	      0xb800000000	                              mov eax, 0	      3917	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x2e00	            0xeb1c	                           jmp 0x4002e5e	      3917	mbyte.c	FUNCTION_72	IF_1	IF_3	IF_5
0x2e02	          0x8b45f8	                mov eax, dword [rbp - 8]	      3919	mbyte.c	FUNCTION_72	IF_1
0x2e05	            0xeb17	                           jmp 0x4002e5e	      3919	mbyte.c	FUNCTION_72	IF_1
0x2e07	    0x488b05000000	            mov rax, qword [0x04002e4e] 	      3924	mbyte.c	FUNCTION_72
0x2e0e	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      3924	mbyte.c	FUNCTION_72
0x2e12	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3924	mbyte.c	FUNCTION_72
0x2e16	          0x4889ce	                            mov rsi, rcx	      3924	mbyte.c	FUNCTION_72
0x2e19	          0x4889d7	                            mov rdi, rdx	      3924	mbyte.c	FUNCTION_72
0x2e1c	            0xffd0	                                call rax	      3924	mbyte.c	FUNCTION_72
0x2e1e	              0xc9	                                   leave	      3925	mbyte.c	FUNCTION_72
0x2e1f	              0xc3	                                     ret	      3925	mbyte.c	FUNCTION_72
latin_ptr2cells	CALL,0:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	6
0xeb0	              0x55	                                push rbp	      1619	mbyte.c	FUNCTION_21
0xeb1	          0x4889e5	                            mov rbp, rsp	      1619	mbyte.c	FUNCTION_21
0xeb4	        0x48897df8	                mov qword [rbp - 8], rdi	      1619	mbyte.c	FUNCTION_21
0xeb8	      0xb801000000	                              mov eax, 1	      1620	mbyte.c	FUNCTION_21
0xebd	              0x5d	                                 pop rbp	      1621	mbyte.c	FUNCTION_21
0xebe	              0xc3	                                     ret	      1621	mbyte.c	FUNCTION_21
enc_locale_env	CALL,10:WHILE,0:functions,0:ELSE,3:IF,8:DO,0:SWITCH,0:FOR,1	192
0x3ab2	              0x55	                                push rbp	      4402	mbyte.c	FUNCTION_88
0x3ab3	          0x4889e5	                            mov rbp, rsp	      4402	mbyte.c	FUNCTION_88
0x3ab6	        0x4883ec70	                           sub rsp, 0x70	      4402	mbyte.c	FUNCTION_88
0x3aba	        0x48897d98	             mov qword [rbp - 0x68], rdi	      4402	mbyte.c	FUNCTION_88
0x3abe	    0x64488b042528	                mov rax, qword fs:[0x28]	      4402	mbyte.c	FUNCTION_88
0x3ac7	        0x488945f8	                mov qword [rbp - 8], rax	      4402	mbyte.c	FUNCTION_88
0x3acb	            0x31c0	                            xor eax, eax	      4402	mbyte.c	FUNCTION_88
0x3acd	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4403	mbyte.c	FUNCTION_88
0x3ad1	        0x488945b0	             mov qword [rbp - 0x50], rax	      4403	mbyte.c	FUNCTION_88
0x3ad5	      0x48837db000	               cmp qword [rbp - 0x50], 0	      4408	mbyte.c	FUNCTION_88	IF_1
0x3ada	            0x740b	                            je 0x4003b27	      4408	mbyte.c	FUNCTION_88	IF_1
0x3adc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4408	mbyte.c	FUNCTION_88	IF_1
0x3ae0	           0xfb600	                   movzx eax, byte [rax]	      4408	mbyte.c	FUNCTION_88	IF_1
0x3ae3	            0x84c0	                             test al, al	      4408	mbyte.c	FUNCTION_88	IF_1
0x3ae5	            0x754e	                           jne 0x4003b75	      4408	mbyte.c	FUNCTION_88	IF_1
0x3ae7	      0xbf00000000	                              mov edi, 0	      4409	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x3aec	      0xe800000000	                          call 0x4003b31	      4409	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x3af1	        0x488945b0	             mov qword [rbp - 0x50], rax	      4409	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x3af5	      0x48837db000	               cmp qword [rbp - 0x50], 0	      4409	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x3afa	            0x740b	                            je 0x4003b47	      4409	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x3afc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4409	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x3b00	           0xfb600	                   movzx eax, byte [rax]	      4409	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x3b03	            0x84c0	                             test al, al	      4409	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x3b05	            0x752e	                           jne 0x4003b75	      4409	mbyte.c	FUNCTION_88	IF_1	IF_2	CALL_1
0x3b07	      0xbf00000000	                              mov edi, 0	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x3b0c	      0xe800000000	                          call 0x4003b51	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x3b11	        0x488945b0	             mov qword [rbp - 0x50], rax	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x3b15	      0x48837db000	               cmp qword [rbp - 0x50], 0	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x3b1a	            0x740b	                            je 0x4003b67	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x3b1c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x3b20	           0xfb600	                   movzx eax, byte [rax]	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x3b23	            0x84c0	                             test al, al	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x3b25	            0x750e	                           jne 0x4003b75	      4410	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3	CALL_2
0x3b27	      0xbf00000000	                              mov edi, 0	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3
0x3b2c	      0xe800000000	                          call 0x4003b71	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3
0x3b31	        0x488945b0	             mov qword [rbp - 0x50], rax	      4411	mbyte.c	FUNCTION_88	IF_1	IF_2	IF_3
0x3b35	      0x48837db000	               cmp qword [rbp - 0x50], 0	      4413	mbyte.c	FUNCTION_88	IF_4
0x3b3a	            0x740b	                            je 0x4003b87	      4413	mbyte.c	FUNCTION_88	IF_4
0x3b3c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4413	mbyte.c	FUNCTION_88	IF_4
0x3b40	           0xfb600	                   movzx eax, byte [rax]	      4413	mbyte.c	FUNCTION_88	IF_4
0x3b43	            0x84c0	                             test al, al	      4413	mbyte.c	FUNCTION_88	IF_4
0x3b45	            0x750a	                           jne 0x4003b91	      4413	mbyte.c	FUNCTION_88	IF_4
0x3b47	      0xb800000000	                              mov eax, 0	      4414	mbyte.c	FUNCTION_88	IF_4
0x3b4c	      0xe9e6010000	                           jmp 0x4003d77	      4414	mbyte.c	FUNCTION_88	IF_4
0x3b51	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4424	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x3b55	      0xbe2e000000	                           mov esi, 0x2e	      4424	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x3b5a	          0x4889c7	                            mov rdi, rax	      4424	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x3b5d	      0xe800000000	                          call 0x4003ba2	      4424	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x3b62	        0x488945b8	             mov qword [rbp - 0x48], rax	      4424	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x3b66	      0x48837db800	               cmp qword [rbp - 0x48], 0	      4424	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x3b6b	     0xf84c2000000	                            je 0x4003c73	      4424	mbyte.c	FUNCTION_88	IF_5	CALL_4
0x3b71	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4426	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x3b75	        0x4883c002	                              add rax, 2	      4426	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x3b79	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      4426	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x3b7d	     0xf83a4000000	                           jae 0x4003c67	      4426	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x3b83	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4426	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x3b87	        0x4883c001	                              add rax, 1	      4426	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x3b8b	      0xba03000000	                              mov edx, 3	      4426	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x3b90	      0xbe00000000	                              mov esi, 0	      4426	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x3b95	          0x4889c7	                            mov rdi, rax	      4426	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x3b98	      0xe800000000	                          call 0x4003bdd	      4426	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x3b9d	            0x85c0	                           test eax, eax	      4426	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x3b9f	     0xf8582000000	                           jne 0x4003c67	      4426	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_5
0x3ba5	      0xe800000000	                          call 0x4003bea	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x3baa	          0x488b00	                    mov rax, qword [rax]	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x3bad	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x3bb1	        0x4883c204	                              add rdx, 4	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x3bb5	           0xfb612	                   movzx edx, byte [rdx]	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x3bb8	        0x480fbed2	                           movsx rdx, dl	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x3bbc	          0x4801d2	                            add rdx, rdx	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x3bbf	          0x4801d0	                            add rax, rdx	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x3bc2	           0xfb700	                   movzx eax, word [rax]	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x3bc5	           0xfb7c0	                           movzx eax, ax	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x3bc8	          0x83e008	                              and eax, 8	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x3bcb	            0x85c0	                           test eax, eax	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x3bcd	            0x7558	                           jne 0x4003c67	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x3bcf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x3bd3	        0x4883c004	                              add rax, 4	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x3bd7	           0xfb600	                   movzx eax, byte [rax]	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x3bda	            0x3c2d	                            cmp al, 0x2d	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x3bdc	            0x7449	                            je 0x4003c67	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x3bde	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x3be2	        0x4883e803	                              sub rax, 3	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x3be6	           0xfb600	                   movzx eax, byte [rax]	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x3be9	            0x3c5f	                            cmp al, 0x5f	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x3beb	            0x753a	                           jne 0x4003c67	      4427	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_6
0x3bed	        0x488d45c0	                   lea rax, [rbp - 0x40]	      4430	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_7
0x3bf1	        0x4883c00a	                            add rax, 0xa	      4430	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_7
0x3bf5	    0xc7006575632d	            mov dword [rax], 0x2d637565 	      4430	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_7
0x3bfb	        0xc6400400	                   mov byte [rax + 4], 0	      4430	mbyte.c	FUNCTION_88	IF_5	IF_6	CALL_7
0x3bff	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4431	mbyte.c	FUNCTION_88	IF_5	IF_6
0x3c03	         0xfb640fe	               movzx eax, byte [rax - 2]	      4431	mbyte.c	FUNCTION_88	IF_5	IF_6
0x3c07	          0x8845ce	               mov byte [rbp - 0x32], al	      4431	mbyte.c	FUNCTION_88	IF_5	IF_6
0x3c0a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4432	mbyte.c	FUNCTION_88	IF_5	IF_6
0x3c0e	         0xfb640ff	               movzx eax, byte [rax - 1]	      4432	mbyte.c	FUNCTION_88	IF_5	IF_6
0x3c12	          0x8845cf	               mov byte [rbp - 0x31], al	      4432	mbyte.c	FUNCTION_88	IF_5	IF_6
0x3c15	        0xc645d000	                mov byte [rbp - 0x30], 0	      4433	mbyte.c	FUNCTION_88	IF_5	IF_6
0x3c19	        0x488d45c0	                   lea rax, [rbp - 0x40]	      4434	mbyte.c	FUNCTION_88	IF_5	IF_6
0x3c1d	        0x4883c00a	                            add rax, 0xa	      4434	mbyte.c	FUNCTION_88	IF_5	IF_6
0x3c21	        0x488945b0	             mov qword [rbp - 0x50], rax	      4434	mbyte.c	FUNCTION_88	IF_5	IF_6
0x3c25	            0xeb0c	                           jmp 0x4003c73	      4434	mbyte.c	FUNCTION_88	IF_5	IF_6
0x3c27	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4437	mbyte.c	FUNCTION_88	IF_5	ELSE_1
0x3c2b	        0x4883c001	                              add rax, 1	      4437	mbyte.c	FUNCTION_88	IF_5	ELSE_1
0x3c2f	        0x488945b0	             mov qword [rbp - 0x50], rax	      4437	mbyte.c	FUNCTION_88	IF_5	ELSE_1
0x3c33	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      4439	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x3c3a	      0xe9c1000000	                           jmp 0x4003d40	      4439	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x3c3f	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4441	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x3c42	          0x4863d0	                         movsxd rdx, eax	      4441	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x3c45	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4441	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x3c49	          0x4801d0	                            add rax, rdx	      4441	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x3c4c	           0xfb600	                   movzx eax, byte [rax]	      4441	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x3c4f	            0x3c5f	                            cmp al, 0x5f	      4441	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x3c51	            0x7414	                            je 0x4003ca7	      4441	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x3c53	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4441	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x3c56	          0x4863d0	                         movsxd rdx, eax	      4441	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x3c59	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4441	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x3c5d	          0x4801d0	                            add rax, rdx	      4441	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x3c60	           0xfb600	                   movzx eax, byte [rax]	      4441	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x3c63	            0x3c2d	                            cmp al, 0x2d	      4441	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x3c65	            0x750f	                           jne 0x4003cb6	      4441	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x3c67	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x3c6a	            0x4898	                                    cdqe	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x3c6c	      0xc64405c02d	      mov byte [rbp + rax - 0x40], 0x2d 	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x3c71	      0xe986000000	                           jmp 0x4003d3c	      4442	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	IF_7
0x3c76	      0xe800000000	                          call 0x4003cbb	      4443	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x3c7b	          0x488b00	                    mov rax, qword [rax]	      4443	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x3c7e	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      4443	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x3c81	          0x4863ca	                         movsxd rcx, edx	      4443	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x3c84	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      4443	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x3c88	          0x4801ca	                            add rdx, rcx	      4443	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x3c8b	           0xfb612	                   movzx edx, byte [rdx]	      4443	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x3c8e	        0x480fbed2	                           movsx rdx, dl	      4443	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x3c92	          0x4801d2	                            add rdx, rdx	      4443	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x3c95	          0x4801d0	                            add rax, rdx	      4443	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x3c98	           0xfb700	                   movzx eax, word [rax]	      4443	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x3c9b	           0xfb7c0	                           movzx eax, ax	      4443	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x3c9e	          0x83e008	                              and eax, 8	      4443	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x3ca1	            0x85c0	                           test eax, eax	      4443	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x3ca3	            0x747b	                            je 0x4003d60	      4443	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8	CALL_8
0x3ca5	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3ca8	          0x4863d0	                         movsxd rdx, eax	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3cab	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3caf	          0x4801d0	                            add rax, rdx	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3cb2	           0xfb600	                   movzx eax, byte [rax]	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3cb5	            0x3c40	                            cmp al, 0x40	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3cb7	            0x7e14	                           jle 0x4003d0d	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3cb9	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3cbc	          0x4863d0	                         movsxd rdx, eax	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3cbf	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3cc3	          0x4801d0	                            add rax, rdx	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3cc6	           0xfb600	                   movzx eax, byte [rax]	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3cc9	            0x3c5a	                            cmp al, 0x5a	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3ccb	            0x7e12	                           jle 0x4003d1f	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3ccd	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3cd0	          0x4863d0	                         movsxd rdx, eax	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3cd3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3cd7	          0x4801d0	                            add rax, rdx	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3cda	           0xfb600	                   movzx eax, byte [rax]	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3cdd	            0xeb13	                           jmp 0x4003d32	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3cdf	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3ce2	          0x4863d0	                         movsxd rdx, eax	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3ce5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3ce9	          0x4801d0	                            add rax, rdx	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3cec	           0xfb600	                   movzx eax, byte [rax]	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3cef	          0x83c020	                           add eax, 0x20	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3cf2	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3cf5	          0x4863d2	                         movsxd rdx, edx	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3cf8	        0x884415c0	         mov byte [rbp + rdx - 0x40], al	      4444	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_2	IF_8
0x3cfc	        0x8345ac01	               add dword [rbp - 0x54], 1	      4439	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x3d00	        0x837dac30	           cmp dword [rbp - 0x54], 0x30 	      4439	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x3d04	            0x7f1b	                            jg 0x4003d61	      4439	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x3d06	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4439	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x3d09	          0x4863d0	                         movsxd rdx, eax	      4439	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x3d0c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4439	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x3d10	          0x4801d0	                            add rax, rdx	      4439	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x3d13	           0xfb600	                   movzx eax, byte [rax]	      4439	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x3d16	            0x84c0	                             test al, al	      4439	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x3d18	     0xf8521ffffff	                           jne 0x4003c7f	      4439	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x3d1e	            0xeb01	                           jmp 0x4003d61	      4439	mbyte.c	FUNCTION_88	ELSE_1	FOR_1
0x3d20	              0x90	                                     nop	      4446	mbyte.c	FUNCTION_88	ELSE_1	FOR_1	ELSE_3
0x3d21	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4448	mbyte.c	FUNCTION_88
0x3d24	            0x4898	                                    cdqe	      4448	mbyte.c	FUNCTION_88
0x3d26	      0xc64405c000	          mov byte [rbp + rax - 0x40], 0	      4448	mbyte.c	FUNCTION_88
0x3d2b	        0x488d45c0	                   lea rax, [rbp - 0x40]	      4450	mbyte.c	FUNCTION_88	CALL_10
0x3d2f	          0x4889c7	                            mov rdi, rax	      4450	mbyte.c	FUNCTION_88	CALL_10
0x3d32	      0xe800000000	                          call 0x4003d77	      4450	mbyte.c	FUNCTION_88	CALL_10
0x3d37	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4451	mbyte.c	FUNCTION_88
0x3d3b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4451	mbyte.c	FUNCTION_88
0x3d44	            0x7405	                            je 0x4003d8b	      4451	mbyte.c	FUNCTION_88
0x3d46	      0xe800000000	                          call 0x4003d8b	      4451	mbyte.c	FUNCTION_88
0x3d4b	              0xc9	                                   leave	      4451	mbyte.c	FUNCTION_88
0x3d4c	              0xc3	                                     ret	      4451	mbyte.c	FUNCTION_88
enc_alias_search	CALL,1:WHILE,0:functions,0:ELSE,0:IF,1:DO,0:SWITCH,0:FOR,1	34
0x3a43	              0x55	                                push rbp	      4378	mbyte.c	FUNCTION_87
0x3a44	          0x4889e5	                            mov rbp, rsp	      4378	mbyte.c	FUNCTION_87
0x3a47	        0x4883ec20	                           sub rsp, 0x20	      4378	mbyte.c	FUNCTION_87
0x3a4b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4378	mbyte.c	FUNCTION_87
0x3a4f	    0xc745fc000000	                  mov dword [rbp - 4], 0	      4381	mbyte.c	FUNCTION_87	FOR_1
0x3a56	            0xeb3c	                           jmp 0x4003ad4	      4381	mbyte.c	FUNCTION_87	FOR_1
0x3a58	          0x8b45fc	                mov eax, dword [rbp - 4]	      4382	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x3a5b	            0x4898	                                    cdqe	      4382	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x3a5d	        0x48c1e004	                              shl rax, 4	      4382	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x3a61	    0x480500000000	                              add rax, 0	      4382	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x3a67	          0x488b10	                    mov rdx, qword [rax]	      4382	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x3a6a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4382	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x3a6e	          0x4889d6	                            mov rsi, rdx	      4382	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x3a71	          0x4889c7	                            mov rdi, rax	      4382	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x3a74	      0xe800000000	                          call 0x4003ab9	      4382	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x3a79	            0x85c0	                           test eax, eax	      4382	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x3a7b	            0x7513	                           jne 0x4003ad0	      4382	mbyte.c	FUNCTION_87	FOR_1	IF_1	CALL_1
0x3a7d	          0x8b45fc	                mov eax, dword [rbp - 4]	      4383	mbyte.c	FUNCTION_87	FOR_1	IF_1
0x3a80	            0x4898	                                    cdqe	      4383	mbyte.c	FUNCTION_87	FOR_1	IF_1
0x3a82	        0x48c1e004	                              shl rax, 4	      4383	mbyte.c	FUNCTION_87	FOR_1	IF_1
0x3a86	    0x480500000000	                              add rax, 0	      4383	mbyte.c	FUNCTION_87	FOR_1	IF_1
0x3a8c	            0x8b00	                    mov eax, dword [rax]	      4383	mbyte.c	FUNCTION_87	FOR_1	IF_1
0x3a8e	            0xeb20	                           jmp 0x4003af0	      4383	mbyte.c	FUNCTION_87	FOR_1	IF_1
0x3a90	        0x8345fc01	                  add dword [rbp - 4], 1	      4381	mbyte.c	FUNCTION_87	FOR_1
0x3a94	          0x8b45fc	                mov eax, dword [rbp - 4]	      4381	mbyte.c	FUNCTION_87	FOR_1
0x3a97	            0x4898	                                    cdqe	      4381	mbyte.c	FUNCTION_87	FOR_1
0x3a99	        0x48c1e004	                              shl rax, 4	      4381	mbyte.c	FUNCTION_87	FOR_1
0x3a9d	    0x480500000000	                              add rax, 0	      4381	mbyte.c	FUNCTION_87	FOR_1
0x3aa3	          0x488b00	                    mov rax, qword [rax]	      4381	mbyte.c	FUNCTION_87	FOR_1
0x3aa6	          0x4885c0	                           test rax, rax	      4381	mbyte.c	FUNCTION_87	FOR_1
0x3aa9	            0x75ad	                           jne 0x4003a98	      4381	mbyte.c	FUNCTION_87	FOR_1
0x3aab	      0xb8ffffffff	                     mov eax, 0xffffffff	      4384	mbyte.c	FUNCTION_87
0x3ab0	              0xc9	                                   leave	      4385	mbyte.c	FUNCTION_87
0x3ab1	              0xc3	                                     ret	      4385	mbyte.c	FUNCTION_87
mb_get_class_buf	CALL,6:WHILE,0:functions,0:ELSE,0:IF,5:DO,0:SWITCH,0:FOR,0	77
0x89c	              0x55	                                push rbp	       886	mbyte.c	FUNCTION_8
0x89d	          0x4889e5	                            mov rbp, rsp	       886	mbyte.c	FUNCTION_8
0x8a0	        0x4883ec10	                           sub rsp, 0x10	       886	mbyte.c	FUNCTION_8
0x8a4	        0x48897df8	                mov qword [rbp - 8], rdi	       886	mbyte.c	FUNCTION_8
0x8a8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       886	mbyte.c	FUNCTION_8
0x8ac	        0x488b45f8	                mov rax, qword [rbp - 8]	       887	mbyte.c	FUNCTION_8	IF_1	CALL_1
0x8b0	           0xfb600	                   movzx eax, byte [rax]	       887	mbyte.c	FUNCTION_8	IF_1	CALL_1
0x8b3	           0xfb6c0	                           movzx eax, al	       887	mbyte.c	FUNCTION_8	IF_1	CALL_1
0x8b6	            0x4898	                                    cdqe	       887	mbyte.c	FUNCTION_8	IF_1	CALL_1
0x8b8	     0xfb680000000	                   movzx eax, byte [rax]	       887	mbyte.c	FUNCTION_8	IF_1	CALL_1
0x8bf	            0x3c01	                               cmp al, 1	       887	mbyte.c	FUNCTION_8	IF_1	CALL_1
0x8c1	            0x7555	                           jne 0x4000958	       887	mbyte.c	FUNCTION_8	IF_1	CALL_1
0x8c3	        0x488b45f8	                mov rax, qword [rbp - 8]	       889	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x8c7	           0xfb600	                   movzx eax, byte [rax]	       889	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x8ca	            0x84c0	                             test al, al	       889	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x8cc	            0x7416	                            je 0x4000924	       889	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x8ce	        0x488b45f8	                mov rax, qword [rbp - 8]	       889	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x8d2	           0xfb600	                   movzx eax, byte [rax]	       889	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x8d5	            0x3c20	                            cmp al, 0x20	       889	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x8d7	            0x740b	                            je 0x4000924	       889	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x8d9	        0x488b45f8	                mov rax, qword [rbp - 8]	       889	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x8dd	           0xfb600	                   movzx eax, byte [rax]	       889	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x8e0	            0x3c09	                               cmp al, 9	       889	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x8e2	            0x750a	                           jne 0x400092e	       889	mbyte.c	FUNCTION_8	IF_1	IF_2	CALL_2
0x8e4	      0xb800000000	                              mov eax, 0	       890	mbyte.c	FUNCTION_8	IF_1	IF_2
0x8e9	      0xe99e000000	                           jmp 0x40009cc	       890	mbyte.c	FUNCTION_8	IF_1	IF_2
0x8ee	        0x488b45f8	                mov rax, qword [rbp - 8]	       891	mbyte.c	FUNCTION_8	IF_1	IF_3	CALL_3
0x8f2	           0xfb600	                   movzx eax, byte [rax]	       891	mbyte.c	FUNCTION_8	IF_1	IF_3	CALL_3
0x8f5	           0xfb6c0	                           movzx eax, al	       891	mbyte.c	FUNCTION_8	IF_1	IF_3	CALL_3
0x8f8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       891	mbyte.c	FUNCTION_8	IF_1	IF_3	CALL_3
0x8fc	          0x4889d6	                            mov rsi, rdx	       891	mbyte.c	FUNCTION_8	IF_1	IF_3	CALL_3
0x8ff	            0x89c7	                            mov edi, eax	       891	mbyte.c	FUNCTION_8	IF_1	IF_3	CALL_3
0x901	      0xe800000000	                          call 0x4000946	       891	mbyte.c	FUNCTION_8	IF_1	IF_3	CALL_3
0x906	            0x85c0	                           test eax, eax	       891	mbyte.c	FUNCTION_8	IF_1	IF_3	CALL_3
0x908	            0x7407	                            je 0x4000951	       891	mbyte.c	FUNCTION_8	IF_1	IF_3	CALL_3
0x90a	      0xb802000000	                              mov eax, 2	       892	mbyte.c	FUNCTION_8	IF_1	IF_3
0x90f	            0xeb7b	                           jmp 0x40009cc	       892	mbyte.c	FUNCTION_8	IF_1	IF_3
0x911	      0xb801000000	                              mov eax, 1	       893	mbyte.c	FUNCTION_8	IF_1
0x916	            0xeb74	                           jmp 0x40009cc	       893	mbyte.c	FUNCTION_8	IF_1
0x918	    0x8b0500000000	            mov eax, dword [0x0400095e] 	       895	mbyte.c	FUNCTION_8	IF_4
0x91e	            0x85c0	                           test eax, eax	       895	mbyte.c	FUNCTION_8	IF_4
0x920	            0x743d	                            je 0x400099f	       895	mbyte.c	FUNCTION_8	IF_4
0x922	        0x488b45f8	                mov rax, qword [rbp - 8]	       895	mbyte.c	FUNCTION_8	IF_4
0x926	           0xfb600	                   movzx eax, byte [rax]	       895	mbyte.c	FUNCTION_8	IF_4
0x929	            0x84c0	                             test al, al	       895	mbyte.c	FUNCTION_8	IF_4
0x92b	            0x7432	                            je 0x400099f	       895	mbyte.c	FUNCTION_8	IF_4
0x92d	        0x488b45f8	                mov rax, qword [rbp - 8]	       895	mbyte.c	FUNCTION_8	IF_4
0x931	        0x4883c001	                              add rax, 1	       895	mbyte.c	FUNCTION_8	IF_4
0x935	           0xfb600	                   movzx eax, byte [rax]	       895	mbyte.c	FUNCTION_8	IF_4
0x938	            0x84c0	                             test al, al	       895	mbyte.c	FUNCTION_8	IF_4
0x93a	            0x7423	                            je 0x400099f	       895	mbyte.c	FUNCTION_8	IF_4
0x93c	        0x488b45f8	                mov rax, qword [rbp - 8]	       896	mbyte.c	FUNCTION_8	CALL_4
0x940	        0x4883c001	                              add rax, 1	       896	mbyte.c	FUNCTION_8	CALL_4
0x944	           0xfb600	                   movzx eax, byte [rax]	       896	mbyte.c	FUNCTION_8	CALL_4
0x947	           0xfb6d0	                           movzx edx, al	       896	mbyte.c	FUNCTION_8	CALL_4
0x94a	        0x488b45f8	                mov rax, qword [rbp - 8]	       896	mbyte.c	FUNCTION_8	CALL_4
0x94e	           0xfb600	                   movzx eax, byte [rax]	       896	mbyte.c	FUNCTION_8	CALL_4
0x951	           0xfb6c0	                           movzx eax, al	       896	mbyte.c	FUNCTION_8	CALL_4
0x954	            0x89d6	                            mov esi, edx	       896	mbyte.c	FUNCTION_8	CALL_4
0x956	            0x89c7	                            mov edi, eax	       896	mbyte.c	FUNCTION_8	CALL_4
0x958	      0xe800000000	                          call 0x400099d	       896	mbyte.c	FUNCTION_8	CALL_4
0x95d	            0xeb2d	                           jmp 0x40009cc	       896	mbyte.c	FUNCTION_8	CALL_4
0x95f	    0x8b0500000000	            mov eax, dword [0x040009a5] 	       897	mbyte.c	FUNCTION_8	IF_5
0x965	            0x85c0	                           test eax, eax	       897	mbyte.c	FUNCTION_8	IF_5
0x967	            0x741e	                            je 0x40009c7	       897	mbyte.c	FUNCTION_8	IF_5
0x969	        0x488b45f8	                mov rax, qword [rbp - 8]	       898	mbyte.c	FUNCTION_8	CALL_6
0x96d	          0x4889c7	                            mov rdi, rax	       898	mbyte.c	FUNCTION_8	CALL_6
0x970	      0xe800000000	                          call 0x40009b5	       898	mbyte.c	FUNCTION_8	CALL_6
0x975	            0x89c2	                            mov edx, eax	       898	mbyte.c	FUNCTION_8	CALL_6
0x977	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       898	mbyte.c	FUNCTION_8	CALL_6
0x97b	          0x4889c6	                            mov rsi, rax	       898	mbyte.c	FUNCTION_8	CALL_6
0x97e	            0x89d7	                            mov edi, edx	       898	mbyte.c	FUNCTION_8	CALL_6
0x980	      0xe800000000	                          call 0x40009c5	       898	mbyte.c	FUNCTION_8	CALL_6
0x985	            0xeb05	                           jmp 0x40009cc	       898	mbyte.c	FUNCTION_8	CALL_6
0x987	      0xb800000000	                              mov eax, 0	       899	mbyte.c	FUNCTION_8
0x98c	              0xc9	                                   leave	       900	mbyte.c	FUNCTION_8
0x98d	              0xc3	                                     ret	       900	mbyte.c	FUNCTION_8
utf_find_illegal	CALL,14:WHILE,1:functions,0:ELSE,1:IF,6:DO,0:SWITCH,0:FOR,2	163
0x2f5c	              0x55	                                push rbp	      3968	mbyte.c	FUNCTION_74
0x2f5d	          0x4889e5	                            mov rbp, rsp	      3968	mbyte.c	FUNCTION_74
0x2f60	              0x53	                                push rbx	      3968	mbyte.c	FUNCTION_74
0x2f61	        0x4883ec58	                           sub rsp, 0x58	      3968	mbyte.c	FUNCTION_74
0x2f65	    0x64488b042528	                mov rax, qword fs:[0x28]	      3968	mbyte.c	FUNCTION_74
0x2f6e	        0x488945e8	             mov qword [rbp - 0x18], rax	      3968	mbyte.c	FUNCTION_74
0x2f72	            0x31c0	                            xor eax, eax	      3968	mbyte.c	FUNCTION_74
0x2f74	    0x488b05000000	            mov rax, qword [0x04002fbb] 	      3969	mbyte.c	FUNCTION_74
0x2f7b	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3969	mbyte.c	FUNCTION_74
0x2f7f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3969	mbyte.c	FUNCTION_74
0x2f83	        0x488945c0	             mov qword [rbp - 0x40], rax	      3969	mbyte.c	FUNCTION_74
0x2f87	        0x488955c8	             mov qword [rbp - 0x38], rdx	      3969	mbyte.c	FUNCTION_74
0x2f8b	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      3973	mbyte.c	FUNCTION_74
0x2f93	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      3975	mbyte.c	FUNCTION_74
0x2f9a	    0x8b0500000000	            mov eax, dword [0x04002fe0] 	      3976	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x2fa0	            0x85c0	                           test eax, eax	      3976	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x2fa2	            0x7441	                            je 0x4003025	      3976	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x2fa4	    0x488b05000000	            mov rax, qword [0x04002feb] 	      3976	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x2fab	    0x488b80701400	          mov rax, qword [rax + 0x1470] 	      3976	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x2fb2	          0x4889c7	                            mov rdi, rax	      3976	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x2fb5	      0xe800000000	                          call 0x4002ffa	      3976	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x2fba	          0x83e001	                              and eax, 1	      3976	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x2fbd	            0x85c0	                           test eax, eax	      3976	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x2fbf	            0x7424	                            je 0x4003025	      3976	mbyte.c	FUNCTION_74	IF_1	CALL_1
0x2fc1	    0x488b05000000	            mov rax, qword [0x04003008] 	      3981	mbyte.c	FUNCTION_74	IF_1	CALL_2
0x2fc8	    0x488b90701400	          mov rdx, qword [rax + 0x1470] 	      3981	mbyte.c	FUNCTION_74	IF_1	CALL_2
0x2fcf	    0x488b0d000000	            mov rcx, qword [0x04003016] 	      3981	mbyte.c	FUNCTION_74	IF_1	CALL_2
0x2fd6	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3981	mbyte.c	FUNCTION_74	IF_1	CALL_2
0x2fda	          0x4889ce	                            mov rsi, rcx	      3981	mbyte.c	FUNCTION_74	IF_1	CALL_2
0x2fdd	          0x4889c7	                            mov rdi, rax	      3981	mbyte.c	FUNCTION_74	IF_1	CALL_2
0x2fe0	      0xe800000000	                          call 0x4003025	      3981	mbyte.c	FUNCTION_74	IF_1	CALL_2
0x2fe5	    0x488b05000000	            mov rax, qword [0x0400302c] 	      3985	mbyte.c	FUNCTION_74
0x2fec	    0xc74044000000	               mov dword [rax + 0x44], 0	      3985	mbyte.c	FUNCTION_74
0x2ff3	      0xe800000000	                          call 0x4003038	      3989	mbyte.c	FUNCTION_74	FOR_1	CALL_3
0x2ff8	        0x488945b0	             mov qword [rbp - 0x50], rax	      3989	mbyte.c	FUNCTION_74	FOR_1	CALL_3
0x2ffc	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      3990	mbyte.c	FUNCTION_74	FOR_1	IF_2
0x2fff	            0x85c0	                           test eax, eax	      3990	mbyte.c	FUNCTION_74	FOR_1	IF_2
0x3001	     0xf8427010000	                            je 0x400316e	      3990	mbyte.c	FUNCTION_74	FOR_1	IF_2
0x3007	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3992	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_4
0x300b	          0x4889c7	                            mov rdi, rax	      3992	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_4
0x300e	      0xe800000000	                          call 0x4003053	      3992	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_4
0x3013	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      3993	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_5
0x3017	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3993	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_5
0x301b	      0xba00000000	                              mov edx, 0	      3993	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_5
0x3020	          0x4889ce	                            mov rsi, rcx	      3993	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_5
0x3023	          0x4889c7	                            mov rdi, rax	      3993	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_5
0x3026	      0xe800000000	                          call 0x400306b	      3993	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_5
0x302b	        0x488945b8	             mov qword [rbp - 0x48], rax	      3993	mbyte.c	FUNCTION_74	FOR_1	IF_2	CALL_5
0x302f	      0x48837db800	               cmp qword [rbp - 0x48], 0	      3994	mbyte.c	FUNCTION_74	FOR_1	IF_2	IF_3
0x3034	     0xf8443010000	                            je 0x40031bd	      3994	mbyte.c	FUNCTION_74	FOR_1	IF_2	IF_3
0x303a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3996	mbyte.c	FUNCTION_74	FOR_1	IF_2
0x303e	        0x488945b0	             mov qword [rbp - 0x50], rax	      3996	mbyte.c	FUNCTION_74	FOR_1	IF_2
0x3042	      0xe9e7000000	                           jmp 0x400316e	      3999	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x3047	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4003	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	CALL_6
0x304b	          0x4889c7	                            mov rdi, rax	      4003	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	CALL_6
0x304e	      0xe800000000	                          call 0x4003093	      4003	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	CALL_6
0x3053	          0x8945a8	             mov dword [rbp - 0x58], eax	      4003	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	CALL_6
0x3056	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4004	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x305a	           0xfb600	                   movzx eax, byte [rax]	      4004	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x305d	            0x84c0	                             test al, al	      4004	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x305f	     0xf89c0000000	                           jns 0x4003165	      4004	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x3065	        0x837da801	               cmp dword [rbp - 0x58], 1	      4004	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x3069	            0x741c	                            je 0x40030c7	      4004	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x306b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4005	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x306f	          0x4889c7	                            mov rdi, rax	      4005	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x3072	      0xe800000000	                          call 0x40030b7	      4005	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x3077	            0x89c7	                            mov edi, eax	      4005	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x3079	      0xe800000000	                          call 0x40030be	      4005	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x307e	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	      4005	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x3081	     0xf849e000000	                            je 0x4003165	      4005	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_8
0x3087	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      4007	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	IF_5
0x308a	            0x85c0	                           test eax, eax	      4007	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	IF_5
0x308c	            0x752c	                           jne 0x40030fa	      4007	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	IF_5
0x308e	        0x488b5db0	             mov rbx, qword [rbp - 0x50]	      4008	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x3092	      0xe800000000	                          call 0x40030d7	      4008	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x3097	          0x4829c3	                            sub rbx, rax	      4008	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x309a	          0x4889d8	                            mov rax, rbx	      4008	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x309d	            0x89c1	                            mov ecx, eax	      4008	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x309f	    0x488b05000000	            mov rax, qword [0x040030e6] 	      4008	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x30a6	    0x488b15000000	            mov rdx, qword [0x040030ed] 	      4008	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x30ad	          0x8b5240	            mov edx, dword [rdx + 0x40] 	      4008	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x30b0	             0x1ca	                            add edx, ecx	      4008	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x30b2	          0x895040	             mov dword [rax + 0x40], edx	      4008	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	CALL_9
0x30b5	      0xe9e5000000	                           jmp 0x40031df	      4020	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x30ba	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	      4013	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1
0x30be	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4013	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1
0x30c2	          0x4829c2	                            sub rdx, rax	      4013	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1
0x30c5	          0x4889d0	                            mov rax, rdx	      4013	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1
0x30c8	          0x8945a8	             mov dword [rbp - 0x58], eax	      4013	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1
0x30cb	      0xe800000000	                          call 0x4003110	      4014	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x30d0	        0x488945b0	             mov qword [rbp - 0x50], rax	      4014	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x30d4	            0xeb31	                           jmp 0x4003147	      4014	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x30d6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4016	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_11
0x30da	          0x4889c7	                            mov rdi, rax	      4016	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_11
0x30dd	      0xe800000000	                          call 0x4003122	      4016	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_11
0x30e2	          0x8945ac	             mov dword [rbp - 0x54], eax	      4016	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_11
0x30e5	    0x488b05000000	            mov rax, qword [0x0400312c] 	      4017	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2
0x30ec	    0x488b15000000	            mov rdx, qword [0x04003133] 	      4017	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2
0x30f3	          0x8b4a40	            mov ecx, dword [rdx + 0x40] 	      4017	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2
0x30f6	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      4017	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2
0x30f9	             0x1ca	                            add edx, ecx	      4017	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2
0x30fb	          0x895040	             mov dword [rax + 0x40], edx	      4017	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2
0x30fe	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4014	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x3101	            0x4898	                                    cdqe	      4014	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x3103	        0x480145b0	            add qword [rbp - 0x50], rax 	      4014	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x3107	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4014	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x310b	           0xfb600	                   movzx eax, byte [rax]	      4014	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x310e	            0x84c0	                             test al, al	      4014	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x3110	     0xf8489000000	                            je 0x40031df	      4014	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x3116	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      4014	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x3119	          0x8d50ff	                      lea edx, [rax - 1]	      4014	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x311c	          0x8955a8	             mov dword [rbp - 0x58], edx	      4014	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x311f	            0x85c0	                           test eax, eax	      4014	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x3121	            0x7fb3	                            jg 0x4003116	      4014	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4	ELSE_1	FOR_2	CALL_10
0x3123	            0xeb7a	                           jmp 0x40031df	      4020	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x3125	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      4022	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x3128	            0x4898	                                    cdqe	      4022	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x312a	        0x480145b0	            add qword [rbp - 0x50], rax 	      4022	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x312e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3999	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x3132	           0xfb600	                   movzx eax, byte [rax]	      3999	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x3135	            0x84c0	                             test al, al	      3999	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x3137	     0xf850affffff	                           jne 0x4003087	      3999	mbyte.c	FUNCTION_74	FOR_1	WHILE_1
0x313d	    0x488b05000000	            mov rax, qword [0x04003184] 	      4024	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x3144	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4024	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x3148	    0x488b05000000	            mov rax, qword [0x0400318f] 	      4024	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x314f	          0x488b00	                    mov rax, qword [rax]	      4024	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x3152	          0x4839c2	                            cmp rdx, rax	      4024	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x3155	            0x7429	                            je 0x40031c0	      4024	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x3157	    0x488b05000000	            mov rax, qword [0x0400319e] 	      4026	mbyte.c	FUNCTION_74	FOR_1
0x315e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4026	mbyte.c	FUNCTION_74	FOR_1
0x3162	        0x4883c201	                              add rdx, 1	      4026	mbyte.c	FUNCTION_74	FOR_1
0x3166	        0x48895038	             mov qword [rax + 0x38], rdx	      4026	mbyte.c	FUNCTION_74	FOR_1
0x316a	    0x488b05000000	            mov rax, qword [0x040031b1] 	      4027	mbyte.c	FUNCTION_74	FOR_1
0x3171	    0xc74040000000	               mov dword [rax + 0x40], 0	      4027	mbyte.c	FUNCTION_74	FOR_1
0x3178	      0xe976feffff	                           jmp 0x4003033	      4028	mbyte.c	FUNCTION_74	FOR_1
0x317d	              0x90	                                     nop	      3995	mbyte.c	FUNCTION_74	FOR_1	IF_2	IF_3
0x317e	            0xeb01	                           jmp 0x40031c1	      3995	mbyte.c	FUNCTION_74	FOR_1	IF_2	IF_3
0x3180	              0x90	                                     nop	      4025	mbyte.c	FUNCTION_74	FOR_1	IF_6
0x3181	    0x488b0d000000	            mov rcx, qword [0x040031c8] 	      4031	mbyte.c	FUNCTION_74
0x3188	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4031	mbyte.c	FUNCTION_74
0x318c	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4031	mbyte.c	FUNCTION_74
0x3190	        0x48894138	             mov qword [rcx + 0x38], rax	      4031	mbyte.c	FUNCTION_74
0x3194	        0x48895140	             mov qword [rcx + 0x40], rdx	      4031	mbyte.c	FUNCTION_74
0x3198	      0xe800000000	                          call 0x40031dd	      4032	mbyte.c	FUNCTION_74	CALL_12
0x319d	            0xeb01	                           jmp 0x40031e0	      4032	mbyte.c	FUNCTION_74	CALL_12
0x319f	              0x90	                                     nop	      4020	mbyte.c	FUNCTION_74	FOR_1	WHILE_1	IF_4
0x31a0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4035	mbyte.c	FUNCTION_74	CALL_13
0x31a4	          0x4889c7	                            mov rdi, rax	      4035	mbyte.c	FUNCTION_74	CALL_13
0x31a7	      0xe800000000	                          call 0x40031ec	      4035	mbyte.c	FUNCTION_74	CALL_13
0x31ac	        0x488d45d0	                   lea rax, [rbp - 0x30]	      4036	mbyte.c	FUNCTION_74	CALL_14
0x31b0	      0xba00000000	                              mov edx, 0	      4036	mbyte.c	FUNCTION_74	CALL_14
0x31b5	      0xbe00000000	                              mov esi, 0	      4036	mbyte.c	FUNCTION_74	CALL_14
0x31ba	          0x4889c7	                            mov rdi, rax	      4036	mbyte.c	FUNCTION_74	CALL_14
0x31bd	      0xe800000000	                          call 0x4003202	      4036	mbyte.c	FUNCTION_74	CALL_14
0x31c2	              0x90	                                     nop	      4037	mbyte.c	FUNCTION_74
0x31c3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4037	mbyte.c	FUNCTION_74
0x31c7	    0x644833042528	                xor rax, qword fs:[0x28]	      4037	mbyte.c	FUNCTION_74
0x31d0	            0x7405	                            je 0x4003217	      4037	mbyte.c	FUNCTION_74
0x31d2	      0xe800000000	                          call 0x4003217	      4037	mbyte.c	FUNCTION_74
0x31d7	        0x4883c458	                           add rsp, 0x58	      4037	mbyte.c	FUNCTION_74
0x31db	              0x5b	                                 pop rbx	      4037	mbyte.c	FUNCTION_74
0x31dc	              0x5d	                                 pop rbp	      4037	mbyte.c	FUNCTION_74
0x31dd	              0xc3	                                     ret	      4037	mbyte.c	FUNCTION_74
utf_char2len	CALL,0:WHILE,0:functions,0:ELSE,0:IF,5:DO,0:SWITCH,0:FOR,0	26
0x1e07	              0x55	                                push rbp	      2245	mbyte.c	FUNCTION_50
0x1e08	          0x4889e5	                            mov rbp, rsp	      2245	mbyte.c	FUNCTION_50
0x1e0b	          0x897dfc	                mov dword [rbp - 4], edi	      2245	mbyte.c	FUNCTION_50
0x1e0e	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      2246	mbyte.c	FUNCTION_50	IF_1
0x1e12	            0x7f07	                            jg 0x4001e5b	      2246	mbyte.c	FUNCTION_50	IF_1
0x1e14	      0xb801000000	                              mov eax, 1	      2247	mbyte.c	FUNCTION_50	IF_1
0x1e19	            0xeb45	                           jmp 0x4001ea0	      2247	mbyte.c	FUNCTION_50	IF_1
0x1e1b	    0x817dfcff0700	              cmp dword [rbp - 4], 0x7ff	      2248	mbyte.c	FUNCTION_50	IF_2
0x1e22	            0x7f07	                            jg 0x4001e6b	      2248	mbyte.c	FUNCTION_50	IF_2
0x1e24	      0xb802000000	                              mov eax, 2	      2249	mbyte.c	FUNCTION_50	IF_2
0x1e29	            0xeb35	                           jmp 0x4001ea0	      2249	mbyte.c	FUNCTION_50	IF_2
0x1e2b	    0x817dfcffff00	            cmp dword [rbp - 4], 0xffff 	      2250	mbyte.c	FUNCTION_50	IF_3
0x1e32	            0x7f07	                            jg 0x4001e7b	      2250	mbyte.c	FUNCTION_50	IF_3
0x1e34	      0xb803000000	                              mov eax, 3	      2251	mbyte.c	FUNCTION_50	IF_3
0x1e39	            0xeb25	                           jmp 0x4001ea0	      2251	mbyte.c	FUNCTION_50	IF_3
0x1e3b	    0x817dfcffff1f	          cmp dword [rbp - 4], 0x1fffff 	      2252	mbyte.c	FUNCTION_50	IF_4
0x1e42	            0x7f07	                            jg 0x4001e8b	      2252	mbyte.c	FUNCTION_50	IF_4
0x1e44	      0xb804000000	                              mov eax, 4	      2253	mbyte.c	FUNCTION_50	IF_4
0x1e49	            0xeb15	                           jmp 0x4001ea0	      2253	mbyte.c	FUNCTION_50	IF_4
0x1e4b	    0x817dfcffffff	         cmp dword [rbp - 4], 0x3ffffff 	      2254	mbyte.c	FUNCTION_50	IF_5
0x1e52	            0x7f07	                            jg 0x4001e9b	      2254	mbyte.c	FUNCTION_50	IF_5
0x1e54	      0xb805000000	                              mov eax, 5	      2255	mbyte.c	FUNCTION_50	IF_5
0x1e59	            0xeb05	                           jmp 0x4001ea0	      2255	mbyte.c	FUNCTION_50	IF_5
0x1e5b	      0xb806000000	                              mov eax, 6	      2256	mbyte.c	FUNCTION_50
0x1e60	              0x5d	                                 pop rbp	      2257	mbyte.c	FUNCTION_50
0x1e61	              0xc3	                                     ret	      2257	mbyte.c	FUNCTION_50
arabic_maycombine	CALL,0:WHILE,0:functions,0:ELSE,0:IF,1:DO,0:SWITCH,0:FOR,0	24
0x16fa	              0x55	                                push rbp	      1940	mbyte.c	FUNCTION_40
0x16fb	          0x4889e5	                            mov rbp, rsp	      1940	mbyte.c	FUNCTION_40
0x16fe	          0x897dfc	                mov dword [rbp - 4], edi	      1940	mbyte.c	FUNCTION_40
0x1701	    0x8b0500000000	            mov eax, dword [0x04001747] 	      1941	mbyte.c	FUNCTION_40	IF_1
0x1707	            0x85c0	                           test eax, eax	      1941	mbyte.c	FUNCTION_40	IF_1
0x1709	            0x743c	                            je 0x4001787	      1941	mbyte.c	FUNCTION_40	IF_1
0x170b	    0x8b0500000000	            mov eax, dword [0x04001751] 	      1941	mbyte.c	FUNCTION_40	IF_1
0x1711	            0x85c0	                           test eax, eax	      1941	mbyte.c	FUNCTION_40	IF_1
0x1713	            0x7532	                           jne 0x4001787	      1941	mbyte.c	FUNCTION_40	IF_1
0x1715	    0x817dfc220600	              cmp dword [rbp - 4], 0x622	      1945	mbyte.c	FUNCTION_40	IF_1
0x171c	            0x741b	                            je 0x4001779	      1945	mbyte.c	FUNCTION_40	IF_1
0x171e	    0x817dfc230600	              cmp dword [rbp - 4], 0x623	      1943	mbyte.c	FUNCTION_40	IF_1
0x1725	            0x7412	                            je 0x4001779	      1943	mbyte.c	FUNCTION_40	IF_1
0x1727	    0x817dfc250600	              cmp dword [rbp - 4], 0x625	      1944	mbyte.c	FUNCTION_40	IF_1
0x172e	            0x7409	                            je 0x4001779	      1944	mbyte.c	FUNCTION_40	IF_1
0x1730	    0x817dfc270600	              cmp dword [rbp - 4], 0x627	      1945	mbyte.c	FUNCTION_40	IF_1
0x1737	            0x7507	                           jne 0x4001780	      1945	mbyte.c	FUNCTION_40	IF_1
0x1739	      0xb801000000	                              mov eax, 1	      1945	mbyte.c	FUNCTION_40	IF_1
0x173e	            0xeb0c	                           jmp 0x400178c	      1942	mbyte.c	FUNCTION_40	IF_1
0x1740	      0xb800000000	                              mov eax, 0	      1945	mbyte.c	FUNCTION_40	IF_1
0x1745	            0xeb05	                           jmp 0x400178c	      1942	mbyte.c	FUNCTION_40	IF_1
0x1747	      0xb800000000	                              mov eax, 0	      1946	mbyte.c	FUNCTION_40
0x174c	              0x5d	                                 pop rbp	      1947	mbyte.c	FUNCTION_40
0x174d	              0xc3	                                     ret	      1947	mbyte.c	FUNCTION_40
mb_prevptr	CALL,1:WHILE,0:functions,0:ELSE,0:IF,1:DO,0:SWITCH,0:FOR,0	27
0x32fc	              0x55	                                push rbp	      4135	mbyte.c	FUNCTION_79
0x32fd	          0x4889e5	                            mov rbp, rsp	      4135	mbyte.c	FUNCTION_79
0x3300	        0x4883ec10	                           sub rsp, 0x10	      4135	mbyte.c	FUNCTION_79
0x3304	        0x48897df8	                mov qword [rbp - 8], rdi	      4135	mbyte.c	FUNCTION_79
0x3308	        0x488975f0	             mov qword [rbp - 0x10], rsi	      4135	mbyte.c	FUNCTION_79
0x330c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4136	mbyte.c	FUNCTION_79	IF_1
0x3310	        0x483b45f8	                cmp rax, qword [rbp - 8]	      4136	mbyte.c	FUNCTION_79	IF_1
0x3314	            0x7638	                           jbe 0x400338e	      4136	mbyte.c	FUNCTION_79	IF_1
0x3316	    0x8b0500000000	            mov eax, dword [0x0400335c] 	      4137	mbyte.c	FUNCTION_79	CALL_1
0x331c	            0x85c0	                           test eax, eax	      4137	mbyte.c	FUNCTION_79	CALL_1
0x331e	            0x7420	                            je 0x4003380	      4137	mbyte.c	FUNCTION_79	CALL_1
0x3320	    0x488b05000000	            mov rax, qword [0x04003367] 	      4137	mbyte.c	FUNCTION_79	CALL_1
0x3327	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      4137	mbyte.c	FUNCTION_79	CALL_1
0x332b	        0x488d4aff	                      lea rcx, [rdx - 1]	      4137	mbyte.c	FUNCTION_79	CALL_1
0x332f	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4137	mbyte.c	FUNCTION_79	CALL_1
0x3333	          0x4889ce	                            mov rsi, rcx	      4137	mbyte.c	FUNCTION_79	CALL_1
0x3336	          0x4889d7	                            mov rdi, rdx	      4137	mbyte.c	FUNCTION_79	CALL_1
0x3339	            0xffd0	                                call rax	      4137	mbyte.c	FUNCTION_79	CALL_1
0x333b	          0x83c001	                              add eax, 1	      4137	mbyte.c	FUNCTION_79	CALL_1
0x333e	            0xeb05	                           jmp 0x4003385	      4137	mbyte.c	FUNCTION_79	CALL_1
0x3340	      0xb801000000	                              mov eax, 1	      4137	mbyte.c	FUNCTION_79	CALL_1
0x3345	            0x4898	                                    cdqe	      4137	mbyte.c	FUNCTION_79	CALL_1
0x3347	          0x48f7d8	                                 neg rax	      4137	mbyte.c	FUNCTION_79	CALL_1
0x334a	        0x480145f0	            add qword [rbp - 0x10], rax 	      4137	mbyte.c	FUNCTION_79	CALL_1
0x334e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4138	mbyte.c	FUNCTION_79
0x3352	              0xc9	                                   leave	      4139	mbyte.c	FUNCTION_79
0x3353	              0xc3	                                     ret	      4139	mbyte.c	FUNCTION_79
dbcs_ptr2cells	CALL,1:WHILE,0:functions,0:ELSE,0:IF,1:DO,0:SWITCH,0:FOR,0	20
0xf28	              0x55	                                push rbp	      1646	mbyte.c	FUNCTION_23
0xf29	          0x4889e5	                            mov rbp, rsp	      1646	mbyte.c	FUNCTION_23
0xf2c	        0x48897df8	                mov qword [rbp - 8], rdi	      1646	mbyte.c	FUNCTION_23
0xf30	    0x8b0500000000	            mov eax, dword [0x04000f76] 	      1649	mbyte.c	FUNCTION_23	IF_1
0xf36	      0x3dcc260000	                         cmp eax, 0x26cc	      1649	mbyte.c	FUNCTION_23	IF_1
0xf3b	            0x7512	                           jne 0x4000f8f	      1649	mbyte.c	FUNCTION_23	IF_1
0xf3d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1649	mbyte.c	FUNCTION_23	IF_1
0xf41	           0xfb600	                   movzx eax, byte [rax]	      1649	mbyte.c	FUNCTION_23	IF_1
0xf44	            0x3c8e	                            cmp al, 0x8e	      1649	mbyte.c	FUNCTION_23	IF_1
0xf46	            0x7507	                           jne 0x4000f8f	      1649	mbyte.c	FUNCTION_23	IF_1
0xf48	      0xb801000000	                              mov eax, 1	      1650	mbyte.c	FUNCTION_23	IF_1
0xf4d	            0xeb16	                           jmp 0x4000fa5	      1650	mbyte.c	FUNCTION_23	IF_1
0xf4f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1651	mbyte.c	FUNCTION_23	CALL_1
0xf53	           0xfb600	                   movzx eax, byte [rax]	      1651	mbyte.c	FUNCTION_23	CALL_1
0xf56	           0xfb6c0	                           movzx eax, al	      1651	mbyte.c	FUNCTION_23	CALL_1
0xf59	            0x4898	                                    cdqe	      1651	mbyte.c	FUNCTION_23	CALL_1
0xf5b	     0xfb680000000	                   movzx eax, byte [rax]	      1651	mbyte.c	FUNCTION_23	CALL_1
0xf62	           0xfbec0	                           movsx eax, al	      1651	mbyte.c	FUNCTION_23	CALL_1
0xf65	              0x5d	                                 pop rbp	      1652	mbyte.c	FUNCTION_23
0xf66	              0xc3	                                     ret	      1652	mbyte.c	FUNCTION_23
utf_char2cells	CALL,6:WHILE,0:functions,0:ELSE,1:IF,8:DO,0:SWITCH,0:FOR,0	61
0xde5	              0x55	                                push rbp	      1420	mbyte.c	FUNCTION_20
0xde6	          0x4889e5	                            mov rbp, rsp	      1420	mbyte.c	FUNCTION_20
0xde9	        0x4883ec10	                           sub rsp, 0x10	      1420	mbyte.c	FUNCTION_20
0xded	          0x897dfc	                mov dword [rbp - 4], edi	      1420	mbyte.c	FUNCTION_20
0xdf0	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	      1579	mbyte.c	FUNCTION_20	IF_1
0xdf7	            0x7e62	                           jle 0x4000e9b	      1579	mbyte.c	FUNCTION_20	IF_1
0xdf9	          0x8b45fc	                mov eax, dword [rbp - 4]	      1593	mbyte.c	FUNCTION_20	IF_1	IF_4	CALL_2
0xdfc	            0x89c7	                            mov edi, eax	      1593	mbyte.c	FUNCTION_20	IF_1	IF_4	CALL_2
0xdfe	      0xe800000000	                          call 0x4000e43	      1593	mbyte.c	FUNCTION_20	IF_1	IF_4	CALL_2
0xe03	            0x85c0	                           test eax, eax	      1593	mbyte.c	FUNCTION_20	IF_1	IF_4	CALL_2
0xe05	            0x750a	                           jne 0x4000e51	      1593	mbyte.c	FUNCTION_20	IF_1	IF_4	CALL_2
0xe07	      0xb806000000	                              mov eax, 6	      1594	mbyte.c	FUNCTION_20	IF_1	IF_4
0xe0c	      0xe99d000000	                           jmp 0x4000eee	      1594	mbyte.c	FUNCTION_20	IF_1	IF_4
0xe11	          0x8b45fc	                mov eax, dword [rbp - 4]	      1595	mbyte.c	FUNCTION_20	IF_1	IF_5	CALL_3
0xe14	            0x89c2	                            mov edx, eax	      1595	mbyte.c	FUNCTION_20	IF_1	IF_5	CALL_3
0xe16	      0xbea0060000	                          mov esi, 0x6a0	      1595	mbyte.c	FUNCTION_20	IF_1	IF_5	CALL_3
0xe1b	      0xbf00000000	                              mov edi, 0	      1595	mbyte.c	FUNCTION_20	IF_1	IF_5	CALL_3
0xe20	      0xe8c8feffff	                        call sym.intable	      1595	mbyte.c	FUNCTION_20	IF_1	IF_5	CALL_3
0xe25	            0x85c0	                           test eax, eax	      1595	mbyte.c	FUNCTION_20	IF_1	IF_5	CALL_3
0xe27	            0x7407	                            je 0x4000e70	      1595	mbyte.c	FUNCTION_20	IF_1	IF_5	CALL_3
0xe29	      0xb802000000	                              mov eax, 2	      1596	mbyte.c	FUNCTION_20	IF_1	IF_5
0xe2e	            0xeb7e	                           jmp 0x4000eee	      1596	mbyte.c	FUNCTION_20	IF_1	IF_5
0xe30	    0x488b05000000	            mov rax, qword [0x04000e77] 	      1598	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0xe37	          0x4885c0	                           test rax, rax	      1598	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0xe3a	            0x743a	                            je 0x4000eb6	      1598	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0xe3c	          0x8b45fc	                mov eax, dword [rbp - 4]	      1598	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0xe3f	            0x89c2	                            mov edx, eax	      1598	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0xe41	      0xbe70020000	                          mov esi, 0x270	      1598	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0xe46	      0xbf00000000	                              mov edi, 0	      1598	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0xe4b	      0xe89dfeffff	                        call sym.intable	      1598	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0xe50	            0x85c0	                           test eax, eax	      1598	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0xe52	            0x7422	                            je 0x4000eb6	      1598	mbyte.c	FUNCTION_20	IF_1	IF_6	CALL_4
0xe54	      0xb802000000	                              mov eax, 2	      1599	mbyte.c	FUNCTION_20	IF_1	IF_6
0xe59	            0xeb53	                           jmp 0x4000eee	      1599	mbyte.c	FUNCTION_20	IF_1	IF_6
0xe5b	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      1603	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0xe5f	            0x7e15	                           jle 0x4000eb6	      1603	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0xe61	          0x8b45fc	                mov eax, dword [rbp - 4]	      1603	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0xe64	            0x89c7	                            mov edi, eax	      1603	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0xe66	      0xe800000000	                          call 0x4000eab	      1603	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0xe6b	            0x85c0	                           test eax, eax	      1603	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0xe6d	            0x7507	                           jne 0x4000eb6	      1603	mbyte.c	FUNCTION_20	ELSE_1	IF_7	CALL_5
0xe6f	      0xb804000000	                              mov eax, 4	      1604	mbyte.c	FUNCTION_20	ELSE_1	IF_7
0xe74	            0xeb38	                           jmp 0x4000eee	      1604	mbyte.c	FUNCTION_20	ELSE_1	IF_7
0xe76	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      1606	mbyte.c	FUNCTION_20	IF_8	CALL_6
0xe7a	            0x7e2d	                           jle 0x4000ee9	      1606	mbyte.c	FUNCTION_20	IF_8	CALL_6
0xe7c	    0x488b05000000	            mov rax, qword [0x04000ec3] 	      1606	mbyte.c	FUNCTION_20	IF_8	CALL_6
0xe83	           0xfb600	                   movzx eax, byte [rax]	      1606	mbyte.c	FUNCTION_20	IF_8	CALL_6
0xe86	            0x3c64	                            cmp al, 0x64	      1606	mbyte.c	FUNCTION_20	IF_8	CALL_6
0xe88	            0x751f	                           jne 0x4000ee9	      1606	mbyte.c	FUNCTION_20	IF_8	CALL_6
0xe8a	          0x8b45fc	                mov eax, dword [rbp - 4]	      1606	mbyte.c	FUNCTION_20	IF_8	CALL_6
0xe8d	            0x89c2	                            mov edx, eax	      1606	mbyte.c	FUNCTION_20	IF_8	CALL_6
0xe8f	      0xbe300b0000	                          mov esi, 0xb30	      1606	mbyte.c	FUNCTION_20	IF_8	CALL_6
0xe94	      0xbf00000000	                              mov edi, 0	      1606	mbyte.c	FUNCTION_20	IF_8	CALL_6
0xe99	      0xe84ffeffff	                        call sym.intable	      1606	mbyte.c	FUNCTION_20	IF_8	CALL_6
0xe9e	            0x85c0	                           test eax, eax	      1606	mbyte.c	FUNCTION_20	IF_8	CALL_6
0xea0	            0x7407	                            je 0x4000ee9	      1606	mbyte.c	FUNCTION_20	IF_8	CALL_6
0xea2	      0xb802000000	                              mov eax, 2	      1607	mbyte.c	FUNCTION_20	IF_8
0xea7	            0xeb05	                           jmp 0x4000eee	      1607	mbyte.c	FUNCTION_20	IF_8
0xea9	      0xb801000000	                              mov eax, 1	      1609	mbyte.c	FUNCTION_20
0xeae	              0xc9	                                   leave	      1610	mbyte.c	FUNCTION_20
0xeaf	              0xc3	                                     ret	      1610	mbyte.c	FUNCTION_20
utf_iscomposing_uint	CALL,1:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	9
0x205e	              0x55	                                push rbp	      2318	mbyte.c	FUNCTION_52
0x205f	          0x4889e5	                            mov rbp, rsp	      2318	mbyte.c	FUNCTION_52
0x2062	        0x4883ec10	                           sub rsp, 0x10	      2318	mbyte.c	FUNCTION_52
0x2066	          0x897dfc	                mov dword [rbp - 4], edi	      2318	mbyte.c	FUNCTION_52
0x2069	          0x8b45fc	                mov eax, dword [rbp - 4]	      2319	mbyte.c	FUNCTION_52	CALL_1
0x206c	            0x89c7	                            mov edi, eax	      2319	mbyte.c	FUNCTION_52	CALL_1
0x206e	      0xe800000000	                          call 0x40020b3	      2319	mbyte.c	FUNCTION_52	CALL_1
0x2073	              0xc9	                                   leave	      2320	mbyte.c	FUNCTION_52
0x2074	              0xc3	                                     ret	      2320	mbyte.c	FUNCTION_52
utfc_ptr2char	CALL,7:WHILE,0:functions,0:ELSE,0:IF,4:DO,0:SWITCH,0:FOR,1	94
0x17b3	              0x55	                                push rbp	      1976	mbyte.c	FUNCTION_42
0x17b4	          0x4889e5	                            mov rbp, rsp	      1976	mbyte.c	FUNCTION_42
0x17b7	        0x4883ec20	                           sub rsp, 0x20	      1976	mbyte.c	FUNCTION_42
0x17bb	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1976	mbyte.c	FUNCTION_42
0x17bf	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1976	mbyte.c	FUNCTION_42
0x17c3	    0xc745f8000000	                  mov dword [rbp - 8], 0	      1980	mbyte.c	FUNCTION_42
0x17ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1982	mbyte.c	FUNCTION_42	CALL_1
0x17ce	          0x4889c7	                            mov rdi, rax	      1982	mbyte.c	FUNCTION_42	CALL_1
0x17d1	      0xe800000000	                          call 0x4001816	      1982	mbyte.c	FUNCTION_42	CALL_1
0x17d6	          0x8945fc	                mov dword [rbp - 4], eax	      1982	mbyte.c	FUNCTION_42	CALL_1
0x17d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1983	mbyte.c	FUNCTION_42	CALL_2
0x17dd	          0x4889c7	                            mov rdi, rax	      1983	mbyte.c	FUNCTION_42	CALL_2
0x17e0	      0xe800000000	                          call 0x4001825	      1983	mbyte.c	FUNCTION_42	CALL_2
0x17e5	          0x8945f0	             mov dword [rbp - 0x10], eax	      1983	mbyte.c	FUNCTION_42	CALL_2
0x17e8	        0x837df001	               cmp dword [rbp - 0x10], 1	      1986	mbyte.c	FUNCTION_42	IF_1
0x17ec	            0x7f0f	                            jg 0x400183d	      1986	mbyte.c	FUNCTION_42	IF_1
0x17ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1986	mbyte.c	FUNCTION_42	IF_1
0x17f2	           0xfb600	                   movzx eax, byte [rax]	      1986	mbyte.c	FUNCTION_42	IF_1
0x17f5	            0x84c0	                             test al, al	      1986	mbyte.c	FUNCTION_42	IF_1
0x17f7	     0xf88ce000000	                            js 0x400190b	      1986	mbyte.c	FUNCTION_42	IF_1
0x17fd	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1987	mbyte.c	FUNCTION_42	IF_1
0x1800	          0x4863d0	                         movsxd rdx, eax	      1987	mbyte.c	FUNCTION_42	IF_1
0x1803	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1987	mbyte.c	FUNCTION_42	IF_1
0x1807	          0x4801d0	                            add rax, rdx	      1987	mbyte.c	FUNCTION_42	IF_1
0x180a	           0xfb600	                   movzx eax, byte [rax]	      1987	mbyte.c	FUNCTION_42	IF_1
0x180d	            0x84c0	                             test al, al	      1987	mbyte.c	FUNCTION_42	IF_1
0x180f	     0xf89b6000000	                           jns 0x400190b	      1987	mbyte.c	FUNCTION_42	IF_1
0x1815	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1988	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x1818	          0x4863d0	                         movsxd rdx, eax	      1988	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x181b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1988	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x181f	          0x4801c2	                            add rdx, rax	      1988	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x1822	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1988	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x1826	          0x4889d6	                            mov rsi, rdx	      1988	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x1829	          0x4889c7	                            mov rdi, rax	      1988	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x182c	      0xe800000000	                          call 0x4001871	      1988	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x1831	            0x85c0	                           test eax, eax	      1988	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x1833	     0xf8492000000	                            je 0x400190b	      1988	mbyte.c	FUNCTION_42	IF_1	CALL_3
0x1839	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1990	mbyte.c	FUNCTION_42	IF_1	CALL_4
0x183c	          0x4863d0	                         movsxd rdx, eax	      1990	mbyte.c	FUNCTION_42	IF_1	CALL_4
0x183f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1990	mbyte.c	FUNCTION_42	IF_1	CALL_4
0x1843	          0x4801d0	                            add rax, rdx	      1990	mbyte.c	FUNCTION_42	IF_1	CALL_4
0x1846	          0x4889c7	                            mov rdi, rax	      1990	mbyte.c	FUNCTION_42	IF_1	CALL_4
0x1849	      0xe800000000	                          call 0x400188e	      1990	mbyte.c	FUNCTION_42	IF_1	CALL_4
0x184e	          0x8945f4	              mov dword [rbp - 0xc], eax	      1990	mbyte.c	FUNCTION_42	IF_1	CALL_4
0x1851	          0x8b45f8	                mov eax, dword [rbp - 8]	      1993	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x1854	          0x8d5001	                      lea edx, [rax + 1]	      1993	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x1857	          0x8955f8	                mov dword [rbp - 8], edx	      1993	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x185a	            0x4898	                                    cdqe	      1993	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x185c	    0x488d14850000	                        lea rdx, [rax*4]	      1993	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x1864	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1993	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x1868	          0x4801c2	                            add rdx, rax	      1993	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x186b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1993	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x186e	            0x8902	                    mov dword [rdx], eax	      1993	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x1870	        0x837df806	                  cmp dword [rbp - 8], 6	      1994	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_2
0x1874	            0x7454	                            je 0x400190a	      1994	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_2
0x1876	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	CALL_5
0x1879	          0x4863d0	                         movsxd rdx, eax	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	CALL_5
0x187c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	CALL_5
0x1880	          0x4801d0	                            add rax, rdx	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	CALL_5
0x1883	          0x4889c7	                            mov rdi, rax	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	CALL_5
0x1886	      0xe800000000	                          call 0x40018cb	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	CALL_5
0x188b	           0x145f0	             add dword [rbp - 0x10], eax	      1996	mbyte.c	FUNCTION_42	IF_1	FOR_1	CALL_5
0x188e	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1997	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x1891	          0x4863d0	                         movsxd rdx, eax	      1997	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x1894	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1997	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x1898	          0x4801d0	                            add rax, rdx	      1997	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x189b	           0xfb600	                   movzx eax, byte [rax]	      1997	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x189e	            0x84c0	                             test al, al	      1997	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x18a0	            0x7929	                           jns 0x400190b	      1997	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x18a2	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1997	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x18a5	          0x4863d0	                         movsxd rdx, eax	      1997	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x18a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1997	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x18ac	          0x4801d0	                            add rax, rdx	      1997	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x18af	          0x4889c7	                            mov rdi, rax	      1997	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x18b2	      0xe800000000	                          call 0x40018f7	      1997	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x18b7	          0x8945f4	              mov dword [rbp - 0xc], eax	      1997	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x18ba	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1997	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x18bd	            0x89c7	                            mov edi, eax	      1997	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x18bf	      0xe800000000	                          call 0x4001904	      1997	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x18c4	            0x85c0	                           test eax, eax	      1997	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x18c6	            0x7403	                            je 0x400190b	      1997	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_3	CALL_7
0x18c8	            0xeb87	                           jmp 0x4001891	      1999	mbyte.c	FUNCTION_42	IF_1	FOR_1
0x18ca	              0x90	                                     nop	      1995	mbyte.c	FUNCTION_42	IF_1	FOR_1	IF_2
0x18cb	        0x837df805	                  cmp dword [rbp - 8], 5	      2002	mbyte.c	FUNCTION_42	IF_4
0x18cf	            0x7f1a	                            jg 0x400192b	      2002	mbyte.c	FUNCTION_42	IF_4
0x18d1	          0x8b45f8	                mov eax, dword [rbp - 8]	      2003	mbyte.c	FUNCTION_42	IF_4
0x18d4	            0x4898	                                    cdqe	      2003	mbyte.c	FUNCTION_42	IF_4
0x18d6	    0x488d14850000	                        lea rdx, [rax*4]	      2003	mbyte.c	FUNCTION_42	IF_4
0x18de	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2003	mbyte.c	FUNCTION_42	IF_4
0x18e2	          0x4801d0	                            add rax, rdx	      2003	mbyte.c	FUNCTION_42	IF_4
0x18e5	    0xc70000000000	                      mov dword [rax], 0	      2003	mbyte.c	FUNCTION_42	IF_4
0x18eb	          0x8b45fc	                mov eax, dword [rbp - 4]	      2005	mbyte.c	FUNCTION_42
0x18ee	              0xc9	                                   leave	      2006	mbyte.c	FUNCTION_42
0x18ef	              0xc3	                                     ret	      2006	mbyte.c	FUNCTION_42
enc_canon_props	CALL,7:WHILE,0:functions,0:ELSE,0:IF,7:DO,0:SWITCH,0:FOR,0	44
0x50	              0x55	                                push rbp	       471	mbyte.c	FUNCTION_3
0x51	          0x4889e5	                            mov rbp, rsp	       471	mbyte.c	FUNCTION_3
0x54	        0x4883ec20	                           sub rsp, 0x20	       471	mbyte.c	FUNCTION_3
0x58	        0x48897de8	             mov qword [rbp - 0x18], rdi	       471	mbyte.c	FUNCTION_3
0x5c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       474	mbyte.c	FUNCTION_3	CALL_1
0x60	          0x4889c7	                            mov rdi, rax	       474	mbyte.c	FUNCTION_3	CALL_1
0x63	      0xe898ffffff	               call sym.enc_canon_search	       474	mbyte.c	FUNCTION_3	CALL_1
0x68	          0x8945fc	                mov dword [rbp - 4], eax	       474	mbyte.c	FUNCTION_3	CALL_1
0x6b	        0x837dfc00	                  cmp dword [rbp - 4], 0	       475	mbyte.c	FUNCTION_3	IF_1
0x6f	            0x7813	                            js 0x40000c4	       475	mbyte.c	FUNCTION_3	IF_1
0x71	          0x8b45fc	                mov eax, dword [rbp - 4]	       476	mbyte.c	FUNCTION_3	IF_1
0x74	            0x4898	                                    cdqe	       476	mbyte.c	FUNCTION_3	IF_1
0x76	        0x48c1e004	                              shl rax, 4	       476	mbyte.c	FUNCTION_3	IF_1
0x7a	    0x480500000000	                              add rax, 0	       476	mbyte.c	FUNCTION_3	IF_1
0x80	            0x8b00	                    mov eax, dword [rax]	       476	mbyte.c	FUNCTION_3	IF_1
0x82	            0xeb61	                           jmp 0x4000125	       476	mbyte.c	FUNCTION_3	IF_1
0x84	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       495	mbyte.c	FUNCTION_3	IF_6	CALL_5
0x88	      0xba06000000	                              mov edx, 6	       495	mbyte.c	FUNCTION_3	IF_6	CALL_5
0x8d	      0xbe00000000	                              mov esi, 0	       495	mbyte.c	FUNCTION_3	IF_6	CALL_5
0x92	          0x4889c7	                            mov rdi, rax	       495	mbyte.c	FUNCTION_3	IF_6	CALL_5
0x95	      0xe800000000	                          call 0x40000da	       495	mbyte.c	FUNCTION_3	IF_6	CALL_5
0x9a	            0x85c0	                           test eax, eax	       495	mbyte.c	FUNCTION_3	IF_6	CALL_5
0x9c	            0x7507	                           jne 0x40000e5	       495	mbyte.c	FUNCTION_3	IF_6	CALL_5
0x9e	      0xb802000000	                              mov eax, 2	       496	mbyte.c	FUNCTION_3	IF_6
0xa3	            0xeb40	                           jmp 0x4000125	       496	mbyte.c	FUNCTION_3	IF_6
0xa5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0xa9	      0xba05000000	                              mov edx, 5	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0xae	      0xbe00000000	                              mov esi, 0	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0xb3	          0x4889c7	                            mov rdi, rax	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0xb6	      0xe800000000	                          call 0x40000fb	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0xbb	            0x85c0	                           test eax, eax	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0xbd	            0x741a	                            je 0x4000119	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0xbf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0xc3	      0xba09000000	                              mov edx, 9	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0xc8	      0xbe00000000	                              mov esi, 0	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0xcd	          0x4889c7	                            mov rdi, rax	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0xd0	      0xe800000000	                          call 0x4000115	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0xd5	            0x85c0	                           test eax, eax	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0xd7	            0x7507	                           jne 0x4000120	       497	mbyte.c	FUNCTION_3	IF_7	CALL_7
0xd9	      0xb801000000	                              mov eax, 1	       498	mbyte.c	FUNCTION_3	IF_7
0xde	            0xeb05	                           jmp 0x4000125	       498	mbyte.c	FUNCTION_3	IF_7
0xe0	      0xb800000000	                              mov eax, 0	       499	mbyte.c	FUNCTION_3
0xe5	              0xc9	                                   leave	       500	mbyte.c	FUNCTION_3
0xe6	              0xc3	                                     ret	       500	mbyte.c	FUNCTION_3
dbcs_char2bytes	CALL,0:WHILE,0:functions,0:ELSE,0:IF,2:DO,0:SWITCH,0:FOR,0	32
0xb95	              0x55	                                push rbp	      1109	mbyte.c	FUNCTION_13
0xb96	          0x4889e5	                            mov rbp, rsp	      1109	mbyte.c	FUNCTION_13
0xb99	          0x897dfc	                mov dword [rbp - 4], edi	      1109	mbyte.c	FUNCTION_13
0xb9c	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1109	mbyte.c	FUNCTION_13
0xba0	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	      1110	mbyte.c	FUNCTION_13	IF_1
0xba7	            0x7e3c	                           jle 0x4000c25	      1110	mbyte.c	FUNCTION_13	IF_1
0xba9	          0x8b45fc	                mov eax, dword [rbp - 4]	      1112	mbyte.c	FUNCTION_13	IF_1
0xbac	          0xc1e808	                              shr eax, 8	      1112	mbyte.c	FUNCTION_13	IF_1
0xbaf	            0x89c2	                            mov edx, eax	      1112	mbyte.c	FUNCTION_13	IF_1
0xbb1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1112	mbyte.c	FUNCTION_13	IF_1
0xbb5	            0x8810	                      mov byte [rax], dl	      1112	mbyte.c	FUNCTION_13	IF_1
0xbb7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1113	mbyte.c	FUNCTION_13	IF_1
0xbbb	        0x4883c001	                              add rax, 1	      1113	mbyte.c	FUNCTION_13	IF_1
0xbbf	          0x8b55fc	                mov edx, dword [rbp - 4]	      1113	mbyte.c	FUNCTION_13	IF_1
0xbc2	            0x8810	                      mov byte [rax], dl	      1113	mbyte.c	FUNCTION_13	IF_1
0xbc4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1116	mbyte.c	FUNCTION_13	IF_1	IF_2
0xbc8	        0x4883c001	                              add rax, 1	      1116	mbyte.c	FUNCTION_13	IF_1	IF_2
0xbcc	           0xfb600	                   movzx eax, byte [rax]	      1116	mbyte.c	FUNCTION_13	IF_1	IF_2
0xbcf	            0x84c0	                             test al, al	      1116	mbyte.c	FUNCTION_13	IF_1	IF_2
0xbd1	            0x750b	                           jne 0x4000c1e	      1116	mbyte.c	FUNCTION_13	IF_1	IF_2
0xbd3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1117	mbyte.c	FUNCTION_13	IF_1	IF_2
0xbd7	        0x4883c001	                              add rax, 1	      1117	mbyte.c	FUNCTION_13	IF_1	IF_2
0xbdb	          0xc6000a	                     mov byte [rax], 0xa	      1117	mbyte.c	FUNCTION_13	IF_1	IF_2
0xbde	      0xb802000000	                              mov eax, 2	      1118	mbyte.c	FUNCTION_13	IF_1
0xbe3	            0xeb10	                           jmp 0x4000c35	      1118	mbyte.c	FUNCTION_13	IF_1
0xbe5	          0x8b45fc	                mov eax, dword [rbp - 4]	      1120	mbyte.c	FUNCTION_13
0xbe8	            0x89c2	                            mov edx, eax	      1120	mbyte.c	FUNCTION_13
0xbea	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1120	mbyte.c	FUNCTION_13
0xbee	            0x8810	                      mov byte [rax], dl	      1120	mbyte.c	FUNCTION_13
0xbf0	      0xb801000000	                              mov eax, 1	      1121	mbyte.c	FUNCTION_13
0xbf5	              0x5d	                                 pop rbp	      1122	mbyte.c	FUNCTION_13
0xbf6	              0xc3	                                     ret	      1122	mbyte.c	FUNCTION_13
mb_init	CALL,34:WHILE,0:functions,0:ELSE,19:IF,28:DO,0:SWITCH,0:FOR,2	302
0xe7	              0x55	                                push rbp	       516	mbyte.c	FUNCTION_4
0xe8	          0x4889e5	                            mov rbp, rsp	       516	mbyte.c	FUNCTION_4
0xeb	        0x4883ec60	                           sub rsp, 0x60	       516	mbyte.c	FUNCTION_4
0xef	    0x64488b042528	                mov rax, qword fs:[0x28]	       516	mbyte.c	FUNCTION_4
0xf8	        0x488945f8	                mov qword [rbp - 8], rax	       516	mbyte.c	FUNCTION_4
0xfc	            0x31c0	                            xor eax, eax	       516	mbyte.c	FUNCTION_4
0xfe	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       520	mbyte.c	FUNCTION_4
0x105	    0x488b05000000	            mov rax, qword [0x0400014c] 	       528	mbyte.c	FUNCTION_4	IF_1
0x10c	          0x4885c0	                           test rax, rax	       528	mbyte.c	FUNCTION_4	IF_1
0x10f	            0x754a	                           jne 0x400019b	       528	mbyte.c	FUNCTION_4	IF_1
0x111	    0xc745a8000000	               mov dword [rbp - 0x58], 0	       531	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x118	            0xeb10	                           jmp 0x400016a	       531	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x11a	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       532	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x11d	            0x4898	                                    cdqe	       532	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x11f	    0xc68000000000	                       mov byte [rax], 1	       532	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x126	        0x8345a801	               add dword [rbp - 0x58], 1	       531	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x12a	    0x817da8ff0000	           cmp dword [rbp - 0x58], 0xff 	       531	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x131	            0x7ee7	                           jle 0x400015a	       531	mbyte.c	FUNCTION_4	IF_1	FOR_1
0x133	    0xc70500000000	               mov dword [0x0400017d], 0	       533	mbyte.c	FUNCTION_4	IF_1
0x13d	    0xc70500000000	               mov dword [0x04000187], 1	       534	mbyte.c	FUNCTION_4	IF_1
0x147	    0xc70500000000	               mov dword [0x04000191], 0	       535	mbyte.c	FUNCTION_4	IF_1
0x151	      0xb800000000	                              mov eax, 0	       536	mbyte.c	FUNCTION_4	IF_1
0x156	      0xe94f050000	                           jmp 0x40006ea	       536	mbyte.c	FUNCTION_4	IF_1
0x15b	    0x488b05000000	            mov rax, qword [0x040001a2] 	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x162	      0xba05000000	                              mov edx, 5	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x167	      0xbe00000000	                              mov esi, 0	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x16c	          0x4889c7	                            mov rdi, rax	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x16f	      0xe800000000	                          call 0x40001b4	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x174	            0x85c0	                           test eax, eax	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x176	            0x741d	                            je 0x40001d5	       569	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_7
0x178	    0x488b05000000	            mov rax, qword [0x040001bf] 	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x17f	      0xba09000000	                              mov edx, 9	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x184	      0xbe00000000	                              mov esi, 0	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x189	          0x4889c7	                            mov rdi, rax	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x18c	      0xe800000000	                          call 0x40001d1	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x191	            0x85c0	                           test eax, eax	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x193	            0x7519	                           jne 0x40001ee	       570	mbyte.c	FUNCTION_4	ELSE_4	IF_7	CALL_8
0x195	    0xc70500000000	               mov dword [0x040001df], 0	       573	mbyte.c	FUNCTION_4	ELSE_4	IF_7
0x19f	    0xc70500000000	               mov dword [0x040001e9], 0	       574	mbyte.c	FUNCTION_4	ELSE_4	IF_7
0x1a9	      0xe9e9000000	                           jmp 0x40002d7	       574	mbyte.c	FUNCTION_4	ELSE_4	IF_7
0x1ae	    0x488b05000000	            mov rax, qword [0x040001f5] 	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x1b5	      0xba06000000	                              mov edx, 6	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x1ba	      0xbe00000000	                              mov esi, 0	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x1bf	          0x4889c7	                            mov rdi, rax	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x1c2	      0xe800000000	                          call 0x4000207	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x1c7	            0x85c0	                           test eax, eax	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x1c9	            0x750c	                           jne 0x4000217	       576	mbyte.c	FUNCTION_4	ELSE_5	IF_8	CALL_9
0x1cb	    0xc745b0010000	               mov dword [rbp - 0x50], 1	       585	mbyte.c	FUNCTION_4	ELSE_5	IF_8
0x1d2	      0xe9c0000000	                           jmp 0x40002d7	       585	mbyte.c	FUNCTION_4	ELSE_5	IF_8
0x1d7	    0x488b05000000	            mov rax, qword [0x0400021e] 	       588	mbyte.c	FUNCTION_4	ELSE_6	IF_10	CALL_11
0x1de	          0x4889c7	                            mov rdi, rax	       588	mbyte.c	FUNCTION_4	ELSE_6	IF_10	CALL_11
0x1e1	      0xe81afeffff	               call sym.enc_canon_search	       588	mbyte.c	FUNCTION_4	ELSE_6	IF_10	CALL_11
0x1e6	          0x8945b4	             mov dword [rbp - 0x4c], eax	       588	mbyte.c	FUNCTION_4	ELSE_6	IF_10	CALL_11
0x1e9	        0x837db400	               cmp dword [rbp - 0x4c], 0	       588	mbyte.c	FUNCTION_4	ELSE_6	IF_10	CALL_11
0x1ed	     0xf889a000000	                            js 0x40002cd	       588	mbyte.c	FUNCTION_4	ELSE_6	IF_10	CALL_11
0x1f3	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       590	mbyte.c	FUNCTION_4	ELSE_6	IF_10
0x1f6	            0x4898	                                    cdqe	       590	mbyte.c	FUNCTION_4	ELSE_6	IF_10
0x1f8	        0x48c1e004	                              shl rax, 4	       590	mbyte.c	FUNCTION_4	ELSE_6	IF_10
0x1fc	    0x480500000000	                              add rax, 0	       590	mbyte.c	FUNCTION_4	ELSE_6	IF_10
0x202	            0x8b00	                    mov eax, dword [rax]	       590	mbyte.c	FUNCTION_4	ELSE_6	IF_10
0x204	          0x8945a8	             mov dword [rbp - 0x58], eax	       590	mbyte.c	FUNCTION_4	ELSE_6	IF_10
0x207	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       591	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11
0x20a	          0x83e004	                              and eax, 4	       591	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11
0x20d	            0x85c0	                           test eax, eax	       591	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11
0x20f	            0x7446	                            je 0x4000297	       591	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11
0x211	    0xc70500000000	               mov dword [0x0400025b], 1	       594	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11
0x21b	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       595	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	IF_12
0x21e	      0x2540010000	                          and eax, 0x140	       595	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	IF_12
0x223	            0x85c0	                           test eax, eax	       595	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	IF_12
0x225	            0x740c	                            je 0x4000273	       595	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	IF_12
0x227	    0xc70500000000	               mov dword [0x04000271], 2	       596	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	IF_12
0x231	            0xeb64	                           jmp 0x40002d7	       596	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	IF_12
0x233	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       597	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x236	      0x2580000000	                           and eax, 0x80	       597	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x23b	            0x85c0	                           test eax, eax	       597	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x23d	            0x740c	                            je 0x400028b	       597	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x23f	    0xc70500000000	               mov dword [0x04000289], 4	       598	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x249	            0xeb4c	                           jmp 0x40002d7	       598	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_7	IF_13
0x24b	    0xc70500000000	               mov dword [0x04000295], 0	       600	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_8
0x255	            0xeb40	                           jmp 0x40002d7	       600	mbyte.c	FUNCTION_4	ELSE_6	IF_10	IF_11	ELSE_8
0x257	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       602	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x25a	          0x83e002	                              and eax, 2	       602	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x25d	            0x85c0	                           test eax, eax	       602	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x25f	            0x7416	                            je 0x40002b7	       602	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x261	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       605	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x264	            0x4898	                                    cdqe	       605	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x266	        0x48c1e004	                              shl rax, 4	       605	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x26a	    0x480500000000	                              add rax, 0	       605	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x270	            0x8b00	                    mov eax, dword [rax]	       605	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x272	          0x8945b0	             mov dword [rbp - 0x50], eax	       605	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x275	            0xeb20	                           jmp 0x40002d7	       605	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_8	ELSE_9	IF_14
0x277	    0xc70500000000	               mov dword [0x040002c1], 0	       610	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_10
0x281	    0xc70500000000	               mov dword [0x040002cb], 0	       611	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_10
0x28b	            0xeb0a	                           jmp 0x40002d7	       611	mbyte.c	FUNCTION_4	ELSE_6	IF_10	ELSE_10
0x28d	      0xb800000000	                              mov eax, 0	       615	mbyte.c	FUNCTION_4	ELSE_11
0x292	      0xe913040000	                           jmp 0x40006ea	       615	mbyte.c	FUNCTION_4	ELSE_11
0x297	        0x837db000	               cmp dword [rbp - 0x50], 0	       617	mbyte.c	FUNCTION_4	ELSE_11	IF_15
0x29b	            0x7414	                            je 0x40002f1	       617	mbyte.c	FUNCTION_4	ELSE_11	IF_15
0x29d	    0xc70500000000	               mov dword [0x040002e7], 0	       624	mbyte.c	FUNCTION_4	ELSE_11	IF_15
0x2a7	    0xc70500000000	               mov dword [0x040002f1], 0	       625	mbyte.c	FUNCTION_4	ELSE_11	IF_15
0x2b1	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       627	mbyte.c	FUNCTION_4
0x2b4	    0x890500000000	            mov dword [0x040002fa], eax 	       627	mbyte.c	FUNCTION_4
0x2ba	    0x8b0500000000	            mov eax, dword [0x04000300] 	       628	mbyte.c	FUNCTION_4
0x2c0	            0x85c0	                           test eax, eax	       628	mbyte.c	FUNCTION_4
0x2c2	            0x750a	                           jne 0x400030e	       628	mbyte.c	FUNCTION_4
0x2c4	    0x8b0500000000	            mov eax, dword [0x0400030a] 	       628	mbyte.c	FUNCTION_4
0x2ca	            0x85c0	                           test eax, eax	       628	mbyte.c	FUNCTION_4
0x2cc	            0x7407	                            je 0x4000315	       628	mbyte.c	FUNCTION_4
0x2ce	      0xb801000000	                              mov eax, 1	       628	mbyte.c	FUNCTION_4
0x2d3	            0xeb05	                           jmp 0x400031a	       628	mbyte.c	FUNCTION_4
0x2d5	      0xb800000000	                              mov eax, 0	       628	mbyte.c	FUNCTION_4
0x2da	    0x890500000000	            mov dword [0x04000320], eax 	       628	mbyte.c	FUNCTION_4
0x2e0	    0x8b0500000000	            mov eax, dword [0x04000326] 	       636	mbyte.c	FUNCTION_4	CALL_15
0x2e6	            0x85c0	                           test eax, eax	       637	mbyte.c	FUNCTION_4	CALL_16
0x2e8	            0x7530	                           jne 0x400035a	       637	mbyte.c	FUNCTION_4	CALL_16
0x2ea	    0x488b05000000	            mov rax, qword [0x04000331] 	       636	mbyte.c	FUNCTION_4	CALL_15
0x2f1	      0xbe00000000	                              mov esi, 0	       636	mbyte.c	FUNCTION_4	CALL_15
0x2f6	          0x4889c7	                            mov rdi, rax	       636	mbyte.c	FUNCTION_4	CALL_15
0x2f9	      0xe800000000	                          call 0x400033e	       636	mbyte.c	FUNCTION_4	CALL_15
0x2fe	            0x85c0	                           test eax, eax	       636	mbyte.c	FUNCTION_4	CALL_15
0x300	            0x7418	                            je 0x400035a	       636	mbyte.c	FUNCTION_4	CALL_15
0x302	    0x488b05000000	            mov rax, qword [0x04000349] 	       637	mbyte.c	FUNCTION_4	CALL_16
0x309	      0xbe00000000	                              mov esi, 0	       637	mbyte.c	FUNCTION_4	CALL_16
0x30e	          0x4889c7	                            mov rdi, rax	       637	mbyte.c	FUNCTION_4	CALL_16
0x311	      0xe800000000	                          call 0x4000356	       637	mbyte.c	FUNCTION_4	CALL_16
0x316	            0x85c0	                           test eax, eax	       637	mbyte.c	FUNCTION_4	CALL_16
0x318	            0x7507	                           jne 0x4000361	       637	mbyte.c	FUNCTION_4	CALL_16
0x31a	      0xb801000000	                              mov eax, 1	       637	mbyte.c	FUNCTION_4	CALL_16
0x31f	            0xeb05	                           jmp 0x4000366	       637	mbyte.c	FUNCTION_4	CALL_16
0x321	      0xb800000000	                              mov eax, 0	       637	mbyte.c	FUNCTION_4	CALL_16
0x326	    0x890500000000	            mov dword [0x0400036c], eax 	       636	mbyte.c	FUNCTION_4	CALL_15
0x32c	    0x8b0500000000	            mov eax, dword [0x04000372] 	       642	mbyte.c	FUNCTION_4	IF_17
0x332	            0x85c0	                           test eax, eax	       642	mbyte.c	FUNCTION_4	IF_17
0x334	            0x7473	                            je 0x40003e9	       642	mbyte.c	FUNCTION_4	IF_17
0x336	    0x48c705000000	               mov qword [0x04000381], 0	       644	mbyte.c	FUNCTION_4	IF_17
0x341	    0x48c705000000	               mov qword [0x0400038c], 0	       645	mbyte.c	FUNCTION_4	IF_17
0x34c	    0x48c705000000	               mov qword [0x04000397], 0	       646	mbyte.c	FUNCTION_4	IF_17
0x357	    0x48c705000000	               mov qword [0x040003a2], 0	       647	mbyte.c	FUNCTION_4	IF_17
0x362	    0x48c705000000	               mov qword [0x040003ad], 0	       648	mbyte.c	FUNCTION_4	IF_17
0x36d	    0x48c705000000	               mov qword [0x040003b8], 0	       649	mbyte.c	FUNCTION_4	IF_17
0x378	    0x48c705000000	               mov qword [0x040003c3], 0	       650	mbyte.c	FUNCTION_4	IF_17
0x383	    0x48c705000000	               mov qword [0x040003ce], 0	       651	mbyte.c	FUNCTION_4	IF_17
0x38e	    0x48c705000000	               mov qword [0x040003d9], 0	       652	mbyte.c	FUNCTION_4	IF_17
0x399	    0x48c705000000	               mov qword [0x040003e4], 0	       653	mbyte.c	FUNCTION_4	IF_17
0x3a4	      0xe9e8000000	                           jmp 0x40004d1	       653	mbyte.c	FUNCTION_4	IF_17
0x3a9	    0x8b0500000000	            mov eax, dword [0x040003ef] 	       655	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x3af	            0x85c0	                           test eax, eax	       655	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x3b1	            0x7470	                            je 0x4000463	       655	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x3b3	    0x48c705000000	               mov qword [0x040003fe], 0	       657	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x3be	    0x48c705000000	               mov qword [0x04000409], 0	       658	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x3c9	    0x48c705000000	               mov qword [0x04000414], 0	       659	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x3d4	    0x48c705000000	               mov qword [0x0400041f], 0	       660	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x3df	    0x48c705000000	               mov qword [0x0400042a], 0	       661	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x3ea	    0x48c705000000	               mov qword [0x04000435], 0	       662	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x3f5	    0x48c705000000	               mov qword [0x04000440], 0	       663	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x400	    0x48c705000000	               mov qword [0x0400044b], 0	       664	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x40b	    0x48c705000000	               mov qword [0x04000456], 0	       665	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x416	    0x48c705000000	               mov qword [0x04000461], 0	       666	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x421	            0xeb6e	                           jmp 0x40004d1	       666	mbyte.c	FUNCTION_4	ELSE_12	IF_18
0x423	    0x48c705000000	               mov qword [0x0400046e], 0	       670	mbyte.c	FUNCTION_4	ELSE_13
0x42e	    0x48c705000000	               mov qword [0x04000479], 0	       671	mbyte.c	FUNCTION_4	ELSE_13
0x439	    0x48c705000000	               mov qword [0x04000484], 0	       672	mbyte.c	FUNCTION_4	ELSE_13
0x444	    0x48c705000000	               mov qword [0x0400048f], 0	       673	mbyte.c	FUNCTION_4	ELSE_13
0x44f	    0x48c705000000	               mov qword [0x0400049a], 0	       674	mbyte.c	FUNCTION_4	ELSE_13
0x45a	    0x48c705000000	               mov qword [0x040004a5], 0	       675	mbyte.c	FUNCTION_4	ELSE_13
0x465	    0x48c705000000	               mov qword [0x040004b0], 0	       676	mbyte.c	FUNCTION_4	ELSE_13
0x470	    0x48c705000000	               mov qword [0x040004bb], 0	       677	mbyte.c	FUNCTION_4	ELSE_13
0x47b	    0x48c705000000	               mov qword [0x040004c6], 0	       678	mbyte.c	FUNCTION_4	ELSE_13
0x486	    0x48c705000000	               mov qword [0x040004d1], 0	       679	mbyte.c	FUNCTION_4	ELSE_13
0x491	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       688	mbyte.c	FUNCTION_4
0x498	    0x8b0500000000	            mov eax, dword [0x040004de] 	       689	mbyte.c	FUNCTION_4	IF_19
0x49e	            0x85c0	                           test eax, eax	       689	mbyte.c	FUNCTION_4	IF_19
0x4a0	            0x7458	                            je 0x400053a	       689	mbyte.c	FUNCTION_4	IF_19
0x4a2	      0xe800000000	                          call 0x40004e7	       691	mbyte.c	FUNCTION_4	IF_19	CALL_17
0x4a7	        0x488945b8	             mov qword [rbp - 0x48], rax	       691	mbyte.c	FUNCTION_4	IF_19	CALL_17
0x4ab	      0x48837db800	               cmp qword [rbp - 0x48], 0	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x4b0	            0x741a	                            je 0x400050c	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x4b2	    0x488b15000000	            mov rdx, qword [0x040004f9] 	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x4b9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x4bd	          0x4889d6	                            mov rsi, rdx	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x4c0	          0x4889c7	                            mov rdi, rax	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x4c3	      0xe800000000	                          call 0x4000508	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x4c8	            0x85c0	                           test eax, eax	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x4ca	            0x7422	                            je 0x400052e	       692	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_18
0x4cc	    0x488b0d000000	            mov rcx, qword [0x04000513] 	       694	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_19
0x4d3	        0x488d45c0	                   lea rax, [rbp - 0x40]	       694	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_19
0x4d7	      0xba00000000	                              mov edx, 0	       694	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_19
0x4dc	          0x4889ce	                            mov rsi, rcx	       694	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_19
0x4df	          0x4889c7	                            mov rdi, rax	       694	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_19
0x4e2	      0xe800000000	                          call 0x4000527	       694	mbyte.c	FUNCTION_4	IF_19	IF_20	CALL_19
0x4e7	    0xc745d0010000	               mov dword [rbp - 0x30], 1	       695	mbyte.c	FUNCTION_4	IF_19	IF_20
0x4ee	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       697	mbyte.c	FUNCTION_4	IF_19	CALL_20
0x4f2	          0x4889c7	                            mov rdi, rax	       697	mbyte.c	FUNCTION_4	IF_19	CALL_20
0x4f5	      0xe800000000	                          call 0x400053a	       697	mbyte.c	FUNCTION_4	IF_19	CALL_20
0x4fa	    0xc745a8000000	               mov dword [rbp - 0x58], 0	       701	mbyte.c	FUNCTION_4	FOR_2
0x501	      0xe9e9000000	                           jmp 0x400062f	       701	mbyte.c	FUNCTION_4	FOR_2
0x506	    0x8b0500000000	            mov eax, dword [0x0400054c] 	       705	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x50c	            0x85c0	                           test eax, eax	       705	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x50e	            0x7417	                            je 0x4000567	       705	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x510	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       706	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x513	            0x4898	                                    cdqe	       706	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x515	     0xfb680000000	                   movzx eax, byte [rax]	       706	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x51c	           0xfbec0	                           movsx eax, al	       706	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x51f	          0x8945ac	             mov dword [rbp - 0x54], eax	       706	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x522	      0xe9b4000000	                           jmp 0x400061b	       706	mbyte.c	FUNCTION_4	FOR_2	IF_21
0x527	    0x8b0500000000	            mov eax, dword [0x0400056d] 	       707	mbyte.c	FUNCTION_4	FOR_2	ELSE_14	IF_22
0x52d	            0x85c0	                           test eax, eax	       707	mbyte.c	FUNCTION_4	FOR_2	ELSE_14	IF_22
0x52f	            0x750c	                           jne 0x400057d	       707	mbyte.c	FUNCTION_4	FOR_2	ELSE_14	IF_22
0x531	    0xc745ac010000	               mov dword [rbp - 0x54], 1	       708	mbyte.c	FUNCTION_4	FOR_2	ELSE_14	IF_22
0x538	      0xe99e000000	                           jmp 0x400061b	       708	mbyte.c	FUNCTION_4	FOR_2	ELSE_14	IF_22
0x53d	        0x837da800	               cmp dword [rbp - 0x58], 0	       728	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	IF_23
0x541	            0x750c	                           jne 0x400058f	       728	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	IF_23
0x543	    0xc745ac010000	               mov dword [rbp - 0x54], 1	       729	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	IF_23
0x54a	      0xe98c000000	                           jmp 0x400061b	       729	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	IF_23
0x54f	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       732	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16
0x552	          0x8845e0	               mov byte [rbp - 0x20], al	       732	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16
0x555	        0xc645e100	                mov byte [rbp - 0x1f], 0	       733	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16
0x559	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       735	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24
0x55c	            0x85c0	                           test eax, eax	       735	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24
0x55e	            0x7441	                            je 0x40005e1	       735	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24
0x560	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       741	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	CALL_22
0x564	        0x488d45c0	                   lea rax, [rbp - 0x40]	       741	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	CALL_22
0x568	      0xba00000000	                              mov edx, 0	       741	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	CALL_22
0x56d	          0x4889ce	                            mov rsi, rcx	       741	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	CALL_22
0x570	          0x4889c7	                            mov rdi, rax	       741	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	CALL_22
0x573	      0xe800000000	                          call 0x40005b8	       741	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	CALL_22
0x578	        0x488945b8	             mov qword [rbp - 0x48], rax	       741	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	CALL_22
0x57c	      0x48837db800	               cmp qword [rbp - 0x48], 0	       742	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25
0x581	            0x7415	                            je 0x40005d8	       742	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25
0x583	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       744	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25	CALL_23
0x587	          0x4889c7	                            mov rdi, rax	       744	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25	CALL_23
0x58a	      0xe800000000	                          call 0x40005cf	       744	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25	CALL_23
0x58f	    0xc745ac010000	               mov dword [rbp - 0x54], 1	       745	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25
0x596	            0xeb43	                           jmp 0x400061b	       745	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	IF_25
0x598	    0xc745ac020000	               mov dword [rbp - 0x54], 2	       748	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	ELSE_17
0x59f	            0xeb3a	                           jmp 0x400061b	       748	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	IF_24	ELSE_17
0x5a1	      0xbe00000000	                              mov esi, 0	       759	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	CALL_24
0x5a6	      0xbf00000000	                              mov edi, 0	       759	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	CALL_24
0x5ab	      0xe800000000	                          call 0x40005f0	       759	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	CALL_24
0x5b0	    0x890500000000	            mov dword [0x040005f6], eax 	       759	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	CALL_24
0x5b6	        0x488d45e0	                   lea rax, [rbp - 0x20]	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26	CALL_25
0x5ba	      0xbe01000000	                              mov esi, 1	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26	CALL_25
0x5bf	          0x4889c7	                            mov rdi, rax	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26	CALL_25
0x5c2	      0xe800000000	                          call 0x4000607	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26	CALL_25
0x5c7	            0x85c0	                           test eax, eax	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26	CALL_25
0x5c9	            0x7f09	                            jg 0x4000614	       760	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26	CALL_25
0x5cb	    0xc745ac020000	               mov dword [rbp - 0x54], 2	       761	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x5d2	            0xeb07	                           jmp 0x400061b	       761	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	IF_26
0x5d4	    0xc745ac010000	               mov dword [rbp - 0x54], 1	       763	mbyte.c	FUNCTION_4	FOR_2	ELSE_15	ELSE_16	ELSE_18	ELSE_19
0x5db	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       770	mbyte.c	FUNCTION_4	FOR_2
0x5de	            0x89c2	                            mov edx, eax	       770	mbyte.c	FUNCTION_4	FOR_2
0x5e0	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       770	mbyte.c	FUNCTION_4	FOR_2
0x5e3	            0x4898	                                    cdqe	       770	mbyte.c	FUNCTION_4	FOR_2
0x5e5	    0x889000000000	                      mov byte [rax], dl	       770	mbyte.c	FUNCTION_4	FOR_2
0x5eb	        0x8345a801	               add dword [rbp - 0x58], 1	       701	mbyte.c	FUNCTION_4	FOR_2
0x5ef	    0x817da8ff0000	           cmp dword [rbp - 0x58], 0xff 	       701	mbyte.c	FUNCTION_4	FOR_2
0x5f6	     0xf8e0affffff	                           jle 0x4000546	       701	mbyte.c	FUNCTION_4	FOR_2
0x5fc	        0x488d45c0	                   lea rax, [rbp - 0x40]	       774	mbyte.c	FUNCTION_4	CALL_26
0x600	      0xba00000000	                              mov edx, 0	       774	mbyte.c	FUNCTION_4	CALL_26
0x605	      0xbe00000000	                              mov esi, 0	       774	mbyte.c	FUNCTION_4	CALL_26
0x60a	          0x4889c7	                            mov rdi, rax	       774	mbyte.c	FUNCTION_4	CALL_26
0x60d	      0xe800000000	                          call 0x4000652	       774	mbyte.c	FUNCTION_4	CALL_26
0x612	      0xe800000000	                          call 0x4000657	       778	mbyte.c	FUNCTION_4	CALL_27
0x617	      0xbf00000000	                              mov edi, 0	       781	mbyte.c	FUNCTION_4	CALL_28
0x61c	      0xe800000000	                          call 0x4000661	       781	mbyte.c	FUNCTION_4	CALL_28
0x621	    0x8b0500000000	            mov eax, dword [0x04000667] 	       784	mbyte.c	FUNCTION_4	IF_27	CALL_29
0x627	            0x85c0	                           test eax, eax	       784	mbyte.c	FUNCTION_4	IF_27	CALL_29
0x629	            0x742d	                            je 0x4000698	       784	mbyte.c	FUNCTION_4	IF_27	CALL_29
0x62b	      0xbf00000000	                              mov edi, 0	       784	mbyte.c	FUNCTION_4	IF_27	CALL_29
0x630	      0xe800000000	                          call 0x4000675	       784	mbyte.c	FUNCTION_4	IF_27	CALL_29
0x635	            0x85c0	                           test eax, eax	       784	mbyte.c	FUNCTION_4	IF_27	CALL_29
0x637	            0x751f	                           jne 0x4000698	       784	mbyte.c	FUNCTION_4	IF_27	CALL_29
0x639	    0x41b800000000	                              mov r8d, 0	       785	mbyte.c	FUNCTION_4	IF_27	CALL_30
0x63f	      0xb901000000	                              mov ecx, 1	       785	mbyte.c	FUNCTION_4	IF_27	CALL_30
0x644	      0xba00000000	                              mov edx, 0	       785	mbyte.c	FUNCTION_4	IF_27	CALL_30
0x649	      0xbeffffffff	                     mov esi, 0xffffffff	       785	mbyte.c	FUNCTION_4	IF_27	CALL_30
0x64e	      0xbf00000000	                              mov edi, 0	       785	mbyte.c	FUNCTION_4	IF_27	CALL_30
0x653	      0xe800000000	                          call 0x4000698	       785	mbyte.c	FUNCTION_4	IF_27	CALL_30
0x658	    0x8b0500000000	            mov eax, dword [0x0400069e] 	       792	mbyte.c	FUNCTION_4
0x65e	            0x85c0	                           test eax, eax	       791	mbyte.c	FUNCTION_4	CALL_31
0x660	            0x7509	                           jne 0x40006ab	       791	mbyte.c	FUNCTION_4	CALL_31
0x662	    0x488b05000000	            mov rax, qword [0x040006a9] 	       791	mbyte.c	FUNCTION_4	CALL_31
0x669	            0xeb05	                           jmp 0x40006b0	       791	mbyte.c	FUNCTION_4	CALL_31
0x66b	      0xb800000000	                              mov eax, 0	       791	mbyte.c	FUNCTION_4	CALL_31
0x670	          0x4889c6	                            mov rsi, rax	       791	mbyte.c	FUNCTION_4	CALL_31
0x673	      0xbf00000000	                              mov edi, 0	       791	mbyte.c	FUNCTION_4	CALL_31
0x678	      0xe800000000	                          call 0x40006bd	       791	mbyte.c	FUNCTION_4	CALL_31
0x67d	    0x488b05000000	            mov rax, qword [0x040006c4] 	       805	mbyte.c	FUNCTION_4	CALL_33
0x684	          0x4989c0	                             mov r8, rax	       805	mbyte.c	FUNCTION_4	CALL_33
0x687	      0xb900000000	                              mov ecx, 0	       805	mbyte.c	FUNCTION_4	CALL_33
0x68c	      0xba00000000	                              mov edx, 0	       805	mbyte.c	FUNCTION_4	CALL_33
0x691	      0xbe00000000	                              mov esi, 0	       805	mbyte.c	FUNCTION_4	CALL_33
0x696	      0xbf43000000	                           mov edi, 0x43	       805	mbyte.c	FUNCTION_4	CALL_33
0x69b	      0xe800000000	                          call 0x40006e0	       805	mbyte.c	FUNCTION_4	CALL_33
0x6a0	      0xe800000000	                          call 0x40006e5	       810	mbyte.c	FUNCTION_4	CALL_34
0x6a5	      0xb800000000	                              mov eax, 0	       813	mbyte.c	FUNCTION_4
0x6aa	        0x488b4df8	                mov rcx, qword [rbp - 8]	       814	mbyte.c	FUNCTION_4
0x6ae	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       814	mbyte.c	FUNCTION_4
0x6b7	            0x7405	                            je 0x40006fe	       814	mbyte.c	FUNCTION_4
0x6b9	      0xe800000000	                          call 0x40006fe	       814	mbyte.c	FUNCTION_4
0x6be	              0xc9	                                   leave	       814	mbyte.c	FUNCTION_4
0x6bf	              0xc3	                                     ret	       814	mbyte.c	FUNCTION_4
mb_ptr2char_adv	CALL,0:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	25
0x15ff	              0x55	                                push rbp	      1894	mbyte.c	FUNCTION_37
0x1600	          0x4889e5	                            mov rbp, rsp	      1894	mbyte.c	FUNCTION_37
0x1603	        0x4883ec20	                           sub rsp, 0x20	      1894	mbyte.c	FUNCTION_37
0x1607	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1894	mbyte.c	FUNCTION_37
0x160b	    0x488b05000000	            mov rax, qword [0x04001652] 	      1897	mbyte.c	FUNCTION_37
0x1612	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1897	mbyte.c	FUNCTION_37
0x1616	          0x488b12	                    mov rdx, qword [rdx]	      1897	mbyte.c	FUNCTION_37
0x1619	          0x4889d7	                            mov rdi, rdx	      1897	mbyte.c	FUNCTION_37
0x161c	            0xffd0	                                call rax	      1897	mbyte.c	FUNCTION_37
0x161e	          0x8945fc	                mov dword [rbp - 4], eax	      1897	mbyte.c	FUNCTION_37
0x1621	    0x488b05000000	            mov rax, qword [0x04001668] 	      1898	mbyte.c	FUNCTION_37
0x1628	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1898	mbyte.c	FUNCTION_37
0x162c	          0x488b12	                    mov rdx, qword [rdx]	      1898	mbyte.c	FUNCTION_37
0x162f	          0x4889d7	                            mov rdi, rdx	      1898	mbyte.c	FUNCTION_37
0x1632	            0xffd0	                                call rax	      1898	mbyte.c	FUNCTION_37
0x1634	            0x89c1	                            mov ecx, eax	      1898	mbyte.c	FUNCTION_37
0x1636	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1898	mbyte.c	FUNCTION_37
0x163a	          0x488b10	                    mov rdx, qword [rax]	      1898	mbyte.c	FUNCTION_37
0x163d	          0x4863c1	                         movsxd rax, ecx	      1898	mbyte.c	FUNCTION_37
0x1640	          0x4801c2	                            add rdx, rax	      1898	mbyte.c	FUNCTION_37
0x1643	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1898	mbyte.c	FUNCTION_37
0x1647	          0x488910	                    mov qword [rax], rdx	      1898	mbyte.c	FUNCTION_37
0x164a	          0x8b45fc	                mov eax, dword [rbp - 4]	      1899	mbyte.c	FUNCTION_37
0x164d	              0xc9	                                   leave	      1900	mbyte.c	FUNCTION_37
0x164e	              0xc3	                                     ret	      1900	mbyte.c	FUNCTION_37
utfc_ptr2len_len	CALL,3:WHILE,1:functions,0:ELSE,0:IF,6:DO,0:SWITCH,0:FOR,0	95
0x1ce9	              0x55	                                push rbp	      2187	mbyte.c	FUNCTION_49
0x1cea	          0x4889e5	                            mov rbp, rsp	      2187	mbyte.c	FUNCTION_49
0x1ced	        0x4883ec20	                           sub rsp, 0x20	      2187	mbyte.c	FUNCTION_49
0x1cf1	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2187	mbyte.c	FUNCTION_49
0x1cf5	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2187	mbyte.c	FUNCTION_49
0x1cf8	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2193	mbyte.c	FUNCTION_49	IF_1
0x1cfc	            0x7e0b	                           jle 0x4001d49	      2193	mbyte.c	FUNCTION_49	IF_1
0x1cfe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2193	mbyte.c	FUNCTION_49	IF_1
0x1d02	           0xfb600	                   movzx eax, byte [rax]	      2193	mbyte.c	FUNCTION_49	IF_1
0x1d05	            0x84c0	                             test al, al	      2193	mbyte.c	FUNCTION_49	IF_1
0x1d07	            0x750a	                           jne 0x4001d53	      2193	mbyte.c	FUNCTION_49	IF_1
0x1d09	      0xb800000000	                              mov eax, 0	      2194	mbyte.c	FUNCTION_49	IF_1
0x1d0e	      0xe9f2000000	                           jmp 0x4001e45	      2194	mbyte.c	FUNCTION_49	IF_1
0x1d13	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2195	mbyte.c	FUNCTION_49	IF_2
0x1d17	           0xfb600	                   movzx eax, byte [rax]	      2195	mbyte.c	FUNCTION_49	IF_2
0x1d1a	            0x84c0	                             test al, al	      2195	mbyte.c	FUNCTION_49	IF_2
0x1d1c	            0x781f	                            js 0x4001d7d	      2195	mbyte.c	FUNCTION_49	IF_2
0x1d1e	        0x837de401	               cmp dword [rbp - 0x1c], 1	      2195	mbyte.c	FUNCTION_49	IF_2
0x1d22	            0x740f	                            je 0x4001d73	      2195	mbyte.c	FUNCTION_49	IF_2
0x1d24	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2195	mbyte.c	FUNCTION_49	IF_2
0x1d28	        0x4883c001	                              add rax, 1	      2195	mbyte.c	FUNCTION_49	IF_2
0x1d2c	           0xfb600	                   movzx eax, byte [rax]	      2195	mbyte.c	FUNCTION_49	IF_2
0x1d2f	            0x84c0	                             test al, al	      2195	mbyte.c	FUNCTION_49	IF_2
0x1d31	            0x780a	                            js 0x4001d7d	      2195	mbyte.c	FUNCTION_49	IF_2
0x1d33	      0xb801000000	                              mov eax, 1	      2196	mbyte.c	FUNCTION_49	IF_2
0x1d38	      0xe9c8000000	                           jmp 0x4001e45	      2196	mbyte.c	FUNCTION_49	IF_2
0x1d3d	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      2199	mbyte.c	FUNCTION_49	CALL_1
0x1d40	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2199	mbyte.c	FUNCTION_49	CALL_1
0x1d44	            0x89d6	                            mov esi, edx	      2199	mbyte.c	FUNCTION_49	CALL_1
0x1d46	          0x4889c7	                            mov rdi, rax	      2199	mbyte.c	FUNCTION_49	CALL_1
0x1d49	      0xe800000000	                          call 0x4001d8e	      2199	mbyte.c	FUNCTION_49	CALL_1
0x1d4e	          0x8945f4	              mov dword [rbp - 0xc], eax	      2199	mbyte.c	FUNCTION_49	CALL_1
0x1d51	        0x837df401	                cmp dword [rbp - 0xc], 1	      2202	mbyte.c	FUNCTION_49	IF_3
0x1d55	            0x750b	                           jne 0x4001da2	      2202	mbyte.c	FUNCTION_49	IF_3
0x1d57	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2202	mbyte.c	FUNCTION_49	IF_3
0x1d5b	           0xfb600	                   movzx eax, byte [rax]	      2202	mbyte.c	FUNCTION_49	IF_3
0x1d5e	            0x84c0	                             test al, al	      2202	mbyte.c	FUNCTION_49	IF_3
0x1d60	            0x7808	                            js 0x4001daa	      2202	mbyte.c	FUNCTION_49	IF_3
0x1d62	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2202	mbyte.c	FUNCTION_49	IF_3
0x1d65	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      2202	mbyte.c	FUNCTION_49	IF_3
0x1d68	            0x7e0a	                           jle 0x4001db4	      2202	mbyte.c	FUNCTION_49	IF_3
0x1d6a	      0xb801000000	                              mov eax, 1	      2203	mbyte.c	FUNCTION_49	IF_3
0x1d6f	      0xe991000000	                           jmp 0x4001e45	      2203	mbyte.c	FUNCTION_49	IF_3
0x1d74	    0xc745f8000000	                  mov dword [rbp - 8], 0	      2210	mbyte.c	FUNCTION_49
0x1d7b	            0xeb74	                           jmp 0x4001e31	      2212	mbyte.c	FUNCTION_49	WHILE_1
0x1d7d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2216	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x1d80	          0x4863d0	                         movsxd rdx, eax	      2216	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x1d83	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2216	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x1d87	          0x4801d0	                            add rax, rdx	      2216	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x1d8a	           0xfb600	                   movzx eax, byte [rax]	      2216	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x1d8d	            0x84c0	                             test al, al	      2216	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x1d8f	            0x796a	                           jns 0x4001e3b	      2216	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x1d91	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2223	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x1d94	          0x2b45f4	              sub eax, dword [rbp - 0xc]	      2223	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x1d97	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2223	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x1d9a	          0x4863ca	                         movsxd rcx, edx	      2223	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x1d9d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2223	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x1da1	          0x4801ca	                            add rdx, rcx	      2223	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x1da4	            0x89c6	                            mov esi, eax	      2223	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x1da6	          0x4889d7	                            mov rdi, rdx	      2223	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x1da9	      0xe800000000	                          call 0x4001dee	      2223	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x1dae	          0x8945fc	                mov dword [rbp - 4], eax	      2223	mbyte.c	FUNCTION_49	WHILE_1	CALL_2
0x1db1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2224	mbyte.c	FUNCTION_49	WHILE_1	IF_5
0x1db4	          0x2b45f4	              sub eax, dword [rbp - 0xc]	      2224	mbyte.c	FUNCTION_49	WHILE_1	IF_5
0x1db7	          0x3b45fc	                cmp eax, dword [rbp - 4]	      2224	mbyte.c	FUNCTION_49	WHILE_1	IF_5
0x1dba	            0x7c42	                            jl 0x4001e3e	      2224	mbyte.c	FUNCTION_49	WHILE_1	IF_5
0x1dbc	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2227	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x1dbf	          0x4863d0	                         movsxd rdx, eax	      2227	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x1dc2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2227	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x1dc6	          0x4801c2	                            add rdx, rax	      2227	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x1dc9	          0x8b45f8	                mov eax, dword [rbp - 8]	      2227	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x1dcc	          0x4863c8	                         movsxd rcx, eax	      2227	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x1dcf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2227	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x1dd3	          0x4801c8	                            add rax, rcx	      2227	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x1dd6	          0x4889d6	                            mov rsi, rdx	      2227	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x1dd9	          0x4889c7	                            mov rdi, rax	      2227	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x1ddc	      0xe800000000	                          call 0x4001e21	      2227	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x1de1	            0x85c0	                           test eax, eax	      2227	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x1de3	            0x741c	                            je 0x4001e41	      2227	mbyte.c	FUNCTION_49	WHILE_1	IF_6	CALL_3
0x1de5	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2232	mbyte.c	FUNCTION_49	WHILE_1
0x1de8	          0x8945f8	                mov dword [rbp - 8], eax	      2232	mbyte.c	FUNCTION_49	WHILE_1
0x1deb	          0x8b45fc	                mov eax, dword [rbp - 4]	      2234	mbyte.c	FUNCTION_49	WHILE_1
0x1dee	           0x145f4	              add dword [rbp - 0xc], eax	      2234	mbyte.c	FUNCTION_49	WHILE_1
0x1df1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2212	mbyte.c	FUNCTION_49	WHILE_1
0x1df4	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      2212	mbyte.c	FUNCTION_49	WHILE_1
0x1df7	            0x7c84	                            jl 0x4001dbd	      2212	mbyte.c	FUNCTION_49	WHILE_1
0x1df9	            0xeb07	                           jmp 0x4001e42	      2212	mbyte.c	FUNCTION_49	WHILE_1
0x1dfb	              0x90	                                     nop	      2217	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x1dfc	            0xeb04	                           jmp 0x4001e42	      2217	mbyte.c	FUNCTION_49	WHILE_1	IF_4
0x1dfe	              0x90	                                     nop	      2225	mbyte.c	FUNCTION_49	WHILE_1	IF_5
0x1dff	            0xeb01	                           jmp 0x4001e42	      2225	mbyte.c	FUNCTION_49	WHILE_1	IF_5
0x1e01	              0x90	                                     nop	      2228	mbyte.c	FUNCTION_49	WHILE_1	IF_6
0x1e02	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2236	mbyte.c	FUNCTION_49
0x1e05	              0xc9	                                   leave	      2237	mbyte.c	FUNCTION_49
0x1e06	              0xc3	                                     ret	      2237	mbyte.c	FUNCTION_49
utf_ptr2len_len	CALL,0:WHILE,0:functions,0:ELSE,1:IF,3:DO,0:SWITCH,0:FOR,1	43
0x1b8d	              0x55	                                push rbp	      2116	mbyte.c	FUNCTION_47
0x1b8e	          0x4889e5	                            mov rbp, rsp	      2116	mbyte.c	FUNCTION_47
0x1b91	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2116	mbyte.c	FUNCTION_47
0x1b95	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2116	mbyte.c	FUNCTION_47
0x1b98	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2121	mbyte.c	FUNCTION_47
0x1b9c	           0xfb600	                   movzx eax, byte [rax]	      2121	mbyte.c	FUNCTION_47
0x1b9f	           0xfb6c0	                           movzx eax, al	      2121	mbyte.c	FUNCTION_47
0x1ba2	            0x4898	                                    cdqe	      2121	mbyte.c	FUNCTION_47
0x1ba4	     0xfb680000000	                   movzx eax, byte [rax]	      2121	mbyte.c	FUNCTION_47
0x1bab	           0xfbec0	                           movsx eax, al	      2121	mbyte.c	FUNCTION_47
0x1bae	          0x8945fc	                mov dword [rbp - 4], eax	      2121	mbyte.c	FUNCTION_47
0x1bb1	        0x837dfc01	                  cmp dword [rbp - 4], 1	      2122	mbyte.c	FUNCTION_47	IF_1
0x1bb5	            0x7507	                           jne 0x4001bfe	      2122	mbyte.c	FUNCTION_47	IF_1
0x1bb7	      0xb801000000	                              mov eax, 1	      2123	mbyte.c	FUNCTION_47	IF_1
0x1bbc	            0xeb54	                           jmp 0x4001c52	      2123	mbyte.c	FUNCTION_47	IF_1
0x1bbe	          0x8b45fc	                mov eax, dword [rbp - 4]	      2124	mbyte.c	FUNCTION_47	IF_2
0x1bc1	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      2124	mbyte.c	FUNCTION_47	IF_2
0x1bc4	            0x7e08	                           jle 0x4001c0e	      2124	mbyte.c	FUNCTION_47	IF_2
0x1bc6	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      2125	mbyte.c	FUNCTION_47	IF_2
0x1bc9	          0x8945f8	                mov dword [rbp - 8], eax	      2125	mbyte.c	FUNCTION_47	IF_2
0x1bcc	            0xeb06	                           jmp 0x4001c14	      2125	mbyte.c	FUNCTION_47	IF_2
0x1bce	          0x8b45fc	                mov eax, dword [rbp - 4]	      2127	mbyte.c	FUNCTION_47	ELSE_1
0x1bd1	          0x8945f8	                mov dword [rbp - 8], eax	      2127	mbyte.c	FUNCTION_47	ELSE_1
0x1bd4	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      2128	mbyte.c	FUNCTION_47	FOR_1
0x1bdb	            0xeb2a	                           jmp 0x4001c47	      2128	mbyte.c	FUNCTION_47	FOR_1
0x1bdd	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2129	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x1be0	          0x4863d0	                         movsxd rdx, eax	      2129	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x1be3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2129	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x1be7	          0x4801d0	                            add rax, rdx	      2129	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x1bea	           0xfb600	                   movzx eax, byte [rax]	      2129	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x1bed	           0xfb6c0	                           movzx eax, al	      2129	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x1bf0	      0x25c0000000	                           and eax, 0xc0	      2129	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x1bf5	      0x3d80000000	                           cmp eax, 0x80	      2129	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x1bfa	            0x7407	                            je 0x4001c43	      2129	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x1bfc	      0xb801000000	                              mov eax, 1	      2130	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x1c01	            0xeb0f	                           jmp 0x4001c52	      2130	mbyte.c	FUNCTION_47	FOR_1	IF_3
0x1c03	        0x8345f401	                add dword [rbp - 0xc], 1	      2128	mbyte.c	FUNCTION_47	FOR_1
0x1c07	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2128	mbyte.c	FUNCTION_47	FOR_1
0x1c0a	          0x3b45f8	                cmp eax, dword [rbp - 8]	      2128	mbyte.c	FUNCTION_47	FOR_1
0x1c0d	            0x7cce	                            jl 0x4001c1d	      2128	mbyte.c	FUNCTION_47	FOR_1
0x1c0f	          0x8b45fc	                mov eax, dword [rbp - 4]	      2131	mbyte.c	FUNCTION_47
0x1c12	              0x5d	                                 pop rbp	      2132	mbyte.c	FUNCTION_47
0x1c13	              0xc3	                                     ret	      2132	mbyte.c	FUNCTION_47
convert_input_safe	CALL,5:WHILE,0:functions,0:ELSE,1:IF,4:DO,0:SWITCH,0:FOR,0	80
0x4539	              0x55	                                push rbp	      6677	mbyte.c	FUNCTION_143
0x453a	          0x4889e5	                            mov rbp, rsp	      6677	mbyte.c	FUNCTION_143
0x453d	        0x4883ec40	                           sub rsp, 0x40	      6677	mbyte.c	FUNCTION_143
0x4541	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      6677	mbyte.c	FUNCTION_143
0x4545	          0x8975d4	             mov dword [rbp - 0x2c], esi	      6677	mbyte.c	FUNCTION_143
0x4548	          0x8955d0	             mov dword [rbp - 0x30], edx	      6677	mbyte.c	FUNCTION_143
0x454b	        0x48894dc8	             mov qword [rbp - 0x38], rcx	      6677	mbyte.c	FUNCTION_143
0x454f	        0x4c8945c0	              mov qword [rbp - 0x40], r8	      6677	mbyte.c	FUNCTION_143
0x4553	    0x64488b042528	                mov rax, qword fs:[0x28]	      6677	mbyte.c	FUNCTION_143
0x455c	        0x488945f8	                mov qword [rbp - 8], rax	      6677	mbyte.c	FUNCTION_143
0x4560	            0x31c0	                            xor eax, eax	      6677	mbyte.c	FUNCTION_143
0x4562	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6679	mbyte.c	FUNCTION_143
0x4565	          0x8945e8	             mov dword [rbp - 0x18], eax	      6679	mbyte.c	FUNCTION_143
0x4568	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      6680	mbyte.c	FUNCTION_143
0x456f	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      6682	mbyte.c	FUNCTION_143	CALL_1
0x4574	            0x7406	                            je 0x40045bc	      6682	mbyte.c	FUNCTION_143	CALL_1
0x4576	        0x488d45ec	                   lea rax, [rbp - 0x14]	      6682	mbyte.c	FUNCTION_143	CALL_1
0x457a	            0xeb05	                           jmp 0x40045c1	      6682	mbyte.c	FUNCTION_143	CALL_1
0x457c	      0xb800000000	                              mov eax, 0	      6682	mbyte.c	FUNCTION_143	CALL_1
0x4581	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      6682	mbyte.c	FUNCTION_143	CALL_1
0x4585	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      6682	mbyte.c	FUNCTION_143	CALL_1
0x4589	          0x4889c1	                            mov rcx, rax	      6682	mbyte.c	FUNCTION_143	CALL_1
0x458c	      0xbf00000000	                              mov edi, 0	      6682	mbyte.c	FUNCTION_143	CALL_1
0x4591	      0xe800000000	                          call 0x40045d6	      6682	mbyte.c	FUNCTION_143	CALL_1
0x4596	        0x488945f0	             mov qword [rbp - 0x10], rax	      6682	mbyte.c	FUNCTION_143	CALL_1
0x459a	      0x48837df000	               cmp qword [rbp - 0x10], 0	      6684	mbyte.c	FUNCTION_143	IF_1
0x459f	     0xf8492000000	                            je 0x4004677	      6684	mbyte.c	FUNCTION_143	IF_1
0x45a5	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      6686	mbyte.c	FUNCTION_143	IF_1	IF_2
0x45a8	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      6686	mbyte.c	FUNCTION_143	IF_1	IF_2
0x45ab	            0x7f78	                            jg 0x4004665	      6686	mbyte.c	FUNCTION_143	IF_1	IF_2
0x45ad	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      6688	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3
0x45b0	            0x85c0	                           test eax, eax	      6688	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3
0x45b2	            0x7e56	                           jle 0x400464a	      6688	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3
0x45b4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      6691	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_2
0x45b7	            0x89c7	                            mov edi, eax	      6691	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_2
0x45b9	      0xe800000000	                          call 0x40045fe	      6691	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_2
0x45be	          0x4889c2	                            mov rdx, rax	      6691	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_2
0x45c1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6691	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_2
0x45c5	          0x488910	                    mov qword [rax], rdx	      6691	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_2
0x45c8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6692	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	IF_4
0x45cc	          0x488b00	                    mov rax, qword [rax]	      6692	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	IF_4
0x45cf	          0x4885c0	                           test rax, rax	      6692	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	IF_4
0x45d2	            0x742d	                            je 0x4004641	      6692	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	IF_4
0x45d4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      6693	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x45d7	          0x4863d0	                         movsxd rdx, eax	      6693	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x45da	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6693	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x45dd	          0x4863c8	                         movsxd rcx, eax	      6693	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x45e0	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      6693	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x45e3	            0x4898	                                    cdqe	      6693	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x45e5	          0x4829c1	                            sub rcx, rax	      6693	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x45e8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6693	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x45ec	          0x4801c1	                            add rcx, rax	      6693	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x45ef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6693	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x45f3	          0x488b00	                    mov rax, qword [rax]	      6693	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x45f6	          0x4889ce	                            mov rsi, rcx	      6693	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x45f9	          0x4889c7	                            mov rdi, rax	      6693	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x45fc	      0xe800000000	                          call 0x4004641	      6693	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3	CALL_3
0x4601	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      6694	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3
0x4604	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6694	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3
0x4608	            0x8910	                    mov dword [rax], edx	      6694	mbyte.c	FUNCTION_143	IF_1	IF_2	IF_3
0x460a	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      6696	mbyte.c	FUNCTION_143	IF_1	IF_2	CALL_4
0x460d	          0x4863d0	                         movsxd rdx, eax	      6696	mbyte.c	FUNCTION_143	IF_1	IF_2	CALL_4
0x4610	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      6696	mbyte.c	FUNCTION_143	IF_1	IF_2	CALL_4
0x4614	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6696	mbyte.c	FUNCTION_143	IF_1	IF_2	CALL_4
0x4618	          0x4889ce	                            mov rsi, rcx	      6696	mbyte.c	FUNCTION_143	IF_1	IF_2	CALL_4
0x461b	          0x4889c7	                            mov rdi, rax	      6696	mbyte.c	FUNCTION_143	IF_1	IF_2	CALL_4
0x461e	      0xe800000000	                          call 0x4004663	      6696	mbyte.c	FUNCTION_143	IF_1	IF_2	CALL_4
0x4623	            0xeb06	                           jmp 0x400466b	      6696	mbyte.c	FUNCTION_143	IF_1	IF_2	CALL_4
0x4625	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6701	mbyte.c	FUNCTION_143	IF_1	ELSE_1
0x4628	          0x8945e8	             mov dword [rbp - 0x18], eax	      6701	mbyte.c	FUNCTION_143	IF_1	ELSE_1
0x462b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6702	mbyte.c	FUNCTION_143	IF_1	CALL_5
0x462f	          0x4889c7	                            mov rdi, rax	      6702	mbyte.c	FUNCTION_143	IF_1	CALL_5
0x4632	      0xe800000000	                          call 0x4004677	      6702	mbyte.c	FUNCTION_143	IF_1	CALL_5
0x4637	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      6704	mbyte.c	FUNCTION_143
0x463a	        0x488b75f8	                mov rsi, qword [rbp - 8]	      6705	mbyte.c	FUNCTION_143
0x463e	    0x644833342528	                xor rsi, qword fs:[0x28]	      6705	mbyte.c	FUNCTION_143
0x4647	            0x7405	                            je 0x400468e	      6705	mbyte.c	FUNCTION_143
0x4649	      0xe800000000	                          call 0x400468e	      6705	mbyte.c	FUNCTION_143
0x464e	              0xc9	                                   leave	      6705	mbyte.c	FUNCTION_143
0x464f	              0xc3	                                     ret	      6705	mbyte.c	FUNCTION_143
utf_islower	CALL,1:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	16
0x242c	              0x55	                                push rbp	      3548	mbyte.c	FUNCTION_61
0x242d	          0x4889e5	                            mov rbp, rsp	      3548	mbyte.c	FUNCTION_61
0x2430	        0x4883ec10	                           sub rsp, 0x10	      3548	mbyte.c	FUNCTION_61
0x2434	          0x897dfc	                mov dword [rbp - 4], edi	      3548	mbyte.c	FUNCTION_61
0x2437	          0x8b45fc	                mov eax, dword [rbp - 4]	      3550	mbyte.c	FUNCTION_61	CALL_1
0x243a	            0x89c7	                            mov edi, eax	      3550	mbyte.c	FUNCTION_61	CALL_1
0x243c	      0xe800000000	                          call 0x4002481	      3550	mbyte.c	FUNCTION_61	CALL_1
0x2441	          0x3b45fc	                cmp eax, dword [rbp - 4]	      3550	mbyte.c	FUNCTION_61	CALL_1
0x2444	            0x7509	                           jne 0x400248f	      3550	mbyte.c	FUNCTION_61	CALL_1
0x2446	    0x817dfcdf0000	               cmp dword [rbp - 4], 0xdf	      3550	mbyte.c	FUNCTION_61	CALL_1
0x244d	            0x7507	                           jne 0x4002496	      3550	mbyte.c	FUNCTION_61	CALL_1
0x244f	      0xb801000000	                              mov eax, 1	      3550	mbyte.c	FUNCTION_61	CALL_1
0x2454	            0xeb05	                           jmp 0x400249b	      3550	mbyte.c	FUNCTION_61	CALL_1
0x2456	      0xb800000000	                              mov eax, 0	      3550	mbyte.c	FUNCTION_61	CALL_1
0x245b	              0xc9	                                   leave	      3551	mbyte.c	FUNCTION_61
0x245c	              0xc3	                                     ret	      3551	mbyte.c	FUNCTION_61
utf_tolower	CALL,4:WHILE,0:functions,0:ELSE,0:IF,3:DO,0:SWITCH,0:FOR,0	40
0x245d	              0x55	                                push rbp	      3559	mbyte.c	FUNCTION_62
0x245e	          0x4889e5	                            mov rbp, rsp	      3559	mbyte.c	FUNCTION_62
0x2461	        0x4883ec10	                           sub rsp, 0x10	      3559	mbyte.c	FUNCTION_62
0x2465	          0x897dfc	                mov dword [rbp - 4], edi	      3559	mbyte.c	FUNCTION_62
0x2468	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      3561	mbyte.c	FUNCTION_62	IF_1
0x246c	            0x7f26	                            jg 0x40024d4	      3561	mbyte.c	FUNCTION_62	IF_1
0x246e	    0x8b0500000000	            mov eax, dword [0x040024b4] 	      3561	mbyte.c	FUNCTION_62	IF_1
0x2474	          0x83e002	                              and eax, 2	      3561	mbyte.c	FUNCTION_62	IF_1
0x2477	            0x85c0	                           test eax, eax	      3561	mbyte.c	FUNCTION_62	IF_1
0x2479	            0x7419	                            je 0x40024d4	      3561	mbyte.c	FUNCTION_62	IF_1
0x247b	        0x837dfc40	               cmp dword [rbp - 4], 0x40	      3562	mbyte.c	FUNCTION_62	CALL_1
0x247f	            0x7e0e	                           jle 0x40024cf	      3562	mbyte.c	FUNCTION_62	CALL_1
0x2481	        0x837dfc5a	               cmp dword [rbp - 4], 0x5a	      3562	mbyte.c	FUNCTION_62	CALL_1
0x2485	            0x7f08	                            jg 0x40024cf	      3562	mbyte.c	FUNCTION_62	CALL_1
0x2487	          0x8b45fc	                mov eax, dword [rbp - 4]	      3562	mbyte.c	FUNCTION_62	CALL_1
0x248a	          0x83c020	                           add eax, 0x20	      3562	mbyte.c	FUNCTION_62	CALL_1
0x248d	            0xeb44	                           jmp 0x4002513	      3562	mbyte.c	FUNCTION_62	CALL_1
0x248f	          0x8b45fc	                mov eax, dword [rbp - 4]	      3562	mbyte.c	FUNCTION_62	CALL_1
0x2492	            0xeb3f	                           jmp 0x4002513	      3562	mbyte.c	FUNCTION_62	CALL_1
0x2494	    0x8b0500000000	            mov eax, dword [0x040024da] 	      3566	mbyte.c	FUNCTION_62	IF_2
0x249a	          0x83e001	                              and eax, 1	      3566	mbyte.c	FUNCTION_62	IF_2
0x249d	            0x85c0	                           test eax, eax	      3566	mbyte.c	FUNCTION_62	IF_2
0x249f	            0x750c	                           jne 0x40024ed	      3566	mbyte.c	FUNCTION_62	IF_2
0x24a1	          0x8b45fc	                mov eax, dword [rbp - 4]	      3567	mbyte.c	FUNCTION_62	CALL_2
0x24a4	            0x89c7	                            mov edi, eax	      3567	mbyte.c	FUNCTION_62	CALL_2
0x24a6	      0xe800000000	                          call 0x40024eb	      3567	mbyte.c	FUNCTION_62	CALL_2
0x24ab	            0xeb26	                           jmp 0x4002513	      3567	mbyte.c	FUNCTION_62	CALL_2
0x24ad	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      3571	mbyte.c	FUNCTION_62	IF_3
0x24b1	            0x7f0c	                            jg 0x40024ff	      3571	mbyte.c	FUNCTION_62	IF_3
0x24b3	          0x8b45fc	                mov eax, dword [rbp - 4]	      3572	mbyte.c	FUNCTION_62	CALL_3
0x24b6	            0x89c7	                            mov edi, eax	      3572	mbyte.c	FUNCTION_62	CALL_3
0x24b8	      0xe800000000	                          call 0x40024fd	      3572	mbyte.c	FUNCTION_62	CALL_3
0x24bd	            0xeb14	                           jmp 0x4002513	      3572	mbyte.c	FUNCTION_62	CALL_3
0x24bf	          0x8b45fc	                mov eax, dword [rbp - 4]	      3575	mbyte.c	FUNCTION_62	CALL_4
0x24c2	      0xba500a0000	                          mov edx, 0xa50	      3575	mbyte.c	FUNCTION_62	CALL_4
0x24c7	      0xbe00000000	                              mov esi, 0	      3575	mbyte.c	FUNCTION_62	CALL_4
0x24cc	            0x89c7	                            mov edi, eax	      3575	mbyte.c	FUNCTION_62	CALL_4
0x24ce	      0xe891fdffff	                    call sym.utf_convert	      3575	mbyte.c	FUNCTION_62	CALL_4
0x24d3	              0xc9	                                   leave	      3576	mbyte.c	FUNCTION_62
0x24d4	              0xc3	                                     ret	      3576	mbyte.c	FUNCTION_62
mb_charlen_len	CALL,0:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,1	29
0x33a9	              0x55	                                push rbp	      4166	mbyte.c	FUNCTION_81
0x33aa	          0x4889e5	                            mov rbp, rsp	      4166	mbyte.c	FUNCTION_81
0x33ad	        0x4883ec20	                           sub rsp, 0x20	      4166	mbyte.c	FUNCTION_81
0x33b1	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4166	mbyte.c	FUNCTION_81
0x33b5	          0x8975e4	             mov dword [rbp - 0x1c], esi	      4166	mbyte.c	FUNCTION_81
0x33b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4167	mbyte.c	FUNCTION_81
0x33bc	        0x488945f8	                mov qword [rbp - 8], rax	      4167	mbyte.c	FUNCTION_81
0x33c0	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      4170	mbyte.c	FUNCTION_81	FOR_1
0x33c7	            0xeb1a	                           jmp 0x4003423	      4170	mbyte.c	FUNCTION_81	FOR_1
0x33c9	    0x488b05000000	            mov rax, qword [0x04003410] 	      4171	mbyte.c	FUNCTION_81	FOR_1
0x33d0	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4171	mbyte.c	FUNCTION_81	FOR_1
0x33d4	          0x4889d7	                            mov rdi, rdx	      4171	mbyte.c	FUNCTION_81	FOR_1
0x33d7	            0xffd0	                                call rax	      4171	mbyte.c	FUNCTION_81	FOR_1
0x33d9	            0x4898	                                    cdqe	      4171	mbyte.c	FUNCTION_81	FOR_1
0x33db	        0x480145f8	                add qword [rbp - 8], rax	      4171	mbyte.c	FUNCTION_81	FOR_1
0x33df	        0x8345f401	                add dword [rbp - 0xc], 1	      4170	mbyte.c	FUNCTION_81	FOR_1
0x33e3	        0x488b45f8	                mov rax, qword [rbp - 8]	      4170	mbyte.c	FUNCTION_81	FOR_1
0x33e7	           0xfb600	                   movzx eax, byte [rax]	      4170	mbyte.c	FUNCTION_81	FOR_1
0x33ea	            0x84c0	                             test al, al	      4170	mbyte.c	FUNCTION_81	FOR_1
0x33ec	            0x7413	                            je 0x4003441	      4170	mbyte.c	FUNCTION_81	FOR_1
0x33ee	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4170	mbyte.c	FUNCTION_81	FOR_1
0x33f1	          0x4863d0	                         movsxd rdx, eax	      4170	mbyte.c	FUNCTION_81	FOR_1
0x33f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4170	mbyte.c	FUNCTION_81	FOR_1
0x33f8	          0x4801d0	                            add rax, rdx	      4170	mbyte.c	FUNCTION_81	FOR_1
0x33fb	        0x483b45f8	                cmp rax, qword [rbp - 8]	      4170	mbyte.c	FUNCTION_81	FOR_1
0x33ff	            0x77c8	                            ja 0x4003409	      4170	mbyte.c	FUNCTION_81	FOR_1
0x3401	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4173	mbyte.c	FUNCTION_81
0x3404	              0xc9	                                   leave	      4174	mbyte.c	FUNCTION_81
0x3405	              0xc3	                                     ret	      4174	mbyte.c	FUNCTION_81
utf_byte2len	CALL,0:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	9
0x1b75	              0x55	                                push rbp	      2102	mbyte.c	FUNCTION_46
0x1b76	          0x4889e5	                            mov rbp, rsp	      2102	mbyte.c	FUNCTION_46
0x1b79	          0x897dfc	                mov dword [rbp - 4], edi	      2102	mbyte.c	FUNCTION_46
0x1b7c	          0x8b45fc	                mov eax, dword [rbp - 4]	      2103	mbyte.c	FUNCTION_46
0x1b7f	            0x4898	                                    cdqe	      2103	mbyte.c	FUNCTION_46
0x1b81	     0xfb680000000	                   movzx eax, byte [rax]	      2103	mbyte.c	FUNCTION_46
0x1b88	           0xfbec0	                           movsx eax, al	      2103	mbyte.c	FUNCTION_46
0x1b8b	              0x5d	                                 pop rbp	      2104	mbyte.c	FUNCTION_46
0x1b8c	              0xc3	                                     ret	      2104	mbyte.c	FUNCTION_46
utf_strnicmp	CALL,8:WHILE,1:functions,0:ELSE,1:IF,11:DO,0:SWITCH,0:FOR,1	174
0x24f5	              0x55	                                push rbp	      3590	mbyte.c	FUNCTION_64
0x24f6	          0x4889e5	                            mov rbp, rsp	      3590	mbyte.c	FUNCTION_64
0x24f9	              0x53	                                push rbx	      3590	mbyte.c	FUNCTION_64
0x24fa	        0x4883ec48	                           sub rsp, 0x48	      3590	mbyte.c	FUNCTION_64
0x24fe	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      3590	mbyte.c	FUNCTION_64
0x2502	        0x488975c0	             mov qword [rbp - 0x40], rsi	      3590	mbyte.c	FUNCTION_64
0x2506	        0x488955b8	             mov qword [rbp - 0x48], rdx	      3590	mbyte.c	FUNCTION_64
0x250a	        0x48894db0	             mov qword [rbp - 0x50], rcx	      3590	mbyte.c	FUNCTION_64
0x250e	    0x64488b042528	                mov rax, qword fs:[0x28]	      3590	mbyte.c	FUNCTION_64
0x2517	        0x488945e8	             mov qword [rbp - 0x18], rax	      3590	mbyte.c	FUNCTION_64
0x251b	            0x31c0	                            xor eax, eax	      3590	mbyte.c	FUNCTION_64
0x251d	        0x488d55b8	                   lea rdx, [rbp - 0x48]	      3596	mbyte.c	FUNCTION_64	FOR_1	CALL_1
0x2521	        0x488d45c8	                   lea rax, [rbp - 0x38]	      3596	mbyte.c	FUNCTION_64	FOR_1	CALL_1
0x2525	          0x4889d6	                            mov rsi, rdx	      3596	mbyte.c	FUNCTION_64	FOR_1	CALL_1
0x2528	          0x4889c7	                            mov rdi, rax	      3596	mbyte.c	FUNCTION_64	FOR_1	CALL_1
0x252b	      0xe8cfefffff	         call sym.utf_safe_read_char_adv	      3596	mbyte.c	FUNCTION_64	FOR_1	CALL_1
0x2530	          0x8945d4	             mov dword [rbp - 0x2c], eax	      3596	mbyte.c	FUNCTION_64	FOR_1	CALL_1
0x2533	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      3597	mbyte.c	FUNCTION_64	FOR_1	CALL_2
0x2537	        0x488d45c0	                   lea rax, [rbp - 0x40]	      3597	mbyte.c	FUNCTION_64	FOR_1	CALL_2
0x253b	          0x4889d6	                            mov rsi, rdx	      3597	mbyte.c	FUNCTION_64	FOR_1	CALL_2
0x253e	          0x4889c7	                            mov rdi, rax	      3597	mbyte.c	FUNCTION_64	FOR_1	CALL_2
0x2541	      0xe8b9efffff	         call sym.utf_safe_read_char_adv	      3597	mbyte.c	FUNCTION_64	FOR_1	CALL_2
0x2546	          0x8945d8	             mov dword [rbp - 0x28], eax	      3597	mbyte.c	FUNCTION_64	FOR_1	CALL_2
0x2549	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3599	mbyte.c	FUNCTION_64	FOR_1	IF_1
0x254d	            0x7e3c	                           jle 0x40025cb	      3599	mbyte.c	FUNCTION_64	FOR_1	IF_1
0x254f	        0x837dd800	               cmp dword [rbp - 0x28], 0	      3599	mbyte.c	FUNCTION_64	FOR_1	IF_1
0x2553	            0x7e36	                           jle 0x40025cb	      3599	mbyte.c	FUNCTION_64	FOR_1	IF_1
0x2555	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      3602	mbyte.c	FUNCTION_64	FOR_1	IF_2
0x2558	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	      3602	mbyte.c	FUNCTION_64	FOR_1	IF_2
0x255b	            0x742b	                            je 0x40025c8	      3602	mbyte.c	FUNCTION_64	FOR_1	IF_2
0x255d	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      3605	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x2560	            0x89c7	                            mov edi, eax	      3605	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x2562	      0xe800000000	                          call 0x40025a7	      3605	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x2567	            0x89c3	                            mov ebx, eax	      3605	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x2569	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3605	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x256c	            0x89c7	                            mov edi, eax	      3605	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x256e	      0xe800000000	                          call 0x40025b3	      3605	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x2573	            0x29c3	                            sub ebx, eax	      3605	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x2575	            0x89d8	                            mov eax, ebx	      3605	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x2577	          0x8945dc	             mov dword [rbp - 0x24], eax	      3605	mbyte.c	FUNCTION_64	FOR_1	CALL_4
0x257a	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3606	mbyte.c	FUNCTION_64	FOR_1	IF_3
0x257e	            0x749d	                            je 0x400255d	      3606	mbyte.c	FUNCTION_64	FOR_1	IF_3
0x2580	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3607	mbyte.c	FUNCTION_64	FOR_1	IF_3
0x2583	      0xe99f010000	                           jmp 0x4002767	      3607	mbyte.c	FUNCTION_64	FOR_1	IF_3
0x2588	              0x90	                                     nop	      3603	mbyte.c	FUNCTION_64	FOR_1	IF_2
0x2589	            0xeb92	                           jmp 0x400255d	      3608	mbyte.c	FUNCTION_64	FOR_1
0x258b	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3612	mbyte.c	FUNCTION_64	IF_4
0x258f	            0x7406	                            je 0x40025d7	      3612	mbyte.c	FUNCTION_64	IF_4
0x2591	        0x837dd800	               cmp dword [rbp - 0x28], 0	      3612	mbyte.c	FUNCTION_64	IF_4
0x2595	            0x7530	                           jne 0x4002607	      3612	mbyte.c	FUNCTION_64	IF_4
0x2597	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3615	mbyte.c	FUNCTION_64	IF_4	IF_5
0x259b	            0x7510	                           jne 0x40025ed	      3615	mbyte.c	FUNCTION_64	IF_4	IF_5
0x259d	        0x837dd800	               cmp dword [rbp - 0x28], 0	      3615	mbyte.c	FUNCTION_64	IF_4	IF_5
0x25a1	            0x750a	                           jne 0x40025ed	      3615	mbyte.c	FUNCTION_64	IF_4	IF_5
0x25a3	      0xb800000000	                              mov eax, 0	      3616	mbyte.c	FUNCTION_64	IF_4	IF_5
0x25a8	      0xe97a010000	                           jmp 0x4002767	      3616	mbyte.c	FUNCTION_64	IF_4	IF_5
0x25ad	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3617	mbyte.c	FUNCTION_64	IF_4
0x25b1	            0x750a	                           jne 0x40025fd	      3617	mbyte.c	FUNCTION_64	IF_4
0x25b3	      0xb8ffffffff	                     mov eax, 0xffffffff	      3617	mbyte.c	FUNCTION_64	IF_4
0x25b8	      0xe96a010000	                           jmp 0x4002767	      3617	mbyte.c	FUNCTION_64	IF_4
0x25bd	      0xb801000000	                              mov eax, 1	      3617	mbyte.c	FUNCTION_64	IF_4
0x25c2	      0xe960010000	                           jmp 0x4002767	      3617	mbyte.c	FUNCTION_64	IF_4
0x25c7	        0x837dd4ff	cmp dword [rbp - 0x2c], 0xffffffffffffffff	      3627	mbyte.c	FUNCTION_64	IF_6
0x25cb	            0x7430	                            je 0x400263d	      3627	mbyte.c	FUNCTION_64	IF_6
0x25cd	        0x837dd8ff	cmp dword [rbp - 0x28], 0xffffffffffffffff	      3627	mbyte.c	FUNCTION_64	IF_6
0x25d1	            0x752a	                           jne 0x400263d	      3627	mbyte.c	FUNCTION_64	IF_6
0x25d3	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      3629	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x25d6	            0x89c7	                            mov edi, eax	      3629	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x25d8	      0xe800000000	                          call 0x400261d	      3629	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x25dd	            0x89c2	                            mov edx, eax	      3629	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x25df	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3629	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x25e3	          0x4889c6	                            mov rsi, rax	      3629	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x25e6	            0x89d7	                            mov edi, edx	      3629	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x25e8	      0xe800000000	                          call 0x400262d	      3629	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x25ed	            0x4898	                                    cdqe	      3629	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x25ef	        0x488945b8	             mov qword [rbp - 0x48], rax	      3629	mbyte.c	FUNCTION_64	IF_6	CALL_6
0x25f3	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3630	mbyte.c	FUNCTION_64	IF_6
0x25f7	        0x488945c8	             mov qword [rbp - 0x38], rax	      3630	mbyte.c	FUNCTION_64	IF_6
0x25fb	            0xeb3c	                           jmp 0x4002679	      3630	mbyte.c	FUNCTION_64	IF_6
0x25fd	        0x837dd8ff	cmp dword [rbp - 0x28], 0xffffffffffffffff	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7
0x2601	     0xf848d000000	                            je 0x40026d4	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7
0x2607	        0x837dd4ff	cmp dword [rbp - 0x2c], 0xffffffffffffffff	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7
0x260b	     0xf8583000000	                           jne 0x40026d4	      3632	mbyte.c	FUNCTION_64	ELSE_1	IF_7
0x2611	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3634	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x2614	            0x89c7	                            mov edi, eax	      3634	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x2616	      0xe800000000	                          call 0x400265b	      3634	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x261b	            0x89c2	                            mov edx, eax	      3634	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x261d	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3634	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x2621	          0x4889c6	                            mov rsi, rax	      3634	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x2624	            0x89d7	                            mov edi, edx	      3634	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x2626	      0xe800000000	                          call 0x400266b	      3634	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x262b	            0x4898	                                    cdqe	      3634	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x262d	        0x488945b0	             mov qword [rbp - 0x50], rax	      3634	mbyte.c	FUNCTION_64	ELSE_1	IF_7	CALL_8
0x2631	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3635	mbyte.c	FUNCTION_64	ELSE_1	IF_7
0x2635	        0x488945c0	             mov qword [rbp - 0x40], rax	      3635	mbyte.c	FUNCTION_64	ELSE_1	IF_7
0x2639	            0xeb59	                           jmp 0x40026d4	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x263b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3640	mbyte.c	FUNCTION_64	WHILE_1
0x263f	           0xfb600	                   movzx eax, byte [rax]	      3640	mbyte.c	FUNCTION_64	WHILE_1
0x2642	           0xfb6d0	                           movzx edx, al	      3640	mbyte.c	FUNCTION_64	WHILE_1
0x2645	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3640	mbyte.c	FUNCTION_64	WHILE_1
0x2649	           0xfb600	                   movzx eax, byte [rax]	      3640	mbyte.c	FUNCTION_64	WHILE_1
0x264c	           0xfb6c0	                           movzx eax, al	      3640	mbyte.c	FUNCTION_64	WHILE_1
0x264f	            0x29c2	                            sub edx, eax	      3640	mbyte.c	FUNCTION_64	WHILE_1
0x2651	            0x89d0	                            mov eax, edx	      3640	mbyte.c	FUNCTION_64	WHILE_1
0x2653	          0x8945dc	             mov dword [rbp - 0x24], eax	      3640	mbyte.c	FUNCTION_64	WHILE_1
0x2656	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3641	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x265a	            0x7408	                            je 0x40026a4	      3641	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x265c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3642	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x265f	      0xe9c3000000	                           jmp 0x4002767	      3642	mbyte.c	FUNCTION_64	WHILE_1	IF_8
0x2664	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3644	mbyte.c	FUNCTION_64	WHILE_1
0x2668	        0x4883c001	                              add rax, 1	      3644	mbyte.c	FUNCTION_64	WHILE_1
0x266c	        0x488945c8	             mov qword [rbp - 0x38], rax	      3644	mbyte.c	FUNCTION_64	WHILE_1
0x2670	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3645	mbyte.c	FUNCTION_64	WHILE_1
0x2674	        0x4883c001	                              add rax, 1	      3645	mbyte.c	FUNCTION_64	WHILE_1
0x2678	        0x488945c0	             mov qword [rbp - 0x40], rax	      3645	mbyte.c	FUNCTION_64	WHILE_1
0x267c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3646	mbyte.c	FUNCTION_64	WHILE_1
0x2680	        0x4883e801	                              sub rax, 1	      3646	mbyte.c	FUNCTION_64	WHILE_1
0x2684	        0x488945b8	             mov qword [rbp - 0x48], rax	      3646	mbyte.c	FUNCTION_64	WHILE_1
0x2688	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3647	mbyte.c	FUNCTION_64	WHILE_1
0x268c	        0x4883e801	                              sub rax, 1	      3647	mbyte.c	FUNCTION_64	WHILE_1
0x2690	        0x488945b0	             mov qword [rbp - 0x50], rax	      3647	mbyte.c	FUNCTION_64	WHILE_1
0x2694	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x2698	          0x4885c0	                           test rax, rax	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x269b	            0x7423	                            je 0x4002700	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x269d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x26a1	          0x4885c0	                           test rax, rax	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x26a4	            0x741a	                            je 0x4002700	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x26a6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x26aa	           0xfb600	                   movzx eax, byte [rax]	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x26ad	            0x84c0	                             test al, al	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x26af	            0x740f	                            je 0x4002700	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x26b1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x26b5	           0xfb600	                   movzx eax, byte [rax]	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x26b8	            0x84c0	                             test al, al	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x26ba	     0xf857bffffff	                           jne 0x400267b	      3638	mbyte.c	FUNCTION_64	WHILE_1
0x26c0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3650	mbyte.c	FUNCTION_64	IF_9
0x26c4	          0x4885c0	                           test rax, rax	      3650	mbyte.c	FUNCTION_64	IF_9
0x26c7	            0x7413	                            je 0x400271c	      3650	mbyte.c	FUNCTION_64	IF_9
0x26c9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3650	mbyte.c	FUNCTION_64	IF_9
0x26cd	           0xfb600	                   movzx eax, byte [rax]	      3650	mbyte.c	FUNCTION_64	IF_9
0x26d0	            0x84c0	                             test al, al	      3650	mbyte.c	FUNCTION_64	IF_9
0x26d2	            0x7508	                           jne 0x400271c	      3650	mbyte.c	FUNCTION_64	IF_9
0x26d4	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      3651	mbyte.c	FUNCTION_64	IF_9
0x26dc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3652	mbyte.c	FUNCTION_64	IF_10
0x26e0	          0x4885c0	                           test rax, rax	      3652	mbyte.c	FUNCTION_64	IF_10
0x26e3	            0x7413	                            je 0x4002738	      3652	mbyte.c	FUNCTION_64	IF_10
0x26e5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3652	mbyte.c	FUNCTION_64	IF_10
0x26e9	           0xfb600	                   movzx eax, byte [rax]	      3652	mbyte.c	FUNCTION_64	IF_10
0x26ec	            0x84c0	                             test al, al	      3652	mbyte.c	FUNCTION_64	IF_10
0x26ee	            0x7508	                           jne 0x4002738	      3652	mbyte.c	FUNCTION_64	IF_10
0x26f0	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      3653	mbyte.c	FUNCTION_64	IF_10
0x26f8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3655	mbyte.c	FUNCTION_64	IF_11
0x26fc	          0x4885c0	                           test rax, rax	      3655	mbyte.c	FUNCTION_64	IF_11
0x26ff	            0x7510	                           jne 0x4002751	      3655	mbyte.c	FUNCTION_64	IF_11
0x2701	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3655	mbyte.c	FUNCTION_64	IF_11
0x2705	          0x4885c0	                           test rax, rax	      3655	mbyte.c	FUNCTION_64	IF_11
0x2708	            0x7507	                           jne 0x4002751	      3655	mbyte.c	FUNCTION_64	IF_11
0x270a	      0xb800000000	                              mov eax, 0	      3656	mbyte.c	FUNCTION_64	IF_11
0x270f	            0xeb16	                           jmp 0x4002767	      3656	mbyte.c	FUNCTION_64	IF_11
0x2711	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3657	mbyte.c	FUNCTION_64
0x2715	          0x4885c0	                           test rax, rax	      3657	mbyte.c	FUNCTION_64
0x2718	            0x7507	                           jne 0x4002761	      3657	mbyte.c	FUNCTION_64
0x271a	      0xb8ffffffff	                     mov eax, 0xffffffff	      3657	mbyte.c	FUNCTION_64
0x271f	            0xeb06	                           jmp 0x4002767	      3657	mbyte.c	FUNCTION_64
0x2721	      0xb801000000	                              mov eax, 1	      3657	mbyte.c	FUNCTION_64
0x2726	              0x90	                                     nop	      3657	mbyte.c	FUNCTION_64
0x2727	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      3658	mbyte.c	FUNCTION_64
0x272b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3658	mbyte.c	FUNCTION_64
0x2734	            0x7405	                            je 0x400277b	      3658	mbyte.c	FUNCTION_64
0x2736	      0xe800000000	                          call 0x400277b	      3658	mbyte.c	FUNCTION_64
0x273b	        0x4883c448	                           add rsp, 0x48	      3658	mbyte.c	FUNCTION_64
0x273f	              0x5b	                                 pop rbx	      3658	mbyte.c	FUNCTION_64
0x2740	              0x5d	                                 pop rbp	      3658	mbyte.c	FUNCTION_64
0x2741	              0xc3	                                     ret	      3658	mbyte.c	FUNCTION_64
dbcs_ptr2len	CALL,1:WHILE,0:functions,0:ELSE,0:IF,1:DO,0:SWITCH,0:FOR,0	21
0xc17	              0x55	                                push rbp	      1139	mbyte.c	FUNCTION_15
0xc18	          0x4889e5	                            mov rbp, rsp	      1139	mbyte.c	FUNCTION_15
0xc1b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1139	mbyte.c	FUNCTION_15
0xc1f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1143	mbyte.c	FUNCTION_15	CALL_1
0xc23	           0xfb600	                   movzx eax, byte [rax]	      1143	mbyte.c	FUNCTION_15	CALL_1
0xc26	           0xfb6c0	                           movzx eax, al	      1143	mbyte.c	FUNCTION_15	CALL_1
0xc29	            0x4898	                                    cdqe	      1143	mbyte.c	FUNCTION_15	CALL_1
0xc2b	     0xfb680000000	                   movzx eax, byte [rax]	      1143	mbyte.c	FUNCTION_15	CALL_1
0xc32	           0xfbec0	                           movsx eax, al	      1143	mbyte.c	FUNCTION_15	CALL_1
0xc35	          0x8945fc	                mov dword [rbp - 4], eax	      1143	mbyte.c	FUNCTION_15	CALL_1
0xc38	        0x837dfc02	                  cmp dword [rbp - 4], 2	      1144	mbyte.c	FUNCTION_15	IF_1
0xc3c	            0x7516	                           jne 0x4000c94	      1144	mbyte.c	FUNCTION_15	IF_1
0xc3e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1144	mbyte.c	FUNCTION_15	IF_1
0xc42	        0x4883c001	                              add rax, 1	      1144	mbyte.c	FUNCTION_15	IF_1
0xc46	           0xfb600	                   movzx eax, byte [rax]	      1144	mbyte.c	FUNCTION_15	IF_1
0xc49	            0x84c0	                             test al, al	      1144	mbyte.c	FUNCTION_15	IF_1
0xc4b	            0x7507	                           jne 0x4000c94	      1144	mbyte.c	FUNCTION_15	IF_1
0xc4d	    0xc745fc010000	                  mov dword [rbp - 4], 1	      1145	mbyte.c	FUNCTION_15	IF_1
0xc54	          0x8b45fc	                mov eax, dword [rbp - 4]	      1146	mbyte.c	FUNCTION_15
0xc57	              0x5d	                                 pop rbp	      1147	mbyte.c	FUNCTION_15
0xc58	              0xc3	                                     ret	      1147	mbyte.c	FUNCTION_15
enc_locale	CALL,8:WHILE,0:functions,0:ELSE,2:IF,4:DO,0:SWITCH,0:FOR,0	28
0x3d4d	              0x55	                                push rbp	      4460	mbyte.c	FUNCTION_89
0x3d4e	          0x4889e5	                            mov rbp, rsp	      4460	mbyte.c	FUNCTION_89
0x3d51	        0x4883ec10	                           sub rsp, 0x10	      4460	mbyte.c	FUNCTION_89
0x3d55	      0xbf0e000000	                            mov edi, 0xe	      4477	mbyte.c	FUNCTION_89	IF_3	CALL_6
0x3d5a	      0xe800000000	                          call 0x4003d9f	      4477	mbyte.c	FUNCTION_89	IF_3	CALL_6
0x3d5f	        0x488945f8	                mov qword [rbp - 8], rax	      4477	mbyte.c	FUNCTION_89	IF_3	CALL_6
0x3d63	      0x48837df800	                  cmp qword [rbp - 8], 0	      4477	mbyte.c	FUNCTION_89	IF_3	CALL_6
0x3d68	            0x740b	                            je 0x4003db5	      4477	mbyte.c	FUNCTION_89	IF_3	CALL_6
0x3d6a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4477	mbyte.c	FUNCTION_89	IF_3	CALL_6
0x3d6e	           0xfb600	                   movzx eax, byte [rax]	      4477	mbyte.c	FUNCTION_89	IF_3	CALL_6
0x3d71	            0x84c0	                             test al, al	      4477	mbyte.c	FUNCTION_89	IF_3	CALL_6
0x3d73	            0x752d	                           jne 0x4003de2	      4477	mbyte.c	FUNCTION_89	IF_3	CALL_6
0x3d75	      0xbe00000000	                              mov esi, 0	      4480	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_7
0x3d7a	      0xbf00000000	                              mov edi, 0	      4480	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_7
0x3d7f	      0xe800000000	                          call 0x4003dc4	      4480	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_7
0x3d84	        0x488945f8	                mov qword [rbp - 8], rax	      4480	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_7
0x3d88	      0x48837df800	                  cmp qword [rbp - 8], 0	      4480	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_7
0x3d8d	            0x740b	                            je 0x4003dda	      4480	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_7
0x3d8f	        0x488b45f8	                mov rax, qword [rbp - 8]	      4480	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_7
0x3d93	           0xfb600	                   movzx eax, byte [rax]	      4480	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_7
0x3d96	            0x84c0	                             test al, al	      4480	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_7
0x3d98	            0x7508	                           jne 0x4003de2	      4480	mbyte.c	FUNCTION_89	IF_3	IF_4	CALL_7
0x3d9a	    0x48c745f80000	                  mov qword [rbp - 8], 0	      4482	mbyte.c	FUNCTION_89	IF_3	IF_4
0x3da2	        0x488b45f8	                mov rax, qword [rbp - 8]	      4484	mbyte.c	FUNCTION_89	CALL_8
0x3da6	          0x4889c7	                            mov rdi, rax	      4484	mbyte.c	FUNCTION_89	CALL_8
0x3da9	      0xe800000000	                          call 0x4003dee	      4484	mbyte.c	FUNCTION_89	CALL_8
0x3dae	              0xc9	                                   leave	      4486	mbyte.c	FUNCTION_89
0x3daf	              0xc3	                                     ret	      4486	mbyte.c	FUNCTION_89
convert_setup_ext	CALL,9:WHILE,0:functions,0:ELSE,11:IF,15:DO,0:SWITCH,0:FOR,0	148
0x432f	              0x55	                                push rbp	      6548	mbyte.c	FUNCTION_141
0x4330	          0x4889e5	                            mov rbp, rsp	      6548	mbyte.c	FUNCTION_141
0x4333	        0x4883ec30	                           sub rsp, 0x30	      6548	mbyte.c	FUNCTION_141
0x4337	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6548	mbyte.c	FUNCTION_141
0x433b	        0x488975e0	             mov qword [rbp - 0x20], rsi	      6548	mbyte.c	FUNCTION_141
0x433f	          0x8955dc	             mov dword [rbp - 0x24], edx	      6548	mbyte.c	FUNCTION_141
0x4342	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      6548	mbyte.c	FUNCTION_141
0x4346	        0x448945d8	             mov dword [rbp - 0x28], r8d	      6548	mbyte.c	FUNCTION_141
0x434a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6556	mbyte.c	FUNCTION_141	IF_1
0x434e	            0x8b00	                    mov eax, dword [rax]	      6556	mbyte.c	FUNCTION_141	IF_1
0x4350	          0x83f805	                              cmp eax, 5	      6556	mbyte.c	FUNCTION_141	IF_1
0x4353	            0x751e	                           jne 0x40043b3	      6556	mbyte.c	FUNCTION_141	IF_1
0x4355	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6556	mbyte.c	FUNCTION_141	IF_1
0x4359	        0x488b4008	                mov rax, qword [rax + 8]	      6556	mbyte.c	FUNCTION_141	IF_1
0x435d	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      6556	mbyte.c	FUNCTION_141	IF_1
0x4361	            0x7410	                            je 0x40043b3	      6556	mbyte.c	FUNCTION_141	IF_1
0x4363	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6557	mbyte.c	FUNCTION_141	CALL_1
0x4367	        0x488b4008	                mov rax, qword [rax + 8]	      6557	mbyte.c	FUNCTION_141	CALL_1
0x436b	          0x4889c7	                            mov rdi, rax	      6557	mbyte.c	FUNCTION_141	CALL_1
0x436e	      0xe800000000	                          call 0x40043b3	      6557	mbyte.c	FUNCTION_141	CALL_1
0x4373	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6559	mbyte.c	FUNCTION_141
0x4377	    0xc70000000000	                      mov dword [rax], 0	      6559	mbyte.c	FUNCTION_141
0x437d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6560	mbyte.c	FUNCTION_141
0x4381	    0xc74004010000	                  mov dword [rax + 4], 1	      6560	mbyte.c	FUNCTION_141
0x4388	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6561	mbyte.c	FUNCTION_141
0x438c	    0xc74010000000	               mov dword [rax + 0x10], 0	      6561	mbyte.c	FUNCTION_141
0x4393	      0x48837de000	               cmp qword [rbp - 0x20], 0	      6564	mbyte.c	FUNCTION_141	IF_2
0x4398	            0x7434	                            je 0x400440e	      6564	mbyte.c	FUNCTION_141	IF_2
0x439a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6564	mbyte.c	FUNCTION_141	IF_2
0x439e	           0xfb600	                   movzx eax, byte [rax]	      6564	mbyte.c	FUNCTION_141	IF_2
0x43a1	            0x84c0	                             test al, al	      6564	mbyte.c	FUNCTION_141	IF_2
0x43a3	            0x7429	                            je 0x400440e	      6564	mbyte.c	FUNCTION_141	IF_2
0x43a5	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      6564	mbyte.c	FUNCTION_141	IF_2
0x43aa	            0x7422	                            je 0x400440e	      6564	mbyte.c	FUNCTION_141	IF_2
0x43ac	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6564	mbyte.c	FUNCTION_141	IF_2
0x43b0	           0xfb600	                   movzx eax, byte [rax]	      6564	mbyte.c	FUNCTION_141	IF_2
0x43b3	            0x84c0	                             test al, al	      6564	mbyte.c	FUNCTION_141	IF_2
0x43b5	            0x7417	                            je 0x400440e	      6564	mbyte.c	FUNCTION_141	IF_2
0x43b7	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      6565	mbyte.c	FUNCTION_141	IF_2	CALL_2
0x43bb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6565	mbyte.c	FUNCTION_141	IF_2	CALL_2
0x43bf	          0x4889d6	                            mov rsi, rdx	      6565	mbyte.c	FUNCTION_141	IF_2	CALL_2
0x43c2	          0x4889c7	                            mov rdi, rax	      6565	mbyte.c	FUNCTION_141	IF_2	CALL_2
0x43c5	      0xe800000000	                          call 0x400440a	      6565	mbyte.c	FUNCTION_141	IF_2	CALL_2
0x43ca	            0x85c0	                           test eax, eax	      6565	mbyte.c	FUNCTION_141	IF_2	CALL_2
0x43cc	            0x750a	                           jne 0x4004418	      6565	mbyte.c	FUNCTION_141	IF_2	CALL_2
0x43ce	      0xb801000000	                              mov eax, 1	      6566	mbyte.c	FUNCTION_141	IF_2
0x43d3	      0xe95f010000	                           jmp 0x4004577	      6566	mbyte.c	FUNCTION_141	IF_2
0x43d8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6568	mbyte.c	FUNCTION_141	CALL_3
0x43dc	          0x4889c7	                            mov rdi, rax	      6568	mbyte.c	FUNCTION_141	CALL_3
0x43df	      0xe800000000	                          call 0x4004424	      6568	mbyte.c	FUNCTION_141	CALL_3
0x43e4	          0x8945f8	                mov dword [rbp - 8], eax	      6568	mbyte.c	FUNCTION_141	CALL_3
0x43e7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6569	mbyte.c	FUNCTION_141	CALL_4
0x43eb	          0x4889c7	                            mov rdi, rax	      6569	mbyte.c	FUNCTION_141	CALL_4
0x43ee	      0xe800000000	                          call 0x4004433	      6569	mbyte.c	FUNCTION_141	CALL_4
0x43f3	          0x8945fc	                mov dword [rbp - 4], eax	      6569	mbyte.c	FUNCTION_141	CALL_4
0x43f6	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      6570	mbyte.c	FUNCTION_141	IF_3
0x43fa	            0x740b	                            je 0x4004447	      6570	mbyte.c	FUNCTION_141	IF_3
0x43fc	          0x8b45f8	                mov eax, dword [rbp - 8]	      6571	mbyte.c	FUNCTION_141	IF_3
0x43ff	          0x83e004	                              and eax, 4	      6571	mbyte.c	FUNCTION_141	IF_3
0x4402	          0x8945f0	             mov dword [rbp - 0x10], eax	      6571	mbyte.c	FUNCTION_141	IF_3
0x4405	            0xeb0d	                           jmp 0x4004454	      6571	mbyte.c	FUNCTION_141	IF_3
0x4407	        0x837df804	                  cmp dword [rbp - 8], 4	      6573	mbyte.c	FUNCTION_141	ELSE_1
0x440b	           0xf94c0	                                 sete al	      6573	mbyte.c	FUNCTION_141	ELSE_1
0x440e	           0xfb6c0	                           movzx eax, al	      6573	mbyte.c	FUNCTION_141	ELSE_1
0x4411	          0x8945f0	             mov dword [rbp - 0x10], eax	      6573	mbyte.c	FUNCTION_141	ELSE_1
0x4414	        0x837dd800	               cmp dword [rbp - 0x28], 0	      6574	mbyte.c	FUNCTION_141	IF_4
0x4418	            0x740b	                            je 0x4004465	      6574	mbyte.c	FUNCTION_141	IF_4
0x441a	          0x8b45fc	                mov eax, dword [rbp - 4]	      6575	mbyte.c	FUNCTION_141	IF_4
0x441d	          0x83e004	                              and eax, 4	      6575	mbyte.c	FUNCTION_141	IF_4
0x4420	          0x8945f4	              mov dword [rbp - 0xc], eax	      6575	mbyte.c	FUNCTION_141	IF_4
0x4423	            0xeb0d	                           jmp 0x4004472	      6575	mbyte.c	FUNCTION_141	IF_4
0x4425	        0x837dfc04	                  cmp dword [rbp - 4], 4	      6577	mbyte.c	FUNCTION_141	ELSE_2
0x4429	           0xf94c0	                                 sete al	      6577	mbyte.c	FUNCTION_141	ELSE_2
0x442c	           0xfb6c0	                           movzx eax, al	      6577	mbyte.c	FUNCTION_141	ELSE_2
0x442f	          0x8945f4	              mov dword [rbp - 0xc], eax	      6577	mbyte.c	FUNCTION_141	ELSE_2
0x4432	          0x8b45f8	                mov eax, dword [rbp - 8]	      6579	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4435	      0x2500020000	                          and eax, 0x200	      6579	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x443a	            0x85c0	                           test eax, eax	      6579	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x443c	            0x7420	                            je 0x400449e	      6579	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x443e	        0x837df400	                cmp dword [rbp - 0xc], 0	      6579	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4442	            0x741a	                            je 0x400449e	      6579	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4444	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6582	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4448	    0xc70001000000	                      mov dword [rax], 1	      6582	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x444e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6583	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4452	    0xc74004020000	                  mov dword [rax + 4], 2	      6583	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x4459	      0xe9c3000000	                           jmp 0x4004561	      6583	mbyte.c	FUNCTION_141	ELSE_2	IF_5
0x445e	          0x8b45f8	                mov eax, dword [rbp - 8]	      6585	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x4461	      0x2500040000	                          and eax, 0x400	      6585	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x4466	            0x85c0	                           test eax, eax	      6585	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x4468	            0x7420	                            je 0x40044ca	      6585	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x446a	        0x837df400	                cmp dword [rbp - 0xc], 0	      6585	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x446e	            0x741a	                            je 0x40044ca	      6585	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x4470	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6588	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x4474	    0xc70002000000	                      mov dword [rax], 2	      6588	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x447a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6589	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x447e	    0xc74004030000	                  mov dword [rax + 4], 3	      6589	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x4485	      0xe997000000	                           jmp 0x4004561	      6589	mbyte.c	FUNCTION_141	ELSE_3	IF_6
0x448a	        0x837df000	               cmp dword [rbp - 0x10], 0	      6591	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x448e	            0x7418	                            je 0x40044e8	      6591	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x4490	          0x8b45fc	                mov eax, dword [rbp - 4]	      6591	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x4493	      0x2500020000	                          and eax, 0x200	      6591	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x4498	            0x85c0	                           test eax, eax	      6591	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x449a	            0x740c	                            je 0x40044e8	      6591	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x449c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6594	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x44a0	    0xc70003000000	                      mov dword [rax], 3	      6594	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x44a6	            0xeb79	                           jmp 0x4004561	      6594	mbyte.c	FUNCTION_141	ELSE_4	IF_7
0x44a8	        0x837df000	               cmp dword [rbp - 0x10], 0	      6596	mbyte.c	FUNCTION_141	ELSE_5	IF_8
0x44ac	            0x7418	                            je 0x4004506	      6596	mbyte.c	FUNCTION_141	ELSE_5	IF_8
0x44ae	          0x8b45fc	                mov eax, dword [rbp - 4]	      6596	mbyte.c	FUNCTION_141	ELSE_5	IF_8
0x44b1	      0x2500040000	                          and eax, 0x400	      6596	mbyte.c	FUNCTION_141	ELSE_5	IF_8
0x44b6	            0x85c0	                           test eax, eax	      6596	mbyte.c	FUNCTION_141	ELSE_5	IF_8
0x44b8	            0x740c	                            je 0x4004506	      6596	mbyte.c	FUNCTION_141	ELSE_5	IF_8
0x44ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6599	mbyte.c	FUNCTION_141	ELSE_5	IF_8
0x44be	    0xc70004000000	                      mov dword [rax], 4	      6599	mbyte.c	FUNCTION_141	ELSE_5	IF_8
0x44c4	            0xeb5b	                           jmp 0x4004561	      6599	mbyte.c	FUNCTION_141	ELSE_5	IF_8
0x44c6	        0x837df000	               cmp dword [rbp - 0x10], 0	      6635	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x44ca	            0x7506	                           jne 0x4004512	      6635	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x44cc	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      6635	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x44d0	            0xeb05	                           jmp 0x4004517	      6635	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x44d2	      0xba00000000	                              mov edx, 0	      6635	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x44d7	        0x837df400	                cmp dword [rbp - 0xc], 0	      6635	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x44db	            0x7506	                           jne 0x4004523	      6635	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x44dd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6635	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x44e1	            0xeb05	                           jmp 0x4004528	      6635	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x44e3	      0xb800000000	                              mov eax, 0	      6635	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x44e8	          0x4889d6	                            mov rsi, rdx	      6635	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x44eb	          0x4889c7	                            mov rdi, rax	      6635	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x44ee	      0xe800000000	                          call 0x4004533	      6635	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x44f3	          0x4889c2	                            mov rdx, rax	      6635	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x44f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6635	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x44fa	        0x48895008	                mov qword [rax + 8], rdx	      6635	mbyte.c	FUNCTION_141	ELSE_11	CALL_9
0x44fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6638	mbyte.c	FUNCTION_141	ELSE_11	IF_14
0x4502	        0x488b4008	                mov rax, qword [rax + 8]	      6638	mbyte.c	FUNCTION_141	ELSE_11	IF_14
0x4506	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      6638	mbyte.c	FUNCTION_141	ELSE_11	IF_14
0x450a	            0x7415	                            je 0x4004561	      6638	mbyte.c	FUNCTION_141	ELSE_11	IF_14
0x450c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6640	mbyte.c	FUNCTION_141	ELSE_11	IF_14
0x4510	    0xc70005000000	                      mov dword [rax], 5	      6640	mbyte.c	FUNCTION_141	ELSE_11	IF_14
0x4516	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6641	mbyte.c	FUNCTION_141	ELSE_11	IF_14
0x451a	    0xc74004040000	                  mov dword [rax + 4], 4	      6641	mbyte.c	FUNCTION_141	ELSE_11	IF_14
0x4521	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6645	mbyte.c	FUNCTION_141	IF_15
0x4525	            0x8b00	                    mov eax, dword [rax]	      6645	mbyte.c	FUNCTION_141	IF_15
0x4527	            0x85c0	                           test eax, eax	      6645	mbyte.c	FUNCTION_141	IF_15
0x4529	            0x7507	                           jne 0x4004572	      6645	mbyte.c	FUNCTION_141	IF_15
0x452b	      0xb800000000	                              mov eax, 0	      6646	mbyte.c	FUNCTION_141	IF_15
0x4530	            0xeb05	                           jmp 0x4004577	      6646	mbyte.c	FUNCTION_141	IF_15
0x4532	      0xb801000000	                              mov eax, 1	      6648	mbyte.c	FUNCTION_141
0x4537	              0xc9	                                   leave	      6649	mbyte.c	FUNCTION_141
0x4538	              0xc3	                                     ret	      6649	mbyte.c	FUNCTION_141
mb_fix_col	CALL,3:WHILE,0:functions,0:ELSE,0:IF,1:DO,0:SWITCH,0:FOR,0	87
0x35f6	              0x55	                                push rbp	      4262	mbyte.c	FUNCTION_84
0x35f7	          0x4889e5	                            mov rbp, rsp	      4262	mbyte.c	FUNCTION_84
0x35fa	        0x4883ec10	                           sub rsp, 0x10	      4262	mbyte.c	FUNCTION_84
0x35fe	          0x897dfc	                mov dword [rbp - 4], edi	      4262	mbyte.c	FUNCTION_84
0x3601	          0x8975f8	                mov dword [rbp - 8], esi	      4262	mbyte.c	FUNCTION_84
0x3604	          0x8b45fc	                mov eax, dword [rbp - 4]	      4263	mbyte.c	FUNCTION_84	CALL_1
0x3607	            0x89c7	                            mov edi, eax	      4263	mbyte.c	FUNCTION_84	CALL_1
0x3609	      0xe800000000	                          call 0x400364e	      4263	mbyte.c	FUNCTION_84	CALL_1
0x360e	          0x8945fc	                mov dword [rbp - 4], eax	      4263	mbyte.c	FUNCTION_84	CALL_1
0x3611	          0x8b45f8	                mov eax, dword [rbp - 8]	      4264	mbyte.c	FUNCTION_84	CALL_2
0x3614	            0x89c7	                            mov edi, eax	      4264	mbyte.c	FUNCTION_84	CALL_2
0x3616	      0xe800000000	                          call 0x400365b	      4264	mbyte.c	FUNCTION_84	CALL_2
0x361b	          0x8945f8	                mov dword [rbp - 8], eax	      4264	mbyte.c	FUNCTION_84	CALL_2
0x361e	    0x8b0500000000	            mov eax, dword [0x04003664] 	      4265	mbyte.c	FUNCTION_84	IF_1
0x3624	            0x85c0	                           test eax, eax	      4265	mbyte.c	FUNCTION_84	IF_1
0x3626	     0xf84f2000000	                            je 0x400375e	      4265	mbyte.c	FUNCTION_84	IF_1
0x362c	    0x488b05000000	            mov rax, qword [0x04003673] 	      4265	mbyte.c	FUNCTION_84	IF_1
0x3633	          0x4885c0	                           test rax, rax	      4265	mbyte.c	FUNCTION_84	IF_1
0x3636	     0xf84e2000000	                            je 0x400375e	      4265	mbyte.c	FUNCTION_84	IF_1
0x363c	        0x837dfc00	                  cmp dword [rbp - 4], 0	      4265	mbyte.c	FUNCTION_84	IF_1
0x3640	     0xf8ed8000000	                           jle 0x400375e	      4265	mbyte.c	FUNCTION_84	IF_1
0x3646	    0x8b0500000000	            mov eax, dword [0x0400368c] 	      4266	mbyte.c	FUNCTION_84	IF_1
0x364c	            0x85c0	                           test eax, eax	      4266	mbyte.c	FUNCTION_84	IF_1
0x364e	     0xf848a000000	                            je 0x400371e	      4266	mbyte.c	FUNCTION_84	IF_1
0x3654	    0x488b05000000	            mov rax, qword [0x0400369b] 	      4267	mbyte.c	FUNCTION_84	IF_1
0x365b	    0x488b15000000	            mov rdx, qword [0x040036a2] 	      4267	mbyte.c	FUNCTION_84	IF_1
0x3662	          0x8b4df8	                mov ecx, dword [rbp - 8]	      4267	mbyte.c	FUNCTION_84	IF_1
0x3665	          0x4863c9	                         movsxd rcx, ecx	      4267	mbyte.c	FUNCTION_84	IF_1
0x3668	        0x48c1e102	                              shl rcx, 2	      4267	mbyte.c	FUNCTION_84	IF_1
0x366c	          0x4801ca	                            add rdx, rcx	      4267	mbyte.c	FUNCTION_84	IF_1
0x366f	            0x8b0a	                    mov ecx, dword [rdx]	      4267	mbyte.c	FUNCTION_84	IF_1
0x3671	          0x8b55fc	                mov edx, dword [rbp - 4]	      4267	mbyte.c	FUNCTION_84	IF_1
0x3674	             0x1ca	                            add edx, ecx	      4267	mbyte.c	FUNCTION_84	IF_1
0x3676	            0x89d2	                            mov edx, edx	      4267	mbyte.c	FUNCTION_84	IF_1
0x3678	          0x4801d0	                            add rax, rdx	      4267	mbyte.c	FUNCTION_84	IF_1
0x367b	           0xfb600	                   movzx eax, byte [rax]	      4267	mbyte.c	FUNCTION_84	IF_1
0x367e	            0x84c0	                             test al, al	      4267	mbyte.c	FUNCTION_84	IF_1
0x3680	            0x745c	                            je 0x400371e	      4267	mbyte.c	FUNCTION_84	IF_1
0x3682	    0x488b05000000	            mov rax, qword [0x040036c9] 	      4268	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x3689	    0x488b15000000	            mov rdx, qword [0x040036d0] 	      4269	mbyte.c	FUNCTION_84	IF_1
0x3690	          0x8b4df8	                mov ecx, dword [rbp - 8]	      4269	mbyte.c	FUNCTION_84	IF_1
0x3693	          0x4863c9	                         movsxd rcx, ecx	      4269	mbyte.c	FUNCTION_84	IF_1
0x3696	        0x48c1e102	                              shl rcx, 2	      4269	mbyte.c	FUNCTION_84	IF_1
0x369a	          0x4801ca	                            add rdx, rcx	      4269	mbyte.c	FUNCTION_84	IF_1
0x369d	            0x8b12	                    mov edx, dword [rdx]	      4269	mbyte.c	FUNCTION_84	IF_1
0x369f	            0x89d1	                            mov ecx, edx	      4269	mbyte.c	FUNCTION_84	IF_1
0x36a1	          0x8b55fc	                mov edx, dword [rbp - 4]	      4269	mbyte.c	FUNCTION_84	IF_1
0x36a4	          0x4863d2	                         movsxd rdx, edx	      4269	mbyte.c	FUNCTION_84	IF_1
0x36a7	          0x4801ca	                            add rdx, rcx	      4269	mbyte.c	FUNCTION_84	IF_1
0x36aa	          0x4801c2	                            add rdx, rax	      4269	mbyte.c	FUNCTION_84	IF_1
0x36ad	    0x488b05000000	            mov rax, qword [0x040036f4] 	      4268	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x36b4	    0x488b0d000000	            mov rcx, qword [0x040036fb] 	      4268	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x36bb	          0x8b75f8	                mov esi, dword [rbp - 8]	      4268	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x36be	          0x4863f6	                         movsxd rsi, esi	      4268	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x36c1	        0x48c1e602	                              shl rsi, 2	      4268	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x36c5	          0x4801f1	                            add rcx, rsi	      4268	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x36c8	            0x8b09	                    mov ecx, dword [rcx]	      4268	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x36ca	            0x89c9	                            mov ecx, ecx	      4268	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x36cc	          0x4801c8	                            add rax, rcx	      4268	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x36cf	          0x4889d6	                            mov rsi, rdx	      4268	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x36d2	          0x4889c7	                            mov rdi, rax	      4268	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x36d5	      0xe800000000	                          call 0x400371a	      4268	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x36da	            0x85c0	                           test eax, eax	      4268	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x36dc	            0x7538	                           jne 0x4003756	      4268	mbyte.c	FUNCTION_84	IF_1	CALL_3
0x36de	    0x8b0500000000	            mov eax, dword [0x04003724] 	      4270	mbyte.c	FUNCTION_84	IF_1
0x36e4	            0x85c0	                           test eax, eax	      4270	mbyte.c	FUNCTION_84	IF_1
0x36e6	            0x7436	                            je 0x400375e	      4270	mbyte.c	FUNCTION_84	IF_1
0x36e8	    0x488b05000000	            mov rax, qword [0x0400372f] 	      4270	mbyte.c	FUNCTION_84	IF_1
0x36ef	    0x488b15000000	            mov rdx, qword [0x04003736] 	      4270	mbyte.c	FUNCTION_84	IF_1
0x36f6	          0x8b4df8	                mov ecx, dword [rbp - 8]	      4270	mbyte.c	FUNCTION_84	IF_1
0x36f9	          0x4863c9	                         movsxd rcx, ecx	      4270	mbyte.c	FUNCTION_84	IF_1
0x36fc	        0x48c1e102	                              shl rcx, 2	      4270	mbyte.c	FUNCTION_84	IF_1
0x3700	          0x4801ca	                            add rdx, rcx	      4270	mbyte.c	FUNCTION_84	IF_1
0x3703	            0x8b0a	                    mov ecx, dword [rdx]	      4270	mbyte.c	FUNCTION_84	IF_1
0x3705	          0x8b55fc	                mov edx, dword [rbp - 4]	      4270	mbyte.c	FUNCTION_84	IF_1
0x3708	             0x1ca	                            add edx, ecx	      4270	mbyte.c	FUNCTION_84	IF_1
0x370a	            0x89d2	                            mov edx, edx	      4270	mbyte.c	FUNCTION_84	IF_1
0x370c	          0x4801d0	                            add rax, rdx	      4270	mbyte.c	FUNCTION_84	IF_1
0x370f	           0xfb600	                   movzx eax, byte [rax]	      4270	mbyte.c	FUNCTION_84	IF_1
0x3712	            0x84c0	                             test al, al	      4270	mbyte.c	FUNCTION_84	IF_1
0x3714	            0x7508	                           jne 0x400375e	      4270	mbyte.c	FUNCTION_84	IF_1
0x3716	          0x8b45fc	                mov eax, dword [rbp - 4]	      4271	mbyte.c	FUNCTION_84	IF_1
0x3719	          0x83e801	                              sub eax, 1	      4271	mbyte.c	FUNCTION_84	IF_1
0x371c	            0xeb03	                           jmp 0x4003761	      4271	mbyte.c	FUNCTION_84	IF_1
0x371e	          0x8b45fc	                mov eax, dword [rbp - 4]	      4272	mbyte.c	FUNCTION_84
0x3721	              0xc9	                                   leave	      4273	mbyte.c	FUNCTION_84
0x3722	              0xc3	                                     ret	      4273	mbyte.c	FUNCTION_84
my_iconv_open	CALL,6:WHILE,0:functions,0:ELSE,1:IF,4:DO,0:SWITCH,0:FOR,0	61
0x3db0	              0x55	                                push rbp	      4529	mbyte.c	FUNCTION_91
0x3db1	          0x4889e5	                            mov rbp, rsp	      4529	mbyte.c	FUNCTION_91
0x3db4	              0x53	                                push rbx	      4529	mbyte.c	FUNCTION_91
0x3db5	    0x4881ecd80100	                          sub rsp, 0x1d8	      4529	mbyte.c	FUNCTION_91
0x3dbc	    0x4889bd28feff	            mov qword [rbp - 0x1d8], rdi	      4529	mbyte.c	FUNCTION_91
0x3dc3	    0x4889b520feff	            mov qword [rbp - 0x1e0], rsi	      4529	mbyte.c	FUNCTION_91
0x3dca	    0x64488b042528	                mov rax, qword fs:[0x28]	      4529	mbyte.c	FUNCTION_91
0x3dd3	        0x488945e8	             mov qword [rbp - 0x18], rax	      4529	mbyte.c	FUNCTION_91
0x3dd7	            0x31c0	                            xor eax, eax	      4529	mbyte.c	FUNCTION_91
0x3dd9	    0x8b0500000000	            mov eax, dword [0x04003e1f] 	      4537	mbyte.c	FUNCTION_91	IF_1
0x3ddf	            0x85c0	                           test eax, eax	      4537	mbyte.c	FUNCTION_91	IF_1
0x3de1	            0x750c	                           jne 0x4003e2f	      4537	mbyte.c	FUNCTION_91	IF_1
0x3de3	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      4538	mbyte.c	FUNCTION_91	IF_1
0x3dea	      0xe9d9000000	                           jmp 0x4003f08	      4538	mbyte.c	FUNCTION_91	IF_1
0x3def	    0x488b8520feff	            mov rax, qword [rbp - 0x1e0]	      4546	mbyte.c	FUNCTION_91	CALL_4
0x3df6	          0x4889c7	                            mov rdi, rax	      4546	mbyte.c	FUNCTION_91	CALL_4
0x3df9	      0xe800000000	                          call 0x4003e3e	      4546	mbyte.c	FUNCTION_91	CALL_4
0x3dfe	          0x4889c3	                            mov rbx, rax	      4546	mbyte.c	FUNCTION_91	CALL_4
0x3e01	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	      4546	mbyte.c	FUNCTION_91	CALL_4
0x3e08	          0x4889c7	                            mov rdi, rax	      4546	mbyte.c	FUNCTION_91	CALL_4
0x3e0b	      0xe800000000	                          call 0x4003e50	      4546	mbyte.c	FUNCTION_91	CALL_4
0x3e10	          0x4889de	                            mov rsi, rbx	      4546	mbyte.c	FUNCTION_91	CALL_4
0x3e13	          0x4889c7	                            mov rdi, rax	      4546	mbyte.c	FUNCTION_91	CALL_4
0x3e16	      0xe800000000	                          call 0x4003e5b	      4546	mbyte.c	FUNCTION_91	CALL_4
0x3e1b	    0x48898548feff	            mov qword [rbp - 0x1b8], rax	      4546	mbyte.c	FUNCTION_91	CALL_4
0x3e22	    0x4883bd48feff	cmp qword [rbp - 0x1b8], 0xffffffffffffffff	      4548	mbyte.c	FUNCTION_91	IF_3
0x3e2a	     0xf8491000000	                            je 0x4003f01	      4548	mbyte.c	FUNCTION_91	IF_3
0x3e30	    0x8b0500000000	            mov eax, dword [0x04003e76] 	      4548	mbyte.c	FUNCTION_91	IF_3
0x3e36	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4548	mbyte.c	FUNCTION_91	IF_3
0x3e39	     0xf8582000000	                           jne 0x4003f01	      4548	mbyte.c	FUNCTION_91	IF_3
0x3e3f	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      4557	mbyte.c	FUNCTION_91	IF_3
0x3e46	    0x48898538feff	            mov qword [rbp - 0x1c8], rax	      4557	mbyte.c	FUNCTION_91	IF_3
0x3e4d	    0x48c78540feff	         mov qword [rbp - 0x1c0], 0x190 	      4558	mbyte.c	FUNCTION_91	IF_3
0x3e58	    0x488d8d40feff	                  lea rcx, [rbp - 0x1c0]	      4559	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x3e5f	    0x488d9538feff	                  lea rdx, [rbp - 0x1c8]	      4559	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x3e66	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      4559	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x3e6d	          0x4989c8	                             mov r8, rcx	      4559	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x3e70	          0x4889d1	                            mov rcx, rdx	      4559	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x3e73	      0xba00000000	                              mov edx, 0	      4559	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x3e78	      0xbe00000000	                              mov esi, 0	      4559	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x3e7d	          0x4889c7	                            mov rdi, rax	      4559	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x3e80	      0xe800000000	                          call 0x4003ec5	      4559	mbyte.c	FUNCTION_91	IF_3	CALL_5
0x3e85	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      4560	mbyte.c	FUNCTION_91	IF_3	IF_4
0x3e8c	          0x4885c0	                           test rax, rax	      4560	mbyte.c	FUNCTION_91	IF_3	IF_4
0x3e8f	            0x7526	                           jne 0x4003ef7	      4560	mbyte.c	FUNCTION_91	IF_3	IF_4
0x3e91	    0xc70500000000	               mov dword [0x04003edb], 0	      4562	mbyte.c	FUNCTION_91	IF_3	IF_4
0x3e9b	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      4563	mbyte.c	FUNCTION_91	IF_3	IF_4	CALL_6
0x3ea2	          0x4889c7	                            mov rdi, rax	      4563	mbyte.c	FUNCTION_91	IF_3	IF_4	CALL_6
0x3ea5	      0xe800000000	                          call 0x4003eea	      4563	mbyte.c	FUNCTION_91	IF_3	IF_4	CALL_6
0x3eaa	    0x48c78548feff	mov qword [rbp - 0x1b8], 0xffffffffffffffff	      4564	mbyte.c	FUNCTION_91	IF_3	IF_4
0x3eb5	            0xeb0a	                           jmp 0x4003f01	      4564	mbyte.c	FUNCTION_91	IF_3	IF_4
0x3eb7	    0xc70500000000	               mov dword [0x04003f01], 1	      4567	mbyte.c	FUNCTION_91	IF_3	ELSE_1
0x3ec1	    0x488b8548feff	            mov rax, qword [rbp - 0x1b8]	      4570	mbyte.c	FUNCTION_91
0x3ec8	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      4571	mbyte.c	FUNCTION_91
0x3ecc	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4571	mbyte.c	FUNCTION_91
0x3ed5	            0x7405	                            je 0x4003f1c	      4571	mbyte.c	FUNCTION_91
0x3ed7	      0xe800000000	                          call 0x4003f1c	      4571	mbyte.c	FUNCTION_91
0x3edc	    0x4881c4d80100	                          add rsp, 0x1d8	      4571	mbyte.c	FUNCTION_91
0x3ee3	              0x5b	                                 pop rbx	      4571	mbyte.c	FUNCTION_91
0x3ee4	              0x5d	                                 pop rbp	      4571	mbyte.c	FUNCTION_91
0x3ee5	              0xc3	                                     ret	      4571	mbyte.c	FUNCTION_91
mb_cptr2char_adv	CALL,1:WHILE,0:functions,0:ELSE,1:IF,1:DO,0:SWITCH,0:FOR,0	40
0x164f	              0x55	                                push rbp	      1908	mbyte.c	FUNCTION_38
0x1650	          0x4889e5	                            mov rbp, rsp	      1908	mbyte.c	FUNCTION_38
0x1653	        0x4883ec20	                           sub rsp, 0x20	      1908	mbyte.c	FUNCTION_38
0x1657	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1908	mbyte.c	FUNCTION_38
0x165b	    0x488b05000000	            mov rax, qword [0x040016a2] 	      1911	mbyte.c	FUNCTION_38
0x1662	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1911	mbyte.c	FUNCTION_38
0x1666	          0x488b12	                    mov rdx, qword [rdx]	      1911	mbyte.c	FUNCTION_38
0x1669	          0x4889d7	                            mov rdi, rdx	      1911	mbyte.c	FUNCTION_38
0x166c	            0xffd0	                                call rax	      1911	mbyte.c	FUNCTION_38
0x166e	          0x8945fc	                mov dword [rbp - 4], eax	      1911	mbyte.c	FUNCTION_38
0x1671	    0x8b0500000000	            mov eax, dword [0x040016b7] 	      1912	mbyte.c	FUNCTION_38	IF_1
0x1677	            0x85c0	                           test eax, eax	      1912	mbyte.c	FUNCTION_38	IF_1
0x1679	            0x7427	                            je 0x40016e2	      1912	mbyte.c	FUNCTION_38	IF_1
0x167b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1913	mbyte.c	FUNCTION_38	CALL_1
0x167f	          0x488b00	                    mov rax, qword [rax]	      1913	mbyte.c	FUNCTION_38	CALL_1
0x1682	          0x4889c7	                            mov rdi, rax	      1913	mbyte.c	FUNCTION_38	CALL_1
0x1685	      0xe800000000	                          call 0x40016ca	      1913	mbyte.c	FUNCTION_38	CALL_1
0x168a	            0x89c1	                            mov ecx, eax	      1913	mbyte.c	FUNCTION_38	CALL_1
0x168c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1913	mbyte.c	FUNCTION_38	CALL_1
0x1690	          0x488b10	                    mov rdx, qword [rax]	      1913	mbyte.c	FUNCTION_38	CALL_1
0x1693	          0x4863c1	                         movsxd rax, ecx	      1913	mbyte.c	FUNCTION_38	CALL_1
0x1696	          0x4801c2	                            add rdx, rax	      1913	mbyte.c	FUNCTION_38	CALL_1
0x1699	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1913	mbyte.c	FUNCTION_38	CALL_1
0x169d	          0x488910	                    mov qword [rax], rdx	      1913	mbyte.c	FUNCTION_38	CALL_1
0x16a0	            0xeb29	                           jmp 0x400170b	      1913	mbyte.c	FUNCTION_38	CALL_1
0x16a2	    0x488b05000000	            mov rax, qword [0x040016e9] 	      1915	mbyte.c	FUNCTION_38	ELSE_1
0x16a9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1915	mbyte.c	FUNCTION_38	ELSE_1
0x16ad	          0x488b12	                    mov rdx, qword [rdx]	      1915	mbyte.c	FUNCTION_38	ELSE_1
0x16b0	          0x4889d7	                            mov rdi, rdx	      1915	mbyte.c	FUNCTION_38	ELSE_1
0x16b3	            0xffd0	                                call rax	      1915	mbyte.c	FUNCTION_38	ELSE_1
0x16b5	            0x89c1	                            mov ecx, eax	      1915	mbyte.c	FUNCTION_38	ELSE_1
0x16b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1915	mbyte.c	FUNCTION_38	ELSE_1
0x16bb	          0x488b10	                    mov rdx, qword [rax]	      1915	mbyte.c	FUNCTION_38	ELSE_1
0x16be	          0x4863c1	                         movsxd rax, ecx	      1915	mbyte.c	FUNCTION_38	ELSE_1
0x16c1	          0x4801c2	                            add rdx, rax	      1915	mbyte.c	FUNCTION_38	ELSE_1
0x16c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1915	mbyte.c	FUNCTION_38	ELSE_1
0x16c8	          0x488910	                    mov qword [rax], rdx	      1915	mbyte.c	FUNCTION_38	ELSE_1
0x16cb	          0x8b45fc	                mov eax, dword [rbp - 4]	      1916	mbyte.c	FUNCTION_38
0x16ce	              0xc9	                                   leave	      1917	mbyte.c	FUNCTION_38
0x16cf	              0xc3	                                     ret	      1917	mbyte.c	FUNCTION_38
show_utf8	CALL,8:WHILE,0:functions,0:ELSE,0:IF,4:DO,0:SWITCH,0:FOR,1	81
0x28c0	              0x55	                                push rbp	      3717	mbyte.c	FUNCTION_66
0x28c1	          0x4889e5	                            mov rbp, rsp	      3717	mbyte.c	FUNCTION_66
0x28c4	        0x4883ec20	                           sub rsp, 0x20	      3717	mbyte.c	FUNCTION_66
0x28c8	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      3719	mbyte.c	FUNCTION_66
0x28cf	      0xe800000000	                          call 0x4002914	      3726	mbyte.c	FUNCTION_66	CALL_1
0x28d4	        0x488945f8	                mov qword [rbp - 8], rax	      3726	mbyte.c	FUNCTION_66	CALL_1
0x28d8	        0x488b45f8	                mov rax, qword [rbp - 8]	      3727	mbyte.c	FUNCTION_66	CALL_2
0x28dc	          0x4889c7	                            mov rdi, rax	      3727	mbyte.c	FUNCTION_66	CALL_2
0x28df	      0xe800000000	                          call 0x4002924	      3727	mbyte.c	FUNCTION_66	CALL_2
0x28e4	          0x8945f4	              mov dword [rbp - 0xc], eax	      3727	mbyte.c	FUNCTION_66	CALL_2
0x28e7	        0x837df400	                cmp dword [rbp - 0xc], 0	      3728	mbyte.c	FUNCTION_66	IF_1
0x28eb	            0x750f	                           jne 0x400293c	      3728	mbyte.c	FUNCTION_66	IF_1
0x28ed	      0xbf00000000	                              mov edi, 0	      3730	mbyte.c	FUNCTION_66	IF_1	CALL_3
0x28f2	      0xe800000000	                          call 0x4002937	      3730	mbyte.c	FUNCTION_66	IF_1	CALL_3
0x28f7	      0xe9ee000000	                           jmp 0x4002a2a	      3731	mbyte.c	FUNCTION_66	IF_1
0x28fc	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      3734	mbyte.c	FUNCTION_66
0x2903	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      3735	mbyte.c	FUNCTION_66	FOR_1
0x290a	      0xe9bd000000	                           jmp 0x4002a0c	      3735	mbyte.c	FUNCTION_66	FOR_1
0x290f	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3737	mbyte.c	FUNCTION_66	FOR_1	IF_2
0x2913	            0x753a	                           jne 0x400298f	      3737	mbyte.c	FUNCTION_66	FOR_1	IF_2
0x2915	        0x837df000	               cmp dword [rbp - 0x10], 0	      3740	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3
0x2919	            0x7e1c	                           jle 0x4002977	      3740	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3
0x291b	    0x488b15000000	            mov rdx, qword [0x04002962] 	      3742	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3	CALL_4
0x2922	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3742	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3	CALL_4
0x2925	            0x4898	                                    cdqe	      3742	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3	CALL_4
0x2927	          0x4801d0	                            add rax, rdx	      3742	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3	CALL_4
0x292a	      0x66c7002b20	                  mov word [rax], 0x202b	      3742	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3	CALL_4
0x292f	        0xc6400200	                   mov byte [rax + 2], 0	      3742	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3	CALL_4
0x2933	        0x8345e802	               add dword [rbp - 0x18], 2	      3743	mbyte.c	FUNCTION_66	FOR_1	IF_2	IF_3
0x2937	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3745	mbyte.c	FUNCTION_66	FOR_1	IF_2	CALL_5
0x293a	          0x4863d0	                         movsxd rdx, eax	      3745	mbyte.c	FUNCTION_66	FOR_1	IF_2	CALL_5
0x293d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3745	mbyte.c	FUNCTION_66	FOR_1	IF_2	CALL_5
0x2941	          0x4801d0	                            add rax, rdx	      3745	mbyte.c	FUNCTION_66	FOR_1	IF_2	CALL_5
0x2944	          0x4889c7	                            mov rdi, rax	      3745	mbyte.c	FUNCTION_66	FOR_1	IF_2	CALL_5
0x2947	      0xe800000000	                          call 0x400298c	      3745	mbyte.c	FUNCTION_66	FOR_1	IF_2	CALL_5
0x294c	          0x8945ec	             mov dword [rbp - 0x14], eax	      3745	mbyte.c	FUNCTION_66	FOR_1	IF_2	CALL_5
0x294f	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3748	mbyte.c	FUNCTION_66	FOR_1
0x2952	          0x4863d0	                         movsxd rdx, eax	      3748	mbyte.c	FUNCTION_66	FOR_1
0x2955	        0x488b45f8	                mov rax, qword [rbp - 8]	      3748	mbyte.c	FUNCTION_66	FOR_1
0x2959	          0x4801d0	                            add rax, rdx	      3748	mbyte.c	FUNCTION_66	FOR_1
0x295c	           0xfb600	                   movzx eax, byte [rax]	      3748	mbyte.c	FUNCTION_66	FOR_1
0x295f	            0x3c0a	                             cmp al, 0xa	      3747	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x2961	            0x7415	                            je 0x40029b8	      3747	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x2963	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3748	mbyte.c	FUNCTION_66	FOR_1
0x2966	          0x4863d0	                         movsxd rdx, eax	      3748	mbyte.c	FUNCTION_66	FOR_1
0x2969	        0x488b45f8	                mov rax, qword [rbp - 8]	      3748	mbyte.c	FUNCTION_66	FOR_1
0x296d	          0x4801d0	                            add rax, rdx	      3748	mbyte.c	FUNCTION_66	FOR_1
0x2970	           0xfb600	                   movzx eax, byte [rax]	      3748	mbyte.c	FUNCTION_66	FOR_1
0x2973	           0xfb6c0	                           movzx eax, al	      3747	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x2976	            0xeb05	                           jmp 0x40029bd	      3747	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x2978	      0xb800000000	                              mov eax, 0	      3747	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x297d	    0x488b0d000000	            mov rcx, qword [0x040029c4] 	      3747	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x2984	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      3747	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x2987	          0x4863d2	                         movsxd rdx, edx	      3747	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x298a	          0x4801d1	                            add rcx, rdx	      3747	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x298d	            0x89c2	                            mov edx, eax	      3747	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x298f	      0xbe00000000	                              mov esi, 0	      3747	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x2994	          0x4889cf	                            mov rdi, rcx	      3747	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x2997	      0xb800000000	                              mov eax, 0	      3747	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x299c	      0xe800000000	                          call 0x40029e1	      3747	mbyte.c	FUNCTION_66	FOR_1	CALL_6
0x29a1	        0x836dec01	               sub dword [rbp - 0x14], 1	      3749	mbyte.c	FUNCTION_66	FOR_1
0x29a5	    0x488b15000000	            mov rdx, qword [0x040029ec] 	      3750	mbyte.c	FUNCTION_66	FOR_1	CALL_7
0x29ac	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3750	mbyte.c	FUNCTION_66	FOR_1	CALL_7
0x29af	            0x4898	                                    cdqe	      3750	mbyte.c	FUNCTION_66	FOR_1	CALL_7
0x29b1	          0x4801d0	                            add rax, rdx	      3750	mbyte.c	FUNCTION_66	FOR_1	CALL_7
0x29b4	          0x4889c7	                            mov rdi, rax	      3750	mbyte.c	FUNCTION_66	FOR_1	CALL_7
0x29b7	      0xe800000000	                          call 0x40029fc	      3750	mbyte.c	FUNCTION_66	FOR_1	CALL_7
0x29bc	           0x145e8	             add dword [rbp - 0x18], eax	      3750	mbyte.c	FUNCTION_66	FOR_1	CALL_7
0x29bf	    0x817de8ed0300	          cmp dword [rbp - 0x18], 0x3ed 	      3751	mbyte.c	FUNCTION_66	FOR_1	IF_4
0x29c6	            0x7f12	                            jg 0x4002a1a	      3751	mbyte.c	FUNCTION_66	FOR_1	IF_4
0x29c8	        0x8345f001	               add dword [rbp - 0x10], 1	      3735	mbyte.c	FUNCTION_66	FOR_1
0x29cc	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3735	mbyte.c	FUNCTION_66	FOR_1
0x29cf	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      3735	mbyte.c	FUNCTION_66	FOR_1
0x29d2	     0xf8c37ffffff	                            jl 0x400294f	      3735	mbyte.c	FUNCTION_66	FOR_1
0x29d8	            0xeb01	                           jmp 0x4002a1b	      3735	mbyte.c	FUNCTION_66	FOR_1
0x29da	              0x90	                                     nop	      3752	mbyte.c	FUNCTION_66	FOR_1	IF_4
0x29db	    0x488b05000000	            mov rax, qword [0x04002a22] 	      3755	mbyte.c	FUNCTION_66	CALL_8
0x29e2	          0x4889c7	                            mov rdi, rax	      3755	mbyte.c	FUNCTION_66	CALL_8
0x29e5	      0xe800000000	                          call 0x4002a2a	      3755	mbyte.c	FUNCTION_66	CALL_8
0x29ea	              0xc9	                                   leave	      3756	mbyte.c	FUNCTION_66
0x29eb	              0xc3	                                     ret	      3756	mbyte.c	FUNCTION_66
bomb_size	CALL,4:WHILE,0:functions,0:ELSE,4:IF,7:DO,0:SWITCH,0:FOR,0	67
0x6c0	              0x55	                                push rbp	       825	mbyte.c	FUNCTION_5
0x6c1	          0x4889e5	                            mov rbp, rsp	       825	mbyte.c	FUNCTION_5
0x6c4	        0x4883ec10	                           sub rsp, 0x10	       825	mbyte.c	FUNCTION_5
0x6c8	    0xc745fc000000	                  mov dword [rbp - 4], 0	       826	mbyte.c	FUNCTION_5
0x6cf	    0x488b05000000	            mov rax, qword [0x04000716] 	       828	mbyte.c	FUNCTION_5	IF_1
0x6d6	    0x8b80f4130000	          mov eax, dword [rax + 0x13f4] 	       828	mbyte.c	FUNCTION_5	IF_1
0x6dc	            0x85c0	                           test eax, eax	       828	mbyte.c	FUNCTION_5	IF_1
0x6de	     0xf8400010000	                            je 0x4000824	       828	mbyte.c	FUNCTION_5	IF_1
0x6e4	    0x488b05000000	            mov rax, qword [0x0400072b] 	       828	mbyte.c	FUNCTION_5	IF_1
0x6eb	    0x8b80f0130000	          mov eax, dword [rax + 0x13f0] 	       828	mbyte.c	FUNCTION_5	IF_1
0x6f1	            0x85c0	                           test eax, eax	       828	mbyte.c	FUNCTION_5	IF_1
0x6f3	     0xf85eb000000	                           jne 0x4000824	       828	mbyte.c	FUNCTION_5	IF_1
0x6f9	    0x488b05000000	            mov rax, qword [0x04000740] 	       830	mbyte.c	FUNCTION_5	IF_1	IF_2
0x700	    0x488b80701400	          mov rax, qword [rax + 0x1470] 	       830	mbyte.c	FUNCTION_5	IF_1	IF_2
0x707	           0xfb600	                   movzx eax, byte [rax]	       830	mbyte.c	FUNCTION_5	IF_1	IF_2
0x70a	            0x84c0	                             test al, al	       830	mbyte.c	FUNCTION_5	IF_1	IF_2
0x70c	            0x7532	                           jne 0x4000780	       830	mbyte.c	FUNCTION_5	IF_1	IF_2
0x70e	    0x8b0500000000	            mov eax, dword [0x04000754] 	       832	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3
0x714	            0x85c0	                           test eax, eax	       832	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3
0x716	     0xf84c8000000	                            je 0x4000824	       832	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3
0x71c	    0x8b0500000000	            mov eax, dword [0x04000762] 	       834	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	IF_4
0x722	            0x85c0	                           test eax, eax	       834	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	IF_4
0x724	            0x740e	                            je 0x4000774	       834	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	IF_4
0x726	    0x8b0500000000	            mov eax, dword [0x0400076c] 	       835	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	IF_4
0x72c	          0x8945fc	                mov dword [rbp - 4], eax	       835	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	IF_4
0x72f	      0xe9b0000000	                           jmp 0x4000824	       835	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	IF_4
0x734	    0xc745fc030000	                  mov dword [rbp - 4], 3	       837	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	ELSE_1
0x73b	      0xe9a4000000	                           jmp 0x4000824	       837	mbyte.c	FUNCTION_5	IF_1	IF_2	IF_3	ELSE_1
0x740	    0x488b05000000	            mov rax, qword [0x04000787] 	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x747	    0x488b80701400	          mov rax, qword [rax + 0x1470] 	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x74e	      0xbe00000000	                              mov esi, 0	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x753	          0x4889c7	                            mov rdi, rax	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x756	      0xe800000000	                          call 0x400079b	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x75b	            0x85c0	                           test eax, eax	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x75d	            0x7509	                           jne 0x40007a8	       840	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5	CALL_1
0x75f	    0xc745fc030000	                  mov dword [rbp - 4], 3	       841	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5
0x766	            0xeb7c	                           jmp 0x4000824	       841	mbyte.c	FUNCTION_5	IF_1	ELSE_2	IF_5
0x768	    0x488b05000000	            mov rax, qword [0x040007af] 	       842	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x76f	    0x488b80701400	          mov rax, qword [rax + 0x1470] 	       842	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x776	      0xba05000000	                              mov edx, 5	       842	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x77b	      0xbe00000000	                              mov esi, 0	       842	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x780	          0x4889c7	                            mov rdi, rax	       842	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x783	      0xe800000000	                          call 0x40007c8	       842	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x788	            0x85c0	                           test eax, eax	       842	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x78a	            0x7424	                            je 0x40007f0	       842	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_2
0x78c	    0x488b05000000	            mov rax, qword [0x040007d3] 	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x793	    0x488b80701400	          mov rax, qword [rax + 0x1470] 	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x79a	      0xba06000000	                              mov edx, 6	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x79f	      0xbe00000000	                              mov esi, 0	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x7a4	          0x4889c7	                            mov rdi, rax	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x7a7	      0xe800000000	                          call 0x40007ec	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x7ac	            0x85c0	                           test eax, eax	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x7ae	            0x7509	                           jne 0x40007f9	       843	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6	CALL_3
0x7b0	    0xc745fc020000	                  mov dword [rbp - 4], 2	       844	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6
0x7b7	            0xeb2b	                           jmp 0x4000824	       844	mbyte.c	FUNCTION_5	IF_1	ELSE_3	IF_6
0x7b9	    0x488b05000000	            mov rax, qword [0x04000800] 	       845	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x7c0	    0x488b80701400	          mov rax, qword [rax + 0x1470] 	       845	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x7c7	      0xba05000000	                              mov edx, 5	       845	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x7cc	      0xbe00000000	                              mov esi, 0	       845	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x7d1	          0x4889c7	                            mov rdi, rax	       845	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x7d4	      0xe800000000	                          call 0x4000819	       845	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x7d9	            0x85c0	                           test eax, eax	       845	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x7db	            0x7507	                           jne 0x4000824	       845	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7	CALL_4
0x7dd	    0xc745fc040000	                  mov dword [rbp - 4], 4	       846	mbyte.c	FUNCTION_5	IF_1	ELSE_4	IF_7
0x7e4	          0x8b45fc	                mov eax, dword [rbp - 4]	       848	mbyte.c	FUNCTION_5
0x7e7	              0xc9	                                   leave	       849	mbyte.c	FUNCTION_5
0x7e8	              0xc3	                                     ret	       849	mbyte.c	FUNCTION_5
utf_ptr2cells	CALL,4:WHILE,0:functions,0:ELSE,0:IF,3:DO,0:SWITCH,0:FOR,0	34
0xebf	              0x55	                                push rbp	      1626	mbyte.c	FUNCTION_22
0xec0	          0x4889e5	                            mov rbp, rsp	      1626	mbyte.c	FUNCTION_22
0xec3	        0x4883ec20	                           sub rsp, 0x20	      1626	mbyte.c	FUNCTION_22
0xec7	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1626	mbyte.c	FUNCTION_22
0xecb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1630	mbyte.c	FUNCTION_22	IF_1
0xecf	           0xfb600	                   movzx eax, byte [rax]	      1630	mbyte.c	FUNCTION_22	IF_1
0xed2	            0x84c0	                             test al, al	      1630	mbyte.c	FUNCTION_22	IF_1
0xed4	            0x794b	                           jns 0x4000f61	      1630	mbyte.c	FUNCTION_22	IF_1
0xed6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1632	mbyte.c	FUNCTION_22	IF_1	CALL_1
0xeda	          0x4889c7	                            mov rdi, rax	      1632	mbyte.c	FUNCTION_22	IF_1	CALL_1
0xedd	      0xe800000000	                          call 0x4000f22	      1632	mbyte.c	FUNCTION_22	IF_1	CALL_1
0xee2	          0x8945fc	                mov dword [rbp - 4], eax	      1632	mbyte.c	FUNCTION_22	IF_1	CALL_1
0xee5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1634	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0xee9	          0x4889c7	                            mov rdi, rax	      1634	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0xeec	      0xe800000000	                          call 0x4000f31	      1634	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0xef1	          0x83f801	                              cmp eax, 1	      1634	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0xef4	            0x7406	                            je 0x4000f3c	      1634	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0xef6	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1634	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0xefa	            0x7507	                           jne 0x4000f43	      1634	mbyte.c	FUNCTION_22	IF_1	IF_2	CALL_2
0xefc	      0xb804000000	                              mov eax, 4	      1635	mbyte.c	FUNCTION_22	IF_1	IF_2
0xf01	            0xeb23	                           jmp 0x4000f66	      1635	mbyte.c	FUNCTION_22	IF_1	IF_2
0xf03	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      1637	mbyte.c	FUNCTION_22	IF_1	IF_3
0xf07	            0x7f0c	                            jg 0x4000f55	      1637	mbyte.c	FUNCTION_22	IF_1	IF_3
0xf09	          0x8b45fc	                mov eax, dword [rbp - 4]	      1638	mbyte.c	FUNCTION_22	IF_1	CALL_3
0xf0c	            0x89c7	                            mov edi, eax	      1638	mbyte.c	FUNCTION_22	IF_1	CALL_3
0xf0e	      0xe800000000	                          call 0x4000f53	      1638	mbyte.c	FUNCTION_22	IF_1	CALL_3
0xf13	            0xeb11	                           jmp 0x4000f66	      1638	mbyte.c	FUNCTION_22	IF_1	CALL_3
0xf15	          0x8b45fc	                mov eax, dword [rbp - 4]	      1639	mbyte.c	FUNCTION_22	IF_1	CALL_4
0xf18	            0x89c7	                            mov edi, eax	      1639	mbyte.c	FUNCTION_22	IF_1	CALL_4
0xf1a	      0xe800000000	                          call 0x4000f5f	      1639	mbyte.c	FUNCTION_22	IF_1	CALL_4
0xf1f	            0xeb05	                           jmp 0x4000f66	      1639	mbyte.c	FUNCTION_22	IF_1	CALL_4
0xf21	      0xb801000000	                              mov eax, 1	      1641	mbyte.c	FUNCTION_22
0xf26	              0xc9	                                   leave	      1642	mbyte.c	FUNCTION_22
0xf27	              0xc3	                                     ret	      1642	mbyte.c	FUNCTION_22
latin_ptr2char	CALL,0:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	8
0x11e2	              0x55	                                push rbp	      1771	mbyte.c	FUNCTION_33
0x11e3	          0x4889e5	                            mov rbp, rsp	      1771	mbyte.c	FUNCTION_33
0x11e6	        0x48897df8	                mov qword [rbp - 8], rdi	      1771	mbyte.c	FUNCTION_33
0x11ea	        0x488b45f8	                mov rax, qword [rbp - 8]	      1772	mbyte.c	FUNCTION_33
0x11ee	           0xfb600	                   movzx eax, byte [rax]	      1772	mbyte.c	FUNCTION_33
0x11f1	           0xfb6c0	                           movzx eax, al	      1772	mbyte.c	FUNCTION_33
0x11f4	              0x5d	                                 pop rbp	      1773	mbyte.c	FUNCTION_33
0x11f5	              0xc3	                                     ret	      1773	mbyte.c	FUNCTION_33
dbcs_screen_head_off	CALL,2:WHILE,1:functions,0:ELSE,1:IF,2:DO,0:SWITCH,0:FOR,0	56
0x2a7c	              0x55	                                push rbp	      3794	mbyte.c	FUNCTION_69
0x2a7d	          0x4889e5	                            mov rbp, rsp	      3794	mbyte.c	FUNCTION_69
0x2a80	        0x4883ec20	                           sub rsp, 0x20	      3794	mbyte.c	FUNCTION_69
0x2a84	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3794	mbyte.c	FUNCTION_69
0x2a88	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3794	mbyte.c	FUNCTION_69
0x2a8c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3801	mbyte.c	FUNCTION_69	IF_1
0x2a90	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3801	mbyte.c	FUNCTION_69	IF_1
0x2a94	            0x7642	                           jbe 0x4002b18	      3801	mbyte.c	FUNCTION_69	IF_1
0x2a96	    0x8b0500000000	            mov eax, dword [0x04002adc] 	      3802	mbyte.c	FUNCTION_69	IF_1
0x2a9c	      0x3dcc260000	                         cmp eax, 0x26cc	      3802	mbyte.c	FUNCTION_69	IF_1
0x2aa1	            0x750f	                           jne 0x4002af2	      3802	mbyte.c	FUNCTION_69	IF_1
0x2aa3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3802	mbyte.c	FUNCTION_69	IF_1
0x2aa7	        0x4883e801	                              sub rax, 1	      3802	mbyte.c	FUNCTION_69	IF_1
0x2aab	           0xfb600	                   movzx eax, byte [rax]	      3802	mbyte.c	FUNCTION_69	IF_1
0x2aae	            0x3c8e	                            cmp al, 0x8e	      3802	mbyte.c	FUNCTION_69	IF_1
0x2ab0	            0x7426	                            je 0x4002b18	      3802	mbyte.c	FUNCTION_69	IF_1
0x2ab2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3803	mbyte.c	FUNCTION_69	IF_1	CALL_1
0x2ab6	        0x4883e801	                              sub rax, 1	      3803	mbyte.c	FUNCTION_69	IF_1	CALL_1
0x2aba	           0xfb600	                   movzx eax, byte [rax]	      3803	mbyte.c	FUNCTION_69	IF_1	CALL_1
0x2abd	           0xfb6c0	                           movzx eax, al	      3803	mbyte.c	FUNCTION_69	IF_1	CALL_1
0x2ac0	            0x4898	                                    cdqe	      3803	mbyte.c	FUNCTION_69	IF_1	CALL_1
0x2ac2	     0xfb680000000	                   movzx eax, byte [rax]	      3803	mbyte.c	FUNCTION_69	IF_1	CALL_1
0x2ac9	            0x3c01	                               cmp al, 1	      3803	mbyte.c	FUNCTION_69	IF_1	CALL_1
0x2acb	            0x740b	                            je 0x4002b18	      3803	mbyte.c	FUNCTION_69	IF_1	CALL_1
0x2acd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3804	mbyte.c	FUNCTION_69	IF_1
0x2ad1	           0xfb600	                   movzx eax, byte [rax]	      3804	mbyte.c	FUNCTION_69	IF_1
0x2ad4	            0x84c0	                             test al, al	      3804	mbyte.c	FUNCTION_69	IF_1
0x2ad6	            0x7507	                           jne 0x4002b1f	      3804	mbyte.c	FUNCTION_69	IF_1
0x2ad8	      0xb800000000	                              mov eax, 0	      3805	mbyte.c	FUNCTION_69	IF_1
0x2add	            0xeb53	                           jmp 0x4002b72	      3805	mbyte.c	FUNCTION_69	IF_1
0x2adf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3811	mbyte.c	FUNCTION_69
0x2ae3	        0x488945f8	                mov qword [rbp - 8], rax	      3811	mbyte.c	FUNCTION_69
0x2ae7	            0xeb31	                           jmp 0x4002b5a	      3812	mbyte.c	FUNCTION_69	WHILE_1
0x2ae9	    0x8b0500000000	            mov eax, dword [0x04002b2f] 	      3814	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x2aef	      0x3dcc260000	                         cmp eax, 0x26cc	      3814	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x2af4	            0x7512	                           jne 0x4002b48	      3814	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x2af6	        0x488b45f8	                mov rax, qword [rbp - 8]	      3814	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x2afa	           0xfb600	                   movzx eax, byte [rax]	      3814	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x2afd	            0x3c8e	                            cmp al, 0x8e	      3814	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x2aff	            0x7507	                           jne 0x4002b48	      3814	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x2b01	      0x488345f801	                  add qword [rbp - 8], 1	      3815	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x2b06	            0xeb12	                           jmp 0x4002b5a	      3815	mbyte.c	FUNCTION_69	WHILE_1	IF_2
0x2b08	        0x488b45f8	                mov rax, qword [rbp - 8]	      3817	mbyte.c	FUNCTION_69	WHILE_1	CALL_2
0x2b0c	          0x4889c7	                            mov rdi, rax	      3817	mbyte.c	FUNCTION_69	WHILE_1	CALL_2
0x2b0f	      0xe803e1ffff	                   call sym.dbcs_ptr2len	      3817	mbyte.c	FUNCTION_69	WHILE_1	CALL_2
0x2b14	            0x4898	                                    cdqe	      3817	mbyte.c	FUNCTION_69	WHILE_1	CALL_2
0x2b16	        0x480145f8	                add qword [rbp - 8], rax	      3817	mbyte.c	FUNCTION_69	WHILE_1	CALL_2
0x2b1a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3812	mbyte.c	FUNCTION_69	WHILE_1
0x2b1e	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3812	mbyte.c	FUNCTION_69	WHILE_1
0x2b22	            0x72c5	                            jb 0x4002b29	      3812	mbyte.c	FUNCTION_69	WHILE_1
0x2b24	        0x488b45f8	                mov rax, qword [rbp - 8]	      3819	mbyte.c	FUNCTION_69
0x2b28	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3819	mbyte.c	FUNCTION_69
0x2b2c	           0xf95c0	                                setne al	      3819	mbyte.c	FUNCTION_69
0x2b2f	           0xfb6c0	                           movzx eax, al	      3819	mbyte.c	FUNCTION_69
0x2b32	              0xc9	                                   leave	      3820	mbyte.c	FUNCTION_69
0x2b33	              0xc3	                                     ret	      3820	mbyte.c	FUNCTION_69
latin_char2len	CALL,0:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	6
0xb4c	              0x55	                                push rbp	      1082	mbyte.c	ELSE_8	FUNCTION_10
0xb4d	          0x4889e5	                            mov rbp, rsp	      1082	mbyte.c	ELSE_8	FUNCTION_10
0xb50	          0x897dfc	                mov dword [rbp - 4], edi	      1082	mbyte.c	ELSE_8	FUNCTION_10
0xb53	      0xb801000000	                              mov eax, 1	      1083	mbyte.c	ELSE_8	FUNCTION_10
0xb58	              0x5d	                                 pop rbp	      1084	mbyte.c	ELSE_8	FUNCTION_10
0xb59	              0xc3	                                     ret	      1084	mbyte.c	ELSE_8	FUNCTION_10
utfc_ptr2len	CALL,3:WHILE,0:functions,0:ELSE,0:IF,4:DO,0:SWITCH,0:FOR,1	66
0x1c14	              0x55	                                push rbp	      2140	mbyte.c	FUNCTION_48
0x1c15	          0x4889e5	                            mov rbp, rsp	      2140	mbyte.c	FUNCTION_48
0x1c18	        0x4883ec20	                           sub rsp, 0x20	      2140	mbyte.c	FUNCTION_48
0x1c1c	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2140	mbyte.c	FUNCTION_48
0x1c20	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2142	mbyte.c	FUNCTION_48
0x1c24	           0xfb600	                   movzx eax, byte [rax]	      2142	mbyte.c	FUNCTION_48
0x1c27	           0xfb6c0	                           movzx eax, al	      2142	mbyte.c	FUNCTION_48
0x1c2a	          0x8945fc	                mov dword [rbp - 4], eax	      2142	mbyte.c	FUNCTION_48
0x1c2d	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2147	mbyte.c	FUNCTION_48	IF_1
0x1c31	            0x750a	                           jne 0x4001c7d	      2147	mbyte.c	FUNCTION_48	IF_1
0x1c33	      0xb800000000	                              mov eax, 0	      2148	mbyte.c	FUNCTION_48	IF_1
0x1c38	      0xe9aa000000	                           jmp 0x4001d27	      2148	mbyte.c	FUNCTION_48	IF_1
0x1c3d	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      2149	mbyte.c	FUNCTION_48	IF_2
0x1c41	            0x7f19	                            jg 0x4001c9c	      2149	mbyte.c	FUNCTION_48	IF_2
0x1c43	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2149	mbyte.c	FUNCTION_48	IF_2
0x1c47	        0x4883c001	                              add rax, 1	      2149	mbyte.c	FUNCTION_48	IF_2
0x1c4b	           0xfb600	                   movzx eax, byte [rax]	      2149	mbyte.c	FUNCTION_48	IF_2
0x1c4e	            0x84c0	                             test al, al	      2149	mbyte.c	FUNCTION_48	IF_2
0x1c50	            0x780a	                            js 0x4001c9c	      2149	mbyte.c	FUNCTION_48	IF_2
0x1c52	      0xb801000000	                              mov eax, 1	      2150	mbyte.c	FUNCTION_48	IF_2
0x1c57	      0xe98b000000	                           jmp 0x4001d27	      2150	mbyte.c	FUNCTION_48	IF_2
0x1c5c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2153	mbyte.c	FUNCTION_48	CALL_1
0x1c60	          0x4889c7	                            mov rdi, rax	      2153	mbyte.c	FUNCTION_48	CALL_1
0x1c63	      0xe800000000	                          call 0x4001ca8	      2153	mbyte.c	FUNCTION_48	CALL_1
0x1c68	          0x8945f4	              mov dword [rbp - 0xc], eax	      2153	mbyte.c	FUNCTION_48	CALL_1
0x1c6b	        0x837df401	                cmp dword [rbp - 0xc], 1	      2156	mbyte.c	FUNCTION_48	IF_3
0x1c6f	            0x750d	                           jne 0x4001cbe	      2156	mbyte.c	FUNCTION_48	IF_3
0x1c71	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      2156	mbyte.c	FUNCTION_48	IF_3
0x1c75	            0x7e07	                           jle 0x4001cbe	      2156	mbyte.c	FUNCTION_48	IF_3
0x1c77	      0xb801000000	                              mov eax, 1	      2157	mbyte.c	FUNCTION_48	IF_3
0x1c7c	            0xeb69	                           jmp 0x4001d27	      2157	mbyte.c	FUNCTION_48	IF_3
0x1c7e	    0xc745f8000000	                  mov dword [rbp - 8], 0	      2164	mbyte.c	FUNCTION_48
0x1c85	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2168	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x1c88	          0x4863d0	                         movsxd rdx, eax	      2168	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x1c8b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2168	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x1c8f	          0x4801d0	                            add rax, rdx	      2168	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x1c92	           0xfb600	                   movzx eax, byte [rax]	      2168	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x1c95	            0x84c0	                             test al, al	      2168	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x1c97	            0x7929	                           jns 0x4001d02	      2168	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x1c99	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2168	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x1c9c	          0x4863d0	                         movsxd rdx, eax	      2168	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x1c9f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2168	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x1ca3	          0x4801c2	                            add rdx, rax	      2168	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x1ca6	          0x8b45f8	                mov eax, dword [rbp - 8]	      2168	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x1ca9	          0x4863c8	                         movsxd rcx, eax	      2168	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x1cac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2168	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x1cb0	          0x4801c8	                            add rax, rcx	      2168	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x1cb3	          0x4889d6	                            mov rsi, rdx	      2168	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x1cb6	          0x4889c7	                            mov rdi, rax	      2168	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x1cb9	      0xe800000000	                          call 0x4001cfe	      2168	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x1cbe	            0x85c0	                           test eax, eax	      2168	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x1cc0	            0x7505	                           jne 0x4001d07	      2168	mbyte.c	FUNCTION_48	FOR_1	IF_4	CALL_2
0x1cc2	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2169	mbyte.c	FUNCTION_48	FOR_1	IF_4
0x1cc5	            0xeb20	                           jmp 0x4001d27	      2169	mbyte.c	FUNCTION_48	FOR_1	IF_4
0x1cc7	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2173	mbyte.c	FUNCTION_48	FOR_1
0x1cca	          0x8945f8	                mov dword [rbp - 8], eax	      2173	mbyte.c	FUNCTION_48	FOR_1
0x1ccd	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2175	mbyte.c	FUNCTION_48	FOR_1	CALL_3
0x1cd0	          0x4863d0	                         movsxd rdx, eax	      2175	mbyte.c	FUNCTION_48	FOR_1	CALL_3
0x1cd3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2175	mbyte.c	FUNCTION_48	FOR_1	CALL_3
0x1cd7	          0x4801d0	                            add rax, rdx	      2175	mbyte.c	FUNCTION_48	FOR_1	CALL_3
0x1cda	          0x4889c7	                            mov rdi, rax	      2175	mbyte.c	FUNCTION_48	FOR_1	CALL_3
0x1cdd	      0xe800000000	                          call 0x4001d22	      2175	mbyte.c	FUNCTION_48	FOR_1	CALL_3
0x1ce2	           0x145f4	              add dword [rbp - 0xc], eax	      2175	mbyte.c	FUNCTION_48	FOR_1	CALL_3
0x1ce5	            0xeb9e	                           jmp 0x4001cc5	      2176	mbyte.c	FUNCTION_48	FOR_1
0x1ce7	              0xc9	                                   leave	      2177	mbyte.c	FUNCTION_48
0x1ce8	              0xc3	                                     ret	      2177	mbyte.c	FUNCTION_48
mb_tail_off	CALL,2:WHILE,0:functions,0:ELSE,0:IF,5:DO,0:SWITCH,0:FOR,2	97
0x2e20	              0x55	                                push rbp	      3933	mbyte.c	FUNCTION_73
0x2e21	          0x4889e5	                            mov rbp, rsp	      3933	mbyte.c	FUNCTION_73
0x2e24	        0x4883ec20	                           sub rsp, 0x20	      3933	mbyte.c	FUNCTION_73
0x2e28	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3933	mbyte.c	FUNCTION_73
0x2e2c	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3933	mbyte.c	FUNCTION_73
0x2e30	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3937	mbyte.c	FUNCTION_73	IF_1
0x2e34	           0xfb600	                   movzx eax, byte [rax]	      3937	mbyte.c	FUNCTION_73	IF_1
0x2e37	            0x84c0	                             test al, al	      3937	mbyte.c	FUNCTION_73	IF_1
0x2e39	            0x750a	                           jne 0x4002e85	      3937	mbyte.c	FUNCTION_73	IF_1
0x2e3b	      0xb800000000	                              mov eax, 0	      3938	mbyte.c	FUNCTION_73	IF_1
0x2e40	      0xe915010000	                           jmp 0x4002f9a	      3938	mbyte.c	FUNCTION_73	IF_1
0x2e45	    0x8b0500000000	            mov eax, dword [0x04002e8b] 	      3940	mbyte.c	FUNCTION_73	IF_2
0x2e4b	            0x85c0	                           test eax, eax	      3940	mbyte.c	FUNCTION_73	IF_2
0x2e4d	     0xf84b4000000	                            je 0x4002f47	      3940	mbyte.c	FUNCTION_73	IF_2
0x2e53	    0xc745f8000000	                  mov dword [rbp - 8], 0	      3943	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x2e5a	            0xeb04	                           jmp 0x4002ea0	      3943	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x2e5c	        0x8345f801	                  add dword [rbp - 8], 1	      3943	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x2e60	          0x8b45f8	                mov eax, dword [rbp - 8]	      3943	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x2e63	            0x4898	                                    cdqe	      3943	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x2e65	        0x488d5001	                      lea rdx, [rax + 1]	      3943	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x2e69	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3943	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x2e6d	          0x4801d0	                            add rax, rdx	      3943	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x2e70	           0xfb600	                   movzx eax, byte [rax]	      3943	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x2e73	           0xfb6c0	                           movzx eax, al	      3943	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x2e76	      0x25c0000000	                           and eax, 0xc0	      3943	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x2e7b	      0x3d80000000	                           cmp eax, 0x80	      3943	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x2e80	            0x74da	                            je 0x4002e9c	      3943	mbyte.c	FUNCTION_73	IF_2	FOR_1
0x2e82	    0xc745fc000000	                  mov dword [rbp - 4], 0	      3946	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x2e89	            0xeb25	                           jmp 0x4002ef0	      3946	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x2e8b	          0x8b45fc	                mov eax, dword [rbp - 4]	      3947	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x2e8e	            0xf7d8	                                 neg eax	      3947	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x2e90	          0x4863d0	                         movsxd rdx, eax	      3947	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x2e93	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3947	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x2e97	          0x4801d0	                            add rax, rdx	      3947	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x2e9a	           0xfb600	                   movzx eax, byte [rax]	      3947	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x2e9d	           0xfb6c0	                           movzx eax, al	      3947	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x2ea0	      0x25c0000000	                           and eax, 0xc0	      3947	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x2ea5	      0x3d80000000	                           cmp eax, 0x80	      3947	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x2eaa	            0x751e	                           jne 0x4002f0a	      3947	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x2eac	        0x8345fc01	                  add dword [rbp - 4], 1	      3946	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x2eb0	          0x8b45fc	                mov eax, dword [rbp - 4]	      3946	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x2eb3	            0x4898	                                    cdqe	      3946	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x2eb5	          0x48f7d8	                                 neg rax	      3946	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x2eb8	          0x4889c2	                            mov rdx, rax	      3946	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x2ebb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3946	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x2ebf	          0x4801d0	                            add rax, rdx	      3946	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x2ec2	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3946	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x2ec6	            0x77c3	                            ja 0x4002ecb	      3946	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x2ec8	            0xeb01	                           jmp 0x4002f0b	      3946	mbyte.c	FUNCTION_73	IF_2	FOR_2
0x2eca	              0x90	                                     nop	      3948	mbyte.c	FUNCTION_73	IF_2	FOR_2	IF_3
0x2ecb	          0x8b45fc	                mov eax, dword [rbp - 4]	      3949	mbyte.c	FUNCTION_73	IF_2	IF_4
0x2ece	            0xf7d8	                                 neg eax	      3949	mbyte.c	FUNCTION_73	IF_2	IF_4
0x2ed0	          0x4863d0	                         movsxd rdx, eax	      3949	mbyte.c	FUNCTION_73	IF_2	IF_4
0x2ed3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3949	mbyte.c	FUNCTION_73	IF_2	IF_4
0x2ed7	          0x4801d0	                            add rax, rdx	      3949	mbyte.c	FUNCTION_73	IF_2	IF_4
0x2eda	           0xfb600	                   movzx eax, byte [rax]	      3949	mbyte.c	FUNCTION_73	IF_2	IF_4
0x2edd	           0xfb6c0	                           movzx eax, al	      3949	mbyte.c	FUNCTION_73	IF_2	IF_4
0x2ee0	            0x4898	                                    cdqe	      3949	mbyte.c	FUNCTION_73	IF_2	IF_4
0x2ee2	     0xfb680000000	                   movzx eax, byte [rax]	      3949	mbyte.c	FUNCTION_73	IF_2	IF_4
0x2ee9	           0xfbec0	                           movsx eax, al	      3949	mbyte.c	FUNCTION_73	IF_2	IF_4
0x2eec	          0x8b4df8	                mov ecx, dword [rbp - 8]	      3949	mbyte.c	FUNCTION_73	IF_2	IF_4
0x2eef	          0x8b55fc	                mov edx, dword [rbp - 4]	      3949	mbyte.c	FUNCTION_73	IF_2	IF_4
0x2ef2	             0x1ca	                            add edx, ecx	      3949	mbyte.c	FUNCTION_73	IF_2	IF_4
0x2ef4	          0x83c201	                              add edx, 1	      3949	mbyte.c	FUNCTION_73	IF_2	IF_4
0x2ef7	            0x39d0	                            cmp eax, edx	      3949	mbyte.c	FUNCTION_73	IF_2	IF_4
0x2ef9	            0x7407	                            je 0x4002f42	      3949	mbyte.c	FUNCTION_73	IF_2	IF_4
0x2efb	      0xb800000000	                              mov eax, 0	      3950	mbyte.c	FUNCTION_73	IF_2	IF_4
0x2f00	            0xeb58	                           jmp 0x4002f9a	      3950	mbyte.c	FUNCTION_73	IF_2	IF_4
0x2f02	          0x8b45f8	                mov eax, dword [rbp - 8]	      3951	mbyte.c	FUNCTION_73	IF_2
0x2f05	            0xeb53	                           jmp 0x4002f9a	      3951	mbyte.c	FUNCTION_73	IF_2
0x2f07	    0x8b0500000000	            mov eax, dword [0x04002f4d] 	      3956	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x2f0d	            0x85c0	                           test eax, eax	      3956	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x2f0f	            0x7426	                            je 0x4002f77	      3956	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x2f11	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3956	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x2f15	        0x4883c001	                              add rax, 1	      3956	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x2f19	           0xfb600	                   movzx eax, byte [rax]	      3956	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x2f1c	            0x84c0	                             test al, al	      3956	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x2f1e	            0x7417	                            je 0x4002f77	      3956	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x2f20	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3956	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x2f24	           0xfb600	                   movzx eax, byte [rax]	      3956	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x2f27	           0xfb6c0	                           movzx eax, al	      3956	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x2f2a	            0x4898	                                    cdqe	      3956	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x2f2c	     0xfb680000000	                   movzx eax, byte [rax]	      3956	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x2f33	            0x3c01	                               cmp al, 1	      3956	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x2f35	            0x7507	                           jne 0x4002f7e	      3956	mbyte.c	FUNCTION_73	IF_5	CALL_1
0x2f37	      0xb800000000	                              mov eax, 0	      3957	mbyte.c	FUNCTION_73	IF_5
0x2f3c	            0xeb1c	                           jmp 0x4002f9a	      3957	mbyte.c	FUNCTION_73	IF_5
0x2f3e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3960	mbyte.c	FUNCTION_73	CALL_2
0x2f42	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3960	mbyte.c	FUNCTION_73	CALL_2
0x2f46	          0x4889d6	                            mov rsi, rdx	      3960	mbyte.c	FUNCTION_73	CALL_2
0x2f49	          0x4889c7	                            mov rdi, rax	      3960	mbyte.c	FUNCTION_73	CALL_2
0x2f4c	      0xe800000000	                          call 0x4002f91	      3960	mbyte.c	FUNCTION_73	CALL_2
0x2f51	      0xba01000000	                              mov edx, 1	      3960	mbyte.c	FUNCTION_73	CALL_2
0x2f56	            0x29c2	                            sub edx, eax	      3960	mbyte.c	FUNCTION_73	CALL_2
0x2f58	            0x89d0	                            mov eax, edx	      3960	mbyte.c	FUNCTION_73	CALL_2
0x2f5a	              0xc9	                                   leave	      3961	mbyte.c	FUNCTION_73
0x2f5b	              0xc3	                                     ret	      3961	mbyte.c	FUNCTION_73
latin_ptr2len	CALL,1:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	11
0xbf7	              0x55	                                push rbp	      1132	mbyte.c	FUNCTION_14
0xbf8	          0x4889e5	                            mov rbp, rsp	      1132	mbyte.c	FUNCTION_14
0xbfb	        0x48897df8	                mov qword [rbp - 8], rdi	      1132	mbyte.c	FUNCTION_14
0xbff	        0x488b45f8	                mov rax, qword [rbp - 8]	      1133	mbyte.c	FUNCTION_14	CALL_1
0xc03	           0xfb600	                   movzx eax, byte [rax]	      1133	mbyte.c	FUNCTION_14	CALL_1
0xc06	           0xfb6c0	                           movzx eax, al	      1133	mbyte.c	FUNCTION_14	CALL_1
0xc09	            0x4898	                                    cdqe	      1133	mbyte.c	FUNCTION_14	CALL_1
0xc0b	     0xfb680000000	                   movzx eax, byte [rax]	      1133	mbyte.c	FUNCTION_14	CALL_1
0xc12	           0xfbec0	                           movsx eax, al	      1133	mbyte.c	FUNCTION_14	CALL_1
0xc15	              0x5d	                                 pop rbp	      1134	mbyte.c	FUNCTION_14
0xc16	              0xc3	                                     ret	      1134	mbyte.c	FUNCTION_14
mb_get_class	CALL,1:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	11
0x878	              0x55	                                push rbp	       880	mbyte.c	ELSE_1	FUNCTION_7
0x879	          0x4889e5	                            mov rbp, rsp	       880	mbyte.c	ELSE_1	FUNCTION_7
0x87c	        0x4883ec10	                           sub rsp, 0x10	       880	mbyte.c	ELSE_1	FUNCTION_7
0x880	        0x48897df8	                mov qword [rbp - 8], rdi	       880	mbyte.c	ELSE_1	FUNCTION_7
0x884	    0x488b15000000	            mov rdx, qword [0x040008cb] 	       881	mbyte.c	ELSE_1	FUNCTION_7	CALL_1
0x88b	        0x488b45f8	                mov rax, qword [rbp - 8]	       881	mbyte.c	ELSE_1	FUNCTION_7	CALL_1
0x88f	          0x4889d6	                            mov rsi, rdx	       881	mbyte.c	ELSE_1	FUNCTION_7	CALL_1
0x892	          0x4889c7	                            mov rdi, rax	       881	mbyte.c	ELSE_1	FUNCTION_7	CALL_1
0x895	      0xe800000000	                          call 0x40008da	       881	mbyte.c	ELSE_1	FUNCTION_7	CALL_1
0x89a	              0xc9	                                   leave	       882	mbyte.c	ELSE_1	FUNCTION_7
0x89b	              0xc3	                                     ret	       882	mbyte.c	ELSE_1	FUNCTION_7
enc_canonize	CALL,20:WHILE,0:functions,0:ELSE,2:IF,11:DO,0:SWITCH,0:FOR,1	195
0x377d	              0x55	                                push rbp	      4300	mbyte.c	FUNCTION_86
0x377e	          0x4889e5	                            mov rbp, rsp	      4300	mbyte.c	FUNCTION_86
0x3781	        0x4883ec30	                           sub rsp, 0x30	      4300	mbyte.c	FUNCTION_86
0x3785	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4300	mbyte.c	FUNCTION_86
0x3789	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4306	mbyte.c	FUNCTION_86	IF_1	CALL_1
0x378d	      0xbe00000000	                              mov esi, 0	      4306	mbyte.c	FUNCTION_86	IF_1	CALL_1
0x3792	          0x4889c7	                            mov rdi, rax	      4306	mbyte.c	FUNCTION_86	IF_1	CALL_1
0x3795	      0xe800000000	                          call 0x40037da	      4306	mbyte.c	FUNCTION_86	IF_1	CALL_1
0x379a	            0x85c0	                           test eax, eax	      4306	mbyte.c	FUNCTION_86	IF_1	CALL_1
0x379c	            0x7529	                           jne 0x4003807	      4306	mbyte.c	FUNCTION_86	IF_1	CALL_1
0x379e	      0xe800000000	                          call 0x40037e3	      4309	mbyte.c	FUNCTION_86	IF_1	CALL_2
0x37a3	        0x488945e8	             mov qword [rbp - 0x18], rax	      4309	mbyte.c	FUNCTION_86	IF_1	CALL_2
0x37a7	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4310	mbyte.c	FUNCTION_86	IF_1	IF_2
0x37ac	            0x7508	                           jne 0x40037f6	      4310	mbyte.c	FUNCTION_86	IF_1	IF_2
0x37ae	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      4311	mbyte.c	FUNCTION_86	IF_1	IF_2
0x37b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4312	mbyte.c	FUNCTION_86	IF_1	CALL_3
0x37ba	          0x4889c7	                            mov rdi, rax	      4312	mbyte.c	FUNCTION_86	IF_1	CALL_3
0x37bd	      0xe800000000	                          call 0x4003802	      4312	mbyte.c	FUNCTION_86	IF_1	CALL_3
0x37c2	      0xe97a020000	                           jmp 0x4003a81	      4312	mbyte.c	FUNCTION_86	IF_1	CALL_3
0x37c7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4317	mbyte.c	FUNCTION_86	CALL_5
0x37cb	          0x4889c7	                            mov rdi, rax	      4317	mbyte.c	FUNCTION_86	CALL_5
0x37ce	      0xe800000000	                          call 0x4003813	      4317	mbyte.c	FUNCTION_86	CALL_5
0x37d3	          0x83c003	                              add eax, 3	      4317	mbyte.c	FUNCTION_86	CALL_5
0x37d6	            0x89c7	                            mov edi, eax	      4317	mbyte.c	FUNCTION_86	CALL_5
0x37d8	      0xe800000000	                          call 0x400381d	      4317	mbyte.c	FUNCTION_86	CALL_5
0x37dd	        0x488945e8	             mov qword [rbp - 0x18], rax	      4317	mbyte.c	FUNCTION_86	CALL_5
0x37e1	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4318	mbyte.c	FUNCTION_86	IF_3
0x37e6	     0xf8451020000	                            je 0x4003a7d	      4318	mbyte.c	FUNCTION_86	IF_3
0x37ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4321	mbyte.c	FUNCTION_86	IF_3
0x37f0	        0x488945f0	             mov qword [rbp - 0x10], rax	      4321	mbyte.c	FUNCTION_86	IF_3
0x37f4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4322	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x37f8	        0x488945f8	                mov qword [rbp - 8], rax	      4322	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x37fc	            0xeb5a	                           jmp 0x4003898	      4322	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x37fe	        0x488b45f8	                mov rax, qword [rbp - 8]	      4324	mbyte.c	FUNCTION_86	IF_3	FOR_1	IF_4
0x3802	           0xfb600	                   movzx eax, byte [rax]	      4324	mbyte.c	FUNCTION_86	IF_3	FOR_1	IF_4
0x3805	            0x3c5f	                            cmp al, 0x5f	      4324	mbyte.c	FUNCTION_86	IF_3	FOR_1	IF_4
0x3807	            0x7511	                           jne 0x400385a	      4324	mbyte.c	FUNCTION_86	IF_3	FOR_1	IF_4
0x3809	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4325	mbyte.c	FUNCTION_86	IF_3	FOR_1	IF_4
0x380d	        0x488d5001	                      lea rdx, [rax + 1]	      4325	mbyte.c	FUNCTION_86	IF_3	FOR_1	IF_4
0x3811	        0x488955f0	             mov qword [rbp - 0x10], rdx	      4325	mbyte.c	FUNCTION_86	IF_3	FOR_1	IF_4
0x3815	          0xc6002d	                    mov byte [rax], 0x2d	      4325	mbyte.c	FUNCTION_86	IF_3	FOR_1	IF_4
0x3818	            0xeb39	                           jmp 0x4003893	      4325	mbyte.c	FUNCTION_86	IF_3	FOR_1	IF_4
0x381a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4327	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x381e	        0x488d5001	                      lea rdx, [rax + 1]	      4327	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x3822	        0x488955f0	             mov qword [rbp - 0x10], rdx	      4327	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x3826	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4327	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x382a	           0xfb612	                   movzx edx, byte [rdx]	      4327	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x382d	          0x80fa40	                            cmp dl, 0x40	      4327	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x3830	            0x760c	                           jbe 0x400387e	      4327	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x3832	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4327	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x3836	           0xfb612	                   movzx edx, byte [rdx]	      4327	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x3839	          0x80fa5a	                            cmp dl, 0x5a	      4327	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x383c	            0x7609	                           jbe 0x4003887	      4327	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x383e	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4327	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x3842	           0xfb612	                   movzx edx, byte [rdx]	      4327	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x3845	            0xeb0a	                           jmp 0x4003891	      4327	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x3847	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4327	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x384b	           0xfb612	                   movzx edx, byte [rdx]	      4327	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x384e	          0x83c220	                           add edx, 0x20	      4327	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x3851	            0x8810	                      mov byte [rax], dl	      4327	mbyte.c	FUNCTION_86	IF_3	FOR_1	CALL_6
0x3853	      0x488345f801	                  add qword [rbp - 8], 1	      4322	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x3858	        0x488b45f8	                mov rax, qword [rbp - 8]	      4322	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x385c	           0xfb600	                   movzx eax, byte [rax]	      4322	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x385f	            0x84c0	                             test al, al	      4322	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x3861	            0x759b	                           jne 0x400383e	      4322	mbyte.c	FUNCTION_86	IF_3	FOR_1
0x3863	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4329	mbyte.c	FUNCTION_86	IF_3
0x3867	          0xc60000	                       mov byte [rax], 0	      4329	mbyte.c	FUNCTION_86	IF_3
0x386a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4332	mbyte.c	FUNCTION_86	IF_3	CALL_7
0x386e	          0x4889c7	                            mov rdi, rax	      4332	mbyte.c	FUNCTION_86	IF_3	CALL_7
0x3871	      0xe800000000	                          call 0x40038b6	      4332	mbyte.c	FUNCTION_86	IF_3	CALL_7
0x3876	        0x488945f0	             mov qword [rbp - 0x10], rax	      4332	mbyte.c	FUNCTION_86	IF_3	CALL_7
0x387a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4335	mbyte.c	FUNCTION_86	IF_3	IF_5	CALL_8
0x387e	      0xba0c000000	                            mov edx, 0xc	      4335	mbyte.c	FUNCTION_86	IF_3	IF_5	CALL_8
0x3883	      0xbe00000000	                              mov esi, 0	      4335	mbyte.c	FUNCTION_86	IF_3	IF_5	CALL_8
0x3888	          0x4889c7	                            mov rdi, rax	      4335	mbyte.c	FUNCTION_86	IF_3	IF_5	CALL_8
0x388b	      0xe800000000	                          call 0x40038d0	      4335	mbyte.c	FUNCTION_86	IF_3	IF_5	CALL_8
0x3890	            0x85c0	                           test eax, eax	      4335	mbyte.c	FUNCTION_86	IF_3	IF_5	CALL_8
0x3892	            0x752b	                           jne 0x40038ff	      4335	mbyte.c	FUNCTION_86	IF_3	IF_5	CALL_8
0x3894	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4336	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x3898	        0x4883c00a	                            add rax, 0xa	      4336	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x389c	          0x4889c7	                            mov rdi, rax	      4336	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x389f	      0xe800000000	                          call 0x40038e4	      4336	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x38a4	        0x488d5001	                      lea rdx, [rax + 1]	      4336	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x38a8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4336	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x38ac	        0x488d480a	                    lea rcx, [rax + 0xa]	      4336	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x38b0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4336	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x38b4	          0x4889ce	                            mov rsi, rcx	      4336	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x38b7	          0x4889c7	                            mov rdi, rax	      4336	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x38ba	      0xe800000000	                          call 0x40038ff	      4336	mbyte.c	FUNCTION_86	IF_3	CALL_9
0x38bf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4339	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_10
0x38c3	      0xba07000000	                              mov edx, 7	      4339	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_10
0x38c8	      0xbe00000000	                              mov esi, 0	      4339	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_10
0x38cd	          0x4889c7	                            mov rdi, rax	      4339	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_10
0x38d0	      0xe800000000	                          call 0x4003915	      4339	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_10
0x38d5	            0x85c0	                           test eax, eax	      4339	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_10
0x38d7	            0x753a	                           jne 0x4003953	      4339	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_10
0x38d9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4341	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x38dd	        0x4883c003	                              add rax, 3	      4341	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x38e1	          0x4889c7	                            mov rdi, rax	      4341	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x38e4	      0xe800000000	                          call 0x4003929	      4341	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x38e9	        0x488d5001	                      lea rdx, [rax + 1]	      4341	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x38ed	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4341	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x38f1	        0x488d4803	                      lea rcx, [rax + 3]	      4341	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x38f5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4341	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x38f9	        0x4883c004	                              add rax, 4	      4341	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x38fd	          0x4889ce	                            mov rsi, rcx	      4341	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x3900	          0x4889c7	                            mov rdi, rax	      4341	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x3903	      0xe800000000	                          call 0x4003948	      4341	mbyte.c	FUNCTION_86	IF_3	IF_6	CALL_11
0x3908	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4342	mbyte.c	FUNCTION_86	IF_3	IF_6
0x390c	        0x4883c003	                              add rax, 3	      4342	mbyte.c	FUNCTION_86	IF_3	IF_6
0x3910	          0xc6002d	                    mov byte [rax], 0x2d	      4342	mbyte.c	FUNCTION_86	IF_3	IF_6
0x3913	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4346	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x3917	      0xba08000000	                              mov edx, 8	      4346	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x391c	      0xbe00000000	                              mov esi, 0	      4346	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x3921	          0x4889c7	                            mov rdi, rax	      4346	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x3924	      0xe800000000	                          call 0x4003969	      4346	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x3929	            0x85c0	                           test eax, eax	      4346	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x392b	            0x7549	                           jne 0x40039b6	      4346	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x392d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4346	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x3931	        0x4883c008	                              add rax, 8	      4346	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x3935	           0xfb600	                   movzx eax, byte [rax]	      4346	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x3938	            0x3c2d	                            cmp al, 0x2d	      4346	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x393a	            0x743a	                            je 0x40039b6	      4346	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_12
0x393c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4348	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x3940	        0x4883c008	                              add rax, 8	      4348	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x3944	          0x4889c7	                            mov rdi, rax	      4348	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x3947	      0xe800000000	                          call 0x400398c	      4348	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x394c	        0x488d5001	                      lea rdx, [rax + 1]	      4348	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x3950	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4348	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x3954	        0x488d4808	                      lea rcx, [rax + 8]	      4348	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x3958	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4348	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x395c	        0x4883c009	                              add rax, 9	      4348	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x3960	          0x4889ce	                            mov rsi, rcx	      4348	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x3963	          0x4889c7	                            mov rdi, rax	      4348	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x3966	      0xe800000000	                          call 0x40039ab	      4348	mbyte.c	FUNCTION_86	IF_3	IF_7	CALL_13
0x396b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4349	mbyte.c	FUNCTION_86	IF_3	IF_7
0x396f	        0x4883c008	                              add rax, 8	      4349	mbyte.c	FUNCTION_86	IF_3	IF_7
0x3973	          0xc6002d	                    mov byte [rax], 0x2d	      4349	mbyte.c	FUNCTION_86	IF_3	IF_7
0x3976	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4353	mbyte.c	FUNCTION_86	IF_3	IF_8	CALL_14
0x397a	      0xba06000000	                              mov edx, 6	      4353	mbyte.c	FUNCTION_86	IF_3	IF_8	CALL_14
0x397f	      0xbe00000000	                              mov esi, 0	      4353	mbyte.c	FUNCTION_86	IF_3	IF_8	CALL_14
0x3984	          0x4889c7	                            mov rdi, rax	      4353	mbyte.c	FUNCTION_86	IF_3	IF_8	CALL_14
0x3987	      0xe800000000	                          call 0x40039cc	      4353	mbyte.c	FUNCTION_86	IF_3	IF_8	CALL_14
0x398c	            0x85c0	                           test eax, eax	      4353	mbyte.c	FUNCTION_86	IF_3	IF_8	CALL_14
0x398e	            0x752f	                           jne 0x40039ff	      4353	mbyte.c	FUNCTION_86	IF_3	IF_8	CALL_14
0x3990	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4354	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x3994	        0x4883c006	                              add rax, 6	      4354	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x3998	          0x4889c7	                            mov rdi, rax	      4354	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x399b	      0xe800000000	                          call 0x40039e0	      4354	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x39a0	        0x488d5001	                      lea rdx, [rax + 1]	      4354	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x39a4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4354	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x39a8	        0x488d4806	                      lea rcx, [rax + 6]	      4354	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x39ac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4354	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x39b0	        0x4883c005	                              add rax, 5	      4354	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x39b4	          0x4889ce	                            mov rsi, rcx	      4354	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x39b7	          0x4889c7	                            mov rdi, rax	      4354	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x39ba	      0xe800000000	                          call 0x40039ff	      4354	mbyte.c	FUNCTION_86	IF_3	CALL_15
0x39bf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4356	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_16
0x39c3	          0x4889c7	                            mov rdi, rax	      4356	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_16
0x39c6	      0xe835c6ffff	               call sym.enc_canon_search	      4356	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_16
0x39cb	            0x85c0	                           test eax, eax	      4356	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_16
0x39cd	            0x782f	                            js 0x4003a3e	      4356	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_16
0x39cf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4359	mbyte.c	FUNCTION_86	IF_3	IF_9	IF_10
0x39d3	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      4359	mbyte.c	FUNCTION_86	IF_3	IF_9	IF_10
0x39d7	            0x7464	                            je 0x4003a7d	      4359	mbyte.c	FUNCTION_86	IF_3	IF_9	IF_10
0x39d9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4360	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x39dd	          0x4889c7	                            mov rdi, rax	      4360	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x39e0	      0xe800000000	                          call 0x4003a25	      4360	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x39e5	        0x488d5001	                      lea rdx, [rax + 1]	      4360	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x39e9	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      4360	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x39ed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4360	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x39f1	          0x4889ce	                            mov rsi, rcx	      4360	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x39f4	          0x4889c7	                            mov rdi, rax	      4360	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x39f7	      0xe800000000	                          call 0x4003a3c	      4360	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x39fc	            0xeb3f	                           jmp 0x4003a7d	      4360	mbyte.c	FUNCTION_86	IF_3	IF_9	CALL_17
0x39fe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4362	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_18
0x3a02	          0x4889c7	                            mov rdi, rax	      4362	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_18
0x3a05	      0xe839000000	               call sym.enc_alias_search	      4362	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_18
0x3a0a	          0x8945e4	             mov dword [rbp - 0x1c], eax	      4362	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_18
0x3a0d	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4362	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_18
0x3a11	            0x782a	                            js 0x4003a7d	      4362	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_18
0x3a13	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4365	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_19
0x3a17	          0x4889c7	                            mov rdi, rax	      4365	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_19
0x3a1a	      0xe800000000	                          call 0x4003a5f	      4365	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_19
0x3a1f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4366	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_20
0x3a22	            0x4898	                                    cdqe	      4366	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_20
0x3a24	        0x48c1e004	                              shl rax, 4	      4366	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_20
0x3a28	    0x480500000000	                              add rax, 0	      4366	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_20
0x3a2e	          0x488b00	                    mov rax, qword [rax]	      4366	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_20
0x3a31	          0x4889c7	                            mov rdi, rax	      4366	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_20
0x3a34	      0xe800000000	                          call 0x4003a79	      4366	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_20
0x3a39	        0x488945e8	             mov qword [rbp - 0x18], rax	      4366	mbyte.c	FUNCTION_86	IF_3	ELSE_2	IF_11	CALL_20
0x3a3d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4369	mbyte.c	FUNCTION_86
0x3a41	              0xc9	                                   leave	      4370	mbyte.c	FUNCTION_86
0x3a42	              0xc3	                                     ret	      4370	mbyte.c	FUNCTION_86
utf_uint2cells	CALL,2:WHILE,0:functions,0:ELSE,0:IF,1:DO,0:SWITCH,0:FOR,0	18
0xdb0	              0x55	                                push rbp	      1404	mbyte.c	ELSE_2	FUNCTION_19
0xdb1	          0x4889e5	                            mov rbp, rsp	      1404	mbyte.c	ELSE_2	FUNCTION_19
0xdb4	        0x4883ec10	                           sub rsp, 0x10	      1404	mbyte.c	ELSE_2	FUNCTION_19
0xdb8	          0x897dfc	                mov dword [rbp - 4], edi	      1404	mbyte.c	ELSE_2	FUNCTION_19
0xdbb	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	      1405	mbyte.c	ELSE_2	FUNCTION_19	IF_1	CALL_1
0xdc2	            0x7615	                           jbe 0x4000e19	      1405	mbyte.c	ELSE_2	FUNCTION_19	IF_1	CALL_1
0xdc4	          0x8b45fc	                mov eax, dword [rbp - 4]	      1405	mbyte.c	ELSE_2	FUNCTION_19	IF_1	CALL_1
0xdc7	            0x89c7	                            mov edi, eax	      1405	mbyte.c	ELSE_2	FUNCTION_19	IF_1	CALL_1
0xdc9	      0xe800000000	                          call 0x4000e0e	      1405	mbyte.c	ELSE_2	FUNCTION_19	IF_1	CALL_1
0xdce	            0x85c0	                           test eax, eax	      1405	mbyte.c	ELSE_2	FUNCTION_19	IF_1	CALL_1
0xdd0	            0x7407	                            je 0x4000e19	      1405	mbyte.c	ELSE_2	FUNCTION_19	IF_1	CALL_1
0xdd2	      0xb800000000	                              mov eax, 0	      1406	mbyte.c	ELSE_2	FUNCTION_19	IF_1
0xdd7	            0xeb0a	                           jmp 0x4000e23	      1406	mbyte.c	ELSE_2	FUNCTION_19	IF_1
0xdd9	          0x8b45fc	                mov eax, dword [rbp - 4]	      1407	mbyte.c	ELSE_2	FUNCTION_19	CALL_2
0xddc	            0x89c7	                            mov edi, eax	      1407	mbyte.c	ELSE_2	FUNCTION_19	CALL_2
0xdde	      0xe800000000	                          call 0x4000e23	      1407	mbyte.c	ELSE_2	FUNCTION_19	CALL_2
0xde3	              0xc9	                                   leave	      1408	mbyte.c	ELSE_2	FUNCTION_19
0xde4	              0xc3	                                     ret	      1408	mbyte.c	ELSE_2	FUNCTION_19
mb_strnicmp	CALL,4:WHILE,0:functions,0:ELSE,2:IF,7:DO,0:SWITCH,0:FOR,1	118
0x2742	              0x55	                                push rbp	      3670	mbyte.c	FUNCTION_65
0x2743	          0x4889e5	                            mov rbp, rsp	      3670	mbyte.c	FUNCTION_65
0x2746	              0x53	                                push rbx	      3670	mbyte.c	FUNCTION_65
0x2747	        0x4883ec38	                           sub rsp, 0x38	      3670	mbyte.c	FUNCTION_65
0x274b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3670	mbyte.c	FUNCTION_65
0x274f	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3670	mbyte.c	FUNCTION_65
0x2753	        0x488955c8	             mov qword [rbp - 0x38], rdx	      3670	mbyte.c	FUNCTION_65
0x2757	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3673	mbyte.c	FUNCTION_65
0x275b	          0x8945e8	             mov dword [rbp - 0x18], eax	      3673	mbyte.c	FUNCTION_65
0x275e	    0x8b0500000000	            mov eax, dword [0x040027a4] 	      3675	mbyte.c	FUNCTION_65	IF_1
0x2764	            0x85c0	                           test eax, eax	      3675	mbyte.c	FUNCTION_65	IF_1
0x2766	            0x741d	                            je 0x40027c5	      3675	mbyte.c	FUNCTION_65	IF_1
0x2768	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      3677	mbyte.c	FUNCTION_65	IF_1	CALL_1
0x276c	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      3677	mbyte.c	FUNCTION_65	IF_1	CALL_1
0x2770	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      3677	mbyte.c	FUNCTION_65	IF_1	CALL_1
0x2774	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3677	mbyte.c	FUNCTION_65	IF_1	CALL_1
0x2778	          0x4889c7	                            mov rdi, rax	      3677	mbyte.c	FUNCTION_65	IF_1	CALL_1
0x277b	      0xe875fdffff	                   call sym.utf_strnicmp	      3677	mbyte.c	FUNCTION_65	IF_1	CALL_1
0x2780	      0xe934010000	                           jmp 0x40028f9	      3677	mbyte.c	FUNCTION_65	IF_1	CALL_1
0x2785	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x278c	      0xe917010000	                           jmp 0x40028e8	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x2791	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3683	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x2794	          0x4863d0	                         movsxd rdx, eax	      3683	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x2797	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3683	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x279b	          0x4801d0	                            add rax, rdx	      3683	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x279e	           0xfb600	                   movzx eax, byte [rax]	      3683	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x27a1	            0x84c0	                             test al, al	      3683	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x27a3	            0x751e	                           jne 0x4002803	      3683	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x27a5	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3683	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x27a8	          0x4863d0	                         movsxd rdx, eax	      3683	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x27ab	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3683	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x27af	          0x4801d0	                            add rax, rdx	      3683	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x27b2	           0xfb600	                   movzx eax, byte [rax]	      3683	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x27b5	            0x84c0	                             test al, al	      3683	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x27b7	            0x750a	                           jne 0x4002803	      3683	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x27b9	      0xb800000000	                              mov eax, 0	      3684	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x27be	      0xe9f6000000	                           jmp 0x40028f9	      3684	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_2
0x27c3	    0x488b05000000	            mov rax, qword [0x0400280a] 	      3686	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x27ca	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      3686	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x27cd	          0x4863ca	                         movsxd rcx, edx	      3686	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x27d0	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3686	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x27d4	          0x4801ca	                            add rdx, rcx	      3686	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x27d7	          0x4889d7	                            mov rdi, rdx	      3686	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x27da	            0xffd0	                                call rax	      3686	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x27dc	          0x8945e4	             mov dword [rbp - 0x1c], eax	      3686	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x27df	        0x837de401	               cmp dword [rbp - 0x1c], 1	      3687	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3
0x27e3	            0x7f70	                            jg 0x4002895	      3687	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3
0x27e5	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x27e8	          0x4863d0	                         movsxd rdx, eax	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x27eb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x27ef	          0x4801d0	                            add rax, rdx	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x27f2	           0xfb610	                   movzx edx, byte [rax]	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x27f5	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x27f8	          0x4863c8	                         movsxd rcx, eax	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x27fb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x27ff	          0x4801c8	                            add rax, rcx	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x2802	           0xfb600	                   movzx eax, byte [rax]	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x2805	            0x38c2	                              cmp dl, al	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x2807	     0xf8495000000	                            je 0x40028e2	      3690	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4
0x280d	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3692	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x2810	          0x4863d0	                         movsxd rdx, eax	      3692	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x2813	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3692	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x2817	          0x4801d0	                            add rax, rdx	      3692	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x281a	           0xfb600	                   movzx eax, byte [rax]	      3692	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x281d	           0xfb6c0	                           movzx eax, al	      3692	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x2820	            0x89c7	                            mov edi, eax	      3692	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x2822	      0xe800000000	                          call 0x4002867	      3692	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x2827	            0x89c3	                            mov ebx, eax	      3692	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x2829	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3692	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x282c	          0x4863d0	                         movsxd rdx, eax	      3692	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x282f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3692	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x2833	          0x4801d0	                            add rax, rdx	      3692	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x2836	           0xfb600	                   movzx eax, byte [rax]	      3692	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x2839	           0xfb6c0	                           movzx eax, al	      3692	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x283c	            0x89c7	                            mov edi, eax	      3692	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x283e	      0xe800000000	                          call 0x4002883	      3692	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x2843	            0x29c3	                            sub ebx, eax	      3692	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x2845	            0x89d8	                            mov eax, ebx	      3692	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x2847	          0x8945ec	             mov dword [rbp - 0x14], eax	      3692	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	CALL_3
0x284a	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3693	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	IF_5
0x284e	            0x7452	                            je 0x40028e2	      3693	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	IF_5
0x2850	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3694	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	IF_5
0x2853	            0xeb64	                           jmp 0x40028f9	      3694	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	IF_3	IF_4	IF_5
0x2855	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_6
0x2858	          0x2b45e0	             sub eax, dword [rbp - 0x20]	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_6
0x285b	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_6
0x285e	            0x7d09	                           jge 0x40028a9	      3700	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_6
0x2860	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3701	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_6
0x2863	          0x2b45e0	             sub eax, dword [rbp - 0x20]	      3701	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_6
0x2866	          0x8945e4	             mov dword [rbp - 0x1c], eax	      3701	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_6
0x2869	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3702	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x286c	            0x4898	                                    cdqe	      3702	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x286e	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      3702	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x2871	          0x4863ca	                         movsxd rcx, edx	      3702	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x2874	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3702	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x2878	        0x488d3411	                    lea rsi, [rcx + rdx]	      3702	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x287c	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      3702	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x287f	          0x4863ca	                         movsxd rcx, edx	      3702	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x2882	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3702	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x2886	          0x4801d1	                            add rcx, rdx	      3702	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x2889	          0x4889c2	                            mov rdx, rax	      3702	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x288c	          0x4889cf	                            mov rdi, rcx	      3702	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x288f	      0xe800000000	                          call 0x40028d4	      3702	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x2894	          0x8945ec	             mov dword [rbp - 0x14], eax	      3702	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	CALL_4
0x2897	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3703	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_7
0x289b	            0x7405	                            je 0x40028e2	      3703	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_7
0x289d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3704	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_7
0x28a0	            0xeb17	                           jmp 0x40028f9	      3704	mbyte.c	FUNCTION_65	ELSE_1	FOR_1	ELSE_2	IF_7
0x28a2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x28a5	           0x145e0	             add dword [rbp - 0x20], eax	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x28a8	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x28ab	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x28ae	     0xf8cddfeffff	                            jl 0x40027d1	      3681	mbyte.c	FUNCTION_65	ELSE_1	FOR_1
0x28b4	      0xb800000000	                              mov eax, 0	      3708	mbyte.c	FUNCTION_65
0x28b9	        0x4883c438	                           add rsp, 0x38	      3709	mbyte.c	FUNCTION_65
0x28bd	              0x5b	                                 pop rbx	      3709	mbyte.c	FUNCTION_65
0x28be	              0x5d	                                 pop rbp	      3709	mbyte.c	FUNCTION_65
0x28bf	              0xc3	                                     ret	      3709	mbyte.c	FUNCTION_65
utfc_ptr2char_len	CALL,7:WHILE,0:functions,0:ELSE,0:IF,4:DO,0:SWITCH,0:FOR,1	106
0x18f0	              0x55	                                push rbp	      2017	mbyte.c	FUNCTION_43
0x18f1	          0x4889e5	                            mov rbp, rsp	      2017	mbyte.c	FUNCTION_43
0x18f4	        0x4883ec30	                           sub rsp, 0x30	      2017	mbyte.c	FUNCTION_43
0x18f8	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2017	mbyte.c	FUNCTION_43
0x18fc	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2017	mbyte.c	FUNCTION_43
0x1900	          0x8955dc	             mov dword [rbp - 0x24], edx	      2017	mbyte.c	FUNCTION_43
0x1903	    0xc745f8000000	                  mov dword [rbp - 8], 0	      2021	mbyte.c	FUNCTION_43
0x190a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2023	mbyte.c	FUNCTION_43	CALL_1
0x190e	          0x4889c7	                            mov rdi, rax	      2023	mbyte.c	FUNCTION_43	CALL_1
0x1911	      0xe800000000	                          call 0x4001956	      2023	mbyte.c	FUNCTION_43	CALL_1
0x1916	          0x8945fc	                mov dword [rbp - 4], eax	      2023	mbyte.c	FUNCTION_43	CALL_1
0x1919	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2024	mbyte.c	FUNCTION_43	CALL_2
0x191c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2024	mbyte.c	FUNCTION_43	CALL_2
0x1920	            0x89d6	                            mov esi, edx	      2024	mbyte.c	FUNCTION_43	CALL_2
0x1922	          0x4889c7	                            mov rdi, rax	      2024	mbyte.c	FUNCTION_43	CALL_2
0x1925	      0xe800000000	                          call 0x400196a	      2024	mbyte.c	FUNCTION_43	CALL_2
0x192a	          0x8945f0	             mov dword [rbp - 0x10], eax	      2024	mbyte.c	FUNCTION_43	CALL_2
0x192d	        0x837df001	               cmp dword [rbp - 0x10], 1	      2026	mbyte.c	FUNCTION_43	IF_1
0x1931	            0x7f0f	                            jg 0x4001982	      2026	mbyte.c	FUNCTION_43	IF_1
0x1933	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2026	mbyte.c	FUNCTION_43	IF_1
0x1937	           0xfb600	                   movzx eax, byte [rax]	      2026	mbyte.c	FUNCTION_43	IF_1
0x193a	            0x84c0	                             test al, al	      2026	mbyte.c	FUNCTION_43	IF_1
0x193c	     0xf88ed000000	                            js 0x4001a6f	      2026	mbyte.c	FUNCTION_43	IF_1
0x1942	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2027	mbyte.c	FUNCTION_43	IF_1
0x1945	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      2027	mbyte.c	FUNCTION_43	IF_1
0x1948	     0xf8de1000000	                           jge 0x4001a6f	      2027	mbyte.c	FUNCTION_43	IF_1
0x194e	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2028	mbyte.c	FUNCTION_43	IF_1
0x1951	          0x4863d0	                         movsxd rdx, eax	      2028	mbyte.c	FUNCTION_43	IF_1
0x1954	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2028	mbyte.c	FUNCTION_43	IF_1
0x1958	          0x4801d0	                            add rax, rdx	      2028	mbyte.c	FUNCTION_43	IF_1
0x195b	           0xfb600	                   movzx eax, byte [rax]	      2028	mbyte.c	FUNCTION_43	IF_1
0x195e	            0x84c0	                             test al, al	      2028	mbyte.c	FUNCTION_43	IF_1
0x1960	     0xf89c9000000	                           jns 0x4001a6f	      2028	mbyte.c	FUNCTION_43	IF_1
0x1966	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2029	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x1969	          0x4863d0	                         movsxd rdx, eax	      2029	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x196c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2029	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x1970	          0x4801c2	                            add rdx, rax	      2029	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x1973	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2029	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x1977	          0x4889d6	                            mov rsi, rdx	      2029	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x197a	          0x4889c7	                            mov rdi, rax	      2029	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x197d	      0xe800000000	                          call 0x40019c2	      2029	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x1982	            0x85c0	                           test eax, eax	      2029	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x1984	     0xf84a5000000	                            je 0x4001a6f	      2029	mbyte.c	FUNCTION_43	IF_1	CALL_3
0x198a	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2031	mbyte.c	FUNCTION_43	IF_1	CALL_4
0x198d	          0x4863d0	                         movsxd rdx, eax	      2031	mbyte.c	FUNCTION_43	IF_1	CALL_4
0x1990	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2031	mbyte.c	FUNCTION_43	IF_1	CALL_4
0x1994	          0x4801d0	                            add rax, rdx	      2031	mbyte.c	FUNCTION_43	IF_1	CALL_4
0x1997	          0x4889c7	                            mov rdi, rax	      2031	mbyte.c	FUNCTION_43	IF_1	CALL_4
0x199a	      0xe800000000	                          call 0x40019df	      2031	mbyte.c	FUNCTION_43	IF_1	CALL_4
0x199f	          0x8945f4	              mov dword [rbp - 0xc], eax	      2031	mbyte.c	FUNCTION_43	IF_1	CALL_4
0x19a2	          0x8b45f8	                mov eax, dword [rbp - 8]	      2034	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x19a5	          0x8d5001	                      lea edx, [rax + 1]	      2034	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x19a8	          0x8955f8	                mov dword [rbp - 8], edx	      2034	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x19ab	            0x4898	                                    cdqe	      2034	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x19ad	    0x488d14850000	                        lea rdx, [rax*4]	      2034	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x19b5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2034	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x19b9	          0x4801c2	                            add rdx, rax	      2034	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x19bc	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2034	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x19bf	            0x8902	                    mov dword [rdx], eax	      2034	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x19c1	        0x837df806	                  cmp dword [rbp - 8], 6	      2035	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_2
0x19c5	            0x7467	                            je 0x4001a6e	      2035	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_2
0x19c7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2037	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x19ca	          0x2b45f0	             sub eax, dword [rbp - 0x10]	      2037	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x19cd	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2037	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x19d0	          0x4863ca	                         movsxd rcx, edx	      2037	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x19d3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2037	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x19d7	          0x4801ca	                            add rdx, rcx	      2037	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x19da	            0x89c6	                            mov esi, eax	      2037	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x19dc	          0x4889d7	                            mov rdi, rdx	      2037	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x19df	      0xe800000000	                          call 0x4001a24	      2037	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x19e4	           0x145f0	             add dword [rbp - 0x10], eax	      2037	mbyte.c	FUNCTION_43	IF_1	FOR_1	CALL_5
0x19e7	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2038	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x19ea	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      2038	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x19ed	            0x7d40	                           jge 0x4001a6f	      2038	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x19ef	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x19f2	          0x4863d0	                         movsxd rdx, eax	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x19f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x19f9	          0x4801d0	                            add rax, rdx	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x19fc	           0xfb600	                   movzx eax, byte [rax]	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x19ff	            0x84c0	                             test al, al	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x1a01	            0x792c	                           jns 0x4001a6f	      2039	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3
0x1a03	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2040	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x1a06	          0x4863d0	                         movsxd rdx, eax	      2040	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x1a09	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2040	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x1a0d	          0x4801d0	                            add rax, rdx	      2040	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x1a10	          0x4889c7	                            mov rdi, rax	      2040	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x1a13	      0xe800000000	                          call 0x4001a58	      2040	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x1a18	          0x8945f4	              mov dword [rbp - 0xc], eax	      2040	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x1a1b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2040	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x1a1e	            0x89c7	                            mov edi, eax	      2040	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x1a20	      0xe800000000	                          call 0x4001a65	      2040	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x1a25	            0x85c0	                           test eax, eax	      2040	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x1a27	            0x7406	                            je 0x4001a6f	      2040	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_3	CALL_7
0x1a29	      0xe974ffffff	                           jmp 0x40019e2	      2042	mbyte.c	FUNCTION_43	IF_1	FOR_1
0x1a2e	              0x90	                                     nop	      2036	mbyte.c	FUNCTION_43	IF_1	FOR_1	IF_2
0x1a2f	        0x837df805	                  cmp dword [rbp - 8], 5	      2045	mbyte.c	FUNCTION_43	IF_4
0x1a33	            0x7f1a	                            jg 0x4001a8f	      2045	mbyte.c	FUNCTION_43	IF_4
0x1a35	          0x8b45f8	                mov eax, dword [rbp - 8]	      2046	mbyte.c	FUNCTION_43	IF_4
0x1a38	            0x4898	                                    cdqe	      2046	mbyte.c	FUNCTION_43	IF_4
0x1a3a	    0x488d14850000	                        lea rdx, [rax*4]	      2046	mbyte.c	FUNCTION_43	IF_4
0x1a42	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2046	mbyte.c	FUNCTION_43	IF_4
0x1a46	          0x4801d0	                            add rax, rdx	      2046	mbyte.c	FUNCTION_43	IF_4
0x1a49	    0xc70000000000	                      mov dword [rax], 0	      2046	mbyte.c	FUNCTION_43	IF_4
0x1a4f	          0x8b45fc	                mov eax, dword [rbp - 4]	      2048	mbyte.c	FUNCTION_43
0x1a52	              0xc9	                                   leave	      2049	mbyte.c	FUNCTION_43
0x1a53	              0xc3	                                     ret	      2049	mbyte.c	FUNCTION_43
latin_char2cells	CALL,0:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	6
0x106b	              0x55	                                push rbp	      1704	mbyte.c	FUNCTION_27
0x106c	          0x4889e5	                            mov rbp, rsp	      1704	mbyte.c	FUNCTION_27
0x106f	          0x897dfc	                mov dword [rbp - 4], edi	      1704	mbyte.c	FUNCTION_27
0x1072	      0xb801000000	                              mov eax, 1	      1705	mbyte.c	FUNCTION_27
0x1077	              0x5d	                                 pop rbp	      1706	mbyte.c	FUNCTION_27
0x1078	              0xc3	                                     ret	      1706	mbyte.c	FUNCTION_27
mb_charlen	CALL,0:WHILE,0:functions,0:ELSE,0:IF,1:DO,0:SWITCH,0:FOR,1	26
0x3354	              0x55	                                push rbp	      4147	mbyte.c	FUNCTION_80
0x3355	          0x4889e5	                            mov rbp, rsp	      4147	mbyte.c	FUNCTION_80
0x3358	        0x4883ec20	                           sub rsp, 0x20	      4147	mbyte.c	FUNCTION_80
0x335c	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4147	mbyte.c	FUNCTION_80
0x3360	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4148	mbyte.c	FUNCTION_80
0x3364	        0x488945f8	                mov qword [rbp - 8], rax	      4148	mbyte.c	FUNCTION_80
0x3368	      0x48837df800	                  cmp qword [rbp - 8], 0	      4151	mbyte.c	FUNCTION_80	IF_1
0x336d	            0x7507	                           jne 0x40033b6	      4151	mbyte.c	FUNCTION_80	IF_1
0x336f	      0xb800000000	                              mov eax, 0	      4152	mbyte.c	FUNCTION_80	IF_1
0x3374	            0xeb31	                           jmp 0x40033e7	      4152	mbyte.c	FUNCTION_80	IF_1
0x3376	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      4154	mbyte.c	FUNCTION_80	FOR_1
0x337d	            0xeb1a	                           jmp 0x40033d9	      4154	mbyte.c	FUNCTION_80	FOR_1
0x337f	    0x488b05000000	            mov rax, qword [0x040033c6] 	      4155	mbyte.c	FUNCTION_80	FOR_1
0x3386	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4155	mbyte.c	FUNCTION_80	FOR_1
0x338a	          0x4889d7	                            mov rdi, rdx	      4155	mbyte.c	FUNCTION_80	FOR_1
0x338d	            0xffd0	                                call rax	      4155	mbyte.c	FUNCTION_80	FOR_1
0x338f	            0x4898	                                    cdqe	      4155	mbyte.c	FUNCTION_80	FOR_1
0x3391	        0x480145f8	                add qword [rbp - 8], rax	      4155	mbyte.c	FUNCTION_80	FOR_1
0x3395	        0x8345f401	                add dword [rbp - 0xc], 1	      4154	mbyte.c	FUNCTION_80	FOR_1
0x3399	        0x488b45f8	                mov rax, qword [rbp - 8]	      4154	mbyte.c	FUNCTION_80	FOR_1
0x339d	           0xfb600	                   movzx eax, byte [rax]	      4154	mbyte.c	FUNCTION_80	FOR_1
0x33a0	            0x84c0	                             test al, al	      4154	mbyte.c	FUNCTION_80	FOR_1
0x33a2	            0x75db	                           jne 0x40033bf	      4154	mbyte.c	FUNCTION_80	FOR_1
0x33a4	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4157	mbyte.c	FUNCTION_80
0x33a7	              0xc9	                                   leave	      4158	mbyte.c	FUNCTION_80
0x33a8	              0xc3	                                     ret	      4158	mbyte.c	FUNCTION_80
mb_unescape	CALL,0:WHILE,0:functions,0:ELSE,3:IF,5:DO,0:SWITCH,0:FOR,1	124
0x3406	              0x55	                                push rbp	      4186	mbyte.c	FUNCTION_82
0x3407	          0x4889e5	                            mov rbp, rsp	      4186	mbyte.c	FUNCTION_82
0x340a	        0x4883ec20	                           sub rsp, 0x20	      4186	mbyte.c	FUNCTION_82
0x340e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4186	mbyte.c	FUNCTION_82
0x3412	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      4189	mbyte.c	FUNCTION_82
0x3419	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4190	mbyte.c	FUNCTION_82
0x341d	          0x488b00	                    mov rax, qword [rax]	      4190	mbyte.c	FUNCTION_82
0x3420	        0x488945f8	                mov qword [rbp - 8], rax	      4190	mbyte.c	FUNCTION_82
0x3424	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      4195	mbyte.c	FUNCTION_82	FOR_1
0x342b	      0xe93c010000	                           jmp 0x40035ac	      4195	mbyte.c	FUNCTION_82	FOR_1
0x3430	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4197	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x3433	          0x4863d0	                         movsxd rdx, eax	      4197	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x3436	        0x488b45f8	                mov rax, qword [rbp - 8]	      4197	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x343a	          0x4801d0	                            add rax, rdx	      4197	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x343d	           0xfb600	                   movzx eax, byte [rax]	      4197	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x3440	            0x3c80	                            cmp al, 0x80	      4197	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x3442	            0x7549	                           jne 0x40034cd	      4197	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x3444	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4198	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x3447	            0x4898	                                    cdqe	      4198	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x3449	        0x488d5001	                      lea rdx, [rax + 1]	      4198	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x344d	        0x488b45f8	                mov rax, qword [rbp - 8]	      4198	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x3451	          0x4801d0	                            add rax, rdx	      4198	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x3454	           0xfb600	                   movzx eax, byte [rax]	      4198	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x3457	            0x3cfe	                            cmp al, 0xfe	      4198	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x3459	            0x7532	                           jne 0x40034cd	      4198	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x345b	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4199	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x345e	            0x4898	                                    cdqe	      4199	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x3460	        0x488d5002	                      lea rdx, [rax + 2]	      4199	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x3464	        0x488b45f8	                mov rax, qword [rbp - 8]	      4199	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x3468	          0x4801d0	                            add rax, rdx	      4199	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x346b	           0xfb600	                   movzx eax, byte [rax]	      4199	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x346e	            0x3c58	                            cmp al, 0x58	      4199	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x3470	            0x751b	                           jne 0x40034cd	      4199	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x3472	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4201	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x3475	          0x8d5001	                      lea edx, [rax + 1]	      4201	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x3478	          0x8955f4	              mov dword [rbp - 0xc], edx	      4201	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x347b	            0x4898	                                    cdqe	      4201	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x347d	    0xc68000000000	                    mov byte [rax], 0x80	      4201	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x3484	        0x8345f002	               add dword [rbp - 0x10], 2	      4202	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x3488	      0xe993000000	                           jmp 0x4003560	      4202	mbyte.c	FUNCTION_82	FOR_1	IF_1
0x348d	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4204	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x3490	          0x4863d0	                         movsxd rdx, eax	      4204	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x3493	        0x488b45f8	                mov rax, qword [rbp - 8]	      4204	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x3497	          0x4801d0	                            add rax, rdx	      4204	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x349a	           0xfb600	                   movzx eax, byte [rax]	      4204	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x349d	            0x3c80	                            cmp al, 0x80	      4204	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x349f	            0x7546	                           jne 0x4003527	      4204	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34a1	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4209	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34a4	            0x4898	                                    cdqe	      4209	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34a6	        0x488d5001	                      lea rdx, [rax + 1]	      4209	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34aa	        0x488b45f8	                mov rax, qword [rbp - 8]	      4209	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34ae	          0x4801d0	                            add rax, rdx	      4209	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34b1	           0xfb600	                   movzx eax, byte [rax]	      4209	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34b4	            0x3cfd	                            cmp al, 0xfd	      4209	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34b6	            0x752f	                           jne 0x4003527	      4209	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34b8	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4210	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34bb	            0x4898	                                    cdqe	      4210	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34bd	        0x488d5002	                      lea rdx, [rax + 2]	      4210	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34c1	        0x488b45f8	                mov rax, qword [rbp - 8]	      4210	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34c5	          0x4801d0	                            add rax, rdx	      4210	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34c8	           0xfb600	                   movzx eax, byte [rax]	      4210	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34cb	            0x3c51	                            cmp al, 0x51	      4210	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34cd	            0x7518	                           jne 0x4003527	      4210	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34cf	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4212	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34d2	          0x8d5001	                      lea edx, [rax + 1]	      4212	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34d5	          0x8955f4	              mov dword [rbp - 0xc], edx	      4212	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34d8	            0x4898	                                    cdqe	      4212	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34da	    0xc68000000000	                    mov byte [rax], 0x9b	      4212	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34e1	        0x8345f002	               add dword [rbp - 0x10], 2	      4213	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34e5	            0xeb39	                           jmp 0x4003560	      4213	mbyte.c	FUNCTION_82	FOR_1	ELSE_1	IF_2
0x34e7	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4215	mbyte.c	FUNCTION_82	FOR_1	ELSE_2	IF_3
0x34ea	          0x4863d0	                         movsxd rdx, eax	      4215	mbyte.c	FUNCTION_82	FOR_1	ELSE_2	IF_3
0x34ed	        0x488b45f8	                mov rax, qword [rbp - 8]	      4215	mbyte.c	FUNCTION_82	FOR_1	ELSE_2	IF_3
0x34f1	          0x4801d0	                            add rax, rdx	      4215	mbyte.c	FUNCTION_82	FOR_1	ELSE_2	IF_3
0x34f4	           0xfb600	                   movzx eax, byte [rax]	      4215	mbyte.c	FUNCTION_82	FOR_1	ELSE_2	IF_3
0x34f7	            0x3c80	                            cmp al, 0x80	      4215	mbyte.c	FUNCTION_82	FOR_1	ELSE_2	IF_3
0x34f9	     0xf848d000000	                            je 0x40035cc	      4215	mbyte.c	FUNCTION_82	FOR_1	ELSE_2	IF_3
0x34ff	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4222	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x3502	          0x8d5001	                      lea edx, [rax + 1]	      4222	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x3505	          0x8955f4	              mov dword [rbp - 0xc], edx	      4222	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x3508	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      4222	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x350b	          0x4863ca	                         movsxd rcx, edx	      4222	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x350e	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4222	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x3512	          0x4801ca	                            add rdx, rcx	      4222	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x3515	           0xfb612	                   movzx edx, byte [rdx]	      4222	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x3518	            0x4898	                                    cdqe	      4222	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x351a	    0x889000000000	                      mov byte [rax], dl	      4222	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x3520	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4223	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x3523	            0x4898	                                    cdqe	      4223	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x3525	    0xc68000000000	                       mov byte [rax], 0	      4223	mbyte.c	FUNCTION_82	FOR_1	ELSE_3
0x352c	    0x488b05000000	            mov rax, qword [0x04003573] 	      4227	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x3533	      0xbf00000000	                              mov edi, 0	      4227	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x3538	            0xffd0	                                call rax	      4227	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x353a	          0x83f801	                              cmp eax, 1	      4227	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x353d	            0x7e1e	                           jle 0x400359d	      4227	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x353f	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4229	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x3542	            0x4898	                                    cdqe	      4229	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x3544	        0x488d5001	                      lea rdx, [rax + 1]	      4229	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x3548	        0x488b45f8	                mov rax, qword [rbp - 8]	      4229	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x354c	          0x4801c2	                            add rdx, rax	      4229	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x354f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4229	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x3553	          0x488910	                    mov qword [rax], rdx	      4229	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x3556	      0xb800000000	                              mov eax, 0	      4230	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x355b	            0xeb38	                           jmp 0x40035d5	      4230	mbyte.c	FUNCTION_82	FOR_1	ELSE_3	IF_4
0x355d	     0xfb605000000	           movzx eax, byte [0x040035a4] 	      4234	mbyte.c	FUNCTION_82	FOR_1	IF_5
0x3564	            0x84c0	                             test al, al	      4234	mbyte.c	FUNCTION_82	FOR_1	IF_5
0x3566	            0x7927	                           jns 0x40035cf	      4234	mbyte.c	FUNCTION_82	FOR_1	IF_5
0x3568	        0x8345f001	               add dword [rbp - 0x10], 1	      4195	mbyte.c	FUNCTION_82	FOR_1
0x356c	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4195	mbyte.c	FUNCTION_82	FOR_1
0x356f	          0x4863d0	                         movsxd rdx, eax	      4195	mbyte.c	FUNCTION_82	FOR_1
0x3572	        0x488b45f8	                mov rax, qword [rbp - 8]	      4195	mbyte.c	FUNCTION_82	FOR_1
0x3576	          0x4801d0	                            add rax, rdx	      4195	mbyte.c	FUNCTION_82	FOR_1
0x3579	           0xfb600	                   movzx eax, byte [rax]	      4195	mbyte.c	FUNCTION_82	FOR_1
0x357c	            0x84c0	                             test al, al	      4195	mbyte.c	FUNCTION_82	FOR_1
0x357e	            0x7410	                            je 0x40035d0	      4195	mbyte.c	FUNCTION_82	FOR_1
0x3580	        0x837df403	                cmp dword [rbp - 0xc], 3	      4195	mbyte.c	FUNCTION_82	FOR_1
0x3584	     0xf8ea6feffff	                           jle 0x4003470	      4195	mbyte.c	FUNCTION_82	FOR_1
0x358a	            0xeb04	                           jmp 0x40035d0	      4195	mbyte.c	FUNCTION_82	FOR_1
0x358c	              0x90	                                     nop	      4220	mbyte.c	FUNCTION_82	FOR_1	ELSE_2	IF_3
0x358d	            0xeb01	                           jmp 0x40035d0	      4220	mbyte.c	FUNCTION_82	FOR_1	ELSE_2	IF_3
0x358f	              0x90	                                     nop	      4235	mbyte.c	FUNCTION_82	FOR_1	IF_5
0x3590	      0xb800000000	                              mov eax, 0	      4237	mbyte.c	FUNCTION_82
0x3595	              0xc9	                                   leave	      4238	mbyte.c	FUNCTION_82
0x3596	              0xc3	                                     ret	      4238	mbyte.c	FUNCTION_82
utf_head_off	CALL,5:WHILE,2:functions,0:ELSE,0:IF,6:DO,0:SWITCH,0:FOR,2	112
0x2b34	              0x55	                                push rbp	      3824	mbyte.c	FUNCTION_70
0x2b35	          0x4889e5	                            mov rbp, rsp	      3824	mbyte.c	FUNCTION_70
0x2b38	        0x4883ec30	                           sub rsp, 0x30	      3824	mbyte.c	FUNCTION_70
0x2b3c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3824	mbyte.c	FUNCTION_70
0x2b40	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3824	mbyte.c	FUNCTION_70
0x2b44	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3833	mbyte.c	FUNCTION_70	IF_1
0x2b48	           0xfb600	                   movzx eax, byte [rax]	      3833	mbyte.c	FUNCTION_70	IF_1
0x2b4b	            0x84c0	                             test al, al	      3833	mbyte.c	FUNCTION_70	IF_1
0x2b4d	            0x780a	                            js 0x4002b99	      3833	mbyte.c	FUNCTION_70	IF_1
0x2b4f	      0xb800000000	                              mov eax, 0	      3834	mbyte.c	FUNCTION_70	IF_1
0x2b54	      0xe951010000	                           jmp 0x4002cea	      3834	mbyte.c	FUNCTION_70	IF_1
0x2b59	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3838	mbyte.c	FUNCTION_70	FOR_1
0x2b5d	        0x488945e8	             mov qword [rbp - 0x18], rax	      3838	mbyte.c	FUNCTION_70	FOR_1
0x2b61	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3841	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x2b65	        0x488945f0	             mov qword [rbp - 0x10], rax	      3841	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x2b69	            0xeb05	                           jmp 0x4002bb0	      3841	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x2b6b	      0x488345f001	               add qword [rbp - 0x10], 1	      3841	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x2b70	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3841	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x2b74	        0x4883c001	                              add rax, 1	      3841	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x2b78	           0xfb600	                   movzx eax, byte [rax]	      3841	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x2b7b	           0xfb6c0	                           movzx eax, al	      3841	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x2b7e	      0x25c0000000	                           and eax, 0xc0	      3841	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x2b83	      0x3d80000000	                           cmp eax, 0x80	      3841	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x2b88	            0x74e1	                            je 0x4002bab	      3841	mbyte.c	FUNCTION_70	FOR_1	FOR_2
0x2b8a	            0xeb05	                           jmp 0x4002bd1	      3844	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x2b8c	      0x48836de801	               sub qword [rbp - 0x18], 1	      3845	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x2b91	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3844	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x2b95	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      3844	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x2b99	            0x7616	                           jbe 0x4002bf1	      3844	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x2b9b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3844	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x2b9f	           0xfb600	                   movzx eax, byte [rax]	      3844	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x2ba2	           0xfb6c0	                           movzx eax, al	      3844	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x2ba5	      0x25c0000000	                           and eax, 0xc0	      3844	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x2baa	      0x3d80000000	                           cmp eax, 0x80	      3844	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x2baf	            0x74db	                            je 0x4002bcc	      3844	mbyte.c	FUNCTION_70	FOR_1	WHILE_1
0x2bb1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3848	mbyte.c	FUNCTION_70	FOR_1
0x2bb5	           0xfb600	                   movzx eax, byte [rax]	      3848	mbyte.c	FUNCTION_70	FOR_1
0x2bb8	           0xfb6c0	                           movzx eax, al	      3848	mbyte.c	FUNCTION_70	FOR_1
0x2bbb	            0x4898	                                    cdqe	      3848	mbyte.c	FUNCTION_70	FOR_1
0x2bbd	     0xfb680000000	                   movzx eax, byte [rax]	      3848	mbyte.c	FUNCTION_70	FOR_1
0x2bc4	           0xfbec0	                           movsx eax, al	      3848	mbyte.c	FUNCTION_70	FOR_1
0x2bc7	          0x8945e0	             mov dword [rbp - 0x20], eax	      3848	mbyte.c	FUNCTION_70	FOR_1
0x2bca	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3849	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x2bce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3849	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x2bd2	          0x4829c2	                            sub rdx, rax	      3849	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x2bd5	          0x4889d0	                            mov rax, rdx	      3849	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x2bd8	          0x83c001	                              add eax, 1	      3849	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x2bdb	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3849	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x2bde	            0x7420	                            je 0x4002c40	      3849	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x2be0	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3849	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x2be4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3849	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x2be8	          0x4829c2	                            sub rdx, rax	      3849	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x2beb	          0x4889d0	                            mov rax, rdx	      3849	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x2bee	          0x83c001	                              add eax, 1	      3849	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x2bf1	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      3849	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x2bf4	            0x740a	                            je 0x4002c40	      3849	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x2bf6	      0xb800000000	                              mov eax, 0	      3850	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x2bfb	      0xe9aa000000	                           jmp 0x4002cea	      3850	mbyte.c	FUNCTION_70	FOR_1	IF_2
0x2c00	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3852	mbyte.c	FUNCTION_70	FOR_1	IF_3
0x2c04	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      3852	mbyte.c	FUNCTION_70	FOR_1	IF_3
0x2c08	     0xf868a000000	                           jbe 0x4002cd8	      3852	mbyte.c	FUNCTION_70	FOR_1	IF_3
0x2c0e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3855	mbyte.c	FUNCTION_70	FOR_1	CALL_1
0x2c12	          0x4889c7	                            mov rdi, rax	      3855	mbyte.c	FUNCTION_70	FOR_1	CALL_1
0x2c15	      0xe800000000	                          call 0x4002c5a	      3855	mbyte.c	FUNCTION_70	FOR_1	CALL_1
0x2c1a	          0x8945e4	             mov dword [rbp - 0x1c], eax	      3855	mbyte.c	FUNCTION_70	FOR_1	CALL_1
0x2c1d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3856	mbyte.c	FUNCTION_70	FOR_1	IF_4	CALL_2
0x2c20	            0x89c7	                            mov edi, eax	      3856	mbyte.c	FUNCTION_70	FOR_1	IF_4	CALL_2
0x2c22	      0xe800000000	                          call 0x4002c67	      3856	mbyte.c	FUNCTION_70	FOR_1	IF_4	CALL_2
0x2c27	            0x85c0	                           test eax, eax	      3856	mbyte.c	FUNCTION_70	FOR_1	IF_4	CALL_2
0x2c29	            0x7562	                           jne 0x4002ccd	      3856	mbyte.c	FUNCTION_70	FOR_1	IF_4	CALL_2
0x2c2b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3860	mbyte.c	FUNCTION_70	FOR_1	IF_5	CALL_3
0x2c2e	            0x89c7	                            mov edi, eax	      3860	mbyte.c	FUNCTION_70	FOR_1	IF_5	CALL_3
0x2c30	      0xe800000000	                          call 0x4002c75	      3860	mbyte.c	FUNCTION_70	FOR_1	IF_5	CALL_3
0x2c35	            0x85c0	                           test eax, eax	      3860	mbyte.c	FUNCTION_70	FOR_1	IF_5	CALL_3
0x2c37	            0x7462	                            je 0x4002cdb	      3860	mbyte.c	FUNCTION_70	FOR_1	IF_5	CALL_3
0x2c39	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3863	mbyte.c	FUNCTION_70	FOR_1	IF_5
0x2c3d	        0x488945f8	                mov qword [rbp - 8], rax	      3863	mbyte.c	FUNCTION_70	FOR_1	IF_5
0x2c41	      0x48836df801	                  sub qword [rbp - 8], 1	      3864	mbyte.c	FUNCTION_70	FOR_1	IF_5
0x2c46	            0xeb05	                           jmp 0x4002c8d	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x2c48	      0x48836df801	                  sub qword [rbp - 8], 1	      3867	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x2c4d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x2c51	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x2c55	            0x7616	                           jbe 0x4002cad	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x2c57	        0x488b45f8	                mov rax, qword [rbp - 8]	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x2c5b	           0xfb600	                   movzx eax, byte [rax]	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x2c5e	           0xfb6c0	                           movzx eax, al	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x2c61	      0x25c0000000	                           and eax, 0xc0	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x2c66	      0x3d80000000	                           cmp eax, 0x80	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x2c6b	            0x74db	                            je 0x4002c88	      3866	mbyte.c	FUNCTION_70	FOR_1	IF_5	WHILE_2
0x2c6d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3868	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x2c71	          0x4889c7	                            mov rdi, rax	      3868	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x2c74	      0xe800000000	                          call 0x4002cb9	      3868	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x2c79	            0x89c2	                            mov edx, eax	      3868	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x2c7b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3868	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x2c7e	            0x89c6	                            mov esi, eax	      3868	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x2c80	            0x89d7	                            mov edi, edx	      3868	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x2c82	      0xe800000000	                          call 0x4002cc7	      3868	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x2c87	            0x85c0	                           test eax, eax	      3868	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x2c89	            0x7410	                            je 0x4002cdb	      3868	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6	CALL_5
0x2c8b	            0xeb01	                           jmp 0x4002cce	      3869	mbyte.c	FUNCTION_70	FOR_1	IF_5	IF_6
0x2c8d	              0x90	                                     nop	      3857	mbyte.c	FUNCTION_70	FOR_1	IF_4
0x2c8e	      0x48836de801	               sub qword [rbp - 0x18], 1	      3838	mbyte.c	FUNCTION_70	FOR_1
0x2c93	      0xe9c9feffff	                           jmp 0x4002ba1	      3873	mbyte.c	FUNCTION_70	FOR_1
0x2c98	              0x90	                                     nop	      3853	mbyte.c	FUNCTION_70	FOR_1	IF_3
0x2c99	            0xeb01	                           jmp 0x4002cdc	      3853	mbyte.c	FUNCTION_70	FOR_1	IF_3
0x2c9b	              0x90	                                     nop	      3872	mbyte.c	FUNCTION_70	FOR_1
0x2c9c	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      3875	mbyte.c	FUNCTION_70
0x2ca0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3875	mbyte.c	FUNCTION_70
0x2ca4	          0x4829c2	                            sub rdx, rax	      3875	mbyte.c	FUNCTION_70
0x2ca7	          0x4889d0	                            mov rax, rdx	      3875	mbyte.c	FUNCTION_70
0x2caa	              0xc9	                                   leave	      3876	mbyte.c	FUNCTION_70
0x2cab	              0xc3	                                     ret	      3876	mbyte.c	FUNCTION_70
iconv_string	CALL,6:WHILE,0:functions,0:ELSE,3:IF,11:DO,0:SWITCH,0:FOR,1	198
0x3ee6	              0x55	                                push rbp	      4587	mbyte.c	FUNCTION_92
0x3ee7	          0x4889e5	                            mov rbp, rsp	      4587	mbyte.c	FUNCTION_92
0x3eea	        0x4883c480	             add rsp, 0xffffffffffffff80	      4587	mbyte.c	FUNCTION_92
0x3eee	        0x48897da8	             mov qword [rbp - 0x58], rdi	      4587	mbyte.c	FUNCTION_92
0x3ef2	        0x488975a0	             mov qword [rbp - 0x60], rsi	      4587	mbyte.c	FUNCTION_92
0x3ef6	          0x89559c	             mov dword [rbp - 0x64], edx	      4587	mbyte.c	FUNCTION_92
0x3ef9	        0x48894d90	             mov qword [rbp - 0x70], rcx	      4587	mbyte.c	FUNCTION_92
0x3efd	        0x4c894588	              mov qword [rbp - 0x78], r8	      4587	mbyte.c	FUNCTION_92
0x3f01	    0x64488b042528	                mov rax, qword fs:[0x28]	      4587	mbyte.c	FUNCTION_92
0x3f0a	        0x488945f8	                mov qword [rbp - 8], rax	      4587	mbyte.c	FUNCTION_92
0x3f0e	            0x31c0	                            xor eax, eax	      4587	mbyte.c	FUNCTION_92
0x3f10	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      4592	mbyte.c	FUNCTION_92
0x3f18	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      4593	mbyte.c	FUNCTION_92
0x3f20	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      4594	mbyte.c	FUNCTION_92
0x3f28	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4598	mbyte.c	FUNCTION_92
0x3f2c	        0x488945b8	             mov qword [rbp - 0x48], rax	      4598	mbyte.c	FUNCTION_92
0x3f30	          0x8b459c	             mov eax, dword [rbp - 0x64]	      4599	mbyte.c	FUNCTION_92
0x3f33	            0x4898	                                    cdqe	      4599	mbyte.c	FUNCTION_92
0x3f35	        0x488945c0	             mov qword [rbp - 0x40], rax	      4599	mbyte.c	FUNCTION_92
0x3f39	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4602	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x3f3e	            0x740c	                            je 0x4003f8c	      4602	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x3f40	      0xe800000000	                          call 0x4003f85	      4602	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x3f45	            0x8b00	                    mov eax, dword [rax]	      4602	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x3f47	          0x83f807	                              cmp eax, 7	      4602	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x3f4a	            0x756a	                           jne 0x4003ff6	      4602	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x3f4c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4606	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x3f50	        0x488d1400	                    lea rdx, [rax + rax]	      4606	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x3f54	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4606	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x3f58	          0x4801d0	                            add rax, rdx	      4606	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x3f5b	        0x4883c028	                           add rax, 0x28	      4606	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x3f5f	        0x488945d8	             mov qword [rbp - 0x28], rax	      4606	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x3f63	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4607	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_1
0x3f67	            0x89c7	                            mov edi, eax	      4607	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_1
0x3f69	      0xe800000000	                          call 0x4003fae	      4607	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_1
0x3f6e	        0x488945f0	             mov qword [rbp - 0x10], rax	      4607	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_1
0x3f72	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4608	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x3f77	            0x741e	                            je 0x4003fd7	      4608	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x3f79	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4608	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x3f7e	            0x7417	                            je 0x4003fd7	      4608	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x3f80	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4609	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_2
0x3f84	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      4609	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_2
0x3f88	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4609	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_2
0x3f8c	          0x4889ce	                            mov rsi, rcx	      4609	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_2
0x3f8f	          0x4889c7	                            mov rdi, rax	      4609	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_2
0x3f92	      0xe800000000	                          call 0x4003fd7	      4609	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_2
0x3f97	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4610	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x3f9b	          0x4889c7	                            mov rdi, rax	      4610	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x3f9e	      0xe800000000	                          call 0x4003fe3	      4610	mbyte.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x3fa3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4611	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x3fa7	        0x488945e8	             mov qword [rbp - 0x18], rax	      4611	mbyte.c	FUNCTION_92	FOR_1	IF_1
0x3fab	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4612	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_3
0x3fb0	     0xf84b3010000	                            je 0x40041a9	      4612	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_3
0x3fb6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4616	mbyte.c	FUNCTION_92	FOR_1
0x3fba	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4616	mbyte.c	FUNCTION_92	FOR_1
0x3fbe	          0x4801d0	                            add rax, rdx	      4616	mbyte.c	FUNCTION_92	FOR_1
0x3fc1	        0x488945c8	             mov qword [rbp - 0x38], rax	      4616	mbyte.c	FUNCTION_92	FOR_1
0x3fc5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4617	mbyte.c	FUNCTION_92	FOR_1
0x3fc9	        0x482b45e0	             sub rax, qword [rbp - 0x20]	      4617	mbyte.c	FUNCTION_92	FOR_1
0x3fcd	        0x4883e802	                              sub rax, 2	      4617	mbyte.c	FUNCTION_92	FOR_1
0x3fd1	        0x488945d0	             mov qword [rbp - 0x30], rax	      4617	mbyte.c	FUNCTION_92	FOR_1
0x3fd5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4620	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x3fd9	        0x488b4008	                mov rax, qword [rax + 8]	      4620	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x3fdd	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	      4620	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x3fe1	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	      4620	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x3fe5	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      4620	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x3fe9	        0x488d75b8	                   lea rsi, [rbp - 0x48]	      4620	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x3fed	          0x4989f8	                             mov r8, rdi	      4620	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x3ff0	          0x4889c7	                            mov rdi, rax	      4620	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x3ff3	      0xe800000000	                          call 0x4004038	      4620	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x3ff8	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      4620	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x3ffc	            0x740c	                            je 0x400404a	      4620	mbyte.c	FUNCTION_92	FOR_1	IF_4	CALL_4
0x3ffe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4624	mbyte.c	FUNCTION_92	FOR_1	IF_4
0x4002	          0xc60000	                       mov byte [rax], 0	      4624	mbyte.c	FUNCTION_92	FOR_1	IF_4
0x4005	      0xe960010000	                           jmp 0x40041aa	      4625	mbyte.c	FUNCTION_92	FOR_1	IF_4
0x400a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4630	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x400e	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4630	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4011	            0x85c0	                           test eax, eax	      4630	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4013	            0x7537	                           jne 0x400408c	      4630	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4015	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      4630	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x401a	            0x7430	                            je 0x400408c	      4630	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x401c	      0xe800000000	                          call 0x4004061	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4021	            0x8b00	                    mov eax, dword [rax]	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4023	          0x83f816	                           cmp eax, 0x16	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4026	            0x740c	                            je 0x4004074	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4028	      0xe800000000	                          call 0x400406d	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x402d	            0x8b00	                    mov eax, dword [rax]	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x402f	          0x83f816	                           cmp eax, 0x16	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4032	            0x7518	                           jne 0x400408c	      4631	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4034	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4634	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4038	          0xc60000	                       mov byte [rax], 0	      4634	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x403b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4635	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x403f	            0x89c2	                            mov edx, eax	      4635	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4041	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4635	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4045	            0x8910	                    mov dword [rax], edx	      4635	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x4047	      0xe91e010000	                           jmp 0x40041aa	      4636	mbyte.c	FUNCTION_92	FOR_1	IF_5
0x404c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4641	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4050	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4641	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4053	            0x85c0	                           test eax, eax	      4641	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4055	     0xf85d2000000	                           jne 0x400416d	      4641	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x405b	      0xe800000000	                          call 0x40040a0	      4642	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4060	            0x8b00	                    mov eax, dword [rax]	      4642	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4062	          0x83f854	                           cmp eax, 0x54	      4642	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4065	            0x7428	                            je 0x40040cf	      4642	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4067	      0xe800000000	                          call 0x40040ac	      4642	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x406c	            0x8b00	                    mov eax, dword [rax]	      4642	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x406e	          0x83f854	                           cmp eax, 0x54	      4642	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4071	            0x741c	                            je 0x40040cf	      4642	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4073	      0xe800000000	                          call 0x40040b8	      4643	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4078	            0x8b00	                    mov eax, dword [rax]	      4643	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x407a	          0x83f816	                           cmp eax, 0x16	      4643	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x407d	            0x7410	                            je 0x40040cf	      4643	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x407f	      0xe800000000	                          call 0x40040c4	      4643	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4084	            0x8b00	                    mov eax, dword [rax]	      4643	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4086	          0x83f816	                           cmp eax, 0x16	      4643	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4089	     0xf859e000000	                           jne 0x400416d	      4643	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x408f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4648	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4093	        0x488d5001	                      lea rdx, [rax + 1]	      4648	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4097	        0x488955c8	             mov qword [rbp - 0x38], rdx	      4648	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x409b	          0xc6003f	                    mov byte [rax], 0x3f	      4648	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x409e	    0x488b05000000	            mov rax, qword [0x040040e5] 	      4649	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x40a5	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4649	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x40a9	          0x4889d7	                            mov rdi, rdx	      4649	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x40ac	            0xffd0	                                call rax	      4649	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x40ae	          0x83f801	                              cmp eax, 1	      4649	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x40b1	            0x7e0f	                           jle 0x4004102	      4649	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x40b3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4650	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x40b7	        0x488d5001	                      lea rdx, [rax + 1]	      4650	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x40bb	        0x488955c8	             mov qword [rbp - 0x38], rdx	      4650	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x40bf	          0xc6003f	                    mov byte [rax], 0x3f	      4650	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_7
0x40c2	    0x8b0500000000	            mov eax, dword [0x04004108] 	      4651	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_8
0x40c8	            0x85c0	                           test eax, eax	      4651	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_8
0x40ca	            0x7419	                            je 0x4004125	      4651	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	IF_8
0x40cc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4652	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x40d0	            0x89c2	                            mov edx, eax	      4652	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x40d2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4652	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x40d6	            0x89d6	                            mov esi, edx	      4652	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x40d8	          0x4889c7	                            mov rdi, rax	      4652	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x40db	      0xe800000000	                          call 0x4004120	      4652	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x40e0	          0x8945b4	             mov dword [rbp - 0x4c], eax	      4652	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x40e3	            0xeb23	                           jmp 0x4004148	      4652	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	CALL_5
0x40e5	    0x488b05000000	            mov rax, qword [0x0400412c] 	      4655	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2
0x40ec	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4655	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2
0x40f0	          0x4889d7	                            mov rdi, rdx	      4655	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2
0x40f3	            0xffd0	                                call rax	      4655	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2
0x40f5	          0x8945b4	             mov dword [rbp - 0x4c], eax	      4655	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2
0x40f8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4656	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9
0x40fc	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      4656	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9
0x40ff	            0x7d07	                           jge 0x4004148	      4656	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9
0x4101	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4657	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9
0x4105	          0x8945b4	             mov dword [rbp - 0x4c], eax	      4657	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6	ELSE_2	IF_9
0x4108	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4659	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x410c	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      4659	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x410f	            0x4898	                                    cdqe	      4659	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4111	          0x4801d0	                            add rax, rdx	      4659	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4114	        0x488945b8	             mov qword [rbp - 0x48], rax	      4659	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4118	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4660	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x411c	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      4660	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x411f	            0x4898	                                    cdqe	      4660	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4121	          0x4829c2	                            sub rdx, rax	      4660	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4124	          0x4889d0	                            mov rax, rdx	      4660	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x4127	        0x488945c0	             mov qword [rbp - 0x40], rax	      4660	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x412b	            0xeb22	                           jmp 0x400418f	      4660	mbyte.c	FUNCTION_92	FOR_1	ELSE_1	IF_6
0x412d	      0xe800000000	                          call 0x4004172	      4662	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10
0x4132	            0x8b00	                    mov eax, dword [rax]	      4662	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10
0x4134	          0x83f807	                              cmp eax, 7	      4662	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10
0x4137	            0x7416	                            je 0x400418f	      4662	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10
0x4139	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4665	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10	CALL_6
0x413d	          0x4889c7	                            mov rdi, rax	      4665	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10	CALL_6
0x4140	      0xe800000000	                          call 0x4004185	      4665	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10	CALL_6
0x4145	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      4666	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10
0x414d	            0xeb1b	                           jmp 0x40041aa	      4667	mbyte.c	FUNCTION_92	FOR_1	ELSE_3	IF_10
0x414f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4670	mbyte.c	FUNCTION_92	FOR_1
0x4153	          0x4889c2	                            mov rdx, rax	      4670	mbyte.c	FUNCTION_92	FOR_1
0x4156	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4670	mbyte.c	FUNCTION_92	FOR_1
0x415a	          0x4829c2	                            sub rdx, rax	      4670	mbyte.c	FUNCTION_92	FOR_1
0x415d	          0x4889d0	                            mov rax, rdx	      4670	mbyte.c	FUNCTION_92	FOR_1
0x4160	        0x488945e0	             mov qword [rbp - 0x20], rax	      4670	mbyte.c	FUNCTION_92	FOR_1
0x4164	      0xe9d0fdffff	                           jmp 0x4003f79	      4671	mbyte.c	FUNCTION_92	FOR_1
0x4169	              0x90	                                     nop	      4613	mbyte.c	FUNCTION_92	FOR_1	IF_1	IF_3
0x416a	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      4673	mbyte.c	FUNCTION_92	IF_11
0x416f	            0x7420	                            je 0x40041d1	      4673	mbyte.c	FUNCTION_92	IF_11
0x4171	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4673	mbyte.c	FUNCTION_92	IF_11
0x4176	            0x7419	                            je 0x40041d1	      4673	mbyte.c	FUNCTION_92	IF_11
0x4178	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4674	mbyte.c	FUNCTION_92	IF_11
0x417c	          0x4889c2	                            mov rdx, rax	      4674	mbyte.c	FUNCTION_92	IF_11
0x417f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4674	mbyte.c	FUNCTION_92	IF_11
0x4183	          0x4829c2	                            sub rdx, rax	      4674	mbyte.c	FUNCTION_92	IF_11
0x4186	          0x4889d0	                            mov rax, rdx	      4674	mbyte.c	FUNCTION_92	IF_11
0x4189	            0x89c2	                            mov edx, eax	      4674	mbyte.c	FUNCTION_92	IF_11
0x418b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4674	mbyte.c	FUNCTION_92	IF_11
0x418f	            0x8910	                    mov dword [rax], edx	      4674	mbyte.c	FUNCTION_92	IF_11
0x4191	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4675	mbyte.c	FUNCTION_92
0x4195	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4676	mbyte.c	FUNCTION_92
0x4199	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4676	mbyte.c	FUNCTION_92
0x41a2	            0x7405	                            je 0x40041e9	      4676	mbyte.c	FUNCTION_92
0x41a4	      0xe800000000	                          call 0x40041e9	      4676	mbyte.c	FUNCTION_92
0x41a9	              0xc9	                                   leave	      4676	mbyte.c	FUNCTION_92
0x41aa	              0xc3	                                     ret	      4676	mbyte.c	FUNCTION_92
dbcs_head_off	CALL,2:WHILE,1:functions,0:ELSE,0:IF,1:DO,0:SWITCH,0:FOR,0	39
0x29ff	              0x55	                                push rbp	      3772	mbyte.c	FUNCTION_68
0x2a00	          0x4889e5	                            mov rbp, rsp	      3772	mbyte.c	FUNCTION_68
0x2a03	        0x4883ec20	                           sub rsp, 0x20	      3772	mbyte.c	FUNCTION_68
0x2a07	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3772	mbyte.c	FUNCTION_68
0x2a0b	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3772	mbyte.c	FUNCTION_68
0x2a0f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3777	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x2a13	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      3777	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x2a17	            0x7626	                           jbe 0x4002a7f	      3777	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x2a19	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3777	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x2a1d	        0x4883e801	                              sub rax, 1	      3777	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x2a21	           0xfb600	                   movzx eax, byte [rax]	      3777	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x2a24	           0xfb6c0	                           movzx eax, al	      3777	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x2a27	            0x4898	                                    cdqe	      3777	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x2a29	     0xfb680000000	                   movzx eax, byte [rax]	      3777	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x2a30	            0x3c01	                               cmp al, 1	      3777	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x2a32	            0x740b	                            je 0x4002a7f	      3777	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x2a34	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3777	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x2a38	           0xfb600	                   movzx eax, byte [rax]	      3777	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x2a3b	            0x84c0	                             test al, al	      3777	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x2a3d	            0x7507	                           jne 0x4002a86	      3777	mbyte.c	FUNCTION_68	IF_1	CALL_1
0x2a3f	      0xb800000000	                              mov eax, 0	      3778	mbyte.c	FUNCTION_68	IF_1
0x2a44	            0xeb34	                           jmp 0x4002aba	      3778	mbyte.c	FUNCTION_68	IF_1
0x2a46	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3782	mbyte.c	FUNCTION_68
0x2a4a	        0x488945f8	                mov qword [rbp - 8], rax	      3782	mbyte.c	FUNCTION_68
0x2a4e	            0xeb12	                           jmp 0x4002aa2	      3783	mbyte.c	FUNCTION_68	WHILE_1
0x2a50	        0x488b45f8	                mov rax, qword [rbp - 8]	      3784	mbyte.c	FUNCTION_68	CALL_2
0x2a54	          0x4889c7	                            mov rdi, rax	      3784	mbyte.c	FUNCTION_68	CALL_2
0x2a57	      0xe8bbe1ffff	                   call sym.dbcs_ptr2len	      3784	mbyte.c	FUNCTION_68	CALL_2
0x2a5c	            0x4898	                                    cdqe	      3784	mbyte.c	FUNCTION_68	CALL_2
0x2a5e	        0x480145f8	                add qword [rbp - 8], rax	      3784	mbyte.c	FUNCTION_68	CALL_2
0x2a62	        0x488b45f8	                mov rax, qword [rbp - 8]	      3783	mbyte.c	FUNCTION_68	WHILE_1
0x2a66	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3783	mbyte.c	FUNCTION_68	WHILE_1
0x2a6a	            0x72e4	                            jb 0x4002a90	      3783	mbyte.c	FUNCTION_68	WHILE_1
0x2a6c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3785	mbyte.c	FUNCTION_68
0x2a70	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3785	mbyte.c	FUNCTION_68
0x2a74	           0xf95c0	                                setne al	      3785	mbyte.c	FUNCTION_68
0x2a77	           0xfb6c0	                           movzx eax, al	      3785	mbyte.c	FUNCTION_68
0x2a7a	              0xc9	                                   leave	      3786	mbyte.c	FUNCTION_68
0x2a7b	              0xc3	                                     ret	      3786	mbyte.c	FUNCTION_68
arabic_combine	CALL,1:WHILE,0:functions,0:ELSE,0:IF,1:DO,0:SWITCH,0:FOR,0	14
0x16d0	              0x55	                                push rbp	      1928	mbyte.c	FUNCTION_39
0x16d1	          0x4889e5	                            mov rbp, rsp	      1928	mbyte.c	FUNCTION_39
0x16d4	        0x4883ec10	                           sub rsp, 0x10	      1928	mbyte.c	FUNCTION_39
0x16d8	          0x897dfc	                mov dword [rbp - 4], edi	      1928	mbyte.c	FUNCTION_39
0x16db	          0x8975f8	                mov dword [rbp - 8], esi	      1928	mbyte.c	FUNCTION_39
0x16de	    0x817dfc440600	              cmp dword [rbp - 4], 0x644	      1929	mbyte.c	FUNCTION_39	IF_1
0x16e5	            0x750c	                           jne 0x4001733	      1929	mbyte.c	FUNCTION_39	IF_1
0x16e7	          0x8b45f8	                mov eax, dword [rbp - 8]	      1930	mbyte.c	FUNCTION_39	CALL_1
0x16ea	            0x89c7	                            mov edi, eax	      1930	mbyte.c	FUNCTION_39	CALL_1
0x16ec	      0xe800000000	                          call 0x4001731	      1930	mbyte.c	FUNCTION_39	CALL_1
0x16f1	            0xeb05	                           jmp 0x4001738	      1930	mbyte.c	FUNCTION_39	CALL_1
0x16f3	      0xb800000000	                              mov eax, 0	      1931	mbyte.c	FUNCTION_39
0x16f8	              0xc9	                                   leave	      1932	mbyte.c	FUNCTION_39
0x16f9	              0xc3	                                     ret	      1932	mbyte.c	FUNCTION_39
utf_convert	CALL,0:WHILE,1:functions,0:ELSE,2:IF,2:DO,0:SWITCH,0:FOR,0	95
0x2264	              0x55	                                push rbp	      3132	mbyte.c	FUNCTION_58
0x2265	          0x4889e5	                            mov rbp, rsp	      3132	mbyte.c	FUNCTION_58
0x2268	          0x897dec	             mov dword [rbp - 0x14], edi	      3132	mbyte.c	FUNCTION_58
0x226b	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3132	mbyte.c	FUNCTION_58
0x226f	          0x8955e8	             mov dword [rbp - 0x18], edx	      3132	mbyte.c	FUNCTION_58
0x2272	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3134	mbyte.c	FUNCTION_58
0x2275	            0x4898	                                    cdqe	      3134	mbyte.c	FUNCTION_58
0x2277	        0x48c1e804	                              shr rax, 4	      3134	mbyte.c	FUNCTION_58
0x227b	          0x8945f8	                mov dword [rbp - 8], eax	      3134	mbyte.c	FUNCTION_58
0x227e	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      3136	mbyte.c	FUNCTION_58
0x2285	          0x8b45f8	                mov eax, dword [rbp - 8]	      3137	mbyte.c	FUNCTION_58
0x2288	          0x8945f4	              mov dword [rbp - 0xc], eax	      3137	mbyte.c	FUNCTION_58
0x228b	            0xeb40	                           jmp 0x400230d	      3138	mbyte.c	FUNCTION_58	WHILE_1
0x228d	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      3141	mbyte.c	FUNCTION_58	WHILE_1
0x2290	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3141	mbyte.c	FUNCTION_58	WHILE_1
0x2293	             0x1d0	                            add eax, edx	      3141	mbyte.c	FUNCTION_58	WHILE_1
0x2295	            0x89c2	                            mov edx, eax	      3141	mbyte.c	FUNCTION_58	WHILE_1
0x2297	          0xc1ea1f	                           shr edx, 0x1f	      3141	mbyte.c	FUNCTION_58	WHILE_1
0x229a	             0x1d0	                            add eax, edx	      3141	mbyte.c	FUNCTION_58	WHILE_1
0x229c	            0xd1f8	                              sar eax, 1	      3141	mbyte.c	FUNCTION_58	WHILE_1
0x229e	          0x8945fc	                mov dword [rbp - 4], eax	      3141	mbyte.c	FUNCTION_58	WHILE_1
0x22a1	          0x8b45fc	                mov eax, dword [rbp - 4]	      3142	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x22a4	            0x4898	                                    cdqe	      3142	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x22a6	        0x48c1e004	                              shl rax, 4	      3142	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x22aa	          0x4889c2	                            mov rdx, rax	      3142	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x22ad	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3142	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x22b1	          0x4801d0	                            add rax, rdx	      3142	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x22b4	          0x8b4004	                mov eax, dword [rax + 4]	      3142	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x22b7	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      3142	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x22ba	            0x7d0b	                           jge 0x4002307	      3142	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x22bc	          0x8b45fc	                mov eax, dword [rbp - 4]	      3143	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x22bf	          0x83c001	                              add eax, 1	      3143	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x22c2	          0x8945f0	             mov dword [rbp - 0x10], eax	      3143	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x22c5	            0xeb06	                           jmp 0x400230d	      3143	mbyte.c	FUNCTION_58	WHILE_1	IF_1
0x22c7	          0x8b45fc	                mov eax, dword [rbp - 4]	      3145	mbyte.c	FUNCTION_58	WHILE_1	ELSE_1
0x22ca	          0x8945f4	              mov dword [rbp - 0xc], eax	      3145	mbyte.c	FUNCTION_58	WHILE_1	ELSE_1
0x22cd	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3138	mbyte.c	FUNCTION_58	WHILE_1
0x22d0	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      3138	mbyte.c	FUNCTION_58	WHILE_1
0x22d3	            0x7cb8	                            jl 0x40022cd	      3138	mbyte.c	FUNCTION_58	WHILE_1
0x22d5	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3147	mbyte.c	FUNCTION_58	IF_2
0x22d8	          0x3b45f8	                cmp eax, dword [rbp - 8]	      3147	mbyte.c	FUNCTION_58	IF_2
0x22db	     0xf8d8e000000	                           jge 0x40023af	      3147	mbyte.c	FUNCTION_58	IF_2
0x22e1	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3148	mbyte.c	FUNCTION_58	IF_2
0x22e4	            0x4898	                                    cdqe	      3148	mbyte.c	FUNCTION_58	IF_2
0x22e6	        0x48c1e004	                              shl rax, 4	      3148	mbyte.c	FUNCTION_58	IF_2
0x22ea	          0x4889c2	                            mov rdx, rax	      3148	mbyte.c	FUNCTION_58	IF_2
0x22ed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3148	mbyte.c	FUNCTION_58	IF_2
0x22f1	          0x4801d0	                            add rax, rdx	      3148	mbyte.c	FUNCTION_58	IF_2
0x22f4	            0x8b00	                    mov eax, dword [rax]	      3148	mbyte.c	FUNCTION_58	IF_2
0x22f6	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      3148	mbyte.c	FUNCTION_58	IF_2
0x22f9	            0x7f74	                            jg 0x40023af	      3148	mbyte.c	FUNCTION_58	IF_2
0x22fb	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3149	mbyte.c	FUNCTION_58	IF_2
0x22fe	            0x4898	                                    cdqe	      3149	mbyte.c	FUNCTION_58	IF_2
0x2300	        0x48c1e004	                              shl rax, 4	      3149	mbyte.c	FUNCTION_58	IF_2
0x2304	          0x4889c2	                            mov rdx, rax	      3149	mbyte.c	FUNCTION_58	IF_2
0x2307	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3149	mbyte.c	FUNCTION_58	IF_2
0x230b	          0x4801d0	                            add rax, rdx	      3149	mbyte.c	FUNCTION_58	IF_2
0x230e	          0x8b4004	                mov eax, dword [rax + 4]	      3149	mbyte.c	FUNCTION_58	IF_2
0x2311	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      3149	mbyte.c	FUNCTION_58	IF_2
0x2314	            0x7c59	                            jl 0x40023af	      3149	mbyte.c	FUNCTION_58	IF_2
0x2316	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3150	mbyte.c	FUNCTION_58	IF_2
0x2319	            0x4898	                                    cdqe	      3150	mbyte.c	FUNCTION_58	IF_2
0x231b	        0x48c1e004	                              shl rax, 4	      3150	mbyte.c	FUNCTION_58	IF_2
0x231f	          0x4889c2	                            mov rdx, rax	      3150	mbyte.c	FUNCTION_58	IF_2
0x2322	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3150	mbyte.c	FUNCTION_58	IF_2
0x2326	          0x4801d0	                            add rax, rdx	      3150	mbyte.c	FUNCTION_58	IF_2
0x2329	            0x8b00	                    mov eax, dword [rax]	      3150	mbyte.c	FUNCTION_58	IF_2
0x232b	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      3150	mbyte.c	FUNCTION_58	IF_2
0x232e	            0x29c2	                            sub edx, eax	      3150	mbyte.c	FUNCTION_58	IF_2
0x2330	            0x89d0	                            mov eax, edx	      3150	mbyte.c	FUNCTION_58	IF_2
0x2332	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      3150	mbyte.c	FUNCTION_58	IF_2
0x2335	          0x4863d2	                         movsxd rdx, edx	      3150	mbyte.c	FUNCTION_58	IF_2
0x2338	          0x4889d1	                            mov rcx, rdx	      3150	mbyte.c	FUNCTION_58	IF_2
0x233b	        0x48c1e104	                              shl rcx, 4	      3150	mbyte.c	FUNCTION_58	IF_2
0x233f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3150	mbyte.c	FUNCTION_58	IF_2
0x2343	          0x4801ca	                            add rdx, rcx	      3150	mbyte.c	FUNCTION_58	IF_2
0x2346	          0x8b4a08	                mov ecx, dword [rdx + 8]	      3150	mbyte.c	FUNCTION_58	IF_2
0x2349	              0x99	                                     cdq	      3150	mbyte.c	FUNCTION_58	IF_2
0x234a	            0xf7f9	                                idiv ecx	      3150	mbyte.c	FUNCTION_58	IF_2
0x234c	            0x89d0	                            mov eax, edx	      3150	mbyte.c	FUNCTION_58	IF_2
0x234e	            0x85c0	                           test eax, eax	      3150	mbyte.c	FUNCTION_58	IF_2
0x2350	            0x751d	                           jne 0x40023af	      3150	mbyte.c	FUNCTION_58	IF_2
0x2352	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      3151	mbyte.c	FUNCTION_58	IF_2
0x2355	            0x4898	                                    cdqe	      3151	mbyte.c	FUNCTION_58	IF_2
0x2357	        0x48c1e004	                              shl rax, 4	      3151	mbyte.c	FUNCTION_58	IF_2
0x235b	          0x4889c2	                            mov rdx, rax	      3151	mbyte.c	FUNCTION_58	IF_2
0x235e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3151	mbyte.c	FUNCTION_58	IF_2
0x2362	          0x4801d0	                            add rax, rdx	      3151	mbyte.c	FUNCTION_58	IF_2
0x2365	          0x8b500c	              mov edx, dword [rax + 0xc]	      3151	mbyte.c	FUNCTION_58	IF_2
0x2368	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3151	mbyte.c	FUNCTION_58	IF_2
0x236b	             0x1d0	                            add eax, edx	      3151	mbyte.c	FUNCTION_58	IF_2
0x236d	            0xeb03	                           jmp 0x40023b2	      3151	mbyte.c	FUNCTION_58	IF_2
0x236f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3153	mbyte.c	FUNCTION_58	ELSE_2
0x2372	              0x5d	                                 pop rbp	      3154	mbyte.c	FUNCTION_58	ELSE_2
0x2373	              0xc3	                                     ret	      3154	mbyte.c	FUNCTION_58	ELSE_2
dbcs_ptr2char	CALL,1:WHILE,0:functions,0:ELSE,0:IF,1:DO,0:SWITCH,0:FOR,0	31
0x11f6	              0x55	                                push rbp	      1777	mbyte.c	FUNCTION_34
0x11f7	          0x4889e5	                            mov rbp, rsp	      1777	mbyte.c	FUNCTION_34
0x11fa	        0x48897df8	                mov qword [rbp - 8], rdi	      1777	mbyte.c	FUNCTION_34
0x11fe	        0x488b45f8	                mov rax, qword [rbp - 8]	      1778	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x1202	           0xfb600	                   movzx eax, byte [rax]	      1778	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x1205	           0xfb6c0	                           movzx eax, al	      1778	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x1208	            0x4898	                                    cdqe	      1778	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x120a	     0xfb680000000	                   movzx eax, byte [rax]	      1778	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x1211	            0x3c01	                               cmp al, 1	      1778	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x1213	            0x7e30	                           jle 0x4001285	      1778	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x1215	        0x488b45f8	                mov rax, qword [rbp - 8]	      1778	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x1219	        0x4883c001	                              add rax, 1	      1778	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x121d	           0xfb600	                   movzx eax, byte [rax]	      1778	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x1220	            0x84c0	                             test al, al	      1778	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x1222	            0x7421	                            je 0x4001285	      1778	mbyte.c	FUNCTION_34	IF_1	CALL_1
0x1224	        0x488b45f8	                mov rax, qword [rbp - 8]	      1779	mbyte.c	FUNCTION_34	IF_1
0x1228	           0xfb600	                   movzx eax, byte [rax]	      1779	mbyte.c	FUNCTION_34	IF_1
0x122b	           0xfb6c0	                           movzx eax, al	      1779	mbyte.c	FUNCTION_34	IF_1
0x122e	          0xc1e008	                              shl eax, 8	      1779	mbyte.c	FUNCTION_34	IF_1
0x1231	            0x89c2	                            mov edx, eax	      1779	mbyte.c	FUNCTION_34	IF_1
0x1233	        0x488b45f8	                mov rax, qword [rbp - 8]	      1779	mbyte.c	FUNCTION_34	IF_1
0x1237	        0x4883c001	                              add rax, 1	      1779	mbyte.c	FUNCTION_34	IF_1
0x123b	           0xfb600	                   movzx eax, byte [rax]	      1779	mbyte.c	FUNCTION_34	IF_1
0x123e	           0xfb6c0	                           movzx eax, al	      1779	mbyte.c	FUNCTION_34	IF_1
0x1241	             0x1d0	                            add eax, edx	      1779	mbyte.c	FUNCTION_34	IF_1
0x1243	            0xeb0a	                           jmp 0x400128f	      1779	mbyte.c	FUNCTION_34	IF_1
0x1245	        0x488b45f8	                mov rax, qword [rbp - 8]	      1780	mbyte.c	FUNCTION_34
0x1249	           0xfb600	                   movzx eax, byte [rax]	      1780	mbyte.c	FUNCTION_34
0x124c	           0xfb6c0	                           movzx eax, al	      1780	mbyte.c	FUNCTION_34
0x124f	              0x5d	                                 pop rbp	      1781	mbyte.c	FUNCTION_34
0x1250	              0xc3	                                     ret	      1781	mbyte.c	FUNCTION_34
utf_iscomposing	CALL,1:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	11
0x2075	              0x55	                                push rbp	      2330	mbyte.c	FUNCTION_53
0x2076	          0x4889e5	                            mov rbp, rsp	      2330	mbyte.c	FUNCTION_53
0x2079	        0x4883ec08	                              sub rsp, 8	      2330	mbyte.c	FUNCTION_53
0x207d	          0x897dfc	                mov dword [rbp - 4], edi	      2330	mbyte.c	FUNCTION_53
0x2080	          0x8b45fc	                mov eax, dword [rbp - 4]	      2600	mbyte.c	FUNCTION_53	CALL_1
0x2083	            0x89c2	                            mov edx, eax	      2600	mbyte.c	FUNCTION_53	CALL_1
0x2085	      0xbe70100000	                         mov esi, 0x1070	      2600	mbyte.c	FUNCTION_53	CALL_1
0x208a	      0xbf00000000	                              mov edi, 0	      2600	mbyte.c	FUNCTION_53	CALL_1
0x208f	      0xe859ecffff	                        call sym.intable	      2600	mbyte.c	FUNCTION_53	CALL_1
0x2094	              0xc9	                                   leave	      2601	mbyte.c	FUNCTION_53
0x2095	              0xc3	                                     ret	      2601	mbyte.c	FUNCTION_53
utf_ambiguous_width	CALL,2:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	25
0x2215	              0x55	                                push rbp	      2903	mbyte.c	FUNCTION_57
0x2216	          0x4889e5	                            mov rbp, rsp	      2903	mbyte.c	FUNCTION_57
0x2219	        0x4883ec08	                              sub rsp, 8	      2903	mbyte.c	FUNCTION_57
0x221d	          0x897dfc	                mov dword [rbp - 4], edi	      2903	mbyte.c	FUNCTION_57
0x2220	        0x837dfc7f	               cmp dword [rbp - 4], 0x7f	      2904	mbyte.c	FUNCTION_57	CALL_1
0x2224	            0x7e37	                           jle 0x400229d	      2904	mbyte.c	FUNCTION_57	CALL_1
0x2226	          0x8b45fc	                mov eax, dword [rbp - 4]	      2904	mbyte.c	FUNCTION_57	CALL_1
0x2229	            0x89c2	                            mov edx, eax	      2904	mbyte.c	FUNCTION_57	CALL_1
0x222b	      0xbe300b0000	                          mov esi, 0xb30	      2904	mbyte.c	FUNCTION_57	CALL_1
0x2230	      0xbf00000000	                              mov edi, 0	      2904	mbyte.c	FUNCTION_57	CALL_1
0x2235	      0xe8b3eaffff	                        call sym.intable	      2904	mbyte.c	FUNCTION_57	CALL_1
0x223a	            0x85c0	                           test eax, eax	      2904	mbyte.c	FUNCTION_57	CALL_1
0x223c	            0x7518	                           jne 0x4002296	      2904	mbyte.c	FUNCTION_57	CALL_1
0x223e	          0x8b45fc	                mov eax, dword [rbp - 4]	      2905	mbyte.c	FUNCTION_57	CALL_2
0x2241	            0x89c2	                            mov edx, eax	      2905	mbyte.c	FUNCTION_57	CALL_2
0x2243	      0xbec0080000	                          mov esi, 0x8c0	      2905	mbyte.c	FUNCTION_57	CALL_2
0x2248	      0xbf00000000	                              mov edi, 0	      2905	mbyte.c	FUNCTION_57	CALL_2
0x224d	      0xe89beaffff	                        call sym.intable	      2905	mbyte.c	FUNCTION_57	CALL_2
0x2252	            0x85c0	                           test eax, eax	      2905	mbyte.c	FUNCTION_57	CALL_2
0x2254	            0x7407	                            je 0x400229d	      2905	mbyte.c	FUNCTION_57	CALL_2
0x2256	      0xb801000000	                              mov eax, 1	      2904	mbyte.c	FUNCTION_57	CALL_1
0x225b	            0xeb05	                           jmp 0x40022a2	      2904	mbyte.c	FUNCTION_57	CALL_1
0x225d	      0xb800000000	                              mov eax, 0	      2904	mbyte.c	FUNCTION_57	CALL_1
0x2262	              0xc9	                                   leave	      2906	mbyte.c	FUNCTION_57
0x2263	              0xc3	                                     ret	      2906	mbyte.c	FUNCTION_57
mb_adjust_cursor	CALL,1:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	11
0x31de	              0x55	                                push rbp	      4095	mbyte.c	FUNCTION_77
0x31df	          0x4889e5	                            mov rbp, rsp	      4095	mbyte.c	FUNCTION_77
0x31e2	    0x488b05000000	            mov rax, qword [0x04003229] 	      4096	mbyte.c	FUNCTION_77	CALL_1
0x31e9	        0x488d5038	                   lea rdx, [rax + 0x38]	      4096	mbyte.c	FUNCTION_77	CALL_1
0x31ed	    0x488b05000000	            mov rax, qword [0x04003234] 	      4096	mbyte.c	FUNCTION_77	CALL_1
0x31f4	          0x4889d6	                            mov rsi, rdx	      4096	mbyte.c	FUNCTION_77	CALL_1
0x31f7	          0x4889c7	                            mov rdi, rax	      4096	mbyte.c	FUNCTION_77	CALL_1
0x31fa	      0xe800000000	                          call 0x400323f	      4096	mbyte.c	FUNCTION_77	CALL_1
0x31ff	              0x90	                                     nop	      4097	mbyte.c	FUNCTION_77
0x3200	              0x5d	                                 pop rbp	      4097	mbyte.c	FUNCTION_77
0x3201	              0xc3	                                     ret	      4097	mbyte.c	FUNCTION_77
string_convert	CALL,1:WHILE,0:functions,0:ELSE,0:IF,0:DO,0:SWITCH,0:FOR,0	14
0x4650	              0x55	                                push rbp	      6719	mbyte.c	FUNCTION_144
0x4651	          0x4889e5	                            mov rbp, rsp	      6719	mbyte.c	FUNCTION_144
0x4654	        0x4883ec20	                           sub rsp, 0x20	      6719	mbyte.c	FUNCTION_144
0x4658	        0x48897df8	                mov qword [rbp - 8], rdi	      6719	mbyte.c	FUNCTION_144
0x465c	        0x488975f0	             mov qword [rbp - 0x10], rsi	      6719	mbyte.c	FUNCTION_144
0x4660	        0x488955e8	             mov qword [rbp - 0x18], rdx	      6719	mbyte.c	FUNCTION_144
0x4664	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6720	mbyte.c	FUNCTION_144	CALL_1
0x4668	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      6720	mbyte.c	FUNCTION_144	CALL_1
0x466c	        0x488b45f8	                mov rax, qword [rbp - 8]	      6720	mbyte.c	FUNCTION_144	CALL_1
0x4670	      0xb900000000	                              mov ecx, 0	      6720	mbyte.c	FUNCTION_144	CALL_1
0x4675	          0x4889c7	                            mov rdi, rax	      6720	mbyte.c	FUNCTION_144	CALL_1
0x4678	      0xe800000000	                          call 0x40046bd	      6720	mbyte.c	FUNCTION_144	CALL_1
0x467d	              0xc9	                                   leave	      6721	mbyte.c	FUNCTION_144
0x467e	              0xc3	                                     ret	      6721	mbyte.c	FUNCTION_144
im_set_active	CALL,2:WHILE,0:functions,0:ELSE,0:IF,1:DO,0:SWITCH,0:FOR,0	28
0x429f	              0x55	                                push rbp	      6498	mbyte.c	FUNCTION_138
0x42a0	          0x4889e5	                            mov rbp, rsp	      6498	mbyte.c	FUNCTION_138
0x42a3	        0x4883ec20	                           sub rsp, 0x20	      6498	mbyte.c	FUNCTION_138
0x42a7	          0x897dec	             mov dword [rbp - 0x14], edi	      6498	mbyte.c	FUNCTION_138
0x42aa	    0x8b0500000000	            mov eax, dword [0x040042f0] 	      6500	mbyte.c	FUNCTION_138
0x42b0	            0x85c0	                           test eax, eax	      6500	mbyte.c	FUNCTION_138
0x42b2	            0x750d	                           jne 0x4004301	      6500	mbyte.c	FUNCTION_138
0x42b4	        0x837dec00	               cmp dword [rbp - 0x14], 0	      6500	mbyte.c	FUNCTION_138
0x42b8	            0x7407	                            je 0x4004301	      6500	mbyte.c	FUNCTION_138
0x42ba	      0xb801000000	                              mov eax, 1	      6500	mbyte.c	FUNCTION_138
0x42bf	            0xeb05	                           jmp 0x4004306	      6500	mbyte.c	FUNCTION_138
0x42c1	      0xb800000000	                              mov eax, 0	      6500	mbyte.c	FUNCTION_138
0x42c6	          0x8945fc	                mov dword [rbp - 4], eax	      6500	mbyte.c	FUNCTION_138
0x42c9	    0x488b05000000	            mov rax, qword [0x04004310] 	      6502	mbyte.c	FUNCTION_138	IF_1	CALL_1
0x42d0	           0xfb600	                   movzx eax, byte [rax]	      6502	mbyte.c	FUNCTION_138	IF_1	CALL_1
0x42d3	            0x84c0	                             test al, al	      6502	mbyte.c	FUNCTION_138	IF_1	CALL_1
0x42d5	            0x741d	                            je 0x4004334	      6502	mbyte.c	FUNCTION_138	IF_1	CALL_1
0x42d7	      0xe800000000	                          call 0x400431c	      6502	mbyte.c	FUNCTION_138	IF_1	CALL_1
0x42dc	          0x3b45fc	                cmp eax, dword [rbp - 4]	      6502	mbyte.c	FUNCTION_138	IF_1	CALL_1
0x42df	            0x7413	                            je 0x4004334	      6502	mbyte.c	FUNCTION_138	IF_1	CALL_1
0x42e1	          0x8b45fc	                mov eax, dword [rbp - 4]	      6504	mbyte.c	FUNCTION_138	IF_1	CALL_2
0x42e4	            0x89c7	                            mov edi, eax	      6504	mbyte.c	FUNCTION_138	IF_1	CALL_2
0x42e6	      0xe8c0feffff	            call sym.call_imactivatefunc	      6504	mbyte.c	FUNCTION_138	IF_1	CALL_2
0x42eb	          0x8b45fc	                mov eax, dword [rbp - 4]	      6505	mbyte.c	FUNCTION_138	IF_1
0x42ee	    0x890500000000	            mov dword [0x04004334], eax 	      6505	mbyte.c	FUNCTION_138	IF_1
0x42f4	              0x90	                                     nop	      6508	mbyte.c	FUNCTION_138
0x42f5	              0xc9	                                   leave	      6508	mbyte.c	FUNCTION_138
0x42f6	              0xc3	                                     ret	      6508	mbyte.c	FUNCTION_138
call_imactivatefunc	CALL,1:WHILE,0:functions,0:ELSE,1:IF,1:DO,0:SWITCH,0:FOR,0	25
0x41ab	              0x55	                                push rbp	      4796	mbyte.c	FUNCTION_95
0x41ac	          0x4889e5	                            mov rbp, rsp	      4796	mbyte.c	FUNCTION_95
0x41af	        0x4883ec20	                           sub rsp, 0x20	      4796	mbyte.c	FUNCTION_95
0x41b3	          0x897dec	             mov dword [rbp - 0x14], edi	      4796	mbyte.c	FUNCTION_95
0x41b6	    0x64488b042528	                mov rax, qword fs:[0x28]	      4796	mbyte.c	FUNCTION_95
0x41bf	        0x488945f8	                mov qword [rbp - 8], rax	      4796	mbyte.c	FUNCTION_95
0x41c3	            0x31c0	                            xor eax, eax	      4796	mbyte.c	FUNCTION_95
0x41c5	        0x837dec00	               cmp dword [rbp - 0x14], 0	      4799	mbyte.c	FUNCTION_95	IF_1
0x41c9	            0x740a	                            je 0x4004215	      4799	mbyte.c	FUNCTION_95	IF_1
0x41cb	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      4800	mbyte.c	FUNCTION_95	IF_1
0x41d3	            0xeb08	                           jmp 0x400421d	      4800	mbyte.c	FUNCTION_95	IF_1
0x41d5	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      4802	mbyte.c	FUNCTION_95	ELSE_1
0x41dd	    0x488b05000000	            mov rax, qword [0x04004224] 	      4803	mbyte.c	FUNCTION_95	CALL_1
0x41e4	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      4803	mbyte.c	FUNCTION_95	CALL_1
0x41e8	      0xb900000000	                              mov ecx, 0	      4803	mbyte.c	FUNCTION_95	CALL_1
0x41ed	      0xbe01000000	                              mov esi, 1	      4803	mbyte.c	FUNCTION_95	CALL_1
0x41f2	          0x4889c7	                            mov rdi, rax	      4803	mbyte.c	FUNCTION_95	CALL_1
0x41f5	      0xe800000000	                          call 0x400423a	      4803	mbyte.c	FUNCTION_95	CALL_1
0x41fa	              0x90	                                     nop	      4804	mbyte.c	FUNCTION_95
0x41fb	        0x488b45f8	                mov rax, qword [rbp - 8]	      4804	mbyte.c	FUNCTION_95
0x41ff	    0x644833042528	                xor rax, qword fs:[0x28]	      4804	mbyte.c	FUNCTION_95
0x4208	            0x7405	                            je 0x400424f	      4804	mbyte.c	FUNCTION_95
0x420a	      0xe800000000	                          call 0x400424f	      4804	mbyte.c	FUNCTION_95
0x420f	              0xc9	                                   leave	      4804	mbyte.c	FUNCTION_95
0x4210	              0xc3	                                     ret	      4804	mbyte.c	FUNCTION_95
utf_composinglike	CALL,5:WHILE,0:functions,0:ELSE,0:IF,2:DO,0:SWITCH,0:FOR,0	33
0x174e	              0x55	                                push rbp	      1956	mbyte.c	FUNCTION_41
0x174f	          0x4889e5	                            mov rbp, rsp	      1956	mbyte.c	FUNCTION_41
0x1752	        0x4883ec20	                           sub rsp, 0x20	      1956	mbyte.c	FUNCTION_41
0x1756	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1956	mbyte.c	FUNCTION_41
0x175a	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1956	mbyte.c	FUNCTION_41
0x175e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1959	mbyte.c	FUNCTION_41	CALL_1
0x1762	          0x4889c7	                            mov rdi, rax	      1959	mbyte.c	FUNCTION_41	CALL_1
0x1765	      0xe800000000	                          call 0x40017aa	      1959	mbyte.c	FUNCTION_41	CALL_1
0x176a	          0x8945fc	                mov dword [rbp - 4], eax	      1959	mbyte.c	FUNCTION_41	CALL_1
0x176d	          0x8b45fc	                mov eax, dword [rbp - 4]	      1960	mbyte.c	FUNCTION_41	IF_1	CALL_2
0x1770	            0x89c7	                            mov edi, eax	      1960	mbyte.c	FUNCTION_41	IF_1	CALL_2
0x1772	      0xe800000000	                          call 0x40017b7	      1960	mbyte.c	FUNCTION_41	IF_1	CALL_2
0x1777	            0x85c0	                           test eax, eax	      1960	mbyte.c	FUNCTION_41	IF_1	CALL_2
0x1779	            0x7407	                            je 0x40017c2	      1960	mbyte.c	FUNCTION_41	IF_1	CALL_2
0x177b	      0xb801000000	                              mov eax, 1	      1961	mbyte.c	FUNCTION_41	IF_1
0x1780	            0xeb2f	                           jmp 0x40017f1	      1961	mbyte.c	FUNCTION_41	IF_1
0x1782	          0x8b45fc	                mov eax, dword [rbp - 4]	      1962	mbyte.c	FUNCTION_41	IF_2	CALL_3
0x1785	            0x89c7	                            mov edi, eax	      1962	mbyte.c	FUNCTION_41	IF_2	CALL_3
0x1787	      0xe800000000	                          call 0x40017cc	      1962	mbyte.c	FUNCTION_41	IF_2	CALL_3
0x178c	            0x85c0	                           test eax, eax	      1962	mbyte.c	FUNCTION_41	IF_2	CALL_3
0x178e	            0x7507	                           jne 0x40017d7	      1962	mbyte.c	FUNCTION_41	IF_2	CALL_3
0x1790	      0xb800000000	                              mov eax, 0	      1963	mbyte.c	FUNCTION_41	IF_2
0x1795	            0xeb1a	                           jmp 0x40017f1	      1963	mbyte.c	FUNCTION_41	IF_2
0x1797	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1964	mbyte.c	FUNCTION_41	CALL_5
0x179b	          0x4889c7	                            mov rdi, rax	      1964	mbyte.c	FUNCTION_41	CALL_5
0x179e	      0xe800000000	                          call 0x40017e3	      1964	mbyte.c	FUNCTION_41	CALL_5
0x17a3	            0x89c2	                            mov edx, eax	      1964	mbyte.c	FUNCTION_41	CALL_5
0x17a5	          0x8b45fc	                mov eax, dword [rbp - 4]	      1964	mbyte.c	FUNCTION_41	CALL_5
0x17a8	            0x89c6	                            mov esi, eax	      1964	mbyte.c	FUNCTION_41	CALL_5
0x17aa	            0x89d7	                            mov edi, edx	      1964	mbyte.c	FUNCTION_41	CALL_5
0x17ac	      0xe800000000	                          call 0x40017f1	      1964	mbyte.c	FUNCTION_41	CALL_5
0x17b1	              0xc9	                                   leave	      1965	mbyte.c	FUNCTION_41
0x17b2	              0xc3	                                     ret	      1965	mbyte.c	FUNCTION_41
mb_adjustpos	CALL,3:WHILE,0:functions,0:ELSE,0:IF,2:DO,0:SWITCH,0:FOR,0	76
0x3202	              0x55	                                push rbp	      4105	mbyte.c	FUNCTION_78
0x3203	          0x4889e5	                            mov rbp, rsp	      4105	mbyte.c	FUNCTION_78
0x3206	        0x4883ec20	                           sub rsp, 0x20	      4105	mbyte.c	FUNCTION_78
0x320a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4105	mbyte.c	FUNCTION_78
0x320e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4105	mbyte.c	FUNCTION_78
0x3212	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4108	mbyte.c	FUNCTION_78	IF_1
0x3216	          0x8b4008	                mov eax, dword [rax + 8]	      4108	mbyte.c	FUNCTION_78	IF_1
0x3219	            0x85c0	                           test eax, eax	      4108	mbyte.c	FUNCTION_78	IF_1
0x321b	            0x7f10	                            jg 0x400326d	      4108	mbyte.c	FUNCTION_78	IF_1
0x321d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4110	mbyte.c	FUNCTION_78	IF_1
0x3221	          0x8b400c	              mov eax, dword [rax + 0xc]	      4110	mbyte.c	FUNCTION_78	IF_1
0x3224	          0x83f801	                              cmp eax, 1	      4110	mbyte.c	FUNCTION_78	IF_1
0x3227	     0xf8ecc000000	                           jle 0x4003339	      4110	mbyte.c	FUNCTION_78	IF_1
0x322d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4114	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x3231	          0x488b08	                    mov rcx, qword [rax]	      4114	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x3234	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4114	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x3238	      0xba00000000	                              mov edx, 0	      4114	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x323d	          0x4889ce	                            mov rsi, rcx	      4114	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x3240	          0x4889c7	                            mov rdi, rax	      4114	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x3243	      0xe800000000	                          call 0x4003288	      4114	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x3248	        0x488945f8	                mov qword [rbp - 8], rax	      4114	mbyte.c	FUNCTION_78	IF_1	CALL_1
0x324c	    0x488b05000000	            mov rax, qword [0x04003293] 	      4115	mbyte.c	FUNCTION_78	IF_1
0x3253	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4115	mbyte.c	FUNCTION_78	IF_1
0x3257	          0x8b5208	                mov edx, dword [rdx + 8]	      4115	mbyte.c	FUNCTION_78	IF_1
0x325a	          0x4863ca	                         movsxd rcx, edx	      4115	mbyte.c	FUNCTION_78	IF_1
0x325d	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4115	mbyte.c	FUNCTION_78	IF_1
0x3261	          0x4801d1	                            add rcx, rdx	      4115	mbyte.c	FUNCTION_78	IF_1
0x3264	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4115	mbyte.c	FUNCTION_78	IF_1
0x3268	          0x4889ce	                            mov rsi, rcx	      4115	mbyte.c	FUNCTION_78	IF_1
0x326b	          0x4889d7	                            mov rdi, rdx	      4115	mbyte.c	FUNCTION_78	IF_1
0x326e	            0xffd0	                                call rax	      4115	mbyte.c	FUNCTION_78	IF_1
0x3270	            0x89c2	                            mov edx, eax	      4115	mbyte.c	FUNCTION_78	IF_1
0x3272	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4115	mbyte.c	FUNCTION_78	IF_1
0x3276	          0x8b4008	                mov eax, dword [rax + 8]	      4115	mbyte.c	FUNCTION_78	IF_1
0x3279	            0x29d0	                            sub eax, edx	      4115	mbyte.c	FUNCTION_78	IF_1
0x327b	            0x89c2	                            mov edx, eax	      4115	mbyte.c	FUNCTION_78	IF_1
0x327d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4115	mbyte.c	FUNCTION_78	IF_1
0x3281	          0x895008	                mov dword [rax + 8], edx	      4115	mbyte.c	FUNCTION_78	IF_1
0x3284	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4119	mbyte.c	FUNCTION_78	IF_1	IF_2
0x3288	          0x8b400c	              mov eax, dword [rax + 0xc]	      4119	mbyte.c	FUNCTION_78	IF_1	IF_2
0x328b	          0x83f801	                              cmp eax, 1	      4119	mbyte.c	FUNCTION_78	IF_1	IF_2
0x328e	            0x7569	                           jne 0x4003339	      4119	mbyte.c	FUNCTION_78	IF_1	IF_2
0x3290	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4120	mbyte.c	FUNCTION_78	IF_1	IF_2
0x3294	          0x8b4008	                mov eax, dword [rax + 8]	      4120	mbyte.c	FUNCTION_78	IF_1	IF_2
0x3297	          0x4863d0	                         movsxd rdx, eax	      4120	mbyte.c	FUNCTION_78	IF_1	IF_2
0x329a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4120	mbyte.c	FUNCTION_78	IF_1	IF_2
0x329e	          0x4801d0	                            add rax, rdx	      4120	mbyte.c	FUNCTION_78	IF_1	IF_2
0x32a1	           0xfb600	                   movzx eax, byte [rax]	      4120	mbyte.c	FUNCTION_78	IF_1	IF_2
0x32a4	            0x3c09	                               cmp al, 9	      4120	mbyte.c	FUNCTION_78	IF_1	IF_2
0x32a6	            0x7451	                            je 0x4003339	      4120	mbyte.c	FUNCTION_78	IF_1	IF_2
0x32a8	    0x488b05000000	            mov rax, qword [0x040032ef] 	      4121	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x32af	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4121	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x32b3	          0x8b5208	                mov edx, dword [rdx + 8]	      4121	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x32b6	          0x4863ca	                         movsxd rcx, edx	      4121	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x32b9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4121	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x32bd	          0x4801ca	                            add rdx, rcx	      4121	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x32c0	          0x4889d7	                            mov rdi, rdx	      4121	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x32c3	            0xffd0	                                call rax	      4121	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x32c5	            0x89c7	                            mov edi, eax	      4121	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x32c7	      0xe800000000	                          call 0x400330c	      4121	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x32cc	            0x85c0	                           test eax, eax	      4121	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x32ce	            0x7429	                            je 0x4003339	      4121	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_2
0x32d0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4122	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x32d4	          0x8b4008	                mov eax, dword [rax + 8]	      4122	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x32d7	          0x4863d0	                         movsxd rdx, eax	      4122	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x32da	        0x488b45f8	                mov rax, qword [rbp - 8]	      4122	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x32de	          0x4801d0	                            add rax, rdx	      4122	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x32e1	          0x4889c7	                            mov rdi, rax	      4122	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x32e4	      0xe800000000	                          call 0x4003329	      4122	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x32e9	          0x83f801	                              cmp eax, 1	      4122	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x32ec	            0x7e0b	                           jle 0x4003339	      4122	mbyte.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x32ee	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4123	mbyte.c	FUNCTION_78	IF_1	IF_2
0x32f2	    0xc7400c000000	                mov dword [rax + 0xc], 0	      4123	mbyte.c	FUNCTION_78	IF_1	IF_2
0x32f9	              0x90	                                     nop	      4126	mbyte.c	FUNCTION_78
0x32fa	              0xc9	                                   leave	      4126	mbyte.c	FUNCTION_78
0x32fb	              0xc3	                                     ret	      4126	mbyte.c	FUNCTION_78
utf_ptr2len	CALL,0:WHILE,0:functions,0:ELSE,0:IF,2:DO,0:SWITCH,0:FOR,1	36
0x1b02	              0x55	                                push rbp	      2082	mbyte.c	FUNCTION_45
0x1b03	          0x4889e5	                            mov rbp, rsp	      2082	mbyte.c	FUNCTION_45
0x1b06	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2082	mbyte.c	FUNCTION_45
0x1b0a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2086	mbyte.c	FUNCTION_45	IF_1
0x1b0e	           0xfb600	                   movzx eax, byte [rax]	      2086	mbyte.c	FUNCTION_45	IF_1
0x1b11	            0x84c0	                             test al, al	      2086	mbyte.c	FUNCTION_45	IF_1
0x1b13	            0x7507	                           jne 0x4001b5c	      2086	mbyte.c	FUNCTION_45	IF_1
0x1b15	      0xb800000000	                              mov eax, 0	      2087	mbyte.c	FUNCTION_45	IF_1
0x1b1a	            0xeb57	                           jmp 0x4001bb3	      2087	mbyte.c	FUNCTION_45	IF_1
0x1b1c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2088	mbyte.c	FUNCTION_45
0x1b20	           0xfb600	                   movzx eax, byte [rax]	      2088	mbyte.c	FUNCTION_45
0x1b23	           0xfb6c0	                           movzx eax, al	      2088	mbyte.c	FUNCTION_45
0x1b26	            0x4898	                                    cdqe	      2088	mbyte.c	FUNCTION_45
0x1b28	     0xfb680000000	                   movzx eax, byte [rax]	      2088	mbyte.c	FUNCTION_45
0x1b2f	           0xfbec0	                           movsx eax, al	      2088	mbyte.c	FUNCTION_45
0x1b32	          0x8945fc	                mov dword [rbp - 4], eax	      2088	mbyte.c	FUNCTION_45
0x1b35	    0xc745f8010000	                  mov dword [rbp - 8], 1	      2089	mbyte.c	FUNCTION_45	FOR_1
0x1b3c	            0xeb2a	                           jmp 0x4001ba8	      2089	mbyte.c	FUNCTION_45	FOR_1
0x1b3e	          0x8b45f8	                mov eax, dword [rbp - 8]	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x1b41	          0x4863d0	                         movsxd rdx, eax	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x1b44	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x1b48	          0x4801d0	                            add rax, rdx	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x1b4b	           0xfb600	                   movzx eax, byte [rax]	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x1b4e	           0xfb6c0	                           movzx eax, al	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x1b51	      0x25c0000000	                           and eax, 0xc0	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x1b56	      0x3d80000000	                           cmp eax, 0x80	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x1b5b	            0x7407	                            je 0x4001ba4	      2090	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x1b5d	      0xb801000000	                              mov eax, 1	      2091	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x1b62	            0xeb0f	                           jmp 0x4001bb3	      2091	mbyte.c	FUNCTION_45	FOR_1	IF_2
0x1b64	        0x8345f801	                  add dword [rbp - 8], 1	      2089	mbyte.c	FUNCTION_45	FOR_1
0x1b68	          0x8b45f8	                mov eax, dword [rbp - 8]	      2089	mbyte.c	FUNCTION_45	FOR_1
0x1b6b	          0x3b45fc	                cmp eax, dword [rbp - 4]	      2089	mbyte.c	FUNCTION_45	FOR_1
0x1b6e	            0x7cce	                            jl 0x4001b7e	      2089	mbyte.c	FUNCTION_45	FOR_1
0x1b70	          0x8b45fc	                mov eax, dword [rbp - 4]	      2092	mbyte.c	FUNCTION_45
0x1b73	              0x5d	                                 pop rbp	      2093	mbyte.c	FUNCTION_45
0x1b74	              0xc3	                                     ret	      2093	mbyte.c	FUNCTION_45
mb_lefthalve	CALL,0:WHILE,0:functions,0:ELSE,0:IF,1:DO,0:SWITCH,0:FOR,0	30
0x3597	              0x55	                                push rbp	      4247	mbyte.c	FUNCTION_83
0x3598	          0x4889e5	                            mov rbp, rsp	      4247	mbyte.c	FUNCTION_83
0x359b	        0x4883ec10	                           sub rsp, 0x10	      4247	mbyte.c	FUNCTION_83
0x359f	          0x897dfc	                mov dword [rbp - 4], edi	      4247	mbyte.c	FUNCTION_83
0x35a2	          0x8975f8	                mov dword [rbp - 8], esi	      4247	mbyte.c	FUNCTION_83
0x35a5	    0x488b05000000	            mov rax, qword [0x040035ec] 	      4252	mbyte.c	FUNCTION_83
0x35ac	    0x488b15000000	            mov rdx, qword [0x040035f3] 	      4253	mbyte.c	FUNCTION_83
0x35b3	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      4253	mbyte.c	FUNCTION_83
0x35b6	          0x4863c9	                         movsxd rcx, ecx	      4253	mbyte.c	FUNCTION_83
0x35b9	        0x48c1e102	                              shl rcx, 2	      4253	mbyte.c	FUNCTION_83
0x35bd	          0x4801ca	                            add rdx, rcx	      4253	mbyte.c	FUNCTION_83
0x35c0	            0x8b12	                    mov edx, dword [rdx]	      4253	mbyte.c	FUNCTION_83
0x35c2	    0x8b0d00000000	            mov ecx, dword [0x04003608] 	      4252	mbyte.c	FUNCTION_83
0x35c8	             0x1d1	                            add ecx, edx	      4252	mbyte.c	FUNCTION_83
0x35ca	    0x488b15000000	            mov rdx, qword [0x04003611] 	      4252	mbyte.c	FUNCTION_83
0x35d1	          0x8b75fc	                mov esi, dword [rbp - 4]	      4252	mbyte.c	FUNCTION_83
0x35d4	          0x4863f6	                         movsxd rsi, esi	      4252	mbyte.c	FUNCTION_83
0x35d7	        0x48c1e602	                              shl rsi, 2	      4252	mbyte.c	FUNCTION_83
0x35db	          0x4801f2	                            add rdx, rsi	      4252	mbyte.c	FUNCTION_83
0x35de	            0x8b32	                    mov esi, dword [rdx]	      4252	mbyte.c	FUNCTION_83
0x35e0	          0x8b55f8	                mov edx, dword [rbp - 8]	      4252	mbyte.c	FUNCTION_83
0x35e3	             0x1f2	                            add edx, esi	      4252	mbyte.c	FUNCTION_83
0x35e5	            0x89ce	                            mov esi, ecx	      4252	mbyte.c	FUNCTION_83
0x35e7	            0x89d7	                            mov edi, edx	      4252	mbyte.c	FUNCTION_83
0x35e9	            0xffd0	                                call rax	      4252	mbyte.c	FUNCTION_83
0x35eb	          0x83f801	                              cmp eax, 1	      4253	mbyte.c	FUNCTION_83
0x35ee	           0xf9fc0	                                 setg al	      4253	mbyte.c	FUNCTION_83
0x35f1	           0xfb6c0	                           movzx eax, al	      4252	mbyte.c	FUNCTION_83
0x35f4	              0xc9	                                   leave	      4254	mbyte.c	FUNCTION_83
0x35f5	              0xc3	                                     ret	      4254	mbyte.c	FUNCTION_83
