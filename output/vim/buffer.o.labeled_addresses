wininfo_other_tab_diff	FOR,0:WHILE,0:ELSE,0:functions,0:IF,2:CALL,1:SWITCH,0:DO,0	26
0x4aeb	              0x55	                                push rbp	      2825	buffer.c	FUNCTION_40
0x4aec	          0x4889e5	                            mov rbp, rsp	      2825	buffer.c	FUNCTION_40
0x4aef	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2825	buffer.c	FUNCTION_40
0x4af3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2828	buffer.c	FUNCTION_40	IF_1
0x4af7	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2828	buffer.c	FUNCTION_40	IF_1
0x4afa	            0x85c0	                           test eax, eax	      2828	buffer.c	FUNCTION_40	IF_1
0x4afc	            0x743c	                            je 0x4004b7a	      2828	buffer.c	FUNCTION_40	IF_1
0x4afe	    0x488b05000000	            mov rax, qword [0x04004b45] 	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4b05	        0x488945f8	                mov qword [rbp - 8], rax	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4b09	            0xeb21	                           jmp 0x4004b6c	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4b0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x4b0f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x4b13	        0x483b45f8	                cmp rax, qword [rbp - 8]	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x4b17	            0x7507	                           jne 0x4004b60	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x4b19	      0xb800000000	                              mov eax, 0	      2834	buffer.c	FUNCTION_40	IF_1	IF_2
0x4b1e	            0xeb1f	                           jmp 0x4004b7f	      2834	buffer.c	FUNCTION_40	IF_1	IF_2
0x4b20	        0x488b45f8	                mov rax, qword [rbp - 8]	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4b24	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4b28	        0x488945f8	                mov qword [rbp - 8], rax	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4b2c	      0x48837df800	                  cmp qword [rbp - 8], 0	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4b31	            0x75d8	                           jne 0x4004b4b	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4b33	      0xb801000000	                              mov eax, 1	      2835	buffer.c	FUNCTION_40	IF_1
0x4b38	            0xeb05	                           jmp 0x4004b7f	      2835	buffer.c	FUNCTION_40	IF_1
0x4b3a	      0xb800000000	                              mov eax, 0	      2837	buffer.c	FUNCTION_40
0x4b3f	              0x5d	                                 pop rbp	      2838	buffer.c	FUNCTION_40
0x4b40	              0xc3	                                     ret	      2838	buffer.c	FUNCTION_40
bt_nofile	FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,0:SWITCH,0:DO,0	31
0xb697	              0x55	                                push rbp	      5627	buffer.c	FUNCTION_80
0xb698	          0x4889e5	                            mov rbp, rsp	      5627	buffer.c	FUNCTION_80
0xb69b	        0x48897df8	                mov qword [rbp - 8], rdi	      5627	buffer.c	FUNCTION_80
0xb69f	      0x48837df800	                  cmp qword [rbp - 8], 0	      5628	buffer.c	FUNCTION_80
0xb6a4	            0x7453	                            je 0x400b739	      5628	buffer.c	FUNCTION_80
0xb6a6	        0x488b45f8	                mov rax, qword [rbp - 8]	      5628	buffer.c	FUNCTION_80
0xb6aa	    0x488b80181400	          mov rax, qword [rax + 0x1418] 	      5628	buffer.c	FUNCTION_80
0xb6b1	           0xfb600	                   movzx eax, byte [rax]	      5628	buffer.c	FUNCTION_80
0xb6b4	            0x3c6e	                            cmp al, 0x6e	      5628	buffer.c	FUNCTION_80
0xb6b6	            0x7516	                           jne 0x400b70e	      5628	buffer.c	FUNCTION_80
0xb6b8	        0x488b45f8	                mov rax, qword [rbp - 8]	      5628	buffer.c	FUNCTION_80
0xb6bc	    0x488b80181400	          mov rax, qword [rax + 0x1418] 	      5628	buffer.c	FUNCTION_80
0xb6c3	        0x4883c002	                              add rax, 2	      5628	buffer.c	FUNCTION_80
0xb6c7	           0xfb600	                   movzx eax, byte [rax]	      5628	buffer.c	FUNCTION_80
0xb6ca	            0x3c66	                            cmp al, 0x66	      5628	buffer.c	FUNCTION_80
0xb6cc	            0x7424	                            je 0x400b732	      5628	buffer.c	FUNCTION_80
0xb6ce	        0x488b45f8	                mov rax, qword [rbp - 8]	      5629	buffer.c	FUNCTION_80
0xb6d2	    0x488b80181400	          mov rax, qword [rax + 0x1418] 	      5629	buffer.c	FUNCTION_80
0xb6d9	           0xfb600	                   movzx eax, byte [rax]	      5629	buffer.c	FUNCTION_80
0xb6dc	            0x3c61	                            cmp al, 0x61	      5629	buffer.c	FUNCTION_80
0xb6de	            0x7412	                            je 0x400b732	      5629	buffer.c	FUNCTION_80
0xb6e0	        0x488b45f8	                mov rax, qword [rbp - 8]	      5630	buffer.c	FUNCTION_80
0xb6e4	    0x488b80181400	          mov rax, qword [rax + 0x1418] 	      5630	buffer.c	FUNCTION_80
0xb6eb	           0xfb600	                   movzx eax, byte [rax]	      5630	buffer.c	FUNCTION_80
0xb6ee	            0x3c74	                            cmp al, 0x74	      5630	buffer.c	FUNCTION_80
0xb6f0	            0x7507	                           jne 0x400b739	      5630	buffer.c	FUNCTION_80
0xb6f2	      0xb801000000	                              mov eax, 1	      5628	buffer.c	FUNCTION_80
0xb6f7	            0xeb05	                           jmp 0x400b73e	      5628	buffer.c	FUNCTION_80
0xb6f9	      0xb800000000	                              mov eax, 0	      5628	buffer.c	FUNCTION_80
0xb6fe	              0x5d	                                 pop rbp	      5631	buffer.c	FUNCTION_80
0xb6ff	              0xc3	                                     ret	      5631	buffer.c	FUNCTION_80
fname_expand	FOR,0:WHILE,0:ELSE,0:functions,0:IF,4:CALL,3:SWITCH,0:DO,0	29
0x9d45	              0x55	                                push rbp	      4798	buffer.c	FUNCTION_69
0x9d46	          0x4889e5	                            mov rbp, rsp	      4798	buffer.c	FUNCTION_69
0x9d49	        0x4883ec20	                           sub rsp, 0x20	      4798	buffer.c	FUNCTION_69
0x9d4d	        0x48897df8	                mov qword [rbp - 8], rdi	      4798	buffer.c	FUNCTION_69
0x9d51	        0x488975f0	             mov qword [rbp - 0x10], rsi	      4798	buffer.c	FUNCTION_69
0x9d55	        0x488955e8	             mov qword [rbp - 0x18], rdx	      4798	buffer.c	FUNCTION_69
0x9d59	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4799	buffer.c	FUNCTION_69	IF_1
0x9d5d	          0x488b00	                    mov rax, qword [rax]	      4799	buffer.c	FUNCTION_69	IF_1
0x9d60	          0x4885c0	                           test rax, rax	      4799	buffer.c	FUNCTION_69	IF_1
0x9d63	            0x7435	                            je 0x4009dda	      4799	buffer.c	FUNCTION_69	IF_1
0x9d65	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4801	buffer.c	FUNCTION_69	IF_2
0x9d69	          0x488b00	                    mov rax, qword [rax]	      4801	buffer.c	FUNCTION_69	IF_2
0x9d6c	          0x4885c0	                           test rax, rax	      4801	buffer.c	FUNCTION_69	IF_2
0x9d6f	            0x750e	                           jne 0x4009dbf	      4801	buffer.c	FUNCTION_69	IF_2
0x9d71	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4802	buffer.c	FUNCTION_69	IF_2
0x9d75	          0x488b10	                    mov rdx, qword [rax]	      4802	buffer.c	FUNCTION_69	IF_2
0x9d78	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4802	buffer.c	FUNCTION_69	IF_2
0x9d7c	          0x488910	                    mov qword [rax], rdx	      4802	buffer.c	FUNCTION_69	IF_2
0x9d7f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4803	buffer.c	FUNCTION_69	CALL_1
0x9d83	          0x488b00	                    mov rax, qword [rax]	      4803	buffer.c	FUNCTION_69	CALL_1
0x9d86	          0x4889c7	                            mov rdi, rax	      4803	buffer.c	FUNCTION_69	CALL_1
0x9d89	      0xe800000000	                          call 0x4009dce	      4803	buffer.c	FUNCTION_69	CALL_1
0x9d8e	          0x4889c2	                            mov rdx, rax	      4803	buffer.c	FUNCTION_69	CALL_1
0x9d91	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4803	buffer.c	FUNCTION_69	CALL_1
0x9d95	          0x488910	                    mov qword [rax], rdx	      4803	buffer.c	FUNCTION_69	CALL_1
0x9d98	            0xeb01	                           jmp 0x4009ddb	      4803	buffer.c	FUNCTION_69	CALL_1
0x9d9a	              0x90	                                     nop	      4800	buffer.c	FUNCTION_69	IF_1
0x9d9b	              0xc9	                                   leave	      4820	buffer.c	FUNCTION_69
0x9d9c	              0xc3	                                     ret	      4820	buffer.c	FUNCTION_69
write_viminfo_bufferlist	FOR,0:WHILE,0:ELSE,0:functions,1:IF,2:CALL,8:SWITCH,0:DO,0	127
0xb40f	              0x55	                                push rbp	      5545	buffer.c	FUNCTION_76
0xb410	          0x4889e5	                            mov rbp, rsp	      5545	buffer.c	FUNCTION_76
0xb413	        0x4883ec40	                           sub rsp, 0x40	      5545	buffer.c	FUNCTION_76
0xb417	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      5545	buffer.c	FUNCTION_76
0xb41b	      0xbf25000000	                           mov edi, 0x25	      5552	buffer.c	FUNCTION_76	IF_1	CALL_1
0xb420	      0xe800000000	                          call 0x400b465	      5552	buffer.c	FUNCTION_76	IF_1	CALL_1
0xb425	          0x4885c0	                           test rax, rax	      5552	buffer.c	FUNCTION_76	IF_1	CALL_1
0xb428	     0xf84da010000	                            je 0x400b648	      5552	buffer.c	FUNCTION_76	IF_1	CALL_1
0xb42e	      0xbf25000000	                           mov edi, 0x25	      5556	buffer.c	FUNCTION_76	CALL_2
0xb433	      0xe800000000	                          call 0x400b478	      5556	buffer.c	FUNCTION_76	CALL_2
0xb438	          0x8945dc	             mov dword [rbp - 0x24], eax	      5556	buffer.c	FUNCTION_76	CALL_2
0xb43b	      0xbf28100000	                         mov edi, 0x1028	      5560	buffer.c	FUNCTION_76	CALL_3
0xb440	      0xe800000000	                          call 0x400b485	      5560	buffer.c	FUNCTION_76	CALL_3
0xb445	        0x488945f8	                mov qword [rbp - 8], rax	      5560	buffer.c	FUNCTION_76	CALL_3
0xb449	      0x48837df800	                  cmp qword [rbp - 8], 0	      5561	buffer.c	FUNCTION_76	IF_2
0xb44e	     0xf84b7010000	                            je 0x400b64b	      5561	buffer.c	FUNCTION_76	IF_2
0xb454	    0x488b05000000	            mov rax, qword [0x0400b49b] 	      5564	buffer.c	FUNCTION_76	CALL_4
0xb45b	        0x488945f0	             mov qword [rbp - 0x10], rax	      5564	buffer.c	FUNCTION_76	CALL_4
0xb45f	            0xeb4e	                           jmp 0x400b4ef	      5564	buffer.c	FUNCTION_76	CALL_4
0xb461	    0x488b05000000	            mov rax, qword [0x0400b4a8] 	      5564	buffer.c	FUNCTION_76	CALL_4
0xb468	        0x483945f0	            cmp qword [rbp - 0x10], rax 	      5564	buffer.c	FUNCTION_76	CALL_4
0xb46c	            0x740a	                            je 0x400b4b8	      5564	buffer.c	FUNCTION_76	CALL_4
0xb46e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5564	buffer.c	FUNCTION_76	CALL_4
0xb472	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5564	buffer.c	FUNCTION_76	CALL_4
0xb476	            0xeb07	                           jmp 0x400b4bf	      5564	buffer.c	FUNCTION_76	CALL_4
0xb478	    0x488b05000000	            mov rax, qword [0x0400b4bf] 	      5564	buffer.c	FUNCTION_76	CALL_4
0xb47f	        0x488945e8	             mov qword [rbp - 0x18], rax	      5564	buffer.c	FUNCTION_76	CALL_4
0xb483	            0xeb18	                           jmp 0x400b4dd	      5564	buffer.c	FUNCTION_76	CALL_4
0xb485	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5565	buffer.c	FUNCTION_76	CALL_5
0xb489	          0x4889c7	                            mov rdi, rax	      5565	buffer.c	FUNCTION_76	CALL_5
0xb48c	      0xe800000000	                          call 0x400b4d1	      5565	buffer.c	FUNCTION_76	CALL_5
0xb491	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5564	buffer.c	FUNCTION_76	CALL_4
0xb495	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5564	buffer.c	FUNCTION_76	CALL_4
0xb499	        0x488945e8	             mov qword [rbp - 0x18], rax	      5564	buffer.c	FUNCTION_76	CALL_4
0xb49d	      0x48837de800	               cmp qword [rbp - 0x18], 0	      5564	buffer.c	FUNCTION_76	CALL_4
0xb4a2	            0x75e1	                           jne 0x400b4c5	      5564	buffer.c	FUNCTION_76	CALL_4
0xb4a4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5564	buffer.c	FUNCTION_76	CALL_4
0xb4a8	          0x488b00	                    mov rax, qword [rax]	      5564	buffer.c	FUNCTION_76	CALL_4
0xb4ab	        0x488945f0	             mov qword [rbp - 0x10], rax	      5564	buffer.c	FUNCTION_76	CALL_4
0xb4af	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5564	buffer.c	FUNCTION_76	CALL_4
0xb4b4	            0x75ab	                           jne 0x400b4a1	      5564	buffer.c	FUNCTION_76	CALL_4
0xb4b6	      0xbf00000000	                              mov edi, 0	      5567	buffer.c	FUNCTION_76	CALL_7
0xb4bb	      0xe800000000	                          call 0x400b500	      5567	buffer.c	FUNCTION_76	CALL_7
0xb4c0	          0x4889c2	                            mov rdx, rax	      5567	buffer.c	FUNCTION_76	CALL_7
0xb4c3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5567	buffer.c	FUNCTION_76	CALL_7
0xb4c7	          0x4889c6	                            mov rsi, rax	      5567	buffer.c	FUNCTION_76	CALL_7
0xb4ca	          0x4889d7	                            mov rdi, rdx	      5567	buffer.c	FUNCTION_76	CALL_7
0xb4cd	      0xe800000000	                          call 0x400b512	      5567	buffer.c	FUNCTION_76	CALL_7
0xb4d2	    0x488b05000000	            mov rax, qword [0x0400b519] 	      5568	buffer.c	FUNCTION_76
0xb4d9	        0x488945e0	             mov qword [rbp - 0x20], rax	      5568	buffer.c	FUNCTION_76
0xb4dd	      0xe90a010000	                           jmp 0x400b62c	      5568	buffer.c	FUNCTION_76
0xb4e2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5570	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0xb4e6	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      5570	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0xb4ed	          0x4885c0	                           test rax, rax	      5570	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0xb4f0	     0xf84e9000000	                            je 0x400b61f	      5570	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0xb4f6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5571	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0xb4fa	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      5571	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0xb500	            0x85c0	                           test eax, eax	      5571	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0xb502	     0xf84d7000000	                            je 0x400b61f	      5571	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0xb508	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5573	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_1
0xb50c	          0x4889c7	                            mov rdi, rax	      5573	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_1
0xb50f	      0xe800000000	                          call 0x400b554	      5573	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_1
0xb514	            0x85c0	                           test eax, eax	      5573	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_1
0xb516	     0xf85c3000000	                           jne 0x400b61f	      5573	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_1
0xb51c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5576	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_2
0xb520	          0x4889c7	                            mov rdi, rax	      5576	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_2
0xb523	      0xe800000000	                          call 0x400b568	      5576	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_2
0xb528	            0x85c0	                           test eax, eax	      5576	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_2
0xb52a	     0xf85af000000	                           jne 0x400b61f	      5576	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_2
0xb530	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0xb534	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0xb53b	          0x4889c7	                            mov rdi, rax	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0xb53e	      0xe800000000	                          call 0x400b583	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0xb543	            0x85c0	                           test eax, eax	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0xb545	     0xf8594000000	                           jne 0x400b61f	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0xb54b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5581	buffer.c	FUNCTION_76	FUNCTION_1	IF_2
0xb54e	          0x8d50ff	                      lea edx, [rax - 1]	      5581	buffer.c	FUNCTION_76	FUNCTION_1	IF_2
0xb551	          0x8955dc	             mov dword [rbp - 0x24], edx	      5581	buffer.c	FUNCTION_76	FUNCTION_1	IF_2
0xb554	            0x85c0	                           test eax, eax	      5581	buffer.c	FUNCTION_76	FUNCTION_1	IF_2
0xb556	     0xf849d000000	                            je 0x400b639	      5581	buffer.c	FUNCTION_76	FUNCTION_1	IF_2
0xb55c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5583	buffer.c	FUNCTION_76	FUNCTION_1	CALL_4
0xb560	          0x4889c6	                            mov rsi, rax	      5583	buffer.c	FUNCTION_76	FUNCTION_1	CALL_4
0xb563	      0xbf25000000	                           mov edi, 0x25	      5583	buffer.c	FUNCTION_76	FUNCTION_1	CALL_4
0xb568	      0xe800000000	                          call 0x400b5ad	      5583	buffer.c	FUNCTION_76	FUNCTION_1	CALL_4
0xb56d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0xb571	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0xb578	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0xb57c	    0x41b801000000	                              mov r8d, 1	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0xb582	      0xb900100000	                         mov ecx, 0x1000	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0xb587	          0x4889c6	                            mov rsi, rax	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0xb58a	      0xbf00000000	                              mov edi, 0	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0xb58f	      0xe800000000	                          call 0x400b5d4	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0xb594	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0xb598	    0x8b8830030000	           mov ecx, dword [rax + 0x330] 	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0xb59e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5586	buffer.c	FUNCTION_76	FUNCTION_1
0xb5a2	    0x488b90280300	           mov rdx, qword [rax + 0x328] 	      5586	buffer.c	FUNCTION_76	FUNCTION_1
0xb5a9	        0x488b45f8	                mov rax, qword [rbp - 8]	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0xb5ad	          0x4189c8	                            mov r8d, ecx	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0xb5b0	          0x4889d1	                            mov rcx, rdx	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0xb5b3	      0xba00000000	                              mov edx, 0	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0xb5b8	      0xbe28100000	                         mov esi, 0x1028	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0xb5bd	          0x4889c7	                            mov rdi, rax	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0xb5c0	      0xb800000000	                              mov eax, 0	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0xb5c5	      0xe800000000	                          call 0x400b60a	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0xb5ca	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5588	buffer.c	FUNCTION_76	FUNCTION_1	CALL_7
0xb5ce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5588	buffer.c	FUNCTION_76	FUNCTION_1	CALL_7
0xb5d2	          0x4889d6	                            mov rsi, rdx	      5588	buffer.c	FUNCTION_76	FUNCTION_1	CALL_7
0xb5d5	          0x4889c7	                            mov rdi, rax	      5588	buffer.c	FUNCTION_76	FUNCTION_1	CALL_7
0xb5d8	      0xe800000000	                          call 0x400b61d	      5588	buffer.c	FUNCTION_76	FUNCTION_1	CALL_7
0xb5dd	            0xeb01	                           jmp 0x400b620	      5588	buffer.c	FUNCTION_76	FUNCTION_1	CALL_7
0xb5df	              0x90	                                     nop	      5579	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0xb5e0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5568	buffer.c	FUNCTION_76
0xb5e4	        0x488b4068	            mov rax, qword [rax + 0x68] 	      5568	buffer.c	FUNCTION_76
0xb5e8	        0x488945e0	             mov qword [rbp - 0x20], rax	      5568	buffer.c	FUNCTION_76
0xb5ec	      0x48837de000	               cmp qword [rbp - 0x20], 0	      5568	buffer.c	FUNCTION_76
0xb5f1	     0xf85ebfeffff	                           jne 0x400b522	      5568	buffer.c	FUNCTION_76
0xb5f7	            0xeb01	                           jmp 0x400b63a	      5568	buffer.c	FUNCTION_76
0xb5f9	              0x90	                                     nop	      5582	buffer.c	FUNCTION_76	FUNCTION_1	IF_2
0xb5fa	        0x488b45f8	                mov rax, qword [rbp - 8]	      5590	buffer.c	FUNCTION_76	CALL_8
0xb5fe	          0x4889c7	                            mov rdi, rax	      5590	buffer.c	FUNCTION_76	CALL_8
0xb601	      0xe800000000	                          call 0x400b646	      5590	buffer.c	FUNCTION_76	CALL_8
0xb606	            0xeb04	                           jmp 0x400b64c	      5590	buffer.c	FUNCTION_76	CALL_8
0xb608	              0x90	                                     nop	      5553	buffer.c	FUNCTION_76	IF_1
0xb609	            0xeb01	                           jmp 0x400b64c	      5553	buffer.c	FUNCTION_76	IF_1
0xb60b	              0x90	                                     nop	      5562	buffer.c	FUNCTION_76	IF_2
0xb60c	              0xc9	                                   leave	      5591	buffer.c	FUNCTION_76
0xb60d	              0xc3	                                     ret	      5591	buffer.c	FUNCTION_76
clear_wininfo	FOR,0:WHILE,1:ELSE,0:functions,0:IF,1:CALL,3:SWITCH,0:DO,0	34
0x1615	              0x55	                                push rbp	       938	buffer.c	FUNCTION_14
0x1616	          0x4889e5	                            mov rbp, rsp	       938	buffer.c	FUNCTION_14
0x1619	        0x4883ec20	                           sub rsp, 0x20	       938	buffer.c	FUNCTION_14
0x161d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       938	buffer.c	FUNCTION_14
0x1621	            0xeb5a	                           jmp 0x40016bd	       941	buffer.c	FUNCTION_14	WHILE_1
0x1623	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       943	buffer.c	FUNCTION_14	WHILE_1
0x1627	    0x488b80280100	           mov rax, qword [rax + 0x128] 	       943	buffer.c	FUNCTION_14	WHILE_1
0x162e	        0x488945f8	                mov qword [rbp - 8], rax	       943	buffer.c	FUNCTION_14	WHILE_1
0x1632	        0x488b45f8	                mov rax, qword [rbp - 8]	       944	buffer.c	FUNCTION_14	WHILE_1
0x1636	          0x488b10	                    mov rdx, qword [rax]	       944	buffer.c	FUNCTION_14	WHILE_1
0x1639	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       944	buffer.c	FUNCTION_14	WHILE_1
0x163d	    0x488990280100	            mov qword [rax + 0x128], rdx	       944	buffer.c	FUNCTION_14	WHILE_1
0x1644	        0x488b45f8	                mov rax, qword [rbp - 8]	       945	buffer.c	FUNCTION_14	WHILE_1	IF_1
0x1648	          0x8b4028	            mov eax, dword [rax + 0x28] 	       945	buffer.c	FUNCTION_14	WHILE_1	IF_1
0x164b	            0x85c0	                           test eax, eax	       945	buffer.c	FUNCTION_14	WHILE_1	IF_1
0x164d	            0x7422	                            je 0x40016b1	       945	buffer.c	FUNCTION_14	WHILE_1	IF_1
0x164f	        0x488b45f8	                mov rax, qword [rbp - 8]	       947	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_1
0x1653	        0x4883c030	                           add rax, 0x30	       947	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_1
0x1657	          0x4889c7	                            mov rdi, rax	       947	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_1
0x165a	      0xe800000000	                          call 0x400169f	       947	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_1
0x165f	        0x488b45f8	                mov rax, qword [rbp - 8]	       949	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_2
0x1663	    0x4805f0010000	                          add rax, 0x1f0	       949	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_2
0x1669	          0x4889c7	                            mov rdi, rax	       949	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_2
0x166c	      0xe800000000	                          call 0x40016b1	       949	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_2
0x1671	        0x488b45f8	                mov rax, qword [rbp - 8]	       952	buffer.c	FUNCTION_14	WHILE_1	CALL_3
0x1675	          0x4889c7	                            mov rdi, rax	       952	buffer.c	FUNCTION_14	WHILE_1	CALL_3
0x1678	      0xe800000000	                          call 0x40016bd	       952	buffer.c	FUNCTION_14	WHILE_1	CALL_3
0x167d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       941	buffer.c	FUNCTION_14	WHILE_1
0x1681	    0x488b80280100	           mov rax, qword [rax + 0x128] 	       941	buffer.c	FUNCTION_14	WHILE_1
0x1688	          0x4885c0	                           test rax, rax	       941	buffer.c	FUNCTION_14	WHILE_1
0x168b	            0x7596	                           jne 0x4001663	       941	buffer.c	FUNCTION_14	WHILE_1
0x168d	              0x90	                                     nop	       954	buffer.c	FUNCTION_14
0x168e	              0xc9	                                   leave	       954	buffer.c	FUNCTION_14
0x168f	              0xc3	                                     ret	       954	buffer.c	FUNCTION_14
buf_contents_changed	FOR,1:WHILE,0:ELSE,0:functions,0:IF,6:CALL,12:SWITCH,0:DO,0	110
0xc412	              0x55	                                push rbp	      6169	buffer.c	FUNCTION_102
0xc413	          0x4889e5	                            mov rbp, rsp	      6169	buffer.c	FUNCTION_102
0xc416	              0x53	                                push rbx	      6169	buffer.c	FUNCTION_102
0xc417	    0x4881ec380100	                          sub rsp, 0x138	      6169	buffer.c	FUNCTION_102
0xc41e	    0x4889bdc8feff	            mov qword [rbp - 0x138], rdi	      6169	buffer.c	FUNCTION_102
0xc425	    0x64488b042528	                mov rax, qword fs:[0x28]	      6169	buffer.c	FUNCTION_102
0xc42e	        0x488945e8	             mov qword [rbp - 0x18], rax	      6169	buffer.c	FUNCTION_102
0xc432	            0x31c0	                            xor eax, eax	      6169	buffer.c	FUNCTION_102
0xc434	    0xc785dcfeffff	              mov dword [rbp - 0x124], 1	      6171	buffer.c	FUNCTION_102
0xc43e	      0xb904000000	                              mov ecx, 4	      6177	buffer.c	FUNCTION_102	CALL_1
0xc443	      0xba01000000	                              mov edx, 1	      6177	buffer.c	FUNCTION_102	CALL_1
0xc448	      0xbe00000000	                              mov esi, 0	      6177	buffer.c	FUNCTION_102	CALL_1
0xc44d	      0xbf00000000	                              mov edi, 0	      6177	buffer.c	FUNCTION_102	CALL_1
0xc452	      0xe800000000	                          call 0x400c497	      6177	buffer.c	FUNCTION_102	CALL_1
0xc457	    0x488985e8feff	            mov qword [rbp - 0x118], rax	      6177	buffer.c	FUNCTION_102	CALL_1
0xc45e	    0x4883bde8feff	              cmp qword [rbp - 0x118], 0	      6178	buffer.c	FUNCTION_102	IF_1
0xc466	            0x750a	                           jne 0x400c4b2	      6178	buffer.c	FUNCTION_102	IF_1
0xc468	      0xb801000000	                              mov eax, 1	      6179	buffer.c	FUNCTION_102	IF_1
0xc46d	      0xe99b010000	                           jmp 0x400c64d	      6179	buffer.c	FUNCTION_102	IF_1
0xc472	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0xc479	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0xc480	          0x4889d6	                            mov rsi, rdx	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0xc483	          0x4889c7	                            mov rdi, rax	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0xc486	      0xe800000000	                          call 0x400c4cb	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0xc48b	            0x85c0	                           test eax, eax	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0xc48d	            0x751e	                           jne 0x400c4ed	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0xc48f	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      6184	buffer.c	FUNCTION_102	IF_2	CALL_3
0xc496	      0xbe00000000	                              mov esi, 0	      6184	buffer.c	FUNCTION_102	IF_2	CALL_3
0xc49b	          0x4889c7	                            mov rdi, rax	      6184	buffer.c	FUNCTION_102	IF_2	CALL_3
0xc49e	      0xe800000000	                          call 0x400c4e3	      6184	buffer.c	FUNCTION_102	IF_2	CALL_3
0xc4a3	      0xb801000000	                              mov eax, 1	      6185	buffer.c	FUNCTION_102	IF_2
0xc4a8	      0xe960010000	                           jmp 0x400c64d	      6185	buffer.c	FUNCTION_102	IF_2
0xc4ad	    0x488b95e8feff	            mov rdx, qword [rbp - 0x118]	      6189	buffer.c	FUNCTION_102	CALL_4
0xc4b4	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	      6189	buffer.c	FUNCTION_102	CALL_4
0xc4bb	          0x4889d6	                            mov rsi, rdx	      6189	buffer.c	FUNCTION_102	CALL_4
0xc4be	          0x4889c7	                            mov rdi, rax	      6189	buffer.c	FUNCTION_102	CALL_4
0xc4c1	      0xe800000000	                          call 0x400c506	      6189	buffer.c	FUNCTION_102	CALL_4
0xc4c6	    0x488b05000000	            mov rax, qword [0x0400c50d] 	      6191	buffer.c	FUNCTION_102	IF_3	CALL_5
0xc4cd	          0x4889c7	                            mov rdi, rax	      6191	buffer.c	FUNCTION_102	IF_3	CALL_5
0xc4d0	      0xe800000000	                          call 0x400c515	      6191	buffer.c	FUNCTION_102	IF_3	CALL_5
0xc4d5	          0x83f801	                              cmp eax, 1	      6191	buffer.c	FUNCTION_102	IF_3	CALL_5
0xc4d8	     0xf85e7000000	                           jne 0x400c605	      6191	buffer.c	FUNCTION_102	IF_3	CALL_5
0xc4de	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0xc4e5	    0x488bb0980000	            mov rsi, qword [rax + 0x98] 	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0xc4ec	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0xc4f3	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0xc4fa	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0xc501	        0x4883ec08	                              sub rsp, 8	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0xc505	            0x6a11	                               push 0x11	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0xc507	          0x4989d1	                             mov r9, rdx	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0xc50a	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0xc510	      0xb900000000	                              mov ecx, 0	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0xc515	      0xba00000000	                              mov edx, 0	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0xc51a	          0x4889c7	                            mov rdi, rax	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0xc51d	      0xe800000000	                          call 0x400c562	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0xc522	        0x4883c410	                           add rsp, 0x10	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0xc526	          0x83f801	                              cmp eax, 1	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0xc529	     0xf8596000000	                           jne 0x400c605	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0xc52f	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0xc536	          0x488b10	                    mov rdx, qword [rax]	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0xc539	    0x488b05000000	            mov rax, qword [0x0400c580] 	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0xc540	          0x488b00	                    mov rax, qword [rax]	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0xc543	          0x4839c2	                            cmp rdx, rax	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0xc546	            0x757d	                           jne 0x400c605	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0xc548	    0xc785dcfeffff	              mov dword [rbp - 0x124], 0	      6199	buffer.c	FUNCTION_102	IF_3	IF_4
0xc552	    0x48c785e0feff	              mov qword [rbp - 0x120], 1	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0xc55d	            0xeb53	                           jmp 0x400c5f2	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0xc55f	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0xc566	          0x4889c7	                            mov rdi, rax	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0xc569	      0xe800000000	                          call 0x400c5ae	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0xc56e	          0x4889c3	                            mov rbx, rax	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0xc571	    0x488b8de0feff	            mov rcx, qword [rbp - 0x120]	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0xc578	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0xc57f	      0xba00000000	                              mov edx, 0	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0xc584	          0x4889ce	                            mov rsi, rcx	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0xc587	          0x4889c7	                            mov rdi, rax	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0xc58a	      0xe800000000	                          call 0x400c5cf	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0xc58f	          0x4889de	                            mov rsi, rbx	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0xc592	          0x4889c7	                            mov rdi, rax	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0xc595	      0xe800000000	                          call 0x400c5da	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0xc59a	            0x85c0	                           test eax, eax	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0xc59c	            0x740c	                            je 0x400c5ea	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0xc59e	    0xc785dcfeffff	              mov dword [rbp - 0x124], 1	      6203	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5
0xc5a8	            0xeb1b	                           jmp 0x400c605	      6204	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5
0xc5aa	    0x488385e0feff	              add qword [rbp - 0x120], 1	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0xc5b2	    0x488b05000000	            mov rax, qword [0x0400c5f9] 	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0xc5b9	          0x488b00	                    mov rax, qword [rax]	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0xc5bc	    0x483b85e0feff	            cmp rax, qword [rbp - 0x120]	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0xc5c3	            0x7d9a	                           jge 0x400c59f	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0xc5c5	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      6208	buffer.c	FUNCTION_102	CALL_10
0xc5cc	          0x4889c7	                            mov rdi, rax	      6208	buffer.c	FUNCTION_102	CALL_10
0xc5cf	      0xe800000000	                          call 0x400c614	      6208	buffer.c	FUNCTION_102	CALL_10
0xc5d4	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	      6211	buffer.c	FUNCTION_102	CALL_11
0xc5db	          0x4889c7	                            mov rdi, rax	      6211	buffer.c	FUNCTION_102	CALL_11
0xc5de	      0xe800000000	                          call 0x400c623	      6211	buffer.c	FUNCTION_102	CALL_11
0xc5e3	    0x488b05000000	            mov rax, qword [0x0400c62a] 	      6213	buffer.c	FUNCTION_102	IF_6
0xc5ea	    0x483b85e8feff	            cmp rax, qword [rbp - 0x118]	      6213	buffer.c	FUNCTION_102	IF_6
0xc5f1	            0x7414	                            je 0x400c647	      6213	buffer.c	FUNCTION_102	IF_6
0xc5f3	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      6214	buffer.c	FUNCTION_102	CALL_12
0xc5fa	      0xbe00000000	                              mov esi, 0	      6214	buffer.c	FUNCTION_102	CALL_12
0xc5ff	          0x4889c7	                            mov rdi, rax	      6214	buffer.c	FUNCTION_102	CALL_12
0xc602	      0xe800000000	                          call 0x400c647	      6214	buffer.c	FUNCTION_102	CALL_12
0xc607	    0x8b85dcfeffff	            mov eax, dword [rbp - 0x124]	      6216	buffer.c	FUNCTION_102
0xc60d	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      6217	buffer.c	FUNCTION_102
0xc611	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      6217	buffer.c	FUNCTION_102
0xc61a	            0x7405	                            je 0x400c661	      6217	buffer.c	FUNCTION_102
0xc61c	      0xe800000000	                          call 0x400c661	      6217	buffer.c	FUNCTION_102
0xc621	        0x488b5df8	                mov rbx, qword [rbp - 8]	      6217	buffer.c	FUNCTION_102
0xc625	              0xc9	                                   leave	      6217	buffer.c	FUNCTION_102
0xc626	              0xc3	                                     ret	      6217	buffer.c	FUNCTION_102
no_write_message	FOR,0:WHILE,0:ELSE,1:functions,0:IF,1:CALL,5:SWITCH,0:DO,0	20
0x2cb0	              0x55	                                push rbp	      1818	buffer.c	FUNCTION_23
0x2cb1	          0x4889e5	                            mov rbp, rsp	      1818	buffer.c	FUNCTION_23
0x2cb4	    0x488b05000000	            mov rax, qword [0x04002cfb] 	      1820	buffer.c	FUNCTION_23	IF_1	CALL_1
0x2cbb	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      1820	buffer.c	FUNCTION_23	IF_1	CALL_1
0x2cc2	          0x4889c7	                            mov rdi, rax	      1820	buffer.c	FUNCTION_23	IF_1	CALL_1
0x2cc5	      0xe800000000	                          call 0x4002d0a	      1820	buffer.c	FUNCTION_23	IF_1	CALL_1
0x2cca	            0x85c0	                           test eax, eax	      1820	buffer.c	FUNCTION_23	IF_1	CALL_1
0x2ccc	            0x7414	                            je 0x4002d22	      1820	buffer.c	FUNCTION_23	IF_1	CALL_1
0x2cce	      0xbf00000000	                              mov edi, 0	      1821	buffer.c	FUNCTION_23	CALL_3
0x2cd3	      0xe800000000	                          call 0x4002d18	      1821	buffer.c	FUNCTION_23	CALL_3
0x2cd8	          0x4889c7	                            mov rdi, rax	      1821	buffer.c	FUNCTION_23	CALL_3
0x2cdb	      0xe800000000	                          call 0x4002d20	      1821	buffer.c	FUNCTION_23	CALL_3
0x2ce0	            0xeb12	                           jmp 0x4002d34	      1825	buffer.c	FUNCTION_23
0x2ce2	      0xbf00000000	                              mov edi, 0	      1824	buffer.c	FUNCTION_23	CALL_5
0x2ce7	      0xe800000000	                          call 0x4002d2c	      1824	buffer.c	FUNCTION_23	CALL_5
0x2cec	          0x4889c7	                            mov rdi, rax	      1824	buffer.c	FUNCTION_23	CALL_5
0x2cef	      0xe800000000	                          call 0x4002d34	      1824	buffer.c	FUNCTION_23	CALL_5
0x2cf4	              0x90	                                     nop	      1825	buffer.c	FUNCTION_23
0x2cf5	              0x5d	                                 pop rbp	      1825	buffer.c	FUNCTION_23
0x2cf6	              0xc3	                                     ret	      1825	buffer.c	FUNCTION_23
fileinfo	FOR,0:WHILE,0:ELSE,8:functions,0:IF,10:CALL,38:SWITCH,0:DO,0	371
0x5c27	              0x55	                                push rbp	      3401	buffer.c	FUNCTION_59
0x5c28	          0x4889e5	                            mov rbp, rsp	      3401	buffer.c	FUNCTION_59
0x5c2b	            0x4157	                                push r15	      3401	buffer.c	FUNCTION_59
0x5c2d	            0x4156	                                push r14	      3401	buffer.c	FUNCTION_59
0x5c2f	            0x4155	                                push r13	      3401	buffer.c	FUNCTION_59
0x5c31	            0x4154	                                push r12	      3401	buffer.c	FUNCTION_59
0x5c33	              0x53	                                push rbx	      3401	buffer.c	FUNCTION_59
0x5c34	        0x4883ec48	                           sub rsp, 0x48	      3401	buffer.c	FUNCTION_59
0x5c38	          0x897d9c	             mov dword [rbp - 0x64], edi	      3401	buffer.c	FUNCTION_59
0x5c3b	          0x897598	             mov dword [rbp - 0x68], esi	      3401	buffer.c	FUNCTION_59
0x5c3e	          0x895594	             mov dword [rbp - 0x6c], edx	      3401	buffer.c	FUNCTION_59
0x5c41	      0xbf01040000	                          mov edi, 0x401	      3408	buffer.c	FUNCTION_59	CALL_1
0x5c46	      0xe800000000	                          call 0x4005c8b	      3408	buffer.c	FUNCTION_59	CALL_1
0x5c4b	        0x488945c0	             mov qword [rbp - 0x40], rax	      3408	buffer.c	FUNCTION_59	CALL_1
0x5c4f	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      3409	buffer.c	FUNCTION_59	IF_1
0x5c54	     0xf845d050000	                            je 0x40061f7	      3409	buffer.c	FUNCTION_59	IF_1
0x5c5a	        0x837d9c01	               cmp dword [rbp - 0x64], 1	      3412	buffer.c	FUNCTION_59	IF_2
0x5c5e	            0x7e46	                           jle 0x4005ce6	      3412	buffer.c	FUNCTION_59	IF_2
0x5c60	    0x488b05000000	            mov rax, qword [0x04005ca7] 	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x5c67	    0x8b90b8000000	            mov edx, dword [rax + 0xb8] 	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x5c6d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x5c71	            0x89d1	                            mov ecx, edx	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x5c73	      0xba00000000	                              mov edx, 0	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x5c78	      0xbe01040000	                          mov esi, 0x401	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x5c7d	          0x4889c7	                            mov rdi, rax	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x5c80	      0xb800000000	                              mov eax, 0	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x5c85	      0xe800000000	                          call 0x4005cca	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x5c8a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x5c8e	          0x4889c7	                            mov rdi, rax	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x5c91	      0xe800000000	                          call 0x4005cd6	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x5c96	          0x4889c2	                            mov rdx, rax	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x5c99	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x5c9d	          0x4801d0	                            add rax, rdx	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x5ca0	        0x488945b8	             mov qword [rbp - 0x48], rax	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x5ca4	            0xeb08	                           jmp 0x4005cee	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x5ca6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3418	buffer.c	FUNCTION_59	ELSE_1
0x5caa	        0x488945b8	             mov qword [rbp - 0x48], rax	      3418	buffer.c	FUNCTION_59	ELSE_1
0x5cae	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3420	buffer.c	FUNCTION_59
0x5cb2	        0x488d5001	                      lea rdx, [rax + 1]	      3420	buffer.c	FUNCTION_59
0x5cb6	        0x488955b8	             mov qword [rbp - 0x48], rdx	      3420	buffer.c	FUNCTION_59
0x5cba	          0xc60022	                    mov byte [rax], 0x22	      3420	buffer.c	FUNCTION_59
0x5cbd	    0x488b05000000	            mov rax, qword [0x04005d04] 	      3421	buffer.c	FUNCTION_59	IF_3	CALL_4
0x5cc4	          0x4889c7	                            mov rdi, rax	      3421	buffer.c	FUNCTION_59	IF_3	CALL_4
0x5cc7	      0xe800000000	                          call 0x4005d0c	      3421	buffer.c	FUNCTION_59	IF_3	CALL_4
0x5ccc	          0x4885c0	                           test rax, rax	      3421	buffer.c	FUNCTION_59	IF_3	CALL_4
0x5ccf	            0x7445	                            je 0x4005d56	      3421	buffer.c	FUNCTION_59	IF_3	CALL_4
0x5cd1	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3422	buffer.c	FUNCTION_59	CALL_6
0x5cd5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3422	buffer.c	FUNCTION_59	CALL_6
0x5cd9	          0x4829c2	                            sub rdx, rax	      3422	buffer.c	FUNCTION_59	CALL_6
0x5cdc	          0x4889d0	                            mov rax, rdx	      3422	buffer.c	FUNCTION_59	CALL_6
0x5cdf	      0xba00040000	                          mov edx, 0x400	      3422	buffer.c	FUNCTION_59	CALL_6
0x5ce4	          0x4829c2	                            sub rdx, rax	      3422	buffer.c	FUNCTION_59	CALL_6
0x5ce7	          0x4889d0	                            mov rax, rdx	      3422	buffer.c	FUNCTION_59	CALL_6
0x5cea	          0x4889c3	                            mov rbx, rax	      3422	buffer.c	FUNCTION_59	CALL_6
0x5ced	    0x488b05000000	            mov rax, qword [0x04005d34] 	      3422	buffer.c	FUNCTION_59	CALL_6
0x5cf4	          0x4889c7	                            mov rdi, rax	      3422	buffer.c	FUNCTION_59	CALL_6
0x5cf7	      0xe800000000	                          call 0x4005d3c	      3422	buffer.c	FUNCTION_59	CALL_6
0x5cfc	          0x4889c1	                            mov rcx, rax	      3422	buffer.c	FUNCTION_59	CALL_6
0x5cff	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3422	buffer.c	FUNCTION_59	CALL_6
0x5d03	          0x4889da	                            mov rdx, rbx	      3422	buffer.c	FUNCTION_59	CALL_6
0x5d06	          0x4889ce	                            mov rsi, rcx	      3422	buffer.c	FUNCTION_59	CALL_6
0x5d09	          0x4889c7	                            mov rdi, rax	      3422	buffer.c	FUNCTION_59	CALL_6
0x5d0c	      0xe800000000	                          call 0x4005d51	      3422	buffer.c	FUNCTION_59	CALL_6
0x5d11	      0xe982000000	                           jmp 0x4005dd8	      3422	buffer.c	FUNCTION_59	CALL_6
0x5d16	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x5d1a	            0x7527	                           jne 0x4005d83	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x5d1c	    0x488b05000000	            mov rax, qword [0x04005d63] 	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x5d23	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x5d2a	          0x4885c0	                           test rax, rax	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x5d2d	            0x7414	                            je 0x4005d83	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x5d2f	    0x488b05000000	            mov rax, qword [0x04005d76] 	      3426	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x5d36	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3426	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x5d3d	        0x488945b0	             mov qword [rbp - 0x50], rax	      3426	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x5d41	            0xeb12	                           jmp 0x4005d95	      3426	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x5d43	    0x488b05000000	            mov rax, qword [0x04005d8a] 	      3428	buffer.c	FUNCTION_59	ELSE_2	ELSE_3
0x5d4a	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      3428	buffer.c	FUNCTION_59	ELSE_2	ELSE_3
0x5d51	        0x488945b0	             mov qword [rbp - 0x50], rax	      3428	buffer.c	FUNCTION_59	ELSE_2	ELSE_3
0x5d55	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3430	buffer.c	FUNCTION_59	ELSE_2
0x5d59	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3430	buffer.c	FUNCTION_59	ELSE_2
0x5d5d	          0x4829c2	                            sub rdx, rax	      3430	buffer.c	FUNCTION_59	ELSE_2
0x5d60	          0x4889d0	                            mov rax, rdx	      3430	buffer.c	FUNCTION_59	ELSE_2
0x5d63	      0xba01040000	                          mov edx, 0x401	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x5d68	            0x29c2	                            sub edx, eax	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x5d6a	            0x89d0	                            mov eax, edx	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x5d6c	            0x89c1	                            mov ecx, eax	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x5d6e	        0x837d9800	               cmp dword [rbp - 0x68], 0	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x5d72	            0x7409	                            je 0x4005dbd	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x5d74	    0x488b05000000	            mov rax, qword [0x04005dbb] 	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x5d7b	            0xeb05	                           jmp 0x4005dc2	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x5d7d	      0xb800000000	                              mov eax, 0	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x5d82	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x5d86	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x5d8a	    0x41b801000000	                              mov r8d, 1	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x5d90	          0x4889c7	                            mov rdi, rax	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x5d93	      0xe800000000	                          call 0x4005dd8	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x5d98	      0xe800000000	                          call 0x4005ddd	      3449	buffer.c	FUNCTION_59	CALL_20
0x5d9d	            0x85c0	                           test eax, eax	      3433	buffer.c	FUNCTION_59	CALL_8
0x5d9f	            0x7522	                           jne 0x4005e03	      3433	buffer.c	FUNCTION_59	CALL_8
0x5da1	    0x488b05000000	            mov rax, qword [0x04005de8] 	      3449	buffer.c	FUNCTION_59	CALL_20
0x5da8	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      3449	buffer.c	FUNCTION_59	CALL_20
0x5dab	          0x83e058	                           and eax, 0x58	      3449	buffer.c	FUNCTION_59	CALL_20
0x5dae	            0x85c0	                           test eax, eax	      3449	buffer.c	FUNCTION_59	CALL_20
0x5db0	            0x7511	                           jne 0x4005e03	      3449	buffer.c	FUNCTION_59	CALL_20
0x5db2	    0x488b05000000	            mov rax, qword [0x04005df9] 	      3450	buffer.c	FUNCTION_59
0x5db9	    0x8b8060150000	          mov eax, dword [rax + 0x1560] 	      3450	buffer.c	FUNCTION_59
0x5dbf	            0x85c0	                           test eax, eax	      3450	buffer.c	FUNCTION_59
0x5dc1	            0x7408	                            je 0x4005e0b	      3450	buffer.c	FUNCTION_59
0x5dc3	    0x41bf00000000	                             mov r15d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x5dc9	            0xeb06	                           jmp 0x4005e11	      3433	buffer.c	FUNCTION_59	CALL_8
0x5dcb	    0x41bf00000000	                             mov r15d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x5dd1	    0x488b05000000	            mov rax, qword [0x04005e18] 	      3447	buffer.c	FUNCTION_59	CALL_18
0x5dd8	    0x8b8060150000	          mov eax, dword [rax + 0x1560] 	      3447	buffer.c	FUNCTION_59	CALL_18
0x5dde	            0x85c0	                           test eax, eax	      3433	buffer.c	FUNCTION_59	CALL_8
0x5de0	            0x742c	                            je 0x4005e4e	      3433	buffer.c	FUNCTION_59	CALL_8
0x5de2	      0xbf72000000	                           mov edi, 0x72	      3447	buffer.c	FUNCTION_59	CALL_18
0x5de7	      0xe800000000	                          call 0x4005e2c	      3447	buffer.c	FUNCTION_59	CALL_18
0x5dec	            0x85c0	                           test eax, eax	      3448	buffer.c	FUNCTION_59	CALL_19
0x5dee	            0x740f	                            je 0x4005e3f	      3448	buffer.c	FUNCTION_59	CALL_19
0x5df0	      0xbf00000000	                              mov edi, 0	      3448	buffer.c	FUNCTION_59	CALL_19
0x5df5	      0xe800000000	                          call 0x4005e3a	      3448	buffer.c	FUNCTION_59	CALL_19
0x5dfa	          0x4889c3	                            mov rbx, rax	      3448	buffer.c	FUNCTION_59	CALL_19
0x5dfd	            0xeb14	                           jmp 0x4005e53	      3448	buffer.c	FUNCTION_59	CALL_19
0x5dff	      0xbf00000000	                              mov edi, 0	      3448	buffer.c	FUNCTION_59	CALL_19
0x5e04	      0xe800000000	                          call 0x4005e49	      3448	buffer.c	FUNCTION_59	CALL_19
0x5e09	          0x4889c3	                            mov rbx, rax	      3448	buffer.c	FUNCTION_59	CALL_19
0x5e0c	            0xeb05	                           jmp 0x4005e53	      3448	buffer.c	FUNCTION_59	CALL_19
0x5e0e	      0xbb00000000	                              mov ebx, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x5e13	    0x488b05000000	            mov rax, qword [0x04005e5a] 	      3446	buffer.c	FUNCTION_59	CALL_16
0x5e1a	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      3446	buffer.c	FUNCTION_59	CALL_16
0x5e1d	          0x83e040	                           and eax, 0x40	      3446	buffer.c	FUNCTION_59	CALL_16
0x5e20	            0x85c0	                           test eax, eax	      3433	buffer.c	FUNCTION_59	CALL_8
0x5e22	            0x740f	                            je 0x4005e73	      3433	buffer.c	FUNCTION_59	CALL_8
0x5e24	      0xbf00000000	                              mov edi, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x5e29	      0xe800000000	                          call 0x4005e6e	      3433	buffer.c	FUNCTION_59	CALL_8
0x5e2e	          0x4989c4	                            mov r12, rax	      3433	buffer.c	FUNCTION_59	CALL_8
0x5e31	            0xeb06	                           jmp 0x4005e79	      3433	buffer.c	FUNCTION_59	CALL_8
0x5e33	    0x41bc00000000	                             mov r12d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x5e39	    0x488b05000000	            mov rax, qword [0x04005e80] 	      3441	buffer.c	FUNCTION_59
0x5e40	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      3441	buffer.c	FUNCTION_59
0x5e43	          0x83e010	                           and eax, 0x10	      3441	buffer.c	FUNCTION_59
0x5e46	            0x85c0	                           test eax, eax	      3433	buffer.c	FUNCTION_59	CALL_8
0x5e48	            0x7422	                            je 0x4005eac	      3433	buffer.c	FUNCTION_59	CALL_8
0x5e4a	    0x488b05000000	            mov rax, qword [0x04005e91] 	      3443	buffer.c	FUNCTION_59	CALL_14
0x5e51	          0x4889c7	                            mov rdi, rax	      3443	buffer.c	FUNCTION_59	CALL_14
0x5e54	      0xe800000000	                          call 0x4005e99	      3443	buffer.c	FUNCTION_59	CALL_14
0x5e59	            0x85c0	                           test eax, eax	      3443	buffer.c	FUNCTION_59	CALL_14
0x5e5b	            0x750f	                           jne 0x4005eac	      3443	buffer.c	FUNCTION_59	CALL_14
0x5e5d	      0xbf00000000	                              mov edi, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x5e62	      0xe800000000	                          call 0x4005ea7	      3433	buffer.c	FUNCTION_59	CALL_8
0x5e67	          0x4989c6	                            mov r14, rax	      3433	buffer.c	FUNCTION_59	CALL_8
0x5e6a	            0xeb06	                           jmp 0x4005eb2	      3433	buffer.c	FUNCTION_59	CALL_8
0x5e6c	    0x41be00000000	                             mov r14d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x5e72	    0x488b05000000	            mov rax, qword [0x04005eb9] 	      3436	buffer.c	FUNCTION_59
0x5e79	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      3436	buffer.c	FUNCTION_59
0x5e7c	          0x83e008	                              and eax, 8	      3436	buffer.c	FUNCTION_59
0x5e7f	            0x85c0	                           test eax, eax	      3433	buffer.c	FUNCTION_59	CALL_8
0x5e81	            0x7422	                            je 0x4005ee5	      3433	buffer.c	FUNCTION_59	CALL_8
0x5e83	    0x488b05000000	            mov rax, qword [0x04005eca] 	      3438	buffer.c	FUNCTION_59	CALL_12
0x5e8a	          0x4889c7	                            mov rdi, rax	      3438	buffer.c	FUNCTION_59	CALL_12
0x5e8d	      0xe800000000	                          call 0x4005ed2	      3438	buffer.c	FUNCTION_59	CALL_12
0x5e92	            0x85c0	                           test eax, eax	      3438	buffer.c	FUNCTION_59	CALL_12
0x5e94	            0x750f	                           jne 0x4005ee5	      3438	buffer.c	FUNCTION_59	CALL_12
0x5e96	      0xbf00000000	                              mov edi, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x5e9b	      0xe800000000	                          call 0x4005ee0	      3433	buffer.c	FUNCTION_59	CALL_8
0x5ea0	          0x4989c5	                            mov r13, rax	      3433	buffer.c	FUNCTION_59	CALL_8
0x5ea3	            0xeb06	                           jmp 0x4005eeb	      3433	buffer.c	FUNCTION_59	CALL_8
0x5ea5	    0x41bd00000000	                             mov r13d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x5eab	      0xe800000000	                          call 0x4005ef0	      3434	buffer.c	FUNCTION_59	CALL_10
0x5eb0	            0x85c0	                           test eax, eax	      3433	buffer.c	FUNCTION_59	CALL_8
0x5eb2	            0x7421	                            je 0x4005f15	      3433	buffer.c	FUNCTION_59	CALL_8
0x5eb4	      0xbf6d000000	                           mov edi, 0x6d	      3434	buffer.c	FUNCTION_59	CALL_10
0x5eb9	      0xe800000000	                          call 0x4005efe	      3434	buffer.c	FUNCTION_59	CALL_10
0x5ebe	            0x85c0	                           test eax, eax	      3435	buffer.c	FUNCTION_59	CALL_11
0x5ec0	            0x750c	                           jne 0x4005f0e	      3435	buffer.c	FUNCTION_59	CALL_11
0x5ec2	      0xbf00000000	                              mov edi, 0	      3435	buffer.c	FUNCTION_59	CALL_11
0x5ec7	      0xe800000000	                          call 0x4005f0c	      3435	buffer.c	FUNCTION_59	CALL_11
0x5ecc	            0xeb0c	                           jmp 0x4005f1a	      3435	buffer.c	FUNCTION_59	CALL_11
0x5ece	      0xb800000000	                              mov eax, 0	      3435	buffer.c	FUNCTION_59	CALL_11
0x5ed3	            0xeb05	                           jmp 0x4005f1a	      3435	buffer.c	FUNCTION_59	CALL_11
0x5ed5	      0xb800000000	                              mov eax, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x5eda	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	      3433	buffer.c	FUNCTION_59	CALL_8
0x5ede	        0x4883ec08	                              sub rsp, 8	      3433	buffer.c	FUNCTION_59	CALL_8
0x5ee2	            0x4157	                                push r15	      3433	buffer.c	FUNCTION_59	CALL_8
0x5ee4	              0x53	                                push rbx	      3433	buffer.c	FUNCTION_59	CALL_8
0x5ee5	            0x4154	                                push r12	      3433	buffer.c	FUNCTION_59	CALL_8
0x5ee7	          0x4d89f1	                             mov r9, r14	      3433	buffer.c	FUNCTION_59	CALL_8
0x5eea	          0x4d89e8	                             mov r8, r13	      3433	buffer.c	FUNCTION_59	CALL_8
0x5eed	          0x4889c1	                            mov rcx, rax	      3433	buffer.c	FUNCTION_59	CALL_8
0x5ef0	      0xba00000000	                              mov edx, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x5ef5	      0xbe01040000	                          mov esi, 0x401	      3433	buffer.c	FUNCTION_59	CALL_8
0x5efa	      0xb800000000	                              mov eax, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x5eff	      0xe800000000	                          call 0x4005f44	      3433	buffer.c	FUNCTION_59	CALL_8
0x5f04	        0x4883c420	                           add rsp, 0x20	      3433	buffer.c	FUNCTION_59	CALL_8
0x5f08	    0x488b05000000	            mov rax, qword [0x04005f4f] 	      3454	buffer.c	FUNCTION_59	IF_5
0x5f0f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3454	buffer.c	FUNCTION_59	IF_5
0x5f13	    0x483d40420f00	                        cmp rax, 0xf4240	      3454	buffer.c	FUNCTION_59	IF_5
0x5f19	            0x7e4a	                           jle 0x4005fa5	      3454	buffer.c	FUNCTION_59	IF_5
0x5f1b	    0x488b05000000	            mov rax, qword [0x04005f62] 	      3455	buffer.c	FUNCTION_59	IF_5
0x5f22	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      3455	buffer.c	FUNCTION_59	IF_5
0x5f26	    0x488b05000000	            mov rax, qword [0x04005f6d] 	      3456	buffer.c	FUNCTION_59	IF_5
0x5f2d	          0x488b08	                    mov rcx, qword [rax]	      3456	buffer.c	FUNCTION_59	IF_5
0x5f30	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	      3456	buffer.c	FUNCTION_59	IF_5
0x5f3a	          0x4889c8	                            mov rax, rcx	      3456	buffer.c	FUNCTION_59	IF_5
0x5f3d	          0x48f7ea	                                imul rdx	      3456	buffer.c	FUNCTION_59	IF_5
0x5f40	        0x488d040a	                    lea rax, [rdx + rcx]	      3456	buffer.c	FUNCTION_59	IF_5
0x5f44	        0x48c1f806	                              sar rax, 6	      3456	buffer.c	FUNCTION_59	IF_5
0x5f48	          0x4889c2	                            mov rdx, rax	      3456	buffer.c	FUNCTION_59	IF_5
0x5f4b	          0x4889c8	                            mov rax, rcx	      3456	buffer.c	FUNCTION_59	IF_5
0x5f4e	        0x48c1f83f	                           sar rax, 0x3f	      3456	buffer.c	FUNCTION_59	IF_5
0x5f52	          0x4889d3	                            mov rbx, rdx	      3456	buffer.c	FUNCTION_59	IF_5
0x5f55	          0x4829c3	                            sub rbx, rax	      3456	buffer.c	FUNCTION_59	IF_5
0x5f58	          0x4889f0	                            mov rax, rsi	      3455	buffer.c	FUNCTION_59	IF_5
0x5f5b	            0x4899	                                     cqo	      3455	buffer.c	FUNCTION_59	IF_5
0x5f5d	          0x48f7fb	                                idiv rbx	      3455	buffer.c	FUNCTION_59	IF_5
0x5f60	          0x8945ac	             mov dword [rbp - 0x54], eax	      3455	buffer.c	FUNCTION_59	IF_5
0x5f63	            0xeb3c	                           jmp 0x4005fe1	      3455	buffer.c	FUNCTION_59	IF_5
0x5f65	    0x488b05000000	            mov rax, qword [0x04005fac] 	      3458	buffer.c	FUNCTION_59	ELSE_4
0x5f6c	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3458	buffer.c	FUNCTION_59	ELSE_4
0x5f70	          0x4889d0	                            mov rax, rdx	      3458	buffer.c	FUNCTION_59	ELSE_4
0x5f73	        0x48c1e002	                              shl rax, 2	      3458	buffer.c	FUNCTION_59	ELSE_4
0x5f77	          0x4801d0	                            add rax, rdx	      3458	buffer.c	FUNCTION_59	ELSE_4
0x5f7a	    0x488d14850000	                        lea rdx, [rax*4]	      3458	buffer.c	FUNCTION_59	ELSE_4
0x5f82	          0x4801d0	                            add rax, rdx	      3458	buffer.c	FUNCTION_59	ELSE_4
0x5f85	        0x48c1e002	                              shl rax, 2	      3458	buffer.c	FUNCTION_59	ELSE_4
0x5f89	          0x4889c1	                            mov rcx, rax	      3458	buffer.c	FUNCTION_59	ELSE_4
0x5f8c	    0x488b05000000	            mov rax, qword [0x04005fd3] 	      3459	buffer.c	FUNCTION_59	ELSE_4
0x5f93	          0x488b18	                    mov rbx, qword [rax]	      3459	buffer.c	FUNCTION_59	ELSE_4
0x5f96	          0x4889c8	                            mov rax, rcx	      3458	buffer.c	FUNCTION_59	ELSE_4
0x5f99	            0x4899	                                     cqo	      3458	buffer.c	FUNCTION_59	ELSE_4
0x5f9b	          0x48f7fb	                                idiv rbx	      3458	buffer.c	FUNCTION_59	ELSE_4
0x5f9e	          0x8945ac	             mov dword [rbp - 0x54], eax	      3458	buffer.c	FUNCTION_59	ELSE_4
0x5fa1	    0x488b05000000	            mov rax, qword [0x04005fe8] 	      3460	buffer.c	FUNCTION_59	IF_6
0x5fa8	          0x8b4010	            mov eax, dword [rax + 0x10] 	      3460	buffer.c	FUNCTION_59	IF_6
0x5fab	          0x83e001	                              and eax, 1	      3460	buffer.c	FUNCTION_59	IF_6
0x5fae	            0x85c0	                           test eax, eax	      3460	buffer.c	FUNCTION_59	IF_6
0x5fb0	            0x7430	                            je 0x4006022	      3460	buffer.c	FUNCTION_59	IF_6
0x5fb2	      0xbf00000000	                              mov edi, 0	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x5fb7	      0xe800000000	                          call 0x4005ffc	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x5fbc	          0x4889c2	                            mov rdx, rax	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x5fbf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x5fc3	          0x4889d1	                            mov rcx, rdx	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x5fc6	      0xba00000000	                              mov edx, 0	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x5fcb	      0xbe01040000	                          mov esi, 0x401	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x5fd0	          0x4889c7	                            mov rdi, rax	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x5fd3	      0xb800000000	                              mov eax, 0	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x5fd8	      0xe800000000	                          call 0x400601d	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x5fdd	      0xe91d010000	                           jmp 0x400613f	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x5fe2	    0x8b0500000000	            mov eax, dword [0x04006028] 	      3465	buffer.c	FUNCTION_59	ELSE_5	IF_7
0x5fe8	            0x85c0	                           test eax, eax	      3465	buffer.c	FUNCTION_59	ELSE_5	IF_7
0x5fea	            0x747e	                            je 0x40060aa	      3465	buffer.c	FUNCTION_59	ELSE_5	IF_7
0x5fec	    0x488b05000000	            mov rax, qword [0x04006033] 	      3468	buffer.c	FUNCTION_59	ELSE_5	IF_7	IF_8
0x5ff3	          0x488b00	                    mov rax, qword [rax]	      3468	buffer.c	FUNCTION_59	ELSE_5	IF_7	IF_8
0x5ff6	        0x4883f801	                              cmp rax, 1	      3468	buffer.c	FUNCTION_59	ELSE_5	IF_7	IF_8
0x5ffa	            0x7530	                           jne 0x400606c	      3468	buffer.c	FUNCTION_59	ELSE_5	IF_7	IF_8
0x5ffc	      0xbf00000000	                              mov edi, 0	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x6001	      0xe800000000	                          call 0x4006046	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x6006	          0x4889c6	                            mov rsi, rax	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x6009	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x600c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x6010	            0x89d1	                            mov ecx, edx	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x6012	          0x4889f2	                            mov rdx, rsi	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x6015	      0xbe01040000	                          mov esi, 0x401	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x601a	          0x4889c7	                            mov rdi, rax	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x601d	      0xb800000000	                              mov eax, 0	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x6022	      0xe800000000	                          call 0x4006067	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x6027	      0xe9d3000000	                           jmp 0x400613f	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x602c	    0x488b05000000	            mov rax, qword [0x04006073] 	      3472	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6
0x6033	          0x488b18	                    mov rbx, qword [rax]	      3472	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6
0x6036	      0xbf00000000	                              mov edi, 0	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x603b	      0xe800000000	                          call 0x4006080	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x6040	          0x4889c6	                            mov rsi, rax	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x6043	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x6046	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x604a	          0x4189d0	                            mov r8d, edx	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x604d	          0x4889d9	                            mov rcx, rbx	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x6050	          0x4889f2	                            mov rdx, rsi	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x6053	      0xbe01040000	                          mov esi, 0x401	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x6058	          0x4889c7	                            mov rdi, rax	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x605b	      0xb800000000	                              mov eax, 0	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x6060	      0xe800000000	                          call 0x40060a5	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x6065	      0xe995000000	                           jmp 0x400613f	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x606a	    0x488b05000000	            mov rax, qword [0x040060b1] 	      3480	buffer.c	FUNCTION_59	ELSE_7
0x6071	          0x4c8b20	                    mov r12, qword [rax]	      3480	buffer.c	FUNCTION_59	ELSE_7
0x6074	    0x488b05000000	            mov rax, qword [0x040060bb] 	      3479	buffer.c	FUNCTION_59	ELSE_7
0x607b	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      3479	buffer.c	FUNCTION_59	ELSE_7
0x607f	      0xbf00000000	                              mov edi, 0	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x6084	      0xe800000000	                          call 0x40060c9	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x6089	          0x4889c6	                            mov rsi, rax	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x608c	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x608f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x6093	          0x4189d1	                            mov r9d, edx	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x6096	          0x4d89e0	                             mov r8, r12	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x6099	          0x4889d9	                            mov rcx, rbx	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x609c	          0x4889f2	                            mov rdx, rsi	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x609f	      0xbe01040000	                          mov esi, 0x401	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x60a4	          0x4889c7	                            mov rdi, rax	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x60a7	      0xb800000000	                              mov eax, 0	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x60ac	      0xe800000000	                          call 0x40060f1	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x60b1	      0xe800000000	                          call 0x40060f6	      3482	buffer.c	FUNCTION_59	ELSE_7	CALL_29
0x60b6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3483	buffer.c	FUNCTION_59	ELSE_7	CALL_30
0x60ba	          0x4889c7	                            mov rdi, rax	      3483	buffer.c	FUNCTION_59	ELSE_7	CALL_30
0x60bd	      0xe800000000	                          call 0x4006102	      3483	buffer.c	FUNCTION_59	ELSE_7	CALL_30
0x60c2	        0x488945c8	             mov qword [rbp - 0x38], rax	      3483	buffer.c	FUNCTION_59	ELSE_7	CALL_30
0x60c6	    0x488b05000000	            mov rax, qword [0x0400610d] 	      3485	buffer.c	FUNCTION_59	ELSE_7
0x60cd	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      3485	buffer.c	FUNCTION_59	ELSE_7
0x60d3	          0x8d4801	                      lea ecx, [rax + 1]	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x60d6	    0x488b05000000	            mov rax, qword [0x0400611d] 	      3485	buffer.c	FUNCTION_59	ELSE_7
0x60dd	          0x8b4040	            mov eax, dword [rax + 0x40] 	      3485	buffer.c	FUNCTION_59	ELSE_7
0x60e0	          0x8d5001	                      lea edx, [rax + 1]	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x60e3	      0xb801040000	                          mov eax, 0x401	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x60e8	        0x482b45c8	             sub rax, qword [rbp - 0x38]	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x60ec	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x60f0	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x60f4	          0x4801f7	                            add rdi, rsi	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x60f7	          0x4889c6	                            mov rsi, rax	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x60fa	      0xe800000000	                          call 0x400613f	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x60ff	      0xbf66000000	                           mov edi, 0x66	      3488	buffer.c	FUNCTION_59	CALL_33
0x6104	      0xe800000000	                          call 0x4006149	      3488	buffer.c	FUNCTION_59	CALL_33
0x6109	            0x85c0	                           test eax, eax	      3488	buffer.c	FUNCTION_59	CALL_33
0x610b	           0xf94c0	                                 sete al	      3488	buffer.c	FUNCTION_59	CALL_33
0x610e	           0xfb6d0	                           movzx edx, al	      3488	buffer.c	FUNCTION_59	CALL_33
0x6111	    0x488b05000000	            mov rax, qword [0x04006158] 	      3488	buffer.c	FUNCTION_59	CALL_33
0x6118	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      3488	buffer.c	FUNCTION_59	CALL_33
0x611c	            0x89d1	                            mov ecx, edx	      3488	buffer.c	FUNCTION_59	CALL_33
0x611e	      0xba01040000	                          mov edx, 0x401	      3488	buffer.c	FUNCTION_59	CALL_33
0x6123	          0x4889c7	                            mov rdi, rax	      3488	buffer.c	FUNCTION_59	CALL_33
0x6126	      0xe8db3a0000	              call sym.append_arg_number	      3488	buffer.c	FUNCTION_59	CALL_33
0x612b	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      3490	buffer.c	FUNCTION_59	IF_9
0x612f	            0x742f	                            je 0x40061a0	      3490	buffer.c	FUNCTION_59	IF_9
0x6131	      0xe800000000	                          call 0x4006176	      3494	buffer.c	FUNCTION_59	IF_9	CALL_34
0x6136	    0x8b0500000000	            mov eax, dword [0x0400617c] 	      3495	buffer.c	FUNCTION_59	IF_9
0x613c	          0x8945ac	             mov dword [rbp - 0x54], eax	      3495	buffer.c	FUNCTION_59	IF_9
0x613f	    0xc70500000000	               mov dword [0x04006189], 1	      3496	buffer.c	FUNCTION_59	IF_9
0x6149	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3497	buffer.c	FUNCTION_59	IF_9	CALL_35
0x614d	          0x4889c7	                            mov rdi, rax	      3497	buffer.c	FUNCTION_59	IF_9	CALL_35
0x6150	      0xe800000000	                          call 0x4006195	      3497	buffer.c	FUNCTION_59	IF_9	CALL_35
0x6155	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3498	buffer.c	FUNCTION_59	IF_9
0x6158	    0x890500000000	            mov dword [0x0400619e], eax 	      3498	buffer.c	FUNCTION_59	IF_9
0x615e	            0xeb49	                           jmp 0x40061e9	      3498	buffer.c	FUNCTION_59	IF_9
0x6160	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x6164	      0xba00000000	                              mov edx, 0	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x6169	      0xbe00000000	                              mov esi, 0	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x616e	          0x4889c7	                            mov rdi, rax	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x6171	      0xe800000000	                          call 0x40061b6	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x6176	        0x488945b8	             mov qword [rbp - 0x48], rax	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x617a	    0x8b0500000000	            mov eax, dword [0x040061c0] 	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x6180	            0x85c0	                           test eax, eax	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x6182	            0x7514	                           jne 0x40061d8	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x6184	    0x8b0500000000	            mov eax, dword [0x040061ca] 	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x618a	            0x85c0	                           test eax, eax	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x618c	            0x741b	                            je 0x40061e9	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x618e	    0x8b0500000000	            mov eax, dword [0x040061d4] 	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x6194	            0x85c0	                           test eax, eax	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x6196	            0x7511	                           jne 0x40061e9	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x6198	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3509	buffer.c	FUNCTION_59	ELSE_8	CALL_37
0x619c	      0xbe00000000	                              mov esi, 0	      3509	buffer.c	FUNCTION_59	ELSE_8	CALL_37
0x61a1	          0x4889c7	                            mov rdi, rax	      3509	buffer.c	FUNCTION_59	ELSE_8	CALL_37
0x61a4	      0xe800000000	                          call 0x40061e9	      3509	buffer.c	FUNCTION_59	ELSE_8	CALL_37
0x61a9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3512	buffer.c	FUNCTION_59	CALL_38
0x61ad	          0x4889c7	                            mov rdi, rax	      3512	buffer.c	FUNCTION_59	CALL_38
0x61b0	      0xe800000000	                          call 0x40061f5	      3512	buffer.c	FUNCTION_59	CALL_38
0x61b5	            0xeb01	                           jmp 0x40061f8	      3512	buffer.c	FUNCTION_59	CALL_38
0x61b7	              0x90	                                     nop	      3410	buffer.c	FUNCTION_59	IF_1
0x61b8	        0x488d65d8	                   lea rsp, [rbp - 0x28]	      3513	buffer.c	FUNCTION_59
0x61bc	              0x5b	                                 pop rbx	      3513	buffer.c	FUNCTION_59
0x61bd	            0x415c	                                 pop r12	      3513	buffer.c	FUNCTION_59
0x61bf	            0x415d	                                 pop r13	      3513	buffer.c	FUNCTION_59
0x61c1	            0x415e	                                 pop r14	      3513	buffer.c	FUNCTION_59
0x61c3	            0x415f	                                 pop r15	      3513	buffer.c	FUNCTION_59
0x61c5	              0x5d	                                 pop rbp	      3513	buffer.c	FUNCTION_59
0x61c6	              0xc3	                                     ret	      3513	buffer.c	FUNCTION_59
enter_buffer	FOR,0:WHILE,0:ELSE,2:functions,0:IF,9:CALL,19:SWITCH,0:DO,0	160
0x2962	              0x55	                                push rbp	      1701	buffer.c	FUNCTION_21
0x2963	          0x4889e5	                            mov rbp, rsp	      1701	buffer.c	FUNCTION_21
0x2966	              0x53	                                push rbx	      1701	buffer.c	FUNCTION_21
0x2967	        0x4883ec18	                           sub rsp, 0x18	      1701	buffer.c	FUNCTION_21
0x296b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1701	buffer.c	FUNCTION_21
0x296f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1703	buffer.c	FUNCTION_21	CALL_1
0x2973	      0xbe05000000	                              mov esi, 5	      1703	buffer.c	FUNCTION_21	CALL_1
0x2978	          0x4889c7	                            mov rdi, rax	      1703	buffer.c	FUNCTION_21	CALL_1
0x297b	      0xe800000000	                          call 0x40029c0	      1703	buffer.c	FUNCTION_21	CALL_1
0x2980	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1704	buffer.c	FUNCTION_21	IF_1
0x2984	    0x8b8058170000	          mov eax, dword [rax + 0x1758] 	      1704	buffer.c	FUNCTION_21	IF_1
0x298a	            0x85c0	                           test eax, eax	      1704	buffer.c	FUNCTION_21	IF_1
0x298c	            0x750e	                           jne 0x40029dc	      1704	buffer.c	FUNCTION_21	IF_1
0x298e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1705	buffer.c	FUNCTION_21	CALL_2
0x2992	          0x4889c7	                            mov rdi, rax	      1705	buffer.c	FUNCTION_21	CALL_2
0x2995	      0xe800000000	                          call 0x40029da	      1705	buffer.c	FUNCTION_21	CALL_2
0x299a	            0xeb0f	                           jmp 0x40029eb	      1705	buffer.c	FUNCTION_21	CALL_2
0x299c	    0x488b05000000	            mov rax, qword [0x040029e3] 	      1709	buffer.c	FUNCTION_21	CALL_3
0x29a3	          0x4889c7	                            mov rdi, rax	      1709	buffer.c	FUNCTION_21	CALL_3
0x29a6	      0xe800000000	                          call 0x40029eb	      1709	buffer.c	FUNCTION_21	CALL_3
0x29ab	    0x488b05000000	            mov rax, qword [0x040029f2] 	      1710	buffer.c	FUNCTION_21	CALL_4
0x29b2	          0x4889c7	                            mov rdi, rax	      1710	buffer.c	FUNCTION_21	CALL_4
0x29b5	      0xe800000000	                          call 0x40029fa	      1710	buffer.c	FUNCTION_21	CALL_4
0x29ba	    0x488b05000000	            mov rax, qword [0x04002a01] 	      1714	buffer.c	FUNCTION_21
0x29c1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1714	buffer.c	FUNCTION_21
0x29c5	        0x48895008	                mov qword [rax + 8], rdx	      1714	buffer.c	FUNCTION_21
0x29c9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1715	buffer.c	FUNCTION_21
0x29cd	    0x488905000000	            mov qword [0x04002a14], rax 	      1715	buffer.c	FUNCTION_21
0x29d4	    0x488b05000000	            mov rax, qword [0x04002a1b] 	      1716	buffer.c	FUNCTION_21
0x29db	          0x8b5078	            mov edx, dword [rax + 0x78] 	      1716	buffer.c	FUNCTION_21
0x29de	          0x83c201	                              add edx, 1	      1716	buffer.c	FUNCTION_21
0x29e1	          0x895078	             mov dword [rax + 0x78], edx	      1716	buffer.c	FUNCTION_21
0x29e4	    0x488b05000000	            mov rax, qword [0x04002a2b] 	      1719	buffer.c	FUNCTION_21	IF_2
0x29eb	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      1719	buffer.c	FUNCTION_21	IF_2
0x29f1	            0x85c0	                           test eax, eax	      1719	buffer.c	FUNCTION_21	IF_2
0x29f3	            0x740f	                            je 0x4002a44	      1719	buffer.c	FUNCTION_21	IF_2
0x29f5	    0x488b05000000	            mov rax, qword [0x04002a3c] 	      1720	buffer.c	FUNCTION_21	CALL_5
0x29fc	          0x4889c7	                            mov rdi, rax	      1720	buffer.c	FUNCTION_21	CALL_5
0x29ff	      0xe800000000	                          call 0x4002a44	      1720	buffer.c	FUNCTION_21	CALL_5
0x2a04	    0x488b05000000	            mov rax, qword [0x04002a4b] 	      1724	buffer.c	FUNCTION_21
0x2a0b	    0x488b15000000	            mov rdx, qword [0x04002a52] 	      1724	buffer.c	FUNCTION_21
0x2a12	    0x4881c2681700	                         add rdx, 0x1768	      1724	buffer.c	FUNCTION_21
0x2a19	        0x48895010	             mov qword [rax + 0x10], rdx	      1724	buffer.c	FUNCTION_21
0x2a1d	    0x488b05000000	            mov rax, qword [0x04002a64] 	      1728	buffer.c	FUNCTION_21
0x2a24	    0x48c740380100	               mov qword [rax + 0x38], 1	      1728	buffer.c	FUNCTION_21
0x2a2c	    0x488b05000000	            mov rax, qword [0x04002a73] 	      1729	buffer.c	FUNCTION_21
0x2a33	    0xc74040000000	               mov dword [rax + 0x40], 0	      1729	buffer.c	FUNCTION_21
0x2a3a	    0x488b05000000	            mov rax, qword [0x04002a81] 	      1731	buffer.c	FUNCTION_21
0x2a41	    0xc74044000000	               mov dword [rax + 0x44], 0	      1731	buffer.c	FUNCTION_21
0x2a48	    0x488b05000000	            mov rax, qword [0x04002a8f] 	      1733	buffer.c	FUNCTION_21
0x2a4f	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      1733	buffer.c	FUNCTION_21
0x2a56	    0x488b05000000	            mov rax, qword [0x04002a9d] 	      1734	buffer.c	FUNCTION_21
0x2a5d	    0xc68080000000	                mov byte [rax + 0x80], 0	      1734	buffer.c	FUNCTION_21
0x2a64	    0x488b05000000	            mov rax, qword [0x04002aab] 	      1737	buffer.c	FUNCTION_21
0x2a6b	    0xc780b4000000	               mov dword [rax + 0xb4], 0	      1737	buffer.c	FUNCTION_21
0x2a75	    0x488b05000000	            mov rax, qword [0x04002abc] 	      1740	buffer.c	FUNCTION_21	IF_3
0x2a7c	        0x488b4008	                mov rax, qword [rax + 8]	      1740	buffer.c	FUNCTION_21	IF_3
0x2a80	          0x4885c0	                           test rax, rax	      1740	buffer.c	FUNCTION_21	IF_3
0x2a83	            0x7538	                           jne 0x4002afd	      1740	buffer.c	FUNCTION_21	IF_3
0x2a85	    0x488b05000000	            mov rax, qword [0x04002acc] 	      1745	buffer.c	FUNCTION_21	IF_3	IF_4
0x2a8c	    0x488b80981400	          mov rax, qword [rax + 0x1498] 	      1745	buffer.c	FUNCTION_21	IF_3	IF_4
0x2a93	           0xfb600	                   movzx eax, byte [rax]	      1745	buffer.c	FUNCTION_21	IF_3	IF_4
0x2a96	            0x84c0	                             test al, al	      1745	buffer.c	FUNCTION_21	IF_3	IF_4
0x2a98	            0x750a	                           jne 0x4002ae4	      1745	buffer.c	FUNCTION_21	IF_3	IF_4
0x2a9a	    0xc70500000000	               mov dword [0x04002ae4], 0	      1746	buffer.c	FUNCTION_21	IF_3	IF_4
0x2aa4	      0xba00000000	                              mov edx, 0	      1748	buffer.c	FUNCTION_21	IF_3	CALL_6
0x2aa9	      0xbe00000000	                              mov esi, 0	      1748	buffer.c	FUNCTION_21	IF_3	CALL_6
0x2aae	      0xbf00000000	                              mov edi, 0	      1748	buffer.c	FUNCTION_21	IF_3	CALL_6
0x2ab3	      0xe800000000	                          call 0x4002af8	      1748	buffer.c	FUNCTION_21	IF_3	CALL_6
0x2ab8	      0xe98e000000	                           jmp 0x4002b8b	      1748	buffer.c	FUNCTION_21	IF_3	CALL_6
0x2abd	    0x8b0500000000	            mov eax, dword [0x04002b03] 	      1752	buffer.c	FUNCTION_21	ELSE_2	IF_5
0x2ac3	            0x85c0	                           test eax, eax	      1752	buffer.c	FUNCTION_21	ELSE_2	IF_5
0x2ac5	            0x750a	                           jne 0x4002b11	      1752	buffer.c	FUNCTION_21	ELSE_2	IF_5
0x2ac7	    0xc70500000000	               mov dword [0x04002b11], 1	      1753	buffer.c	FUNCTION_21	ELSE_2	IF_5
0x2ad1	    0x488b05000000	            mov rax, qword [0x04002b18] 	      1754	buffer.c	FUNCTION_21	ELSE_2	CALL_7
0x2ad8	      0xbe00000000	                              mov esi, 0	      1754	buffer.c	FUNCTION_21	ELSE_2	CALL_7
0x2add	          0x4889c7	                            mov rdi, rax	      1754	buffer.c	FUNCTION_21	ELSE_2	CALL_7
0x2ae0	      0xe800000000	                          call 0x4002b25	      1754	buffer.c	FUNCTION_21	ELSE_2	CALL_7
0x2ae5	    0x488b05000000	            mov rax, qword [0x04002b2c] 	      1755	buffer.c	FUNCTION_21	ELSE_2
0x2aec	    0x48c740780100	               mov qword [rax + 0x78], 1	      1755	buffer.c	FUNCTION_21	ELSE_2
0x2af4	    0x488b05000000	            mov rax, qword [0x04002b3b] 	      1757	buffer.c	FUNCTION_21	ELSE_2
0x2afb	    0xc78084000000	               mov dword [rax + 0x84], 0	      1757	buffer.c	FUNCTION_21	ELSE_2
0x2b05	    0x488b05000000	            mov rax, qword [0x04002b4c] 	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x2b0c	          0x4989c0	                             mov r8, rax	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x2b0f	      0xb900000000	                              mov ecx, 0	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x2b14	      0xba00000000	                              mov edx, 0	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x2b19	      0xbe00000000	                              mov esi, 0	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x2b1e	      0xbf02000000	                              mov edi, 2	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x2b23	      0xe800000000	                          call 0x4002b68	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x2b28	    0x488b05000000	            mov rax, qword [0x04002b6f] 	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x2b2f	          0x4989c0	                             mov r8, rax	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x2b32	      0xb900000000	                              mov ecx, 0	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x2b37	      0xba00000000	                              mov edx, 0	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x2b3c	      0xbe00000000	                              mov esi, 0	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x2b41	      0xbf0d000000	                            mov edi, 0xd	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x2b46	      0xe800000000	                          call 0x4002b8b	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x2b4b	    0x488b05000000	            mov rax, qword [0x04002b92] 	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x2b52	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x2b56	        0x4883f801	                              cmp rax, 1	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x2b5a	            0x7513	                           jne 0x4002baf	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x2b5c	      0xbf00000000	                              mov edi, 0	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x2b61	      0xe800000000	                          call 0x4002ba6	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x2b66	            0x85c0	                           test eax, eax	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x2b68	            0x7405	                            je 0x4002baf	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x2b6a	      0xe800000000	                          call 0x4002baf	      1766	buffer.c	FUNCTION_21	CALL_11
0x2b6f	    0x488b05000000	            mov rax, qword [0x04002bb6] 	      1768	buffer.c	FUNCTION_21	CALL_12
0x2b76	          0x4889c7	                            mov rdi, rax	      1768	buffer.c	FUNCTION_21	CALL_12
0x2b79	      0xe800000000	                          call 0x4002bbe	      1768	buffer.c	FUNCTION_21	CALL_12
0x2b7e	      0xe800000000	                          call 0x4002bc3	      1770	buffer.c	FUNCTION_21	CALL_13
0x2b83	    0x488b05000000	            mov rax, qword [0x04002bca] 	      1773	buffer.c	FUNCTION_21	IF_7
0x2b8a	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1773	buffer.c	FUNCTION_21	IF_7
0x2b8e	        0x4883f801	                              cmp rax, 1	      1773	buffer.c	FUNCTION_21	IF_7
0x2b92	            0x751c	                           jne 0x4002bf0	      1773	buffer.c	FUNCTION_21	IF_7
0x2b94	    0x488b05000000	            mov rax, qword [0x04002bdb] 	      1773	buffer.c	FUNCTION_21	IF_7
0x2b9b	     0xfb680800000	           movzx eax, byte [rax + 0x80] 	      1773	buffer.c	FUNCTION_21	IF_7
0x2ba2	            0x84c0	                             test al, al	      1773	buffer.c	FUNCTION_21	IF_7
0x2ba4	            0x750a	                           jne 0x4002bf0	      1773	buffer.c	FUNCTION_21	IF_7
0x2ba6	      0xbf00000000	                              mov edi, 0	      1774	buffer.c	FUNCTION_21	CALL_14
0x2bab	      0xe800000000	                          call 0x4002bf0	      1774	buffer.c	FUNCTION_21	CALL_14
0x2bb0	    0x488b05000000	            mov rax, qword [0x04002bf7] 	      1778	buffer.c	FUNCTION_21	CALL_15
0x2bb7	          0x4889c7	                            mov rdi, rax	      1778	buffer.c	FUNCTION_21	CALL_15
0x2bba	      0xe800000000	                          call 0x4002bff	      1778	buffer.c	FUNCTION_21	CALL_15
0x2bbf	    0x8b0500000000	            mov eax, dword [0x04002c05] 	      1782	buffer.c	FUNCTION_21
0x2bc5	            0x85c0	                           test eax, eax	      1782	buffer.c	FUNCTION_21
0x2bc7	            0x7405	                            je 0x4002c0e	      1782	buffer.c	FUNCTION_21
0x2bc9	      0xe800000000	                          call 0x4002c0e	      1782	buffer.c	FUNCTION_21
0x2bce	    0x488b05000000	            mov rax, qword [0x04002c15] 	      1785	buffer.c	FUNCTION_21	IF_8
0x2bd5	     0xfb780881200	         movzx eax, word [rax + 0x1288] 	      1785	buffer.c	FUNCTION_21	IF_8
0x2bdc	              0x98	                                    cwde	      1785	buffer.c	FUNCTION_21	IF_8
0x2bdd	          0x83e001	                              and eax, 1	      1785	buffer.c	FUNCTION_21	IF_8
0x2be0	            0x85c0	                           test eax, eax	      1785	buffer.c	FUNCTION_21	IF_8
0x2be2	            0x7405	                            je 0x4002c29	      1785	buffer.c	FUNCTION_21	IF_8
0x2be4	      0xe800000000	                          call 0x4002c29	      1786	buffer.c	FUNCTION_21	CALL_16
0x2be9	    0x488b05000000	            mov rax, qword [0x04002c30] 	      1791	buffer.c	FUNCTION_21	IF_9
0x2bf0	    0x8b8058170000	          mov eax, dword [rax + 0x1758] 	      1791	buffer.c	FUNCTION_21	IF_9
0x2bf6	            0x85c0	                           test eax, eax	      1791	buffer.c	FUNCTION_21	IF_9
0x2bf8	            0x7539	                           jne 0x4002c73	      1791	buffer.c	FUNCTION_21	IF_9
0x2bfa	    0x488b05000000	            mov rax, qword [0x04002c41] 	      1791	buffer.c	FUNCTION_21	IF_9
0x2c01	    0x8b8068020000	           mov eax, dword [rax + 0x268] 	      1791	buffer.c	FUNCTION_21	IF_9
0x2c07	            0x85c0	                           test eax, eax	      1791	buffer.c	FUNCTION_21	IF_9
0x2c09	            0x7428	                            je 0x4002c73	      1791	buffer.c	FUNCTION_21	IF_9
0x2c0b	    0x488b05000000	            mov rax, qword [0x04002c52] 	      1791	buffer.c	FUNCTION_21	IF_9
0x2c12	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1791	buffer.c	FUNCTION_21	IF_9
0x2c16	    0x488b80800400	           mov rax, qword [rax + 0x480] 	      1791	buffer.c	FUNCTION_21	IF_9
0x2c1d	           0xfb600	                   movzx eax, byte [rax]	      1791	buffer.c	FUNCTION_21	IF_9
0x2c20	            0x84c0	                             test al, al	      1791	buffer.c	FUNCTION_21	IF_9
0x2c22	            0x740f	                            je 0x4002c73	      1791	buffer.c	FUNCTION_21	IF_9
0x2c24	    0x488b05000000	            mov rax, qword [0x04002c6b] 	      1792	buffer.c	FUNCTION_21	CALL_17
0x2c2b	          0x4889c7	                            mov rdi, rax	      1792	buffer.c	FUNCTION_21	CALL_17
0x2c2e	      0xe800000000	                          call 0x4002c73	      1792	buffer.c	FUNCTION_21	CALL_17
0x2c33	    0x488b1d000000	            mov rbx, qword [0x04002c7a] 	      1795	buffer.c	FUNCTION_21	CALL_18
0x2c3a	      0xe800000000	                          call 0x4002c7f	      1795	buffer.c	FUNCTION_21	CALL_18
0x2c3f	    0x488983500100	            mov qword [rbx + 0x150], rax	      1795	buffer.c	FUNCTION_21	CALL_18
0x2c46	      0xbf28000000	                           mov edi, 0x28	      1798	buffer.c	FUNCTION_21	CALL_19
0x2c4b	      0xe800000000	                          call 0x4002c90	      1798	buffer.c	FUNCTION_21	CALL_19
0x2c50	              0x90	                                     nop	      1799	buffer.c	FUNCTION_21
0x2c51	        0x4883c418	                           add rsp, 0x18	      1799	buffer.c	FUNCTION_21
0x2c55	              0x5b	                                 pop rbx	      1799	buffer.c	FUNCTION_21
0x2c56	              0x5d	                                 pop rbp	      1799	buffer.c	FUNCTION_21
0x2c57	              0xc3	                                     ret	      1799	buffer.c	FUNCTION_21
buflist_findname_exp	FOR,0:WHILE,0:ELSE,0:functions,0:IF,1:CALL,3:SWITCH,0:DO,0	22
0x3dc6	              0x55	                                push rbp	      2361	buffer.c	FUNCTION_30
0x3dc7	          0x4889e5	                            mov rbp, rsp	      2361	buffer.c	FUNCTION_30
0x3dca	        0x4883ec20	                           sub rsp, 0x20	      2361	buffer.c	FUNCTION_30
0x3dce	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2361	buffer.c	FUNCTION_30
0x3dd2	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2363	buffer.c	FUNCTION_30
0x3dda	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2366	buffer.c	FUNCTION_30	CALL_1
0x3dde	      0xbe01000000	                              mov esi, 1	      2366	buffer.c	FUNCTION_30	CALL_1
0x3de3	          0x4889c7	                            mov rdi, rax	      2366	buffer.c	FUNCTION_30	CALL_1
0x3de6	      0xe800000000	                          call 0x4003e2b	      2366	buffer.c	FUNCTION_30	CALL_1
0x3deb	        0x488945f8	                mov qword [rbp - 8], rax	      2366	buffer.c	FUNCTION_30	CALL_1
0x3def	      0x48837df800	                  cmp qword [rbp - 8], 0	      2373	buffer.c	FUNCTION_30	IF_1
0x3df4	            0x741c	                            je 0x4003e52	      2373	buffer.c	FUNCTION_30	IF_1
0x3df6	        0x488b45f8	                mov rax, qword [rbp - 8]	      2375	buffer.c	FUNCTION_30	IF_1	CALL_2
0x3dfa	          0x4889c7	                            mov rdi, rax	      2375	buffer.c	FUNCTION_30	IF_1	CALL_2
0x3dfd	      0xe800000000	                          call 0x4003e42	      2375	buffer.c	FUNCTION_30	IF_1	CALL_2
0x3e02	        0x488945f0	             mov qword [rbp - 0x10], rax	      2375	buffer.c	FUNCTION_30	IF_1	CALL_2
0x3e06	        0x488b45f8	                mov rax, qword [rbp - 8]	      2376	buffer.c	FUNCTION_30	IF_1	CALL_3
0x3e0a	          0x4889c7	                            mov rdi, rax	      2376	buffer.c	FUNCTION_30	IF_1	CALL_3
0x3e0d	      0xe800000000	                          call 0x4003e52	      2376	buffer.c	FUNCTION_30	IF_1	CALL_3
0x3e12	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2378	buffer.c	FUNCTION_30
0x3e16	              0xc9	                                   leave	      2379	buffer.c	FUNCTION_30
0x3e17	              0xc3	                                     ret	      2379	buffer.c	FUNCTION_30
buf_addsign	FOR,1:WHILE,2:ELSE,3:functions,0:IF,4:CALL,2:SWITCH,0:DO,0	97
0xbb93	              0x55	                                push rbp	      5836	buffer.c	ELSE_1	FUNCTION_89
0xbb94	          0x4889e5	                            mov rbp, rsp	      5836	buffer.c	ELSE_1	FUNCTION_89
0xbb97	        0x4883ec30	                           sub rsp, 0x30	      5836	buffer.c	ELSE_1	FUNCTION_89
0xbb9b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5836	buffer.c	ELSE_1	FUNCTION_89
0xbb9f	          0x8975e4	             mov dword [rbp - 0x1c], esi	      5836	buffer.c	ELSE_1	FUNCTION_89
0xbba2	        0x488955d8	             mov qword [rbp - 0x28], rdx	      5836	buffer.c	ELSE_1	FUNCTION_89
0xbba6	          0x894de0	             mov dword [rbp - 0x20], ecx	      5836	buffer.c	ELSE_1	FUNCTION_89
0xbba9	    0x48c745f80000	                  mov qword [rbp - 8], 0	      5840	buffer.c	ELSE_1	FUNCTION_89
0xbbb1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0xbbb5	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0xbbbc	        0x488945f0	             mov qword [rbp - 0x10], rax	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0xbbc0	      0xe9bb000000	                           jmp 0x400bcc0	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0xbbc5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0xbbc9	        0x488b4008	                mov rax, qword [rax + 8]	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0xbbcd	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0xbbd1	            0x751a	                           jne 0x400bc2d	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0xbbd3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0xbbd7	            0x8b00	                    mov eax, dword [rax]	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0xbbd9	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0xbbdc	            0x750f	                           jne 0x400bc2d	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0xbbde	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5845	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0xbbe2	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      5845	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0xbbe5	          0x895010	             mov dword [rax + 0x10], edx	      5845	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0xbbe8	      0xe90b010000	                           jmp 0x400bd38	      5846	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0xbbed	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5852	buffer.c	FUNCTION_89	FOR_1	IF_2
0xbbf1	        0x488b4008	                mov rax, qword [rax + 8]	      5852	buffer.c	FUNCTION_89	FOR_1	IF_2
0xbbf5	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      5848	buffer.c	FUNCTION_89	FOR_1	IF_2
0xbbf9	            0x7e71	                           jle 0x400bcac	      5848	buffer.c	FUNCTION_89	FOR_1	IF_2
0xbbfb	            0xeb0c	                           jmp 0x400bc49	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0xbbfd	        0x488b45f8	                mov rax, qword [rbp - 8]	      5860	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0xbc01	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5860	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0xbc05	        0x488945f8	                mov qword [rbp - 8], rax	      5860	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0xbc09	      0x48837df800	                  cmp qword [rbp - 8], 0	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0xbc0e	            0x740e	                            je 0x400bc5e	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0xbc10	        0x488b45f8	                mov rax, qword [rbp - 8]	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0xbc14	        0x488b4008	                mov rax, qword [rax + 8]	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0xbc18	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0xbc1c	            0x74df	                            je 0x400bc3d	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0xbc1e	      0x48837df800	                  cmp qword [rbp - 8], 0	      5861	buffer.c	FUNCTION_89	FOR_1	IF_2	IF_3
0xbc23	            0x7511	                           jne 0x400bc76	      5861	buffer.c	FUNCTION_89	FOR_1	IF_2	IF_3
0xbc25	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5862	buffer.c	FUNCTION_89	FOR_1	IF_2	IF_3
0xbc29	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      5862	buffer.c	FUNCTION_89	FOR_1	IF_2	IF_3
0xbc30	        0x488945f0	             mov qword [rbp - 0x10], rax	      5862	buffer.c	FUNCTION_89	FOR_1	IF_2	IF_3
0xbc34	            0xeb0c	                           jmp 0x400bc82	      5862	buffer.c	FUNCTION_89	FOR_1	IF_2	IF_3
0xbc36	        0x488b45f8	                mov rax, qword [rbp - 8]	      5864	buffer.c	FUNCTION_89	FOR_1	IF_2	ELSE_2
0xbc3a	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5864	buffer.c	FUNCTION_89	FOR_1	IF_2	ELSE_2
0xbc3e	        0x488945f0	             mov qword [rbp - 0x10], rax	      5864	buffer.c	FUNCTION_89	FOR_1	IF_2	ELSE_2
0xbc42	        0x448b45e0	             mov r8d, dword [rbp - 0x20]	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0xbc46	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0xbc4a	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0xbc4d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0xbc51	        0x488b75f8	                mov rsi, qword [rbp - 8]	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0xbc55	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0xbc59	          0x4589c1	                            mov r9d, r8d	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0xbc5c	          0x4989f8	                             mov r8, rdi	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0xbc5f	          0x4889c7	                            mov rdi, rax	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0xbc62	      0xe841feffff	                    call sym.insert_sign	      5866	buffer.c	FUNCTION_89	FOR_1	IF_2	CALL_1
0xbc67	      0xe98c000000	                           jmp 0x400bd38	      5867	buffer.c	FUNCTION_89	FOR_1	IF_2
0xbc6c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5869	buffer.c	FUNCTION_89	FOR_1	ELSE_1
0xbc70	        0x488945f8	                mov qword [rbp - 8], rax	      5869	buffer.c	FUNCTION_89	FOR_1	ELSE_1
0xbc74	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0xbc78	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0xbc7c	        0x488945f0	             mov qword [rbp - 0x10], rax	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0xbc80	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0xbc85	     0xf853affffff	                           jne 0x400bc05	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0xbc8b	            0xeb0c	                           jmp 0x400bcd9	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0xbc8d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5874	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0xbc91	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5874	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0xbc95	        0x488945f8	                mov qword [rbp - 8], rax	      5874	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0xbc99	      0x48837df800	                  cmp qword [rbp - 8], 0	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0xbc9e	            0x740e	                            je 0x400bcee	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0xbca0	        0x488b45f8	                mov rax, qword [rbp - 8]	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0xbca4	        0x488b4008	                mov rax, qword [rax + 8]	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0xbca8	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0xbcac	            0x74df	                            je 0x400bccd	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0xbcae	      0x48837df800	                  cmp qword [rbp - 8], 0	      5875	buffer.c	FUNCTION_89	ELSE_1	IF_4
0xbcb3	            0x7511	                           jne 0x400bd06	      5875	buffer.c	FUNCTION_89	ELSE_1	IF_4
0xbcb5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5876	buffer.c	FUNCTION_89	ELSE_1	IF_4
0xbcb9	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      5876	buffer.c	FUNCTION_89	ELSE_1	IF_4
0xbcc0	        0x488945f0	             mov qword [rbp - 0x10], rax	      5876	buffer.c	FUNCTION_89	ELSE_1	IF_4
0xbcc4	            0xeb0c	                           jmp 0x400bd12	      5876	buffer.c	FUNCTION_89	ELSE_1	IF_4
0xbcc6	        0x488b45f8	                mov rax, qword [rbp - 8]	      5878	buffer.c	FUNCTION_89	ELSE_1	ELSE_3
0xbcca	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5878	buffer.c	FUNCTION_89	ELSE_1	ELSE_3
0xbcce	        0x488945f0	             mov qword [rbp - 0x10], rax	      5878	buffer.c	FUNCTION_89	ELSE_1	ELSE_3
0xbcd2	        0x448b45e0	             mov r8d, dword [rbp - 0x20]	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0xbcd6	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0xbcda	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0xbcdd	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0xbce1	        0x488b75f8	                mov rsi, qword [rbp - 8]	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0xbce5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0xbce9	          0x4589c1	                            mov r9d, r8d	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0xbcec	          0x4989f8	                             mov r8, rdi	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0xbcef	          0x4889c7	                            mov rdi, rax	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0xbcf2	      0xe8b1fdffff	                    call sym.insert_sign	      5880	buffer.c	FUNCTION_89	ELSE_1	CALL_2
0xbcf7	              0x90	                                     nop	      5882	buffer.c	FUNCTION_89	ELSE_1
0xbcf8	              0xc9	                                   leave	      5883	buffer.c	FUNCTION_89	ELSE_1
0xbcf9	              0xc3	                                     ret	      5883	buffer.c	FUNCTION_89	ELSE_1
do_arg_all	FOR,5:WHILE,0:ELSE,6:functions,0:IF,38:CALL,43:SWITCH,0:DO,0	543
0x9de8	              0x55	                                push rbp	      4845	buffer.c	FUNCTION_71
0x9de9	          0x4889e5	                            mov rbp, rsp	      4845	buffer.c	FUNCTION_71
0x9dec	            0x4154	                                push r12	      4845	buffer.c	FUNCTION_71
0x9dee	              0x53	                                push rbx	      4845	buffer.c	FUNCTION_71
0x9def	    0x4881ecb00000	                           sub rsp, 0xb0	      4845	buffer.c	FUNCTION_71
0x9df6	    0x89bd4cffffff	             mov dword [rbp - 0xb4], edi	      4845	buffer.c	FUNCTION_71
0x9dfc	    0x89b548ffffff	             mov dword [rbp - 0xb8], esi	      4845	buffer.c	FUNCTION_71
0x9e02	    0x899544ffffff	             mov dword [rbp - 0xbc], edx	      4845	buffer.c	FUNCTION_71
0x9e08	    0x64488b042528	                mov rax, qword fs:[0x28]	      4845	buffer.c	FUNCTION_71
0x9e11	        0x488945e8	             mov qword [rbp - 0x18], rax	      4845	buffer.c	FUNCTION_71
0x9e15	            0x31c0	                            xor eax, eax	      4845	buffer.c	FUNCTION_71
0x9e17	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	      4855	buffer.c	FUNCTION_71
0x9e21	    0xc7855cffffff	               mov dword [rbp - 0xa4], 1	      4856	buffer.c	FUNCTION_71
0x9e2b	    0x8b0500000000	            mov eax, dword [0x04009e71] 	      4861	buffer.c	FUNCTION_71
0x9e31	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	      4861	buffer.c	FUNCTION_71
0x9e37	    0x48c745880000	               mov qword [rbp - 0x78], 0	      4864	buffer.c	FUNCTION_71
0x9e3f	    0x48c745900000	               mov qword [rbp - 0x70], 0	      4865	buffer.c	FUNCTION_71
0x9e47	    0x488b05000000	            mov rax, qword [0x04009e8e] 	      4867	buffer.c	FUNCTION_71	IF_1
0x9e4e	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      4867	buffer.c	FUNCTION_71	IF_1
0x9e55	            0x8b00	                    mov eax, dword [rax]	      4867	buffer.c	FUNCTION_71	IF_1
0x9e57	            0x85c0	                           test eax, eax	      4867	buffer.c	FUNCTION_71	IF_1
0x9e59	     0xf8e0e090000	                           jle 0x400a7ad	      4867	buffer.c	FUNCTION_71	IF_1
0x9e5f	      0xe800000000	                          call 0x4009ea4	      4873	buffer.c	FUNCTION_71	CALL_1
0x9e64	    0x488b05000000	            mov rax, qword [0x04009eab] 	      4875	buffer.c	FUNCTION_71
0x9e6b	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      4875	buffer.c	FUNCTION_71
0x9e72	            0x8b00	                    mov eax, dword [rax]	      4875	buffer.c	FUNCTION_71
0x9e74	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      4875	buffer.c	FUNCTION_71
0x9e7a	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      4876	buffer.c	FUNCTION_71	CALL_2
0x9e80	            0x89c7	                            mov edi, eax	      4876	buffer.c	FUNCTION_71	CALL_2
0x9e82	      0xe800000000	                          call 0x4009ec7	      4876	buffer.c	FUNCTION_71	CALL_2
0x9e87	        0x48894598	             mov qword [rbp - 0x68], rax	      4876	buffer.c	FUNCTION_71	CALL_2
0x9e8b	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      4877	buffer.c	FUNCTION_71	IF_2
0x9e90	     0xf84da080000	                            je 0x400a7b0	      4877	buffer.c	FUNCTION_71	IF_2
0x9e96	    0x488b05000000	            mov rax, qword [0x04009edd] 	      4883	buffer.c	FUNCTION_71
0x9e9d	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      4883	buffer.c	FUNCTION_71
0x9ea4	        0x488945a0	             mov qword [rbp - 0x60], rax	      4883	buffer.c	FUNCTION_71
0x9ea8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4884	buffer.c	FUNCTION_71
0x9eac	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4884	buffer.c	FUNCTION_71
0x9eaf	          0x8d5001	                      lea edx, [rax + 1]	      4884	buffer.c	FUNCTION_71
0x9eb2	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4884	buffer.c	FUNCTION_71
0x9eb6	          0x895018	             mov dword [rax + 0x18], edx	      4884	buffer.c	FUNCTION_71
0x9eb9	    0x488b05000000	            mov rax, qword [0x04009f00] 	      4886	buffer.c	FUNCTION_71
0x9ec0	        0x488945a8	             mov qword [rbp - 0x58], rax	      4886	buffer.c	FUNCTION_71
0x9ec4	    0x488b05000000	            mov rax, qword [0x04009f0b] 	      4887	buffer.c	FUNCTION_71
0x9ecb	        0x488945b0	             mov qword [rbp - 0x50], rax	      4887	buffer.c	FUNCTION_71
0x9ecf	    0xc70500000000	               mov dword [0x04009f19], 1	      4890	buffer.c	FUNCTION_71
0x9ed9	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      4900	buffer.c	FUNCTION_71	IF_3
0x9ee0	            0x7e19	                           jle 0x4009f3b	      4900	buffer.c	FUNCTION_71	IF_3
0x9ee2	    0x488b05000000	            mov rax, qword [0x04009f29] 	      4901	buffer.c	FUNCTION_71	CALL_3
0x9ee9	      0xba01000000	                              mov edx, 1	      4901	buffer.c	FUNCTION_71	CALL_3
0x9eee	      0xbe01000000	                              mov esi, 1	      4901	buffer.c	FUNCTION_71	CALL_3
0x9ef3	          0x4889c7	                            mov rdi, rax	      4901	buffer.c	FUNCTION_71	CALL_3
0x9ef6	      0xe800000000	                          call 0x4009f3b	      4901	buffer.c	FUNCTION_71	CALL_3
0x9efb	    0x488b05000000	            mov rax, qword [0x04009f42] 	      4904	buffer.c	FUNCTION_71	FOR_1
0x9f02	          0x488b00	                    mov rax, qword [rax]	      4904	buffer.c	FUNCTION_71	FOR_1
0x9f05	        0x48894580	             mov qword [rbp - 0x80], rax	      4904	buffer.c	FUNCTION_71	FOR_1
0x9f09	    0x488b05000000	            mov rax, qword [0x04009f50] 	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x9f10	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x9f17	      0xe9bd030000	                           jmp 0x400a319	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x9f1c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x9f23	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x9f27	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x9f2e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4908	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x9f35	        0x488b4008	                mov rax, qword [rax + 8]	      4908	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x9f39	        0x488945b8	             mov qword [rbp - 0x48], rax	      4908	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x9f3d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4909	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x9f41	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      4909	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x9f48	          0x4885c0	                           test rax, rax	      4909	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x9f4b	            0x7431	                            je 0x4009fbe	      4909	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x9f4d	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x9f54	            0x7539	                           jne 0x4009fcf	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x9f56	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x9f5a	          0x8b4078	            mov eax, dword [rax + 0x78] 	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x9f5d	          0x83f801	                              cmp eax, 1	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x9f60	            0x7f1c	                            jg 0x4009fbe	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x9f62	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x9f69	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x9f6f	          0x4863d0	                         movsxd rdx, eax	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x9f72	    0x488b05000000	            mov rax, qword [0x04009fb9] 	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x9f79	          0x4839c2	                            cmp rdx, rax	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x9f7c	            0x7411	                            je 0x4009fcf	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x9f7e	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      4912	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x9f84	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      4912	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x9f8a	      0xe9b6010000	                           jmp 0x400a185	      4912	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x9f8f	    0xc78554ffffff	               mov dword [rbp - 0xac], 0	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x9f99	      0xe992010000	                           jmp 0x400a170	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x9f9e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4918	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0x9fa2	            0x8b00	                    mov eax, dword [rax]	      4918	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0x9fa4	    0x3b8554ffffff	             cmp eax, dword [rbp - 0xac]	      4918	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0x9faa	     0xf8e79010000	                           jle 0x400a169	      4918	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0x9fb0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x9fb4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x9fb8	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x9fbe	          0x4863d2	                         movsxd rdx, edx	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x9fc1	        0x48c1e204	                              shl rdx, 4	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x9fc5	          0x4801d0	                            add rax, rdx	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x9fc8	          0x8b5008	                mov edx, dword [rax + 8]	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x9fcb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x9fcf	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x9fd5	            0x39c2	                            cmp edx, eax	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x9fd7	            0x7446	                            je 0x400a05f	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x9fd9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x9fdd	    0x488b98880000	            mov rbx, qword [rax + 0x88] 	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x9fe4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x9fe8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x9fec	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x9ff2	          0x4863d2	                         movsxd rdx, edx	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x9ff5	        0x48c1e204	                              shl rdx, 4	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x9ff9	          0x4801d0	                            add rax, rdx	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x9ffc	          0x4889c7	                            mov rdi, rax	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x9fff	      0xe800000000	                          call 0x400a044	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0xa004	      0xba01000000	                              mov edx, 1	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0xa009	          0x4889de	                            mov rsi, rbx	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0xa00c	          0x4889c7	                            mov rdi, rax	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0xa00f	      0xe800000000	                          call 0x400a054	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0xa014	          0x83e001	                              and eax, 1	      4921	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0xa017	            0x85c0	                           test eax, eax	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0xa019	     0xf840a010000	                            je 0x400a169	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0xa01f	    0xc78560ffffff	               mov dword [rbp - 0xa0], 1	      4923	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0xa029	    0x488b05000000	            mov rax, qword [0x0400a070] 	      4925	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0xa030	        0x483945b0	            cmp qword [rbp - 0x50], rax 	      4925	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0xa034	            0x751b	                           jne 0x400a091	      4925	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0xa036	    0x838560ffffff	               add dword [rbp - 0xa0], 1	      4927	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0xa03d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4928	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6	IF_7
0xa041	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	      4928	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6	IF_7
0xa048	            0x7507	                           jne 0x400a091	      4928	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6	IF_7
0xa04a	    0x838560ffffff	               add dword [rbp - 0xa0], 1	      4929	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6	IF_7
0xa051	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0xa057	          0x4863d0	                         movsxd rdx, eax	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0xa05a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0xa05e	          0x4801d0	                            add rax, rdx	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0xa061	           0xfb600	                   movzx eax, byte [rax]	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0xa064	           0xfb6c0	                           movzx eax, al	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0xa067	    0x3b8560ffffff	             cmp eax, dword [rbp - 0xa0]	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0xa06d	            0x7d50	                           jge 0x400a0ff	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0xa06f	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      4934	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0xa075	          0x4863d0	                         movsxd rdx, eax	      4934	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0xa078	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4934	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0xa07c	          0x4801d0	                            add rax, rdx	      4934	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0xa07f	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	      4934	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0xa085	            0x8810	                      mov byte [rax], dl	      4934	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0xa087	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	      4935	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0xa08e	            0x7544	                           jne 0x400a114	      4935	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0xa090	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      4937	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9	IF_10
0xa095	            0x7410	                            je 0x400a0e7	      4937	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9	IF_10
0xa097	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4938	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9	IF_10
0xa09b	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	      4938	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9	IF_10
0xa0a1	    0x899088010000	            mov dword [rax + 0x188], edx	      4938	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9	IF_10
0xa0a7	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4939	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0xa0ae	        0x48894588	             mov qword [rbp - 0x78], rax	      4939	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0xa0b2	    0x488b05000000	            mov rax, qword [0x0400a0f9] 	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0xa0b9	        0x48894590	             mov qword [rbp - 0x70], rax	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0xa0bd	            0xeb15	                           jmp 0x400a114	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0xa0bf	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	      4943	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	ELSE_2	IF_11
0xa0c6	            0x740c	                            je 0x400a114	      4943	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	ELSE_2	IF_11
0xa0c8	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      4944	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	ELSE_2	IF_11
0xa0ce	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      4944	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	ELSE_2	IF_11
0xa0d4	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4946	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0xa0db	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      4946	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0xa0e2	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      4946	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0xa0e6	            0x745c	                            je 0x400a184	      4946	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0xa0e8	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4950	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12	CALL_8
0xa0ef	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      4950	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12	CALL_8
0xa0f6	          0x4889c7	                            mov rdi, rax	      4950	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12	CALL_8
0xa0f9	      0xe800000000	                          call 0x400a13e	      4950	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12	CALL_8
0xa0fe	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4951	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0xa105	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      4951	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0xa109	    0x488990800100	            mov qword [rax + 0x180], rdx	      4951	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0xa110	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4952	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0xa117	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      4952	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0xa11e	          0x8b5018	            mov edx, dword [rax + 0x18] 	      4952	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0xa121	          0x83c201	                              add edx, 1	      4952	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0xa124	          0x895018	             mov dword [rax + 0x18], edx	      4952	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0xa127	            0xeb1b	                           jmp 0x400a184	      4954	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0xa129	    0x838554ffffff	               add dword [rbp - 0xac], 1	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0xa130	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0xa136	    0x3b8568ffffff	             cmp eax, dword [rbp - 0x98]	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0xa13c	     0xf8c5cfeffff	                            jl 0x4009fde	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0xa142	            0xeb01	                           jmp 0x400a185	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0xa144	              0x90	                                     nop	      4954	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0xa145	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0xa14c	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0xa152	    0x899088010000	            mov dword [rax + 0x188], edx	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0xa158	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0xa15e	    0x3b8568ffffff	             cmp eax, dword [rbp - 0x98]	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0xa164	     0xf8561010000	                           jne 0x400a30b	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0xa16a	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0xa171	     0xf8554010000	                           jne 0x400a30b	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0xa177	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0xa17b	          0x4889c7	                            mov rdi, rax	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0xa17e	      0xe800000000	                          call 0x400a1c3	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0xa183	            0x85c0	                           test eax, eax	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0xa185	            0x7529	                           jne 0x400a1f0	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0xa187	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0xa18e	            0x7520	                           jne 0x400a1f0	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0xa190	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0xa194	          0x8b4078	            mov eax, dword [rax + 0x78] 	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0xa197	          0x83f801	                              cmp eax, 1	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0xa19a	            0x7f14	                            jg 0x400a1f0	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0xa19c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0xa1a0	          0x4889c7	                            mov rdi, rax	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0xa1a3	      0xe800000000	                          call 0x400a1e8	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0xa1a8	            0x85c0	                           test eax, eax	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0xa1aa	     0xf851b010000	                           jne 0x400a30b	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0xa1b0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0xa1b4	          0x4889c7	                            mov rdi, rax	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0xa1b7	      0xe800000000	                          call 0x400a1fc	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0xa1bc	            0x85c0	                           test eax, eax	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0xa1be	            0x7576	                           jne 0x400a276	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0xa1c0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0xa1c4	          0x8b4078	            mov eax, dword [rax + 0x78] 	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0xa1c7	          0x83f801	                              cmp eax, 1	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0xa1ca	            0x7f6a	                            jg 0x400a276	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0xa1cc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4968	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_12
0xa1d0	          0x4889c7	                            mov rdi, rax	      4968	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_12
0xa1d3	      0xe800000000	                          call 0x400a218	      4968	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_12
0xa1d8	            0x85c0	                           test eax, eax	      4968	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_12
0xa1da	            0x745a	                            je 0x400a276	      4968	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_12
0xa1dc	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4972	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_13
0xa1e0	        0x488d45d0	                   lea rax, [rbp - 0x30]	      4972	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_13
0xa1e4	          0x4889d6	                            mov rsi, rdx	      4972	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_13
0xa1e7	          0x4889c7	                            mov rdi, rax	      4972	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_13
0xa1ea	      0xe800000000	                          call 0x400a22f	      4972	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_13
0xa1ef	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4974	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_14
0xa1f3	      0xbe00000000	                              mov esi, 0	      4974	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_14
0xa1f8	          0x4889c7	                            mov rdi, rax	      4974	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_14
0xa1fb	      0xe800000000	                          call 0x400a240	      4974	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_14
0xa200	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0xa207	          0x4889c7	                            mov rdi, rax	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0xa20a	      0xe800000000	                          call 0x400a24f	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0xa20f	            0x85c0	                           test eax, eax	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0xa211	            0x7410	                            je 0x400a263	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0xa213	        0x488d45d0	                   lea rax, [rbp - 0x30]	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0xa217	          0x4889c7	                            mov rdi, rax	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0xa21a	      0xe800000000	                          call 0x400a25f	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0xa21f	            0x85c0	                           test eax, eax	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0xa221	            0x7513	                           jne 0x400a276	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0xa223	    0x488b05000000	            mov rax, qword [0x0400a26a] 	      4979	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16
0xa22a	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      4979	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16
0xa231	      0xe995000000	                           jmp 0x400a30b	      4979	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16
0xa236	    0x488b15000000	            mov rdx, qword [0x0400a27d] 	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0xa23d	    0x488b05000000	            mov rax, qword [0x0400a284] 	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0xa244	          0x4839c2	                            cmp rdx, rax	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0xa247	            0x7524	                           jne 0x400a2ad	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0xa249	    0x488b05000000	            mov rax, qword [0x0400a290] 	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0xa250	          0x488b00	                    mov rax, qword [rax]	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0xa253	          0x4885c0	                           test rax, rax	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0xa256	            0x7409	                            je 0x400a2a1	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0xa258	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0xa25f	            0x750c	                           jne 0x400a2ad	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0xa261	    0xc78558ffffff	               mov dword [rbp - 0xa8], 1	      4986	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0xa26b	            0xeb5e	                           jmp 0x400a30b	      4986	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0xa26d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0xa271	          0x4889c7	                            mov rdi, rax	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0xa274	      0xe800000000	                          call 0x400a2b9	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0xa279	            0x85c0	                           test eax, eax	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0xa27b	            0x7517	                           jne 0x400a2d4	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0xa27d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0xa281	          0x4889c7	                            mov rdi, rax	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0xa284	      0xe800000000	                          call 0x400a2c9	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0xa289	            0x85c0	                           test eax, eax	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0xa28b	            0x7507	                           jne 0x400a2d4	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0xa28d	      0xba01000000	                              mov edx, 1	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0xa292	            0xeb05	                           jmp 0x400a2d9	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0xa294	      0xba00000000	                              mov edx, 0	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0xa299	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0xa2a0	            0x89d6	                            mov esi, edx	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0xa2a2	          0x4889c7	                            mov rdi, rax	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0xa2a5	      0xe800000000	                          call 0x400a2ea	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0xa2aa	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4992	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18	CALL_20
0xa2b1	          0x4889c7	                            mov rdi, rax	      4992	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18	CALL_20
0xa2b4	      0xe800000000	                          call 0x400a2f9	      4992	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18	CALL_20
0xa2b9	            0x85c0	                           test eax, eax	      4992	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18	CALL_20
0xa2bb	            0x750e	                           jne 0x400a30b	      4992	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18	CALL_20
0xa2bd	    0x488b05000000	            mov rax, qword [0x0400a304] 	      4993	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18
0xa2c4	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      4993	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18
0xa2cb	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0xa2d2	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0xa2d9	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0xa2e1	     0xf8535fcffff	                           jne 0x4009f5c	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0xa2e7	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      5000	buffer.c	FUNCTION_71	FOR_1	IF_19
0xa2ee	            0x743d	                            je 0x400a36d	      5000	buffer.c	FUNCTION_71	FOR_1	IF_19
0xa2f0	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      5000	buffer.c	FUNCTION_71	FOR_1	IF_19
0xa2f5	            0x7436	                            je 0x400a36d	      5000	buffer.c	FUNCTION_71	FOR_1	IF_19
0xa2f7	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5004	buffer.c	FUNCTION_71	FOR_1	IF_20	CALL_21
0xa2fb	          0x4889c7	                            mov rdi, rax	      5004	buffer.c	FUNCTION_71	FOR_1	IF_20	CALL_21
0xa2fe	      0xe800000000	                          call 0x400a343	      5004	buffer.c	FUNCTION_71	FOR_1	IF_20	CALL_21
0xa303	            0x85c0	                           test eax, eax	      5004	buffer.c	FUNCTION_71	FOR_1	IF_20	CALL_21
0xa305	            0x750b	                           jne 0x400a352	      5004	buffer.c	FUNCTION_71	FOR_1	IF_20	CALL_21
0xa307	    0x488b05000000	            mov rax, qword [0x0400a34e] 	      5005	buffer.c	FUNCTION_71	FOR_1	IF_20
0xa30e	        0x48894580	             mov qword [rbp - 0x80], rax	      5005	buffer.c	FUNCTION_71	FOR_1	IF_20
0xa312	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0xa316	      0xba01000000	                              mov edx, 1	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0xa31b	      0xbe01000000	                              mov esi, 1	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0xa320	          0x4889c7	                            mov rdi, rax	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0xa323	      0xe800000000	                          call 0x400a368	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0xa328	      0xe9cefbffff	                           jmp 0x4009f3b	      5008	buffer.c	FUNCTION_71	FOR_1
0xa32d	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	      5014	buffer.c	FUNCTION_71	IF_21
0xa333	    0x3b8568ffffff	             cmp eax, dword [rbp - 0x98]	      5014	buffer.c	FUNCTION_71	IF_21
0xa339	            0x7f09	                            jg 0x400a384	      5014	buffer.c	FUNCTION_71	IF_21
0xa33b	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	      5014	buffer.c	FUNCTION_71	IF_21
0xa342	            0x7f0c	                            jg 0x400a390	      5014	buffer.c	FUNCTION_71	IF_21
0xa344	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5015	buffer.c	FUNCTION_71	IF_21
0xa34a	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	      5015	buffer.c	FUNCTION_71	IF_21
0xa350	    0x8b0500000000	            mov eax, dword [0x0400a396] 	      5018	buffer.c	FUNCTION_71
0xa356	          0x83c001	                              add eax, 1	      5018	buffer.c	FUNCTION_71
0xa359	    0x890500000000	            mov dword [0x0400a39f], eax 	      5018	buffer.c	FUNCTION_71
0xa35f	    0x8b0500000000	            mov eax, dword [0x0400a3a5] 	      5019	buffer.c	FUNCTION_71
0xa365	          0x83c001	                              add eax, 1	      5019	buffer.c	FUNCTION_71
0xa368	    0x890500000000	            mov dword [0x0400a3ae], eax 	      5019	buffer.c	FUNCTION_71
0xa36e	    0x488b05000000	            mov rax, qword [0x0400a3b5] 	      5020	buffer.c	FUNCTION_71
0xa375	        0x488945c0	             mov qword [rbp - 0x40], rax	      5020	buffer.c	FUNCTION_71
0xa379	    0x488b05000000	            mov rax, qword [0x0400a3c0] 	      5021	buffer.c	FUNCTION_71
0xa380	        0x488945c8	             mov qword [rbp - 0x38], rax	      5021	buffer.c	FUNCTION_71
0xa384	    0x488b05000000	            mov rax, qword [0x0400a3cb] 	      5022	buffer.c	FUNCTION_71	CALL_23
0xa38b	      0xbe00000000	                              mov esi, 0	      5022	buffer.c	FUNCTION_71	CALL_23
0xa390	          0x4889c7	                            mov rdi, rax	      5022	buffer.c	FUNCTION_71	CALL_23
0xa393	      0xe800000000	                          call 0x400a3d8	      5022	buffer.c	FUNCTION_71	CALL_23
0xa398	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0xa39f	            0x745e	                            je 0x400a43f	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0xa3a1	    0x488b05000000	            mov rax, qword [0x0400a3e8] 	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0xa3a8	          0x488b00	                    mov rax, qword [rax]	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0xa3ab	        0x4883f801	                              cmp rax, 1	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0xa3af	            0x754e	                           jne 0x400a43f	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0xa3b1	      0xbf01000000	                              mov edi, 1	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0xa3b6	      0xe800000000	                          call 0x400a3fb	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0xa3bb	           0xfb600	                   movzx eax, byte [rax]	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0xa3be	            0x84c0	                             test al, al	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0xa3c0	            0x753d	                           jne 0x400a43f	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0xa3c2	    0x488b05000000	            mov rax, qword [0x0400a409] 	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0xa3c9	          0x8b4078	            mov eax, dword [rax + 0x78] 	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0xa3cc	          0x83f801	                              cmp eax, 1	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0xa3cf	            0x752e	                           jne 0x400a43f	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0xa3d1	    0x488b05000000	            mov rax, qword [0x0400a418] 	      5026	buffer.c	FUNCTION_71	IF_22
0xa3d8	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      5026	buffer.c	FUNCTION_71	IF_22
0xa3df	          0x4885c0	                           test rax, rax	      5026	buffer.c	FUNCTION_71	IF_22
0xa3e2	            0x751b	                           jne 0x400a43f	      5026	buffer.c	FUNCTION_71	IF_22
0xa3e4	    0x488b05000000	            mov rax, qword [0x0400a42b] 	      5026	buffer.c	FUNCTION_71	IF_22
0xa3eb	    0x8b80c8000000	            mov eax, dword [rax + 0xc8] 	      5026	buffer.c	FUNCTION_71	IF_22
0xa3f1	            0x85c0	                           test eax, eax	      5026	buffer.c	FUNCTION_71	IF_22
0xa3f3	            0x750a	                           jne 0x400a43f	      5026	buffer.c	FUNCTION_71	IF_22
0xa3f5	    0xc78558ffffff	               mov dword [rbp - 0xa8], 1	      5027	buffer.c	FUNCTION_71	IF_22
0xa3ff	    0xc78554ffffff	               mov dword [rbp - 0xac], 0	      5029	buffer.c	FUNCTION_71	FOR_4
0xa409	      0xe965020000	                           jmp 0x400a6b3	      5029	buffer.c	FUNCTION_71	FOR_4
0xa40e	    0x48817da00000	               cmp qword [rbp - 0x60], 0	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0xa416	            0x751b	                           jne 0x400a473	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0xa418	    0x8b0500000000	            mov eax, dword [0x0400a45e] 	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0xa41e	          0x83e801	                              sub eax, 1	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0xa421	    0x3b8554ffffff	             cmp eax, dword [rbp - 0xac]	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0xa427	            0x750a	                           jne 0x400a473	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0xa429	    0xc70500000000	               mov dword [0x0400a473], 1	      5032	buffer.c	FUNCTION_71	FOR_4	IF_23
0xa433	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      5033	buffer.c	FUNCTION_71	FOR_4	IF_24
0xa439	          0x4863d0	                         movsxd rdx, eax	      5033	buffer.c	FUNCTION_71	FOR_4	IF_24
0xa43c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5033	buffer.c	FUNCTION_71	FOR_4	IF_24
0xa440	          0x4801d0	                            add rax, rdx	      5033	buffer.c	FUNCTION_71	FOR_4	IF_24
0xa443	           0xfb600	                   movzx eax, byte [rax]	      5033	buffer.c	FUNCTION_71	FOR_4	IF_24
0xa446	            0x84c0	                             test al, al	      5033	buffer.c	FUNCTION_71	FOR_4	IF_24
0xa448	     0xf84a1000000	                            je 0x400a52f	      5033	buffer.c	FUNCTION_71	FOR_4	IF_24
0xa44e	    0x488b05000000	            mov rax, qword [0x0400a495] 	      5036	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25
0xa455	    0x8b8088010000	           mov eax, dword [rax + 0x188] 	      5036	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25
0xa45b	    0x3b8554ffffff	             cmp eax, dword [rbp - 0xac]	      5036	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25
0xa461	     0xf84d4010000	                            je 0x400a67b	      5036	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25
0xa467	    0x488b05000000	            mov rax, qword [0x0400a4ae] 	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0xa46e	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0xa475	            0xeb69	                           jmp 0x400a520	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0xa477	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5040	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26
0xa47e	    0x8b8088010000	           mov eax, dword [rax + 0x188] 	      5040	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26
0xa484	    0x3b8554ffffff	             cmp eax, dword [rbp - 0xac]	      5040	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26
0xa48a	            0x7542	                           jne 0x400a50e	      5040	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26
0xa48c	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	      5042	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0xa493	            0x741b	                            je 0x400a4f0	      5042	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0xa495	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5044	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0xa49c	        0x48894588	             mov qword [rbp - 0x78], rax	      5044	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0xa4a0	    0x488b05000000	            mov rax, qword [0x0400a4e7] 	      5045	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0xa4a7	        0x48894590	             mov qword [rbp - 0x70], rax	      5045	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0xa4ab	      0xe98b010000	                           jmp 0x400a67b	      5049	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26
0xa4b0	    0x488b15000000	            mov rdx, qword [0x0400a4f7] 	      5048	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	CALL_25
0xa4b7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5048	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	CALL_25
0xa4be	          0x4889d6	                            mov rsi, rdx	      5048	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	CALL_25
0xa4c1	          0x4889c7	                            mov rdi, rax	      5048	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	CALL_25
0xa4c4	      0xe800000000	                          call 0x400a509	      5048	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	CALL_25
0xa4c9	      0xe96d010000	                           jmp 0x400a67b	      5049	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26
0xa4ce	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0xa4d5	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0xa4d9	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0xa4e0	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0xa4e8	            0x758d	                           jne 0x400a4b7	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0xa4ea	      0xe94c010000	                           jmp 0x400a67b	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0xa4ef	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 1	      5054	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28
0xa4f6	     0xf853f010000	                           jne 0x400a67b	      5054	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28
0xa4fc	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	      5056	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0xa503	            0x7545	                           jne 0x400a58a	      5056	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0xa505	    0x8b0500000000	            mov eax, dword [0x0400a54b] 	      5058	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0xa50b	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      5058	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0xa511	    0xc70500000000	               mov dword [0x0400a55b], 1	      5059	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0xa51b	      0xbe21000000	                           mov esi, 0x21	      5060	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	CALL_26
0xa520	      0xbf00000000	                              mov edi, 0	      5060	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	CALL_26
0xa525	      0xe800000000	                          call 0x400a56a	      5060	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	CALL_26
0xa52a	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      5060	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	CALL_26
0xa530	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      5061	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0xa536	    0x890500000000	            mov dword [0x0400a57c], eax 	      5061	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0xa53c	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      5062	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	IF_30
0xa543	            0x7514	                           jne 0x400a599	      5062	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	IF_30
0xa545	      0xe922010000	                           jmp 0x400a6ac	      5063	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	IF_30
0xa54a	    0x8b0500000000	            mov eax, dword [0x0400a590] 	      5066	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6
0xa550	          0x83e801	                              sub eax, 1	      5066	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6
0xa553	    0x890500000000	            mov dword [0x0400a599], eax 	      5066	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6
0xa559	    0x488b05000000	            mov rax, qword [0x0400a5a0] 	      5071	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6
0xa560	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	      5071	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6
0xa566	    0x899088010000	            mov dword [rax + 0x188], edx	      5071	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6
0xa56c	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	      5072	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0xa573	            0x7516	                           jne 0x400a5cb	      5072	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0xa575	    0x488b05000000	            mov rax, qword [0x0400a5bc] 	      5074	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0xa57c	        0x48894588	             mov qword [rbp - 0x78], rax	      5074	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0xa580	    0x488b05000000	            mov rax, qword [0x0400a5c7] 	      5075	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0xa587	        0x48894590	             mov qword [rbp - 0x70], rax	      5075	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0xa58b	    0x488b1d000000	            mov rbx, qword [0x0400a5d2] 	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0xa592	    0x488b05000000	            mov rax, qword [0x0400a5d9] 	      5079	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_30
0xa599	        0x488b4008	                mov rax, qword [rax + 8]	      5079	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_30
0xa59d	          0x4889c7	                            mov rdi, rax	      5079	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_30
0xa5a0	      0xe800000000	                          call 0x400a5e5	      5079	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_30
0xa5a5	            0x85c0	                           test eax, eax	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0xa5a7	            0x7517	                           jne 0x400a600	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0xa5a9	    0x488b05000000	            mov rax, qword [0x0400a5f0] 	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0xa5b0	        0x488b4008	                mov rax, qword [rax + 8]	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0xa5b4	          0x4889c7	                            mov rdi, rax	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0xa5b7	      0xe800000000	                          call 0x400a5fc	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0xa5bc	            0x85c0	                           test eax, eax	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0xa5be	            0x7407	                            je 0x400a607	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0xa5c0	      0xb801000000	                              mov eax, 1	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0xa5c5	            0xeb05	                           jmp 0x400a60c	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0xa5c7	      0xb800000000	                              mov eax, 0	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0xa5cc	        0x448d6004	                     lea r12d, [rax + 4]	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0xa5d0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0xa5d4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0xa5d8	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0xa5de	          0x4863d2	                         movsxd rdx, edx	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0xa5e1	        0x48c1e204	                              shl rdx, 4	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0xa5e5	          0x4801d0	                            add rax, rdx	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0xa5e8	          0x4889c7	                            mov rdi, rax	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0xa5eb	      0xe800000000	                          call 0x400a630	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0xa5f0	        0x4883ec08	                              sub rsp, 8	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0xa5f4	              0x53	                                push rbx	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0xa5f5	          0x4589e1	                           mov r9d, r12d	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0xa5f8	    0x41b801000000	                              mov r8d, 1	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0xa5fe	      0xb900000000	                              mov ecx, 0	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0xa603	      0xba00000000	                              mov edx, 0	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0xa608	          0x4889c6	                            mov rsi, rax	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0xa60b	      0xbf00000000	                              mov edi, 0	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0xa610	      0xe800000000	                          call 0x400a655	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0xa615	        0x4883c410	                           add rsp, 0x10	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0xa619	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	      5082	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0xa620	            0x740f	                            je 0x400a671	      5082	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0xa622	    0x8b0500000000	            mov eax, dword [0x0400a668] 	      5083	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0xa628	          0x83c001	                              add eax, 1	      5083	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0xa62b	    0x890500000000	            mov dword [0x0400a671], eax 	      5083	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0xa631	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	      5084	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28
0xa63b	      0xe800000000	                          call 0x400a680	      5086	buffer.c	FUNCTION_71	FOR_4	CALL_32
0xa640	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0xa647	            0x7e23	                           jle 0x400a6ac	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0xa649	      0xbf00000000	                              mov edi, 0	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0xa64e	      0xe800000000	                          call 0x400a693	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0xa653	          0x4863d0	                         movsxd rdx, eax	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0xa656	    0x488b05000000	            mov rax, qword [0x0400a69d] 	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0xa65d	          0x4839c2	                            cmp rdx, rax	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0xa660	            0x7f0a	                            jg 0x400a6ac	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0xa662	    0xc70500000000	         mov dword [0x0400a6ac], 0x270f 	      5090	buffer.c	FUNCTION_71	FOR_4	IF_33
0xa66c	    0x838554ffffff	               add dword [rbp - 0xac], 1	      5029	buffer.c	FUNCTION_71	FOR_4
0xa673	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      5029	buffer.c	FUNCTION_71	FOR_4
0xa679	    0x3b854cffffff	             cmp eax, dword [rbp - 0xb4]	      5029	buffer.c	FUNCTION_71	FOR_4
0xa67f	            0x7d1c	                           jge 0x400a6dd	      5029	buffer.c	FUNCTION_71	FOR_4
0xa681	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      5029	buffer.c	FUNCTION_71	FOR_4
0xa687	    0x3b8568ffffff	             cmp eax, dword [rbp - 0x98]	      5029	buffer.c	FUNCTION_71	FOR_4
0xa68d	            0x7d0e	                           jge 0x400a6dd	      5029	buffer.c	FUNCTION_71	FOR_4
0xa68f	    0x8b0500000000	            mov eax, dword [0x0400a6d5] 	      5029	buffer.c	FUNCTION_71	FOR_4
0xa695	            0x85c0	                           test eax, eax	      5029	buffer.c	FUNCTION_71	FOR_4
0xa697	     0xf8471fdffff	                            je 0x400a44e	      5029	buffer.c	FUNCTION_71	FOR_4
0xa69d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5094	buffer.c	FUNCTION_71	CALL_34
0xa6a1	          0x4889c7	                            mov rdi, rax	      5094	buffer.c	FUNCTION_71	CALL_34
0xa6a4	      0xe800000000	                          call 0x400a6e9	      5094	buffer.c	FUNCTION_71	CALL_34
0xa6a9	    0x8b0500000000	            mov eax, dword [0x0400a6ef] 	      5096	buffer.c	FUNCTION_71
0xa6af	          0x83e801	                              sub eax, 1	      5096	buffer.c	FUNCTION_71
0xa6b2	    0x890500000000	            mov dword [0x0400a6f8], eax 	      5096	buffer.c	FUNCTION_71
0xa6b8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5099	buffer.c	FUNCTION_71	IF_34
0xa6bc	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      5099	buffer.c	FUNCTION_71	IF_34
0xa6c0	            0x7447	                            je 0x400a749	      5099	buffer.c	FUNCTION_71	IF_34
0xa6c2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5101	buffer.c	FUNCTION_71	IF_34	IF_35	CALL_35
0xa6c6	          0x4889c7	                            mov rdi, rax	      5101	buffer.c	FUNCTION_71	IF_34	IF_35	CALL_35
0xa6c9	      0xe800000000	                          call 0x400a70e	      5101	buffer.c	FUNCTION_71	IF_34	IF_35	CALL_35
0xa6ce	            0x85c0	                           test eax, eax	      5101	buffer.c	FUNCTION_71	IF_34	IF_35	CALL_35
0xa6d0	            0x7416	                            je 0x400a728	      5101	buffer.c	FUNCTION_71	IF_34	IF_35	CALL_35
0xa6d2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0xa6d6	      0xba01000000	                              mov edx, 1	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0xa6db	      0xbe01000000	                              mov esi, 1	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0xa6e0	          0x4889c7	                            mov rdi, rax	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0xa6e3	      0xe800000000	                          call 0x400a728	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0xa6e8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5103	buffer.c	FUNCTION_71	IF_34	IF_36	CALL_37
0xa6ec	          0x4889c7	                            mov rdi, rax	      5103	buffer.c	FUNCTION_71	IF_34	IF_36	CALL_37
0xa6ef	      0xe800000000	                          call 0x400a734	      5103	buffer.c	FUNCTION_71	IF_34	IF_36	CALL_37
0xa6f4	            0x85c0	                           test eax, eax	      5103	buffer.c	FUNCTION_71	IF_34	IF_36	CALL_37
0xa6f6	            0x7411	                            je 0x400a749	      5103	buffer.c	FUNCTION_71	IF_34	IF_36	CALL_37
0xa6f8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5104	buffer.c	FUNCTION_71	IF_34	CALL_38
0xa6fc	      0xbe00000000	                              mov esi, 0	      5104	buffer.c	FUNCTION_71	IF_34	CALL_38
0xa701	          0x4889c7	                            mov rdi, rax	      5104	buffer.c	FUNCTION_71	IF_34	CALL_38
0xa704	      0xe800000000	                          call 0x400a749	      5104	buffer.c	FUNCTION_71	IF_34	CALL_38
0xa709	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5107	buffer.c	FUNCTION_71	IF_37	CALL_39
0xa70d	          0x4889c7	                            mov rdi, rax	      5107	buffer.c	FUNCTION_71	IF_37	CALL_39
0xa710	      0xe800000000	                          call 0x400a755	      5107	buffer.c	FUNCTION_71	IF_37	CALL_39
0xa715	            0x85c0	                           test eax, eax	      5107	buffer.c	FUNCTION_71	IF_37	CALL_39
0xa717	            0x7416	                            je 0x400a76f	      5107	buffer.c	FUNCTION_71	IF_37	CALL_39
0xa719	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5108	buffer.c	FUNCTION_71	CALL_40
0xa71d	      0xba01000000	                              mov edx, 1	      5108	buffer.c	FUNCTION_71	CALL_40
0xa722	      0xbe01000000	                              mov esi, 1	      5108	buffer.c	FUNCTION_71	CALL_40
0xa727	          0x4889c7	                            mov rdi, rax	      5108	buffer.c	FUNCTION_71	CALL_40
0xa72a	      0xe800000000	                          call 0x400a76f	      5108	buffer.c	FUNCTION_71	CALL_40
0xa72f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5109	buffer.c	FUNCTION_71	IF_38	CALL_41
0xa733	          0x4889c7	                            mov rdi, rax	      5109	buffer.c	FUNCTION_71	IF_38	CALL_41
0xa736	      0xe800000000	                          call 0x400a77b	      5109	buffer.c	FUNCTION_71	IF_38	CALL_41
0xa73b	            0x85c0	                           test eax, eax	      5109	buffer.c	FUNCTION_71	IF_38	CALL_41
0xa73d	            0x7411	                            je 0x400a790	      5109	buffer.c	FUNCTION_71	IF_38	CALL_41
0xa73f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5110	buffer.c	FUNCTION_71	CALL_42
0xa743	      0xbe00000000	                              mov esi, 0	      5110	buffer.c	FUNCTION_71	CALL_42
0xa748	          0x4889c7	                            mov rdi, rax	      5110	buffer.c	FUNCTION_71	CALL_42
0xa74b	      0xe800000000	                          call 0x400a790	      5110	buffer.c	FUNCTION_71	CALL_42
0xa750	    0x8b0500000000	            mov eax, dword [0x0400a796] 	      5112	buffer.c	FUNCTION_71
0xa756	          0x83e801	                              sub eax, 1	      5112	buffer.c	FUNCTION_71
0xa759	    0x890500000000	            mov dword [0x0400a79f], eax 	      5112	buffer.c	FUNCTION_71
0xa75f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5113	buffer.c	FUNCTION_71	CALL_43
0xa763	          0x4889c7	                            mov rdi, rax	      5113	buffer.c	FUNCTION_71	CALL_43
0xa766	      0xe800000000	                          call 0x400a7ab	      5113	buffer.c	FUNCTION_71	CALL_43
0xa76b	            0xeb04	                           jmp 0x400a7b1	      5113	buffer.c	FUNCTION_71	CALL_43
0xa76d	              0x90	                                     nop	      4871	buffer.c	FUNCTION_71	IF_1
0xa76e	            0xeb01	                           jmp 0x400a7b1	      4871	buffer.c	FUNCTION_71	IF_1
0xa770	              0x90	                                     nop	      4878	buffer.c	FUNCTION_71	IF_2
0xa771	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5114	buffer.c	FUNCTION_71
0xa775	    0x644833042528	                xor rax, qword fs:[0x28]	      5114	buffer.c	FUNCTION_71
0xa77e	            0x7405	                            je 0x400a7c5	      5114	buffer.c	FUNCTION_71
0xa780	      0xe800000000	                          call 0x400a7c5	      5114	buffer.c	FUNCTION_71
0xa785	        0x488d65f0	                   lea rsp, [rbp - 0x10]	      5114	buffer.c	FUNCTION_71
0xa789	              0x5b	                                 pop rbx	      5114	buffer.c	FUNCTION_71
0xa78a	            0x415c	                                 pop r12	      5114	buffer.c	FUNCTION_71
0xa78c	              0x5d	                                 pop rbp	      5114	buffer.c	FUNCTION_71
0xa78d	              0xc3	                                     ret	      5114	buffer.c	FUNCTION_71
no_write_message_nobang	FOR,0:WHILE,0:ELSE,1:functions,0:IF,1:CALL,5:SWITCH,0:DO,0	22
0x2cf7	              0x55	                                push rbp	      1829	buffer.c	FUNCTION_24
0x2cf8	          0x4889e5	                            mov rbp, rsp	      1829	buffer.c	FUNCTION_24
0x2cfb	        0x4883ec10	                           sub rsp, 0x10	      1829	buffer.c	FUNCTION_24
0x2cff	        0x48897df8	                mov qword [rbp - 8], rdi	      1829	buffer.c	FUNCTION_24
0x2d03	        0x488b45f8	                mov rax, qword [rbp - 8]	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x2d07	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x2d0e	          0x4889c7	                            mov rdi, rax	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x2d11	      0xe800000000	                          call 0x4002d56	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x2d16	            0x85c0	                           test eax, eax	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x2d18	            0x7414	                            je 0x4002d6e	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x2d1a	      0xbf00000000	                              mov edi, 0	      1832	buffer.c	FUNCTION_24	CALL_3
0x2d1f	      0xe800000000	                          call 0x4002d64	      1832	buffer.c	FUNCTION_24	CALL_3
0x2d24	          0x4889c7	                            mov rdi, rax	      1832	buffer.c	FUNCTION_24	CALL_3
0x2d27	      0xe800000000	                          call 0x4002d6c	      1832	buffer.c	FUNCTION_24	CALL_3
0x2d2c	            0xeb12	                           jmp 0x4002d80	      1836	buffer.c	FUNCTION_24
0x2d2e	      0xbf00000000	                              mov edi, 0	      1835	buffer.c	FUNCTION_24	CALL_5
0x2d33	      0xe800000000	                          call 0x4002d78	      1835	buffer.c	FUNCTION_24	CALL_5
0x2d38	          0x4889c7	                            mov rdi, rax	      1835	buffer.c	FUNCTION_24	CALL_5
0x2d3b	      0xe800000000	                          call 0x4002d80	      1835	buffer.c	FUNCTION_24	CALL_5
0x2d40	              0x90	                                     nop	      1836	buffer.c	FUNCTION_24
0x2d41	              0xc9	                                   leave	      1836	buffer.c	FUNCTION_24
0x2d42	              0xc3	                                     ret	      1836	buffer.c	FUNCTION_24
set_bufref	FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,0:SWITCH,0:DO,0	21
0x7c1	              0x55	                                push rbp	       360	buffer.c	FUNCTION_3
0x7c2	          0x4889e5	                            mov rbp, rsp	       360	buffer.c	FUNCTION_3
0x7c5	        0x48897df8	                mov qword [rbp - 8], rdi	       360	buffer.c	FUNCTION_3
0x7c9	        0x488975f0	             mov qword [rbp - 0x10], rsi	       360	buffer.c	FUNCTION_3
0x7cd	        0x488b45f8	                mov rax, qword [rbp - 8]	       361	buffer.c	FUNCTION_3
0x7d1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       361	buffer.c	FUNCTION_3
0x7d5	          0x488910	                    mov qword [rax], rdx	       361	buffer.c	FUNCTION_3
0x7d8	      0x48837df000	               cmp qword [rbp - 0x10], 0	       362	buffer.c	FUNCTION_3
0x7dd	            0x740c	                            je 0x400082b	       362	buffer.c	FUNCTION_3
0x7df	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       362	buffer.c	FUNCTION_3
0x7e3	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	       362	buffer.c	FUNCTION_3
0x7e9	            0xeb05	                           jmp 0x4000830	       362	buffer.c	FUNCTION_3
0x7eb	      0xb800000000	                              mov eax, 0	       362	buffer.c	FUNCTION_3
0x7f0	        0x488b55f8	                mov rdx, qword [rbp - 8]	       362	buffer.c	FUNCTION_3
0x7f4	          0x894208	                mov dword [rdx + 8], eax	       362	buffer.c	FUNCTION_3
0x7f7	    0x8b1500000000	            mov edx, dword [0x0400083d] 	       363	buffer.c	FUNCTION_3
0x7fd	        0x488b45f8	                mov rax, qword [rbp - 8]	       363	buffer.c	FUNCTION_3
0x801	          0x89500c	              mov dword [rax + 0xc], edx	       363	buffer.c	FUNCTION_3
0x804	              0x90	                                     nop	       364	buffer.c	FUNCTION_3
0x805	              0x5d	                                 pop rbp	       364	buffer.c	FUNCTION_3
0x806	              0xc3	                                     ret	       364	buffer.c	FUNCTION_3
free_buf_options	FOR,0:WHILE,0:ELSE,0:functions,0:IF,1:CALL,52:SWITCH,0:DO,0	224
0x36bc	              0x55	                                push rbp	      2119	buffer.c	FUNCTION_27
0x36bd	          0x4889e5	                            mov rbp, rsp	      2119	buffer.c	FUNCTION_27
0x36c0	        0x4883ec10	                           sub rsp, 0x10	      2119	buffer.c	FUNCTION_27
0x36c4	        0x48897df8	                mov qword [rbp - 8], rdi	      2119	buffer.c	FUNCTION_27
0x36c8	          0x8975f4	              mov dword [rbp - 0xc], esi	      2119	buffer.c	FUNCTION_27
0x36cb	        0x837df400	                cmp dword [rbp - 0xc], 0	      2120	buffer.c	FUNCTION_27	IF_1
0x36cf	            0x7448	                            je 0x4003759	      2120	buffer.c	FUNCTION_27	IF_1
0x36d1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2123	buffer.c	FUNCTION_27	IF_1	CALL_1
0x36d5	    0x480588140000	                         add rax, 0x1488	      2123	buffer.c	FUNCTION_27	IF_1	CALL_1
0x36db	          0x4889c7	                            mov rdi, rax	      2123	buffer.c	FUNCTION_27	IF_1	CALL_1
0x36de	      0xe800000000	                          call 0x4003723	      2123	buffer.c	FUNCTION_27	IF_1	CALL_1
0x36e3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2125	buffer.c	FUNCTION_27	IF_1	CALL_2
0x36e7	    0x480590140000	                         add rax, 0x1490	      2125	buffer.c	FUNCTION_27	IF_1	CALL_2
0x36ed	          0x4889c7	                            mov rdi, rax	      2125	buffer.c	FUNCTION_27	IF_1	CALL_2
0x36f0	      0xe800000000	                          call 0x4003735	      2125	buffer.c	FUNCTION_27	IF_1	CALL_2
0x36f5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2126	buffer.c	FUNCTION_27	IF_1	CALL_3
0x36f9	    0x480510140000	                         add rax, 0x1410	      2126	buffer.c	FUNCTION_27	IF_1	CALL_3
0x36ff	          0x4889c7	                            mov rdi, rax	      2126	buffer.c	FUNCTION_27	IF_1	CALL_3
0x3702	      0xe800000000	                          call 0x4003747	      2126	buffer.c	FUNCTION_27	IF_1	CALL_3
0x3707	        0x488b45f8	                mov rax, qword [rbp - 8]	      2127	buffer.c	FUNCTION_27	IF_1	CALL_4
0x370b	    0x480518140000	                         add rax, 0x1418	      2127	buffer.c	FUNCTION_27	IF_1	CALL_4
0x3711	          0x4889c7	                            mov rdi, rax	      2127	buffer.c	FUNCTION_27	IF_1	CALL_4
0x3714	      0xe800000000	                          call 0x4003759	      2127	buffer.c	FUNCTION_27	IF_1	CALL_4
0x3719	        0x488b45f8	                mov rax, qword [rbp - 8]	      2130	buffer.c	FUNCTION_27	CALL_5
0x371d	    0x4805c0140000	                         add rax, 0x14c0	      2130	buffer.c	FUNCTION_27	CALL_5
0x3723	          0x4889c7	                            mov rdi, rax	      2130	buffer.c	FUNCTION_27	CALL_5
0x3726	      0xe800000000	                          call 0x400376b	      2130	buffer.c	FUNCTION_27	CALL_5
0x372b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2131	buffer.c	FUNCTION_27	CALL_6
0x372f	    0x4805c8140000	                         add rax, 0x14c8	      2131	buffer.c	FUNCTION_27	CALL_6
0x3735	          0x4889c7	                            mov rdi, rax	      2131	buffer.c	FUNCTION_27	CALL_6
0x3738	      0xe800000000	                          call 0x400377d	      2131	buffer.c	FUNCTION_27	CALL_6
0x373d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2133	buffer.c	FUNCTION_27	CALL_7
0x3741	    0x4805d0140000	                         add rax, 0x14d0	      2133	buffer.c	FUNCTION_27	CALL_7
0x3747	          0x4889c7	                            mov rdi, rax	      2133	buffer.c	FUNCTION_27	CALL_7
0x374a	      0xe800000000	                          call 0x400378f	      2133	buffer.c	FUNCTION_27	CALL_7
0x374f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2137	buffer.c	FUNCTION_27	CALL_8
0x3753	    0x4805e0140000	                         add rax, 0x14e0	      2137	buffer.c	FUNCTION_27	CALL_8
0x3759	          0x4889c7	                            mov rdi, rax	      2137	buffer.c	FUNCTION_27	CALL_8
0x375c	      0xe800000000	                          call 0x40037a1	      2137	buffer.c	FUNCTION_27	CALL_8
0x3761	        0x488b45f8	                mov rax, qword [rbp - 8]	      2138	buffer.c	FUNCTION_27	CALL_9
0x3765	    0x4805f0140000	                         add rax, 0x14f0	      2138	buffer.c	FUNCTION_27	CALL_9
0x376b	          0x4889c7	                            mov rdi, rax	      2138	buffer.c	FUNCTION_27	CALL_9
0x376e	      0xe800000000	                          call 0x40037b3	      2138	buffer.c	FUNCTION_27	CALL_9
0x3773	        0x488b45f8	                mov rax, qword [rbp - 8]	      2141	buffer.c	FUNCTION_27	CALL_10
0x3777	    0x480538170000	                         add rax, 0x1738	      2141	buffer.c	FUNCTION_27	CALL_10
0x377d	          0x4889c7	                            mov rdi, rax	      2141	buffer.c	FUNCTION_27	CALL_10
0x3780	      0xe800000000	                          call 0x40037c5	      2141	buffer.c	FUNCTION_27	CALL_10
0x3785	        0x488b45f8	                mov rax, qword [rbp - 8]	      2144	buffer.c	FUNCTION_27	CALL_11
0x3789	    0x480548170000	                         add rax, 0x1748	      2144	buffer.c	FUNCTION_27	CALL_11
0x378f	          0x4889c7	                            mov rdi, rax	      2144	buffer.c	FUNCTION_27	CALL_11
0x3792	      0xe800000000	                          call 0x40037d7	      2144	buffer.c	FUNCTION_27	CALL_11
0x3797	        0x488b45f8	                mov rax, qword [rbp - 8]	      2146	buffer.c	FUNCTION_27	CALL_12
0x379b	    0x4805f8140000	                         add rax, 0x14f8	      2146	buffer.c	FUNCTION_27	CALL_12
0x37a1	          0x4889c7	                            mov rdi, rax	      2146	buffer.c	FUNCTION_27	CALL_12
0x37a4	      0xe800000000	                          call 0x40037e9	      2146	buffer.c	FUNCTION_27	CALL_12
0x37a9	        0x488b45f8	                mov rax, qword [rbp - 8]	      2148	buffer.c	FUNCTION_27	CALL_13
0x37ad	    0x480500150000	                         add rax, 0x1500	      2148	buffer.c	FUNCTION_27	CALL_13
0x37b3	          0x4889c7	                            mov rdi, rax	      2148	buffer.c	FUNCTION_27	CALL_13
0x37b6	      0xe800000000	                          call 0x40037fb	      2148	buffer.c	FUNCTION_27	CALL_13
0x37bb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2151	buffer.c	FUNCTION_27	CALL_14
0x37bf	    0x480510150000	                         add rax, 0x1510	      2151	buffer.c	FUNCTION_27	CALL_14
0x37c5	          0x4889c7	                            mov rdi, rax	      2151	buffer.c	FUNCTION_27	CALL_14
0x37c8	      0xe800000000	                          call 0x400380d	      2151	buffer.c	FUNCTION_27	CALL_14
0x37cd	        0x488b45f8	                mov rax, qword [rbp - 8]	      2153	buffer.c	FUNCTION_27	CALL_15
0x37d1	    0x480518150000	                         add rax, 0x1518	      2153	buffer.c	FUNCTION_27	CALL_15
0x37d7	          0x4889c7	                            mov rdi, rax	      2153	buffer.c	FUNCTION_27	CALL_15
0x37da	      0xe800000000	                          call 0x400381f	      2153	buffer.c	FUNCTION_27	CALL_15
0x37df	        0x488b45f8	                mov rax, qword [rbp - 8]	      2154	buffer.c	FUNCTION_27	CALL_16
0x37e3	    0x480530150000	                         add rax, 0x1530	      2154	buffer.c	FUNCTION_27	CALL_16
0x37e9	          0x4889c7	                            mov rdi, rax	      2154	buffer.c	FUNCTION_27	CALL_16
0x37ec	      0xe800000000	                          call 0x4003831	      2154	buffer.c	FUNCTION_27	CALL_16
0x37f1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2155	buffer.c	FUNCTION_27	CALL_17
0x37f5	    0x4805a0140000	                         add rax, 0x14a0	      2155	buffer.c	FUNCTION_27	CALL_17
0x37fb	          0x4889c7	                            mov rdi, rax	      2155	buffer.c	FUNCTION_27	CALL_17
0x37fe	      0xe800000000	                          call 0x4003843	      2155	buffer.c	FUNCTION_27	CALL_17
0x3803	        0x488b45f8	                mov rax, qword [rbp - 8]	      2156	buffer.c	FUNCTION_27	CALL_18
0x3807	    0x4805a8140000	                         add rax, 0x14a8	      2156	buffer.c	FUNCTION_27	CALL_18
0x380d	          0x4889c7	                            mov rdi, rax	      2156	buffer.c	FUNCTION_27	CALL_18
0x3810	      0xe800000000	                          call 0x4003855	      2156	buffer.c	FUNCTION_27	CALL_18
0x3815	        0x488b45f8	                mov rax, qword [rbp - 8]	      2157	buffer.c	FUNCTION_27	CALL_19
0x3819	    0x4805b8140000	                         add rax, 0x14b8	      2157	buffer.c	FUNCTION_27	CALL_19
0x381f	          0x4889c7	                            mov rdi, rax	      2157	buffer.c	FUNCTION_27	CALL_19
0x3822	      0xe800000000	                          call 0x4003867	      2157	buffer.c	FUNCTION_27	CALL_19
0x3827	        0x488b45f8	                mov rax, qword [rbp - 8]	      2159	buffer.c	FUNCTION_27	CALL_20
0x382b	    0x4805e8150000	                         add rax, 0x15e8	      2159	buffer.c	FUNCTION_27	CALL_20
0x3831	          0x4889c7	                            mov rdi, rax	      2159	buffer.c	FUNCTION_27	CALL_20
0x3834	      0xe800000000	                          call 0x4003879	      2159	buffer.c	FUNCTION_27	CALL_20
0x3839	        0x488b45f8	                mov rax, qword [rbp - 8]	      2160	buffer.c	FUNCTION_27	CALL_21
0x383d	    0x480590120000	                         add rax, 0x1290	      2160	buffer.c	FUNCTION_27	CALL_21
0x3843	          0x4889c7	                            mov rdi, rax	      2160	buffer.c	FUNCTION_27	CALL_21
0x3846	      0xe800000000	                          call 0x400388b	      2160	buffer.c	FUNCTION_27	CALL_21
0x384b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2161	buffer.c	FUNCTION_27	CALL_22
0x384f	    0x480590120000	                         add rax, 0x1290	      2161	buffer.c	FUNCTION_27	CALL_22
0x3855	          0x4889c7	                            mov rdi, rax	      2161	buffer.c	FUNCTION_27	CALL_22
0x3858	      0xe800000000	                          call 0x400389d	      2161	buffer.c	FUNCTION_27	CALL_22
0x385d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2164	buffer.c	FUNCTION_27	CALL_23
0x3861	    0x480548140000	                         add rax, 0x1448	      2164	buffer.c	FUNCTION_27	CALL_23
0x3867	          0x4889c7	                            mov rdi, rax	      2164	buffer.c	FUNCTION_27	CALL_23
0x386a	      0xe800000000	                          call 0x40038af	      2164	buffer.c	FUNCTION_27	CALL_23
0x386f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2167	buffer.c	FUNCTION_27	CALL_24
0x3873	    0x480550140000	                         add rax, 0x1450	      2167	buffer.c	FUNCTION_27	CALL_24
0x3879	          0x4889c7	                            mov rdi, rax	      2167	buffer.c	FUNCTION_27	CALL_24
0x387c	      0xe800000000	                          call 0x40038c1	      2167	buffer.c	FUNCTION_27	CALL_24
0x3881	        0x488b45f8	                mov rax, qword [rbp - 8]	      2169	buffer.c	FUNCTION_27	CALL_25
0x3885	    0x480548150000	                         add rax, 0x1548	      2169	buffer.c	FUNCTION_27	CALL_25
0x388b	          0x4889c7	                            mov rdi, rax	      2169	buffer.c	FUNCTION_27	CALL_25
0x388e	      0xe800000000	                          call 0x40038d3	      2169	buffer.c	FUNCTION_27	CALL_25
0x3893	        0x488b45f8	                mov rax, qword [rbp - 8]	      2171	buffer.c	FUNCTION_27	CALL_26
0x3897	    0x4805a0150000	                         add rax, 0x15a0	      2171	buffer.c	FUNCTION_27	CALL_26
0x389d	          0x4889c7	                            mov rdi, rax	      2171	buffer.c	FUNCTION_27	CALL_26
0x38a0	      0xe800000000	                          call 0x40038e5	      2171	buffer.c	FUNCTION_27	CALL_26
0x38a5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2172	buffer.c	FUNCTION_27	CALL_27
0x38a9	    0x4805181c0000	                         add rax, 0x1c18	      2172	buffer.c	FUNCTION_27	CALL_27
0x38af	          0x4889c7	                            mov rdi, rax	      2172	buffer.c	FUNCTION_27	CALL_27
0x38b2	      0xe800000000	                          call 0x40038f7	      2172	buffer.c	FUNCTION_27	CALL_27
0x38b7	        0x488b45f8	                mov rax, qword [rbp - 8]	      2175	buffer.c	FUNCTION_27	CALL_28
0x38bb	    0x4805d01b0000	                         add rax, 0x1bd0	      2175	buffer.c	FUNCTION_27	CALL_28
0x38c1	          0x4889c7	                            mov rdi, rax	      2175	buffer.c	FUNCTION_27	CALL_28
0x38c4	      0xe800000000	                          call 0x4003909	      2175	buffer.c	FUNCTION_27	CALL_28
0x38c9	        0x488b45f8	                mov rax, qword [rbp - 8]	      2176	buffer.c	FUNCTION_27	CALL_29
0x38cd	    0x4805e01b0000	                         add rax, 0x1be0	      2176	buffer.c	FUNCTION_27	CALL_29
0x38d3	          0x4889c7	                            mov rdi, rax	      2176	buffer.c	FUNCTION_27	CALL_29
0x38d6	      0xe800000000	                          call 0x400391b	      2176	buffer.c	FUNCTION_27	CALL_29
0x38db	        0x488b45f8	                mov rax, qword [rbp - 8]	      2177	buffer.c	FUNCTION_27	CALL_30
0x38df	    0x488b80d81b00	          mov rax, qword [rax + 0x1bd8] 	      2177	buffer.c	FUNCTION_27	CALL_30
0x38e6	          0x4889c7	                            mov rdi, rax	      2177	buffer.c	FUNCTION_27	CALL_30
0x38e9	      0xe800000000	                          call 0x400392e	      2177	buffer.c	FUNCTION_27	CALL_30
0x38ee	        0x488b45f8	                mov rax, qword [rbp - 8]	      2178	buffer.c	FUNCTION_27
0x38f2	    0x48c780d81b00	            mov qword [rax + 0x1bd8], 0 	      2178	buffer.c	FUNCTION_27
0x38fd	        0x488b45f8	                mov rax, qword [rbp - 8]	      2179	buffer.c	FUNCTION_27	CALL_31
0x3901	    0x4805e81b0000	                         add rax, 0x1be8	      2179	buffer.c	FUNCTION_27	CALL_31
0x3907	          0x4889c7	                            mov rdi, rax	      2179	buffer.c	FUNCTION_27	CALL_31
0x390a	      0xe800000000	                          call 0x400394f	      2179	buffer.c	FUNCTION_27	CALL_31
0x390f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2182	buffer.c	FUNCTION_27	CALL_32
0x3913	    0x480588150000	                         add rax, 0x1588	      2182	buffer.c	FUNCTION_27	CALL_32
0x3919	          0x4889c7	                            mov rdi, rax	      2182	buffer.c	FUNCTION_27	CALL_32
0x391c	      0xe800000000	                          call 0x4003961	      2182	buffer.c	FUNCTION_27	CALL_32
0x3921	        0x488b45f8	                mov rax, qword [rbp - 8]	      2184	buffer.c	FUNCTION_27	CALL_33
0x3925	    0x480598140000	                         add rax, 0x1498	      2184	buffer.c	FUNCTION_27	CALL_33
0x392b	          0x4889c7	                            mov rdi, rax	      2184	buffer.c	FUNCTION_27	CALL_33
0x392e	      0xe800000000	                          call 0x4003973	      2184	buffer.c	FUNCTION_27	CALL_33
0x3933	        0x488b45f8	                mov rax, qword [rbp - 8]	      2186	buffer.c	FUNCTION_27	CALL_34
0x3937	    0x480538140000	                         add rax, 0x1438	      2186	buffer.c	FUNCTION_27	CALL_34
0x393d	          0x4889c7	                            mov rdi, rax	      2186	buffer.c	FUNCTION_27	CALL_34
0x3940	      0xe800000000	                          call 0x4003985	      2186	buffer.c	FUNCTION_27	CALL_34
0x3945	        0x488b45f8	                mov rax, qword [rbp - 8]	      2187	buffer.c	FUNCTION_27	CALL_35
0x3949	    0x480530140000	                         add rax, 0x1430	      2187	buffer.c	FUNCTION_27	CALL_35
0x394f	          0x4889c7	                            mov rdi, rax	      2187	buffer.c	FUNCTION_27	CALL_35
0x3952	      0xe800000000	                          call 0x4003997	      2187	buffer.c	FUNCTION_27	CALL_35
0x3957	        0x488b45f8	                mov rax, qword [rbp - 8]	      2190	buffer.c	FUNCTION_27	CALL_36
0x395b	    0x480540140000	                         add rax, 0x1440	      2190	buffer.c	FUNCTION_27	CALL_36
0x3961	          0x4889c7	                            mov rdi, rax	      2190	buffer.c	FUNCTION_27	CALL_36
0x3964	      0xe800000000	                          call 0x40039a9	      2190	buffer.c	FUNCTION_27	CALL_36
0x3969	        0x488b45f8	                mov rax, qword [rbp - 8]	      2193	buffer.c	FUNCTION_27	CALL_37
0x396d	    0x480558140000	                         add rax, 0x1458	      2193	buffer.c	FUNCTION_27	CALL_37
0x3973	          0x4889c7	                            mov rdi, rax	      2193	buffer.c	FUNCTION_27	CALL_37
0x3976	      0xe800000000	                          call 0x40039bb	      2193	buffer.c	FUNCTION_27	CALL_37
0x397b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2196	buffer.c	FUNCTION_27	CALL_38
0x397f	    0x480560140000	                         add rax, 0x1460	      2196	buffer.c	FUNCTION_27	CALL_38
0x3985	          0x4889c7	                            mov rdi, rax	      2196	buffer.c	FUNCTION_27	CALL_38
0x3988	      0xe800000000	                          call 0x40039cd	      2196	buffer.c	FUNCTION_27	CALL_38
0x398d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2197	buffer.c	FUNCTION_27	CALL_39
0x3991	    0x480568140000	                         add rax, 0x1468	      2197	buffer.c	FUNCTION_27	CALL_39
0x3997	          0x4889c7	                            mov rdi, rax	      2197	buffer.c	FUNCTION_27	CALL_39
0x399a	      0xe800000000	                          call 0x40039df	      2197	buffer.c	FUNCTION_27	CALL_39
0x399f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2200	buffer.c	FUNCTION_27	CALL_40
0x39a3	    0x4805f0150000	                         add rax, 0x15f0	      2200	buffer.c	FUNCTION_27	CALL_40
0x39a9	          0x4889c7	                            mov rdi, rax	      2200	buffer.c	FUNCTION_27	CALL_40
0x39ac	      0xe800000000	                          call 0x40039f1	      2200	buffer.c	FUNCTION_27	CALL_40
0x39b1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2201	buffer.c	FUNCTION_27	CALL_41
0x39b5	    0x4805f8150000	                         add rax, 0x15f8	      2201	buffer.c	FUNCTION_27	CALL_41
0x39bb	          0x4889c7	                            mov rdi, rax	      2201	buffer.c	FUNCTION_27	CALL_41
0x39be	      0xe800000000	                          call 0x4003a03	      2201	buffer.c	FUNCTION_27	CALL_41
0x39c3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2202	buffer.c	FUNCTION_27	CALL_42
0x39c7	    0x480500160000	                         add rax, 0x1600	      2202	buffer.c	FUNCTION_27	CALL_42
0x39cd	          0x4889c7	                            mov rdi, rax	      2202	buffer.c	FUNCTION_27	CALL_42
0x39d0	      0xe800000000	                          call 0x4003a15	      2202	buffer.c	FUNCTION_27	CALL_42
0x39d5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2204	buffer.c	FUNCTION_27	CALL_43
0x39d9	    0x480508160000	                         add rax, 0x1608	      2204	buffer.c	FUNCTION_27	CALL_43
0x39df	          0x4889c7	                            mov rdi, rax	      2204	buffer.c	FUNCTION_27	CALL_43
0x39e2	      0xe800000000	                          call 0x4003a27	      2204	buffer.c	FUNCTION_27	CALL_43
0x39e7	        0x488b45f8	                mov rax, qword [rbp - 8]	      2205	buffer.c	FUNCTION_27	CALL_44
0x39eb	    0x480510160000	                         add rax, 0x1610	      2205	buffer.c	FUNCTION_27	CALL_44
0x39f1	          0x4889c7	                            mov rdi, rax	      2205	buffer.c	FUNCTION_27	CALL_44
0x39f4	      0xe800000000	                          call 0x4003a39	      2205	buffer.c	FUNCTION_27	CALL_44
0x39f9	        0x488b45f8	                mov rax, qword [rbp - 8]	      2206	buffer.c	FUNCTION_27	CALL_45
0x39fd	    0x480520160000	                         add rax, 0x1620	      2206	buffer.c	FUNCTION_27	CALL_45
0x3a03	          0x4889c7	                            mov rdi, rax	      2206	buffer.c	FUNCTION_27	CALL_45
0x3a06	      0xe800000000	                          call 0x4003a4b	      2206	buffer.c	FUNCTION_27	CALL_45
0x3a0b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2207	buffer.c	FUNCTION_27	CALL_46
0x3a0f	    0x480528160000	                         add rax, 0x1628	      2207	buffer.c	FUNCTION_27	CALL_46
0x3a15	          0x4889c7	                            mov rdi, rax	      2207	buffer.c	FUNCTION_27	CALL_46
0x3a18	      0xe800000000	                          call 0x4003a5d	      2207	buffer.c	FUNCTION_27	CALL_46
0x3a1d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2209	buffer.c	FUNCTION_27	CALL_47
0x3a21	    0x480538160000	                         add rax, 0x1638	      2209	buffer.c	FUNCTION_27	CALL_47
0x3a27	          0x4889c7	                            mov rdi, rax	      2209	buffer.c	FUNCTION_27	CALL_47
0x3a2a	      0xe800000000	                          call 0x4003a6f	      2209	buffer.c	FUNCTION_27	CALL_47
0x3a2f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2210	buffer.c	FUNCTION_27	CALL_48
0x3a33	    0x480540160000	                         add rax, 0x1640	      2210	buffer.c	FUNCTION_27	CALL_48
0x3a39	          0x4889c7	                            mov rdi, rax	      2210	buffer.c	FUNCTION_27	CALL_48
0x3a3c	      0xe800000000	                          call 0x4003a81	      2210	buffer.c	FUNCTION_27	CALL_48
0x3a41	        0x488b45f8	                mov rax, qword [rbp - 8]	      2213	buffer.c	FUNCTION_27	CALL_49
0x3a45	    0x480558150000	                         add rax, 0x1558	      2213	buffer.c	FUNCTION_27	CALL_49
0x3a4b	          0x4889c7	                            mov rdi, rax	      2213	buffer.c	FUNCTION_27	CALL_49
0x3a4e	      0xe800000000	                          call 0x4003a93	      2213	buffer.c	FUNCTION_27	CALL_49
0x3a53	        0x488b45f8	                mov rax, qword [rbp - 8]	      2215	buffer.c	FUNCTION_27
0x3a57	    0xc78018160000	   mov dword [rax + 0x1618], 0xffffffff 	      2215	buffer.c	FUNCTION_27
0x3a61	        0x488b45f8	                mov rax, qword [rbp - 8]	      2216	buffer.c	FUNCTION_27
0x3a65	    0x48c780481600	mov qword [rax + 0x1648], 0xfffffffffffe1dc0 	      2216	buffer.c	FUNCTION_27
0x3a70	        0x488b45f8	                mov rax, qword [rbp - 8]	      2218	buffer.c	FUNCTION_27	CALL_50
0x3a74	    0x480558160000	                         add rax, 0x1658	      2218	buffer.c	FUNCTION_27	CALL_50
0x3a7a	          0x4889c7	                            mov rdi, rax	      2218	buffer.c	FUNCTION_27	CALL_50
0x3a7d	      0xe800000000	                          call 0x4003ac2	      2218	buffer.c	FUNCTION_27	CALL_50
0x3a82	        0x488b45f8	                mov rax, qword [rbp - 8]	      2220	buffer.c	FUNCTION_27	CALL_51
0x3a86	    0x4805f8130000	                         add rax, 0x13f8	      2220	buffer.c	FUNCTION_27	CALL_51
0x3a8c	          0x4889c7	                            mov rdi, rax	      2220	buffer.c	FUNCTION_27	CALL_51
0x3a8f	      0xe800000000	                          call 0x4003ad4	      2220	buffer.c	FUNCTION_27	CALL_51
0x3a94	        0x488b45f8	                mov rax, qword [rbp - 8]	      2222	buffer.c	FUNCTION_27	CALL_52
0x3a98	    0x480528150000	                         add rax, 0x1528	      2222	buffer.c	FUNCTION_27	CALL_52
0x3a9e	          0x4889c7	                            mov rdi, rax	      2222	buffer.c	FUNCTION_27	CALL_52
0x3aa1	      0xe800000000	                          call 0x4003ae6	      2222	buffer.c	FUNCTION_27	CALL_52
0x3aa6	              0x90	                                     nop	      2224	buffer.c	FUNCTION_27
0x3aa7	              0xc9	                                   leave	      2224	buffer.c	FUNCTION_27
0x3aa8	              0xc3	                                     ret	      2224	buffer.c	FUNCTION_27
buflist_getfpos	FOR,0:WHILE,0:ELSE,1:functions,0:IF,1:CALL,3:SWITCH,0:DO,0	30
0x3d45	              0x55	                                push rbp	      2333	buffer.c	FUNCTION_29
0x3d46	          0x4889e5	                            mov rbp, rsp	      2333	buffer.c	FUNCTION_29
0x3d49	        0x4883ec10	                           sub rsp, 0x10	      2333	buffer.c	FUNCTION_29
0x3d4d	    0x488b05000000	            mov rax, qword [0x04003d94] 	      2336	buffer.c	FUNCTION_29	CALL_1
0x3d54	          0x4889c7	                            mov rdi, rax	      2336	buffer.c	FUNCTION_29	CALL_1
0x3d57	      0xe800000000	                          call 0x4003d9c	      2336	buffer.c	FUNCTION_29	CALL_1
0x3d5c	        0x488945f8	                mov qword [rbp - 8], rax	      2336	buffer.c	FUNCTION_29	CALL_1
0x3d60	    0x488b05000000	            mov rax, qword [0x04003da7] 	      2338	buffer.c	FUNCTION_29
0x3d67	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2338	buffer.c	FUNCTION_29
0x3d6b	          0x488b12	                    mov rdx, qword [rdx]	      2338	buffer.c	FUNCTION_29
0x3d6e	        0x48895038	             mov qword [rax + 0x38], rdx	      2338	buffer.c	FUNCTION_29
0x3d72	      0xe800000000	                          call 0x4003db7	      2339	buffer.c	FUNCTION_29	CALL_2
0x3d77	    0x8b0500000000	            mov eax, dword [0x04003dbd] 	      2341	buffer.c	FUNCTION_29	IF_1
0x3d7d	            0x85c0	                           test eax, eax	      2341	buffer.c	FUNCTION_29	IF_1
0x3d7f	            0x7410	                            je 0x4003dd1	      2341	buffer.c	FUNCTION_29	IF_1
0x3d81	    0x488b05000000	            mov rax, qword [0x04003dc8] 	      2342	buffer.c	FUNCTION_29	IF_1
0x3d88	    0xc74040000000	               mov dword [rax + 0x40], 0	      2342	buffer.c	FUNCTION_29	IF_1
0x3d8f	            0xeb32	                           jmp 0x4003e03	      2352	buffer.c	FUNCTION_29
0x3d91	    0x488b05000000	            mov rax, qword [0x04003dd8] 	      2345	buffer.c	FUNCTION_29	ELSE_1
0x3d98	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2345	buffer.c	FUNCTION_29	ELSE_1
0x3d9c	          0x8b5208	                mov edx, dword [rdx + 8]	      2345	buffer.c	FUNCTION_29	ELSE_1
0x3d9f	          0x895040	             mov dword [rax + 0x40], edx	      2345	buffer.c	FUNCTION_29	ELSE_1
0x3da2	      0xe800000000	                          call 0x4003de7	      2346	buffer.c	FUNCTION_29	ELSE_1	CALL_3
0x3da7	    0x488b05000000	            mov rax, qword [0x04003dee] 	      2348	buffer.c	FUNCTION_29	ELSE_1
0x3dae	    0xc74044000000	               mov dword [rax + 0x44], 0	      2348	buffer.c	FUNCTION_29	ELSE_1
0x3db5	    0x488b05000000	            mov rax, qword [0x04003dfc] 	      2350	buffer.c	FUNCTION_29	ELSE_1
0x3dbc	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      2350	buffer.c	FUNCTION_29	ELSE_1
0x3dc3	              0x90	                                     nop	      2352	buffer.c	FUNCTION_29
0x3dc4	              0xc9	                                   leave	      2352	buffer.c	FUNCTION_29
0x3dc5	              0xc3	                                     ret	      2352	buffer.c	FUNCTION_29
buf_set_name	FOR,0:WHILE,0:ELSE,0:functions,0:IF,1:CALL,5:SWITCH,0:DO,0	42
0x5733	              0x55	                                push rbp	      3173	buffer.c	FUNCTION_48
0x5734	          0x4889e5	                            mov rbp, rsp	      3173	buffer.c	FUNCTION_48
0x5737	        0x4883ec20	                           sub rsp, 0x20	      3173	buffer.c	FUNCTION_48
0x573b	          0x897dec	             mov dword [rbp - 0x14], edi	      3173	buffer.c	FUNCTION_48
0x573e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3173	buffer.c	FUNCTION_48
0x5742	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3176	buffer.c	FUNCTION_48	CALL_1
0x5745	            0x89c7	                            mov edi, eax	      3176	buffer.c	FUNCTION_48	CALL_1
0x5747	      0xe800000000	                          call 0x400578c	      3176	buffer.c	FUNCTION_48	CALL_1
0x574c	        0x488945f8	                mov qword [rbp - 8], rax	      3176	buffer.c	FUNCTION_48	CALL_1
0x5750	      0x48837df800	                  cmp qword [rbp - 8], 0	      3177	buffer.c	FUNCTION_48	IF_1
0x5755	     0xf848a000000	                            je 0x4005825	      3177	buffer.c	FUNCTION_48	IF_1
0x575b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3179	buffer.c	FUNCTION_48	IF_1	CALL_2
0x575f	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3179	buffer.c	FUNCTION_48	IF_1	CALL_2
0x5766	          0x4889c7	                            mov rdi, rax	      3179	buffer.c	FUNCTION_48	IF_1	CALL_2
0x5769	      0xe800000000	                          call 0x40057ae	      3179	buffer.c	FUNCTION_48	IF_1	CALL_2
0x576e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3180	buffer.c	FUNCTION_48	IF_1	CALL_3
0x5772	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      3180	buffer.c	FUNCTION_48	IF_1	CALL_3
0x5779	          0x4889c7	                            mov rdi, rax	      3180	buffer.c	FUNCTION_48	IF_1	CALL_3
0x577c	      0xe800000000	                          call 0x40057c1	      3180	buffer.c	FUNCTION_48	IF_1	CALL_3
0x5781	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3181	buffer.c	FUNCTION_48	IF_1	CALL_4
0x5785	          0x4889c7	                            mov rdi, rax	      3181	buffer.c	FUNCTION_48	IF_1	CALL_4
0x5788	      0xe800000000	                          call 0x40057cd	      3181	buffer.c	FUNCTION_48	IF_1	CALL_4
0x578d	          0x4889c2	                            mov rdx, rax	      3181	buffer.c	FUNCTION_48	IF_1	CALL_4
0x5790	        0x488b45f8	                mov rax, qword [rbp - 8]	      3181	buffer.c	FUNCTION_48	IF_1	CALL_4
0x5794	    0x488990880000	             mov qword [rax + 0x88], rdx	      3181	buffer.c	FUNCTION_48	IF_1	CALL_4
0x579b	        0x488b45f8	                mov rax, qword [rbp - 8]	      3182	buffer.c	FUNCTION_48	IF_1
0x579f	    0x48c780900000	               mov qword [rax + 0x90], 0	      3182	buffer.c	FUNCTION_48	IF_1
0x57aa	        0x488b45f8	                mov rax, qword [rbp - 8]	      3185	buffer.c	FUNCTION_48	IF_1	CALL_5
0x57ae	    0x488d90900000	                   lea rdx, [rax + 0x90]	      3185	buffer.c	FUNCTION_48	IF_1	CALL_5
0x57b5	        0x488b45f8	                mov rax, qword [rbp - 8]	      3185	buffer.c	FUNCTION_48	IF_1	CALL_5
0x57b9	    0x488d88880000	                   lea rcx, [rax + 0x88]	      3185	buffer.c	FUNCTION_48	IF_1	CALL_5
0x57c0	        0x488b45f8	                mov rax, qword [rbp - 8]	      3185	buffer.c	FUNCTION_48	IF_1	CALL_5
0x57c4	          0x4889ce	                            mov rsi, rcx	      3185	buffer.c	FUNCTION_48	IF_1	CALL_5
0x57c7	          0x4889c7	                            mov rdi, rax	      3185	buffer.c	FUNCTION_48	IF_1	CALL_5
0x57ca	      0xe800000000	                          call 0x400580f	      3185	buffer.c	FUNCTION_48	IF_1	CALL_5
0x57cf	        0x488b45f8	                mov rax, qword [rbp - 8]	      3186	buffer.c	FUNCTION_48	IF_1
0x57d3	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      3186	buffer.c	FUNCTION_48	IF_1
0x57da	        0x488b45f8	                mov rax, qword [rbp - 8]	      3186	buffer.c	FUNCTION_48	IF_1
0x57de	    0x488990980000	             mov qword [rax + 0x98], rdx	      3186	buffer.c	FUNCTION_48	IF_1
0x57e5	              0x90	                                     nop	      3188	buffer.c	FUNCTION_48
0x57e6	              0xc9	                                   leave	      3188	buffer.c	FUNCTION_48
0x57e7	              0xc3	                                     ret	      3188	buffer.c	FUNCTION_48
buflist_findname_stat	FOR,1:WHILE,0:ELSE,0:functions,0:IF,1:CALL,1:SWITCH,0:DO,0	31
0x3e90	              0x55	                                push rbp	      2408	buffer.c	FUNCTION_32
0x3e91	          0x4889e5	                            mov rbp, rsp	      2408	buffer.c	FUNCTION_32
0x3e94	        0x4883ec20	                           sub rsp, 0x20	      2408	buffer.c	FUNCTION_32
0x3e98	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2408	buffer.c	FUNCTION_32
0x3e9c	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2408	buffer.c	FUNCTION_32
0x3ea0	    0x488b05000000	            mov rax, qword [0x04003ee7] 	      2413	buffer.c	FUNCTION_32	FOR_1
0x3ea7	        0x488945f8	                mov qword [rbp - 8], rax	      2413	buffer.c	FUNCTION_32	FOR_1
0x3eab	            0xeb3d	                           jmp 0x4003f2a	      2413	buffer.c	FUNCTION_32	FOR_1
0x3ead	        0x488b45f8	                mov rax, qword [rbp - 8]	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x3eb1	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x3eb4	      0x2580000000	                           and eax, 0x80	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x3eb9	            0x85c0	                           test eax, eax	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x3ebb	            0x7521	                           jne 0x4003f1e	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x3ebd	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x3ec1	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x3ec5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x3ec9	          0x4889ce	                            mov rsi, rcx	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x3ecc	          0x4889c7	                            mov rdi, rax	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x3ecf	      0xe8f11a0000	                  call sym.otherfile_buf	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x3ed4	            0x85c0	                           test eax, eax	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x3ed6	            0x7506	                           jne 0x4003f1e	      2414	buffer.c	FUNCTION_32	FOR_1	IF_1	CALL_1
0x3ed8	        0x488b45f8	                mov rax, qword [rbp - 8]	      2419	buffer.c	FUNCTION_32	FOR_1	IF_1
0x3edc	            0xeb18	                           jmp 0x4003f36	      2419	buffer.c	FUNCTION_32	FOR_1	IF_1
0x3ede	        0x488b45f8	                mov rax, qword [rbp - 8]	      2413	buffer.c	FUNCTION_32	FOR_1
0x3ee2	        0x488b4070	            mov rax, qword [rax + 0x70] 	      2413	buffer.c	FUNCTION_32	FOR_1
0x3ee6	        0x488945f8	                mov qword [rbp - 8], rax	      2413	buffer.c	FUNCTION_32	FOR_1
0x3eea	      0x48837df800	                  cmp qword [rbp - 8], 0	      2413	buffer.c	FUNCTION_32	FOR_1
0x3eef	            0x75bc	                           jne 0x4003eed	      2413	buffer.c	FUNCTION_32	FOR_1
0x3ef1	      0xb800000000	                              mov eax, 0	      2420	buffer.c	FUNCTION_32
0x3ef6	              0xc9	                                   leave	      2421	buffer.c	FUNCTION_32
0x3ef7	              0xc3	                                     ret	      2421	buffer.c	FUNCTION_32
buflist_findlnum	FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,1:SWITCH,0:DO,0	10
0x4d4b	              0x55	                                push rbp	      2943	buffer.c	ELSE_1	FUNCTION_44
0x4d4c	          0x4889e5	                            mov rbp, rsp	      2943	buffer.c	ELSE_1	FUNCTION_44
0x4d4f	        0x4883ec08	                              sub rsp, 8	      2943	buffer.c	ELSE_1	FUNCTION_44
0x4d53	        0x48897df8	                mov qword [rbp - 8], rdi	      2943	buffer.c	ELSE_1	FUNCTION_44
0x4d57	        0x488b45f8	                mov rax, qword [rbp - 8]	      2944	buffer.c	ELSE_1	FUNCTION_44	CALL_1
0x4d5b	          0x4889c7	                            mov rdi, rax	      2944	buffer.c	ELSE_1	FUNCTION_44	CALL_1
0x4d5e	      0xe800000000	                          call 0x4004da3	      2944	buffer.c	ELSE_1	FUNCTION_44	CALL_1
0x4d63	          0x488b00	                    mov rax, qword [rax]	      2944	buffer.c	ELSE_1	FUNCTION_44	CALL_1
0x4d66	              0xc9	                                   leave	      2945	buffer.c	ELSE_1	FUNCTION_44
0x4d67	              0xc3	                                     ret	      2945	buffer.c	ELSE_1	FUNCTION_44
bt_dontwrite_msg	FOR,0:WHILE,0:ELSE,0:functions,0:IF,1:CALL,3:SWITCH,0:DO,0	18
0xb741	              0x55	                                push rbp	      5644	buffer.c	FUNCTION_82
0xb742	          0x4889e5	                            mov rbp, rsp	      5644	buffer.c	FUNCTION_82
0xb745	        0x4883ec10	                           sub rsp, 0x10	      5644	buffer.c	FUNCTION_82
0xb749	        0x48897df8	                mov qword [rbp - 8], rdi	      5644	buffer.c	FUNCTION_82
0xb74d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5645	buffer.c	FUNCTION_82	IF_1	CALL_1
0xb751	          0x4889c7	                            mov rdi, rax	      5645	buffer.c	FUNCTION_82	IF_1	CALL_1
0xb754	      0xe800000000	                          call 0x400b799	      5645	buffer.c	FUNCTION_82	IF_1	CALL_1
0xb759	            0x85c0	                           test eax, eax	      5645	buffer.c	FUNCTION_82	IF_1	CALL_1
0xb75b	            0x7419	                            je 0x400b7b6	      5645	buffer.c	FUNCTION_82	IF_1	CALL_1
0xb75d	      0xbf00000000	                              mov edi, 0	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0xb762	      0xe800000000	                          call 0x400b7a7	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0xb767	          0x4889c7	                            mov rdi, rax	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0xb76a	      0xe800000000	                          call 0x400b7af	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0xb76f	      0xb801000000	                              mov eax, 1	      5648	buffer.c	FUNCTION_82	IF_1
0xb774	            0xeb05	                           jmp 0x400b7bb	      5648	buffer.c	FUNCTION_82	IF_1
0xb776	      0xb800000000	                              mov eax, 0	      5650	buffer.c	FUNCTION_82
0xb77b	              0xc9	                                   leave	      5651	buffer.c	FUNCTION_82
0xb77c	              0xc3	                                     ret	      5651	buffer.c	FUNCTION_82
bt_dontwrite	FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,0:SWITCH,0:DO,0	20
0xb700	              0x55	                                push rbp	      5638	buffer.c	FUNCTION_81
0xb701	          0x4889e5	                            mov rbp, rsp	      5638	buffer.c	FUNCTION_81
0xb704	        0x48897df8	                mov qword [rbp - 8], rdi	      5638	buffer.c	FUNCTION_81
0xb708	      0x48837df800	                  cmp qword [rbp - 8], 0	      5639	buffer.c	FUNCTION_81
0xb70d	            0x742b	                            je 0x400b77a	      5639	buffer.c	FUNCTION_81
0xb70f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5639	buffer.c	FUNCTION_81
0xb713	    0x488b80181400	          mov rax, qword [rax + 0x1418] 	      5639	buffer.c	FUNCTION_81
0xb71a	           0xfb600	                   movzx eax, byte [rax]	      5639	buffer.c	FUNCTION_81
0xb71d	            0x3c6e	                            cmp al, 0x6e	      5639	buffer.c	FUNCTION_81
0xb71f	            0x7412	                            je 0x400b773	      5639	buffer.c	FUNCTION_81
0xb721	        0x488b45f8	                mov rax, qword [rbp - 8]	      5639	buffer.c	FUNCTION_81
0xb725	    0x488b80181400	          mov rax, qword [rax + 0x1418] 	      5639	buffer.c	FUNCTION_81
0xb72c	           0xfb600	                   movzx eax, byte [rax]	      5639	buffer.c	FUNCTION_81
0xb72f	            0x3c74	                            cmp al, 0x74	      5639	buffer.c	FUNCTION_81
0xb731	            0x7507	                           jne 0x400b77a	      5639	buffer.c	FUNCTION_81
0xb733	      0xb801000000	                              mov eax, 1	      5639	buffer.c	FUNCTION_81
0xb738	            0xeb05	                           jmp 0x400b77f	      5639	buffer.c	FUNCTION_81
0xb73a	      0xb800000000	                              mov eax, 0	      5639	buffer.c	FUNCTION_81
0xb73f	              0x5d	                                 pop rbp	      5640	buffer.c	FUNCTION_81
0xb740	              0xc3	                                     ret	      5640	buffer.c	FUNCTION_81
ex_buffer_all	FOR,4:WHILE,0:ELSE,8:functions,0:IF,20:CALL,27:SWITCH,0:DO,0	346
0xa78e	              0x55	                                push rbp	      5121	buffer.c	FUNCTION_72
0xa78f	          0x4889e5	                            mov rbp, rsp	      5121	buffer.c	FUNCTION_72
0xa792	            0x4154	                                push r12	      5121	buffer.c	FUNCTION_72
0xa794	              0x53	                                push rbx	      5121	buffer.c	FUNCTION_72
0xa795	        0x4883c480	             add rsp, 0xffffffffffffff80	      5121	buffer.c	FUNCTION_72
0xa799	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      5121	buffer.c	FUNCTION_72
0xa7a0	    0x64488b042528	                mov rax, qword fs:[0x28]	      5121	buffer.c	FUNCTION_72
0xa7a9	        0x488945e8	             mov qword [rbp - 0x18], rax	      5121	buffer.c	FUNCTION_72
0xa7ad	            0x31c0	                            xor eax, eax	      5121	buffer.c	FUNCTION_72
0xa7af	    0xc74584010000	               mov dword [rbp - 0x7c], 1	      5124	buffer.c	FUNCTION_72
0xa7b6	    0xc74588000000	               mov dword [rbp - 0x78], 0	      5126	buffer.c	FUNCTION_72
0xa7bd	    0x8b0500000000	            mov eax, dword [0x0400a803] 	      5130	buffer.c	FUNCTION_72
0xa7c3	          0x894594	             mov dword [rbp - 0x6c], eax	      5130	buffer.c	FUNCTION_72
0xa7c6	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5133	buffer.c	FUNCTION_72	IF_1
0xa7cd	          0x8b4038	            mov eax, dword [rax + 0x38] 	      5133	buffer.c	FUNCTION_72	IF_1
0xa7d0	            0x85c0	                           test eax, eax	      5133	buffer.c	FUNCTION_72	IF_1
0xa7d2	            0x7509	                           jne 0x400a81d	      5133	buffer.c	FUNCTION_72	IF_1
0xa7d4	    0xc7458c0f2700	          mov dword [rbp - 0x74], 0x270f	      5134	buffer.c	FUNCTION_72	IF_1
0xa7db	            0xeb0e	                           jmp 0x400a82b	      5134	buffer.c	FUNCTION_72	IF_1
0xa7dd	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5136	buffer.c	FUNCTION_72	ELSE_1
0xa7e4	        0x488b4048	            mov rax, qword [rax + 0x48] 	      5136	buffer.c	FUNCTION_72	ELSE_1
0xa7e8	          0x89458c	             mov dword [rbp - 0x74], eax	      5136	buffer.c	FUNCTION_72	ELSE_1
0xa7eb	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5137	buffer.c	FUNCTION_72	IF_2
0xa7f2	          0x8b4020	            mov eax, dword [rax + 0x20] 	      5137	buffer.c	FUNCTION_72	IF_2
0xa7f5	      0x3de1010000	                          cmp eax, 0x1e1	      5137	buffer.c	FUNCTION_72	IF_2
0xa7fa	            0x7411	                            je 0x400a84d	      5137	buffer.c	FUNCTION_72	IF_2
0xa7fc	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5137	buffer.c	FUNCTION_72	IF_2
0xa803	          0x8b4020	            mov eax, dword [rax + 0x20] 	      5137	buffer.c	FUNCTION_72	IF_2
0xa806	      0x3dab010000	                          cmp eax, 0x1ab	      5137	buffer.c	FUNCTION_72	IF_2
0xa80b	            0x7509	                           jne 0x400a856	      5137	buffer.c	FUNCTION_72	IF_2
0xa80d	    0xc74590000000	               mov dword [rbp - 0x70], 0	      5138	buffer.c	FUNCTION_72	IF_2
0xa814	            0xeb07	                           jmp 0x400a85d	      5138	buffer.c	FUNCTION_72	IF_2
0xa816	    0xc74590010000	               mov dword [rbp - 0x70], 1	      5140	buffer.c	FUNCTION_72	ELSE_2
0xa81d	      0xe800000000	                          call 0x400a862	      5142	buffer.c	FUNCTION_72	CALL_1
0xa822	    0xc70500000000	               mov dword [0x0400a86c], 1	      5145	buffer.c	FUNCTION_72
0xa82c	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      5152	buffer.c	FUNCTION_72	IF_3
0xa830	            0x7e19	                           jle 0x400a88b	      5152	buffer.c	FUNCTION_72	IF_3
0xa832	    0x488b05000000	            mov rax, qword [0x0400a879] 	      5153	buffer.c	FUNCTION_72	CALL_2
0xa839	      0xba01000000	                              mov edx, 1	      5153	buffer.c	FUNCTION_72	CALL_2
0xa83e	      0xbe01000000	                              mov esi, 1	      5153	buffer.c	FUNCTION_72	CALL_2
0xa843	          0x4889c7	                            mov rdi, rax	      5153	buffer.c	FUNCTION_72	CALL_2
0xa846	      0xe800000000	                          call 0x400a88b	      5153	buffer.c	FUNCTION_72	CALL_2
0xa84b	    0x488b05000000	            mov rax, qword [0x0400a892] 	      5156	buffer.c	FUNCTION_72	FOR_1
0xa852	          0x488b00	                    mov rax, qword [rax]	      5156	buffer.c	FUNCTION_72	FOR_1
0xa855	        0x488945b8	             mov qword [rbp - 0x48], rax	      5156	buffer.c	FUNCTION_72	FOR_1
0xa859	    0x488b05000000	            mov rax, qword [0x0400a8a0] 	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0xa860	        0x488945a8	             mov qword [rbp - 0x58], rax	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0xa864	      0xe902010000	                           jmp 0x400a9ab	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0xa869	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5159	buffer.c	FUNCTION_72	FOR_1	FOR_2
0xa86d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5159	buffer.c	FUNCTION_72	FOR_1	FOR_2
0xa871	        0x488945b0	             mov qword [rbp - 0x50], rax	      5159	buffer.c	FUNCTION_72	FOR_1	FOR_2
0xa875	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa879	        0x488b4008	                mov rax, qword [rax + 8]	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa87d	          0x8b4078	            mov eax, dword [rax + 0x78] 	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa880	          0x83f801	                              cmp eax, 1	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa883	            0x7f7a	                            jg 0x400a93f	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa885	    0x8b0500000000	            mov eax, dword [0x0400a8cb] 	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa88b	          0x83e002	                              and eax, 2	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa88e	            0x85c0	                           test eax, eax	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa890	            0x7441	                            je 0x400a913	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa892	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa896	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa89c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa8a0	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa8a6	             0x1d0	                            add eax, edx	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa8a8	          0x4863d8	                         movsxd rbx, eax	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa8ab	    0x488b15000000	            mov rdx, qword [0x0400a8f2] 	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa8b2	    0x488b05000000	            mov rax, qword [0x0400a8f9] 	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa8b9	          0x4829c2	                            sub rdx, rax	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa8bc	          0x4989d4	                            mov r12, rdx	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa8bf	      0xe800000000	                          call 0x400a904	      5163	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_3
0xa8c4	            0x4898	                                    cdqe	      5163	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_3
0xa8c6	          0x4929c4	                            sub r12, rax	      5163	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_3
0xa8c9	          0x4c89e0	                            mov rax, r12	      5163	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_3
0xa8cc	          0x4839c3	                            cmp rbx, rax	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa8cf	            0x7c2e	                            jl 0x400a93f	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa8d1	            0xeb19	                           jmp 0x400a92c	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa8d3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5164	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa8d7	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      5164	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa8dd	          0x4863d0	                         movsxd rdx, eax	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa8e0	    0x488b05000000	            mov rax, qword [0x0400a927] 	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa8e7	          0x4839c2	                            cmp rdx, rax	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa8ea	            0x7513	                           jne 0x400a93f	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa8ec	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa8f0	            0x7e6d	                           jle 0x400a99f	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa8f2	    0x488b05000000	            mov rax, qword [0x0400a939] 	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa8f9	        0x483945a8	            cmp qword [rbp - 0x58], rax 	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa8fd	            0x7460	                            je 0x400a99f	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa8ff	    0x488b15000000	            mov rdx, qword [0x0400a946] 	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa906	    0x488b05000000	            mov rax, qword [0x0400a94d] 	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa90d	          0x4839c2	                            cmp rdx, rax	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa910	            0x744d	                            je 0x400a99f	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa912	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa916	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa919	            0x85c0	                           test eax, eax	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa91b	            0x7542	                           jne 0x400a99f	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa91d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa921	        0x488b4008	                mov rax, qword [rax + 8]	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa925	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa92b	            0x85c0	                           test eax, eax	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa92d	            0x7f30	                            jg 0x400a99f	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa92f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5168	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_4
0xa933	      0xbe00000000	                              mov esi, 0	      5168	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_4
0xa938	          0x4889c7	                            mov rdi, rax	      5168	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_4
0xa93b	      0xe800000000	                          call 0x400a980	      5168	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_4
0xa940	    0x488b05000000	            mov rax, qword [0x0400a987] 	      5169	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa947	        0x488945b0	             mov qword [rbp - 0x50], rax	      5169	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa94b	    0x488b05000000	            mov rax, qword [0x0400a992] 	      5171	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa952	        0x488945b8	             mov qword [rbp - 0x48], rax	      5171	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa956	    0xc74588000000	               mov dword [rbp - 0x78], 0	      5172	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa95d	            0xeb04	                           jmp 0x400a9a3	      5172	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0xa95f	        0x83458801	               add dword [rbp - 0x78], 1	      5175	buffer.c	FUNCTION_72	FOR_1	FOR_2	ELSE_3
0xa963	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0xa967	        0x488945a8	             mov qword [rbp - 0x58], rax	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0xa96b	      0x48837da800	               cmp qword [rbp - 0x58], 0	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0xa970	     0xf85f3feffff	                           jne 0x400a8a9	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0xa976	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      5179	buffer.c	FUNCTION_72	FOR_1	IF_5
0xa97a	            0x7422	                            je 0x400a9de	      5179	buffer.c	FUNCTION_72	FOR_1	IF_5
0xa97c	      0x48837db800	               cmp qword [rbp - 0x48], 0	      5179	buffer.c	FUNCTION_72	FOR_1	IF_5
0xa981	            0x741b	                            je 0x400a9de	      5179	buffer.c	FUNCTION_72	FOR_1	IF_5
0xa983	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5181	buffer.c	FUNCTION_72	FOR_1	CALL_5
0xa987	      0xba01000000	                              mov edx, 1	      5181	buffer.c	FUNCTION_72	FOR_1	CALL_5
0xa98c	      0xbe01000000	                              mov esi, 1	      5181	buffer.c	FUNCTION_72	FOR_1	CALL_5
0xa991	          0x4889c7	                            mov rdi, rax	      5181	buffer.c	FUNCTION_72	FOR_1	CALL_5
0xa994	      0xe800000000	                          call 0x400a9d9	      5181	buffer.c	FUNCTION_72	FOR_1	CALL_5
0xa999	      0xe9adfeffff	                           jmp 0x400a88b	      5182	buffer.c	FUNCTION_72	FOR_1
0xa99e	    0x8b0500000000	            mov eax, dword [0x0400a9e4] 	      5190	buffer.c	FUNCTION_72
0xa9a4	          0x83c001	                              add eax, 1	      5190	buffer.c	FUNCTION_72
0xa9a7	    0x890500000000	            mov dword [0x0400a9ed], eax 	      5190	buffer.c	FUNCTION_72
0xa9ad	    0x488b05000000	            mov rax, qword [0x0400a9f4] 	      5191	buffer.c	FUNCTION_72	CALL_6
0xa9b4	      0xbe00000000	                              mov esi, 0	      5191	buffer.c	FUNCTION_72	CALL_6
0xa9b9	          0x4889c7	                            mov rdi, rax	      5191	buffer.c	FUNCTION_72	CALL_6
0xa9bc	      0xe800000000	                          call 0x400aa01	      5191	buffer.c	FUNCTION_72	CALL_6
0xa9c1	    0x8b0500000000	            mov eax, dword [0x0400aa07] 	      5192	buffer.c	FUNCTION_72
0xa9c7	          0x83c001	                              add eax, 1	      5192	buffer.c	FUNCTION_72
0xa9ca	    0x890500000000	            mov dword [0x0400aa10], eax 	      5192	buffer.c	FUNCTION_72
0xa9d0	    0x488b05000000	            mov rax, qword [0x0400aa17] 	      5193	buffer.c	FUNCTION_72	FOR_3
0xa9d7	        0x488945a0	             mov qword [rbp - 0x60], rax	      5193	buffer.c	FUNCTION_72	FOR_3
0xa9db	      0xe9f2010000	                           jmp 0x400ac12	      5193	buffer.c	FUNCTION_72	FOR_3
0xa9e0	        0x837d9000	               cmp dword [rbp - 0x70], 0	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0xa9e4	            0x7511	                           jne 0x400aa37	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0xa9e6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0xa9ea	        0x488b4008	                mov rax, qword [rax + 8]	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0xa9ee	          0x4885c0	                           test rax, rax	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0xa9f1	     0xf84cb010000	                            je 0x400ac02	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0xa9f7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0xa9fb	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0xaa01	            0x85c0	                           test eax, eax	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0xaa03	     0xf84b9010000	                            je 0x400ac02	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0xaa09	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      5199	buffer.c	FUNCTION_72	FOR_3	IF_7
0xaa0d	            0x7422	                            je 0x400aa71	      5199	buffer.c	FUNCTION_72	FOR_3	IF_7
0xaa0f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5202	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0xaa13	          0x8b4078	            mov eax, dword [rax + 0x78] 	      5202	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0xaa16	            0x85c0	                           test eax, eax	      5202	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0xaa18	            0x7e0d	                           jle 0x400aa67	      5202	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0xaa1a	    0x488b05000000	            mov rax, qword [0x0400aa61] 	      5203	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0xaa21	        0x488945a8	             mov qword [rbp - 0x58], rax	      5203	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0xaa25	            0xeb58	                           jmp 0x400aabf	      5203	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0xaa27	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      5205	buffer.c	FUNCTION_72	FOR_3	IF_7	ELSE_4
0xaa2f	            0xeb4e	                           jmp 0x400aabf	      5205	buffer.c	FUNCTION_72	FOR_3	IF_7	ELSE_4
0xaa31	    0x488b05000000	            mov rax, qword [0x0400aa78] 	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0xaa38	        0x488945a8	             mov qword [rbp - 0x58], rax	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0xaa3c	            0xeb1a	                           jmp 0x400aa98	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0xaa3e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5211	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_9
0xaa42	        0x488b4008	                mov rax, qword [rax + 8]	      5211	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_9
0xaa46	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      5211	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_9
0xaa4a	            0x7415	                            je 0x400aaa1	      5211	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_9
0xaa4c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0xaa50	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0xaa54	        0x488945a8	             mov qword [rbp - 0x58], rax	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0xaa58	      0x48837da800	               cmp qword [rbp - 0x58], 0	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0xaa5d	            0x75df	                           jne 0x400aa7e	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0xaa5f	            0xeb01	                           jmp 0x400aaa2	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0xaa61	              0x90	                                     nop	      5212	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_9
0xaa62	      0x48837da800	               cmp qword [rbp - 0x58], 0	      5214	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_10
0xaa67	            0x7416	                            je 0x400aabf	      5214	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_10
0xaa69	    0x488b15000000	            mov rdx, qword [0x0400aab0] 	      5215	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_8
0xaa70	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5215	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_8
0xaa74	          0x4889d6	                            mov rsi, rdx	      5215	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_8
0xaa77	          0x4889c7	                            mov rdi, rax	      5215	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_8
0xaa7a	      0xe800000000	                          call 0x400aabf	      5215	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_8
0xaa7f	      0x48837da800	               cmp qword [rbp - 0x58], 0	      5218	buffer.c	FUNCTION_72	FOR_3	IF_11
0xaa84	     0xf85ee000000	                           jne 0x400abb8	      5218	buffer.c	FUNCTION_72	FOR_3	IF_11
0xaa8a	        0x837d8401	               cmp dword [rbp - 0x7c], 1	      5218	buffer.c	FUNCTION_72	FOR_3	IF_11
0xaa8e	     0xf85e4000000	                           jne 0x400abb8	      5218	buffer.c	FUNCTION_72	FOR_3	IF_11
0xaa94	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      5222	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_9
0xaa98	        0x488d45c0	                   lea rax, [rbp - 0x40]	      5222	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_9
0xaa9c	          0x4889d6	                            mov rsi, rdx	      5222	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_9
0xaa9f	          0x4889c7	                            mov rdi, rax	      5222	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_9
0xaaa2	      0xe800000000	                          call 0x400aae7	      5222	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_9
0xaaa7	    0x8b0500000000	            mov eax, dword [0x0400aaed] 	      5225	buffer.c	FUNCTION_72	FOR_3	IF_11
0xaaad	          0x894598	             mov dword [rbp - 0x68], eax	      5225	buffer.c	FUNCTION_72	FOR_3	IF_11
0xaab0	    0xc70500000000	               mov dword [0x0400aafa], 1	      5226	buffer.c	FUNCTION_72	FOR_3	IF_11
0xaaba	      0xbe21000000	                           mov esi, 0x21	      5227	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_10
0xaabf	      0xbf00000000	                              mov edi, 0	      5227	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_10
0xaac4	      0xe800000000	                          call 0x400ab09	      5227	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_10
0xaac9	          0x894584	             mov dword [rbp - 0x7c], eax	      5227	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_10
0xaacc	        0x83458801	               add dword [rbp - 0x78], 1	      5228	buffer.c	FUNCTION_72	FOR_3	IF_11
0xaad0	          0x8b4598	             mov eax, dword [rbp - 0x68]	      5229	buffer.c	FUNCTION_72	FOR_3	IF_11
0xaad3	    0x890500000000	            mov dword [0x0400ab19], eax 	      5229	buffer.c	FUNCTION_72	FOR_3	IF_11
0xaad9	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      5230	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_12
0xaadd	     0xf84e2000000	                            je 0x400ac05	      5230	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_12
0xaae3	    0xc70500000000	               mov dword [0x0400ab2d], 1	      5235	buffer.c	FUNCTION_72	FOR_3	IF_11
0xaaed	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5237	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_11
0xaaf1	      0xbe00000000	                              mov esi, 0	      5237	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_11
0xaaf6	          0x4889c7	                            mov rdi, rax	      5237	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_11
0xaaf9	      0xe800000000	                          call 0x400ab3e	      5237	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_11
0xaafe	        0x488d45c0	                   lea rax, [rbp - 0x40]	      5238	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13	CALL_12
0xab02	          0x4889c7	                            mov rdi, rax	      5238	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13	CALL_12
0xab05	      0xe800000000	                          call 0x400ab4a	      5238	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13	CALL_12
0xab0a	            0x85c0	                           test eax, eax	      5238	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13	CALL_12
0xab0c	            0x750f	                           jne 0x400ab5d	      5238	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13	CALL_12
0xab0e	    0xc70500000000	               mov dword [0x0400ab58], 0	      5242	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13
0xab18	      0xe9cb000000	                           jmp 0x400ac28	      5242	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13
0xab1d	    0x8b0500000000	            mov eax, dword [0x0400ab63] 	      5247	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0xab23	          0x83f802	                              cmp eax, 2	      5247	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0xab26	            0x7546	                           jne 0x400abae	      5247	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0xab28	        0x488d45d0	                   lea rax, [rbp - 0x30]	      5254	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_13
0xab2c	          0x4889c7	                            mov rdi, rax	      5254	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_13
0xab2f	      0xe800000000	                          call 0x400ab74	      5254	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_13
0xab34	    0x488b05000000	            mov rax, qword [0x0400ab7b] 	      5258	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_14
0xab3b	      0xbe01000000	                              mov esi, 1	      5258	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_14
0xab40	          0x4889c7	                            mov rdi, rax	      5258	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_14
0xab43	      0xe800000000	                          call 0x400ab88	      5258	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_14
0xab48	        0x836d8801	               sub dword [rbp - 0x78], 1	      5259	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0xab4c	    0xc70500000000	               mov dword [0x0400ab96], 0	      5260	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0xab56	    0xc70500000000	               mov dword [0x0400aba0], 1	      5261	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0xab60	        0x488d45d0	                   lea rax, [rbp - 0x30]	      5267	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_15
0xab64	          0x4889c7	                            mov rdi, rax	      5267	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_15
0xab67	      0xe800000000	                          call 0x400abac	      5267	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_15
0xab6c	            0xeb0a	                           jmp 0x400abb8	      5267	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_15
0xab6e	      0xbf00000000	                              mov edi, 0	      5271	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_16
0xab73	      0xe800000000	                          call 0x400abb8	      5271	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_16
0xab78	      0xe800000000	                          call 0x400abbd	      5275	buffer.c	FUNCTION_72	FOR_3	CALL_17
0xab7d	    0x8b0500000000	            mov eax, dword [0x0400abc3] 	      5276	buffer.c	FUNCTION_72	FOR_3	IF_15
0xab83	            0x85c0	                           test eax, eax	      5276	buffer.c	FUNCTION_72	FOR_3	IF_15
0xab85	            0x7407	                            je 0x400abce	      5276	buffer.c	FUNCTION_72	FOR_3	IF_15
0xab87	      0xe800000000	                          call 0x400abcc	      5278	buffer.c	FUNCTION_72	FOR_3	IF_15	CALL_18
0xab8c	            0xeb5a	                           jmp 0x400ac28	      5279	buffer.c	FUNCTION_72	FOR_3	IF_15
0xab8e	      0xe800000000	                          call 0x400abd3	      5283	buffer.c	FUNCTION_72	FOR_3	IF_16	CALL_19
0xab93	            0x85c0	                           test eax, eax	      5283	buffer.c	FUNCTION_72	FOR_3	IF_16	CALL_19
0xab95	            0x7550	                           jne 0x400ac27	      5283	buffer.c	FUNCTION_72	FOR_3	IF_16	CALL_19
0xab97	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0xab9b	            0x7e29	                           jle 0x400ac06	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0xab9d	      0xbf00000000	                              mov edi, 0	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0xaba2	      0xe800000000	                          call 0x400abe7	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0xaba7	          0x4863d0	                         movsxd rdx, eax	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0xabaa	    0x488b05000000	            mov rax, qword [0x0400abf1] 	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0xabb1	          0x4839c2	                            cmp rdx, rax	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0xabb4	            0x7f10	                            jg 0x400ac06	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0xabb6	    0xc70500000000	         mov dword [0x0400ac00], 0x270f 	      5288	buffer.c	FUNCTION_72	FOR_3	IF_17
0xabc0	            0xeb04	                           jmp 0x400ac06	      5288	buffer.c	FUNCTION_72	FOR_3	IF_17
0xabc2	              0x90	                                     nop	      5197	buffer.c	FUNCTION_72	FOR_3	IF_6
0xabc3	            0xeb01	                           jmp 0x400ac06	      5197	buffer.c	FUNCTION_72	FOR_3	IF_6
0xabc5	              0x90	                                     nop	      5231	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_12
0xabc6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5193	buffer.c	FUNCTION_72	FOR_3
0xabca	        0x488b4068	            mov rax, qword [rax + 0x68] 	      5193	buffer.c	FUNCTION_72	FOR_3
0xabce	        0x488945a0	             mov qword [rbp - 0x60], rax	      5193	buffer.c	FUNCTION_72	FOR_3
0xabd2	      0x48837da000	               cmp qword [rbp - 0x60], 0	      5193	buffer.c	FUNCTION_72	FOR_3
0xabd7	            0x740f	                            je 0x400ac28	      5193	buffer.c	FUNCTION_72	FOR_3
0xabd9	          0x8b4588	             mov eax, dword [rbp - 0x78]	      5193	buffer.c	FUNCTION_72	FOR_3
0xabdc	          0x3b458c	             cmp eax, dword [rbp - 0x74]	      5193	buffer.c	FUNCTION_72	FOR_3
0xabdf	     0xf8cfbfdffff	                            jl 0x400aa20	      5193	buffer.c	FUNCTION_72	FOR_3
0xabe5	            0xeb01	                           jmp 0x400ac28	      5193	buffer.c	FUNCTION_72	FOR_3
0xabe7	              0x90	                                     nop	      5284	buffer.c	FUNCTION_72	FOR_3	IF_16
0xabe8	    0x8b0500000000	            mov eax, dword [0x0400ac2e] 	      5290	buffer.c	FUNCTION_72
0xabee	          0x83e801	                              sub eax, 1	      5290	buffer.c	FUNCTION_72
0xabf1	    0x890500000000	            mov dword [0x0400ac37], eax 	      5290	buffer.c	FUNCTION_72
0xabf7	    0x488b05000000	            mov rax, qword [0x0400ac3e] 	      5291	buffer.c	FUNCTION_72	CALL_21
0xabfe	      0xbe00000000	                              mov esi, 0	      5291	buffer.c	FUNCTION_72	CALL_21
0xac03	          0x4889c7	                            mov rdi, rax	      5291	buffer.c	FUNCTION_72	CALL_21
0xac06	      0xe800000000	                          call 0x400ac4b	      5291	buffer.c	FUNCTION_72	CALL_21
0xac0b	    0x8b0500000000	            mov eax, dword [0x0400ac51] 	      5292	buffer.c	FUNCTION_72
0xac11	          0x83e801	                              sub eax, 1	      5292	buffer.c	FUNCTION_72
0xac14	    0x890500000000	            mov dword [0x0400ac5a], eax 	      5292	buffer.c	FUNCTION_72
0xac1a	    0x488b05000000	            mov rax, qword [0x0400ac61] 	      5297	buffer.c	FUNCTION_72	FOR_4
0xac21	        0x488945a8	             mov qword [rbp - 0x58], rax	      5297	buffer.c	FUNCTION_72	FOR_4
0xac25	      0xe9be000000	                           jmp 0x400ad28	      5297	buffer.c	FUNCTION_72	FOR_4
0xac2a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0xac2e	        0x488b4008	                mov rax, qword [rax + 8]	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0xac32	          0x4889c7	                            mov rdi, rax	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0xac35	      0xe800000000	                          call 0x400ac7a	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0xac3a	            0x85c0	                           test eax, eax	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0xac3c	            0x752e	                           jne 0x400acac	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0xac3e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0xac42	        0x488b4008	                mov rax, qword [rax + 8]	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0xac46	          0x4889c7	                            mov rdi, rax	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0xac49	      0xe800000000	                          call 0x400ac8e	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0xac4e	            0x85c0	                           test eax, eax	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0xac50	            0x741a	                            je 0x400acac	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0xac52	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0xac56	        0x488b4008	                mov rax, qword [rax + 8]	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0xac5a	      0xbe00000000	                              mov esi, 0	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0xac5f	          0x4889c7	                            mov rdi, rax	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0xac62	      0xe800000000	                          call 0x400aca7	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0xac67	          0x83f801	                              cmp eax, 1	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0xac6a	            0x7507	                           jne 0x400acb3	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0xac6c	      0xb801000000	                              mov eax, 1	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0xac71	            0xeb05	                           jmp 0x400acb8	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0xac73	      0xb800000000	                              mov eax, 0	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0xac78	          0x89459c	             mov dword [rbp - 0x64], eax	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0xac7b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0xac7f	          0x4889c7	                            mov rdi, rax	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0xac82	      0xe800000000	                          call 0x400acc7	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0xac87	            0x85c0	                           test eax, eax	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0xac89	            0x750d	                           jne 0x400acd8	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0xac8b	    0x488b05000000	            mov rax, qword [0x0400acd2] 	      5304	buffer.c	FUNCTION_72	FOR_4	IF_18
0xac92	        0x488945a8	             mov qword [rbp - 0x58], rax	      5304	buffer.c	FUNCTION_72	FOR_4	IF_18
0xac96	            0xeb50	                           jmp 0x400ad28	      5304	buffer.c	FUNCTION_72	FOR_4	IF_18
0xac98	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      5306	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19
0xac9c	            0x7437	                            je 0x400ad15	      5306	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19
0xac9e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0xaca2	        0x488b4008	                mov rax, qword [rax + 8]	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0xaca6	          0x4889c7	                            mov rdi, rax	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0xaca9	      0xe800000000	                          call 0x400acee	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0xacae	            0x85c0	                           test eax, eax	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0xacb0	           0xf94c0	                                 sete al	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0xacb3	           0xfb6d0	                           movzx edx, al	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0xacb6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0xacba	            0x89d6	                            mov esi, edx	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0xacbc	          0x4889c7	                            mov rdi, rax	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0xacbf	      0xe800000000	                          call 0x400ad04	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0xacc4	        0x836d8801	               sub dword [rbp - 0x78], 1	      5309	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19
0xacc8	    0x488b05000000	            mov rax, qword [0x0400ad0f] 	      5310	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19
0xaccf	        0x488945a8	             mov qword [rbp - 0x58], rax	      5310	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19
0xacd3	            0xeb13	                           jmp 0x400ad28	      5310	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19
0xacd5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5314	buffer.c	FUNCTION_72	FOR_4	ELSE_8
0xacd9	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5314	buffer.c	FUNCTION_72	FOR_4	ELSE_8
0xacdd	        0x488945a8	             mov qword [rbp - 0x58], rax	      5314	buffer.c	FUNCTION_72	FOR_4	ELSE_8
0xace1	      0x48837da800	               cmp qword [rbp - 0x58], 0	      5315	buffer.c	FUNCTION_72	FOR_4	ELSE_8	IF_20
0xace6	            0x740e	                            je 0x400ad36	      5315	buffer.c	FUNCTION_72	FOR_4	ELSE_8	IF_20
0xace8	          0x8b4588	             mov eax, dword [rbp - 0x78]	      5297	buffer.c	FUNCTION_72	FOR_4
0xaceb	          0x3b458c	             cmp eax, dword [rbp - 0x74]	      5297	buffer.c	FUNCTION_72	FOR_4
0xacee	     0xf8f36ffffff	                            jg 0x400ac6a	      5297	buffer.c	FUNCTION_72	FOR_4
0xacf4	            0xeb01	                           jmp 0x400ad37	      5319	buffer.c	FUNCTION_72
0xacf6	              0x90	                                     nop	      5316	buffer.c	FUNCTION_72	FOR_4	ELSE_8	IF_20
0xacf7	              0x90	                                     nop	      5319	buffer.c	FUNCTION_72
0xacf8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5319	buffer.c	FUNCTION_72
0xacfc	    0x644833042528	                xor rax, qword fs:[0x28]	      5319	buffer.c	FUNCTION_72
0xad05	            0x7405	                            je 0x400ad4c	      5319	buffer.c	FUNCTION_72
0xad07	      0xe800000000	                          call 0x400ad4c	      5319	buffer.c	FUNCTION_72
0xad0c	        0x4883ec80	             sub rsp, 0xffffffffffffff80	      5319	buffer.c	FUNCTION_72
0xad10	              0x5b	                                 pop rbx	      5319	buffer.c	FUNCTION_72
0xad11	            0x415c	                                 pop r12	      5319	buffer.c	FUNCTION_72
0xad13	              0x5d	                                 pop rbp	      5319	buffer.c	FUNCTION_72
0xad14	              0xc3	                                     ret	      5319	buffer.c	FUNCTION_72
build_stl_str_hl	FOR,20:WHILE,12:ELSE,21:functions,0:IF,98:CALL,65:SWITCH,2:DO,0	2508
0x6cb4	              0x55	                                push rbp	      3823	buffer.c	FUNCTION_65
0x6cb5	          0x4889e5	                            mov rbp, rsp	      3823	buffer.c	FUNCTION_65
0x6cb8	              0x53	                                push rbx	      3823	buffer.c	FUNCTION_65
0x6cb9	    0x4881ec280a00	                          sub rsp, 0xa28	      3823	buffer.c	FUNCTION_65
0x6cc0	    0x4889bd08f6ff	            mov qword [rbp - 0x9f8], rdi	      3823	buffer.c	FUNCTION_65
0x6cc7	    0x4889b500f6ff	            mov qword [rbp - 0xa00], rsi	      3823	buffer.c	FUNCTION_65
0x6cce	    0x488995f8f5ff	            mov qword [rbp - 0xa08], rdx	      3823	buffer.c	FUNCTION_65
0x6cd5	    0x48898df0f5ff	            mov qword [rbp - 0xa10], rcx	      3823	buffer.c	FUNCTION_65
0x6cdc	    0x448985ecf5ff	            mov dword [rbp - 0xa14], r8d	      3823	buffer.c	FUNCTION_65
0x6ce3	    0x44898de8f5ff	            mov dword [rbp - 0xa18], r9d	      3823	buffer.c	FUNCTION_65
0x6cea	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      3823	buffer.c	FUNCTION_65
0x6cee	    0x488985e0f5ff	            mov qword [rbp - 0xa20], rax	      3823	buffer.c	FUNCTION_65
0x6cf5	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      3823	buffer.c	FUNCTION_65
0x6cf9	    0x488985d8f5ff	            mov qword [rbp - 0xa28], rax	      3823	buffer.c	FUNCTION_65
0x6d00	    0x64488b042528	                mov rax, qword fs:[0x28]	      3823	buffer.c	FUNCTION_65
0x6d09	        0x488945e8	             mov qword [rbp - 0x18], rax	      3823	buffer.c	FUNCTION_65
0x6d0d	            0x31c0	                            xor eax, eax	      3823	buffer.c	FUNCTION_65
0x6d0f	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      3872	buffer.c	FUNCTION_65
0x6d16	    0x488985a0f6ff	            mov qword [rbp - 0x960], rax	      3872	buffer.c	FUNCTION_65
0x6d1d	    0x8b0500000000	            mov eax, dword [0x04006d63] 	      3874	buffer.c	FUNCTION_65
0x6d23	    0x898558f6ffff	            mov dword [rbp - 0x9a8], eax	      3874	buffer.c	FUNCTION_65
0x6d29	    0x488b05000000	            mov rax, qword [0x04006d70] 	      3875	buffer.c	FUNCTION_65
0x6d30	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	      3875	buffer.c	FUNCTION_65
0x6d36	    0x89855cf6ffff	            mov dword [rbp - 0x9a4], eax	      3875	buffer.c	FUNCTION_65
0x6d3c	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      3882	buffer.c	FUNCTION_65	IF_1
0x6d43	           0xfb600	                   movzx eax, byte [rax]	      3882	buffer.c	FUNCTION_65	IF_1
0x6d46	            0x3c25	                            cmp al, 0x25	      3882	buffer.c	FUNCTION_65	IF_1
0x6d48	            0x7551	                           jne 0x4006ddb	      3882	buffer.c	FUNCTION_65	IF_1
0x6d4a	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      3882	buffer.c	FUNCTION_65	IF_1
0x6d51	        0x4883c001	                              add rax, 1	      3882	buffer.c	FUNCTION_65	IF_1
0x6d55	           0xfb600	                   movzx eax, byte [rax]	      3882	buffer.c	FUNCTION_65	IF_1
0x6d58	            0x3c21	                            cmp al, 0x21	      3882	buffer.c	FUNCTION_65	IF_1
0x6d5a	            0x753f	                           jne 0x4006ddb	      3882	buffer.c	FUNCTION_65	IF_1
0x6d5c	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      3884	buffer.c	FUNCTION_65	IF_1	CALL_1
0x6d63	        0x488d4802	                      lea rcx, [rax + 2]	      3884	buffer.c	FUNCTION_65	IF_1	CALL_1
0x6d67	    0x8b85ecf5ffff	            mov eax, dword [rbp - 0xa14]	      3884	buffer.c	FUNCTION_65	IF_1	CALL_1
0x6d6d	            0x89c2	                            mov edx, eax	      3884	buffer.c	FUNCTION_65	IF_1	CALL_1
0x6d6f	      0xbe00000000	                              mov esi, 0	      3884	buffer.c	FUNCTION_65	IF_1	CALL_1
0x6d74	          0x4889cf	                            mov rdi, rcx	      3884	buffer.c	FUNCTION_65	IF_1	CALL_1
0x6d77	      0xe800000000	                          call 0x4006dbc	      3884	buffer.c	FUNCTION_65	IF_1	CALL_1
0x6d7c	    0x488985a0f6ff	            mov qword [rbp - 0x960], rax	      3884	buffer.c	FUNCTION_65	IF_1	CALL_1
0x6d83	    0x4883bda0f6ff	              cmp qword [rbp - 0x960], 0	      3885	buffer.c	FUNCTION_65	IF_1	IF_2
0x6d8b	            0x750e	                           jne 0x4006ddb	      3885	buffer.c	FUNCTION_65	IF_1	IF_2
0x6d8d	    0x488b85f0f5ff	            mov rax, qword [rbp - 0xa10]	      3886	buffer.c	FUNCTION_65	IF_1	IF_2
0x6d94	    0x488985a0f6ff	            mov qword [rbp - 0x960], rax	      3886	buffer.c	FUNCTION_65	IF_1	IF_2
0x6d9b	    0x83bde8f5ffff	              cmp dword [rbp - 0xa18], 0	      3890	buffer.c	FUNCTION_65	IF_3
0x6da2	            0x750c	                           jne 0x4006df0	      3890	buffer.c	FUNCTION_65	IF_3
0x6da4	    0xc785e8f5ffff	          mov dword [rbp - 0xa18], 0x20 	      3891	buffer.c	FUNCTION_65	IF_3
0x6dae	            0xeb20	                           jmp 0x4006e10	      3891	buffer.c	FUNCTION_65	IF_3
0x6db0	    0x488b05000000	            mov rax, qword [0x04006df7] 	      3894	buffer.c	FUNCTION_65	ELSE_1	IF_4	CALL_2
0x6db7	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	      3894	buffer.c	FUNCTION_65	ELSE_1	IF_4	CALL_2
0x6dbd	            0x89d7	                            mov edi, edx	      3894	buffer.c	FUNCTION_65	ELSE_1	IF_4	CALL_2
0x6dbf	            0xffd0	                                call rax	      3894	buffer.c	FUNCTION_65	ELSE_1	IF_4	CALL_2
0x6dc1	          0x83f801	                              cmp eax, 1	      3894	buffer.c	FUNCTION_65	ELSE_1	IF_4	CALL_2
0x6dc4	            0x7e0a	                           jle 0x4006e10	      3894	buffer.c	FUNCTION_65	ELSE_1	IF_4	CALL_2
0x6dc6	    0xc785e8f5ffff	          mov dword [rbp - 0xa18], 0x2d 	      3895	buffer.c	FUNCTION_65	ELSE_1	IF_4
0x6dd0	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      3900	buffer.c	FUNCTION_65	CALL_3
0x6dd7	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      3900	buffer.c	FUNCTION_65	CALL_3
0x6ddb	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      3900	buffer.c	FUNCTION_65	CALL_3
0x6de2	        0x488b4008	                mov rax, qword [rax + 8]	      3900	buffer.c	FUNCTION_65	CALL_3
0x6de6	      0xba00000000	                              mov edx, 0	      3900	buffer.c	FUNCTION_65	CALL_3
0x6deb	          0x4889ce	                            mov rsi, rcx	      3900	buffer.c	FUNCTION_65	CALL_3
0x6dee	          0x4889c7	                            mov rdi, rax	      3900	buffer.c	FUNCTION_65	CALL_3
0x6df1	      0xe800000000	                          call 0x4006e36	      3900	buffer.c	FUNCTION_65	CALL_3
0x6df6	    0x48898578f6ff	            mov qword [rbp - 0x988], rax	      3900	buffer.c	FUNCTION_65	CALL_3
0x6dfd	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3901	buffer.c	FUNCTION_65
0x6e04	           0xfb600	                   movzx eax, byte [rax]	      3901	buffer.c	FUNCTION_65
0x6e07	            0x84c0	                             test al, al	      3901	buffer.c	FUNCTION_65
0x6e09	           0xf94c0	                                 sete al	      3901	buffer.c	FUNCTION_65
0x6e0c	           0xfb6c0	                           movzx eax, al	      3901	buffer.c	FUNCTION_65
0x6e0f	    0x898560f6ffff	            mov dword [rbp - 0x9a0], eax	      3901	buffer.c	FUNCTION_65
0x6e15	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      3905	buffer.c	FUNCTION_65	IF_5	CALL_4
0x6e1c	          0x8b5840	            mov ebx, dword [rax + 0x40] 	      3905	buffer.c	FUNCTION_65	IF_5	CALL_4
0x6e1f	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3905	buffer.c	FUNCTION_65	IF_5	CALL_4
0x6e26	          0x4889c7	                            mov rdi, rax	      3905	buffer.c	FUNCTION_65	IF_5	CALL_4
0x6e29	      0xe800000000	                          call 0x4006e6e	      3905	buffer.c	FUNCTION_65	IF_5	CALL_4
0x6e2e	            0x39c3	                            cmp ebx, eax	      3905	buffer.c	FUNCTION_65	IF_5	CALL_4
0x6e30	            0x7e0c	                           jle 0x4006e7e	      3905	buffer.c	FUNCTION_65	IF_5	CALL_4
0x6e32	    0xc78520f6ffff	              mov dword [rbp - 0x9e0], 0	      3906	buffer.c	FUNCTION_65	IF_5
0x6e3c	            0xeb29	                           jmp 0x4006ea7	      3906	buffer.c	FUNCTION_65	IF_5
0x6e3e	    0x488b05000000	            mov rax, qword [0x04006e85] 	      3909	buffer.c	FUNCTION_65	ELSE_2
0x6e45	    0x488b9508f6ff	            mov rdx, qword [rbp - 0x9f8]	      3909	buffer.c	FUNCTION_65	ELSE_2
0x6e4c	          0x8b5240	            mov edx, dword [rdx + 0x40] 	      3909	buffer.c	FUNCTION_65	ELSE_2
0x6e4f	          0x4863ca	                         movsxd rcx, edx	      3909	buffer.c	FUNCTION_65	ELSE_2
0x6e52	    0x488b9578f6ff	            mov rdx, qword [rbp - 0x988]	      3909	buffer.c	FUNCTION_65	ELSE_2
0x6e59	          0x4801ca	                            add rdx, rcx	      3909	buffer.c	FUNCTION_65	ELSE_2
0x6e5c	          0x4889d7	                            mov rdi, rdx	      3909	buffer.c	FUNCTION_65	ELSE_2
0x6e5f	            0xffd0	                                call rax	      3909	buffer.c	FUNCTION_65	ELSE_2
0x6e61	    0x898520f6ffff	            mov dword [rbp - 0x9e0], eax	      3909	buffer.c	FUNCTION_65	ELSE_2
0x6e67	    0xc78548f6ffff	              mov dword [rbp - 0x9b8], 0	      3914	buffer.c	FUNCTION_65
0x6e71	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      3915	buffer.c	FUNCTION_65
0x6e78	    0x48898578f6ff	            mov qword [rbp - 0x988], rax	      3915	buffer.c	FUNCTION_65
0x6e7f	    0xc7853cf6ffff	              mov dword [rbp - 0x9c4], 0	      3916	buffer.c	FUNCTION_65
0x6e89	    0xc78524f6ffff	              mov dword [rbp - 0x9dc], 1	      3917	buffer.c	FUNCTION_65
0x6e93	    0xc78528f6ffff	              mov dword [rbp - 0x9d8], 0	      3918	buffer.c	FUNCTION_65
0x6e9d	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	      3919	buffer.c	FUNCTION_65	FOR_1
0x6ea4	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      3919	buffer.c	FUNCTION_65	FOR_1
0x6eab	      0xe95c220000	                           jmp 0x400914c	      3919	buffer.c	FUNCTION_65	FOR_1
0x6eb0	    0x83bd3cf6ffff	          cmp dword [rbp - 0x9c4], 0x50 	      3921	buffer.c	FUNCTION_65	FOR_1	IF_6
0x6eb7	            0x7543	                           jne 0x4006f3c	      3921	buffer.c	FUNCTION_65	FOR_1	IF_6
0x6eb9	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3925	buffer.c	FUNCTION_65	FOR_1	IF_6	IF_7
0x6ec0	        0x488d4806	                      lea rcx, [rax + 6]	      3925	buffer.c	FUNCTION_65	FOR_1	IF_6	IF_7
0x6ec4	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      3925	buffer.c	FUNCTION_65	FOR_1	IF_6	IF_7
0x6ecb	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      3925	buffer.c	FUNCTION_65	FOR_1	IF_6	IF_7
0x6ed2	          0x4801d0	                            add rax, rdx	      3925	buffer.c	FUNCTION_65	FOR_1	IF_6	IF_7
0x6ed5	          0x4839c1	                            cmp rcx, rax	      3925	buffer.c	FUNCTION_65	FOR_1	IF_6	IF_7
0x6ed8	     0xf8342220000	                           jae 0x4009160	      3925	buffer.c	FUNCTION_65	FOR_1	IF_6	IF_7
0x6ede	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3927	buffer.c	FUNCTION_65	FOR_1	IF_6	IF_7	CALL_5
0x6ee5	    0xc70020453534	            mov dword [rax], 0x34354520 	      3927	buffer.c	FUNCTION_65	FOR_1	IF_6	IF_7	CALL_5
0x6eeb	        0xc6400431	                mov byte [rax + 4], 0x31	      3927	buffer.c	FUNCTION_65	FOR_1	IF_6	IF_7	CALL_5
0x6eef	    0x48838578f6ff	              add qword [rbp - 0x988], 5	      3928	buffer.c	FUNCTION_65	FOR_1	IF_6	IF_7
0x6ef7	      0xe924220000	                           jmp 0x4009160	      3930	buffer.c	FUNCTION_65	FOR_1	IF_6
0x6efc	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3933	buffer.c	FUNCTION_65	FOR_1	IF_8
0x6f03	           0xfb600	                   movzx eax, byte [rax]	      3933	buffer.c	FUNCTION_65	FOR_1	IF_8
0x6f06	            0x84c0	                             test al, al	      3933	buffer.c	FUNCTION_65	FOR_1	IF_8
0x6f08	            0x744f	                            je 0x4006f99	      3933	buffer.c	FUNCTION_65	FOR_1	IF_8
0x6f0a	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3933	buffer.c	FUNCTION_65	FOR_1	IF_8
0x6f11	           0xfb600	                   movzx eax, byte [rax]	      3933	buffer.c	FUNCTION_65	FOR_1	IF_8
0x6f14	            0x3c25	                            cmp al, 0x25	      3933	buffer.c	FUNCTION_65	FOR_1	IF_8
0x6f16	            0x7441	                            je 0x4006f99	      3933	buffer.c	FUNCTION_65	FOR_1	IF_8
0x6f18	    0xc78528f6ffff	              mov dword [rbp - 0x9d8], 0	      3934	buffer.c	FUNCTION_65	FOR_1	IF_8
0x6f22	    0x8b8528f6ffff	            mov eax, dword [rbp - 0x9d8]	      3934	buffer.c	FUNCTION_65	FOR_1	IF_8
0x6f28	    0x898524f6ffff	            mov dword [rbp - 0x9dc], eax	      3934	buffer.c	FUNCTION_65	FOR_1	IF_8
0x6f2e	            0xeb29	                           jmp 0x4006f99	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f30	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3940	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f37	        0x488d5001	                      lea rdx, [rax + 1]	      3940	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f3b	    0x48899578f6ff	            mov qword [rbp - 0x988], rdx	      3940	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f42	    0x488b9568f6ff	            mov rdx, qword [rbp - 0x998]	      3940	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f49	        0x488d4a01	                      lea rcx, [rdx + 1]	      3940	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f4d	    0x48898d68f6ff	            mov qword [rbp - 0x998], rcx	      3940	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f54	           0xfb612	                   movzx edx, byte [rdx]	      3940	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f57	            0x8810	                      mov byte [rax], dl	      3940	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f59	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f60	           0xfb600	                   movzx eax, byte [rax]	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f63	            0x84c0	                             test al, al	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f65	            0x742f	                            je 0x4006fd6	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f67	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f6e	           0xfb600	                   movzx eax, byte [rax]	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f71	            0x3c25	                            cmp al, 0x25	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f73	            0x7421	                            je 0x4006fd6	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f75	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f7c	        0x488d4801	                      lea rcx, [rax + 1]	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f80	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f87	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f8e	          0x4801d0	                            add rax, rdx	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f91	          0x4839c1	                            cmp rcx, rax	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f94	            0x729a	                            jb 0x4006f70	      3939	buffer.c	FUNCTION_65	FOR_1	WHILE_1
0x6f96	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3941	buffer.c	FUNCTION_65	FOR_1	IF_9
0x6f9d	           0xfb600	                   movzx eax, byte [rax]	      3941	buffer.c	FUNCTION_65	FOR_1	IF_9
0x6fa0	            0x84c0	                             test al, al	      3941	buffer.c	FUNCTION_65	FOR_1	IF_9
0x6fa2	     0xf8485210000	                            je 0x400916d	      3941	buffer.c	FUNCTION_65	FOR_1	IF_9
0x6fa8	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3941	buffer.c	FUNCTION_65	FOR_1	IF_9
0x6faf	        0x488d4801	                      lea rcx, [rax + 1]	      3941	buffer.c	FUNCTION_65	FOR_1	IF_9
0x6fb3	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      3941	buffer.c	FUNCTION_65	FOR_1	IF_9
0x6fba	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      3941	buffer.c	FUNCTION_65	FOR_1	IF_9
0x6fc1	          0x4801d0	                            add rax, rdx	      3941	buffer.c	FUNCTION_65	FOR_1	IF_9
0x6fc4	          0x4839c1	                            cmp rcx, rax	      3941	buffer.c	FUNCTION_65	FOR_1	IF_9
0x6fc7	     0xf8360210000	                           jae 0x400916d	      3941	buffer.c	FUNCTION_65	FOR_1	IF_9
0x6fcd	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3947	buffer.c	FUNCTION_65	FOR_1
0x6fd4	        0x4883c001	                              add rax, 1	      3947	buffer.c	FUNCTION_65	FOR_1
0x6fd8	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      3947	buffer.c	FUNCTION_65	FOR_1
0x6fdf	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3948	buffer.c	FUNCTION_65	FOR_1	IF_10
0x6fe6	           0xfb600	                   movzx eax, byte [rax]	      3948	buffer.c	FUNCTION_65	FOR_1	IF_10
0x6fe9	            0x84c0	                             test al, al	      3948	buffer.c	FUNCTION_65	FOR_1	IF_10
0x6feb	     0xf8432210000	                            je 0x4009163	      3948	buffer.c	FUNCTION_65	FOR_1	IF_10
0x6ff1	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3950	buffer.c	FUNCTION_65	FOR_1	IF_11
0x6ff8	           0xfb600	                   movzx eax, byte [rax]	      3950	buffer.c	FUNCTION_65	FOR_1	IF_11
0x6ffb	            0x3c25	                            cmp al, 0x25	      3950	buffer.c	FUNCTION_65	FOR_1	IF_11
0x6ffd	            0x7569	                           jne 0x40070a8	      3950	buffer.c	FUNCTION_65	FOR_1	IF_11
0x6fff	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3952	buffer.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x7006	        0x488d4801	                      lea rcx, [rax + 1]	      3952	buffer.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x700a	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      3952	buffer.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x7011	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      3952	buffer.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x7018	          0x4801d0	                            add rax, rdx	      3952	buffer.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x701b	          0x4839c1	                            cmp rcx, rax	      3952	buffer.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x701e	     0xf8302210000	                           jae 0x4009166	      3952	buffer.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x7024	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3954	buffer.c	FUNCTION_65	FOR_1	IF_11
0x702b	        0x488d5001	                      lea rdx, [rax + 1]	      3954	buffer.c	FUNCTION_65	FOR_1	IF_11
0x702f	    0x48899578f6ff	            mov qword [rbp - 0x988], rdx	      3954	buffer.c	FUNCTION_65	FOR_1	IF_11
0x7036	    0x488b9568f6ff	            mov rdx, qword [rbp - 0x998]	      3954	buffer.c	FUNCTION_65	FOR_1	IF_11
0x703d	        0x488d4a01	                      lea rcx, [rdx + 1]	      3954	buffer.c	FUNCTION_65	FOR_1	IF_11
0x7041	    0x48898d68f6ff	            mov qword [rbp - 0x998], rcx	      3954	buffer.c	FUNCTION_65	FOR_1	IF_11
0x7048	           0xfb612	                   movzx edx, byte [rdx]	      3954	buffer.c	FUNCTION_65	FOR_1	IF_11
0x704b	            0x8810	                      mov byte [rax], dl	      3954	buffer.c	FUNCTION_65	FOR_1	IF_11
0x704d	    0xc78528f6ffff	              mov dword [rbp - 0x9d8], 0	      3955	buffer.c	FUNCTION_65	FOR_1	IF_11
0x7057	    0x8b8528f6ffff	            mov eax, dword [rbp - 0x9d8]	      3955	buffer.c	FUNCTION_65	FOR_1	IF_11
0x705d	    0x898524f6ffff	            mov dword [rbp - 0x9dc], eax	      3955	buffer.c	FUNCTION_65	FOR_1	IF_11
0x7063	      0xe9a4200000	                           jmp 0x400914c	      3956	buffer.c	FUNCTION_65	FOR_1	IF_11
0x7068	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3958	buffer.c	FUNCTION_65	FOR_1	IF_13
0x706f	           0xfb600	                   movzx eax, byte [rax]	      3958	buffer.c	FUNCTION_65	FOR_1	IF_13
0x7072	            0x3c3d	                            cmp al, 0x3d	      3958	buffer.c	FUNCTION_65	FOR_1	IF_13
0x7074	     0xf8585000000	                           jne 0x400713f	      3958	buffer.c	FUNCTION_65	FOR_1	IF_13
0x707a	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3960	buffer.c	FUNCTION_65	FOR_1	IF_13
0x7081	        0x4883c001	                              add rax, 1	      3960	buffer.c	FUNCTION_65	FOR_1	IF_13
0x7085	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      3960	buffer.c	FUNCTION_65	FOR_1	IF_13
0x708c	    0x83bd48f6ffff	              cmp dword [rbp - 0x9b8], 0	      3961	buffer.c	FUNCTION_65	FOR_1	IF_13	IF_14
0x7093	            0x7e05	                           jle 0x40070da	      3961	buffer.c	FUNCTION_65	FOR_1	IF_13	IF_14
0x7095	      0xe972200000	                           jmp 0x400914c	      3962	buffer.c	FUNCTION_65	FOR_1	IF_13	IF_14
0x709a	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      3963	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70a0	          0x4863d0	                         movsxd rdx, eax	      3963	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70a3	          0x4889d0	                            mov rax, rdx	      3963	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70a6	          0x4801c0	                            add rax, rax	      3963	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70a9	          0x4801d0	                            add rax, rdx	      3963	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70ac	        0x48c1e003	                              shl rax, 3	      3963	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70b0	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      3963	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70b4	          0x4801d8	                            add rax, rbx	      3963	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70b7	    0x482de0070000	                          sub rax, 0x7e0	      3963	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70bd	    0xc70003000000	                      mov dword [rax], 3	      3963	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70c3	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70c9	          0x8d5001	                      lea edx, [rax + 1]	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70cc	    0x89953cf6ffff	            mov dword [rbp - 0x9c4], edx	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70d2	          0x4863d0	                         movsxd rdx, eax	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70d5	          0x4889d0	                            mov rax, rdx	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70d8	          0x4801c0	                            add rax, rax	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70db	          0x4801d0	                            add rax, rdx	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70de	        0x48c1e003	                              shl rax, 3	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70e2	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70e6	          0x4801d8	                            add rax, rbx	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70e9	    0x488d9010f8ff	                  lea rdx, [rax - 0x7f0]	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70f0	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70f7	          0x488902	                    mov qword [rdx], rax	      3964	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70fa	      0xe90d200000	                           jmp 0x400914c	      3965	buffer.c	FUNCTION_65	FOR_1	IF_13
0x70ff	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3967	buffer.c	FUNCTION_65	FOR_1	IF_15
0x7106	           0xfb600	                   movzx eax, byte [rax]	      3967	buffer.c	FUNCTION_65	FOR_1	IF_15
0x7109	            0x3c3c	                            cmp al, 0x3c	      3967	buffer.c	FUNCTION_65	FOR_1	IF_15
0x710b	            0x7577	                           jne 0x40071c4	      3967	buffer.c	FUNCTION_65	FOR_1	IF_15
0x710d	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3969	buffer.c	FUNCTION_65	FOR_1	IF_15
0x7114	        0x4883c001	                              add rax, 1	      3969	buffer.c	FUNCTION_65	FOR_1	IF_15
0x7118	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      3969	buffer.c	FUNCTION_65	FOR_1	IF_15
0x711f	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      3970	buffer.c	FUNCTION_65	FOR_1	IF_15
0x7125	          0x4863d0	                         movsxd rdx, eax	      3970	buffer.c	FUNCTION_65	FOR_1	IF_15
0x7128	          0x4889d0	                            mov rax, rdx	      3970	buffer.c	FUNCTION_65	FOR_1	IF_15
0x712b	          0x4801c0	                            add rax, rax	      3970	buffer.c	FUNCTION_65	FOR_1	IF_15
0x712e	          0x4801d0	                            add rax, rdx	      3970	buffer.c	FUNCTION_65	FOR_1	IF_15
0x7131	        0x48c1e003	                              shl rax, 3	      3970	buffer.c	FUNCTION_65	FOR_1	IF_15
0x7135	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      3970	buffer.c	FUNCTION_65	FOR_1	IF_15
0x7139	          0x4801d8	                            add rax, rbx	      3970	buffer.c	FUNCTION_65	FOR_1	IF_15
0x713c	    0x482de0070000	                          sub rax, 0x7e0	      3970	buffer.c	FUNCTION_65	FOR_1	IF_15
0x7142	    0xc70006000000	                      mov dword [rax], 6	      3970	buffer.c	FUNCTION_65	FOR_1	IF_15
0x7148	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x714e	          0x8d5001	                      lea edx, [rax + 1]	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x7151	    0x89953cf6ffff	            mov dword [rbp - 0x9c4], edx	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x7157	          0x4863d0	                         movsxd rdx, eax	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x715a	          0x4889d0	                            mov rax, rdx	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x715d	          0x4801c0	                            add rax, rax	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x7160	          0x4801d0	                            add rax, rdx	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x7163	        0x48c1e003	                              shl rax, 3	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x7167	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x716b	          0x4801d8	                            add rax, rbx	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x716e	    0x488d9010f8ff	                  lea rdx, [rax - 0x7f0]	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x7175	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x717c	          0x488902	                    mov qword [rdx], rax	      3971	buffer.c	FUNCTION_65	FOR_1	IF_15
0x717f	      0xe9881f0000	                           jmp 0x400914c	      3972	buffer.c	FUNCTION_65	FOR_1	IF_15
0x7184	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3974	buffer.c	FUNCTION_65	FOR_1	IF_16
0x718b	           0xfb600	                   movzx eax, byte [rax]	      3974	buffer.c	FUNCTION_65	FOR_1	IF_16
0x718e	            0x3c29	                            cmp al, 0x29	      3974	buffer.c	FUNCTION_65	FOR_1	IF_16
0x7190	     0xf85bc070000	                           jne 0x4007992	      3974	buffer.c	FUNCTION_65	FOR_1	IF_16
0x7196	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3976	buffer.c	FUNCTION_65	FOR_1	IF_16
0x719d	        0x4883c001	                              add rax, 1	      3976	buffer.c	FUNCTION_65	FOR_1	IF_16
0x71a1	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      3976	buffer.c	FUNCTION_65	FOR_1	IF_16
0x71a8	    0x83bd48f6ffff	              cmp dword [rbp - 0x9b8], 0	      3977	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_17
0x71af	            0x7f05	                            jg 0x40071f6	      3977	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_17
0x71b1	      0xe9561f0000	                           jmp 0x400914c	      3978	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_17
0x71b6	    0x83ad48f6ffff	              sub dword [rbp - 0x9b8], 1	      3979	buffer.c	FUNCTION_65	FOR_1	IF_16
0x71bd	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x71c3	            0x4898	                                    cdqe	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x71c5	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x71cc	          0x4863d0	                         movsxd rdx, eax	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x71cf	          0x4889d0	                            mov rax, rdx	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x71d2	          0x4801c0	                            add rax, rax	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x71d5	          0x4801d0	                            add rax, rdx	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x71d8	        0x48c1e003	                              shl rax, 3	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x71dc	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x71e0	          0x4801d8	                            add rax, rbx	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x71e3	    0x482df0070000	                          sub rax, 0x7f0	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x71e9	          0x488b00	                    mov rax, qword [rax]	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x71ec	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      3981	buffer.c	FUNCTION_65	FOR_1	IF_16
0x71f3	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      3982	buffer.c	FUNCTION_65	FOR_1	IF_16
0x71fa	          0xc60000	                       mov byte [rax], 0	      3982	buffer.c	FUNCTION_65	FOR_1	IF_16
0x71fd	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      3983	buffer.c	FUNCTION_65	FOR_1	IF_16	CALL_6
0x7204	          0x4889c7	                            mov rdi, rax	      3983	buffer.c	FUNCTION_65	FOR_1	IF_16	CALL_6
0x7207	      0xe800000000	                          call 0x400724c	      3983	buffer.c	FUNCTION_65	FOR_1	IF_16	CALL_6
0x720c	            0x4898	                                    cdqe	      3983	buffer.c	FUNCTION_65	FOR_1	IF_16	CALL_6
0x720e	    0x48898580f6ff	            mov qword [rbp - 0x980], rax	      3983	buffer.c	FUNCTION_65	FOR_1	IF_16	CALL_6
0x7215	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      3984	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x721b	            0x4898	                                    cdqe	      3984	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x721d	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      3984	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x7224	          0x83c001	                              add eax, 1	      3984	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x7227	    0x3b853cf6ffff	            cmp eax, dword [rbp - 0x9c4]	      3984	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x722d	     0xf8dca010000	                           jge 0x400743d	      3984	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x7233	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x7239	            0x4898	                                    cdqe	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x723b	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x7242	          0x4863d0	                         movsxd rdx, eax	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x7245	          0x4889d0	                            mov rax, rdx	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x7248	          0x4801c0	                            add rax, rax	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x724b	          0x4801d0	                            add rax, rdx	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x724e	        0x48c1e003	                              shl rax, 3	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x7252	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x7256	          0x4801d8	                            add rax, rbx	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x7259	    0x482de8070000	                          sub rax, 0x7e8	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x725f	            0x8b00	                    mov eax, dword [rax]	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x7261	            0x85c0	                           test eax, eax	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x7263	     0xf8594010000	                           jne 0x400743d	      3985	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x7269	    0xc78540f6ffff	              mov dword [rbp - 0x9c0], 0	      3989	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x7273	    0x8b8540f6ffff	            mov eax, dword [rbp - 0x9c0]	      3989	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x7279	    0x898544f6ffff	            mov dword [rbp - 0x9bc], eax	      3989	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18
0x727f	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      3990	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2
0x7285	            0x4898	                                    cdqe	      3990	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2
0x7287	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      3990	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2
0x728e	          0x83e801	                              sub eax, 1	      3990	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2
0x7291	            0x4898	                                    cdqe	      3990	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2
0x7293	    0x48898588f6ff	            mov qword [rbp - 0x978], rax	      3990	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2
0x729a	            0xeb67	                           jmp 0x4007343	      3990	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2
0x729c	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      3992	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72a3	          0x4889d0	                            mov rax, rdx	      3992	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72a6	          0x4801c0	                            add rax, rax	      3992	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72a9	          0x4801d0	                            add rax, rdx	      3992	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72ac	        0x48c1e003	                              shl rax, 3	      3992	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72b0	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      3992	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72b4	          0x4801d8	                            add rax, rbx	      3992	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72b7	    0x482de0070000	                          sub rax, 0x7e0	      3992	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72bd	            0x8b00	                    mov eax, dword [rax]	      3992	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72bf	          0x83f804	                              cmp eax, 4	      3992	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72c2	            0x7537	                           jne 0x400733b	      3992	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72c4	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72cb	          0x4889d0	                            mov rax, rdx	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72ce	          0x4801c0	                            add rax, rax	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72d1	          0x4801d0	                            add rax, rdx	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72d4	        0x48c1e003	                              shl rax, 3	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72d8	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72dc	          0x4801d8	                            add rax, rbx	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72df	    0x482de8070000	                          sub rax, 0x7e8	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72e5	            0x8b00	                    mov eax, dword [rax]	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72e7	    0x898540f6ffff	            mov dword [rbp - 0x9c0], eax	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72ed	    0x8b8540f6ffff	            mov eax, dword [rbp - 0x9c0]	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72f3	    0x898544f6ffff	            mov dword [rbp - 0x9bc], eax	      3994	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72f9	            0xeb12	                           jmp 0x400734d	      3995	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2	IF_19
0x72fb	    0x4883ad88f6ff	              sub qword [rbp - 0x978], 1	      3990	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2
0x7303	    0x4883bd88f6ff	              cmp qword [rbp - 0x978], 0	      3990	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2
0x730b	            0x798f	                           jns 0x40072dc	      3990	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_2
0x730d	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x7313	            0x4898	                                    cdqe	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x7315	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x731c	          0x83c001	                              add eax, 1	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x731f	            0x4898	                                    cdqe	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x7321	    0x48898588f6ff	            mov qword [rbp - 0x978], rax	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x7328	      0xe980000000	                           jmp 0x40073ed	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x732d	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4000	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x7334	          0x4889d0	                            mov rax, rdx	      4000	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x7337	          0x4801c0	                            add rax, rax	      4000	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x733a	          0x4801d0	                            add rax, rdx	      4000	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x733d	        0x48c1e003	                              shl rax, 3	      4000	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x7341	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4000	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x7345	          0x4801d8	                            add rax, rbx	      4000	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x7348	    0x482de0070000	                          sub rax, 0x7e0	      4000	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x734e	            0x8b00	                    mov eax, dword [rax]	      4000	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x7350	            0x85c0	                           test eax, eax	      4000	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x7352	            0x7470	                            je 0x4007404	      4000	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x7354	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4002	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x735b	          0x4889d0	                            mov rax, rdx	      4002	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x735e	          0x4801c0	                            add rax, rax	      4002	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x7361	          0x4801d0	                            add rax, rdx	      4002	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x7364	        0x48c1e003	                              shl rax, 3	      4002	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x7368	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4002	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x736c	          0x4801d8	                            add rax, rbx	      4002	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x736f	    0x482de0070000	                          sub rax, 0x7e0	      4002	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x7375	            0x8b00	                    mov eax, dword [rax]	      4002	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x7377	          0x83f804	                              cmp eax, 4	      4002	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x737a	            0x7529	                           jne 0x40073e5	      4002	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x737c	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4003	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x7383	          0x4889d0	                            mov rax, rdx	      4003	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x7386	          0x4801c0	                            add rax, rax	      4003	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x7389	          0x4801d0	                            add rax, rdx	      4003	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x738c	        0x48c1e003	                              shl rax, 3	      4003	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x7390	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4003	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x7394	          0x4801d8	                            add rax, rbx	      4003	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x7397	    0x482de8070000	                          sub rax, 0x7e8	      4003	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x739d	            0x8b00	                    mov eax, dword [rax]	      4003	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x739f	    0x898540f6ffff	            mov dword [rbp - 0x9c0], eax	      4003	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_21
0x73a5	    0x48838588f6ff	              add qword [rbp - 0x978], 1	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x73ad	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x73b3	            0x4898	                                    cdqe	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x73b5	    0x483b8588f6ff	            cmp rax, qword [rbp - 0x978]	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x73bc	     0xf8f6bffffff	                            jg 0x400736d	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x73c2	            0xeb01	                           jmp 0x4007405	      3998	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3
0x73c4	              0x90	                                     nop	      4001	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	FOR_3	IF_20
0x73c5	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4005	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	IF_22
0x73cb	            0x4898	                                    cdqe	      4005	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	IF_22
0x73cd	    0x483b8588f6ff	            cmp rax, qword [rbp - 0x978]	      4005	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	IF_22
0x73d4	            0x7527	                           jne 0x400743d	      4005	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	IF_22
0x73d6	    0x8b8544f6ffff	            mov eax, dword [rbp - 0x9bc]	      4005	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	IF_22
0x73dc	    0x3b8540f6ffff	            cmp eax, dword [rbp - 0x9c0]	      4005	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	IF_22
0x73e2	            0x7519	                           jne 0x400743d	      4005	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	IF_22
0x73e4	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4007	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	IF_22
0x73eb	    0x48898578f6ff	            mov qword [rbp - 0x988], rax	      4007	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	IF_22
0x73f2	    0x48c78580f6ff	              mov qword [rbp - 0x980], 0	      4008	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_18	IF_22
0x73fd	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x7403	            0x4898	                                    cdqe	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x7405	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x740c	          0x4863d0	                         movsxd rdx, eax	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x740f	          0x4889d0	                            mov rax, rdx	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x7412	          0x4801c0	                            add rax, rax	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x7415	          0x4801d0	                            add rax, rdx	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x7418	        0x48c1e003	                              shl rax, 3	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x741c	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x7420	          0x4801d8	                            add rax, rbx	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x7423	    0x482de4070000	                          sub rax, 0x7e4	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x7429	            0x8b00	                    mov eax, dword [rax]	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x742b	            0x4898	                                    cdqe	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x742d	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x7434	     0xf8db3020000	                           jge 0x400772d	      4011	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x743a	    0x8b0500000000	            mov eax, dword [0x04007480] 	      4015	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24
0x7440	            0x85c0	                           test eax, eax	      4015	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24
0x7442	     0xf8494000000	                            je 0x400751c	      4015	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24
0x7448	    0x48c78588f6ff	              mov qword [rbp - 0x978], 0	      4018	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24
0x7453	            0xeb48	                           jmp 0x40074dd	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x7455	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      4021	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2	CALL_7
0x745c	    0x488b8588f6ff	            mov rax, qword [rbp - 0x978]	      4021	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2	CALL_7
0x7463	          0x4801d0	                            add rax, rdx	      4021	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2	CALL_7
0x7466	          0x4889c7	                            mov rdi, rax	      4021	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2	CALL_7
0x7469	      0xe800000000	                          call 0x40074ae	      4021	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2	CALL_7
0x746e	            0x4898	                                    cdqe	      4021	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2	CALL_7
0x7470	    0x48298580f6ff	            sub qword [rbp - 0x980], rax	      4021	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2	CALL_7
0x7477	    0x488b05000000	            mov rax, qword [0x040074be] 	      4022	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x747e	    0x488b8d70f6ff	            mov rcx, qword [rbp - 0x990]	      4022	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x7485	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4022	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x748c	          0x4801ca	                            add rdx, rcx	      4022	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x748f	          0x4889d7	                            mov rdi, rdx	      4022	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x7492	            0xffd0	                                call rax	      4022	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x7494	            0x4898	                                    cdqe	      4022	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x7496	    0x48018588f6ff	           add qword [rbp - 0x978], rax 	      4022	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x749d	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x74a3	            0x4898	                                    cdqe	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x74a5	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x74ac	          0x4863d0	                         movsxd rdx, eax	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x74af	          0x4889d0	                            mov rax, rdx	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x74b2	          0x4801c0	                            add rax, rax	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x74b5	          0x4801d0	                            add rax, rdx	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x74b8	        0x48c1e003	                              shl rax, 3	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x74bc	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x74c0	          0x4801d8	                            add rax, rbx	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x74c3	    0x482de4070000	                          sub rax, 0x7e4	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x74c9	            0x8b00	                    mov eax, dword [rax]	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x74cb	            0x4898	                                    cdqe	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x74cd	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x74d4	     0xf8e7bffffff	                           jle 0x4007495	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x74da	            0xeb55	                           jmp 0x4007571	      4019	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	IF_24	WHILE_2
0x74dc	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x74e3	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x74ea	          0x4829d0	                            sub rax, rdx	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x74ed	          0x4889c1	                            mov rcx, rax	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x74f0	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x74f6	            0x4898	                                    cdqe	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x74f8	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x74ff	          0x4863d0	                         movsxd rdx, eax	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x7502	          0x4889d0	                            mov rax, rdx	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x7505	          0x4801c0	                            add rax, rax	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x7508	          0x4801d0	                            add rax, rdx	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x750b	        0x48c1e003	                              shl rax, 3	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x750f	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x7513	          0x4801d8	                            add rax, rbx	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x7516	    0x482de4070000	                          sub rax, 0x7e4	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x751c	            0x8b00	                    mov eax, dword [rax]	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x751e	            0x4898	                                    cdqe	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x7520	          0x4829c1	                            sub rcx, rax	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x7523	          0x4889c8	                            mov rax, rcx	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x7526	        0x4883c001	                              add rax, 1	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x752a	    0x48898588f6ff	            mov qword [rbp - 0x978], rax	      4027	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	ELSE_3
0x7531	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4029	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x7538	          0xc6003c	                    mov byte [rax], 0x3c	      4029	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x753b	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x7542	    0x488b8d70f6ff	            mov rcx, qword [rbp - 0x990]	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x7549	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x7550	          0x4801ca	                            add rdx, rcx	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x7553	          0x4829d0	                            sub rax, rdx	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x7556	          0x4889c6	                            mov rsi, rax	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x7559	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x7560	    0x488b8588f6ff	            mov rax, qword [rbp - 0x978]	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x7567	        0x488d0c02	                    lea rcx, [rdx + rax]	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x756b	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x7572	        0x4883c001	                              add rax, 1	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x7576	          0x4889f2	                            mov rdx, rsi	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x7579	          0x4889ce	                            mov rsi, rcx	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x757c	          0x4889c7	                            mov rdi, rax	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x757f	      0xe800000000	                          call 0x40075c4	      4030	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	CALL_8
0x7584	    0x488b8588f6ff	            mov rax, qword [rbp - 0x978]	      4031	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x758b	      0xba01000000	                              mov edx, 1	      4031	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x7590	          0x4829c2	                            sub rdx, rax	      4031	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x7593	          0x4889d0	                            mov rax, rdx	      4031	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x7596	    0x48018578f6ff	           add qword [rbp - 0x988], rax 	      4031	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23
0x759d	            0xeb1a	                           jmp 0x40075f9	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x759f	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4035	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x75a6	        0x488d5001	                      lea rdx, [rax + 1]	      4035	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x75aa	    0x48899578f6ff	            mov qword [rbp - 0x988], rdx	      4035	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x75b1	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	      4035	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x75b7	            0x8810	                      mov byte [rax], dl	      4035	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x75b9	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x75c1	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x75c7	            0x4898	                                    cdqe	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x75c9	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x75d0	          0x4863d0	                         movsxd rdx, eax	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x75d3	          0x4889d0	                            mov rax, rdx	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x75d6	          0x4801c0	                            add rax, rax	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x75d9	          0x4801d0	                            add rax, rdx	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x75dc	        0x48c1e003	                              shl rax, 3	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x75e0	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x75e4	          0x4801d8	                            add rax, rbx	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x75e7	    0x482de8070000	                          sub rax, 0x7e8	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x75ed	            0x8b00	                    mov eax, dword [rax]	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x75ef	            0x4898	                                    cdqe	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x75f1	    0x48398580f6ff	           cmp qword [rbp - 0x980], rax 	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x75f8	            0x7ca5	                            jl 0x40075df	      4034	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	WHILE_3
0x75fa	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x7600	            0x4898	                                    cdqe	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x7602	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x7609	          0x83c001	                              add eax, 1	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x760c	            0x4898	                                    cdqe	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x760e	    0x48898580f6ff	            mov qword [rbp - 0x980], rax	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x7615	      0xe9b9000000	                           jmp 0x4007713	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x761a	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x7621	          0x4889d0	                            mov rax, rdx	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x7624	          0x4801c0	                            add rax, rax	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x7627	          0x4801d0	                            add rax, rdx	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x762a	        0x48c1e003	                              shl rax, 3	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x762e	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x7632	          0x4801d8	                            add rax, rbx	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x7635	    0x482df0070000	                          sub rax, 0x7f0	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x763b	          0x488b00	                    mov rax, qword [rax]	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x763e	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x7645	          0x48f7da	                                 neg rdx	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x7648	        0x488d0c10	                    lea rcx, [rax + rdx]	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x764c	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x7653	          0x4889d0	                            mov rax, rdx	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x7656	          0x4801c0	                            add rax, rax	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x7659	          0x4801d0	                            add rax, rdx	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x765c	        0x48c1e003	                              shl rax, 3	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x7660	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x7664	          0x4801d8	                            add rax, rbx	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x7667	    0x482df0070000	                          sub rax, 0x7f0	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x766d	          0x488908	                    mov qword [rax], rcx	      4041	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x7670	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x7677	          0x4889d0	                            mov rax, rdx	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x767a	          0x4801c0	                            add rax, rax	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x767d	          0x4801d0	                            add rax, rdx	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x7680	        0x48c1e003	                              shl rax, 3	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x7684	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x7688	          0x4801d8	                            add rax, rbx	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x768b	    0x482df0070000	                          sub rax, 0x7f0	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x7691	          0x488b10	                    mov rdx, qword [rax]	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x7694	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x769b	          0x4839c2	                            cmp rdx, rax	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x769e	            0x732b	                           jae 0x400770b	      4042	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x76a0	    0x488b8d70f6ff	            mov rcx, qword [rbp - 0x990]	      4043	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x76a7	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4043	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x76ae	          0x4889d0	                            mov rax, rdx	      4043	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x76b1	          0x4801c0	                            add rax, rax	      4043	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x76b4	          0x4801d0	                            add rax, rdx	      4043	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x76b7	        0x48c1e003	                              shl rax, 3	      4043	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x76bb	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4043	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x76bf	          0x4801f0	                            add rax, rsi	      4043	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x76c2	    0x482df0070000	                          sub rax, 0x7f0	      4043	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x76c8	          0x488908	                    mov qword [rax], rcx	      4043	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4	IF_25
0x76cb	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x76d3	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x76d9	            0x4898	                                    cdqe	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x76db	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x76e2	     0xf8f32ffffff	                            jg 0x400765a	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x76e8	      0xe91f1a0000	                           jmp 0x400914c	      4039	buffer.c	FUNCTION_65	FOR_1	IF_16	IF_23	FOR_4
0x76ed	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x76f3	            0x4898	                                    cdqe	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x76f5	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x76fc	          0x4863d0	                         movsxd rdx, eax	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x76ff	          0x4889d0	                            mov rax, rdx	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x7702	          0x4801c0	                            add rax, rax	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x7705	          0x4801d0	                            add rax, rdx	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x7708	        0x48c1e003	                              shl rax, 3	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x770c	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x7710	          0x4801d8	                            add rax, rbx	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x7713	    0x482de8070000	                          sub rax, 0x7e8	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x7719	            0x8b00	                    mov eax, dword [rax]	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x771b	              0x99	                                     cdq	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x771c	            0x31d0	                            xor eax, edx	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x771e	            0x29d0	                            sub eax, edx	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x7720	            0x4898	                                    cdqe	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x7722	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x7729	     0xf8edd190000	                           jle 0x400914c	      4046	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	CALL_9
0x772f	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x7735	            0x4898	                                    cdqe	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x7737	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x773e	          0x4863d0	                         movsxd rdx, eax	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x7741	          0x4889d0	                            mov rax, rdx	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x7744	          0x4801c0	                            add rax, rax	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x7747	          0x4801d0	                            add rax, rdx	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x774a	        0x48c1e003	                              shl rax, 3	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x774e	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x7752	          0x4801f0	                            add rax, rsi	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x7755	    0x482de8070000	                          sub rax, 0x7e8	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x775b	            0x8b00	                    mov eax, dword [rax]	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x775d	            0x4898	                                    cdqe	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x775f	    0x48898588f6ff	            mov qword [rbp - 0x978], rax	      4049	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26
0x7766	    0x4883bd88f6ff	              cmp qword [rbp - 0x978], 0	      4050	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27
0x776e	            0x7968	                           jns 0x4007818	      4050	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27
0x7770	    0x48f79d88f6ff	                 neg qword [rbp - 0x978]	      4053	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27
0x7777	            0xeb1a	                           jmp 0x40077d3	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x7779	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4055	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x7780	        0x488d5001	                      lea rdx, [rax + 1]	      4055	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x7784	    0x48899578f6ff	            mov qword [rbp - 0x988], rdx	      4055	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x778b	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	      4055	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x7791	            0x8810	                      mov byte [rax], dl	      4055	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x7793	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x779a	        0x488d5001	                      lea rdx, [rax + 1]	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x779e	    0x48899580f6ff	            mov qword [rbp - 0x980], rdx	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x77a5	    0x483b8588f6ff	            cmp rax, qword [rbp - 0x978]	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x77ac	     0xf8d5a190000	                           jge 0x400914c	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x77b2	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x77b9	        0x488d4801	                      lea rcx, [rax + 1]	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x77bd	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x77c4	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x77cb	          0x4801d0	                            add rax, rdx	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x77ce	          0x4839c1	                            cmp rcx, rax	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x77d1	            0x72a6	                            jb 0x40077b9	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x77d3	      0xe934190000	                           jmp 0x400914c	      4054	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	IF_27	WHILE_4
0x77d8	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x77df	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x77e6	          0x4829d0	                            sub rax, rdx	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x77e9	          0x4889c7	                            mov rdi, rax	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x77ec	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x77f3	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x77fa	    0x488bb588f6ff	            mov rsi, qword [rbp - 0x978]	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x7801	    0x488b8d80f6ff	            mov rcx, qword [rbp - 0x980]	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x7808	          0x4829ce	                            sub rsi, rcx	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x780b	          0x4889f1	                            mov rcx, rsi	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x780e	          0x4801d1	                            add rcx, rdx	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x7811	          0x4889fa	                            mov rdx, rdi	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x7814	          0x4889c6	                            mov rsi, rax	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x7817	          0x4889cf	                            mov rdi, rcx	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x781a	      0xe800000000	                          call 0x400785f	      4060	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	CALL_10
0x781f	    0x488b8588f6ff	            mov rax, qword [rbp - 0x978]	      4061	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5
0x7826	    0x482b8580f6ff	            sub rax, qword [rbp - 0x980]	      4061	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5
0x782d	    0x48898580f6ff	            mov qword [rbp - 0x980], rax	      4061	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5
0x7834	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4062	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x783b	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4062	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x7842	        0x488d0c02	                    lea rcx, [rdx + rax]	      4062	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x7846	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      4062	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x784d	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      4062	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x7854	          0x4801d0	                            add rax, rdx	      4062	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x7857	          0x4839c1	                            cmp rcx, rax	      4062	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x785a	            0x722c	                            jb 0x40078c8	      4062	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x785c	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      4063	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x7863	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      4063	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x786a	          0x4801d0	                            add rax, rdx	      4063	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x786d	          0x4889c2	                            mov rdx, rax	      4063	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x7870	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4063	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x7877	          0x4829c2	                            sub rdx, rax	      4063	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x787a	          0x4889d0	                            mov rax, rdx	      4063	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x787d	        0x4883e801	                              sub rax, 1	      4063	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x7881	    0x48898580f6ff	            mov qword [rbp - 0x980], rax	      4063	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	IF_28
0x7888	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      4064	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5
0x788f	    0x48018578f6ff	           add qword [rbp - 0x988], rax 	      4064	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5
0x7896	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x789c	            0x4898	                                    cdqe	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x789e	    0x8b8485c0f6ff	    mov eax, dword [rbp + rax*4 - 0x940]	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x78a5	          0x83c001	                              add eax, 1	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x78a8	            0x4898	                                    cdqe	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x78aa	    0x48898588f6ff	            mov qword [rbp - 0x978], rax	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x78b1	            0xeb5b	                           jmp 0x400794e	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x78b3	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x78ba	          0x4889d0	                            mov rax, rdx	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x78bd	          0x4801c0	                            add rax, rax	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x78c0	          0x4801d0	                            add rax, rdx	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x78c3	        0x48c1e003	                              shl rax, 3	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x78c7	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x78cb	          0x4801d8	                            add rax, rbx	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x78ce	    0x482df0070000	                          sub rax, 0x7f0	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x78d4	          0x488b10	                    mov rdx, qword [rax]	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x78d7	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x78de	        0x488d0c02	                    lea rcx, [rdx + rax]	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x78e2	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x78e9	          0x4889d0	                            mov rax, rdx	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x78ec	          0x4801c0	                            add rax, rax	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x78ef	          0x4801d0	                            add rax, rdx	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x78f2	        0x48c1e003	                              shl rax, 3	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x78f6	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x78fa	          0x4801f0	                            add rax, rsi	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x78fd	    0x482df0070000	                          sub rax, 0x7f0	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x7903	          0x488908	                    mov qword [rax], rcx	      4066	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x7906	    0x48838588f6ff	              add qword [rbp - 0x978], 1	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x790e	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x7914	            0x4898	                                    cdqe	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x7916	    0x483b8588f6ff	            cmp rax, qword [rbp - 0x978]	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x791d	            0x7f94	                            jg 0x40078f3	      4065	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_5
0x791f	            0xeb22	                           jmp 0x4007983	      4067	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_6
0x7921	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4068	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_6
0x7928	        0x488d5001	                      lea rdx, [rax + 1]	      4068	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_6
0x792c	    0x48899570f6ff	            mov qword [rbp - 0x990], rdx	      4068	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_6
0x7933	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	      4068	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_6
0x7939	            0x8810	                      mov byte [rax], dl	      4068	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_6
0x793b	    0x4883ad80f6ff	              sub qword [rbp - 0x980], 1	      4067	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_6
0x7943	    0x4883bd80f6ff	              cmp qword [rbp - 0x980], 0	      4067	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_6
0x794b	            0x7fd4	                            jg 0x4007961	      4067	buffer.c	FUNCTION_65	FOR_1	IF_16	ELSE_4	IF_26	ELSE_5	FOR_6
0x794d	      0xe9ba170000	                           jmp 0x400914c	      4071	buffer.c	FUNCTION_65	FOR_1	IF_16
0x7952	    0xc7854cf6ffff	              mov dword [rbp - 0x9b4], 0	      4073	buffer.c	FUNCTION_65	FOR_1
0x795c	    0xc78550f6ffff	         mov dword [rbp - 0x9b0], 0x270f	      4074	buffer.c	FUNCTION_65	FOR_1
0x7966	    0xc78554f6ffff	              mov dword [rbp - 0x9ac], 0	      4075	buffer.c	FUNCTION_65	FOR_1
0x7970	    0x48c78580f6ff	              mov qword [rbp - 0x980], 1	      4076	buffer.c	FUNCTION_65	FOR_1
0x797b	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4077	buffer.c	FUNCTION_65	FOR_1	IF_29
0x7982	           0xfb600	                   movzx eax, byte [rax]	      4077	buffer.c	FUNCTION_65	FOR_1	IF_29
0x7985	            0x3c30	                            cmp al, 0x30	      4077	buffer.c	FUNCTION_65	FOR_1	IF_29
0x7987	            0x751c	                           jne 0x40079e5	      4077	buffer.c	FUNCTION_65	FOR_1	IF_29
0x7989	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4079	buffer.c	FUNCTION_65	FOR_1	IF_29
0x7990	        0x4883c001	                              add rax, 1	      4079	buffer.c	FUNCTION_65	FOR_1	IF_29
0x7994	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4079	buffer.c	FUNCTION_65	FOR_1	IF_29
0x799b	    0xc78554f6ffff	              mov dword [rbp - 0x9ac], 1	      4080	buffer.c	FUNCTION_65	FOR_1	IF_29
0x79a5	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4082	buffer.c	FUNCTION_65	FOR_1	IF_30
0x79ac	           0xfb600	                   movzx eax, byte [rax]	      4082	buffer.c	FUNCTION_65	FOR_1	IF_30
0x79af	            0x3c2d	                            cmp al, 0x2d	      4082	buffer.c	FUNCTION_65	FOR_1	IF_30
0x79b1	            0x751d	                           jne 0x4007a10	      4082	buffer.c	FUNCTION_65	FOR_1	IF_30
0x79b3	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4084	buffer.c	FUNCTION_65	FOR_1	IF_30
0x79ba	        0x4883c001	                              add rax, 1	      4084	buffer.c	FUNCTION_65	FOR_1	IF_30
0x79be	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4084	buffer.c	FUNCTION_65	FOR_1	IF_30
0x79c5	    0x48c78580f6ff	mov qword [rbp - 0x980], 0xffffffffffffffff	      4085	buffer.c	FUNCTION_65	FOR_1	IF_30
0x79d0	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4087	buffer.c	FUNCTION_65	FOR_1	IF_31	CALL_11
0x79d7	           0xfb600	                   movzx eax, byte [rax]	      4087	buffer.c	FUNCTION_65	FOR_1	IF_31	CALL_11
0x79da	           0xfb6c0	                           movzx eax, al	      4087	buffer.c	FUNCTION_65	FOR_1	IF_31	CALL_11
0x79dd	          0x83e830	                           sub eax, 0x30	      4087	buffer.c	FUNCTION_65	FOR_1	IF_31	CALL_11
0x79e0	          0x83f809	                              cmp eax, 9	      4087	buffer.c	FUNCTION_65	FOR_1	IF_31	CALL_11
0x79e3	            0x7728	                            ja 0x4007a4d	      4087	buffer.c	FUNCTION_65	FOR_1	IF_31	CALL_11
0x79e5	    0x488d8568f6ff	                  lea rax, [rbp - 0x998]	      4089	buffer.c	FUNCTION_65	FOR_1	IF_31	CALL_12
0x79ec	          0x4889c7	                            mov rdi, rax	      4089	buffer.c	FUNCTION_65	FOR_1	IF_31	CALL_12
0x79ef	      0xe800000000	                          call 0x4007a34	      4089	buffer.c	FUNCTION_65	FOR_1	IF_31	CALL_12
0x79f4	    0x89854cf6ffff	            mov dword [rbp - 0x9b4], eax	      4089	buffer.c	FUNCTION_65	FOR_1	IF_31	CALL_12
0x79fa	    0x83bd4cf6ffff	              cmp dword [rbp - 0x9b4], 0	      4090	buffer.c	FUNCTION_65	FOR_1	IF_31	IF_32
0x7a01	            0x790a	                           jns 0x4007a4d	      4090	buffer.c	FUNCTION_65	FOR_1	IF_31	IF_32
0x7a03	    0xc7854cf6ffff	              mov dword [rbp - 0x9b4], 0	      4091	buffer.c	FUNCTION_65	FOR_1	IF_31	IF_32
0x7a0d	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4093	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a14	           0xfb600	                   movzx eax, byte [rax]	      4093	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a17	            0x3c2a	                            cmp al, 0x2a	      4093	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a19	     0xf85b0000000	                           jne 0x4007b0f	      4093	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a1f	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4095	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a25	          0x4863d0	                         movsxd rdx, eax	      4095	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a28	          0x4889d0	                            mov rax, rdx	      4095	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a2b	          0x4801c0	                            add rax, rax	      4095	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a2e	          0x4801d0	                            add rax, rdx	      4095	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a31	        0x48c1e003	                              shl rax, 3	      4095	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a35	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4095	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a39	          0x4801d8	                            add rax, rbx	      4095	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a3c	    0x482de0070000	                          sub rax, 0x7e0	      4095	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a42	    0xc70004000000	                      mov dword [rax], 4	      4095	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a48	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4096	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a4e	          0x4863d0	                         movsxd rdx, eax	      4096	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a51	          0x4889d0	                            mov rax, rdx	      4096	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a54	          0x4801c0	                            add rax, rax	      4096	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a57	          0x4801d0	                            add rax, rdx	      4096	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a5a	        0x48c1e003	                              shl rax, 3	      4096	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a5e	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4096	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a62	          0x4801f0	                            add rax, rsi	      4096	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a65	    0x488d9010f8ff	                  lea rdx, [rax - 0x7f0]	      4096	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a6c	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4096	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a73	          0x488902	                    mov qword [rdx], rax	      4096	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a76	    0x83bd4cf6ffff	              cmp dword [rbp - 0x9b4], 9	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a7d	            0x7f08	                            jg 0x4007ac7	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a7f	    0x8b8d4cf6ffff	            mov ecx, dword [rbp - 0x9b4]	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a85	            0xeb05	                           jmp 0x4007acc	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a87	      0xb901000000	                              mov ecx, 1	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a8c	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a92	          0x4863d0	                         movsxd rdx, eax	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a95	          0x4889d0	                            mov rax, rdx	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a98	          0x4801c0	                            add rax, rax	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a9b	          0x4801d0	                            add rax, rdx	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7a9e	        0x48c1e003	                              shl rax, 3	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7aa2	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7aa6	          0x4801d8	                            add rax, rbx	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7aa9	    0x482de8070000	                          sub rax, 0x7e8	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7aaf	            0x8908	                    mov dword [rax], ecx	      4097	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7ab1	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4098	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7ab8	        0x4883c001	                              add rax, 1	      4098	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7abc	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4098	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7ac3	    0x83853cf6ffff	              add dword [rbp - 0x9c4], 1	      4099	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7aca	      0xe93d160000	                           jmp 0x400914c	      4100	buffer.c	FUNCTION_65	FOR_1	IF_33
0x7acf	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4102	buffer.c	FUNCTION_65	FOR_1	IF_34
0x7ad6	           0xfb600	                   movzx eax, byte [rax]	      4102	buffer.c	FUNCTION_65	FOR_1	IF_34
0x7ad9	            0x3c54	                            cmp al, 0x54	      4102	buffer.c	FUNCTION_65	FOR_1	IF_34
0x7adb	            0x7412	                            je 0x4007b2f	      4102	buffer.c	FUNCTION_65	FOR_1	IF_34
0x7add	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4102	buffer.c	FUNCTION_65	FOR_1	IF_34
0x7ae4	           0xfb600	                   movzx eax, byte [rax]	      4102	buffer.c	FUNCTION_65	FOR_1	IF_34
0x7ae7	            0x3c58	                            cmp al, 0x58	      4102	buffer.c	FUNCTION_65	FOR_1	IF_34
0x7ae9	     0xf856f010000	                           jne 0x4007c9e	      4102	buffer.c	FUNCTION_65	FOR_1	IF_34
0x7aef	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4104	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35
0x7af6	           0xfb600	                   movzx eax, byte [rax]	      4104	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35
0x7af9	            0x3c58	                            cmp al, 0x58	      4104	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35
0x7afb	     0xf85bc000000	                           jne 0x4007bfd	      4104	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35
0x7b01	    0x83bd4cf6ffff	              cmp dword [rbp - 0x9b4], 0	      4106	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36
0x7b08	     0xf85a9000000	                           jne 0x4007bf7	      4106	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36
0x7b0e	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4110	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7
0x7b14	          0x83e801	                              sub eax, 1	      4110	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7
0x7b17	            0x4898	                                    cdqe	      4110	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7
0x7b19	    0x48898588f6ff	            mov qword [rbp - 0x978], rax	      4110	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7
0x7b20	      0xe982000000	                           jmp 0x4007be7	      4110	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7
0x7b25	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b2c	          0x4889d0	                            mov rax, rdx	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b2f	          0x4801c0	                            add rax, rax	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b32	          0x4801d0	                            add rax, rdx	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b35	        0x48c1e003	                              shl rax, 3	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b39	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b3d	          0x4801f0	                            add rax, rsi	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b40	    0x482de0070000	                          sub rax, 0x7e0	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b46	            0x8b00	                    mov eax, dword [rax]	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b48	          0x83f805	                              cmp eax, 5	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b4b	            0x7552	                           jne 0x4007bdf	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b4d	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b54	          0x4889d0	                            mov rax, rdx	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b57	          0x4801c0	                            add rax, rax	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b5a	          0x4801d0	                            add rax, rdx	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b5d	        0x48c1e003	                              shl rax, 3	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b61	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b65	          0x4801d8	                            add rax, rbx	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b68	    0x482de8070000	                          sub rax, 0x7e8	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b6e	            0x8b00	                    mov eax, dword [rax]	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b70	            0x85c0	                           test eax, eax	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b72	            0x782b	                            js 0x4007bdf	      4111	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b74	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4113	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b7b	          0x4889d0	                            mov rax, rdx	      4113	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b7e	          0x4801c0	                            add rax, rax	      4113	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b81	          0x4801d0	                            add rax, rdx	      4113	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b84	        0x48c1e003	                              shl rax, 3	      4113	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b88	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4113	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b8c	          0x4801f0	                            add rax, rsi	      4113	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b8f	    0x482de8070000	                          sub rax, 0x7e8	      4113	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b95	            0x8b00	                    mov eax, dword [rax]	      4113	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b97	    0x89854cf6ffff	            mov dword [rbp - 0x9b4], eax	      4113	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b9d	            0xeb1e	                           jmp 0x4007bfd	      4114	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7	IF_37
0x7b9f	    0x4883ad88f6ff	              sub qword [rbp - 0x978], 1	      4110	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7
0x7ba7	    0x4883bd88f6ff	              cmp qword [rbp - 0x978], 0	      4110	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7
0x7baf	     0xf8970ffffff	                           jns 0x4007b65	      4110	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7
0x7bb5	            0xeb06	                           jmp 0x4007bfd	      4110	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	IF_36	FOR_7
0x7bb7	    0xf79d4cf6ffff	                 neg dword [rbp - 0x9b4]	      4119	buffer.c	FUNCTION_65	FOR_1	IF_34	IF_35	ELSE_6
0x7bbd	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4121	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7bc3	          0x4863d0	                         movsxd rdx, eax	      4121	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7bc6	          0x4889d0	                            mov rax, rdx	      4121	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7bc9	          0x4801c0	                            add rax, rax	      4121	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7bcc	          0x4801d0	                            add rax, rdx	      4121	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7bcf	        0x48c1e003	                              shl rax, 3	      4121	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7bd3	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4121	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7bd7	          0x4801d8	                            add rax, rbx	      4121	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7bda	    0x482de0070000	                          sub rax, 0x7e0	      4121	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7be0	    0xc70005000000	                      mov dword [rax], 5	      4121	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7be6	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4122	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7bec	          0x4863d0	                         movsxd rdx, eax	      4122	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7bef	          0x4889d0	                            mov rax, rdx	      4122	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7bf2	          0x4801c0	                            add rax, rax	      4122	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7bf5	          0x4801d0	                            add rax, rdx	      4122	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7bf8	        0x48c1e003	                              shl rax, 3	      4122	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7bfc	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4122	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7c00	          0x4801f0	                            add rax, rsi	      4122	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7c03	    0x488d9010f8ff	                  lea rdx, [rax - 0x7f0]	      4122	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7c0a	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4122	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7c11	          0x488902	                    mov qword [rdx], rax	      4122	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7c14	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4123	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7c1a	          0x4863d0	                         movsxd rdx, eax	      4123	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7c1d	          0x4889d0	                            mov rax, rdx	      4123	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7c20	          0x4801c0	                            add rax, rax	      4123	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7c23	          0x4801d0	                            add rax, rdx	      4123	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7c26	        0x48c1e003	                              shl rax, 3	      4123	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7c2a	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4123	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7c2e	          0x4801d8	                            add rax, rbx	      4123	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7c31	    0x488d9018f8ff	                  lea rdx, [rax - 0x7e8]	      4123	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7c38	    0x8b854cf6ffff	            mov eax, dword [rbp - 0x9b4]	      4123	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7c3e	            0x8902	                    mov dword [rdx], eax	      4123	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7c40	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4124	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7c47	        0x4883c001	                              add rax, 1	      4124	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7c4b	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4124	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7c52	    0x83853cf6ffff	              add dword [rbp - 0x9c4], 1	      4125	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7c59	      0xe9ae140000	                           jmp 0x400914c	      4126	buffer.c	FUNCTION_65	FOR_1	IF_34	ELSE_6
0x7c5e	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4128	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38
0x7c65	           0xfb600	                   movzx eax, byte [rax]	      4128	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38
0x7c68	            0x3c2e	                            cmp al, 0x2e	      4128	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38
0x7c6a	            0x754f	                           jne 0x4007cfb	      4128	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38
0x7c6c	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4130	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38
0x7c73	        0x4883c001	                              add rax, 1	      4130	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38
0x7c77	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4130	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38
0x7c7e	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4131	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	CALL_13
0x7c85	           0xfb600	                   movzx eax, byte [rax]	      4131	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	CALL_13
0x7c88	           0xfb6c0	                           movzx eax, al	      4131	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	CALL_13
0x7c8b	          0x83e830	                           sub eax, 0x30	      4131	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	CALL_13
0x7c8e	          0x83f809	                              cmp eax, 9	      4131	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	CALL_13
0x7c91	            0x7728	                            ja 0x4007cfb	      4131	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	CALL_13
0x7c93	    0x488d8568f6ff	                  lea rax, [rbp - 0x998]	      4133	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	CALL_14
0x7c9a	          0x4889c7	                            mov rdi, rax	      4133	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	CALL_14
0x7c9d	      0xe800000000	                          call 0x4007ce2	      4133	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	CALL_14
0x7ca2	    0x898550f6ffff	            mov dword [rbp - 0x9b0], eax	      4133	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	CALL_14
0x7ca8	    0x83bd50f6ffff	              cmp dword [rbp - 0x9b0], 0	      4134	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	IF_40
0x7caf	            0x7f0a	                            jg 0x4007cfb	      4134	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	IF_40
0x7cb1	    0xc78550f6ffff	          mov dword [rbp - 0x9b0], 0x32 	      4135	buffer.c	FUNCTION_65	FOR_1	ELSE_6	IF_38	IF_39	IF_40
0x7cbb	      0xb832000000	                           mov eax, 0x32	      4138	buffer.c	FUNCTION_65	FOR_1
0x7cc0	    0x83bd4cf6ffff	          cmp dword [rbp - 0x9b4], 0x32 	      4138	buffer.c	FUNCTION_65	FOR_1
0x7cc7	     0xf4e854cf6ff	         cmovle eax, dword [rbp - 0x9b4]	      4138	buffer.c	FUNCTION_65	FOR_1
0x7cce	            0x89c2	                            mov edx, eax	      4138	buffer.c	FUNCTION_65	FOR_1
0x7cd0	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      4138	buffer.c	FUNCTION_65	FOR_1
0x7cd7	           0xfafc2	                           imul eax, edx	      4138	buffer.c	FUNCTION_65	FOR_1
0x7cda	    0x89854cf6ffff	            mov dword [rbp - 0x9b4], eax	      4138	buffer.c	FUNCTION_65	FOR_1
0x7ce0	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4139	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7ce7	           0xfb600	                   movzx eax, byte [rax]	      4139	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7cea	            0x3c28	                            cmp al, 0x28	      4139	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7cec	     0xf85eb000000	                           jne 0x4007e1d	      4139	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7cf2	    0x8b8548f6ffff	            mov eax, dword [rbp - 0x9b8]	      4141	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7cf8	          0x8d5001	                      lea edx, [rax + 1]	      4141	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7cfb	    0x899548f6ffff	            mov dword [rbp - 0x9b8], edx	      4141	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d01	            0x4898	                                    cdqe	      4141	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d03	    0x8b953cf6ffff	            mov edx, dword [rbp - 0x9c4]	      4141	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d09	    0x899485c0f6ff	    mov dword [rbp + rax*4 - 0x940], edx	      4141	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d10	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4142	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d16	          0x4863d0	                         movsxd rdx, eax	      4142	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d19	          0x4889d0	                            mov rax, rdx	      4142	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d1c	          0x4801c0	                            add rax, rax	      4142	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d1f	          0x4801d0	                            add rax, rdx	      4142	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d22	        0x48c1e003	                              shl rax, 3	      4142	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d26	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4142	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d2a	          0x4801f0	                            add rax, rsi	      4142	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d2d	    0x482de0070000	                          sub rax, 0x7e0	      4142	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d33	    0xc70002000000	                      mov dword [rax], 2	      4142	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d39	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4143	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d3f	          0x4863d0	                         movsxd rdx, eax	      4143	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d42	          0x4889d0	                            mov rax, rdx	      4143	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d45	          0x4801c0	                            add rax, rax	      4143	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d48	          0x4801d0	                            add rax, rdx	      4143	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d4b	        0x48c1e003	                              shl rax, 3	      4143	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d4f	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4143	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d53	          0x4801d8	                            add rax, rbx	      4143	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d56	    0x488d9010f8ff	                  lea rdx, [rax - 0x7f0]	      4143	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d5d	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4143	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d64	          0x488902	                    mov qword [rdx], rax	      4143	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d67	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4144	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d6d	          0x4863d0	                         movsxd rdx, eax	      4144	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d70	          0x4889d0	                            mov rax, rdx	      4144	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d73	          0x4801c0	                            add rax, rax	      4144	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d76	          0x4801d0	                            add rax, rdx	      4144	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d79	        0x48c1e003	                              shl rax, 3	      4144	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d7d	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4144	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d81	          0x4801f0	                            add rax, rsi	      4144	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d84	    0x488d9018f8ff	                  lea rdx, [rax - 0x7e8]	      4144	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d8b	    0x8b854cf6ffff	            mov eax, dword [rbp - 0x9b4]	      4144	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d91	            0x8902	                    mov dword [rdx], eax	      4144	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d93	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4145	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d99	          0x4863d0	                         movsxd rdx, eax	      4145	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d9c	          0x4889d0	                            mov rax, rdx	      4145	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7d9f	          0x4801c0	                            add rax, rax	      4145	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7da2	          0x4801d0	                            add rax, rdx	      4145	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7da5	        0x48c1e003	                              shl rax, 3	      4145	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7da9	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4145	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7dad	          0x4801d8	                            add rax, rbx	      4145	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7db0	    0x488d901cf8ff	                  lea rdx, [rax - 0x7e4]	      4145	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7db7	    0x8b8550f6ffff	            mov eax, dword [rbp - 0x9b0]	      4145	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7dbd	            0x8902	                    mov dword [rdx], eax	      4145	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7dbf	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4146	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7dc6	        0x4883c001	                              add rax, 1	      4146	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7dca	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4146	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7dd1	    0x83853cf6ffff	              add dword [rbp - 0x9c4], 1	      4147	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7dd8	      0xe92f130000	                           jmp 0x400914c	      4148	buffer.c	FUNCTION_65	FOR_1	IF_41
0x7ddd	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4150	buffer.c	FUNCTION_65	FOR_1	IF_42	CALL_15
0x7de4	           0xfb600	                   movzx eax, byte [rax]	      4150	buffer.c	FUNCTION_65	FOR_1	IF_42	CALL_15
0x7de7	           0xfb6c0	                           movzx eax, al	      4150	buffer.c	FUNCTION_65	FOR_1	IF_42	CALL_15
0x7dea	            0x89c6	                            mov esi, eax	      4150	buffer.c	FUNCTION_65	FOR_1	IF_42	CALL_15
0x7dec	      0xbf00000000	                              mov edi, 0	      4150	buffer.c	FUNCTION_65	FOR_1	IF_42	CALL_15
0x7df1	      0xe800000000	                          call 0x4007e36	      4150	buffer.c	FUNCTION_65	FOR_1	IF_42	CALL_15
0x7df6	          0x4885c0	                           test rax, rax	      4150	buffer.c	FUNCTION_65	FOR_1	IF_42	CALL_15
0x7df9	            0x7517	                           jne 0x4007e52	      4150	buffer.c	FUNCTION_65	FOR_1	IF_42	CALL_15
0x7dfb	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4152	buffer.c	FUNCTION_65	FOR_1	IF_42
0x7e02	        0x4883c001	                              add rax, 1	      4152	buffer.c	FUNCTION_65	FOR_1	IF_42
0x7e06	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4152	buffer.c	FUNCTION_65	FOR_1	IF_42
0x7e0d	      0xe9fa120000	                           jmp 0x400914c	      4153	buffer.c	FUNCTION_65	FOR_1	IF_42
0x7e12	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4155	buffer.c	FUNCTION_65	FOR_1
0x7e19	        0x488d5001	                      lea rdx, [rax + 1]	      4155	buffer.c	FUNCTION_65	FOR_1
0x7e1d	    0x48899568f6ff	            mov qword [rbp - 0x998], rdx	      4155	buffer.c	FUNCTION_65	FOR_1
0x7e24	           0xfb600	                   movzx eax, byte [rax]	      4155	buffer.c	FUNCTION_65	FOR_1
0x7e27	    0x88851bf6ffff	              mov byte [rbp - 0x9e5], al	      4155	buffer.c	FUNCTION_65	FOR_1
0x7e2d	    0xc6851af6ffff	           mov byte [rbp - 0x9e6], 0x44 	      4158	buffer.c	FUNCTION_65	FOR_1
0x7e34	    0xc7852cf6ffff	              mov dword [rbp - 0x9d4], 0	      4159	buffer.c	FUNCTION_65	FOR_1
0x7e3e	    0xc78530f6ffff	              mov dword [rbp - 0x9d0], 1	      4160	buffer.c	FUNCTION_65	FOR_1
0x7e48	    0x48c78598f6ff	mov qword [rbp - 0x968], 0xffffffffffffffff	      4161	buffer.c	FUNCTION_65	FOR_1
0x7e53	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	      4162	buffer.c	FUNCTION_65	FOR_1
0x7e5e	     0xfb6851bf6ff	           movzx eax, byte [rbp - 0x9e5]	      4163	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x7e65	          0x83e823	                           sub eax, 0x23	      4163	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x7e68	          0x83f858	                           cmp eax, 0x58	      4163	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x7e6b	     0xf873e0b0000	                            ja 0x40089ef	      4163	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x7e71	            0x89c0	                            mov eax, eax	      4163	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x7e73	    0x488b04c50000	                  mov rax, qword [rax*8]	      4163	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x7e7b	            0xffe0	                                 jmp rax	      4163	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x7e7d	    0xc78530f6ffff	              mov dword [rbp - 0x9d0], 0	      4168	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x7e87	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4169	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_43	CALL_16
0x7e8e	        0x488b4008	                mov rax, qword [rax + 8]	      4169	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_43	CALL_16
0x7e92	          0x4889c7	                            mov rdi, rax	      4169	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_43	CALL_16
0x7e95	      0xe800000000	                          call 0x4007eda	      4169	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_43	CALL_16
0x7e9a	          0x4885c0	                           test rax, rax	      4169	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_43	CALL_16
0x7e9d	            0x742f	                            je 0x4007f0e	      4169	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_43	CALL_16
0x7e9f	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4170	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_18
0x7ea6	        0x488b4008	                mov rax, qword [rax + 8]	      4170	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_18
0x7eaa	          0x4889c7	                            mov rdi, rax	      4170	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_18
0x7ead	      0xe800000000	                          call 0x4007ef2	      4170	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_18
0x7eb2	          0x4889c1	                            mov rcx, rax	      4170	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_18
0x7eb5	    0x488b05000000	            mov rax, qword [0x04007efc] 	      4170	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_18
0x7ebc	      0xbaff0f0000	                          mov edx, 0xfff	      4170	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_18
0x7ec1	          0x4889ce	                            mov rsi, rcx	      4170	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_18
0x7ec4	          0x4889c7	                            mov rdi, rax	      4170	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_18
0x7ec7	      0xe800000000	                          call 0x4007f0c	      4170	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_18
0x7ecc	            0xeb62	                           jmp 0x4007f70	      4170	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_18
0x7ece	    0x80bd1bf6ffff	           cmp byte [rbp - 0x9e5], 0x46 	      4174	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7
0x7ed5	            0x7514	                           jne 0x4007f2b	      4174	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7
0x7ed7	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4173	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7
0x7ede	        0x488b4008	                mov rax, qword [rax + 8]	      4173	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7
0x7ee2	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      4174	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7
0x7ee9	            0xeb12	                           jmp 0x4007f3d	      4174	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7
0x7eeb	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4174	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7
0x7ef2	        0x488b4008	                mov rax, qword [rax + 8]	      4174	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7
0x7ef6	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      4174	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7
0x7efd	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      4173	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7
0x7f04	    0x488b15000000	            mov rdx, qword [0x04007f4b] 	      4175	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7	CALL_19
0x7f0b	    0x488bb570f6ff	            mov rsi, qword [rbp - 0x990]	      4175	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7	CALL_19
0x7f12	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4175	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7	CALL_19
0x7f19	        0x488b4008	                mov rax, qword [rax + 8]	      4175	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7	CALL_19
0x7f1d	    0x41b801000000	                              mov r8d, 1	      4175	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7	CALL_19
0x7f23	      0xb900100000	                         mov ecx, 0x1000	      4175	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7	CALL_19
0x7f28	          0x4889c7	                            mov rdi, rax	      4175	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7	CALL_19
0x7f2b	      0xe800000000	                          call 0x4007f70	      4175	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_7	CALL_19
0x7f30	    0x488b05000000	            mov rax, qword [0x04007f77] 	      4177	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_20
0x7f37	      0xbe00100000	                         mov esi, 0x1000	      4177	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_20
0x7f3c	          0x4889c7	                            mov rdi, rax	      4177	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_20
0x7f3f	      0xe800000000	                          call 0x4007f84	      4177	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_20
0x7f44	    0x80bd1bf6ffff	           cmp byte [rbp - 0x9e5], 0x74 	      4178	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_44
0x7f4b	            0x7413	                            je 0x4007fa0	      4178	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_44
0x7f4d	    0x488b05000000	            mov rax, qword [0x04007f94] 	      4179	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_44
0x7f54	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4179	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_44
0x7f5b	      0xe94f0a0000	                           jmp 0x40089ef	      4182	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x7f60	    0x488b05000000	            mov rax, qword [0x04007fa7] 	      4181	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_21
0x7f67	          0x4889c7	                            mov rdi, rax	      4181	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_21
0x7f6a	      0xe800000000	                          call 0x4007faf	      4181	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_21
0x7f6f	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4181	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_21
0x7f76	      0xe9340a0000	                           jmp 0x40089ef	      4182	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x7f7b	    0xc7852cf6ffff	              mov dword [rbp - 0x9d4], 1	      4185	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x7f85	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4186	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x7f8c	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      4186	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x7f93	            0xeb29	                           jmp 0x4007ffe	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7f95	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4188	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7f9c	        0x488d5001	                      lea rdx, [rax + 1]	      4188	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7fa0	    0x48899578f6ff	            mov qword [rbp - 0x988], rdx	      4188	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7fa7	    0x488b9568f6ff	            mov rdx, qword [rbp - 0x998]	      4188	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7fae	        0x488d4a01	                      lea rcx, [rdx + 1]	      4188	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7fb2	    0x48898d68f6ff	            mov qword [rbp - 0x998], rcx	      4188	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7fb9	           0xfb612	                   movzx edx, byte [rdx]	      4188	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7fbc	            0x8810	                      mov byte [rax], dl	      4188	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7fbe	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7fc5	           0xfb600	                   movzx eax, byte [rax]	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7fc8	            0x3c7d	                            cmp al, 0x7d	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7fca	            0x742f	                            je 0x400803b	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7fcc	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7fd3	           0xfb600	                   movzx eax, byte [rax]	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7fd6	            0x84c0	                             test al, al	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7fd8	            0x7421	                            je 0x400803b	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7fda	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7fe1	        0x488d4801	                      lea rcx, [rax + 1]	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7fe5	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7fec	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7ff3	          0x4801d0	                            add rax, rdx	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7ff6	          0x4839c1	                            cmp rcx, rax	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7ff9	            0x729a	                            jb 0x4007fd5	      4187	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_5
0x7ffb	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4189	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_45
0x8002	           0xfb600	                   movzx eax, byte [rax]	      4189	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_45
0x8005	            0x3c7d	                            cmp al, 0x7d	      4189	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_45
0x8007	     0xf857d090000	                           jne 0x40089ca	      4189	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_45
0x800d	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4191	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8014	        0x4883c001	                              add rax, 1	      4191	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8018	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4191	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x801f	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4192	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8026	          0xc60000	                       mov byte [rax], 0	      4192	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8029	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4193	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8030	    0x48898578f6ff	            mov qword [rbp - 0x988], rax	      4193	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8037	    0x488b05000000	            mov rax, qword [0x0400807e] 	      4196	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_22
0x803e	    0x8b90b8000000	            mov edx, dword [rax + 0xb8] 	      4196	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_22
0x8044	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4196	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_22
0x8048	            0x89d1	                            mov ecx, edx	      4196	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_22
0x804a	      0xba00000000	                              mov edx, 0	      4196	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_22
0x804f	      0xbe46000000	                           mov esi, 0x46	      4196	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_22
0x8054	          0x4889c7	                            mov rdi, rax	      4196	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_22
0x8057	      0xb800000000	                              mov eax, 0	      4196	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_22
0x805c	      0xe800000000	                          call 0x40080a1	      4196	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_22
0x8061	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4197	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_23
0x8065	          0x4889c6	                            mov rsi, rax	      4197	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_23
0x8068	      0xbf00000000	                              mov edi, 0	      4197	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_23
0x806d	      0xe800000000	                          call 0x40080b2	      4197	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_23
0x8072	    0x488b05000000	            mov rax, qword [0x040080b9] 	      4199	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8079	    0x488985b0f6ff	            mov qword [rbp - 0x950], rax	      4199	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8080	    0x488b05000000	            mov rax, qword [0x040080c7] 	      4200	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8087	    0x488985b8f6ff	            mov qword [rbp - 0x948], rax	      4200	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x808e	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4201	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8095	    0x488905000000	            mov qword [0x040080dc], rax 	      4201	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x809c	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4202	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x80a3	        0x488b4008	                mov rax, qword [rax + 8]	      4202	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x80a7	    0x488905000000	            mov qword [0x040080ee], rax 	      4202	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x80ae	    0x8b95ecf5ffff	            mov edx, dword [rbp - 0xa14]	      4204	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_24
0x80b4	    0x488d8d70f6ff	                  lea rcx, [rbp - 0x990]	      4204	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_24
0x80bb	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4204	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_24
0x80c2	          0x4889ce	                            mov rsi, rcx	      4204	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_24
0x80c5	          0x4889c7	                            mov rdi, rax	      4204	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_24
0x80c8	      0xe800000000	                          call 0x400810d	      4204	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_24
0x80cd	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4204	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_24
0x80d4	    0x488b85b8f6ff	            mov rax, qword [rbp - 0x948]	      4206	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x80db	    0x488905000000	            mov qword [0x04008122], rax 	      4206	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x80e2	    0x488b85b0f6ff	            mov rax, qword [rbp - 0x950]	      4207	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x80e9	    0x488905000000	            mov qword [0x04008130], rax 	      4207	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x80f0	      0xbe01000000	                              mov esi, 1	      4208	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_25
0x80f5	      0xbf00000000	                              mov edi, 0	      4208	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_25
0x80fa	      0xe800000000	                          call 0x400813f	      4208	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_25
0x80ff	    0x4883bd90f6ff	              cmp qword [rbp - 0x970], 0	      4210	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46
0x8107	     0xf8480080000	                            je 0x40089cd	      4210	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46
0x810d	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	      4210	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46
0x8114	           0xfb600	                   movzx eax, byte [rax]	      4210	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46
0x8117	            0x84c0	                             test al, al	      4210	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46
0x8119	     0xf846e080000	                            je 0x40089cd	      4210	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46
0x811f	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	      4212	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_26
0x8126	          0x4889c7	                            mov rdi, rax	      4212	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_26
0x8129	      0xe800000000	                          call 0x400816e	      4212	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_26
0x812e	           0xfb600	                   movzx eax, byte [rax]	      4212	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_26
0x8131	            0x84c0	                             test al, al	      4212	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_26
0x8133	     0xf8554080000	                           jne 0x40089cd	      4212	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_26
0x8139	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	      4214	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_27
0x8140	          0x4889c7	                            mov rdi, rax	      4214	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_27
0x8143	      0xe800000000	                          call 0x4008188	      4214	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_27
0x8148	            0x4898	                                    cdqe	      4214	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_27
0x814a	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	      4214	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_27
0x8151	    0x4883bd90f6ff	              cmp qword [rbp - 0x970], 0	      4215	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_28
0x8159	            0x741a	                            je 0x40081b5	      4215	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_28
0x815b	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	      4215	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_28
0x8162	          0x4889c7	                            mov rdi, rax	      4215	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_28
0x8165	      0xe800000000	                          call 0x40081aa	      4215	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_28
0x816a	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	      4215	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47	CALL_28
0x8175	    0xc7852cf6ffff	              mov dword [rbp - 0x9d4], 0	      4216	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_46	IF_47
0x817f	      0xe909080000	                           jmp 0x40089cd	      4220	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8184	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4223	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x818b	        0x488b4008	                mov rax, qword [rax + 8]	      4223	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x818f	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4223	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8192	          0x83e001	                              and eax, 1	      4223	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8195	            0x85c0	                           test eax, eax	      4224	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8197	            0x750d	                           jne 0x40081e6	      4224	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8199	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4224	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x81a0	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4224	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x81a4	            0xeb05	                           jmp 0x40081eb	      4224	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x81a6	      0xb800000000	                              mov eax, 0	      4224	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x81ab	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	      4223	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x81b2	      0xe9f8070000	                           jmp 0x40089ef	      4225	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x81b7	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4228	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x81be	        0x488b4008	                mov rax, qword [rax + 8]	      4228	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x81c2	          0x488b00	                    mov rax, qword [rax]	      4228	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x81c5	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	      4228	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x81cc	      0xe9de070000	                           jmp 0x40089ef	      4229	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x81d1	    0x8b0500000000	            mov eax, dword [0x04008217] 	      4232	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x81d7	          0x83e010	                           and eax, 0x10	      4232	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x81da	            0x85c0	                           test eax, eax	      4232	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x81dc	            0x7509	                           jne 0x4008227	      4232	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x81de	    0x83bd60f6ffff	              cmp dword [rbp - 0x9a0], 0	      4232	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x81e5	            0x7511	                           jne 0x4008238	      4232	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x81e7	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4233	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x81ee	          0x8b4040	            mov eax, dword [rax + 0x40] 	      4233	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x81f1	          0x83c001	                              add eax, 1	      4233	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x81f4	            0x4898	                                    cdqe	      4232	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x81f6	            0xeb05	                           jmp 0x400823d	      4232	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x81f8	      0xb800000000	                              mov eax, 0	      4232	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x81fd	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	      4232	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8204	      0xe9a6070000	                           jmp 0x40089ef	      4234	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8209	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4239	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8210	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      4239	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8216	    0x89851cf6ffff	            mov dword [rbp - 0x9e4], eax	      4239	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x821c	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4240	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48
0x8223	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      4240	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48
0x8229	            0x85c0	                           test eax, eax	      4240	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48
0x822b	            0x745b	                            je 0x40082c8	      4240	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48
0x822d	    0x8b0500000000	            mov eax, dword [0x04008273] 	      4240	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48
0x8233	            0x85c0	                           test eax, eax	      4240	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48
0x8235	            0x7551	                           jne 0x40082c8	      4240	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48
0x8237	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4242	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48
0x823e	    0xc78034020000	              mov dword [rax + 0x234], 0	      4242	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48
0x8248	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4243	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48	CALL_29
0x824f	        0x488d7038	                   lea rsi, [rax + 0x38]	      4243	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48	CALL_29
0x8253	    0x488d951cf6ff	                  lea rdx, [rbp - 0x9e4]	      4243	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48	CALL_29
0x825a	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4243	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48	CALL_29
0x8261	    0x41b800000000	                              mov r8d, 0	      4243	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48	CALL_29
0x8267	          0x4889d1	                            mov rcx, rdx	      4243	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48	CALL_29
0x826a	      0xba00000000	                              mov edx, 0	      4243	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48	CALL_29
0x826f	          0x4889c7	                            mov rdi, rax	      4243	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48	CALL_29
0x8272	      0xe800000000	                          call 0x40082b7	      4243	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48	CALL_29
0x8277	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4244	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48
0x827e	    0xc78034020000	              mov dword [rax + 0x234], 1	      4244	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_48
0x8288	    0x8b851cf6ffff	            mov eax, dword [rbp - 0x9e4]	      4246	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x828e	          0x83c001	                              add eax, 1	      4246	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8291	    0x89851cf6ffff	            mov dword [rbp - 0x9e4], eax	      4246	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8297	    0x80bd1bf6ffff	           cmp byte [rbp - 0x9e5], 0x56 	      4248	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x829e	            0x7538	                           jne 0x4008318	      4248	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x82a0	    0x8b0500000000	            mov eax, dword [0x040082e6] 	      4249	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x82a6	          0x83e010	                           and eax, 0x10	      4249	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x82a9	            0x85c0	                           test eax, eax	      4250	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x82ab	            0x7509	                           jne 0x40082f6	      4250	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x82ad	    0x83bd60f6ffff	              cmp dword [rbp - 0x9a0], 0	      4249	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x82b4	            0x750f	                           jne 0x4008305	      4249	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x82b6	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4250	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x82bd	          0x8b4040	            mov eax, dword [rax + 0x40] 	      4250	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x82c0	          0x8d5001	                      lea edx, [rax + 1]	      4250	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x82c3	            0xeb05	                           jmp 0x400830a	      4250	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x82c5	      0xba00000000	                              mov edx, 0	      4250	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x82ca	    0x8b851cf6ffff	            mov eax, dword [rbp - 0x9e4]	      4249	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x82d0	            0x39c2	                            cmp edx, eax	      4249	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x82d2	     0xf84b8060000	                            je 0x40089d0	      4249	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x82d8	    0x8b851cf6ffff	            mov eax, dword [rbp - 0x9e4]	      4252	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x82de	            0x4898	                                    cdqe	      4252	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x82e0	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	      4252	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x82e7	      0xe9c3060000	                           jmp 0x40089ef	      4253	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x82ec	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x82f3	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x82f7	          0x4889d0	                            mov rax, rdx	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x82fa	        0x48c1e002	                              shl rax, 2	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x82fe	          0x4801d0	                            add rax, rdx	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8301	    0x488d14850000	                        lea rdx, [rax*4]	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8309	          0x4801d0	                            add rax, rdx	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x830c	        0x48c1e002	                              shl rax, 2	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8310	          0x4889c1	                            mov rcx, rax	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8313	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4257	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x831a	        0x488b4008	                mov rax, qword [rax + 8]	      4257	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x831e	          0x488b38	                    mov rdi, qword [rax]	      4257	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8321	          0x4889c8	                            mov rax, rcx	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8324	            0x4899	                                     cqo	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8326	          0x48f7ff	                                idiv rdi	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8329	            0x4898	                                    cdqe	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x832b	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	      4256	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8332	      0xe978060000	                           jmp 0x40089ef	      4258	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8337	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4261	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x833b	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4261	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8342	    0x488b8d90f6ff	            mov rcx, qword [rbp - 0x970]	      4262	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_30
0x8349	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4262	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_30
0x8350	      0xba46000000	                           mov edx, 0x46	      4262	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_30
0x8355	          0x4889ce	                            mov rsi, rcx	      4262	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_30
0x8358	          0x4889c7	                            mov rdi, rax	      4262	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_30
0x835b	      0xe800000000	                          call 0x40083a0	      4262	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_30
0x8360	      0xe94a060000	                           jmp 0x40089ef	      4263	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8365	    0xc78530f6ffff	              mov dword [rbp - 0x9d0], 0	      4266	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x836f	        0xc645a000	                mov byte [rbp - 0x60], 0	      4267	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8373	        0x488d75a0	                   lea rsi, [rbp - 0x60]	      4268	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_50	CALL_31
0x8377	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4268	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_50	CALL_31
0x837e	      0xb900000000	                              mov ecx, 0	      4268	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_50	CALL_31
0x8383	      0xba46000000	                           mov edx, 0x46	      4268	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_50	CALL_31
0x8388	          0x4889c7	                            mov rdi, rax	      4268	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_50	CALL_31
0x838b	      0xe876180000	              call sym.append_arg_number	      4268	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_50	CALL_31
0x8390	            0x85c0	                           test eax, eax	      4268	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_50	CALL_31
0x8392	     0xf84fb050000	                            je 0x40089d3	      4268	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_50	CALL_31
0x8398	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4269	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_50
0x839c	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4269	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_50
0x83a3	      0xe9eb050000	                           jmp 0x40089d3	      4270	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x83a8	    0xc78530f6ffff	              mov dword [rbp - 0x9d0], 0	      4273	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x83b2	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      4274	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_51	CALL_32
0x83b6	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4274	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_51	CALL_32
0x83bd	      0xb946000000	                           mov ecx, 0x46	      4274	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_51	CALL_32
0x83c2	      0xbe00000000	                              mov esi, 0	      4274	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_51	CALL_32
0x83c7	          0x4889c7	                            mov rdi, rax	      4274	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_51	CALL_32
0x83ca	      0xe800000000	                          call 0x400840f	      4274	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_51	CALL_32
0x83cf	            0x85c0	                           test eax, eax	      4274	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_51	CALL_32
0x83d1	     0xf84bf050000	                            je 0x40089d6	      4274	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_51	CALL_32
0x83d7	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4275	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_51
0x83db	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4275	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_51
0x83e2	      0xe9af050000	                           jmp 0x40089d6	      4276	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x83e7	    0x488b05000000	            mov rax, qword [0x0400842e] 	      4279	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x83ee	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	      4279	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x83f5	      0xe9b5050000	                           jmp 0x40089ef	      4283	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x83fa	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4286	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8401	        0x488b4008	                mov rax, qword [rax + 8]	      4286	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8405	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      4286	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x840b	            0x4898	                                    cdqe	      4286	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x840d	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	      4286	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8414	      0xe996050000	                           jmp 0x40089ef	      4287	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8419	    0xc6851af6ffff	           mov byte [rbp - 0x9e6], 0x58 	      4290	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8420	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4294	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_33
0x8427	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      4294	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_33
0x842b	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4294	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_33
0x8432	        0x488b4008	                mov rax, qword [rax + 8]	      4294	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_33
0x8436	      0xba00000000	                              mov edx, 0	      4294	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_33
0x843b	          0x4889ce	                            mov rsi, rcx	      4294	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_33
0x843e	          0x4889c7	                            mov rdi, rax	      4294	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_33
0x8441	      0xe800000000	                          call 0x4008486	      4294	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_33
0x8446	    0x48898580f6ff	            mov qword [rbp - 0x980], rax	      4294	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_33
0x844d	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4295	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8454	        0x488b4008	                mov rax, qword [rax + 8]	      4295	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8458	          0x8b4010	            mov eax, dword [rax + 0x10] 	      4295	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x845b	          0x83e001	                              and eax, 1	      4295	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x845e	            0x85c0	                           test eax, eax	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8460	            0x7543	                           jne 0x40084e5	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8462	    0x4883bd80f6ff	              cmp qword [rbp - 0x980], 0	      4295	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x846a	            0x7839	                            js 0x40084e5	      4295	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x846c	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8473	        0x488d5001	                      lea rdx, [rax + 1]	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8477	    0x8b0500000000	            mov eax, dword [0x040084bd] 	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x847d	          0x83e010	                           and eax, 0x10	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8480	            0x85c0	                           test eax, eax	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8482	            0x7509	                           jne 0x40084cd	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8484	    0x83bd60f6ffff	              cmp dword [rbp - 0x9a0], 0	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x848b	            0x750e	                           jne 0x40084db	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x848d	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4297	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8494	          0x8b4040	            mov eax, dword [rax + 0x40] 	      4297	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8497	            0x4898	                                    cdqe	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8499	            0xeb05	                           jmp 0x40084e0	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x849b	      0xb800000000	                              mov eax, 0	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x84a0	          0x4801d0	                            add rax, rdx	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x84a3	            0xeb05	                           jmp 0x40084ea	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x84a5	      0xb800000000	                              mov eax, 0	      4296	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x84aa	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	      4295	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x84b1	      0xe9f9040000	                           jmp 0x40089ef	      4299	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x84b6	    0xc6851af6ffff	           mov byte [rbp - 0x9e6], 0x58 	      4302	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x84bd	    0x8b8520f6ffff	            mov eax, dword [rbp - 0x9e0]	      4305	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x84c3	            0x4898	                                    cdqe	      4305	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x84c5	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	      4305	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x84cc	    0x4883bd98f6ff	           cmp qword [rbp - 0x968], 0xa 	      4306	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_52
0x84d4	            0x7510	                           jne 0x4008526	      4306	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_52
0x84d6	    0x48c78598f6ff	              mov qword [rbp - 0x968], 0	      4307	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_52
0x84e1	      0xe9b3040000	                           jmp 0x40089d9	      4310	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x84e6	    0x4883bd98f6ff	           cmp qword [rbp - 0x968], 0xd 	      4308	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_9	IF_53	CALL_34
0x84ee	     0xf85a5040000	                           jne 0x40089d9	      4308	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_9	IF_53	CALL_34
0x84f4	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4308	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_9	IF_53	CALL_34
0x84fb	        0x488b4008	                mov rax, qword [rax + 8]	      4308	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_9	IF_53	CALL_34
0x84ff	          0x4889c7	                            mov rdi, rax	      4308	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_9	IF_53	CALL_34
0x8502	      0xe800000000	                          call 0x4008547	      4308	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_9	IF_53	CALL_34
0x8507	          0x83f802	                              cmp eax, 2	      4308	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_9	IF_53	CALL_34
0x850a	     0xf8589040000	                           jne 0x40089d9	      4308	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_9	IF_53	CALL_34
0x8510	    0x48c78598f6ff	            mov qword [rbp - 0x968], 0xa	      4309	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	ELSE_9	IF_53
0x851b	      0xe979040000	                           jmp 0x40089d9	      4310	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8520	    0xc7852cf6ffff	              mov dword [rbp - 0x9d4], 1	      4314	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x852a	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4315	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_54
0x8531	        0x488b4008	                mov rax, qword [rax + 8]	      4315	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_54
0x8535	    0x8b8060150000	          mov eax, dword [rax + 0x1560] 	      4315	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_54
0x853b	            0x85c0	                           test eax, eax	      4315	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_54
0x853d	     0xf8459040000	                            je 0x40089dc	      4315	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_54
0x8543	    0x80bd1bf6ffff	           cmp byte [rbp - 0x9e5], 0x52 	      4316	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_35
0x854a	            0x740c	                            je 0x4008598	      4316	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_35
0x854c	      0xbf00000000	                              mov edi, 0	      4316	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_35
0x8551	      0xe800000000	                          call 0x4008596	      4316	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_35
0x8556	            0xeb05	                           jmp 0x400859d	      4316	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_35
0x8558	      0xb800000000	                              mov eax, 0	      4316	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_35
0x855d	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4316	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_35
0x8564	      0xe933040000	                           jmp 0x40089dc	      4317	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8569	    0xc7852cf6ffff	              mov dword [rbp - 0x9d4], 1	      4321	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8573	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4322	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x857a	        0x488b4008	                mov rax, qword [rax + 8]	      4322	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x857e	    0x8b8058170000	          mov eax, dword [rax + 0x1758] 	      4322	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x8584	            0x85c0	                           test eax, eax	      4322	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x8586	     0xf8413040000	                            je 0x40089df	      4322	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x858c	    0x80bd1bf6ffff	           cmp byte [rbp - 0x9e5], 0x48 	      4323	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x8593	            0x740c	                            je 0x40085e1	      4323	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x8595	      0xbf00000000	                              mov edi, 0	      4323	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x859a	      0xe800000000	                          call 0x40085df	      4323	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x859f	            0xeb05	                           jmp 0x40085e6	      4323	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x85a1	      0xb800000000	                              mov eax, 0	      4323	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x85a6	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4323	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_55
0x85ad	      0xe9ed030000	                           jmp 0x40089df	      4325	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x85b2	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4328	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56
0x85b9	        0x488b4008	                mov rax, qword [rax + 8]	      4328	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56
0x85bd	    0x488b80981400	          mov rax, qword [rax + 0x1498] 	      4328	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56
0x85c4	           0xfb600	                   movzx eax, byte [rax]	      4328	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56
0x85c7	            0x84c0	                             test al, al	      4328	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56
0x85c9	     0xf84d3030000	                            je 0x40089e2	      4328	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56
0x85cf	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4329	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_37
0x85d6	        0x488b4008	                mov rax, qword [rax + 8]	      4329	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_37
0x85da	    0x488b80981400	          mov rax, qword [rax + 0x1498] 	      4329	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_37
0x85e1	          0x4889c7	                            mov rdi, rax	      4329	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_37
0x85e4	      0xe800000000	                          call 0x4008629	      4329	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_37
0x85e9	        0x4883f842	                           cmp rax, 0x42	      4329	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_37
0x85ed	     0xf87af030000	                            ja 0x40089e2	      4329	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_37
0x85f3	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4332	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56
0x85fa	        0x488b4008	                mov rax, qword [rax + 8]	      4332	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56
0x85fe	    0x488b90981400	          mov rdx, qword [rax + 0x1498] 	      4331	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_38
0x8605	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4331	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_38
0x8609	          0x4889d1	                            mov rcx, rdx	      4331	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_38
0x860c	      0xba00000000	                              mov edx, 0	      4331	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_38
0x8611	      0xbe46000000	                           mov esi, 0x46	      4331	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_38
0x8616	          0x4889c7	                            mov rdi, rax	      4331	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_38
0x8619	      0xb800000000	                              mov eax, 0	      4331	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_38
0x861e	      0xe800000000	                          call 0x4008663	      4331	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56	CALL_38
0x8623	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4333	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56
0x8627	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4333	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_56
0x862e	      0xe96f030000	                           jmp 0x40089e2	      4335	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8633	    0xc7852cf6ffff	              mov dword [rbp - 0x9d4], 1	      4338	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x863d	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4339	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57
0x8644	        0x488b4008	                mov rax, qword [rax + 8]	      4339	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57
0x8648	    0x488b80981400	          mov rax, qword [rax + 0x1498] 	      4339	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57
0x864f	           0xfb600	                   movzx eax, byte [rax]	      4339	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57
0x8652	            0x84c0	                             test al, al	      4339	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57
0x8654	     0xf844b030000	                            je 0x40089e5	      4339	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57
0x865a	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4340	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_39
0x8661	        0x488b4008	                mov rax, qword [rax + 8]	      4340	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_39
0x8665	    0x488b80981400	          mov rax, qword [rax + 0x1498] 	      4340	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_39
0x866c	          0x4889c7	                            mov rdi, rax	      4340	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_39
0x866f	      0xe800000000	                          call 0x40086b4	      4340	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_39
0x8674	        0x4883f843	                           cmp rax, 0x43	      4340	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_39
0x8678	     0xf8727030000	                            ja 0x40089e5	      4340	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_39
0x867e	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4343	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57
0x8685	        0x488b4008	                mov rax, qword [rax + 8]	      4343	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57
0x8689	    0x488b90981400	          mov rdx, qword [rax + 0x1498] 	      4342	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_40
0x8690	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4342	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_40
0x8694	          0x4889d1	                            mov rcx, rdx	      4342	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_40
0x8697	      0xba00000000	                              mov edx, 0	      4342	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_40
0x869c	      0xbe46000000	                           mov esi, 0x46	      4342	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_40
0x86a1	          0x4889c7	                            mov rdi, rax	      4342	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_40
0x86a4	      0xb800000000	                              mov eax, 0	      4342	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_40
0x86a9	      0xe800000000	                          call 0x40086ee	      4342	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_40
0x86ae	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4344	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	FOR_8
0x86b2	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      4344	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	FOR_8
0x86b9	            0xeb2f	                           jmp 0x400872a	      4344	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	FOR_8
0x86bb	    0x488b9d70f6ff	            mov rbx, qword [rbp - 0x990]	      4345	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_41
0x86c2	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4345	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_41
0x86c9	           0xfb600	                   movzx eax, byte [rax]	      4345	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_41
0x86cc	           0xfb6c0	                           movzx eax, al	      4345	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_41
0x86cf	            0x89c7	                            mov edi, eax	      4345	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_41
0x86d1	      0xe800000000	                          call 0x4008716	      4345	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_41
0x86d6	            0x8803	                      mov byte [rbx], al	      4345	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	CALL_41
0x86d8	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4344	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	FOR_8
0x86df	        0x4883c001	                              add rax, 1	      4344	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	FOR_8
0x86e3	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      4344	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	FOR_8
0x86ea	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4344	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	FOR_8
0x86f1	           0xfb600	                   movzx eax, byte [rax]	      4344	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	FOR_8
0x86f4	            0x84c0	                             test al, al	      4344	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	FOR_8
0x86f6	            0x75c3	                           jne 0x40086fb	      4344	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57	FOR_8
0x86f8	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4346	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57
0x86fc	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4346	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_57
0x8703	      0xe99d020000	                           jmp 0x40089e5	      4348	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8708	    0xc7852cf6ffff	              mov dword [rbp - 0x9d4], 1	      4353	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8712	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4354	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_58
0x8719	    0x8b8050020000	           mov eax, dword [rax + 0x250] 	      4354	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_58
0x871f	            0x85c0	                           test eax, eax	      4354	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_58
0x8721	     0xf8481020000	                            je 0x40089e8	      4354	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_58
0x8727	    0x80bd1bf6ffff	           cmp byte [rbp - 0x9e5], 0x57 	      4355	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_58
0x872e	            0x740c	                            je 0x400877c	      4355	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_58
0x8730	      0xbf00000000	                              mov edi, 0	      4355	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_58
0x8735	      0xe800000000	                          call 0x400877a	      4355	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_58
0x873a	            0xeb05	                           jmp 0x4008781	      4355	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_58
0x873c	      0xb800000000	                              mov eax, 0	      4355	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_58
0x8741	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4355	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_58
0x8748	      0xe95b020000	                           jmp 0x40089e8	      4357	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x874d	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4360	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59	CALL_43
0x8754	        0x488b4008	                mov rax, qword [rax + 8]	      4360	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59	CALL_43
0x8758	          0x4889c7	                            mov rdi, rax	      4360	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59	CALL_43
0x875b	      0xe800000000	                          call 0x40087a0	      4360	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59	CALL_43
0x8760	            0x85c0	                           test eax, eax	      4360	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59	CALL_43
0x8762	     0xf8443020000	                            je 0x40089eb	      4360	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59	CALL_43
0x8768	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4361	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59
0x876f	    0x488b80501900	          mov rax, qword [rax + 0x1950] 	      4361	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59
0x8776	          0x4885c0	                           test rax, rax	      4361	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59
0x8779	            0x7411	                            je 0x40087cc	      4361	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59
0x877b	    0x488b05000000	            mov rax, qword [0x040087c2] 	      4362	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59	CALL_44
0x8782	          0x4889c7	                            mov rdi, rax	      4361	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59
0x8785	      0xe800000000	                          call 0x40087ca	      4361	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59
0x878a	            0xeb0f	                           jmp 0x40087db	      4361	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59
0x878c	    0x488b05000000	            mov rax, qword [0x040087d3] 	      4363	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	CALL_45
0x8793	          0x4889c7	                            mov rdi, rax	      4361	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59
0x8796	      0xe800000000	                          call 0x40087db	      4361	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59
0x879b	    0x48898590f6ff	            mov qword [rbp - 0x970], rax	      4361	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_59
0x87a2	      0xe904020000	                           jmp 0x40089eb	      4364	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x87a7	    0xc7852cf6ffff	              mov dword [rbp - 0x9d4], 1	      4369	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x87b1	    0x80bd1bf6ffff	           cmp byte [rbp - 0x9e5], 0x4d 	      4370	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x87b8	           0xf94c0	                                 sete al	      4370	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x87bb	           0xfb6d8	                           movzx ebx, al	      4370	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x87be	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4371	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2	CALL_46
0x87c5	        0x488b4008	                mov rax, qword [rax + 8]	      4371	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2	CALL_46
0x87c9	          0x4889c7	                            mov rdi, rax	      4371	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2	CALL_46
0x87cc	      0xe800000000	                          call 0x4008811	      4371	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2	CALL_46
0x87d1	             0x1c0	                            add eax, eax	      4371	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2	CALL_46
0x87d3	          0x8d1403	                    lea edx, [rbx + rax]	      4371	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2	CALL_46
0x87d6	    0x488b8508f6ff	            mov rax, qword [rbp - 0x9f8]	      4372	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x87dd	        0x488b4008	                mov rax, qword [rax + 8]	      4372	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x87e1	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      4372	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x87e7	            0x85c0	                           test eax, eax	      4372	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x87e9	            0x7507	                           jne 0x4008832	      4372	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x87eb	      0xb804000000	                              mov eax, 4	      4372	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x87f0	            0xeb05	                           jmp 0x4008837	      4372	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x87f2	      0xb800000000	                              mov eax, 0	      4372	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x87f7	             0x1d0	                            add eax, edx	      4372	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x87f9	          0x83f807	                              cmp eax, 7	      4370	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x87fc	     0xf87ac010000	                            ja 0x40089ee	      4370	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x8802	            0x89c0	                            mov eax, eax	      4370	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x8804	    0x488b04c50000	                  mov rax, qword [rax*8]	      4370	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x880c	            0xffe0	                                 jmp rax	      4370	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x880e	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	      4374	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x8819	            0xeb40	                           jmp 0x400889b	      4374	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x881b	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	      4375	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x8826	            0xeb33	                           jmp 0x400889b	      4375	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x8828	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	      4376	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x8833	            0xeb26	                           jmp 0x400889b	      4376	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x8835	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	      4377	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x8840	            0xeb19	                           jmp 0x400889b	      4377	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x8842	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	      4378	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x884d	            0xeb0c	                           jmp 0x400889b	      4378	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x884f	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	      4379	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x885a	              0x90	                                     nop	      4379	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	SWITCH_2
0x885b	      0xe94e010000	                           jmp 0x40089ee	      4381	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8860	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4384	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8867	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      4384	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x886e	            0xeb12	                           jmp 0x40088c2	      4385	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x8870	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4386	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x8877	        0x4883c001	                              add rax, 1	      4386	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x887b	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4386	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x8882	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4385	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x8889	           0xfb600	                   movzx eax, byte [rax]	      4385	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x888c	            0x3c23	                            cmp al, 0x23	      4385	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x888e	            0x740e	                            je 0x40088de	      4385	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x8890	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4385	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x8897	           0xfb600	                   movzx eax, byte [rax]	      4385	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x889a	            0x84c0	                             test al, al	      4385	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x889c	            0x75d2	                           jne 0x40088b0	      4385	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	WHILE_6
0x889e	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4387	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x88a5	           0xfb600	                   movzx eax, byte [rax]	      4387	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x88a8	            0x3c23	                            cmp al, 0x23	      4387	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x88aa	     0xf85b1000000	                           jne 0x40089a1	      4387	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x88b0	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4389	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x88b6	          0x4863d0	                         movsxd rdx, eax	      4389	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x88b9	          0x4889d0	                            mov rax, rdx	      4389	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x88bc	          0x4801c0	                            add rax, rax	      4389	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x88bf	          0x4801d0	                            add rax, rdx	      4389	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x88c2	        0x48c1e003	                              shl rax, 3	      4389	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x88c6	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4389	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x88ca	          0x4801f0	                            add rax, rsi	      4389	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x88cd	    0x482de0070000	                          sub rax, 0x7e0	      4389	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x88d3	    0xc70004000000	                      mov dword [rax], 4	      4389	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x88d9	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4390	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x88df	          0x4863d0	                         movsxd rdx, eax	      4390	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x88e2	          0x4889d0	                            mov rax, rdx	      4390	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x88e5	          0x4801c0	                            add rax, rax	      4390	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x88e8	          0x4801d0	                            add rax, rdx	      4390	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x88eb	        0x48c1e003	                              shl rax, 3	      4390	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x88ef	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4390	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x88f3	          0x4801d8	                            add rax, rbx	      4390	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x88f6	    0x488d9010f8ff	                  lea rdx, [rax - 0x7f0]	      4390	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x88fd	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4390	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x8904	          0x488902	                    mov qword [rdx], rax	      4390	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x8907	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x890e	          0x4889c2	                            mov rdx, rax	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x8911	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x8918	          0x4829c2	                            sub rdx, rax	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x891b	          0x4889d0	                            mov rax, rdx	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x891e	            0x89c2	                            mov edx, eax	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x8920	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x8927	            0x89d6	                            mov esi, edx	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x8929	          0x4889c7	                            mov rdi, rax	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x892c	      0xe800000000	                          call 0x4008971	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x8931	            0xf7d8	                                 neg eax	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x8933	            0x89c1	                            mov ecx, eax	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x8935	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x893b	          0x4863d0	                         movsxd rdx, eax	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x893e	          0x4889d0	                            mov rax, rdx	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x8941	          0x4801c0	                            add rax, rax	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x8944	          0x4801d0	                            add rax, rdx	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x8947	        0x48c1e003	                              shl rax, 3	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x894b	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x894f	          0x4801f0	                            add rax, rsi	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x8952	    0x482de8070000	                          sub rax, 0x7e8	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x8958	            0x8908	                    mov dword [rax], ecx	      4391	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60	CALL_47
0x895a	    0x83853cf6ffff	              add dword [rbp - 0x9c4], 1	      4392	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_60
0x8961	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4394	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_61
0x8968	           0xfb600	                   movzx eax, byte [rax]	      4394	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_61
0x896b	            0x84c0	                             test al, al	      4394	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_61
0x896d	     0xf8499070000	                            je 0x400914c	      4394	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_61
0x8973	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4395	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_61
0x897a	        0x4883c001	                              add rax, 1	      4395	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_61
0x897e	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4395	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_61
0x8985	      0xe982070000	                           jmp 0x400914c	      4396	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x898a	              0x90	                                     nop	      4190	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_45
0x898b	            0xeb22	                           jmp 0x40089ef	      4190	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_45
0x898d	              0x90	                                     nop	      4220	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x898e	            0xeb1f	                           jmp 0x40089ef	      4220	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8990	              0x90	                                     nop	      4251	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x8991	            0xeb1c	                           jmp 0x40089ef	      4251	buffer.c	FUNCTION_65	FOR_1	SWITCH_1	IF_49
0x8993	              0x90	                                     nop	      4270	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8994	            0xeb19	                           jmp 0x40089ef	      4270	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8996	              0x90	                                     nop	      4276	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8997	            0xeb16	                           jmp 0x40089ef	      4276	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x8999	              0x90	                                     nop	      4310	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x899a	            0xeb13	                           jmp 0x40089ef	      4310	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x899c	              0x90	                                     nop	      4317	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x899d	            0xeb10	                           jmp 0x40089ef	      4317	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x899f	              0x90	                                     nop	      4325	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x89a0	            0xeb0d	                           jmp 0x40089ef	      4325	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x89a2	              0x90	                                     nop	      4335	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x89a3	            0xeb0a	                           jmp 0x40089ef	      4335	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x89a5	              0x90	                                     nop	      4348	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x89a6	            0xeb07	                           jmp 0x40089ef	      4348	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x89a8	              0x90	                                     nop	      4357	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x89a9	            0xeb04	                           jmp 0x40089ef	      4357	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x89ab	              0x90	                                     nop	      4364	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x89ac	            0xeb01	                           jmp 0x40089ef	      4364	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x89ae	              0x90	                                     nop	      4381	buffer.c	FUNCTION_65	FOR_1	SWITCH_1
0x89af	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4399	buffer.c	FUNCTION_65	FOR_1
0x89b5	          0x4863d0	                         movsxd rdx, eax	      4399	buffer.c	FUNCTION_65	FOR_1
0x89b8	          0x4889d0	                            mov rax, rdx	      4399	buffer.c	FUNCTION_65	FOR_1
0x89bb	          0x4801c0	                            add rax, rax	      4399	buffer.c	FUNCTION_65	FOR_1
0x89be	          0x4801d0	                            add rax, rdx	      4399	buffer.c	FUNCTION_65	FOR_1
0x89c1	        0x48c1e003	                              shl rax, 3	      4399	buffer.c	FUNCTION_65	FOR_1
0x89c5	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4399	buffer.c	FUNCTION_65	FOR_1
0x89c9	          0x4801d8	                            add rax, rbx	      4399	buffer.c	FUNCTION_65	FOR_1
0x89cc	    0x488d9010f8ff	                  lea rdx, [rax - 0x7f0]	      4399	buffer.c	FUNCTION_65	FOR_1
0x89d3	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4399	buffer.c	FUNCTION_65	FOR_1
0x89da	          0x488902	                    mov qword [rdx], rax	      4399	buffer.c	FUNCTION_65	FOR_1
0x89dd	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4400	buffer.c	FUNCTION_65	FOR_1
0x89e3	          0x4863d0	                         movsxd rdx, eax	      4400	buffer.c	FUNCTION_65	FOR_1
0x89e6	          0x4889d0	                            mov rax, rdx	      4400	buffer.c	FUNCTION_65	FOR_1
0x89e9	          0x4801c0	                            add rax, rax	      4400	buffer.c	FUNCTION_65	FOR_1
0x89ec	          0x4801d0	                            add rax, rdx	      4400	buffer.c	FUNCTION_65	FOR_1
0x89ef	        0x48c1e003	                              shl rax, 3	      4400	buffer.c	FUNCTION_65	FOR_1
0x89f3	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4400	buffer.c	FUNCTION_65	FOR_1
0x89f7	          0x4801f0	                            add rax, rsi	      4400	buffer.c	FUNCTION_65	FOR_1
0x89fa	    0x482de0070000	                          sub rax, 0x7e0	      4400	buffer.c	FUNCTION_65	FOR_1
0x8a00	    0xc70000000000	                      mov dword [rax], 0	      4400	buffer.c	FUNCTION_65	FOR_1
0x8a06	    0x4883bd90f6ff	              cmp qword [rbp - 0x970], 0	      4401	buffer.c	FUNCTION_65	FOR_1	IF_62
0x8a0e	     0xf8466030000	                            je 0x4008dba	      4401	buffer.c	FUNCTION_65	FOR_1	IF_62
0x8a14	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	      4401	buffer.c	FUNCTION_65	FOR_1	IF_62
0x8a1b	           0xfb600	                   movzx eax, byte [rax]	      4401	buffer.c	FUNCTION_65	FOR_1	IF_62
0x8a1e	            0x84c0	                             test al, al	      4401	buffer.c	FUNCTION_65	FOR_1	IF_62
0x8a20	     0xf8454030000	                            je 0x4008dba	      4401	buffer.c	FUNCTION_65	FOR_1	IF_62
0x8a26	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	      4403	buffer.c	FUNCTION_65	FOR_1	IF_62
0x8a2d	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      4403	buffer.c	FUNCTION_65	FOR_1	IF_62
0x8a34	    0x83bd2cf6ffff	              cmp dword [rbp - 0x9d4], 0	      4404	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63
0x8a3b	            0x746a	                            je 0x4008ae7	      4404	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63
0x8a3d	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4406	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a44	           0xfb600	                   movzx eax, byte [rax]	      4406	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a47	            0x84c0	                             test al, al	      4406	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a49	            0x7452	                            je 0x4008add	      4406	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a4b	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4406	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a52	        0x4883c001	                              add rax, 1	      4406	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a56	           0xfb600	                   movzx eax, byte [rax]	      4406	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a59	            0x84c0	                             test al, al	      4406	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a5b	            0x7440	                            je 0x4008add	      4406	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a5d	    0x83bd28f6ffff	              cmp dword [rbp - 0x9d8], 0	      4407	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a64	            0x750e	                           jne 0x4008ab4	      4407	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a66	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4407	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a6d	           0xfb600	                   movzx eax, byte [rax]	      4407	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a70	            0x3c2c	                            cmp al, 0x2c	      4407	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a72	            0x7417	                            je 0x4008acb	      4407	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a74	    0x83bd24f6ffff	              cmp dword [rbp - 0x9dc], 0	      4408	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a7b	            0x7420	                            je 0x4008add	      4408	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a7d	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4408	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a84	           0xfb600	                   movzx eax, byte [rax]	      4408	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a87	            0x3c20	                            cmp al, 0x20	      4408	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a89	            0x7512	                           jne 0x4008add	      4408	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a8b	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4409	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a92	        0x4883c001	                              add rax, 1	      4409	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a96	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      4409	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63	IF_64
0x8a9d	    0xc78524f6ffff	              mov dword [rbp - 0x9dc], 1	      4410	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_63
0x8aa7	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4412	buffer.c	FUNCTION_65	FOR_1	IF_62	CALL_48
0x8aae	          0x4889c7	                            mov rdi, rax	      4412	buffer.c	FUNCTION_65	FOR_1	IF_62	CALL_48
0x8ab1	      0xe800000000	                          call 0x4008af6	      4412	buffer.c	FUNCTION_65	FOR_1	IF_62	CALL_48
0x8ab6	            0x4898	                                    cdqe	      4412	buffer.c	FUNCTION_65	FOR_1	IF_62	CALL_48
0x8ab8	    0x48898580f6ff	            mov qword [rbp - 0x980], rax	      4412	buffer.c	FUNCTION_65	FOR_1	IF_62	CALL_48
0x8abf	    0x4883bd80f6ff	              cmp qword [rbp - 0x980], 0	      4413	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_65
0x8ac7	            0x7e0a	                           jle 0x4008b13	      4413	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_65
0x8ac9	    0xc78528f6ffff	              mov dword [rbp - 0x9d8], 1	      4414	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_65
0x8ad3	    0x8b8550f6ffff	            mov eax, dword [rbp - 0x9b0]	      4415	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66
0x8ad9	            0x4898	                                    cdqe	      4415	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66
0x8adb	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4415	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66
0x8ae2	     0xf8dc3000000	                           jge 0x4008beb	      4415	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66
0x8ae8	            0xeb72	                           jmp 0x4008b9c	      4417	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7
0x8aea	    0x8b0500000000	            mov eax, dword [0x04008b30] 	      4419	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x8af0	            0x85c0	                           test eax, eax	      4419	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x8af2	            0x7440	                            je 0x4008b74	      4419	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x8af4	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4421	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67	CALL_49
0x8afb	          0x4889c7	                            mov rdi, rax	      4421	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67	CALL_49
0x8afe	      0xe800000000	                          call 0x4008b43	      4421	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67	CALL_49
0x8b03	            0x4898	                                    cdqe	      4421	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67	CALL_49
0x8b05	    0x48298580f6ff	            sub qword [rbp - 0x980], rax	      4421	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67	CALL_49
0x8b0c	    0x488b05000000	            mov rax, qword [0x04008b53] 	      4422	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x8b13	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      4422	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x8b1a	          0x4889d7	                            mov rdi, rdx	      4422	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x8b1d	            0xffd0	                                call rax	      4422	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x8b1f	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      4422	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x8b26	            0x4898	                                    cdqe	      4422	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x8b28	          0x4801d0	                            add rax, rdx	      4422	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x8b2b	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      4422	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x8b32	            0xeb28	                           jmp 0x4008b9c	      4422	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7	IF_67
0x8b34	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4426	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	CALL_50
0x8b3b	        0x488d5001	                      lea rdx, [rax + 1]	      4426	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	CALL_50
0x8b3f	    0x48899570f6ff	            mov qword [rbp - 0x990], rdx	      4426	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	CALL_50
0x8b46	           0xfb600	                   movzx eax, byte [rax]	      4426	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	CALL_50
0x8b49	           0xfb6c0	                           movzx eax, al	      4426	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	CALL_50
0x8b4c	            0x89c7	                            mov edi, eax	      4426	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	CALL_50
0x8b4e	      0xe800000000	                          call 0x4008b93	      4426	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	CALL_50
0x8b53	            0x4898	                                    cdqe	      4426	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	CALL_50
0x8b55	    0x48298580f6ff	            sub qword [rbp - 0x980], rax	      4426	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	CALL_50
0x8b5c	    0x8b8550f6ffff	            mov eax, dword [rbp - 0x9b0]	      4417	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7
0x8b62	            0x4898	                                    cdqe	      4417	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7
0x8b64	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4417	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7
0x8b6b	     0xf8e79ffffff	                           jle 0x4008b2a	      4417	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	WHILE_7
0x8b71	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4427	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	IF_68
0x8b78	        0x488d4801	                      lea rcx, [rax + 1]	      4427	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	IF_68
0x8b7c	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      4427	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	IF_68
0x8b83	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      4427	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	IF_68
0x8b8a	          0x4801d0	                            add rax, rdx	      4427	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	IF_68
0x8b8d	          0x4839c1	                            cmp rcx, rax	      4427	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	IF_68
0x8b90	     0xf8393050000	                           jae 0x4009169	      4427	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	IF_68
0x8b96	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4429	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66
0x8b9d	        0x488d5001	                      lea rdx, [rax + 1]	      4429	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66
0x8ba1	    0x48899578f6ff	            mov qword [rbp - 0x988], rdx	      4429	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66
0x8ba8	          0xc6003c	                    mov byte [rax], 0x3c	      4429	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66
0x8bab	    0x83bd4cf6ffff	              cmp dword [rbp - 0x9b4], 0	      4431	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69
0x8bb2	     0xf8eb3000000	                           jle 0x4008cab	      4431	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69
0x8bb8	            0xeb6f	                           jmp 0x4008c69	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x8bba	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x8bc1	        0x488d5001	                      lea rdx, [rax + 1]	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x8bc5	    0x8b854cf6ffff	            mov eax, dword [rbp - 0x9b4]	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x8bcb	            0x4898	                                    cdqe	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x8bcd	          0x4839c2	                            cmp rdx, rax	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x8bd0	            0x7535	                           jne 0x4008c47	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x8bd2	    0x83bde8f5ffff	          cmp dword [rbp - 0xa18], 0x2d 	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x8bd9	            0x752c	                           jne 0x4008c47	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x8bdb	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x8be2	           0xfb600	                   movzx eax, byte [rax]	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x8be5	           0xfb6c0	                           movzx eax, al	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x8be8	          0x83e830	                           sub eax, 0x30	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x8beb	          0x83f809	                              cmp eax, 9	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x8bee	            0x7717	                            ja 0x4008c47	      4436	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70	CALL_51
0x8bf0	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4437	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70
0x8bf7	        0x488d5001	                      lea rdx, [rax + 1]	      4437	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70
0x8bfb	    0x48899578f6ff	            mov qword [rbp - 0x988], rdx	      4437	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70
0x8c02	          0xc60020	                    mov byte [rax], 0x20	      4437	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70
0x8c05	            0xeb1a	                           jmp 0x4008c61	      4437	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	IF_70
0x8c07	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4439	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	ELSE_11
0x8c0e	        0x488d5001	                      lea rdx, [rax + 1]	      4439	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	ELSE_11
0x8c12	    0x48899578f6ff	            mov qword [rbp - 0x988], rdx	      4439	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	ELSE_11
0x8c19	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	      4439	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	ELSE_11
0x8c1f	            0x8810	                      mov byte [rax], dl	      4439	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9	ELSE_11
0x8c21	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x8c29	    0x8b854cf6ffff	            mov eax, dword [rbp - 0x9b4]	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x8c2f	            0x4898	                                    cdqe	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x8c31	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x8c38	            0x7e25	                           jle 0x4008c9f	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x8c3a	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x8c41	        0x488d4801	                      lea rcx, [rax + 1]	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x8c45	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x8c4c	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x8c53	          0x4801d0	                            add rax, rdx	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x8c56	          0x4839c1	                            cmp rcx, rax	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x8c59	     0xf825bffffff	                            jb 0x4008bfa	      4433	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	FOR_9
0x8c5f	    0xc7854cf6ffff	              mov dword [rbp - 0x9b4], 0	      4441	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	ELSE_11
0x8c69	            0xeb7d	                           jmp 0x4008d28	      4441	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_69	ELSE_11
0x8c6b	    0xf79d4cf6ffff	                 neg dword [rbp - 0x9b4]	      4444	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12
0x8c71	            0xeb75	                           jmp 0x4008d28	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x8c73	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4447	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x8c7a	        0x488d5001	                      lea rdx, [rax + 1]	      4447	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x8c7e	    0x48899578f6ff	            mov qword [rbp - 0x988], rdx	      4447	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x8c85	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      4447	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x8c8c	        0x488d4a01	                      lea rcx, [rdx + 1]	      4447	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x8c90	    0x48898d70f6ff	            mov qword [rbp - 0x990], rcx	      4447	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x8c97	           0xfb612	                   movzx edx, byte [rdx]	      4447	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x8c9a	            0x8810	                      mov byte [rax], dl	      4447	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x8c9c	    0x83bd30f6ffff	              cmp dword [rbp - 0x9d0], 0	      4450	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71
0x8ca3	            0x7443	                            je 0x4008d28	      4450	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71
0x8ca5	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4450	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71
0x8cac	        0x4883e801	                              sub rax, 1	      4450	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71
0x8cb0	           0xfb600	                   movzx eax, byte [rax]	      4450	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71
0x8cb3	            0x3c20	                            cmp al, 0x20	      4450	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71
0x8cb5	            0x7531	                           jne 0x4008d28	      4450	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71
0x8cb7	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4451	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71	CALL_52
0x8cbe	           0xfb600	                   movzx eax, byte [rax]	      4451	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71	CALL_52
0x8cc1	           0xfb6c0	                           movzx eax, al	      4451	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71	CALL_52
0x8cc4	          0x83e830	                           sub eax, 0x30	      4451	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71	CALL_52
0x8cc7	          0x83f809	                              cmp eax, 9	      4451	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71	CALL_52
0x8cca	            0x7709	                            ja 0x4008d15	      4451	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71	CALL_52
0x8ccc	    0x83bde8f5ffff	          cmp dword [rbp - 0xa18], 0x2d 	      4451	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71	CALL_52
0x8cd3	            0x7413	                            je 0x4008d28	      4451	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71	CALL_52
0x8cd5	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4452	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71
0x8cdc	        0x4883e801	                              sub rax, 1	      4452	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71
0x8ce0	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	      4452	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71
0x8ce6	            0x8810	                      mov byte [rax], dl	      4452	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8	IF_71
0x8ce8	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x8cef	           0xfb600	                   movzx eax, byte [rax]	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x8cf2	            0x84c0	                             test al, al	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x8cf4	            0x7449	                            je 0x4008d7f	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x8cf6	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x8cfd	        0x488d4801	                      lea rcx, [rax + 1]	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x8d01	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x8d08	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x8d0f	          0x4801d0	                            add rax, rdx	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x8d12	          0x4839c1	                            cmp rcx, rax	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x8d15	     0xf8258ffffff	                            jb 0x4008cb3	      4445	buffer.c	FUNCTION_65	FOR_1	IF_62	ELSE_11	ELSE_12	WHILE_8
0x8d1b	            0xeb22	                           jmp 0x4008d7f	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x8d1d	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4455	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x8d24	        0x488d5001	                      lea rdx, [rax + 1]	      4455	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x8d28	    0x48899578f6ff	            mov qword [rbp - 0x988], rdx	      4455	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x8d2f	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	      4455	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x8d35	            0x8810	                      mov byte [rax], dl	      4455	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x8d37	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x8d3f	    0x8b854cf6ffff	            mov eax, dword [rbp - 0x9b4]	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x8d45	            0x4898	                                    cdqe	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x8d47	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x8d4e	     0xf8e63030000	                           jle 0x40090f7	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x8d54	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x8d5b	        0x488d4801	                      lea rcx, [rax + 1]	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x8d5f	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x8d66	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x8d6d	          0x4801d0	                            add rax, rdx	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x8d70	          0x4839c1	                            cmp rcx, rax	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x8d73	            0x72a8	                            jb 0x4008d5d	      4454	buffer.c	FUNCTION_65	FOR_1	IF_62	FOR_10
0x8d75	      0xe93d030000	                           jmp 0x40090f7	      4401	buffer.c	FUNCTION_65	FOR_1	IF_62
0x8d7a	    0x4883bd98f6ff	              cmp qword [rbp - 0x968], 0	      4457	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8d82	     0xf8804030000	                            js 0x40090cc	      4457	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8d88	    0x80bd1af6ffff	           cmp byte [rbp - 0x9e6], 0x44 	      4459	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8d8f	            0x7417	                            je 0x4008de8	      4459	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8d91	    0x80bd1af6ffff	           cmp byte [rbp - 0x9e6], 0x4f 	      4459	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8d98	            0x7507	                           jne 0x4008de1	      4459	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8d9a	      0xb808000000	                              mov eax, 8	      4459	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8d9f	            0xeb0c	                           jmp 0x4008ded	      4459	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8da1	      0xb810000000	                           mov eax, 0x10	      4459	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8da6	            0xeb05	                           jmp 0x4008ded	      4459	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8da8	      0xb80a000000	                            mov eax, 0xa	      4459	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8dad	    0x898564f6ffff	            mov dword [rbp - 0x99c], eax	      4459	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8db3	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4462	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_73
0x8dba	        0x488d4814	                   lea rcx, [rax + 0x14]	      4462	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_73
0x8dbe	    0x488b9500f6ff	            mov rdx, qword [rbp - 0xa00]	      4462	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_73
0x8dc5	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      4462	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_73
0x8dcc	          0x4801d0	                            add rax, rdx	      4462	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_73
0x8dcf	          0x4839c1	                            cmp rcx, rax	      4462	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_73
0x8dd2	     0xf8354030000	                           jae 0x400916c	      4462	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_73
0x8dd8	    0xc78528f6ffff	              mov dword [rbp - 0x9d8], 1	      4464	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8de2	        0x488d4580	                   lea rax, [rbp - 0x80]	      4465	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8de6	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      4465	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8ded	    0x80bd1bf6ffff	           cmp byte [rbp - 0x9e5], 0x56 	      4466	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_74
0x8df4	            0x751c	                           jne 0x4008e52	      4466	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_74
0x8df6	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4468	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_74
0x8dfd	        0x488d5001	                      lea rdx, [rax + 1]	      4468	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_74
0x8e01	    0x48899570f6ff	            mov qword [rbp - 0x990], rdx	      4468	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_74
0x8e08	          0xc6002d	                    mov byte [rax], 0x2d	      4468	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_74
0x8e0b	    0x83ad4cf6ffff	              sub dword [rbp - 0x9b4], 1	      4469	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_74
0x8e12	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4471	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8e19	        0x488d5001	                      lea rdx, [rax + 1]	      4471	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8e1d	    0x48899570f6ff	            mov qword [rbp - 0x990], rdx	      4471	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8e24	          0xc60025	                    mov byte [rax], 0x25	      4471	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8e27	    0x83bd54f6ffff	              cmp dword [rbp - 0x9ac], 0	      4472	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_75
0x8e2e	            0x7415	                            je 0x4008e85	      4472	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_75
0x8e30	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4473	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_75
0x8e37	        0x488d5001	                      lea rdx, [rax + 1]	      4473	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_75
0x8e3b	    0x48899570f6ff	            mov qword [rbp - 0x990], rdx	      4473	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_75
0x8e42	          0xc60030	                    mov byte [rax], 0x30	      4473	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_75
0x8e45	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4474	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8e4c	        0x488d5001	                      lea rdx, [rax + 1]	      4474	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8e50	    0x48899570f6ff	            mov qword [rbp - 0x990], rdx	      4474	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8e57	          0xc6002a	                    mov byte [rax], 0x2a	      4474	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8e5a	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8e61	        0x488d4201	                      lea rax, [rdx + 1]	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8e65	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8e6c	    0x83bd64f6ffff	          cmp dword [rbp - 0x99c], 0x10 	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8e73	            0x7417	                            je 0x4008ecc	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8e75	    0x83bd64f6ffff	              cmp dword [rbp - 0x99c], 8	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8e7c	            0x7507	                           jne 0x4008ec5	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8e7e	      0xb86f000000	                           mov eax, 0x6f	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8e83	            0xeb0e	                           jmp 0x4008ed3	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8e85	      0xb864000000	                           mov eax, 0x64	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8e8a	            0xeb07	                           jmp 0x4008ed3	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8e8c	     0xfb6851af6ff	           movzx eax, byte [rbp - 0x9e6]	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8e93	            0x8802	                      mov byte [rdx], al	      4475	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8e95	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4476	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8e9c	          0xc60000	                       mov byte [rax], 0	      4476	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72
0x8e9f	    0x488b8598f6ff	            mov rax, qword [rbp - 0x968]	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x8ea6	    0x48898588f6ff	            mov qword [rbp - 0x978], rax	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x8ead	    0x48c78580f6ff	              mov qword [rbp - 0x980], 1	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x8eb8	            0xeb24	                           jmp 0x4008f1e	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x8eba	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4479	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x8ec2	    0x8b8564f6ffff	            mov eax, dword [rbp - 0x99c]	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x8ec8	          0x4863d8	                         movsxd rbx, eax	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x8ecb	    0x488b8588f6ff	            mov rax, qword [rbp - 0x978]	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x8ed2	            0x4899	                                     cqo	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x8ed4	          0x48f7fb	                                idiv rbx	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x8ed7	    0x48898588f6ff	            mov qword [rbp - 0x978], rax	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x8ede	    0x8b8564f6ffff	            mov eax, dword [rbp - 0x99c]	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x8ee4	            0x4898	                                    cdqe	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x8ee6	    0x483b8588f6ff	            cmp rax, qword [rbp - 0x978]	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x8eed	            0x7ecb	                           jle 0x4008efa	      4478	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	FOR_11
0x8eef	    0x80bd1bf6ffff	           cmp byte [rbp - 0x9e5], 0x56 	      4480	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_76
0x8ef6	            0x7508	                           jne 0x4008f40	      4480	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_76
0x8ef8	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4481	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_76
0x8f00	    0x8b8550f6ffff	            mov eax, dword [rbp - 0x9b0]	      4482	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8f06	            0x4898	                                    cdqe	      4482	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8f08	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4482	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8f0f	     0xf8d13010000	                           jge 0x4009068	      4482	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8f15	    0x48838580f6ff	              add qword [rbp - 0x980], 2	      4484	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8f1d	    0x8b8550f6ffff	            mov eax, dword [rbp - 0x9b0]	      4485	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8f23	            0x4898	                                    cdqe	      4485	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8f25	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4485	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8f2c	          0x4829c2	                            sub rdx, rax	      4485	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8f2f	          0x4889d0	                            mov rax, rdx	      4485	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8f32	    0x48898588f6ff	            mov qword [rbp - 0x978], rax	      4485	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8f39	            0xeb1c	                           jmp 0x4008f97	      4486	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x8f3b	    0x8b8564f6ffff	            mov eax, dword [rbp - 0x99c]	      4487	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x8f41	          0x4863f0	                         movsxd rsi, eax	      4487	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x8f44	    0x488b8598f6ff	            mov rax, qword [rbp - 0x968]	      4487	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x8f4b	            0x4899	                                     cqo	      4487	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x8f4d	          0x48f7fe	                                idiv rsi	      4487	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x8f50	    0x48898598f6ff	            mov qword [rbp - 0x968], rax	      4487	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x8f57	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      4486	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x8f5e	        0x488d50ff	                      lea rdx, [rax - 1]	      4486	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x8f62	    0x48899580f6ff	            mov qword [rbp - 0x980], rdx	      4486	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x8f69	    0x8b9550f6ffff	            mov edx, dword [rbp - 0x9b0]	      4486	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x8f6f	          0x4863d2	                         movsxd rdx, edx	      4486	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x8f72	          0x4839d0	                            cmp rax, rdx	      4486	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x8f75	            0x7fc4	                            jg 0x4008f7b	      4486	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	WHILE_9
0x8f77	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4488	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8f7e	        0x488d5001	                      lea rdx, [rax + 1]	      4488	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8f82	    0x48899570f6ff	            mov qword [rbp - 0x990], rdx	      4488	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8f89	          0xc6003e	                    mov byte [rax], 0x3e	      4488	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8f8c	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4489	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8f93	        0x488d5001	                      lea rdx, [rax + 1]	      4489	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8f97	    0x48899570f6ff	            mov qword [rbp - 0x990], rdx	      4489	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8f9e	          0xc60025	                    mov byte [rax], 0x25	      4489	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8fa1	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4490	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8fa8	    0x488b9570f6ff	            mov rdx, qword [rbp - 0x990]	      4490	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8faf	         0xfb652fd	               movzx edx, byte [rdx - 3]	      4490	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8fb3	            0x8810	                      mov byte [rax], dl	      4490	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8fb5	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4491	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8fbc	        0x4883c001	                              add rax, 1	      4491	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8fc0	    0x48898570f6ff	            mov qword [rbp - 0x990], rax	      4491	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8fc7	    0x488b8570f6ff	            mov rax, qword [rbp - 0x990]	      4491	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8fce	          0xc60000	                       mov byte [rax], 0	      4491	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77
0x8fd1	    0x488b9578f6ff	            mov rdx, qword [rbp - 0x988]	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x8fd8	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x8fdf	          0x4829c2	                            sub rdx, rax	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x8fe2	          0x4889d0	                            mov rax, rdx	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x8fe5	          0x4889c2	                            mov rdx, rax	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x8fe8	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x8fef	          0x4829d0	                            sub rax, rdx	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x8ff2	          0x4889c6	                            mov rsi, rax	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x8ff5	    0x488bbd88f6ff	            mov rdi, qword [rbp - 0x978]	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x8ffc	    0x488b8d98f6ff	            mov rcx, qword [rbp - 0x968]	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x9003	        0x488d5580	                   lea rdx, [rbp - 0x80]	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x9007	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x900e	          0x4989f9	                             mov r9, rdi	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x9011	          0x4989c8	                             mov r8, rcx	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x9014	      0xb900000000	                              mov ecx, 0	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x9019	          0x4889c7	                            mov rdi, rax	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x901c	      0xb800000000	                              mov eax, 0	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x9021	      0xe800000000	                          call 0x4009066	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x9026	            0xeb4c	                           jmp 0x40090b4	      4492	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_77	CALL_53
0x9028	    0x488b9578f6ff	            mov rdx, qword [rbp - 0x988]	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x902f	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x9036	          0x4829c2	                            sub rdx, rax	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x9039	          0x4889d0	                            mov rax, rdx	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x903c	          0x4889c2	                            mov rdx, rax	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x903f	    0x488b85f8f5ff	            mov rax, qword [rbp - 0xa08]	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x9046	          0x4829d0	                            sub rax, rdx	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x9049	          0x4889c6	                            mov rsi, rax	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x904c	    0x488bbd98f6ff	            mov rdi, qword [rbp - 0x968]	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x9053	    0x8b8d4cf6ffff	            mov ecx, dword [rbp - 0x9b4]	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x9059	        0x488d5580	                   lea rdx, [rbp - 0x80]	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x905d	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x9064	          0x4989f8	                             mov r8, rdi	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x9067	          0x4889c7	                            mov rdi, rax	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x906a	      0xb800000000	                              mov eax, 0	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x906f	      0xe800000000	                          call 0x40090b4	      4496	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	ELSE_14	CALL_54
0x9074	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4498	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	CALL_55
0x907b	          0x4889c7	                            mov rdi, rax	      4498	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	CALL_55
0x907e	      0xe800000000	                          call 0x40090c3	      4498	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	CALL_55
0x9083	    0x48018578f6ff	           add qword [rbp - 0x988], rax 	      4498	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	CALL_55
0x908a	            0xeb2c	                           jmp 0x40090f8	      4498	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	CALL_55
0x908c	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4501	buffer.c	FUNCTION_65	FOR_1	ELSE_15
0x9092	          0x4863d0	                         movsxd rdx, eax	      4501	buffer.c	FUNCTION_65	FOR_1	ELSE_15
0x9095	          0x4889d0	                            mov rax, rdx	      4501	buffer.c	FUNCTION_65	FOR_1	ELSE_15
0x9098	          0x4801c0	                            add rax, rax	      4501	buffer.c	FUNCTION_65	FOR_1	ELSE_15
0x909b	          0x4801d0	                            add rax, rdx	      4501	buffer.c	FUNCTION_65	FOR_1	ELSE_15
0x909e	        0x48c1e003	                              shl rax, 3	      4501	buffer.c	FUNCTION_65	FOR_1	ELSE_15
0x90a2	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4501	buffer.c	FUNCTION_65	FOR_1	ELSE_15
0x90a6	          0x4801d8	                            add rax, rbx	      4501	buffer.c	FUNCTION_65	FOR_1	ELSE_15
0x90a9	    0x482de0070000	                          sub rax, 0x7e0	      4501	buffer.c	FUNCTION_65	FOR_1	ELSE_15
0x90af	    0xc70001000000	                      mov dword [rax], 1	      4501	buffer.c	FUNCTION_65	FOR_1	ELSE_15
0x90b5	            0xeb01	                           jmp 0x40090f8	      4501	buffer.c	FUNCTION_65	FOR_1	ELSE_15
0x90b7	              0x90	                                     nop	      4401	buffer.c	FUNCTION_65	FOR_1	IF_62
0x90b8	    0x80bd1bf6ffff	           cmp byte [rbp - 0x9e5], 0x7b 	      4503	buffer.c	FUNCTION_65	FOR_1	IF_78
0x90bf	            0x750f	                           jne 0x4009110	      4503	buffer.c	FUNCTION_65	FOR_1	IF_78
0x90c1	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	      4504	buffer.c	FUNCTION_65	FOR_1	CALL_56
0x90c8	          0x4889c7	                            mov rdi, rax	      4504	buffer.c	FUNCTION_65	FOR_1	CALL_56
0x90cb	      0xe800000000	                          call 0x4009110	      4504	buffer.c	FUNCTION_65	FOR_1	CALL_56
0x90d0	    0x4883bd98f6ff	              cmp qword [rbp - 0x968], 0	      4506	buffer.c	FUNCTION_65	FOR_1	IF_79
0x90d8	            0x7921	                           jns 0x400913b	      4506	buffer.c	FUNCTION_65	FOR_1	IF_79
0x90da	    0x83bd2cf6ffff	              cmp dword [rbp - 0x9d4], 0	      4506	buffer.c	FUNCTION_65	FOR_1	IF_79
0x90e1	            0x7522	                           jne 0x4009145	      4506	buffer.c	FUNCTION_65	FOR_1	IF_79
0x90e3	    0x4883bd90f6ff	              cmp qword [rbp - 0x970], 0	      4506	buffer.c	FUNCTION_65	FOR_1	IF_79
0x90eb	            0x7418	                            je 0x4009145	      4506	buffer.c	FUNCTION_65	FOR_1	IF_79
0x90ed	    0x488b8590f6ff	            mov rax, qword [rbp - 0x970]	      4506	buffer.c	FUNCTION_65	FOR_1	IF_79
0x90f4	           0xfb600	                   movzx eax, byte [rax]	      4506	buffer.c	FUNCTION_65	FOR_1	IF_79
0x90f7	            0x84c0	                             test al, al	      4506	buffer.c	FUNCTION_65	FOR_1	IF_79
0x90f9	            0x740a	                            je 0x4009145	      4506	buffer.c	FUNCTION_65	FOR_1	IF_79
0x90fb	    0xc78524f6ffff	              mov dword [rbp - 0x9dc], 0	      4507	buffer.c	FUNCTION_65	FOR_1	IF_79
0x9105	    0x83853cf6ffff	              add dword [rbp - 0x9c4], 1	      4508	buffer.c	FUNCTION_65	FOR_1
0x910c	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      3919	buffer.c	FUNCTION_65	FOR_1
0x9113	           0xfb600	                   movzx eax, byte [rax]	      3919	buffer.c	FUNCTION_65	FOR_1
0x9116	            0x84c0	                             test al, al	      3919	buffer.c	FUNCTION_65	FOR_1
0x9118	     0xf8592ddffff	                           jne 0x4006ef0	      3919	buffer.c	FUNCTION_65	FOR_1
0x911e	            0xeb0d	                           jmp 0x400916d	      3919	buffer.c	FUNCTION_65	FOR_1
0x9120	              0x90	                                     nop	      3930	buffer.c	FUNCTION_65	FOR_1	IF_6
0x9121	            0xeb0a	                           jmp 0x400916d	      3930	buffer.c	FUNCTION_65	FOR_1	IF_6
0x9123	              0x90	                                     nop	      3949	buffer.c	FUNCTION_65	FOR_1	IF_10
0x9124	            0xeb07	                           jmp 0x400916d	      3949	buffer.c	FUNCTION_65	FOR_1	IF_10
0x9126	              0x90	                                     nop	      3953	buffer.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x9127	            0xeb04	                           jmp 0x400916d	      3953	buffer.c	FUNCTION_65	FOR_1	IF_11	IF_12
0x9129	              0x90	                                     nop	      4428	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	IF_68
0x912a	            0xeb01	                           jmp 0x400916d	      4428	buffer.c	FUNCTION_65	FOR_1	IF_62	IF_66	IF_68
0x912c	              0x90	                                     nop	      4463	buffer.c	FUNCTION_65	FOR_1	ELSE_13	IF_72	IF_73
0x912d	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4510	buffer.c	FUNCTION_65
0x9134	          0xc60000	                       mov byte [rax], 0	      4510	buffer.c	FUNCTION_65
0x9137	    0x8b853cf6ffff	            mov eax, dword [rbp - 0x9c4]	      4511	buffer.c	FUNCTION_65
0x913d	    0x898538f6ffff	            mov dword [rbp - 0x9c8], eax	      4511	buffer.c	FUNCTION_65
0x9143	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	      4514	buffer.c	FUNCTION_65	IF_80
0x914a	    0x483b85f0f5ff	            cmp rax, qword [rbp - 0xa10]	      4514	buffer.c	FUNCTION_65	IF_80
0x9151	            0x740f	                            je 0x40091a2	      4514	buffer.c	FUNCTION_65	IF_80
0x9153	    0x488b85a0f6ff	            mov rax, qword [rbp - 0x960]	      4515	buffer.c	FUNCTION_65	CALL_57
0x915a	          0x4889c7	                            mov rdi, rax	      4515	buffer.c	FUNCTION_65	CALL_57
0x915d	      0xe800000000	                          call 0x40091a2	      4515	buffer.c	FUNCTION_65	CALL_57
0x9162	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      4518	buffer.c	FUNCTION_65	CALL_58
0x9169	          0x4889c7	                            mov rdi, rax	      4518	buffer.c	FUNCTION_65	CALL_58
0x916c	      0xe800000000	                          call 0x40091b1	      4518	buffer.c	FUNCTION_65	CALL_58
0x9171	    0x898534f6ffff	            mov dword [rbp - 0x9cc], eax	      4518	buffer.c	FUNCTION_65	CALL_58
0x9177	        0x837d1000	               cmp dword [rbp + 0x10], 0	      4519	buffer.c	FUNCTION_65	IF_81
0x917b	     0xf8e53040000	                           jle 0x4009614	      4519	buffer.c	FUNCTION_65	IF_81
0x9181	    0x8b8534f6ffff	            mov eax, dword [rbp - 0x9cc]	      4519	buffer.c	FUNCTION_65	IF_81
0x9187	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      4519	buffer.c	FUNCTION_65	IF_81
0x918a	     0xf8e44040000	                           jle 0x4009614	      4519	buffer.c	FUNCTION_65	IF_81
0x9190	    0x48c78580f6ff	              mov qword [rbp - 0x980], 0	      4522	buffer.c	FUNCTION_65	IF_81
0x919b	    0x83bd38f6ffff	              cmp dword [rbp - 0x9c8], 0	      4523	buffer.c	FUNCTION_65	IF_81	IF_82
0x91a2	            0x7570	                           jne 0x4009254	      4523	buffer.c	FUNCTION_65	IF_81	IF_82
0x91a4	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      4524	buffer.c	FUNCTION_65	IF_81	IF_82
0x91ab	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4524	buffer.c	FUNCTION_65	IF_81	IF_82
0x91b2	      0xe998000000	                           jmp 0x400928f	      4524	buffer.c	FUNCTION_65	IF_81	IF_82
0x91b7	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4528	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x91be	          0x4889d0	                            mov rax, rdx	      4528	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x91c1	          0x4801c0	                            add rax, rax	      4528	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x91c4	          0x4801d0	                            add rax, rdx	      4528	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x91c7	        0x48c1e003	                              shl rax, 3	      4528	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x91cb	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4528	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x91cf	          0x4801f0	                            add rax, rsi	      4528	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x91d2	    0x482de0070000	                          sub rax, 0x7e0	      4528	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x91d8	            0x8b00	                    mov eax, dword [rax]	      4528	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x91da	          0x83f806	                              cmp eax, 6	      4528	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x91dd	            0x752d	                           jne 0x400924c	      4528	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x91df	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4531	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x91e6	          0x4889d0	                            mov rax, rdx	      4531	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x91e9	          0x4801c0	                            add rax, rax	      4531	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x91ec	          0x4801d0	                            add rax, rdx	      4531	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x91ef	        0x48c1e003	                              shl rax, 3	      4531	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x91f3	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4531	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x91f7	          0x4801d8	                            add rax, rbx	      4531	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x91fa	    0x482df0070000	                          sub rax, 0x7f0	      4531	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x9200	          0x488b00	                    mov rax, qword [rax]	      4531	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x9203	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4531	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x920a	            0xeb19	                           jmp 0x4009265	      4532	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12	IF_83
0x920c	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4527	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12
0x9214	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      4527	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12
0x921a	            0x4898	                                    cdqe	      4527	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12
0x921c	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4527	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12
0x9223	            0x7f92	                            jg 0x40091f7	      4527	buffer.c	FUNCTION_65	IF_81	ELSE_16	FOR_12
0x9225	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      4534	buffer.c	FUNCTION_65	IF_81	ELSE_16	IF_84
0x922b	            0x4898	                                    cdqe	      4534	buffer.c	FUNCTION_65	IF_81	ELSE_16	IF_84
0x922d	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4534	buffer.c	FUNCTION_65	IF_81	ELSE_16	IF_84
0x9234	            0x7519	                           jne 0x400928f	      4534	buffer.c	FUNCTION_65	IF_81	ELSE_16	IF_84
0x9236	    0x488b8500f8ff	            mov rax, qword [rbp - 0x800]	      4537	buffer.c	FUNCTION_65	IF_81	ELSE_16	IF_84
0x923d	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4537	buffer.c	FUNCTION_65	IF_81	ELSE_16	IF_84
0x9244	    0x48c78580f6ff	              mov qword [rbp - 0x980], 0	      4538	buffer.c	FUNCTION_65	IF_81	ELSE_16	IF_84
0x924f	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4542	buffer.c	FUNCTION_65	IF_81	IF_85	CALL_59
0x9256	          0x4889c7	                            mov rdi, rax	      4542	buffer.c	FUNCTION_65	IF_81	IF_85	CALL_59
0x9259	      0xe800000000	                          call 0x400929e	      4542	buffer.c	FUNCTION_65	IF_81	IF_85	CALL_59
0x925e	            0x89c2	                            mov edx, eax	      4542	buffer.c	FUNCTION_65	IF_81	IF_85	CALL_59
0x9260	    0x8b8534f6ffff	            mov eax, dword [rbp - 0x9cc]	      4542	buffer.c	FUNCTION_65	IF_81	IF_85	CALL_59
0x9266	            0x29d0	                            sub eax, edx	      4542	buffer.c	FUNCTION_65	IF_81	IF_85	CALL_59
0x9268	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      4542	buffer.c	FUNCTION_65	IF_81	IF_85	CALL_59
0x926b	     0xf8c43010000	                            jl 0x40093f4	      4542	buffer.c	FUNCTION_65	IF_81	IF_85	CALL_59
0x9271	    0x8b0500000000	            mov eax, dword [0x040092b7] 	      4546	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86
0x9277	            0x85c0	                           test eax, eax	      4546	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86
0x9279	     0xf8491000000	                            je 0x4009350	      4546	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86
0x927f	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      4548	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86
0x9286	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4548	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86
0x928d	    0xc78534f6ffff	              mov dword [rbp - 0x9cc], 0	      4549	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86
0x9297	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4552	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13	CALL_60
0x929e	          0x4889c7	                            mov rdi, rax	      4552	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13	CALL_60
0x92a1	      0xe800000000	                          call 0x40092e6	      4552	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13	CALL_60
0x92a6	     0x18534f6ffff	            add dword [rbp - 0x9cc], eax	      4552	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13	CALL_60
0x92ac	    0x8b8534f6ffff	            mov eax, dword [rbp - 0x9cc]	      4553	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13	IF_87
0x92b2	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      4553	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13	IF_87
0x92b5	            0x7d28	                           jge 0x400931f	      4553	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13	IF_87
0x92b7	    0x488b05000000	            mov rax, qword [0x040092fe] 	      4555	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13
0x92be	    0x488b9568f6ff	            mov rdx, qword [rbp - 0x998]	      4555	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13
0x92c5	          0x4889d7	                            mov rdi, rdx	      4555	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13
0x92c8	            0xffd0	                                call rax	      4555	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13
0x92ca	    0x488b9568f6ff	            mov rdx, qword [rbp - 0x998]	      4555	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13
0x92d1	            0x4898	                                    cdqe	      4555	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13
0x92d3	          0x4801d0	                            add rax, rdx	      4555	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13
0x92d6	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4555	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13
0x92dd	            0xebb8	                           jmp 0x40092d7	      4556	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13
0x92df	              0x90	                                     nop	      4554	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	FOR_13	IF_87
0x92e0	            0xeb1a	                           jmp 0x400933c	      4558	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	WHILE_10
0x92e2	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4559	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	WHILE_10
0x92e9	        0x488d5001	                      lea rdx, [rax + 1]	      4559	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	WHILE_10
0x92ed	    0x48899568f6ff	            mov qword [rbp - 0x998], rdx	      4559	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	WHILE_10
0x92f4	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	      4559	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	WHILE_10
0x92fa	            0x8810	                      mov byte [rax], dl	      4559	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	WHILE_10
0x92fc	    0x838534f6ffff	              add dword [rbp - 0x9cc], 1	      4558	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	WHILE_10
0x9303	    0x8b8534f6ffff	            mov eax, dword [rbp - 0x9cc]	      4558	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	WHILE_10
0x9309	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      4558	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	WHILE_10
0x930c	            0x7cd4	                            jl 0x4009322	      4558	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	WHILE_10
0x930e	            0xeb1a	                           jmp 0x400936a	      4558	buffer.c	FUNCTION_65	IF_81	IF_85	IF_86	WHILE_10
0x9310	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      4563	buffer.c	FUNCTION_65	IF_81	IF_85	ELSE_17
0x9313	            0x4898	                                    cdqe	      4563	buffer.c	FUNCTION_65	IF_81	IF_85	ELSE_17
0x9315	        0x488d50ff	                      lea rdx, [rax - 1]	      4563	buffer.c	FUNCTION_65	IF_81	IF_85	ELSE_17
0x9319	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      4563	buffer.c	FUNCTION_65	IF_81	IF_85	ELSE_17
0x9320	          0x4801d0	                            add rax, rdx	      4563	buffer.c	FUNCTION_65	IF_81	IF_85	ELSE_17
0x9323	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4563	buffer.c	FUNCTION_65	IF_81	IF_85	ELSE_17
0x932a	    0x48c78580f6ff	              mov qword [rbp - 0x980], 0	      4564	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14
0x9335	            0xeb38	                           jmp 0x40093af	      4564	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14
0x9337	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x933e	          0x4889d0	                            mov rax, rdx	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x9341	          0x4801c0	                            add rax, rax	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x9344	          0x4801d0	                            add rax, rdx	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x9347	        0x48c1e003	                              shl rax, 3	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x934b	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x934f	          0x4801f0	                            add rax, rsi	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x9352	    0x482df0070000	                          sub rax, 0x7f0	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x9358	          0x488b10	                    mov rdx, qword [rax]	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x935b	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x9362	          0x4839c2	                            cmp rdx, rax	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x9365	            0x771b	                            ja 0x40093c2	      4565	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x9367	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4564	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14
0x936f	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      4564	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14
0x9375	            0x4898	                                    cdqe	      4564	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14
0x9377	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4564	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14
0x937e	            0x7fb7	                            jg 0x4009377	      4564	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14
0x9380	            0xeb01	                           jmp 0x40093c3	      4564	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14
0x9382	              0x90	                                     nop	      4566	buffer.c	FUNCTION_65	IF_81	IF_85	FOR_14	IF_88
0x9383	    0x488b8580f6ff	            mov rax, qword [rbp - 0x980]	      4567	buffer.c	FUNCTION_65	IF_81	IF_85
0x938a	    0x898538f6ffff	            mov dword [rbp - 0x9c8], eax	      4567	buffer.c	FUNCTION_65	IF_81	IF_85
0x9390	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4568	buffer.c	FUNCTION_65	IF_81	IF_85
0x9397	        0x488d5001	                      lea rdx, [rax + 1]	      4568	buffer.c	FUNCTION_65	IF_81	IF_85
0x939b	    0x48899568f6ff	            mov qword [rbp - 0x998], rdx	      4568	buffer.c	FUNCTION_65	IF_81	IF_85
0x93a2	          0xc6003e	                    mov byte [rax], 0x3e	      4568	buffer.c	FUNCTION_65	IF_81	IF_85
0x93a5	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4569	buffer.c	FUNCTION_65	IF_81	IF_85
0x93ac	          0xc60000	                       mov byte [rax], 0	      4569	buffer.c	FUNCTION_65	IF_81	IF_85
0x93af	      0xe912020000	                           jmp 0x4009606	      4569	buffer.c	FUNCTION_65	IF_81	IF_85
0x93b4	    0x8b0500000000	            mov eax, dword [0x040093fa] 	      4574	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89
0x93ba	            0x85c0	                           test eax, eax	      4574	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89
0x93bc	            0x745f	                            je 0x400945d	      4574	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89
0x93be	    0x48c78588f6ff	              mov qword [rbp - 0x978], 0	      4576	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89
0x93c9	            0xeb45	                           jmp 0x4009450	      4577	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x93cb	    0x488b9568f6ff	            mov rdx, qword [rbp - 0x998]	      4579	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11	CALL_61
0x93d2	    0x488b8588f6ff	            mov rax, qword [rbp - 0x978]	      4579	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11	CALL_61
0x93d9	          0x4801d0	                            add rax, rdx	      4579	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11	CALL_61
0x93dc	          0x4889c7	                            mov rdi, rax	      4579	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11	CALL_61
0x93df	      0xe800000000	                          call 0x4009424	      4579	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11	CALL_61
0x93e4	    0x298534f6ffff	            sub dword [rbp - 0x9cc], eax	      4579	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11	CALL_61
0x93ea	    0x488b05000000	            mov rax, qword [0x04009431] 	      4580	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x93f1	    0x488b8d68f6ff	            mov rcx, qword [rbp - 0x998]	      4580	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x93f8	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4580	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x93ff	          0x4801ca	                            add rdx, rcx	      4580	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x9402	          0x4889d7	                            mov rdi, rdx	      4580	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x9405	            0xffd0	                                call rax	      4580	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x9407	            0x4898	                                    cdqe	      4580	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x9409	    0x48018588f6ff	           add qword [rbp - 0x978], rax 	      4580	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x9410	    0x8b8534f6ffff	            mov eax, dword [rbp - 0x9cc]	      4577	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x9416	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      4577	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x9419	            0x7db0	                           jge 0x400940b	      4577	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x941b	            0xeb15	                           jmp 0x4009472	      4577	buffer.c	FUNCTION_65	IF_81	ELSE_18	IF_89	WHILE_11
0x941d	    0x8b8534f6ffff	            mov eax, dword [rbp - 0x9cc]	      4585	buffer.c	FUNCTION_65	IF_81	ELSE_18	ELSE_19
0x9423	          0x2b4510	             sub eax, dword [rbp + 0x10]	      4585	buffer.c	FUNCTION_65	IF_81	ELSE_18	ELSE_19
0x9426	          0x83c001	                              add eax, 1	      4585	buffer.c	FUNCTION_65	IF_81	ELSE_18	ELSE_19
0x9429	            0x4898	                                    cdqe	      4585	buffer.c	FUNCTION_65	IF_81	ELSE_18	ELSE_19
0x942b	    0x48898588f6ff	            mov qword [rbp - 0x978], rax	      4585	buffer.c	FUNCTION_65	IF_81	ELSE_18	ELSE_19
0x9432	    0x488b9568f6ff	            mov rdx, qword [rbp - 0x998]	      4586	buffer.c	FUNCTION_65	IF_81	ELSE_18
0x9439	    0x488b8588f6ff	            mov rax, qword [rbp - 0x978]	      4586	buffer.c	FUNCTION_65	IF_81	ELSE_18
0x9440	          0x4801d0	                            add rax, rdx	      4586	buffer.c	FUNCTION_65	IF_81	ELSE_18
0x9443	    0x48898578f6ff	            mov qword [rbp - 0x988], rax	      4586	buffer.c	FUNCTION_65	IF_81	ELSE_18
0x944a	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4587	buffer.c	FUNCTION_65	IF_81	ELSE_18	CALL_62
0x9451	          0x4889c7	                            mov rdi, rax	      4587	buffer.c	FUNCTION_65	IF_81	ELSE_18	CALL_62
0x9454	      0xe800000000	                          call 0x4009499	      4587	buffer.c	FUNCTION_65	IF_81	ELSE_18	CALL_62
0x9459	        0x488d5001	                      lea rdx, [rax + 1]	      4587	buffer.c	FUNCTION_65	IF_81	ELSE_18	CALL_62
0x945d	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4587	buffer.c	FUNCTION_65	IF_81	ELSE_18	CALL_62
0x9464	        0x488d4801	                      lea rcx, [rax + 1]	      4587	buffer.c	FUNCTION_65	IF_81	ELSE_18	CALL_62
0x9468	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4587	buffer.c	FUNCTION_65	IF_81	ELSE_18	CALL_62
0x946f	          0x4889c6	                            mov rsi, rax	      4587	buffer.c	FUNCTION_65	IF_81	ELSE_18	CALL_62
0x9472	          0x4889cf	                            mov rdi, rcx	      4587	buffer.c	FUNCTION_65	IF_81	ELSE_18	CALL_62
0x9475	      0xe800000000	                          call 0x40094ba	      4587	buffer.c	FUNCTION_65	IF_81	ELSE_18	CALL_62
0x947a	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4588	buffer.c	FUNCTION_65	IF_81	ELSE_18
0x9481	          0xc6003c	                    mov byte [rax], 0x3c	      4588	buffer.c	FUNCTION_65	IF_81	ELSE_18
0x9484	            0xeb44	                           jmp 0x400950a	      4591	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x9486	    0x488b9d68f6ff	            mov rbx, qword [rbp - 0x998]	      4593	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12	CALL_63
0x948d	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4593	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12	CALL_63
0x9494	          0x4889c7	                            mov rdi, rax	      4593	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12	CALL_63
0x9497	      0xe800000000	                          call 0x40094dc	      4593	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12	CALL_63
0x949c	          0x4801d8	                            add rax, rbx	      4593	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12	CALL_63
0x949f	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4593	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12	CALL_63
0x94a6	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4594	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x94ad	        0x488d5001	                      lea rdx, [rax + 1]	      4594	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x94b1	    0x48899568f6ff	            mov qword [rbp - 0x998], rdx	      4594	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x94b8	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	      4594	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x94be	            0x8810	                      mov byte [rax], dl	      4594	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x94c0	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4595	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x94c7	          0xc60000	                       mov byte [rax], 0	      4595	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x94ca	    0x838534f6ffff	              add dword [rbp - 0x9cc], 1	      4591	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x94d1	    0x8b8534f6ffff	            mov eax, dword [rbp - 0x9cc]	      4591	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x94d7	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      4591	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x94da	            0x7caa	                            jl 0x40094c6	      4591	buffer.c	FUNCTION_65	IF_81	ELSE_18	WHILE_12
0x94dc	    0x4883ad88f6ff	              sub qword [rbp - 0x978], 1	      4598	buffer.c	FUNCTION_65	IF_81	ELSE_18
0x94e4	      0xe9c8000000	                           jmp 0x40095f1	      4599	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15
0x94e9	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x94f0	          0x4889d0	                            mov rax, rdx	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x94f3	          0x4801c0	                            add rax, rax	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x94f6	          0x4801d0	                            add rax, rdx	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x94f9	        0x48c1e003	                              shl rax, 3	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x94fd	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x9501	          0x4801d8	                            add rax, rbx	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x9504	    0x482df0070000	                          sub rax, 0x7f0	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x950a	          0x488b00	                    mov rax, qword [rax]	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x950d	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x9514	          0x48f7da	                                 neg rdx	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x9517	          0x4801c2	                            add rdx, rax	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x951a	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x9521	          0x4839c2	                            cmp rdx, rax	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x9524	            0x7258	                            jb 0x40095be	      4601	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x9526	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x952d	          0x4889d0	                            mov rax, rdx	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x9530	          0x4801c0	                            add rax, rax	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x9533	          0x4801d0	                            add rax, rdx	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x9536	        0x48c1e003	                              shl rax, 3	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x953a	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x953e	          0x4801f0	                            add rax, rsi	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x9541	    0x482df0070000	                          sub rax, 0x7f0	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x9547	          0x488b00	                    mov rax, qword [rax]	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x954a	    0x488b9588f6ff	            mov rdx, qword [rbp - 0x978]	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x9551	          0x48f7da	                                 neg rdx	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x9554	        0x488d0c10	                    lea rcx, [rax + rdx]	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x9558	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x955f	          0x4889d0	                            mov rax, rdx	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x9562	          0x4801c0	                            add rax, rax	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x9565	          0x4801d0	                            add rax, rdx	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x9568	        0x48c1e003	                              shl rax, 3	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x956c	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x9570	          0x4801d8	                            add rax, rbx	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x9573	    0x482df0070000	                          sub rax, 0x7f0	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x9579	          0x488908	                    mov qword [rax], rcx	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x957c	            0xeb2b	                           jmp 0x40095e9	      4602	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	IF_90
0x957e	    0x488b8d68f6ff	            mov rcx, qword [rbp - 0x998]	      4604	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	ELSE_20
0x9585	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4604	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	ELSE_20
0x958c	          0x4889d0	                            mov rax, rdx	      4604	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	ELSE_20
0x958f	          0x4801c0	                            add rax, rax	      4604	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	ELSE_20
0x9592	          0x4801d0	                            add rax, rdx	      4604	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	ELSE_20
0x9595	        0x48c1e003	                              shl rax, 3	      4604	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	ELSE_20
0x9599	        0x488d7df0	                   lea rdi, [rbp - 0x10]	      4604	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	ELSE_20
0x959d	          0x4801f8	                            add rax, rdi	      4604	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	ELSE_20
0x95a0	    0x482df0070000	                          sub rax, 0x7f0	      4604	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	ELSE_20
0x95a6	          0x488908	                    mov qword [rax], rcx	      4604	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15	ELSE_20
0x95a9	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4599	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15
0x95b1	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      4599	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15
0x95b7	            0x4898	                                    cdqe	      4599	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15
0x95b9	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4599	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15
0x95c0	     0xf8f23ffffff	                            jg 0x4009529	      4599	buffer.c	FUNCTION_65	IF_81	ELSE_18	FOR_15
0x95c6	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      4607	buffer.c	FUNCTION_65	IF_81	ELSE_20
0x95c9	    0x898534f6ffff	            mov dword [rbp - 0x9cc], eax	      4607	buffer.c	FUNCTION_65	IF_81	ELSE_20
0x95cf	      0xe93b020000	                           jmp 0x400984f	      4607	buffer.c	FUNCTION_65	IF_81	ELSE_20
0x95d4	    0x8b8534f6ffff	            mov eax, dword [rbp - 0x9cc]	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x95da	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x95dd	     0xf8d2c020000	                           jge 0x400984f	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x95e3	    0x488b8500f6ff	            mov rax, qword [rbp - 0xa00]	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x95ea	          0x4889c7	                            mov rdi, rax	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x95ed	      0xe800000000	                          call 0x4009632	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x95f2	          0x4889c2	                            mov rdx, rax	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x95f5	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x95f8	            0x4898	                                    cdqe	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x95fa	          0x4801c2	                            add rdx, rax	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x95fd	    0x8b8534f6ffff	            mov eax, dword [rbp - 0x9cc]	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x9603	            0x4898	                                    cdqe	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x9605	          0x4829c2	                            sub rdx, rax	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x9608	          0x4889d0	                            mov rax, rdx	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x960b	        0x4883c001	                              add rax, 1	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x960f	    0x483b85f8f5ff	            cmp rax, qword [rbp - 0xa08]	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x9616	     0xf83f3010000	                           jae 0x400984f	      4609	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	CALL_64
0x961c	    0x48c78580f6ff	              mov qword [rbp - 0x980], 0	      4612	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16
0x9627	            0xeb30	                           jmp 0x4009699	      4612	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16
0x9629	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4613	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x9630	          0x4889d0	                            mov rax, rdx	      4613	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x9633	          0x4801c0	                            add rax, rax	      4613	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x9636	          0x4801d0	                            add rax, rdx	      4613	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x9639	        0x48c1e003	                              shl rax, 3	      4613	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x963d	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4613	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x9641	          0x4801f0	                            add rax, rsi	      4613	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x9644	    0x482de0070000	                          sub rax, 0x7e0	      4613	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x964a	            0x8b00	                    mov eax, dword [rax]	      4613	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x964c	          0x83f803	                              cmp eax, 3	      4613	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x964f	            0x741b	                            je 0x40096ac	      4613	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x9651	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4612	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16
0x9659	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      4612	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16
0x965f	            0x4898	                                    cdqe	      4612	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16
0x9661	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4612	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16
0x9668	            0x7fbf	                            jg 0x4009669	      4612	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16
0x966a	            0xeb01	                           jmp 0x40096ad	      4612	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16
0x966c	              0x90	                                     nop	      4614	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	FOR_16	IF_92
0x966d	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      4615	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x9673	            0x4898	                                    cdqe	      4615	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x9675	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4615	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x967c	     0xf8e8d010000	                           jle 0x400984f	      4615	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x9682	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x9689	          0x4889d0	                            mov rax, rdx	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x968c	          0x4801c0	                            add rax, rax	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x968f	          0x4801d0	                            add rax, rdx	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x9692	        0x48c1e003	                              shl rax, 3	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x9696	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x969a	          0x4801d8	                            add rax, rbx	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x969d	    0x482df0070000	                          sub rax, 0x7f0	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x96a3	          0x488b00	                    mov rax, qword [rax]	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x96a6	          0x8b5510	            mov edx, dword [rbp + 0x10] 	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x96a9	          0x4863ca	                         movsxd rcx, edx	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x96ac	    0x8b9534f6ffff	            mov edx, dword [rbp - 0x9cc]	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x96b2	          0x4863d2	                         movsxd rdx, edx	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x96b5	          0x4829d1	                            sub rcx, rdx	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x96b8	          0x4889ca	                            mov rdx, rcx	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x96bb	          0x4801d0	                            add rax, rdx	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x96be	    0x48898578f6ff	            mov qword [rbp - 0x988], rax	      4617	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x96c5	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x96cc	          0x4889d0	                            mov rax, rdx	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x96cf	          0x4801c0	                            add rax, rax	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x96d2	          0x4801d0	                            add rax, rdx	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x96d5	        0x48c1e003	                              shl rax, 3	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x96d9	        0x488d7df0	                   lea rdi, [rbp - 0x10]	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x96dd	          0x4801f8	                            add rax, rdi	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x96e0	    0x482df0070000	                          sub rax, 0x7f0	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x96e6	          0x488b00	                    mov rax, qword [rax]	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x96e9	          0x4889c7	                            mov rdi, rax	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x96ec	      0xe800000000	                          call 0x4009731	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x96f1	        0x488d7001	                      lea rsi, [rax + 1]	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x96f5	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x96fc	          0x4889d0	                            mov rax, rdx	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x96ff	          0x4801c0	                            add rax, rax	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x9702	          0x4801d0	                            add rax, rdx	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x9705	        0x48c1e003	                              shl rax, 3	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x9709	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x970d	          0x4801d8	                            add rax, rbx	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x9710	    0x482df0070000	                          sub rax, 0x7f0	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x9716	          0x488b08	                    mov rcx, qword [rax]	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x9719	    0x488b8578f6ff	            mov rax, qword [rbp - 0x988]	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x9720	          0x4889f2	                            mov rdx, rsi	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x9723	          0x4889ce	                            mov rsi, rcx	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x9726	          0x4889c7	                            mov rdi, rax	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x9729	      0xe800000000	                          call 0x400976e	      4618	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	CALL_65
0x972e	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x9735	          0x4889d0	                            mov rax, rdx	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x9738	          0x4801c0	                            add rax, rax	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x973b	          0x4801d0	                            add rax, rdx	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x973e	        0x48c1e003	                              shl rax, 3	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x9742	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x9746	          0x4801f0	                            add rax, rsi	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x9749	    0x482df0070000	                          sub rax, 0x7f0	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x974f	          0x488b00	                    mov rax, qword [rax]	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x9752	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x9759	            0xeb21	                           jmp 0x40097bc	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x975b	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4620	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x9762	    0x8b95e8f5ffff	            mov edx, dword [rbp - 0xa18]	      4620	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x9768	            0x8810	                      mov byte [rax], dl	      4620	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x976a	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x9771	        0x4883c001	                              add rax, 1	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x9775	    0x48898568f6ff	            mov qword [rbp - 0x998], rax	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x977c	    0x488b8568f6ff	            mov rax, qword [rbp - 0x998]	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x9783	    0x483b8578f6ff	            cmp rax, qword [rbp - 0x988]	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x978a	            0x72cf	                            jb 0x400979b	      4619	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_17
0x978c	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4621	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x9794	            0xeb5f	                           jmp 0x4009835	      4621	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x9796	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x979d	          0x4889d0	                            mov rax, rdx	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97a0	          0x4801c0	                            add rax, rax	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97a3	          0x4801d0	                            add rax, rdx	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97a6	        0x48c1e003	                              shl rax, 3	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97aa	        0x488d7df0	                   lea rdi, [rbp - 0x10]	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97ae	          0x4801f8	                            add rax, rdi	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97b1	    0x482df0070000	                          sub rax, 0x7f0	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97b7	          0x488b10	                    mov rdx, qword [rax]	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97ba	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97bd	    0x2b8534f6ffff	            sub eax, dword [rbp - 0x9cc]	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97c3	            0x4898	                                    cdqe	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97c5	        0x488d0c02	                    lea rcx, [rdx + rax]	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97c9	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97d0	          0x4889d0	                            mov rax, rdx	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97d3	          0x4801c0	                            add rax, rax	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97d6	          0x4801d0	                            add rax, rdx	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97d9	        0x48c1e003	                              shl rax, 3	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97dd	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97e1	          0x4801f0	                            add rax, rsi	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97e4	    0x482df0070000	                          sub rax, 0x7f0	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97ea	          0x488908	                    mov qword [rax], rcx	      4622	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97ed	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4621	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97f5	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      4621	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97fb	            0x4898	                                    cdqe	      4621	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x97fd	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4621	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x9804	            0x7f90	                            jg 0x40097d6	      4621	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93	FOR_18
0x9806	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      4623	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x9809	    0x898534f6ffff	            mov dword [rbp - 0x9cc], eax	      4623	buffer.c	FUNCTION_65	ELSE_20	ELSE_21	IF_91	IF_93
0x980f	    0x4883bde0f5ff	              cmp qword [rbp - 0xa20], 0	      4628	buffer.c	FUNCTION_65	IF_94
0x9817	     0xf84e2000000	                            je 0x400993f	      4628	buffer.c	FUNCTION_65	IF_94
0x981d	    0x488b85e0f5ff	            mov rax, qword [rbp - 0xa20]	      4630	buffer.c	FUNCTION_65	IF_94
0x9824	    0x488985a8f6ff	            mov qword [rbp - 0x958], rax	      4630	buffer.c	FUNCTION_65	IF_94
0x982b	    0x48c78580f6ff	              mov qword [rbp - 0x980], 0	      4631	buffer.c	FUNCTION_65	IF_94	FOR_19
0x9836	      0xe993000000	                           jmp 0x400990e	      4631	buffer.c	FUNCTION_65	IF_94	FOR_19
0x983b	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4633	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x9842	          0x4889d0	                            mov rax, rdx	      4633	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x9845	          0x4801c0	                            add rax, rax	      4633	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x9848	          0x4801d0	                            add rax, rdx	      4633	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x984b	        0x48c1e003	                              shl rax, 3	      4633	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x984f	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4633	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x9853	          0x4801d8	                            add rax, rbx	      4633	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x9856	    0x482de0070000	                          sub rax, 0x7e0	      4633	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x985c	            0x8b00	                    mov eax, dword [rax]	      4633	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x985e	          0x83f804	                              cmp eax, 4	      4633	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x9861	            0x7563	                           jne 0x4009906	      4633	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x9863	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4635	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x986a	          0x4889d0	                            mov rax, rdx	      4635	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x986d	          0x4801c0	                            add rax, rax	      4635	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x9870	          0x4801d0	                            add rax, rdx	      4635	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x9873	        0x48c1e003	                              shl rax, 3	      4635	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x9877	        0x488d7df0	                   lea rdi, [rbp - 0x10]	      4635	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x987b	          0x4801f8	                            add rax, rdi	      4635	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x987e	    0x482df0070000	                          sub rax, 0x7f0	      4635	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x9884	          0x488b10	                    mov rdx, qword [rax]	      4635	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x9887	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      4635	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x988e	          0x488910	                    mov qword [rax], rdx	      4635	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x9891	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4636	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x9898	          0x4889d0	                            mov rax, rdx	      4636	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x989b	          0x4801c0	                            add rax, rax	      4636	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x989e	          0x4801d0	                            add rax, rdx	      4636	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x98a1	        0x48c1e003	                              shl rax, 3	      4636	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x98a5	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4636	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x98a9	          0x4801f0	                            add rax, rsi	      4636	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x98ac	    0x482de8070000	                          sub rax, 0x7e8	      4636	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x98b2	            0x8b10	                    mov edx, dword [rax]	      4636	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x98b4	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      4636	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x98bb	          0x895008	                mov dword [rax + 8], edx	      4636	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x98be	    0x488385a8f6ff	           add qword [rbp - 0x958], 0x10	      4637	buffer.c	FUNCTION_65	IF_94	FOR_19	IF_95
0x98c6	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4631	buffer.c	FUNCTION_65	IF_94	FOR_19
0x98ce	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      4631	buffer.c	FUNCTION_65	IF_94	FOR_19
0x98d4	            0x4898	                                    cdqe	      4631	buffer.c	FUNCTION_65	IF_94	FOR_19
0x98d6	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4631	buffer.c	FUNCTION_65	IF_94	FOR_19
0x98dd	     0xf8f58ffffff	                            jg 0x400987b	      4631	buffer.c	FUNCTION_65	IF_94	FOR_19
0x98e3	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      4640	buffer.c	FUNCTION_65	IF_94
0x98ea	    0x48c700000000	                      mov qword [rax], 0	      4640	buffer.c	FUNCTION_65	IF_94
0x98f1	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      4641	buffer.c	FUNCTION_65	IF_94
0x98f8	    0xc74008000000	                  mov dword [rax + 8], 0	      4641	buffer.c	FUNCTION_65	IF_94
0x98ff	    0x4883bdd8f5ff	              cmp qword [rbp - 0xa28], 0	      4645	buffer.c	FUNCTION_65	IF_96
0x9907	     0xf84e2000000	                            je 0x4009a2f	      4645	buffer.c	FUNCTION_65	IF_96
0x990d	    0x488b85d8f5ff	            mov rax, qword [rbp - 0xa28]	      4647	buffer.c	FUNCTION_65	IF_96
0x9914	    0x488985a8f6ff	            mov qword [rbp - 0x958], rax	      4647	buffer.c	FUNCTION_65	IF_96
0x991b	    0x48c78580f6ff	              mov qword [rbp - 0x980], 0	      4648	buffer.c	FUNCTION_65	IF_96	FOR_20
0x9926	      0xe993000000	                           jmp 0x40099fe	      4648	buffer.c	FUNCTION_65	IF_96	FOR_20
0x992b	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4650	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x9932	          0x4889d0	                            mov rax, rdx	      4650	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x9935	          0x4801c0	                            add rax, rax	      4650	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x9938	          0x4801d0	                            add rax, rdx	      4650	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x993b	        0x48c1e003	                              shl rax, 3	      4650	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x993f	        0x488d5df0	                   lea rbx, [rbp - 0x10]	      4650	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x9943	          0x4801d8	                            add rax, rbx	      4650	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x9946	    0x482de0070000	                          sub rax, 0x7e0	      4650	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x994c	            0x8b00	                    mov eax, dword [rax]	      4650	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x994e	          0x83f805	                              cmp eax, 5	      4650	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x9951	            0x7563	                           jne 0x40099f6	      4650	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x9953	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4652	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x995a	          0x4889d0	                            mov rax, rdx	      4652	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x995d	          0x4801c0	                            add rax, rax	      4652	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x9960	          0x4801d0	                            add rax, rdx	      4652	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x9963	        0x48c1e003	                              shl rax, 3	      4652	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x9967	        0x488d7df0	                   lea rdi, [rbp - 0x10]	      4652	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x996b	          0x4801f8	                            add rax, rdi	      4652	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x996e	    0x482df0070000	                          sub rax, 0x7f0	      4652	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x9974	          0x488b10	                    mov rdx, qword [rax]	      4652	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x9977	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      4652	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x997e	          0x488910	                    mov qword [rax], rdx	      4652	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x9981	    0x488b9580f6ff	            mov rdx, qword [rbp - 0x980]	      4653	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x9988	          0x4889d0	                            mov rax, rdx	      4653	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x998b	          0x4801c0	                            add rax, rax	      4653	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x998e	          0x4801d0	                            add rax, rdx	      4653	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x9991	        0x48c1e003	                              shl rax, 3	      4653	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x9995	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4653	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x9999	          0x4801f0	                            add rax, rsi	      4653	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x999c	    0x482de8070000	                          sub rax, 0x7e8	      4653	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x99a2	            0x8b10	                    mov edx, dword [rax]	      4653	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x99a4	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      4653	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x99ab	          0x895008	                mov dword [rax + 8], edx	      4653	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x99ae	    0x488385a8f6ff	           add qword [rbp - 0x958], 0x10	      4654	buffer.c	FUNCTION_65	IF_96	FOR_20	IF_97
0x99b6	    0x48838580f6ff	              add qword [rbp - 0x980], 1	      4648	buffer.c	FUNCTION_65	IF_96	FOR_20
0x99be	    0x8b8538f6ffff	            mov eax, dword [rbp - 0x9c8]	      4648	buffer.c	FUNCTION_65	IF_96	FOR_20
0x99c4	            0x4898	                                    cdqe	      4648	buffer.c	FUNCTION_65	IF_96	FOR_20
0x99c6	    0x483b8580f6ff	            cmp rax, qword [rbp - 0x980]	      4648	buffer.c	FUNCTION_65	IF_96	FOR_20
0x99cd	     0xf8f58ffffff	                            jg 0x400996b	      4648	buffer.c	FUNCTION_65	IF_96	FOR_20
0x99d3	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      4657	buffer.c	FUNCTION_65	IF_96
0x99da	    0x48c700000000	                      mov qword [rax], 0	      4657	buffer.c	FUNCTION_65	IF_96
0x99e1	    0x488b85a8f6ff	            mov rax, qword [rbp - 0x958]	      4658	buffer.c	FUNCTION_65	IF_96
0x99e8	    0xc74008000000	                  mov dword [rax + 8], 0	      4658	buffer.c	FUNCTION_65	IF_96
0x99ef	    0x8b0500000000	            mov eax, dword [0x04009a35] 	      4663	buffer.c	FUNCTION_65	IF_98
0x99f5	            0x85c0	                           test eax, eax	      4663	buffer.c	FUNCTION_65	IF_98
0x99f7	            0x741f	                            je 0x4009a58	      4663	buffer.c	FUNCTION_65	IF_98
0x99f9	    0x8b8558f6ffff	            mov eax, dword [rbp - 0x9a8]	      4665	buffer.c	FUNCTION_65	IF_98
0x99ff	    0x890500000000	            mov dword [0x04009a45], eax 	      4665	buffer.c	FUNCTION_65	IF_98
0x9a05	    0x488b05000000	            mov rax, qword [0x04009a4c] 	      4666	buffer.c	FUNCTION_65	IF_98
0x9a0c	    0x8b955cf6ffff	            mov edx, dword [rbp - 0x9a4]	      4666	buffer.c	FUNCTION_65	IF_98
0x9a12	    0x899028010000	            mov dword [rax + 0x128], edx	      4666	buffer.c	FUNCTION_65	IF_98
0x9a18	    0x8b8534f6ffff	            mov eax, dword [rbp - 0x9cc]	      4669	buffer.c	FUNCTION_65
0x9a1e	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      4670	buffer.c	FUNCTION_65
0x9a22	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4670	buffer.c	FUNCTION_65
0x9a2b	            0x7405	                            je 0x4009a72	      4670	buffer.c	FUNCTION_65
0x9a2d	      0xe800000000	                          call 0x4009a72	      4670	buffer.c	FUNCTION_65
0x9a32	    0x4881c4280a00	                          add rsp, 0xa28	      4670	buffer.c	FUNCTION_65
0x9a39	              0x5b	                                 pop rbx	      4670	buffer.c	FUNCTION_65
0x9a3a	              0x5d	                                 pop rbp	      4670	buffer.c	FUNCTION_65
0x9a3b	              0xc3	                                     ret	      4670	buffer.c	FUNCTION_65
do_buffer	FOR,1:WHILE,5:ELSE,10:functions,0:IF,62:CALL,44:SWITCH,1:DO,1	616
0x1d56	              0x55	                                push rbp	      1270	buffer.c	FUNCTION_19
0x1d57	          0x4889e5	                            mov rbp, rsp	      1270	buffer.c	FUNCTION_19
0x1d5a	              0x53	                                push rbx	      1270	buffer.c	FUNCTION_19
0x1d5b	        0x4883ec68	                           sub rsp, 0x68	      1270	buffer.c	FUNCTION_19
0x1d5f	          0x897dac	             mov dword [rbp - 0x54], edi	      1270	buffer.c	FUNCTION_19
0x1d62	          0x8975a8	             mov dword [rbp - 0x58], esi	      1270	buffer.c	FUNCTION_19
0x1d65	          0x8955a4	             mov dword [rbp - 0x5c], edx	      1270	buffer.c	FUNCTION_19
0x1d68	          0x894da0	             mov dword [rbp - 0x60], ecx	      1270	buffer.c	FUNCTION_19
0x1d6b	        0x4489459c	             mov dword [rbp - 0x64], r8d	      1270	buffer.c	FUNCTION_19
0x1d6f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1270	buffer.c	FUNCTION_19
0x1d78	        0x488945e8	             mov qword [rbp - 0x18], rax	      1270	buffer.c	FUNCTION_19
0x1d7c	            0x31c0	                            xor eax, eax	      1270	buffer.c	FUNCTION_19
0x1d7e	        0x837dac02	               cmp dword [rbp - 0x54], 2	      1274	buffer.c	FUNCTION_19
0x1d82	            0x740c	                            je 0x4001dd0	      1274	buffer.c	FUNCTION_19
0x1d84	        0x837dac03	               cmp dword [rbp - 0x54], 3	      1273	buffer.c	FUNCTION_19
0x1d88	            0x7406	                            je 0x4001dd0	      1273	buffer.c	FUNCTION_19
0x1d8a	        0x837dac04	               cmp dword [rbp - 0x54], 4	      1274	buffer.c	FUNCTION_19
0x1d8e	            0x7507	                           jne 0x4001dd7	      1274	buffer.c	FUNCTION_19
0x1d90	      0xb801000000	                              mov eax, 1	      1274	buffer.c	FUNCTION_19
0x1d95	            0xeb05	                           jmp 0x4001ddc	      1274	buffer.c	FUNCTION_19
0x1d97	      0xb800000000	                              mov eax, 0	      1274	buffer.c	FUNCTION_19
0x1d9c	          0x8945bc	             mov dword [rbp - 0x44], eax	      1273	buffer.c	FUNCTION_19
0x1d9f	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      1276	buffer.c	FUNCTION_19	SWITCH_1
0x1da2	          0x83f801	                              cmp eax, 1	      1276	buffer.c	FUNCTION_19	SWITCH_1
0x1da5	            0x7407	                            je 0x4001dee	      1276	buffer.c	FUNCTION_19	SWITCH_1
0x1da7	          0x83f802	                              cmp eax, 2	      1276	buffer.c	FUNCTION_19	SWITCH_1
0x1daa	            0x740f	                            je 0x4001dfb	      1276	buffer.c	FUNCTION_19	SWITCH_1
0x1dac	            0xeb1a	                           jmp 0x4001e08	      1276	buffer.c	FUNCTION_19	SWITCH_1
0x1dae	    0x488b05000000	            mov rax, qword [0x04001df5] 	      1278	buffer.c	FUNCTION_19	SWITCH_1
0x1db5	        0x488945c0	             mov qword [rbp - 0x40], rax	      1278	buffer.c	FUNCTION_19	SWITCH_1
0x1db9	            0xeb19	                           jmp 0x4001e14	      1278	buffer.c	FUNCTION_19	SWITCH_1
0x1dbb	    0x488b05000000	            mov rax, qword [0x04001e02] 	      1279	buffer.c	FUNCTION_19	SWITCH_1
0x1dc2	        0x488945c0	             mov qword [rbp - 0x40], rax	      1279	buffer.c	FUNCTION_19	SWITCH_1
0x1dc6	            0xeb0c	                           jmp 0x4001e14	      1279	buffer.c	FUNCTION_19	SWITCH_1
0x1dc8	    0x488b05000000	            mov rax, qword [0x04001e0f] 	      1280	buffer.c	FUNCTION_19	SWITCH_1
0x1dcf	        0x488945c0	             mov qword [rbp - 0x40], rax	      1280	buffer.c	FUNCTION_19	SWITCH_1
0x1dd3	              0x90	                                     nop	      1280	buffer.c	FUNCTION_19	SWITCH_1
0x1dd4	        0x837da803	               cmp dword [rbp - 0x58], 3	      1282	buffer.c	FUNCTION_19	IF_1
0x1dd8	            0x757a	                           jne 0x4001e94	      1282	buffer.c	FUNCTION_19	IF_1
0x1dda	            0xeb3b	                           jmp 0x4001e57	      1284	buffer.c	FUNCTION_19	IF_1	WHILE_1
0x1ddc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1288	buffer.c	FUNCTION_19	IF_1	WHILE_1	DO_1
0x1de0	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1288	buffer.c	FUNCTION_19	IF_1	WHILE_1	DO_1
0x1de4	        0x488945c0	             mov qword [rbp - 0x40], rax	      1288	buffer.c	FUNCTION_19	IF_1	WHILE_1	DO_1
0x1de8	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1289	buffer.c	FUNCTION_19	IF_1	WHILE_1	DO_1	IF_2
0x1ded	            0x750b	                           jne 0x4001e3a	      1289	buffer.c	FUNCTION_19	IF_1	WHILE_1	DO_1	IF_2
0x1def	    0x488b05000000	            mov rax, qword [0x04001e36] 	      1290	buffer.c	FUNCTION_19	IF_1	WHILE_1	DO_1	IF_2
0x1df6	        0x488945c0	             mov qword [rbp - 0x40], rax	      1290	buffer.c	FUNCTION_19	IF_1	WHILE_1	DO_1	IF_2
0x1dfa	    0x488b05000000	            mov rax, qword [0x04001e41] 	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x1e01	        0x483945c0	            cmp qword [rbp - 0x40], rax 	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x1e05	            0x7410	                            je 0x4001e57	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x1e07	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x1e0b	          0x4889c7	                            mov rdi, rax	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x1e0e	      0xe800000000	                          call 0x4001e53	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x1e13	            0x85c0	                           test eax, eax	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x1e15	            0x74c5	                            je 0x4001e1c	      1292	buffer.c	FUNCTION_19	IF_1	WHILE_1	CALL_1
0x1e17	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      1284	buffer.c	FUNCTION_19	IF_1	WHILE_1
0x1e1a	          0x8d50ff	                      lea edx, [rax - 1]	      1284	buffer.c	FUNCTION_19	IF_1	WHILE_1
0x1e1d	          0x8955a0	             mov dword [rbp - 0x60], edx	      1284	buffer.c	FUNCTION_19	IF_1	WHILE_1
0x1e20	            0x85c0	                           test eax, eax	      1284	buffer.c	FUNCTION_19	IF_1	WHILE_1
0x1e22	            0x7fb8	                            jg 0x4001e1c	      1284	buffer.c	FUNCTION_19	IF_1	WHILE_1
0x1e24	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1294	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_2
0x1e28	          0x4889c7	                            mov rdi, rax	      1294	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_2
0x1e2b	      0xe800000000	                          call 0x4001e70	      1294	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_2
0x1e30	            0x85c0	                           test eax, eax	      1294	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_2
0x1e32	     0xf852a010000	                           jne 0x4001fa2	      1294	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_2
0x1e38	      0xbf00000000	                              mov edi, 0	      1296	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_4
0x1e3d	      0xe800000000	                          call 0x4001e82	      1296	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_4
0x1e42	          0x4889c7	                            mov rdi, rax	      1296	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_4
0x1e45	      0xe800000000	                          call 0x4001e8a	      1296	buffer.c	FUNCTION_19	IF_1	IF_3	CALL_4
0x1e4a	      0xb800000000	                              mov eax, 0	      1297	buffer.c	FUNCTION_19	IF_1	IF_3
0x1e4f	      0xe949080000	                           jmp 0x40026dd	      1297	buffer.c	FUNCTION_19	IF_1	IF_3
0x1e54	        0x837da801	               cmp dword [rbp - 0x58], 1	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x1e58	            0x7533	                           jne 0x4001ecd	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x1e5a	        0x837da000	               cmp dword [rbp - 0x60], 0	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x1e5e	            0x742d	                            je 0x4001ecd	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x1e60	            0xeb0c	                           jmp 0x4001eae	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x1e62	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1303	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x1e66	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1303	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x1e6a	        0x488945c0	             mov qword [rbp - 0x40], rax	      1303	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x1e6e	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x1e73	     0xf84e8000000	                            je 0x4001fa1	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x1e79	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x1e7d	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x1e83	          0x3b45a0	             cmp eax, dword [rbp - 0x60]	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x1e86	            0x75da	                           jne 0x4001ea2	      1302	buffer.c	FUNCTION_19	ELSE_1	IF_4	WHILE_2
0x1e88	      0xe9d4000000	                           jmp 0x4001fa1	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x1e8d	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1307	buffer.c	FUNCTION_19	ELSE_2
0x1e95	      0xe999000000	                           jmp 0x4001f73	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x1e9a	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1312	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_5
0x1e9f	            0x7508	                           jne 0x4001ee9	      1312	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_5
0x1ea1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1313	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_5
0x1ea5	        0x488945c8	             mov qword [rbp - 0x38], rax	      1313	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_5
0x1ea9	        0x837da401	               cmp dword [rbp - 0x5c], 1	      1314	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6
0x1ead	            0x7520	                           jne 0x4001f0f	      1314	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6
0x1eaf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1316	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6
0x1eb3	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1316	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6
0x1eb7	        0x488945c0	             mov qword [rbp - 0x40], rax	      1316	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6
0x1ebb	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1317	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6	IF_7
0x1ec0	            0x752b	                           jne 0x4001f2d	      1317	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6	IF_7
0x1ec2	    0x488b05000000	            mov rax, qword [0x04001f09] 	      1318	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6	IF_7
0x1ec9	        0x488945c0	             mov qword [rbp - 0x40], rax	      1318	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6	IF_7
0x1ecd	            0xeb1e	                           jmp 0x4001f2d	      1318	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_6	IF_7
0x1ecf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1322	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3
0x1ed3	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1322	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3
0x1ed7	        0x488945c0	             mov qword [rbp - 0x40], rax	      1322	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3
0x1edb	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1323	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3	IF_8
0x1ee0	            0x750b	                           jne 0x4001f2d	      1323	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3	IF_8
0x1ee2	    0x488b05000000	            mov rax, qword [0x04001f29] 	      1324	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3	IF_8
0x1ee9	        0x488945c0	             mov qword [rbp - 0x40], rax	      1324	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	ELSE_3	IF_8
0x1eed	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1327	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x1ef1	            0x750e	                           jne 0x4001f41	      1327	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x1ef3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1327	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x1ef7	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      1327	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x1efd	            0x85c0	                           test eax, eax	      1327	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x1eff	            0x740c	                            je 0x4001f4d	      1327	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x1f01	        0x836da001	               sub dword [rbp - 0x60], 1	      1329	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x1f05	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1330	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_9
0x1f0d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1332	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10
0x1f11	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1332	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10
0x1f15	            0x751c	                           jne 0x4001f73	      1332	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10
0x1f17	      0xbf00000000	                              mov edi, 0	      1335	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10	CALL_6
0x1f1c	      0xe800000000	                          call 0x4001f61	      1335	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10	CALL_6
0x1f21	          0x4889c7	                            mov rdi, rax	      1335	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10	CALL_6
0x1f24	      0xe800000000	                          call 0x4001f69	      1335	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10	CALL_6
0x1f29	      0xb800000000	                              mov eax, 0	      1336	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10
0x1f2e	      0xe96a070000	                           jmp 0x40026dd	      1336	buffer.c	FUNCTION_19	ELSE_2	WHILE_3	IF_10
0x1f33	        0x837da000	               cmp dword [rbp - 0x60], 0	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x1f37	     0xf8f5dffffff	                            jg 0x4001eda	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x1f3d	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x1f41	            0x751f	                           jne 0x4001fa2	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x1f43	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x1f47	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x1f4d	            0x85c0	                           test eax, eax	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x1f4f	            0x7511	                           jne 0x4001fa2	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x1f51	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x1f55	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x1f59	     0xf853bffffff	                           jne 0x4001eda	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x1f5f	            0xeb01	                           jmp 0x4001fa2	      1308	buffer.c	FUNCTION_19	ELSE_2	WHILE_3
0x1f61	              0x90	                                     nop	      1300	buffer.c	FUNCTION_19	ELSE_1	IF_4
0x1f62	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1341	buffer.c	FUNCTION_19	IF_11
0x1f67	            0x755f	                           jne 0x4002008	      1341	buffer.c	FUNCTION_19	IF_11
0x1f69	        0x837da801	               cmp dword [rbp - 0x58], 1	      1343	buffer.c	FUNCTION_19	IF_11	IF_12
0x1f6d	            0x7523	                           jne 0x4001fd2	      1343	buffer.c	FUNCTION_19	IF_11	IF_12
0x1f6f	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1346	buffer.c	FUNCTION_19	IF_11	IF_12	IF_13
0x1f73	            0x7549	                           jne 0x4001ffe	      1346	buffer.c	FUNCTION_19	IF_11	IF_12	IF_13
0x1f75	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x1f78	          0x4863d8	                         movsxd rbx, eax	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x1f7b	      0xbf00000000	                              mov edi, 0	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x1f80	      0xe800000000	                          call 0x4001fc5	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x1f85	          0x4889de	                            mov rsi, rbx	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x1f88	          0x4889c7	                            mov rdi, rax	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x1f8b	      0xe800000000	                          call 0x4001fd0	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x1f90	            0xeb2c	                           jmp 0x4001ffe	      1347	buffer.c	FUNCTION_19	IF_11	IF_12	CALL_8
0x1f92	        0x837da401	               cmp dword [rbp - 0x5c], 1	      1349	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x1f96	            0x7514	                           jne 0x4001fec	      1349	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x1f98	      0xbf00000000	                              mov edi, 0	      1350	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x1f9d	      0xe800000000	                          call 0x4001fe2	      1350	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x1fa2	          0x4889c7	                            mov rdi, rax	      1350	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x1fa5	      0xe800000000	                          call 0x4001fea	      1350	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x1faa	            0xeb12	                           jmp 0x4001ffe	      1350	buffer.c	FUNCTION_19	IF_11	ELSE_4	IF_14
0x1fac	      0xbf00000000	                              mov edi, 0	      1352	buffer.c	FUNCTION_19	IF_11	CALL_12
0x1fb1	      0xe800000000	                          call 0x4001ff6	      1352	buffer.c	FUNCTION_19	IF_11	CALL_12
0x1fb6	          0x4889c7	                            mov rdi, rax	      1352	buffer.c	FUNCTION_19	IF_11	CALL_12
0x1fb9	      0xe800000000	                          call 0x4001ffe	      1352	buffer.c	FUNCTION_19	IF_11	CALL_12
0x1fbe	      0xb800000000	                              mov eax, 0	      1353	buffer.c	FUNCTION_19	IF_11
0x1fc3	      0xe9d5060000	                           jmp 0x40026dd	      1353	buffer.c	FUNCTION_19	IF_11
0x1fc8	    0xc70500000000	               mov dword [0x04002012], 1	      1357	buffer.c	FUNCTION_19
0x1fd2	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1363	buffer.c	FUNCTION_19	IF_15
0x1fd6	     0xf842e050000	                            je 0x400254a	      1363	buffer.c	FUNCTION_19	IF_15
0x1fdc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1368	buffer.c	FUNCTION_19	IF_15	IF_16
0x1fe0	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      1368	buffer.c	FUNCTION_19	IF_15	IF_16
0x1fe6	            0x85c0	                           test eax, eax	      1368	buffer.c	FUNCTION_19	IF_15	IF_16
0x1fe8	            0x7421	                            je 0x400204b	      1368	buffer.c	FUNCTION_19	IF_15	IF_16
0x1fea	    0x488b05000000	            mov rax, qword [0x04002031] 	      1370	buffer.c	FUNCTION_19	IF_15	IF_16	CALL_14
0x1ff1	          0x4889c7	                            mov rdi, rax	      1370	buffer.c	FUNCTION_19	IF_15	IF_16	CALL_14
0x1ff4	      0xe800000000	                          call 0x4002039	      1370	buffer.c	FUNCTION_19	IF_15	IF_16	CALL_14
0x1ff9	          0x4889c7	                            mov rdi, rax	      1370	buffer.c	FUNCTION_19	IF_15	IF_16	CALL_14
0x1ffc	      0xe800000000	                          call 0x4002041	      1370	buffer.c	FUNCTION_19	IF_15	IF_16	CALL_14
0x2001	      0xb800000000	                              mov eax, 0	      1371	buffer.c	FUNCTION_19	IF_15	IF_16
0x2006	      0xe992060000	                           jmp 0x40026dd	      1371	buffer.c	FUNCTION_19	IF_15	IF_16
0x200b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1374	buffer.c	FUNCTION_19	IF_15	CALL_15
0x200f	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1374	buffer.c	FUNCTION_19	IF_15	CALL_15
0x2013	          0x4889d6	                            mov rsi, rdx	      1374	buffer.c	FUNCTION_19	IF_15	CALL_15
0x2016	          0x4889c7	                            mov rdi, rax	      1374	buffer.c	FUNCTION_19	IF_15	CALL_15
0x2019	      0xe800000000	                          call 0x400205e	      1374	buffer.c	FUNCTION_19	IF_15	CALL_15
0x201e	        0x837dac04	               cmp dword [rbp - 0x54], 4	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x2022	            0x7425	                            je 0x4002089	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x2024	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x2028	        0x488b4008	                mov rax, qword [rax + 8]	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x202c	          0x4885c0	                           test rax, rax	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x202f	            0x7518	                           jne 0x4002089	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x2031	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x2035	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x203b	            0x85c0	                           test eax, eax	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x203d	            0x750a	                           jne 0x4002089	      1378	buffer.c	FUNCTION_19	IF_15	IF_17
0x203f	      0xb800000000	                              mov eax, 0	      1379	buffer.c	FUNCTION_19	IF_15	IF_17
0x2044	      0xe954060000	                           jmp 0x40026dd	      1379	buffer.c	FUNCTION_19	IF_15	IF_17
0x2049	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x204d	     0xf85a3000000	                           jne 0x4002136	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x2053	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x2057	          0x4889c7	                            mov rdi, rax	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x205a	      0xe800000000	                          call 0x400209f	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x205f	            0x85c0	                           test eax, eax	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x2061	     0xf848f000000	                            je 0x4002136	      1381	buffer.c	FUNCTION_19	IF_15	IF_18	CALL_16
0x2067	    0x8b0500000000	            mov eax, dword [0x040020ad] 	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x206d	            0x85c0	                           test eax, eax	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x206f	            0x750a	                           jne 0x40020bb	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x2071	    0x8b0500000000	            mov eax, dword [0x040020b7] 	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x2077	            0x85c0	                           test eax, eax	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x2079	            0x744f	                            je 0x400210a	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x207b	    0x8b0500000000	            mov eax, dword [0x040020c1] 	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x2081	            0x85c0	                           test eax, eax	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x2083	            0x7445	                            je 0x400210a	      1384	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19
0x2085	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1386	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	CALL_17
0x2089	      0xbe00000000	                              mov esi, 0	      1386	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	CALL_17
0x208e	          0x4889c7	                            mov rdi, rax	      1386	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	CALL_17
0x2091	      0xe800000000	                          call 0x40020d6	      1386	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	CALL_17
0x2096	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1387	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_20	CALL_18
0x209a	          0x4889c7	                            mov rdi, rax	      1387	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_20	CALL_18
0x209d	      0xe800000000	                          call 0x40020e2	      1387	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_20	CALL_18
0x20a2	            0x85c0	                           test eax, eax	      1387	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_20	CALL_18
0x20a4	            0x750a	                           jne 0x40020f0	      1387	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_20	CALL_18
0x20a6	      0xb800000000	                              mov eax, 0	      1390	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_20
0x20ab	      0xe9ed050000	                           jmp 0x40026dd	      1390	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_20
0x20b0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1393	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_21	CALL_19
0x20b4	          0x4889c7	                            mov rdi, rax	      1393	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_21	CALL_19
0x20b7	      0xe800000000	                          call 0x40020fc	      1393	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_21	CALL_19
0x20bc	            0x85c0	                           test eax, eax	      1393	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_21	CALL_19
0x20be	            0x7436	                            je 0x4002136	      1393	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_21	CALL_19
0x20c0	      0xb800000000	                              mov eax, 0	      1394	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_21
0x20c5	      0xe9d3050000	                           jmp 0x40026dd	      1394	buffer.c	FUNCTION_19	IF_15	IF_18	IF_19	IF_21
0x20ca	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x20ce	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x20d4	          0x4863d8	                         movsxd rbx, eax	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x20d7	      0xbf00000000	                              mov edi, 0	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x20dc	      0xe800000000	                          call 0x4002121	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x20e1	          0x4889de	                            mov rsi, rbx	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x20e4	          0x4889c7	                            mov rdi, rax	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x20e7	      0xe800000000	                          call 0x400212c	      1399	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6	CALL_21
0x20ec	      0xb800000000	                              mov eax, 0	      1401	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6
0x20f1	      0xe9a7050000	                           jmp 0x40026dd	      1401	buffer.c	FUNCTION_19	IF_15	IF_18	ELSE_6
0x20f6	    0x488b05000000	            mov rax, qword [0x0400213d] 	      1406	buffer.c	FUNCTION_19	IF_15	IF_22
0x20fd	        0x483945c0	            cmp qword [rbp - 0x40], rax 	      1406	buffer.c	FUNCTION_19	IF_15	IF_22
0x2101	            0x750f	                           jne 0x4002152	      1406	buffer.c	FUNCTION_19	IF_15	IF_22
0x2103	    0x8b0500000000	            mov eax, dword [0x04002149] 	      1406	buffer.c	FUNCTION_19	IF_15	IF_22
0x2109	            0x85c0	                           test eax, eax	      1406	buffer.c	FUNCTION_19	IF_15	IF_22
0x210b	            0x7405	                            je 0x4002152	      1406	buffer.c	FUNCTION_19	IF_15	IF_22
0x210d	      0xe800000000	                          call 0x4002152	      1407	buffer.c	FUNCTION_19	IF_15	CALL_22
0x2112	    0x488b05000000	            mov rax, qword [0x04002159] 	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x2119	        0x488945c8	             mov qword [rbp - 0x38], rax	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x211d	            0xeb24	                           jmp 0x4002183	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x211f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x2123	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x2129	            0x85c0	                           test eax, eax	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x212b	            0x740a	                            je 0x4002177	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x212d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x2131	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x2135	            0x7515	                           jne 0x400218c	      1414	buffer.c	FUNCTION_19	IF_15	IF_23
0x2137	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x213b	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x213f	        0x488945c8	             mov qword [rbp - 0x38], rax	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x2143	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x2148	            0x75d5	                           jne 0x400215f	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x214a	            0xeb01	                           jmp 0x400218d	      1413	buffer.c	FUNCTION_19	IF_15	CALL_23
0x214c	              0x90	                                     nop	      1415	buffer.c	FUNCTION_19	IF_15	IF_23
0x214d	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1416	buffer.c	FUNCTION_19	IF_15	IF_24
0x2152	            0x753c	                           jne 0x40021d0	      1416	buffer.c	FUNCTION_19	IF_15	IF_24
0x2154	    0x488b05000000	            mov rax, qword [0x0400219b] 	      1416	buffer.c	FUNCTION_19	IF_15	IF_24
0x215b	        0x483945c0	            cmp qword [rbp - 0x40], rax 	      1416	buffer.c	FUNCTION_19	IF_15	IF_24
0x215f	            0x752f	                           jne 0x40021d0	      1416	buffer.c	FUNCTION_19	IF_15	IF_24
0x2161	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1417	buffer.c	FUNCTION_19	IF_15	CALL_24
0x2164	          0x8b459c	             mov eax, dword [rbp - 0x64]	      1417	buffer.c	FUNCTION_19	IF_15	CALL_24
0x2167	            0x89c6	                            mov esi, eax	      1417	buffer.c	FUNCTION_19	IF_15	CALL_24
0x2169	      0xbf01000000	                              mov edi, 1	      1417	buffer.c	FUNCTION_19	IF_15	CALL_24
0x216e	      0xe8b6faffff	                   call sym.empty_curbuf	      1417	buffer.c	FUNCTION_19	IF_15	CALL_24
0x2173	      0xe925050000	                           jmp 0x40026dd	      1417	buffer.c	FUNCTION_19	IF_15	CALL_24
0x2178	    0x488b05000000	            mov rax, qword [0x040021bf] 	      1428	buffer.c	FUNCTION_19	IF_15	WHILE_4	IF_25	CALL_25
0x217f	      0xbe00000000	                              mov esi, 0	      1428	buffer.c	FUNCTION_19	IF_15	WHILE_4	IF_25	CALL_25
0x2184	          0x4889c7	                            mov rdi, rax	      1428	buffer.c	FUNCTION_19	IF_15	WHILE_4	IF_25	CALL_25
0x2187	      0xe800000000	                          call 0x40021cc	      1428	buffer.c	FUNCTION_19	IF_15	WHILE_4	IF_25	CALL_25
0x218c	            0x85c0	                           test eax, eax	      1428	buffer.c	FUNCTION_19	IF_15	WHILE_4	IF_25	CALL_25
0x218e	            0x7454	                            je 0x4002224	      1428	buffer.c	FUNCTION_19	IF_15	WHILE_4	IF_25	CALL_25
0x2190	    0x488b05000000	            mov rax, qword [0x040021d7] 	      1424	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x2197	        0x483945c0	            cmp qword [rbp - 0x40], rax 	      1424	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x219b	            0x7548	                           jne 0x4002225	      1424	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x219d	    0x488b05000000	            mov rax, qword [0x040021e4] 	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x21a4	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x21a7	            0x85c0	                           test eax, eax	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x21a9	            0x753a	                           jne 0x4002225	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x21ab	    0x488b05000000	            mov rax, qword [0x040021f2] 	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x21b2	        0x488b4008	                mov rax, qword [rax + 8]	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x21b6	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x21bc	            0x85c0	                           test eax, eax	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x21be	            0x7f25	                            jg 0x4002225	      1425	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x21c0	    0x488b15000000	            mov rdx, qword [0x04002207] 	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x21c7	    0x488b05000000	            mov rax, qword [0x0400220e] 	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x21ce	          0x4839c2	                            cmp rdx, rax	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x21d1	            0x75a5	                           jne 0x40021b8	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x21d3	    0x488b05000000	            mov rax, qword [0x0400221a] 	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x21da	          0x488b00	                    mov rax, qword [rax]	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x21dd	          0x4885c0	                           test rax, rax	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x21e0	            0x7596	                           jne 0x40021b8	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x21e2	            0xeb01	                           jmp 0x4002225	      1426	buffer.c	FUNCTION_19	IF_15	WHILE_4
0x21e4	              0x90	                                     nop	      1429	buffer.c	FUNCTION_19	IF_15	WHILE_4	IF_25
0x21e5	    0x488b05000000	            mov rax, qword [0x0400222c] 	      1435	buffer.c	FUNCTION_19	IF_15	IF_26
0x21ec	        0x483945c0	            cmp qword [rbp - 0x40], rax 	      1435	buffer.c	FUNCTION_19	IF_15	IF_26
0x21f0	            0x745c	                            je 0x400228e	      1435	buffer.c	FUNCTION_19	IF_15	IF_26
0x21f2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1437	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_26
0x21f6	      0xbe00000000	                              mov esi, 0	      1437	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_26
0x21fb	          0x4889c7	                            mov rdi, rax	      1437	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_26
0x21fe	      0xe800000000	                          call 0x4002243	      1437	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_26
0x2203	    0x488b05000000	            mov rax, qword [0x0400224a] 	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x220a	        0x483945c0	            cmp qword [rbp - 0x40], rax 	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x220e	            0x7434	                            je 0x4002284	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x2210	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x2214	          0x4889c7	                            mov rdi, rax	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x2217	      0xe800000000	                          call 0x400225c	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x221c	            0x85c0	                           test eax, eax	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x221e	            0x7424	                            je 0x4002284	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x2220	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x2224	          0x8b4078	            mov eax, dword [rax + 0x78] 	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x2227	            0x85c0	                           test eax, eax	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x2229	            0x7f19	                            jg 0x4002284	      1438	buffer.c	FUNCTION_19	IF_15	IF_26	IF_27	CALL_27
0x222b	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x222e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x2232	      0xb900000000	                              mov ecx, 0	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x2237	          0x4889c6	                            mov rsi, rax	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x223a	      0xbf00000000	                              mov edi, 0	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x223f	      0xe800000000	                          call 0x4002284	      1439	buffer.c	FUNCTION_19	IF_15	IF_26	CALL_28
0x2244	      0xb801000000	                              mov eax, 1	      1440	buffer.c	FUNCTION_19	IF_15	IF_26
0x2249	      0xe94f040000	                           jmp 0x40026dd	      1440	buffer.c	FUNCTION_19	IF_15	IF_26
0x224e	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1453	buffer.c	FUNCTION_19	IF_15
0x2256	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1454	buffer.c	FUNCTION_19	IF_15
0x225e	    0x488b05000000	            mov rax, qword [0x040022a5] 	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x2265	          0x4885c0	                           test rax, rax	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x2268	            0x741e	                            je 0x40022c8	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x226a	      0xbf00000000	                              mov edi, 0	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x226f	      0xe800000000	                          call 0x40022b4	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x2274	            0x85c0	                           test eax, eax	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x2276	            0x7410	                            je 0x40022c8	      1455	buffer.c	FUNCTION_19	IF_15	IF_28	CALL_29
0x2278	    0x488b05000000	            mov rax, qword [0x040022bf] 	      1456	buffer.c	FUNCTION_19	IF_15	IF_28
0x227f	        0x488945c0	             mov qword [rbp - 0x40], rax	      1456	buffer.c	FUNCTION_19	IF_15	IF_28
0x2283	      0xe93c010000	                           jmp 0x4002404	      1456	buffer.c	FUNCTION_19	IF_15	IF_28
0x2288	    0x488b05000000	            mov rax, qword [0x040022cf] 	      1458	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x228f	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1458	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x2295	            0x85c0	                           test eax, eax	      1458	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x2297	     0xf8e27010000	                           jle 0x4002404	      1458	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x229d	    0x488b05000000	            mov rax, qword [0x040022e4] 	      1462	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x22a4	    0x8b8044150000	          mov eax, dword [rax + 0x1544] 	      1462	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x22aa	          0x83e801	                              sub eax, 1	      1462	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x22ad	          0x8945b8	             mov dword [rbp - 0x48], eax	      1462	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x22b0	        0x837db800	               cmp dword [rbp - 0x48], 0	      1463	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	IF_30
0x22b4	            0x7913	                           jns 0x4002309	      1463	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	IF_30
0x22b6	    0x488b05000000	            mov rax, qword [0x040022fd] 	      1464	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	IF_30
0x22bd	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1464	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	IF_30
0x22c3	          0x83e801	                              sub eax, 1	      1464	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	IF_30
0x22c6	          0x8945b8	             mov dword [rbp - 0x48], eax	      1464	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	IF_30
0x22c9	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1466	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x22cc	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1466	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29
0x22cf	      0xe9d1000000	                           jmp 0x40023e5	      1467	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5
0x22d4	    0x488b0d000000	            mov rcx, qword [0x0400231b] 	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x22db	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x22de	          0x4863d0	                         movsxd rdx, eax	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x22e1	          0x4889d0	                            mov rax, rdx	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x22e4	        0x48c1e002	                              shl rax, 2	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x22e8	          0x4801d0	                            add rax, rdx	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x22eb	        0x48c1e003	                              shl rax, 3	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x22ef	          0x4801c8	                            add rax, rcx	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x22f2	    0x4805b0050000	                          add rax, 0x5b0	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x22f8	            0x8b00	                    mov eax, dword [rax]	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x22fa	            0x89c7	                            mov edi, eax	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x22fc	      0xe800000000	                          call 0x4002341	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x2301	        0x488945c0	             mov qword [rbp - 0x40], rax	      1469	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	CALL_30
0x2305	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1470	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31
0x230a	            0x7449	                            je 0x4002395	      1470	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31
0x230c	    0x488b05000000	            mov rax, qword [0x04002353] 	      1472	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x2313	        0x483945c0	            cmp qword [rbp - 0x40], rax 	      1472	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x2317	            0x740e	                            je 0x4002367	      1472	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x2319	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1472	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x231d	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      1472	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x2323	            0x85c0	                           test eax, eax	      1472	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x2325	            0x750a	                           jne 0x4002371	      1472	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x2327	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1473	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x232f	            0xeb24	                           jmp 0x4002395	      1473	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	IF_32
0x2331	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1474	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33
0x2335	        0x488b4008	                mov rax, qword [rax + 8]	      1474	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33
0x2339	          0x4885c0	                           test rax, rax	      1474	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33
0x233c	            0x7517	                           jne 0x4002395	      1474	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33
0x233e	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1477	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33	IF_34
0x2343	            0x7508	                           jne 0x400238d	      1477	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33	IF_34
0x2345	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1478	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33	IF_34
0x2349	        0x488945c8	             mov qword [rbp - 0x38], rax	      1478	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33	IF_34
0x234d	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1479	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_31	ELSE_8	IF_33
0x2355	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1482	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_35
0x235a	            0x7561	                           jne 0x40023fd	      1482	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_35
0x235c	        0x837db800	               cmp dword [rbp - 0x48], 0	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x2360	            0x751e	                           jne 0x40023c0	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x2362	    0x488b05000000	            mov rax, qword [0x040023a9] 	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x2369	    0x8b9044150000	          mov edx, dword [rax + 0x1544] 	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x236f	    0x488b05000000	            mov rax, qword [0x040023b6] 	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x2376	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x237c	            0x39c2	                            cmp edx, eax	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x237e	            0x7440	                            je 0x4002400	      1485	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x2380	        0x836db801	               sub dword [rbp - 0x48], 1	      1487	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x2384	        0x837db800	               cmp dword [rbp - 0x48], 0	      1487	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x2388	            0x7913	                           jns 0x40023dd	      1487	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x238a	    0x488b05000000	            mov rax, qword [0x040023d1] 	      1488	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x2391	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1488	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x2397	          0x83e801	                              sub eax, 1	      1488	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x239a	          0x8945b8	             mov dword [rbp - 0x48], eax	      1488	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_37
0x239d	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1489	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_38
0x23a0	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      1489	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_38
0x23a3	            0x741e	                            je 0x4002403	      1489	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_38
0x23a5	    0x488b05000000	            mov rax, qword [0x040023ec] 	      1467	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5
0x23ac	    0x8b8044150000	          mov eax, dword [rax + 0x1544] 	      1467	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5
0x23b2	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      1467	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5
0x23b5	     0xf8519ffffff	                           jne 0x4002314	      1467	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5
0x23bb	            0xeb07	                           jmp 0x4002404	      1467	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5
0x23bd	              0x90	                                     nop	      1483	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_35
0x23be	            0xeb04	                           jmp 0x4002404	      1483	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_35
0x23c0	              0x90	                                     nop	      1486	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x23c1	            0xeb01	                           jmp 0x4002404	      1486	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_36
0x23c3	              0x90	                                     nop	      1490	buffer.c	FUNCTION_19	IF_15	ELSE_7	IF_29	WHILE_5	IF_38
0x23c4	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1495	buffer.c	FUNCTION_19	IF_15	IF_39
0x23c9	     0xf85b0000000	                           jne 0x40024bf	      1495	buffer.c	FUNCTION_19	IF_15	IF_39
0x23cf	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      1497	buffer.c	FUNCTION_19	IF_15	IF_39
0x23d6	    0x488b05000000	            mov rax, qword [0x0400241d] 	      1498	buffer.c	FUNCTION_19	IF_15	IF_39
0x23dd	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1498	buffer.c	FUNCTION_19	IF_15	IF_39
0x23e1	        0x488945c0	             mov qword [rbp - 0x40], rax	      1498	buffer.c	FUNCTION_19	IF_15	IF_39
0x23e5	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1501	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x23ea	            0x7522	                           jne 0x400244e	      1501	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x23ec	        0x837db400	               cmp dword [rbp - 0x4c], 0	      1503	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40	IF_41
0x23f0	     0xf8485000000	                            je 0x40024bb	      1503	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40	IF_41
0x23f6	    0x488b05000000	            mov rax, qword [0x0400243d] 	      1505	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x23fd	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1505	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x2401	        0x488945c0	             mov qword [rbp - 0x40], rax	      1505	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x2405	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      1506	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x240c	            0xeb68	                           jmp 0x40024b6	      1507	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40
0x240e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x2412	    0x8b9058170000	          mov edx, dword [rax + 0x1758] 	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x2418	    0x488b05000000	            mov rax, qword [0x0400245f] 	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x241f	    0x8b8058170000	          mov eax, dword [rax + 0x1758] 	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x2425	            0x39c2	                            cmp edx, eax	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x2427	            0x752a	                           jne 0x4002493	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x2429	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x242d	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x2433	            0x85c0	                           test eax, eax	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x2435	            0x741c	                            je 0x4002493	      1510	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42
0x2437	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1512	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_43
0x243b	        0x488b4008	                mov rax, qword [rax + 8]	      1512	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_43
0x243f	          0x4885c0	                           test rax, rax	      1512	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_43
0x2442	            0x753a	                           jne 0x40024be	      1512	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_43
0x2444	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1514	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_44
0x2449	            0x7508	                           jne 0x4002493	      1514	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_44
0x244b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1515	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_44
0x244f	        0x488945c8	             mov qword [rbp - 0x38], rax	      1515	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_44
0x2453	        0x837db400	               cmp dword [rbp - 0x4c], 0	      1517	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_45
0x2457	            0x7411	                            je 0x40024aa	      1517	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_45
0x2459	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1518	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_45
0x245d	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1518	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_45
0x2461	        0x488945c0	             mov qword [rbp - 0x40], rax	      1518	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_45
0x2465	      0xe97bffffff	                           jmp 0x4002425	      1518	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_45
0x246a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1520	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	ELSE_9
0x246e	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1520	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	ELSE_9
0x2472	        0x488945c0	             mov qword [rbp - 0x40], rax	      1520	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	ELSE_9
0x2476	      0xe96affffff	                           jmp 0x4002425	      1521	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1
0x247b	              0x90	                                     nop	      1504	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40	IF_41
0x247c	            0xeb01	                           jmp 0x40024bf	      1504	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_40	IF_41
0x247e	              0x90	                                     nop	      1513	buffer.c	FUNCTION_19	IF_15	IF_39	FOR_1	IF_42	IF_43
0x247f	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1523	buffer.c	FUNCTION_19	IF_15	IF_46
0x2484	            0x7508	                           jne 0x40024ce	      1523	buffer.c	FUNCTION_19	IF_15	IF_46
0x2486	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1524	buffer.c	FUNCTION_19	IF_15	IF_46
0x248a	        0x488945c0	             mov qword [rbp - 0x40], rax	      1524	buffer.c	FUNCTION_19	IF_15	IF_46
0x248e	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1525	buffer.c	FUNCTION_19	IF_15	IF_47
0x2493	            0x753e	                           jne 0x4002513	      1525	buffer.c	FUNCTION_19	IF_15	IF_47
0x2495	    0x488b05000000	            mov rax, qword [0x040024dc] 	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x249c	        0x488945c0	             mov qword [rbp - 0x40], rax	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x24a0	            0xeb27	                           jmp 0x4002509	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x24a2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x24a6	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x24ac	            0x85c0	                           test eax, eax	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x24ae	            0x740d	                            je 0x40024fd	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x24b0	    0x488b05000000	            mov rax, qword [0x040024f7] 	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x24b7	        0x483945c0	            cmp qword [rbp - 0x40], rax 	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x24bb	            0x7515	                           jne 0x4002512	      1528	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x24bd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x24c1	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x24c5	        0x488945c0	             mov qword [rbp - 0x40], rax	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x24c9	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x24ce	            0x75d2	                           jne 0x40024e2	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x24d0	            0xeb01	                           jmp 0x4002513	      1527	buffer.c	FUNCTION_19	IF_15	IF_47	CALL_31
0x24d2	              0x90	                                     nop	      1529	buffer.c	FUNCTION_19	IF_15	IF_47	IF_48
0x24d3	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1531	buffer.c	FUNCTION_19	IF_15	IF_49
0x24d8	            0x7530	                           jne 0x400254a	      1531	buffer.c	FUNCTION_19	IF_15	IF_49
0x24da	    0x488b05000000	            mov rax, qword [0x04002521] 	      1533	buffer.c	FUNCTION_19	IF_15	IF_49	IF_50
0x24e1	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1533	buffer.c	FUNCTION_19	IF_15	IF_49	IF_50
0x24e5	          0x4885c0	                           test rax, rax	      1533	buffer.c	FUNCTION_19	IF_15	IF_49	IF_50
0x24e8	            0x7411	                            je 0x400253b	      1533	buffer.c	FUNCTION_19	IF_15	IF_49	IF_50
0x24ea	    0x488b05000000	            mov rax, qword [0x04002531] 	      1534	buffer.c	FUNCTION_19	IF_15	IF_49	IF_50
0x24f1	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1534	buffer.c	FUNCTION_19	IF_15	IF_49	IF_50
0x24f5	        0x488945c0	             mov qword [rbp - 0x40], rax	      1534	buffer.c	FUNCTION_19	IF_15	IF_49	IF_50
0x24f9	            0xeb0f	                           jmp 0x400254a	      1534	buffer.c	FUNCTION_19	IF_15	IF_49	IF_50
0x24fb	    0x488b05000000	            mov rax, qword [0x04002542] 	      1536	buffer.c	FUNCTION_19	IF_15	IF_49	ELSE_10
0x2502	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1536	buffer.c	FUNCTION_19	IF_15	IF_49	ELSE_10
0x2506	        0x488945c0	             mov qword [rbp - 0x40], rax	      1536	buffer.c	FUNCTION_19	IF_15	IF_49	ELSE_10
0x250a	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1540	buffer.c	FUNCTION_19	ELSE_10	IF_51
0x250f	            0x7517	                           jne 0x4002568	      1540	buffer.c	FUNCTION_19	ELSE_10	IF_51
0x2511	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1544	buffer.c	FUNCTION_19	ELSE_10	IF_51	CALL_32
0x2514	          0x8b459c	             mov eax, dword [rbp - 0x64]	      1544	buffer.c	FUNCTION_19	ELSE_10	IF_51	CALL_32
0x2517	            0x89c6	                            mov esi, eax	      1544	buffer.c	FUNCTION_19	ELSE_10	IF_51	CALL_32
0x2519	      0xbf00000000	                              mov edi, 0	      1544	buffer.c	FUNCTION_19	ELSE_10	IF_51	CALL_32
0x251e	      0xe806f7ffff	                   call sym.empty_curbuf	      1544	buffer.c	FUNCTION_19	ELSE_10	IF_51	CALL_32
0x2523	      0xe975010000	                           jmp 0x40026dd	      1544	buffer.c	FUNCTION_19	ELSE_10	IF_51	CALL_32
0x2528	        0x837dac01	               cmp dword [rbp - 0x54], 1	      1550	buffer.c	FUNCTION_19	IF_52
0x252c	            0x756d	                           jne 0x40025db	      1550	buffer.c	FUNCTION_19	IF_52
0x252e	    0x8b0500000000	            mov eax, dword [0x04002574] 	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x2534	          0x83e001	                              and eax, 1	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x2537	            0x85c0	                           test eax, eax	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x2539	            0x741b	                            je 0x4002596	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x253b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x253f	          0x4889c7	                            mov rdi, rax	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x2542	      0xe800000000	                          call 0x4002587	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x2547	          0x4885c0	                           test rax, rax	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x254a	            0x740a	                            je 0x4002596	      1554	buffer.c	FUNCTION_19	IF_52	IF_53	CALL_33
0x254c	      0xb801000000	                              mov eax, 1	      1555	buffer.c	FUNCTION_19	IF_52	IF_53
0x2551	      0xe947010000	                           jmp 0x40026dd	      1555	buffer.c	FUNCTION_19	IF_52	IF_53
0x2556	    0x8b0500000000	            mov eax, dword [0x0400259c] 	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x255c	          0x83e002	                              and eax, 2	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x255f	            0x85c0	                           test eax, eax	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x2561	            0x741b	                            je 0x40025be	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x2563	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x2567	          0x4889c7	                            mov rdi, rax	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x256a	      0xe800000000	                          call 0x40025af	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x256f	          0x4885c0	                           test rax, rax	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x2572	            0x740a	                            je 0x40025be	      1558	buffer.c	FUNCTION_19	IF_52	IF_54	CALL_34
0x2574	      0xb801000000	                              mov eax, 1	      1559	buffer.c	FUNCTION_19	IF_52	IF_54
0x2579	      0xe91f010000	                           jmp 0x40026dd	      1559	buffer.c	FUNCTION_19	IF_52	IF_54
0x257e	      0xbe00000000	                              mov esi, 0	      1560	buffer.c	FUNCTION_19	IF_52	IF_55	CALL_35
0x2583	      0xbf00000000	                              mov edi, 0	      1560	buffer.c	FUNCTION_19	IF_52	IF_55	CALL_35
0x2588	      0xe800000000	                          call 0x40025cd	      1560	buffer.c	FUNCTION_19	IF_52	IF_55	CALL_35
0x258d	            0x85c0	                           test eax, eax	      1560	buffer.c	FUNCTION_19	IF_52	IF_55	CALL_35
0x258f	            0x750a	                           jne 0x40025db	      1560	buffer.c	FUNCTION_19	IF_52	IF_55	CALL_35
0x2591	      0xb800000000	                              mov eax, 0	      1561	buffer.c	FUNCTION_19	IF_52	IF_55
0x2596	      0xe902010000	                           jmp 0x40026dd	      1561	buffer.c	FUNCTION_19	IF_52	IF_55
0x259b	    0x488b05000000	            mov rax, qword [0x040025e2] 	      1565	buffer.c	FUNCTION_19	IF_56
0x25a2	        0x483945c0	            cmp qword [rbp - 0x40], rax 	      1565	buffer.c	FUNCTION_19	IF_56
0x25a6	            0x750a	                           jne 0x40025f2	      1565	buffer.c	FUNCTION_19	IF_56
0x25a8	      0xb801000000	                              mov eax, 1	      1566	buffer.c	FUNCTION_19	IF_56
0x25ad	      0xe9eb000000	                           jmp 0x40026dd	      1566	buffer.c	FUNCTION_19	IF_56
0x25b2	        0x837dac00	               cmp dword [rbp - 0x54], 0	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x25b6	     0xf8593000000	                           jne 0x400268f	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x25bc	    0x488b05000000	            mov rax, qword [0x04002603] 	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x25c3	          0x8b559c	             mov edx, dword [rbp - 0x64]	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x25c6	            0x89d6	                            mov esi, edx	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x25c8	          0x4889c7	                            mov rdi, rax	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x25cb	      0xe800000000	                          call 0x4002610	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x25d0	            0x85c0	                           test eax, eax	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x25d2	            0x757b	                           jne 0x400268f	      1571	buffer.c	FUNCTION_19	IF_57	CALL_36
0x25d4	    0x8b0500000000	            mov eax, dword [0x0400261a] 	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x25da	            0x85c0	                           test eax, eax	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x25dc	            0x750a	                           jne 0x4002628	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x25de	    0x8b0500000000	            mov eax, dword [0x04002624] 	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x25e4	            0x85c0	                           test eax, eax	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x25e6	            0x7448	                            je 0x4002670	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x25e8	    0x8b0500000000	            mov eax, dword [0x0400262e] 	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x25ee	            0x85c0	                           test eax, eax	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x25f0	            0x743e	                            je 0x4002670	      1574	buffer.c	FUNCTION_19	IF_57	IF_58
0x25f2	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1578	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_37
0x25f6	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1578	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_37
0x25fa	          0x4889d6	                            mov rsi, rdx	      1578	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_37
0x25fd	          0x4889c7	                            mov rdi, rax	      1578	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_37
0x2600	      0xe800000000	                          call 0x4002645	      1578	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_37
0x2605	    0x488b05000000	            mov rax, qword [0x0400264c] 	      1579	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_38
0x260c	      0xbe00000000	                              mov esi, 0	      1579	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_38
0x2611	          0x4889c7	                            mov rdi, rax	      1579	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_38
0x2614	      0xe800000000	                          call 0x4002659	      1579	buffer.c	FUNCTION_19	IF_57	IF_58	CALL_38
0x2619	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1580	buffer.c	FUNCTION_19	IF_57	IF_58	IF_59	CALL_39
0x261d	          0x4889c7	                            mov rdi, rax	      1580	buffer.c	FUNCTION_19	IF_57	IF_58	IF_59	CALL_39
0x2620	      0xe800000000	                          call 0x4002665	      1580	buffer.c	FUNCTION_19	IF_57	IF_58	IF_59	CALL_39
0x2625	            0x85c0	                           test eax, eax	      1580	buffer.c	FUNCTION_19	IF_57	IF_58	IF_59	CALL_39
0x2627	            0x7507	                           jne 0x4002670	      1580	buffer.c	FUNCTION_19	IF_57	IF_58	IF_59	CALL_39
0x2629	      0xb800000000	                              mov eax, 0	      1582	buffer.c	FUNCTION_19	IF_57	IF_58	IF_59
0x262e	            0xeb6d	                           jmp 0x40026dd	      1582	buffer.c	FUNCTION_19	IF_57	IF_58	IF_59
0x2630	    0x488b05000000	            mov rax, qword [0x04002677] 	      1584	buffer.c	FUNCTION_19	IF_57	IF_60	CALL_40
0x2637	          0x4889c7	                            mov rdi, rax	      1584	buffer.c	FUNCTION_19	IF_57	IF_60	CALL_40
0x263a	      0xe800000000	                          call 0x400267f	      1584	buffer.c	FUNCTION_19	IF_57	IF_60	CALL_40
0x263f	            0x85c0	                           test eax, eax	      1584	buffer.c	FUNCTION_19	IF_57	IF_60	CALL_40
0x2641	            0x740c	                            je 0x400268f	      1584	buffer.c	FUNCTION_19	IF_57	IF_60	CALL_40
0x2643	      0xe800000000	                          call 0x4002688	      1587	buffer.c	FUNCTION_19	IF_57	IF_60	CALL_41
0x2648	      0xb800000000	                              mov eax, 0	      1588	buffer.c	FUNCTION_19	IF_57	IF_60
0x264d	            0xeb4e	                           jmp 0x40026dd	      1588	buffer.c	FUNCTION_19	IF_57	IF_60
0x264f	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1593	buffer.c	FUNCTION_19	CALL_42
0x2652	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1593	buffer.c	FUNCTION_19	CALL_42
0x2656	            0x89d6	                            mov esi, edx	      1593	buffer.c	FUNCTION_19	CALL_42
0x2658	          0x4889c7	                            mov rdi, rax	      1593	buffer.c	FUNCTION_19	CALL_42
0x265b	      0xe800000000	                          call 0x40026a0	      1593	buffer.c	FUNCTION_19	CALL_42
0x2660	        0x837dac01	               cmp dword [rbp - 0x54], 1	      1595	buffer.c	FUNCTION_19	IF_61
0x2664	            0x7522	                           jne 0x40026c8	      1595	buffer.c	FUNCTION_19	IF_61
0x2666	    0x488b05000000	            mov rax, qword [0x040026ad] 	      1597	buffer.c	FUNCTION_19	IF_61	CALL_43
0x266d	    0xc78088020000	              mov dword [rax + 0x288], 0	      1597	buffer.c	FUNCTION_19	IF_61	CALL_43
0x2677	    0x488b05000000	            mov rax, qword [0x040026be] 	      1597	buffer.c	FUNCTION_19	IF_61	CALL_43
0x267e	    0xc780b0020000	              mov dword [rax + 0x2b0], 0	      1597	buffer.c	FUNCTION_19	IF_61	CALL_43
0x2688	      0xe800000000	                          call 0x40026cd	      1601	buffer.c	FUNCTION_19	IF_62	CALL_44
0x268d	            0x85c0	                           test eax, eax	      1601	buffer.c	FUNCTION_19	IF_62	CALL_44
0x268f	            0x7407	                            je 0x40026d8	      1601	buffer.c	FUNCTION_19	IF_62	CALL_44
0x2691	      0xb800000000	                              mov eax, 0	      1602	buffer.c	FUNCTION_19	IF_62
0x2696	            0xeb05	                           jmp 0x40026dd	      1602	buffer.c	FUNCTION_19	IF_62
0x2698	      0xb801000000	                              mov eax, 1	      1605	buffer.c	FUNCTION_19
0x269d	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1606	buffer.c	FUNCTION_19
0x26a1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1606	buffer.c	FUNCTION_19
0x26aa	            0x7405	                            je 0x40026f1	      1606	buffer.c	FUNCTION_19
0x26ac	      0xe800000000	                          call 0x40026f1	      1606	buffer.c	FUNCTION_19
0x26b1	        0x4883c468	                           add rsp, 0x68	      1606	buffer.c	FUNCTION_19
0x26b5	              0x5b	                                 pop rbx	      1606	buffer.c	FUNCTION_19
0x26b6	              0x5d	                                 pop rbp	      1606	buffer.c	FUNCTION_19
0x26b7	              0xc3	                                     ret	      1606	buffer.c	FUNCTION_19
buf_signcount	FOR,1:WHILE,0:ELSE,0:functions,0:IF,2:CALL,1:SWITCH,0:DO,0	29
0xbfc0	              0x55	                                push rbp	      6031	buffer.c	FUNCTION_96
0xbfc1	          0x4889e5	                            mov rbp, rsp	      6031	buffer.c	FUNCTION_96
0xbfc4	        0x4883ec20	                           sub rsp, 0x20	      6031	buffer.c	FUNCTION_96
0xbfc8	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6031	buffer.c	FUNCTION_96
0xbfcc	        0x488975e0	             mov qword [rbp - 0x20], rsi	      6031	buffer.c	FUNCTION_96
0xbfd0	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      6033	buffer.c	FUNCTION_96
0xbfd7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6035	buffer.c	FUNCTION_96	FOR_1
0xbfdb	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      6035	buffer.c	FUNCTION_96	FOR_1
0xbfe2	        0x488945f8	                mov qword [rbp - 8], rax	      6035	buffer.c	FUNCTION_96	FOR_1
0xbfe6	            0xeb31	                           jmp 0x400c059	      6035	buffer.c	FUNCTION_96	FOR_1
0xbfe8	        0x488b45f8	                mov rax, qword [rbp - 8]	      6036	buffer.c	FUNCTION_96	FOR_1	IF_1
0xbfec	        0x488b4008	                mov rax, qword [rax + 8]	      6036	buffer.c	FUNCTION_96	FOR_1	IF_1
0xbff0	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6036	buffer.c	FUNCTION_96	FOR_1	IF_1
0xbff4	            0x7517	                           jne 0x400c04d	      6036	buffer.c	FUNCTION_96	FOR_1	IF_1
0xbff6	        0x488b45f8	                mov rax, qword [rbp - 8]	      6037	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_1
0xbffa	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6037	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_1
0xbffd	            0x89c7	                            mov edi, eax	      6037	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_1
0xbfff	      0xe800000000	                          call 0x400c044	      6037	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_1
0xc004	          0x4885c0	                           test rax, rax	      6037	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_1
0xc007	            0x7404	                            je 0x400c04d	      6037	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_1
0xc009	        0x8345f401	                add dword [rbp - 0xc], 1	      6038	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2
0xc00d	        0x488b45f8	                mov rax, qword [rbp - 8]	      6035	buffer.c	FUNCTION_96	FOR_1
0xc011	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6035	buffer.c	FUNCTION_96	FOR_1
0xc015	        0x488945f8	                mov qword [rbp - 8], rax	      6035	buffer.c	FUNCTION_96	FOR_1
0xc019	      0x48837df800	                  cmp qword [rbp - 8], 0	      6035	buffer.c	FUNCTION_96	FOR_1
0xc01e	            0x75c8	                           jne 0x400c028	      6035	buffer.c	FUNCTION_96	FOR_1
0xc020	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6040	buffer.c	FUNCTION_96
0xc023	              0xc9	                                   leave	      6041	buffer.c	FUNCTION_96
0xc024	              0xc3	                                     ret	      6041	buffer.c	FUNCTION_96
ExpandBufnames	FOR,2:WHILE,0:ELSE,1:functions,1:IF,11:CALL,11:SWITCH,0:DO,0	193
0x4318	              0x55	                                push rbp	      2558	buffer.c	FUNCTION_34
0x4319	          0x4889e5	                            mov rbp, rsp	      2558	buffer.c	FUNCTION_34
0x431c	    0x4881ec100100	                          sub rsp, 0x110	      2558	buffer.c	FUNCTION_34
0x4323	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	      2558	buffer.c	FUNCTION_34
0x432a	    0x4889b500ffff	            mov qword [rbp - 0x100], rsi	      2558	buffer.c	FUNCTION_34
0x4331	    0x488995f8feff	            mov qword [rbp - 0x108], rdx	      2558	buffer.c	FUNCTION_34
0x4338	    0x898df4feffff	            mov dword [rbp - 0x10c], ecx	      2558	buffer.c	FUNCTION_34
0x433e	    0x64488b042528	                mov rax, qword fs:[0x28]	      2558	buffer.c	FUNCTION_34
0x4347	        0x488945f8	                mov qword [rbp - 8], rax	      2558	buffer.c	FUNCTION_34
0x434b	            0x31c0	                            xor eax, eax	      2558	buffer.c	FUNCTION_34
0x434d	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	      2559	buffer.c	FUNCTION_34
0x4357	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2566	buffer.c	FUNCTION_34
0x435e	    0xc70000000000	                      mov dword [rax], 0	      2566	buffer.c	FUNCTION_34
0x4364	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2567	buffer.c	FUNCTION_34
0x436b	    0x48c700000000	                      mov qword [rax], 0	      2567	buffer.c	FUNCTION_34
0x4372	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2570	buffer.c	FUNCTION_34	IF_1
0x4379	           0xfb600	                   movzx eax, byte [rax]	      2570	buffer.c	FUNCTION_34	IF_1
0x437c	            0x3c5e	                            cmp al, 0x5e	      2570	buffer.c	FUNCTION_34	IF_1
0x437e	            0x7572	                           jne 0x4004432	      2570	buffer.c	FUNCTION_34	IF_1
0x4380	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x4387	          0x4889c7	                            mov rdi, rax	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x438a	      0xe800000000	                          call 0x40043cf	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x438f	          0x83c00b	                            add eax, 0xb	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x4392	            0x89c7	                            mov edi, eax	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x4394	      0xe800000000	                          call 0x40043d9	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x4399	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x43a0	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	      2573	buffer.c	FUNCTION_34	IF_1	IF_2
0x43a8	            0x750a	                           jne 0x40043f4	      2573	buffer.c	FUNCTION_34	IF_1	IF_2
0x43aa	      0xb800000000	                              mov eax, 0	      2574	buffer.c	FUNCTION_34	IF_1	IF_2
0x43af	      0xe9fe020000	                           jmp 0x40046f2	      2574	buffer.c	FUNCTION_34	IF_1	IF_2
0x43b4	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2575	buffer.c	FUNCTION_34	IF_1	CALL_3
0x43bb	    0x48b95c285e5c	          movabs rcx, 0x2f5c5b7c5c5e285c	      2575	buffer.c	FUNCTION_34	IF_1	CALL_3
0x43c5	          0x488908	                    mov qword [rax], rcx	      2575	buffer.c	FUNCTION_34	IF_1	CALL_3
0x43c8	    0xc740085d5c29	          mov dword [rax + 8], 0x295c5d 	      2575	buffer.c	FUNCTION_34	IF_1	CALL_3
0x43cf	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2576	buffer.c	FUNCTION_34	IF_1	CALL_4
0x43d6	        0x488d5001	                      lea rdx, [rax + 1]	      2576	buffer.c	FUNCTION_34	IF_1	CALL_4
0x43da	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2576	buffer.c	FUNCTION_34	IF_1	CALL_4
0x43e1	        0x4883c00b	                            add rax, 0xb	      2576	buffer.c	FUNCTION_34	IF_1	CALL_4
0x43e5	          0x4889d6	                            mov rsi, rdx	      2576	buffer.c	FUNCTION_34	IF_1	CALL_4
0x43e8	          0x4889c7	                            mov rdi, rax	      2576	buffer.c	FUNCTION_34	IF_1	CALL_4
0x43eb	      0xe800000000	                          call 0x4004430	      2576	buffer.c	FUNCTION_34	IF_1	CALL_4
0x43f0	            0xeb0e	                           jmp 0x4004440	      2576	buffer.c	FUNCTION_34	IF_1	CALL_4
0x43f2	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2579	buffer.c	FUNCTION_34	ELSE_1
0x43f9	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      2579	buffer.c	FUNCTION_34	ELSE_1
0x4400	    0xc78524ffffff	               mov dword [rbp - 0xdc], 0	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x440a	      0xe955020000	                           jmp 0x40046a4	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x440f	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 0	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x4416	            0x7e14	                           jle 0x400446c	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x4418	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x441f	    0x483b8508ffff	             cmp rax, qword [rbp - 0xf8]	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x4426	     0xf8447020000	                            je 0x40046b3	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x442c	    0x8b9524ffffff	             mov edx, dword [rbp - 0xdc]	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x4432	            0x89d0	                            mov eax, edx	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x4434	          0xc1e002	                              shl eax, 2	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x4437	             0x1d0	                            add eax, edx	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x4439	             0x1c0	                            add eax, eax	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x443b	             0x1d0	                            add eax, edx	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x443d	          0x4863d0	                         movsxd rdx, eax	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x4440	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x4447	          0x4801d0	                            add rax, rdx	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x444a	      0xbe01000000	                              mov esi, 1	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x444f	          0x4889c7	                            mov rdi, rax	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x4452	      0xe800000000	                          call 0x4004497	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x4457	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x445e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2592	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4
0x4465	          0x4885c0	                           test rax, rax	      2592	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4
0x4468	            0x7529	                           jne 0x40044d3	      2592	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4
0x446a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2594	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4	IF_5
0x4471	    0x483b8508ffff	             cmp rax, qword [rbp - 0xf8]	      2594	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4	IF_5
0x4478	            0x740f	                            je 0x40044c9	      2594	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4	IF_5
0x447a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2595	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4	CALL_6
0x4481	          0x4889c7	                            mov rdi, rax	      2595	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4	CALL_6
0x4484	      0xe800000000	                          call 0x40044c9	      2595	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4	CALL_6
0x4489	      0xb800000000	                              mov eax, 0	      2596	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4
0x448e	      0xe91f020000	                           jmp 0x40046f2	      2596	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4
0x4493	    0xc78520ffffff	               mov dword [rbp - 0xe0], 1	      2603	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x449d	      0xe993010000	                           jmp 0x4004675	      2603	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x44a2	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	      2605	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x44ac	    0x488b05000000	            mov rax, qword [0x040044f3] 	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x44b3	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x44ba	      0xe9e5000000	                           jmp 0x40045e4	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x44bf	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2608	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_1
0x44c6	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      2608	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_1
0x44cc	            0x85c0	                           test eax, eax	      2608	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_1
0x44ce	     0xf84bd000000	                            je 0x40045d1	      2608	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_1
0x44d4	    0x488b05000000	            mov rax, qword [0x0400451b] 	      2610	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	CALL_1
0x44db	            0x89c2	                            mov edx, eax	      2610	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	CALL_1
0x44dd	    0x488b8d28ffff	             mov rcx, qword [rbp - 0xd8]	      2610	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	CALL_1
0x44e4	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      2610	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	CALL_1
0x44eb	          0x4889ce	                            mov rsi, rcx	      2610	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	CALL_1
0x44ee	          0x4889c7	                            mov rdi, rax	      2610	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	CALL_1
0x44f1	      0xe8d2010000	                  call sym.buflist_match	      2610	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	CALL_1
0x44f6	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      2610	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	CALL_1
0x44fd	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 0	      2611	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2
0x4505	     0xf8487000000	                            je 0x40045d2	      2611	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2
0x450b	    0x83bd20ffffff	               cmp dword [rbp - 0xe0], 1	      2613	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_3
0x4512	            0x7509	                           jne 0x400455d	      2613	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_3
0x4514	    0x83851cffffff	               add dword [rbp - 0xe4], 1	      2614	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_3
0x451b	            0xeb75	                           jmp 0x40045d2	      2614	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_3
0x451d	    0x8b85f4feffff	            mov eax, dword [rbp - 0x10c]	      2617	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_4
0x4523	          0x83e002	                              and eax, 2	      2617	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_4
0x4526	            0x85c0	                           test eax, eax	      2617	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_4
0x4528	            0x7422	                            je 0x400458c	      2617	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_4
0x452a	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x4531	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x4538	          0x4889d6	                            mov rsi, rdx	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x453b	          0x4889c7	                            mov rdi, rax	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x453e	      0xe800000000	                          call 0x4004583	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x4543	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x454a	            0xeb16	                           jmp 0x40045a2	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x454c	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2620	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_3
0x4553	          0x4889c7	                            mov rdi, rax	      2620	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_3
0x4556	      0xe800000000	                          call 0x400459b	      2620	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_3
0x455b	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      2620	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_3
0x4562	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x4569	          0x488b08	                    mov rcx, qword [rax]	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x456c	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x4572	          0x8d5001	                      lea edx, [rax + 1]	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x4575	    0x89951cffffff	             mov dword [rbp - 0xe4], edx	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x457b	            0x4898	                                    cdqe	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x457d	        0x48c1e003	                              shl rax, 3	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x4581	        0x488d1401	                    lea rdx, [rcx + rax]	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x4585	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x458c	          0x488902	                    mov qword [rdx], rax	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x458f	            0xeb01	                           jmp 0x40045d2	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x4591	              0x90	                                     nop	      2609	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_1
0x4592	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4599	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x459d	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x45a4	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x45ac	     0xf850dffffff	                           jne 0x40044ff	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x45b2	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      2625	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_6
0x45b9	     0xf8485000000	                            je 0x4004684	      2625	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_6
0x45bf	    0x83bd20ffffff	               cmp dword [rbp - 0xe0], 1	      2627	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7
0x45c6	            0x7566	                           jne 0x400466e	      2627	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7
0x45c8	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x45ce	            0x4898	                                    cdqe	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x45d0	          0xc1e003	                              shl eax, 3	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x45d3	            0x89c7	                            mov edi, eax	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x45d5	      0xe800000000	                          call 0x400461a	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x45da	          0x4889c2	                            mov rdx, rax	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x45dd	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x45e4	          0x488910	                    mov qword [rax], rdx	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x45e7	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2630	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8
0x45ee	          0x488b00	                    mov rax, qword [rax]	      2630	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8
0x45f1	          0x4885c0	                           test rax, rax	      2630	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8
0x45f4	            0x7538	                           jne 0x400466e	      2630	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8
0x45f6	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2632	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_8
0x45fd	          0x4889c7	                            mov rdi, rax	      2632	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_8
0x4600	      0xe800000000	                          call 0x4004645	      2632	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_8
0x4605	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2633	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	IF_9
0x460c	    0x483b8508ffff	             cmp rax, qword [rbp - 0xf8]	      2633	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	IF_9
0x4613	            0x740f	                            je 0x4004664	      2633	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	IF_9
0x4615	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2634	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_9
0x461c	          0x4889c7	                            mov rdi, rax	      2634	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_9
0x461f	      0xe800000000	                          call 0x4004664	      2634	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_9
0x4624	      0xb800000000	                              mov eax, 0	      2635	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8
0x4629	      0xe984000000	                           jmp 0x40046f2	      2635	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8
0x462e	    0x838520ffffff	               add dword [rbp - 0xe0], 1	      2603	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4635	    0x83bd20ffffff	               cmp dword [rbp - 0xe0], 2	      2603	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x463c	     0xf8e60feffff	                           jle 0x40044e2	      2603	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4642	            0xeb01	                           jmp 0x4004685	      2603	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4644	              0x90	                                     nop	      2626	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_6
0x4645	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x464c	          0x4889c7	                            mov rdi, rax	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x464f	      0xe800000000	                          call 0x4004694	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x4654	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      2640	buffer.c	FUNCTION_34	FOR_1	ELSE_1	IF_10
0x465b	            0x7519	                           jne 0x40046b6	      2640	buffer.c	FUNCTION_34	FOR_1	ELSE_1	IF_10
0x465d	    0x838524ffffff	               add dword [rbp - 0xdc], 1	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x4664	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 1	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x466b	     0xf8e9efdffff	                           jle 0x400444f	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x4671	            0xeb04	                           jmp 0x40046b7	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x4673	              0x90	                                     nop	      2590	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x4674	            0xeb01	                           jmp 0x40046b7	      2590	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x4676	              0x90	                                     nop	      2641	buffer.c	FUNCTION_34	FOR_1	ELSE_1	IF_10
0x4677	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2644	buffer.c	FUNCTION_34	IF_11
0x467e	    0x483b8508ffff	             cmp rax, qword [rbp - 0xf8]	      2644	buffer.c	FUNCTION_34	IF_11
0x4685	            0x740f	                            je 0x40046d6	      2644	buffer.c	FUNCTION_34	IF_11
0x4687	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2645	buffer.c	FUNCTION_34	CALL_11
0x468e	          0x4889c7	                            mov rdi, rax	      2645	buffer.c	FUNCTION_34	CALL_11
0x4691	      0xe800000000	                          call 0x40046d6	      2645	buffer.c	FUNCTION_34	CALL_11
0x4696	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      2647	buffer.c	FUNCTION_34
0x469d	    0x8b951cffffff	             mov edx, dword [rbp - 0xe4]	      2647	buffer.c	FUNCTION_34
0x46a3	            0x8910	                    mov dword [rax], edx	      2647	buffer.c	FUNCTION_34
0x46a5	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      2648	buffer.c	FUNCTION_34
0x46ac	           0xf95c0	                                setne al	      2648	buffer.c	FUNCTION_34
0x46af	           0xfb6c0	                           movzx eax, al	      2648	buffer.c	FUNCTION_34
0x46b2	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2649	buffer.c	FUNCTION_34
0x46b6	    0x644833342528	                xor rsi, qword fs:[0x28]	      2649	buffer.c	FUNCTION_34
0x46bf	            0x7405	                            je 0x4004706	      2649	buffer.c	FUNCTION_34
0x46c1	      0xe800000000	                          call 0x4004706	      2649	buffer.c	FUNCTION_34
0x46c6	              0xc9	                                   leave	      2649	buffer.c	FUNCTION_34
0x46c7	              0xc3	                                     ret	      2649	buffer.c	FUNCTION_34
buf_delete_all_signs	FOR,0:WHILE,0:ELSE,0:functions,0:IF,1:CALL,2:SWITCH,0:DO,0	21
0xc0ad	              0x55	                                push rbp	      6075	buffer.c	FUNCTION_98
0xc0ae	          0x4889e5	                            mov rbp, rsp	      6075	buffer.c	FUNCTION_98
0xc0b1	        0x4883ec10	                           sub rsp, 0x10	      6075	buffer.c	FUNCTION_98
0xc0b5	    0x488b05000000	            mov rax, qword [0x0400c0fc] 	      6078	buffer.c	FUNCTION_98	CALL_1
0xc0bc	        0x488945f8	                mov qword [rbp - 8], rax	      6078	buffer.c	FUNCTION_98	CALL_1
0xc0c0	            0xeb28	                           jmp 0x400c12a	      6078	buffer.c	FUNCTION_98	CALL_1
0xc0c2	        0x488b45f8	                mov rax, qword [rbp - 8]	      6079	buffer.c	FUNCTION_98	IF_1
0xc0c6	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      6079	buffer.c	FUNCTION_98	IF_1
0xc0cd	          0x4885c0	                           test rax, rax	      6079	buffer.c	FUNCTION_98	IF_1
0xc0d0	            0x740c	                            je 0x400c11e	      6079	buffer.c	FUNCTION_98	IF_1
0xc0d2	        0x488b45f8	                mov rax, qword [rbp - 8]	      6080	buffer.c	FUNCTION_98	CALL_2
0xc0d6	          0x4889c7	                            mov rdi, rax	      6080	buffer.c	FUNCTION_98	CALL_2
0xc0d9	      0xe800000000	                          call 0x400c11e	      6080	buffer.c	FUNCTION_98	CALL_2
0xc0de	        0x488b45f8	                mov rax, qword [rbp - 8]	      6078	buffer.c	FUNCTION_98	CALL_1
0xc0e2	        0x488b4068	            mov rax, qword [rax + 0x68] 	      6078	buffer.c	FUNCTION_98	CALL_1
0xc0e6	        0x488945f8	                mov qword [rbp - 8], rax	      6078	buffer.c	FUNCTION_98	CALL_1
0xc0ea	      0x48837df800	                  cmp qword [rbp - 8], 0	      6078	buffer.c	FUNCTION_98	CALL_1
0xc0ef	            0x75d1	                           jne 0x400c102	      6078	buffer.c	FUNCTION_98	CALL_1
0xc0f1	              0x90	                                     nop	      6081	buffer.c	FUNCTION_98
0xc0f2	              0xc9	                                   leave	      6081	buffer.c	FUNCTION_98
0xc0f3	              0xc3	                                     ret	      6081	buffer.c	FUNCTION_98
close_buffer	FOR,0:WHILE,0:ELSE,7:functions,0:IF,34:CALL,37:SWITCH,0:DO,0	425
0x95a	              0x55	                                push rbp	       445	buffer.c	FUNCTION_8
0x95b	          0x4889e5	                            mov rbp, rsp	       445	buffer.c	FUNCTION_8
0x95e	        0x4883ec70	                           sub rsp, 0x70	       445	buffer.c	FUNCTION_8
0x962	        0x48897da8	             mov qword [rbp - 0x58], rdi	       445	buffer.c	FUNCTION_8
0x966	        0x488975a0	             mov qword [rbp - 0x60], rsi	       445	buffer.c	FUNCTION_8
0x96a	          0x89559c	             mov dword [rbp - 0x64], edx	       445	buffer.c	FUNCTION_8
0x96d	          0x894d98	             mov dword [rbp - 0x68], ecx	       445	buffer.c	FUNCTION_8
0x970	    0x64488b042528	                mov rax, qword fs:[0x28]	       445	buffer.c	FUNCTION_8
0x979	        0x488945f8	                mov qword [rbp - 8], rax	       445	buffer.c	FUNCTION_8
0x97d	            0x31c0	                            xor eax, eax	       445	buffer.c	FUNCTION_8
0x97f	    0x488b05000000	            mov rax, qword [0x040009c6] 	       449	buffer.c	FUNCTION_8
0x986	          0x4885c0	                           test rax, rax	       449	buffer.c	FUNCTION_8
0x989	            0x7418	                            je 0x40009e3	       449	buffer.c	FUNCTION_8
0x98b	    0x488b05000000	            mov rax, qword [0x040009d2] 	       449	buffer.c	FUNCTION_8
0x992	        0x488b4008	                mov rax, qword [rax + 8]	       449	buffer.c	FUNCTION_8
0x996	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       449	buffer.c	FUNCTION_8
0x99a	            0x7507	                           jne 0x40009e3	       449	buffer.c	FUNCTION_8
0x99c	      0xb801000000	                              mov eax, 1	       449	buffer.c	FUNCTION_8
0x9a1	            0xeb05	                           jmp 0x40009e8	       449	buffer.c	FUNCTION_8
0x9a3	      0xb800000000	                              mov eax, 0	       449	buffer.c	FUNCTION_8
0x9a8	          0x8945c4	             mov dword [rbp - 0x3c], eax	       449	buffer.c	FUNCTION_8
0x9ab	    0x488b05000000	            mov rax, qword [0x040009f2] 	       450	buffer.c	FUNCTION_8
0x9b2	        0x488945d0	             mov qword [rbp - 0x30], rax	       450	buffer.c	FUNCTION_8
0x9b6	    0x488b05000000	            mov rax, qword [0x040009fd] 	       451	buffer.c	FUNCTION_8
0x9bd	        0x488945d8	             mov qword [rbp - 0x28], rax	       451	buffer.c	FUNCTION_8
0x9c1	        0x837d9c00	               cmp dword [rbp - 0x64], 0	       452	buffer.c	FUNCTION_8
0x9c5	           0xf95c0	                                setne al	       452	buffer.c	FUNCTION_8
0x9c8	           0xfb6c0	                           movzx eax, al	       452	buffer.c	FUNCTION_8
0x9cb	          0x8945b8	             mov dword [rbp - 0x48], eax	       452	buffer.c	FUNCTION_8
0x9ce	        0x837d9c03	               cmp dword [rbp - 0x64], 3	       453	buffer.c	FUNCTION_8
0x9d2	            0x7406	                            je 0x4000a1a	       453	buffer.c	FUNCTION_8
0x9d4	        0x837d9c04	               cmp dword [rbp - 0x64], 4	       453	buffer.c	FUNCTION_8
0x9d8	            0x7507	                           jne 0x4000a21	       453	buffer.c	FUNCTION_8
0x9da	      0xb801000000	                              mov eax, 1	       453	buffer.c	FUNCTION_8
0x9df	            0xeb05	                           jmp 0x4000a26	       453	buffer.c	FUNCTION_8
0x9e1	      0xb800000000	                              mov eax, 0	       453	buffer.c	FUNCTION_8
0x9e6	          0x8945bc	             mov dword [rbp - 0x44], eax	       453	buffer.c	FUNCTION_8
0x9e9	        0x837d9c04	               cmp dword [rbp - 0x64], 4	       454	buffer.c	FUNCTION_8
0x9ed	           0xf94c0	                                 sete al	       454	buffer.c	FUNCTION_8
0x9f0	           0xfb6c0	                           movzx eax, al	       454	buffer.c	FUNCTION_8
0x9f3	          0x8945c0	             mov dword [rbp - 0x40], eax	       454	buffer.c	FUNCTION_8
0x9f6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       461	buffer.c	FUNCTION_8	IF_1
0x9fa	    0x488b80101400	          mov rax, qword [rax + 0x1410] 	       461	buffer.c	FUNCTION_8	IF_1
0xa01	           0xfb600	                   movzx eax, byte [rax]	       461	buffer.c	FUNCTION_8	IF_1
0xa04	            0x3c64	                            cmp al, 0x64	       461	buffer.c	FUNCTION_8	IF_1
0xa06	            0x7510	                           jne 0x4000a58	       461	buffer.c	FUNCTION_8	IF_1
0xa08	    0xc745bc010000	               mov dword [rbp - 0x44], 1	       463	buffer.c	FUNCTION_8	IF_1
0xa0f	    0xc745b8010000	               mov dword [rbp - 0x48], 1	       464	buffer.c	FUNCTION_8	IF_1
0xa16	            0xeb42	                           jmp 0x4000a9a	       464	buffer.c	FUNCTION_8	IF_1
0xa18	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       466	buffer.c	FUNCTION_8	ELSE_1	IF_2
0xa1c	    0x488b80101400	          mov rax, qword [rax + 0x1410] 	       466	buffer.c	FUNCTION_8	ELSE_1	IF_2
0xa23	           0xfb600	                   movzx eax, byte [rax]	       466	buffer.c	FUNCTION_8	ELSE_1	IF_2
0xa26	            0x3c77	                            cmp al, 0x77	       466	buffer.c	FUNCTION_8	ELSE_1	IF_2
0xa28	            0x7517	                           jne 0x4000a81	       466	buffer.c	FUNCTION_8	ELSE_1	IF_2
0xa2a	    0xc745bc010000	               mov dword [rbp - 0x44], 1	       468	buffer.c	FUNCTION_8	ELSE_1	IF_2
0xa31	    0xc745b8010000	               mov dword [rbp - 0x48], 1	       469	buffer.c	FUNCTION_8	ELSE_1	IF_2
0xa38	    0xc745c0010000	               mov dword [rbp - 0x40], 1	       470	buffer.c	FUNCTION_8	ELSE_1	IF_2
0xa3f	            0xeb19	                           jmp 0x4000a9a	       470	buffer.c	FUNCTION_8	ELSE_1	IF_2
0xa41	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       472	buffer.c	FUNCTION_8	ELSE_2	IF_3
0xa45	    0x488b80101400	          mov rax, qword [rax + 0x1410] 	       472	buffer.c	FUNCTION_8	ELSE_2	IF_3
0xa4c	           0xfb600	                   movzx eax, byte [rax]	       472	buffer.c	FUNCTION_8	ELSE_2	IF_3
0xa4f	            0x3c75	                            cmp al, 0x75	       472	buffer.c	FUNCTION_8	ELSE_2	IF_3
0xa51	            0x7507	                           jne 0x4000a9a	       472	buffer.c	FUNCTION_8	ELSE_2	IF_3
0xa53	    0xc745b8010000	               mov dword [rbp - 0x48], 1	       473	buffer.c	FUNCTION_8	ELSE_2	IF_3
0xa5a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0xa5e	          0x4889c7	                            mov rdi, rax	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0xa61	      0xe800000000	                          call 0x4000aa6	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0xa66	            0x85c0	                           test eax, eax	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0xa68	     0xf8496000000	                            je 0x4000b44	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0xa6e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0xa72	          0x8b4078	            mov eax, dword [rax + 0x78] 	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0xa75	          0x83f801	                              cmp eax, 1	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0xa78	            0x740a	                            je 0x4000ac4	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0xa7a	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0xa7e	     0xf8480000000	                            je 0x4000b44	       476	buffer.c	FUNCTION_8	IF_4	CALL_1
0xa84	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0xa88	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0xa8f	          0x4889c7	                            mov rdi, rax	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0xa92	      0xe800000000	                          call 0x4000ad7	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0xa97	            0x85c0	                           test eax, eax	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0xa99	            0x7454	                            je 0x4000b2f	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0xa9b	        0x837dc000	               cmp dword [rbp - 0x40], 0	       480	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6
0xa9f	            0x7506	                           jne 0x4000ae7	       480	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6
0xaa1	        0x837db800	               cmp dword [rbp - 0x48], 0	       480	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6
0xaa5	            0x7438	                            je 0x4000b1f	       480	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6
0xaa7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       482	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7
0xaab	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       482	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7
0xab1	            0x85c0	                           test eax, eax	       482	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7
0xab3	            0x741c	                            je 0x4000b11	       482	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7
0xab5	    0x488b05000000	            mov rax, qword [0x04000afc] 	       484	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7	CALL_4
0xabc	          0x4889c7	                            mov rdi, rax	       484	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7	CALL_4
0xabf	      0xe800000000	                          call 0x4000b04	       484	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7	CALL_4
0xac4	          0x4889c7	                            mov rdi, rax	       484	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7	CALL_4
0xac7	      0xe800000000	                          call 0x4000b0c	       484	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7	CALL_4
0xacc	      0xe9dc040000	                           jmp 0x4000fed	       485	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7
0xad1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       488	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	CALL_5
0xad5	          0x4889c7	                            mov rdi, rax	       488	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	CALL_5
0xad8	      0xe800000000	                          call 0x4000b1d	       488	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	CALL_5
0xadd	            0xeb25	                           jmp 0x4000b44	       488	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	CALL_5
0xadf	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       493	buffer.c	FUNCTION_8	IF_4	IF_5	ELSE_3
0xae6	    0xc745b8000000	               mov dword [rbp - 0x48], 0	       494	buffer.c	FUNCTION_8	IF_4	IF_5	ELSE_3
0xaed	            0xeb15	                           jmp 0x4000b44	       494	buffer.c	FUNCTION_8	IF_4	IF_5	ELSE_3
0xaef	    0xc745bc010000	               mov dword [rbp - 0x44], 1	       500	buffer.c	FUNCTION_8	IF_4	ELSE_4
0xaf6	    0xc745b8010000	               mov dword [rbp - 0x48], 1	       501	buffer.c	FUNCTION_8	IF_4	ELSE_4
0xafd	    0xc745c0010000	               mov dword [rbp - 0x40], 1	       502	buffer.c	FUNCTION_8	IF_4	ELSE_4
0xb04	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       509	buffer.c	FUNCTION_8	IF_8
0xb08	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       509	buffer.c	FUNCTION_8	IF_8
0xb0e	            0x85c0	                           test eax, eax	       509	buffer.c	FUNCTION_8	IF_8
0xb10	            0x7e28	                           jle 0x4000b7a	       509	buffer.c	FUNCTION_8	IF_8
0xb12	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       509	buffer.c	FUNCTION_8	IF_8
0xb16	            0x7506	                           jne 0x4000b5e	       509	buffer.c	FUNCTION_8	IF_8
0xb18	        0x837dc000	               cmp dword [rbp - 0x40], 0	       509	buffer.c	FUNCTION_8	IF_8
0xb1c	            0x741c	                            je 0x4000b7a	       509	buffer.c	FUNCTION_8	IF_8
0xb1e	    0x488b05000000	            mov rax, qword [0x04000b65] 	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0xb25	          0x4889c7	                            mov rdi, rax	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0xb28	      0xe800000000	                          call 0x4000b6d	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0xb2d	          0x4889c7	                            mov rdi, rax	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0xb30	      0xe800000000	                          call 0x4000b75	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0xb35	      0xe973040000	                           jmp 0x4000fed	       512	buffer.c	FUNCTION_8	IF_8
0xb3a	      0x48837da800	               cmp qword [rbp - 0x58], 0	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0xb3f	            0x7464	                            je 0x4000be5	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0xb41	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0xb45	          0x4889c7	                            mov rdi, rax	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0xb48	      0xe800000000	                          call 0x4000b8d	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0xb4d	            0x85c0	                           test eax, eax	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0xb4f	            0x7454	                            je 0x4000be5	       516	buffer.c	FUNCTION_8	IF_9	CALL_8
0xb51	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       522	buffer.c	FUNCTION_8	IF_9	IF_10
0xb55	          0x8b4078	            mov eax, dword [rax + 0x78] 	       522	buffer.c	FUNCTION_8	IF_9	IF_10
0xb58	          0x83f801	                              cmp eax, 1	       522	buffer.c	FUNCTION_8	IF_9	IF_10
0xb5b	            0x750c	                           jne 0x4000ba9	       522	buffer.c	FUNCTION_8	IF_9	IF_10
0xb5d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       523	buffer.c	FUNCTION_8	IF_9	CALL_9
0xb61	          0x4889c7	                            mov rdi, rax	       523	buffer.c	FUNCTION_8	IF_9	CALL_9
0xb64	      0xe800000000	                          call 0x4000ba9	       523	buffer.c	FUNCTION_8	IF_9	CALL_9
0xb69	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0xb6d	          0x8b5040	            mov edx, dword [rax + 0x40] 	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0xb70	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       525	buffer.c	FUNCTION_8	IF_9
0xb74	        0x488b4038	            mov rax, qword [rax + 0x38] 	       525	buffer.c	FUNCTION_8	IF_9
0xb78	        0x4883f801	                              cmp rax, 1	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0xb7c	            0x740a	                            je 0x4000bc8	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0xb7e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0xb82	        0x488b4038	            mov rax, qword [rax + 0x38] 	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0xb86	            0xeb05	                           jmp 0x4000bcd	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0xb88	      0xb800000000	                              mov eax, 0	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0xb8d	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0xb91	        0x488b7da0	             mov rdi, qword [rbp - 0x60]	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0xb95	    0x41b801000000	                              mov r8d, 1	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0xb9b	            0x89d1	                            mov ecx, edx	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0xb9d	          0x4889c2	                            mov rdx, rax	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0xba0	      0xe85a3d0000	                call sym.buflist_setfpos	       524	buffer.c	FUNCTION_8	IF_9	CALL_10
0xba5	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       529	buffer.c	FUNCTION_8	CALL_11
0xba9	        0x488d45e0	                   lea rax, [rbp - 0x20]	       529	buffer.c	FUNCTION_8	CALL_11
0xbad	          0x4889d6	                            mov rsi, rdx	       529	buffer.c	FUNCTION_8	CALL_11
0xbb0	          0x4889c7	                            mov rdi, rax	       529	buffer.c	FUNCTION_8	CALL_11
0xbb3	      0xe800000000	                          call 0x4000bf8	       529	buffer.c	FUNCTION_8	CALL_11
0xbb8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       532	buffer.c	FUNCTION_8	IF_11
0xbbc	          0x8b4078	            mov eax, dword [rax + 0x78] 	       532	buffer.c	FUNCTION_8	IF_11
0xbbf	          0x83f801	                              cmp eax, 1	       532	buffer.c	FUNCTION_8	IF_11
0xbc2	     0xf8544010000	                           jne 0x4000d4c	       532	buffer.c	FUNCTION_8	IF_11
0xbc8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       534	buffer.c	FUNCTION_8	IF_11
0xbcc	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       534	buffer.c	FUNCTION_8	IF_11
0xbd2	          0x8d5001	                      lea edx, [rax + 1]	       534	buffer.c	FUNCTION_8	IF_11
0xbd5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       534	buffer.c	FUNCTION_8	IF_11
0xbd9	    0x899080000000	             mov dword [rax + 0x80], edx	       534	buffer.c	FUNCTION_8	IF_11
0xbdf	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0xbe3	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0xbea	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0xbee	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0xbf5	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0xbf9	          0x4989c8	                             mov r8, rcx	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0xbfc	      0xb900000000	                              mov ecx, 0	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0xc01	          0x4889c6	                            mov rsi, rax	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0xc04	      0xbf0e000000	                            mov edi, 0xe	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0xc09	      0xe800000000	                          call 0x4000c4e	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0xc0e	            0x85c0	                           test eax, eax	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0xc10	            0x7435	                            je 0x4000c87	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0xc12	        0x488d45e0	                   lea rax, [rbp - 0x20]	       537	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_13
0xc16	          0x4889c7	                            mov rdi, rax	       537	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_13
0xc19	      0xe800000000	                          call 0x4000c5e	       537	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_13
0xc1e	            0x85c0	                           test eax, eax	       537	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_13
0xc20	            0x7525	                           jne 0x4000c87	       537	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_13
0xc22	            0xeb07	                           jmp 0x4000c6b	       537	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_13
0xc24	              0x90	                                     nop	       547	buffer.c	FUNCTION_8	IF_11	IF_13
0xc25	            0xeb04	                           jmp 0x4000c6b	       547	buffer.c	FUNCTION_8	IF_11	IF_13
0xc27	              0x90	                                     nop	       558	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15
0xc28	            0xeb01	                           jmp 0x4000c6b	       558	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15
0xc2a	              0x90	                                     nop	       562	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16
0xc2b	    0x488b05000000	            mov rax, qword [0x04000c72] 	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0xc32	          0x4889c7	                            mov rdi, rax	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0xc35	      0xe800000000	                          call 0x4000c7a	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0xc3a	          0x4889c7	                            mov rdi, rax	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0xc3d	      0xe800000000	                          call 0x4000c82	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0xc42	      0xe966030000	                           jmp 0x4000fed	       542	buffer.c	FUNCTION_8	IF_11	IF_12
0xc47	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       544	buffer.c	FUNCTION_8	IF_11
0xc4b	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       544	buffer.c	FUNCTION_8	IF_11
0xc51	          0x8d50ff	                      lea edx, [rax - 1]	       544	buffer.c	FUNCTION_8	IF_11
0xc54	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       544	buffer.c	FUNCTION_8	IF_11
0xc58	    0x899080000000	             mov dword [rax + 0x80], edx	       544	buffer.c	FUNCTION_8	IF_11
0xc5e	        0x837d9800	               cmp dword [rbp - 0x68], 0	       545	buffer.c	FUNCTION_8	IF_11	IF_13	CALL_16
0xc62	            0x7409	                            je 0x4000cad	       545	buffer.c	FUNCTION_8	IF_11	IF_13	CALL_16
0xc64	      0xe800000000	                          call 0x4000ca9	       545	buffer.c	FUNCTION_8	IF_11	IF_13	CALL_16
0xc69	            0x85c0	                           test eax, eax	       545	buffer.c	FUNCTION_8	IF_11	IF_13	CALL_16
0xc6b	            0x75b7	                           jne 0x4000c64	       545	buffer.c	FUNCTION_8	IF_11	IF_13	CALL_16
0xc6d	        0x837db800	               cmp dword [rbp - 0x48], 0	       551	buffer.c	FUNCTION_8	IF_11	IF_14
0xc71	     0xf8588000000	                           jne 0x4000d3f	       551	buffer.c	FUNCTION_8	IF_11	IF_14
0xc77	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       553	buffer.c	FUNCTION_8	IF_11	IF_14
0xc7b	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       553	buffer.c	FUNCTION_8	IF_11	IF_14
0xc81	          0x8d5001	                      lea edx, [rax + 1]	       553	buffer.c	FUNCTION_8	IF_11	IF_14
0xc84	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       553	buffer.c	FUNCTION_8	IF_11	IF_14
0xc88	    0x899080000000	             mov dword [rax + 0x80], edx	       553	buffer.c	FUNCTION_8	IF_11	IF_14
0xc8e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0xc92	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0xc99	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0xc9d	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0xca4	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0xca8	          0x4989c8	                             mov r8, rcx	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0xcab	      0xb900000000	                              mov ecx, 0	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0xcb0	          0x4889c6	                            mov rsi, rax	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0xcb3	      0xbf05000000	                              mov edi, 5	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0xcb8	      0xe800000000	                          call 0x4000cfd	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0xcbd	            0x85c0	                           test eax, eax	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0xcbf	            0x7414	                            je 0x4000d15	       554	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_17
0xcc1	        0x488d45e0	                   lea rax, [rbp - 0x20]	       556	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_18
0xcc5	          0x4889c7	                            mov rdi, rax	       556	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_18
0xcc8	      0xe800000000	                          call 0x4000d0d	       556	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_18
0xccd	            0x85c0	                           test eax, eax	       556	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_18
0xccf	     0xf8452ffffff	                            je 0x4000c67	       556	buffer.c	FUNCTION_8	IF_11	IF_14	IF_15	CALL_18
0xcd5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       559	buffer.c	FUNCTION_8	IF_11	IF_14
0xcd9	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       559	buffer.c	FUNCTION_8	IF_11	IF_14
0xcdf	          0x8d50ff	                      lea edx, [rax - 1]	       559	buffer.c	FUNCTION_8	IF_11	IF_14
0xce2	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       559	buffer.c	FUNCTION_8	IF_11	IF_14
0xce6	    0x899080000000	             mov dword [rax + 0x80], edx	       559	buffer.c	FUNCTION_8	IF_11	IF_14
0xcec	        0x837d9800	               cmp dword [rbp - 0x68], 0	       560	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16	CALL_19
0xcf0	            0x740d	                            je 0x4000d3f	       560	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16	CALL_19
0xcf2	      0xe800000000	                          call 0x4000d37	       560	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16	CALL_19
0xcf7	            0x85c0	                           test eax, eax	       560	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16	CALL_19
0xcf9	     0xf852bffffff	                           jne 0x4000c6a	       560	buffer.c	FUNCTION_8	IF_11	IF_14	IF_16	CALL_19
0xcff	      0xe800000000	                          call 0x4000d44	       565	buffer.c	FUNCTION_8	IF_11	IF_17	CALL_20
0xd04	            0x85c0	                           test eax, eax	       565	buffer.c	FUNCTION_8	IF_11	IF_17	CALL_20
0xd06	     0xf8594020000	                           jne 0x4000fe0	       565	buffer.c	FUNCTION_8	IF_11	IF_17	CALL_20
0xd0c	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0xd10	            0x743a	                            je 0x4000d8c	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0xd12	    0x488b05000000	            mov rax, qword [0x04000d59] 	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0xd19	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0xd1d	            0x742d	                            je 0x4000d8c	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0xd1f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0xd23	          0x4889c7	                            mov rdi, rax	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0xd26	      0xe800000000	                          call 0x4000d6b	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0xd2b	            0x85c0	                           test eax, eax	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0xd2d	            0x741d	                            je 0x4000d8c	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0xd2f	      0xe800000000	                          call 0x4000d74	       575	buffer.c	FUNCTION_8	IF_18	CALL_22
0xd34	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       576	buffer.c	FUNCTION_8	IF_18	CALL_23
0xd38	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       576	buffer.c	FUNCTION_8	IF_18	CALL_23
0xd3c	          0x4889d6	                            mov rsi, rdx	       576	buffer.c	FUNCTION_8	IF_18	CALL_23
0xd3f	          0x4889c7	                            mov rdi, rax	       576	buffer.c	FUNCTION_8	IF_18	CALL_23
0xd42	      0xe800000000	                          call 0x4000d87	       576	buffer.c	FUNCTION_8	IF_18	CALL_23
0xd47	      0xe800000000	                          call 0x4000d8c	       577	buffer.c	FUNCTION_8	IF_18	CALL_24
0xd4c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       580	buffer.c	FUNCTION_8
0xd50	          0x8b4078	            mov eax, dword [rax + 0x78] 	       580	buffer.c	FUNCTION_8
0xd53	          0x8945c8	             mov dword [rbp - 0x38], eax	       580	buffer.c	FUNCTION_8
0xd56	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       583	buffer.c	FUNCTION_8	IF_19
0xd5a	          0x8b4078	            mov eax, dword [rax + 0x78] 	       583	buffer.c	FUNCTION_8	IF_19
0xd5d	            0x85c0	                           test eax, eax	       583	buffer.c	FUNCTION_8	IF_19
0xd5f	            0x7e11	                           jle 0x4000db2	       583	buffer.c	FUNCTION_8	IF_19
0xd61	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       584	buffer.c	FUNCTION_8	IF_19
0xd65	          0x8b4078	            mov eax, dword [rax + 0x78] 	       584	buffer.c	FUNCTION_8	IF_19
0xd68	          0x8d50ff	                      lea edx, [rax - 1]	       584	buffer.c	FUNCTION_8	IF_19
0xd6b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       584	buffer.c	FUNCTION_8	IF_19
0xd6f	          0x895078	             mov dword [rax + 0x78], edx	       584	buffer.c	FUNCTION_8	IF_19
0xd72	      0xe800000000	                          call 0x4000db7	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0xd77	            0x85c0	                           test eax, eax	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0xd79	            0x741d	                            je 0x4000dd8	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0xd7b	        0x837db800	               cmp dword [rbp - 0x48], 0	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0xd7f	            0x7517	                           jne 0x4000dd8	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0xd81	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0xd85	          0x8b4078	            mov eax, dword [rax + 0x78] 	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0xd88	            0x85c0	                           test eax, eax	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0xd8a	            0x750c	                           jne 0x4000dd8	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0xd8c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       588	buffer.c	FUNCTION_8	CALL_26
0xd90	          0x4889c7	                            mov rdi, rax	       588	buffer.c	FUNCTION_8	CALL_26
0xd93	      0xe800000000	                          call 0x4000dd8	       588	buffer.c	FUNCTION_8	CALL_26
0xd98	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       593	buffer.c	FUNCTION_8	IF_21
0xd9c	          0x8b4078	            mov eax, dword [rax + 0x78] 	       593	buffer.c	FUNCTION_8	IF_21
0xd9f	            0x85c0	                           test eax, eax	       593	buffer.c	FUNCTION_8	IF_21
0xda1	     0xf8ffc010000	                            jg 0x4000fe3	       593	buffer.c	FUNCTION_8	IF_21
0xda7	        0x837db800	               cmp dword [rbp - 0x48], 0	       593	buffer.c	FUNCTION_8	IF_21
0xdab	     0xf84f2010000	                            je 0x4000fe3	       593	buffer.c	FUNCTION_8	IF_21
0xdb1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       597	buffer.c	FUNCTION_8	IF_22
0xdb5	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       597	buffer.c	FUNCTION_8	IF_22
0xdbc	          0x4885c0	                           test rax, rax	       597	buffer.c	FUNCTION_8	IF_22
0xdbf	            0x7507	                           jne 0x4000e08	       597	buffer.c	FUNCTION_8	IF_22
0xdc1	    0xc745bc010000	               mov dword [rbp - 0x44], 1	       598	buffer.c	FUNCTION_8	IF_22
0xdc8	    0x488b05000000	            mov rax, qword [0x04000e0f] 	       602	buffer.c	FUNCTION_8	IF_23
0xdcf	        0x483945a0	            cmp qword [rbp - 0x60], rax 	       602	buffer.c	FUNCTION_8	IF_23
0xdd3	            0x750f	                           jne 0x4000e24	       602	buffer.c	FUNCTION_8	IF_23
0xdd5	    0x8b0500000000	            mov eax, dword [0x04000e1b] 	       602	buffer.c	FUNCTION_8	IF_23
0xddb	            0x85c0	                           test eax, eax	       602	buffer.c	FUNCTION_8	IF_23
0xddd	            0x7405	                            je 0x4000e24	       602	buffer.c	FUNCTION_8	IF_23
0xddf	      0xe800000000	                          call 0x4000e24	       607	buffer.c	FUNCTION_8	CALL_27
0xde4	    0x488b05000000	            mov rax, qword [0x04000e2b] 	       615	buffer.c	FUNCTION_8
0xdeb	        0x483945a0	            cmp qword [rbp - 0x60], rax 	       615	buffer.c	FUNCTION_8
0xdef	           0xf94c0	                                 sete al	       615	buffer.c	FUNCTION_8
0xdf2	           0xfb6c0	                           movzx eax, al	       615	buffer.c	FUNCTION_8
0xdf5	          0x8945cc	             mov dword [rbp - 0x34], eax	       615	buffer.c	FUNCTION_8
0xdf8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       616	buffer.c	FUNCTION_8
0xdfc	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       616	buffer.c	FUNCTION_8
0xdff	          0x895078	             mov dword [rax + 0x78], edx	       616	buffer.c	FUNCTION_8
0xe02	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       618	buffer.c	FUNCTION_8	CALL_28
0xe06	           0xf95c0	                                setne al	       618	buffer.c	FUNCTION_8	CALL_28
0xe09	           0xfb6c0	                           movzx eax, al	       618	buffer.c	FUNCTION_8	CALL_28
0xe0c	        0x837dc000	               cmp dword [rbp - 0x40], 0	       618	buffer.c	FUNCTION_8	CALL_28
0xe10	            0x7407	                            je 0x4000e59	       618	buffer.c	FUNCTION_8	CALL_28
0xe12	      0xba02000000	                              mov edx, 2	       618	buffer.c	FUNCTION_8	CALL_28
0xe17	            0xeb05	                           jmp 0x4000e5e	       618	buffer.c	FUNCTION_8	CALL_28
0xe19	      0xba00000000	                              mov edx, 0	       618	buffer.c	FUNCTION_8	CALL_28
0xe1e	             0x1c2	                            add edx, eax	       618	buffer.c	FUNCTION_8	CALL_28
0xe20	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       618	buffer.c	FUNCTION_8	CALL_28
0xe24	            0x89d6	                            mov esi, edx	       618	buffer.c	FUNCTION_8	CALL_28
0xe26	          0x4889c7	                            mov rdi, rax	       618	buffer.c	FUNCTION_8	CALL_28
0xe29	      0xe800000000	                          call 0x4000e6e	       618	buffer.c	FUNCTION_8	CALL_28
0xe2e	        0x488d45e0	                   lea rax, [rbp - 0x20]	       621	buffer.c	FUNCTION_8	IF_24	CALL_29
0xe32	          0x4889c7	                            mov rdi, rax	       621	buffer.c	FUNCTION_8	IF_24	CALL_29
0xe35	      0xe800000000	                          call 0x4000e7a	       621	buffer.c	FUNCTION_8	IF_24	CALL_29
0xe3a	            0x85c0	                           test eax, eax	       621	buffer.c	FUNCTION_8	IF_24	CALL_29
0xe3c	     0xf8464010000	                            je 0x4000fe6	       621	buffer.c	FUNCTION_8	IF_24	CALL_29
0xe42	      0xe800000000	                          call 0x4000e87	       624	buffer.c	FUNCTION_8	IF_25	CALL_30
0xe47	            0x85c0	                           test eax, eax	       624	buffer.c	FUNCTION_8	IF_25	CALL_30
0xe49	     0xf855a010000	                           jne 0x4000fe9	       624	buffer.c	FUNCTION_8	IF_25	CALL_30
0xe4f	    0x488b05000000	            mov rax, qword [0x04000e96] 	       635	buffer.c	FUNCTION_8	IF_26
0xe56	        0x483945a0	            cmp qword [rbp - 0x60], rax 	       635	buffer.c	FUNCTION_8	IF_26
0xe5a	            0x750a	                           jne 0x4000ea6	       635	buffer.c	FUNCTION_8	IF_26
0xe5c	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       635	buffer.c	FUNCTION_8	IF_26
0xe60	     0xf8446010000	                            je 0x4000fec	       635	buffer.c	FUNCTION_8	IF_26
0xe66	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0xe6a	          0x4889c7	                            mov rdi, rax	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0xe6d	      0xe800000000	                          call 0x4000eb2	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0xe72	            0x85c0	                           test eax, eax	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0xe74	            0x741a	                            je 0x4000ed0	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0xe76	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0xe7a	        0x488b4008	                mov rax, qword [rax + 8]	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0xe7e	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0xe82	            0x750c	                           jne 0x4000ed0	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0xe84	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       639	buffer.c	FUNCTION_8	IF_27
0xe88	    0x48c740080000	                  mov qword [rax + 8], 0	       639	buffer.c	FUNCTION_8	IF_27
0xe90	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       643	buffer.c	FUNCTION_8	IF_28
0xe94	          0x8b4078	            mov eax, dword [rax + 0x78] 	       643	buffer.c	FUNCTION_8	IF_28
0xe97	            0x85c0	                           test eax, eax	       643	buffer.c	FUNCTION_8	IF_28
0xe99	            0x7e11	                           jle 0x4000eec	       643	buffer.c	FUNCTION_8	IF_28
0xe9b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       644	buffer.c	FUNCTION_8	IF_28
0xe9f	          0x8b4078	            mov eax, dword [rax + 0x78] 	       644	buffer.c	FUNCTION_8	IF_28
0xea2	          0x8d50ff	                      lea edx, [rax - 1]	       644	buffer.c	FUNCTION_8	IF_28
0xea5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       644	buffer.c	FUNCTION_8	IF_28
0xea9	          0x895078	             mov dword [rax + 0x78], edx	       644	buffer.c	FUNCTION_8	IF_28
0xeac	        0x837dc000	               cmp dword [rbp - 0x40], 0	       649	buffer.c	FUNCTION_8	IF_29
0xeb0	     0xf8498000000	                            je 0x4000f8e	       649	buffer.c	FUNCTION_8	IF_29
0xeb6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       656	buffer.c	FUNCTION_8	IF_29	CALL_33
0xeba	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       656	buffer.c	FUNCTION_8	IF_29	CALL_33
0xec1	          0x4889c7	                            mov rdi, rax	       656	buffer.c	FUNCTION_8	IF_29	CALL_33
0xec4	      0xe800000000	                          call 0x4000f09	       656	buffer.c	FUNCTION_8	IF_29	CALL_33
0xec9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       657	buffer.c	FUNCTION_8	IF_29	CALL_34
0xecd	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       657	buffer.c	FUNCTION_8	IF_29	CALL_34
0xed4	          0x4889c7	                            mov rdi, rax	       657	buffer.c	FUNCTION_8	IF_29	CALL_34
0xed7	      0xe800000000	                          call 0x4000f1c	       657	buffer.c	FUNCTION_8	IF_29	CALL_34
0xedc	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       658	buffer.c	FUNCTION_8	IF_29	IF_31
0xee0	        0x488b4070	            mov rax, qword [rax + 0x70] 	       658	buffer.c	FUNCTION_8	IF_29	IF_31
0xee4	          0x4885c0	                           test rax, rax	       658	buffer.c	FUNCTION_8	IF_29	IF_31
0xee7	            0x7511	                           jne 0x4000f3a	       658	buffer.c	FUNCTION_8	IF_29	IF_31
0xee9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       659	buffer.c	FUNCTION_8	IF_29	IF_31
0xeed	        0x488b4068	            mov rax, qword [rax + 0x68] 	       659	buffer.c	FUNCTION_8	IF_29	IF_31
0xef1	    0x488905000000	            mov qword [0x04000f38], rax 	       659	buffer.c	FUNCTION_8	IF_29	IF_31
0xef8	            0xeb14	                           jmp 0x4000f4e	       659	buffer.c	FUNCTION_8	IF_29	IF_31
0xefa	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       661	buffer.c	FUNCTION_8	IF_29	ELSE_5
0xefe	        0x488b4070	            mov rax, qword [rax + 0x70] 	       661	buffer.c	FUNCTION_8	IF_29	ELSE_5
0xf02	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       661	buffer.c	FUNCTION_8	IF_29	ELSE_5
0xf06	        0x488b5268	            mov rdx, qword [rdx + 0x68] 	       661	buffer.c	FUNCTION_8	IF_29	ELSE_5
0xf0a	        0x48895068	             mov qword [rax + 0x68], rdx	       661	buffer.c	FUNCTION_8	IF_29	ELSE_5
0xf0e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       662	buffer.c	FUNCTION_8	IF_29	IF_32
0xf12	        0x488b4068	            mov rax, qword [rax + 0x68] 	       662	buffer.c	FUNCTION_8	IF_29	IF_32
0xf16	          0x4885c0	                           test rax, rax	       662	buffer.c	FUNCTION_8	IF_29	IF_32
0xf19	            0x7511	                           jne 0x4000f6c	       662	buffer.c	FUNCTION_8	IF_29	IF_32
0xf1b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       663	buffer.c	FUNCTION_8	IF_29	IF_32
0xf1f	        0x488b4070	            mov rax, qword [rax + 0x70] 	       663	buffer.c	FUNCTION_8	IF_29	IF_32
0xf23	    0x488905000000	            mov qword [0x04000f6a], rax 	       663	buffer.c	FUNCTION_8	IF_29	IF_32
0xf2a	            0xeb14	                           jmp 0x4000f80	       663	buffer.c	FUNCTION_8	IF_29	IF_32
0xf2c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       665	buffer.c	FUNCTION_8	IF_29	ELSE_6
0xf30	        0x488b4068	            mov rax, qword [rax + 0x68] 	       665	buffer.c	FUNCTION_8	IF_29	ELSE_6
0xf34	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       665	buffer.c	FUNCTION_8	IF_29	ELSE_6
0xf38	        0x488b5270	            mov rdx, qword [rdx + 0x70] 	       665	buffer.c	FUNCTION_8	IF_29	ELSE_6
0xf3c	        0x48895070	             mov qword [rax + 0x70], rdx	       665	buffer.c	FUNCTION_8	IF_29	ELSE_6
0xf40	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       666	buffer.c	FUNCTION_8	IF_29	CALL_35
0xf44	          0x4889c7	                            mov rdi, rax	       666	buffer.c	FUNCTION_8	IF_29	CALL_35
0xf47	      0xe858040000	                    call sym.free_buffer	       666	buffer.c	FUNCTION_8	IF_29	CALL_35
0xf4c	            0xeb5f	                           jmp 0x4000fed	       666	buffer.c	FUNCTION_8	IF_29	CALL_35
0xf4e	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       670	buffer.c	FUNCTION_8	ELSE_7	IF_33
0xf52	            0x742a	                            je 0x4000fbe	       670	buffer.c	FUNCTION_8	ELSE_7	IF_33
0xf54	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       674	buffer.c	FUNCTION_8	ELSE_7	IF_33	CALL_36
0xf58	      0xbe01000000	                              mov esi, 1	       674	buffer.c	FUNCTION_8	ELSE_7	IF_33	CALL_36
0xf5d	          0x4889c7	                            mov rdi, rax	       674	buffer.c	FUNCTION_8	ELSE_7	IF_33	CALL_36
0xf60	      0xe87f050000	              call sym.free_buffer_stuff	       674	buffer.c	FUNCTION_8	ELSE_7	IF_33	CALL_36
0xf65	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       677	buffer.c	FUNCTION_8	ELSE_7	IF_33
0xf69	    0xc7407c060000	               mov dword [rax + 0x7c], 6	       677	buffer.c	FUNCTION_8	ELSE_7	IF_33
0xf70	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       680	buffer.c	FUNCTION_8	ELSE_7	IF_33
0xf74	    0xc780a8120000	            mov dword [rax + 0x12a8], 0 	       680	buffer.c	FUNCTION_8	ELSE_7	IF_33
0xf7e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       682	buffer.c	FUNCTION_8	ELSE_7	CALL_37
0xf82	          0x4889c7	                            mov rdi, rax	       682	buffer.c	FUNCTION_8	ELSE_7	CALL_37
0xf85	      0xe800000000	                          call 0x4000fca	       682	buffer.c	FUNCTION_8	ELSE_7	CALL_37
0xf8a	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       683	buffer.c	FUNCTION_8	ELSE_7	IF_34
0xf8e	            0x741d	                            je 0x4000fed	       683	buffer.c	FUNCTION_8	ELSE_7	IF_34
0xf90	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       684	buffer.c	FUNCTION_8	ELSE_7	IF_34
0xf94	    0xc78024140000	            mov dword [rax + 0x1424], 0 	       684	buffer.c	FUNCTION_8	ELSE_7	IF_34
0xf9e	            0xeb0d	                           jmp 0x4000fed	       684	buffer.c	FUNCTION_8	ELSE_7	IF_34
0xfa0	              0x90	                                     nop	       566	buffer.c	FUNCTION_8	IF_11	IF_17
0xfa1	            0xeb0a	                           jmp 0x4000fed	       566	buffer.c	FUNCTION_8	IF_11	IF_17
0xfa3	              0x90	                                     nop	       594	buffer.c	FUNCTION_8	IF_21
0xfa4	            0xeb07	                           jmp 0x4000fed	       594	buffer.c	FUNCTION_8	IF_21
0xfa6	              0x90	                                     nop	       622	buffer.c	FUNCTION_8	IF_24
0xfa7	            0xeb04	                           jmp 0x4000fed	       622	buffer.c	FUNCTION_8	IF_24
0xfa9	              0x90	                                     nop	       625	buffer.c	FUNCTION_8	IF_25
0xfaa	            0xeb01	                           jmp 0x4000fed	       625	buffer.c	FUNCTION_8	IF_25
0xfac	              0x90	                                     nop	       636	buffer.c	FUNCTION_8	IF_26
0xfad	        0x488b45f8	                mov rax, qword [rbp - 8]	       686	buffer.c	FUNCTION_8
0xfb1	    0x644833042528	                xor rax, qword fs:[0x28]	       686	buffer.c	FUNCTION_8
0xfba	            0x7405	                            je 0x4001001	       686	buffer.c	FUNCTION_8
0xfbc	      0xe800000000	                          call 0x4001001	       686	buffer.c	FUNCTION_8
0xfc1	              0xc9	                                   leave	       686	buffer.c	FUNCTION_8
0xfc2	              0xc3	                                     ret	       686	buffer.c	FUNCTION_8
buf_delete_signs	FOR,0:WHILE,1:ELSE,0:functions,0:IF,1:CALL,3:SWITCH,0:DO,0	35
0xc025	              0x55	                                push rbp	      6051	buffer.c	FUNCTION_97
0xc026	          0x4889e5	                            mov rbp, rsp	      6051	buffer.c	FUNCTION_97
0xc029	        0x4883ec20	                           sub rsp, 0x20	      6051	buffer.c	FUNCTION_97
0xc02d	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6051	buffer.c	FUNCTION_97
0xc031	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6056	buffer.c	FUNCTION_97	IF_1
0xc035	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      6056	buffer.c	FUNCTION_97	IF_1
0xc03c	          0x4885c0	                           test rax, rax	      6056	buffer.c	FUNCTION_97	IF_1
0xc03f	            0x7459	                            je 0x400c0da	      6056	buffer.c	FUNCTION_97	IF_1
0xc041	    0x488b05000000	            mov rax, qword [0x0400c088] 	      6056	buffer.c	FUNCTION_97	IF_1
0xc048	          0x4885c0	                           test rax, rax	      6056	buffer.c	FUNCTION_97	IF_1
0xc04b	            0x744d	                            je 0x400c0da	      6056	buffer.c	FUNCTION_97	IF_1
0xc04d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6058	buffer.c	FUNCTION_97	IF_1	CALL_1
0xc051	      0xbe28000000	                           mov esi, 0x28	      6058	buffer.c	FUNCTION_97	IF_1	CALL_1
0xc056	          0x4889c7	                            mov rdi, rax	      6058	buffer.c	FUNCTION_97	IF_1	CALL_1
0xc059	      0xe800000000	                          call 0x400c09e	      6058	buffer.c	FUNCTION_97	IF_1	CALL_1
0xc05e	      0xe800000000	                          call 0x400c0a3	      6059	buffer.c	FUNCTION_97	IF_1	CALL_2
0xc063	            0xeb35	                           jmp 0x400c0da	      6062	buffer.c	FUNCTION_97	WHILE_1
0xc065	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6064	buffer.c	FUNCTION_97	WHILE_1
0xc069	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      6064	buffer.c	FUNCTION_97	WHILE_1
0xc070	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6064	buffer.c	FUNCTION_97	WHILE_1
0xc074	        0x488945f8	                mov qword [rbp - 8], rax	      6064	buffer.c	FUNCTION_97	WHILE_1
0xc078	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6065	buffer.c	FUNCTION_97	WHILE_1	CALL_3
0xc07c	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      6065	buffer.c	FUNCTION_97	WHILE_1	CALL_3
0xc083	          0x4889c7	                            mov rdi, rax	      6065	buffer.c	FUNCTION_97	WHILE_1	CALL_3
0xc086	      0xe800000000	                          call 0x400c0cb	      6065	buffer.c	FUNCTION_97	WHILE_1	CALL_3
0xc08b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6066	buffer.c	FUNCTION_97	WHILE_1
0xc08f	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6066	buffer.c	FUNCTION_97	WHILE_1
0xc093	    0x488990201c00	          mov qword [rax + 0x1c20], rdx 	      6066	buffer.c	FUNCTION_97	WHILE_1
0xc09a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6062	buffer.c	FUNCTION_97	WHILE_1
0xc09e	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      6062	buffer.c	FUNCTION_97	WHILE_1
0xc0a5	          0x4885c0	                           test rax, rax	      6062	buffer.c	FUNCTION_97	WHILE_1
0xc0a8	            0x75bb	                           jne 0x400c0a5	      6062	buffer.c	FUNCTION_97	WHILE_1
0xc0aa	              0x90	                                     nop	      6068	buffer.c	FUNCTION_97
0xc0ab	              0xc9	                                   leave	      6068	buffer.c	FUNCTION_97
0xc0ac	              0xc3	                                     ret	      6068	buffer.c	FUNCTION_97
buflist_altfpos	FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,1:SWITCH,0:DO,0	16
0x5965	              0x55	                                push rbp	      3296	buffer.c	FUNCTION_54
0x5966	          0x4889e5	                            mov rbp, rsp	      3296	buffer.c	FUNCTION_54
0x5969	        0x4883ec10	                           sub rsp, 0x10	      3296	buffer.c	FUNCTION_54
0x596d	        0x48897df8	                mov qword [rbp - 8], rdi	      3296	buffer.c	FUNCTION_54
0x5971	        0x488b45f8	                mov rax, qword [rbp - 8]	      3297	buffer.c	FUNCTION_54	CALL_1
0x5975	          0x8b4840	            mov ecx, dword [rax + 0x40] 	      3297	buffer.c	FUNCTION_54	CALL_1
0x5978	        0x488b45f8	                mov rax, qword [rbp - 8]	      3297	buffer.c	FUNCTION_54	CALL_1
0x597c	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3297	buffer.c	FUNCTION_54	CALL_1
0x5980	    0x488b05000000	            mov rax, qword [0x040059c7] 	      3297	buffer.c	FUNCTION_54	CALL_1
0x5987	        0x488b75f8	                mov rsi, qword [rbp - 8]	      3297	buffer.c	FUNCTION_54	CALL_1
0x598b	    0x41b801000000	                              mov r8d, 1	      3297	buffer.c	FUNCTION_54	CALL_1
0x5991	          0x4889c7	                            mov rdi, rax	      3297	buffer.c	FUNCTION_54	CALL_1
0x5994	      0xe866efffff	                call sym.buflist_setfpos	      3297	buffer.c	FUNCTION_54	CALL_1
0x5999	              0x90	                                     nop	      3298	buffer.c	FUNCTION_54
0x599a	              0xc9	                                   leave	      3298	buffer.c	FUNCTION_54
0x599b	              0xc3	                                     ret	      3298	buffer.c	FUNCTION_54
buf_hashtab_add	FOR,0:WHILE,0:ELSE,0:functions,0:IF,1:CALL,4:SWITCH,0:DO,0	27
0x89d	              0x55	                                push rbp	       405	buffer.c	FUNCTION_6
0x89e	          0x4889e5	                            mov rbp, rsp	       405	buffer.c	FUNCTION_6
0x8a1	        0x4883ec10	                           sub rsp, 0x10	       405	buffer.c	FUNCTION_6
0x8a5	        0x48897df8	                mov qword [rbp - 8], rdi	       405	buffer.c	FUNCTION_6
0x8a9	        0x488b45f8	                mov rax, qword [rbp - 8]	       406	buffer.c	FUNCTION_6	CALL_1
0x8ad	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	       406	buffer.c	FUNCTION_6	CALL_1
0x8b3	        0x488b55f8	                mov rdx, qword [rbp - 8]	       406	buffer.c	FUNCTION_6	CALL_1
0x8b7	    0x488d8abc0000	                   lea rcx, [rdx + 0xbc]	       406	buffer.c	FUNCTION_6	CALL_1
0x8be	            0x89c2	                            mov edx, eax	       406	buffer.c	FUNCTION_6	CALL_1
0x8c0	      0xbe00000000	                              mov esi, 0	       406	buffer.c	FUNCTION_6	CALL_1
0x8c5	          0x4889cf	                            mov rdi, rcx	       406	buffer.c	FUNCTION_6	CALL_1
0x8c8	      0xb800000000	                              mov eax, 0	       406	buffer.c	FUNCTION_6	CALL_1
0x8cd	      0xe800000000	                          call 0x4000912	       406	buffer.c	FUNCTION_6	CALL_1
0x8d2	        0x488b45f8	                mov rax, qword [rbp - 8]	       407	buffer.c	FUNCTION_6	IF_1	CALL_2
0x8d6	    0x4805bc000000	                           add rax, 0xbc	       407	buffer.c	FUNCTION_6	IF_1	CALL_2
0x8dc	          0x4889c6	                            mov rsi, rax	       407	buffer.c	FUNCTION_6	IF_1	CALL_2
0x8df	      0xbf00000000	                              mov edi, 0	       407	buffer.c	FUNCTION_6	IF_1	CALL_2
0x8e4	      0xe800000000	                          call 0x4000929	       407	buffer.c	FUNCTION_6	IF_1	CALL_2
0x8e9	            0x85c0	                           test eax, eax	       407	buffer.c	FUNCTION_6	IF_1	CALL_2
0x8eb	            0x7512	                           jne 0x400093f	       407	buffer.c	FUNCTION_6	IF_1	CALL_2
0x8ed	      0xbf00000000	                              mov edi, 0	       408	buffer.c	FUNCTION_6	CALL_4
0x8f2	      0xe800000000	                          call 0x4000937	       408	buffer.c	FUNCTION_6	CALL_4
0x8f7	          0x4889c7	                            mov rdi, rax	       408	buffer.c	FUNCTION_6	CALL_4
0x8fa	      0xe800000000	                          call 0x400093f	       408	buffer.c	FUNCTION_6	CALL_4
0x8ff	              0x90	                                     nop	       409	buffer.c	FUNCTION_6
0x900	              0xc9	                                   leave	       409	buffer.c	FUNCTION_6
0x901	              0xc3	                                     ret	       409	buffer.c	FUNCTION_6
buf_findsign_id	FOR,1:WHILE,0:ELSE,0:functions,0:IF,1:CALL,0:SWITCH,0:DO,0	23
0xbf17	              0x55	                                push rbp	      5998	buffer.c	FUNCTION_94
0xbf18	          0x4889e5	                            mov rbp, rsp	      5998	buffer.c	FUNCTION_94
0xbf1b	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5998	buffer.c	FUNCTION_94
0xbf1f	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5998	buffer.c	FUNCTION_94
0xbf23	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6001	buffer.c	FUNCTION_94	FOR_1
0xbf27	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      6001	buffer.c	FUNCTION_94	FOR_1
0xbf2e	        0x488945f8	                mov qword [rbp - 8], rax	      6001	buffer.c	FUNCTION_94	FOR_1
0xbf32	            0xeb22	                           jmp 0x400bf96	      6001	buffer.c	FUNCTION_94	FOR_1
0xbf34	        0x488b45f8	                mov rax, qword [rbp - 8]	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0xbf38	        0x488b4008	                mov rax, qword [rax + 8]	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0xbf3c	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0xbf40	            0x7508	                           jne 0x400bf8a	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0xbf42	        0x488b45f8	                mov rax, qword [rbp - 8]	      6003	buffer.c	FUNCTION_94	FOR_1	IF_1
0xbf46	            0x8b00	                    mov eax, dword [rax]	      6003	buffer.c	FUNCTION_94	FOR_1	IF_1
0xbf48	            0xeb18	                           jmp 0x400bfa2	      6003	buffer.c	FUNCTION_94	FOR_1	IF_1
0xbf4a	        0x488b45f8	                mov rax, qword [rbp - 8]	      6001	buffer.c	FUNCTION_94	FOR_1
0xbf4e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6001	buffer.c	FUNCTION_94	FOR_1
0xbf52	        0x488945f8	                mov qword [rbp - 8], rax	      6001	buffer.c	FUNCTION_94	FOR_1
0xbf56	      0x48837df800	                  cmp qword [rbp - 8], 0	      6001	buffer.c	FUNCTION_94	FOR_1
0xbf5b	            0x75d7	                           jne 0x400bf74	      6001	buffer.c	FUNCTION_94	FOR_1
0xbf5d	      0xb800000000	                              mov eax, 0	      6005	buffer.c	FUNCTION_94
0xbf62	              0x5d	                                 pop rbp	      6006	buffer.c	FUNCTION_94
0xbf63	              0xc3	                                     ret	      6006	buffer.c	FUNCTION_94
buf_delsign	FOR,1:WHILE,0:ELSE,1:functions,0:IF,3:CALL,3:SWITCH,0:DO,0	55
0xbdfc	              0x55	                                push rbp	      5937	buffer.c	FUNCTION_92
0xbdfd	          0x4889e5	                            mov rbp, rsp	      5937	buffer.c	FUNCTION_92
0xbe00	        0x4883ec30	                           sub rsp, 0x30	      5937	buffer.c	FUNCTION_92
0xbe04	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5937	buffer.c	FUNCTION_92
0xbe08	          0x8975d4	             mov dword [rbp - 0x2c], esi	      5937	buffer.c	FUNCTION_92
0xbe0b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5943	buffer.c	FUNCTION_92
0xbe0f	    0x4805201c0000	                         add rax, 0x1c20	      5943	buffer.c	FUNCTION_92
0xbe15	        0x488945e0	             mov qword [rbp - 0x20], rax	      5943	buffer.c	FUNCTION_92
0xbe19	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      5944	buffer.c	FUNCTION_92
0xbe21	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5945	buffer.c	FUNCTION_92	FOR_1
0xbe25	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      5945	buffer.c	FUNCTION_92	FOR_1
0xbe2c	        0x488945e8	             mov qword [rbp - 0x18], rax	      5945	buffer.c	FUNCTION_92	FOR_1
0xbe30	            0xeb67	                           jmp 0x400bed9	      5945	buffer.c	FUNCTION_92	FOR_1
0xbe32	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5947	buffer.c	FUNCTION_92	FOR_1
0xbe36	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5947	buffer.c	FUNCTION_92	FOR_1
0xbe3a	        0x488945f8	                mov qword [rbp - 8], rax	      5947	buffer.c	FUNCTION_92	FOR_1
0xbe3e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0xbe42	            0x8b00	                    mov eax, dword [rax]	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0xbe44	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0xbe47	            0x753c	                           jne 0x400bec5	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0xbe49	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5950	buffer.c	FUNCTION_92	FOR_1	IF_1
0xbe4d	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5950	buffer.c	FUNCTION_92	FOR_1	IF_1
0xbe51	          0x488910	                    mov qword [rax], rdx	      5950	buffer.c	FUNCTION_92	FOR_1	IF_1
0xbe54	      0x48837df800	                  cmp qword [rbp - 8], 0	      5952	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0xbe59	            0x7410	                            je 0x400beab	      5952	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0xbe5b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5953	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0xbe5f	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      5953	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0xbe63	        0x488b45f8	                mov rax, qword [rbp - 8]	      5953	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0xbe67	        0x48895020	             mov qword [rax + 0x20], rdx	      5953	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0xbe6b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5955	buffer.c	FUNCTION_92	FOR_1	IF_1
0xbe6f	        0x488b4008	                mov rax, qword [rax + 8]	      5955	buffer.c	FUNCTION_92	FOR_1	IF_1
0xbe73	        0x488945f0	             mov qword [rbp - 0x10], rax	      5955	buffer.c	FUNCTION_92	FOR_1	IF_1
0xbe77	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5956	buffer.c	FUNCTION_92	FOR_1	IF_1	CALL_1
0xbe7b	          0x4889c7	                            mov rdi, rax	      5956	buffer.c	FUNCTION_92	FOR_1	IF_1	CALL_1
0xbe7e	      0xe800000000	                          call 0x400bec3	      5956	buffer.c	FUNCTION_92	FOR_1	IF_1	CALL_1
0xbe83	            0xeb1b	                           jmp 0x400bee0	      5957	buffer.c	FUNCTION_92	FOR_1	IF_1
0xbe85	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5960	buffer.c	FUNCTION_92	FOR_1	ELSE_1
0xbe89	        0x4883c018	                           add rax, 0x18	      5960	buffer.c	FUNCTION_92	FOR_1	ELSE_1
0xbe8d	        0x488945e0	             mov qword [rbp - 0x20], rax	      5960	buffer.c	FUNCTION_92	FOR_1	ELSE_1
0xbe91	        0x488b45f8	                mov rax, qword [rbp - 8]	      5945	buffer.c	FUNCTION_92	FOR_1
0xbe95	        0x488945e8	             mov qword [rbp - 0x18], rax	      5945	buffer.c	FUNCTION_92	FOR_1
0xbe99	      0x48837de800	               cmp qword [rbp - 0x18], 0	      5945	buffer.c	FUNCTION_92	FOR_1
0xbe9e	            0x7592	                           jne 0x400be72	      5945	buffer.c	FUNCTION_92	FOR_1
0xbea0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5965	buffer.c	FUNCTION_92	ELSE_1	IF_3
0xbea4	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      5965	buffer.c	FUNCTION_92	ELSE_1	IF_3
0xbeab	          0x4885c0	                           test rax, rax	      5965	buffer.c	FUNCTION_92	ELSE_1	IF_3
0xbeae	            0x7516	                           jne 0x400bf06	      5965	buffer.c	FUNCTION_92	ELSE_1	IF_3
0xbeb0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5967	buffer.c	FUNCTION_92	ELSE_1	IF_3	CALL_2
0xbeb4	      0xbe28000000	                           mov esi, 0x28	      5967	buffer.c	FUNCTION_92	ELSE_1	IF_3	CALL_2
0xbeb9	          0x4889c7	                            mov rdi, rax	      5967	buffer.c	FUNCTION_92	ELSE_1	IF_3	CALL_2
0xbebc	      0xe800000000	                          call 0x400bf01	      5967	buffer.c	FUNCTION_92	ELSE_1	IF_3	CALL_2
0xbec1	      0xe800000000	                          call 0x400bf06	      5968	buffer.c	FUNCTION_92	ELSE_1	IF_3	CALL_3
0xbec6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5971	buffer.c	FUNCTION_92
0xbeca	              0xc9	                                   leave	      5972	buffer.c	FUNCTION_92
0xbecb	              0xc3	                                     ret	      5972	buffer.c	FUNCTION_92
buflist_findpat	FOR,3:WHILE,0:ELSE,3:functions,0:IF,16:CALL,15:SWITCH,0:DO,0	218
0x3ef8	              0x55	                                push rbp	      2435	buffer.c	FUNCTION_33
0x3ef9	          0x4889e5	                            mov rbp, rsp	      2435	buffer.c	FUNCTION_33
0x3efc	    0x4881ec200100	                          sub rsp, 0x120	      2435	buffer.c	FUNCTION_33
0x3f03	    0x4889bdf8feff	            mov qword [rbp - 0x108], rdi	      2435	buffer.c	FUNCTION_33
0x3f0a	    0x4889b5f0feff	            mov qword [rbp - 0x110], rsi	      2435	buffer.c	FUNCTION_33
0x3f11	    0x8995ecfeffff	            mov dword [rbp - 0x114], edx	      2435	buffer.c	FUNCTION_33
0x3f17	    0x898de8feffff	            mov dword [rbp - 0x118], ecx	      2435	buffer.c	FUNCTION_33
0x3f1d	    0x448985e4feff	            mov dword [rbp - 0x11c], r8d	      2435	buffer.c	FUNCTION_33
0x3f24	    0x64488b042528	                mov rax, qword fs:[0x28]	      2435	buffer.c	FUNCTION_33
0x3f2d	        0x488945f8	                mov qword [rbp - 8], rax	      2435	buffer.c	FUNCTION_33
0x3f31	            0x31c0	                            xor eax, eax	      2435	buffer.c	FUNCTION_33
0x3f33	    0xc78508ffffff	     mov dword [rbp - 0xf8], 0xffffffff 	      2437	buffer.c	FUNCTION_33
0x3f3d	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2445	buffer.c	FUNCTION_33	IF_1
0x3f44	        0x4883c001	                              add rax, 1	      2445	buffer.c	FUNCTION_33	IF_1
0x3f48	    0x483b85f0feff	            cmp rax, qword [rbp - 0x110]	      2445	buffer.c	FUNCTION_33	IF_1
0x3f4f	     0xf858b000000	                           jne 0x4004020	      2445	buffer.c	FUNCTION_33	IF_1
0x3f55	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2445	buffer.c	FUNCTION_33	IF_1
0x3f5c	           0xfb600	                   movzx eax, byte [rax]	      2445	buffer.c	FUNCTION_33	IF_1
0x3f5f	            0x3c25	                            cmp al, 0x25	      2445	buffer.c	FUNCTION_33	IF_1
0x3f61	            0x740e	                            je 0x4003fb1	      2445	buffer.c	FUNCTION_33	IF_1
0x3f63	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2445	buffer.c	FUNCTION_33	IF_1
0x3f6a	           0xfb600	                   movzx eax, byte [rax]	      2445	buffer.c	FUNCTION_33	IF_1
0x3f6d	            0x3c23	                            cmp al, 0x23	      2445	buffer.c	FUNCTION_33	IF_1
0x3f6f	            0x756f	                           jne 0x4004020	      2445	buffer.c	FUNCTION_33	IF_1
0x3f71	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2447	buffer.c	FUNCTION_33	IF_1	IF_2
0x3f78	           0xfb600	                   movzx eax, byte [rax]	      2447	buffer.c	FUNCTION_33	IF_1	IF_2
0x3f7b	            0x3c25	                            cmp al, 0x25	      2447	buffer.c	FUNCTION_33	IF_1	IF_2
0x3f7d	            0x7515	                           jne 0x4003fd4	      2447	buffer.c	FUNCTION_33	IF_1	IF_2
0x3f7f	    0x488b05000000	            mov rax, qword [0x04003fc6] 	      2448	buffer.c	FUNCTION_33	IF_1	IF_2
0x3f86	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      2448	buffer.c	FUNCTION_33	IF_1	IF_2
0x3f8c	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      2448	buffer.c	FUNCTION_33	IF_1	IF_2
0x3f92	            0xeb13	                           jmp 0x4003fe7	      2448	buffer.c	FUNCTION_33	IF_1	IF_2
0x3f94	    0x488b05000000	            mov rax, qword [0x04003fdb] 	      2450	buffer.c	FUNCTION_33	IF_1	ELSE_1
0x3f9b	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	      2450	buffer.c	FUNCTION_33	IF_1	ELSE_1
0x3fa1	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      2450	buffer.c	FUNCTION_33	IF_1	ELSE_1
0x3fa7	    0x83bde8feffff	              cmp dword [rbp - 0x118], 0	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x3fae	     0xf84f5020000	                            je 0x40042e9	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x3fb4	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x3fba	            0x89c7	                            mov edi, eax	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x3fbc	      0xe800000000	                          call 0x4004001	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x3fc1	          0x4889c7	                            mov rdi, rax	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x3fc4	      0xe800000000	                          call 0x4004009	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x3fc9	            0x85c0	                           test eax, eax	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x3fcb	     0xf85d8020000	                           jne 0x40042e9	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x3fd1	    0xc78508ffffff	     mov dword [rbp - 0xf8], 0xffffffff 	      2453	buffer.c	FUNCTION_33	IF_1	IF_3
0x3fdb	      0xe9c9020000	                           jmp 0x40042e9	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x3fe0	    0x488bb5f0feff	            mov rsi, qword [rbp - 0x110]	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x3fe7	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x3fee	      0xb900000000	                              mov ecx, 0	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x3ff3	      0xba00000000	                              mov edx, 0	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x3ff8	          0x4889c7	                            mov rdi, rax	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x3ffb	      0xe800000000	                          call 0x4004040	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x4000	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x4007	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 0	      2469	buffer.c	FUNCTION_33	ELSE_2	IF_4
0x400f	            0x750a	                           jne 0x400405b	      2469	buffer.c	FUNCTION_33	ELSE_2	IF_4
0x4011	      0xb8ffffffff	                     mov eax, 0xffffffff	      2470	buffer.c	FUNCTION_33	ELSE_2	IF_4
0x4016	      0xe9e7020000	                           jmp 0x4004342	      2470	buffer.c	FUNCTION_33	ELSE_2	IF_4
0x401b	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x4022	          0x4889c7	                            mov rdi, rax	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x4025	      0xe800000000	                          call 0x400406a	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x402a	        0x488d50ff	                      lea rdx, [rax - 1]	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x402e	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x4035	          0x4801d0	                            add rax, rdx	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x4038	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x403f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2472	buffer.c	FUNCTION_33	ELSE_2
0x4046	    0x483b8530ffff	             cmp rax, qword [rbp - 0xd0]	      2472	buffer.c	FUNCTION_33	ELSE_2
0x404d	            0x7615	                           jbe 0x40040a4	      2472	buffer.c	FUNCTION_33	ELSE_2
0x404f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2472	buffer.c	FUNCTION_33	ELSE_2
0x4056	           0xfb600	                   movzx eax, byte [rax]	      2472	buffer.c	FUNCTION_33	ELSE_2
0x4059	            0x3c24	                            cmp al, 0x24	      2472	buffer.c	FUNCTION_33	ELSE_2
0x405b	            0x7507	                           jne 0x40040a4	      2472	buffer.c	FUNCTION_33	ELSE_2
0x405d	      0xb801000000	                              mov eax, 1	      2472	buffer.c	FUNCTION_33	ELSE_2
0x4062	            0xeb05	                           jmp 0x40040a9	      2472	buffer.c	FUNCTION_33	ELSE_2
0x4064	      0xb800000000	                              mov eax, 0	      2472	buffer.c	FUNCTION_33	ELSE_2
0x4069	    0x898514ffffff	             mov dword [rbp - 0xec], eax	      2472	buffer.c	FUNCTION_33	ELSE_2
0x406f	    0xc7850cffffff	               mov dword [rbp - 0xf4], 1	      2476	buffer.c	FUNCTION_33	ELSE_2
0x4079	    0xc78510ffffff	               mov dword [rbp - 0xf0], 0	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x4083	      0xe9d6010000	                           jmp 0x400429e	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x4088	    0x83bd14ffffff	               cmp dword [rbp - 0xec], 0	      2484	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x408f	            0x741e	                            je 0x40040ef	      2484	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x4091	    0x83bd10ffffff	               cmp dword [rbp - 0xf0], 1	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x4098	            0x7f07	                            jg 0x40040e1	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x409a	      0xba00000000	                              mov edx, 0	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x409f	            0xeb05	                           jmp 0x40040e6	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x40a1	      0xba24000000	                           mov edx, 0x24	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x40a6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x40ad	            0x8810	                      mov byte [rax], dl	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x40af	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2486	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x40b6	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      2486	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x40bd	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x40c4	           0xfb600	                   movzx eax, byte [rax]	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x40c7	            0x3c5e	                            cmp al, 0x5e	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x40c9	            0x7515	                           jne 0x4004120	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x40cb	    0x8b8510ffffff	             mov eax, dword [rbp - 0xf0]	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x40d1	          0x83e001	                              and eax, 1	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x40d4	            0x85c0	                           test eax, eax	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x40d6	            0x7508	                           jne 0x4004120	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x40d8	    0x48838520ffff	               add qword [rbp - 0xe0], 1	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x40e0	    0x8b0500000000	            mov eax, dword [0x04004126] 	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x40e6	            0x85c0	                           test eax, eax	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x40e8	           0xf95c0	                                setne al	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x40eb	           0xfb6d0	                           movzx edx, al	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x40ee	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x40f5	            0x89d6	                            mov esi, edx	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x40f7	          0x4889c7	                            mov rdi, rax	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x40fa	      0xe800000000	                          call 0x400413f	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x40ff	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x4106	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2490	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7
0x410d	          0x4885c0	                           test rax, rax	      2490	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7
0x4110	            0x7519	                           jne 0x400416b	      2490	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7
0x4112	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2492	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7	CALL_6
0x4119	          0x4889c7	                            mov rdi, rax	      2492	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7	CALL_6
0x411c	      0xe800000000	                          call 0x4004161	      2492	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7	CALL_6
0x4121	      0xb8ffffffff	                     mov eax, 0xffffffff	      2493	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7
0x4126	      0xe9d7010000	                           jmp 0x4004342	      2493	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7
0x412b	    0x488b05000000	            mov rax, qword [0x04004172] 	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4132	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4139	      0xe9f3000000	                           jmp 0x4004271	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x413e	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2497	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x4145	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      2497	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x414b	    0x3b850cffffff	             cmp eax, dword [rbp - 0xf4]	      2497	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x4151	     0xf85c8000000	                           jne 0x400425f	      2497	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x4157	    0x83bde8feffff	              cmp dword [rbp - 0x118], 0	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x415e	            0x7417	                            je 0x40041b7	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x4160	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x4167	          0x4889c7	                            mov rdi, rax	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x416a	      0xe800000000	                          call 0x40041af	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x416f	            0x85c0	                           test eax, eax	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x4171	     0xf84a8000000	                            je 0x400425f	      2499	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_7
0x4177	    0x488b8d18ffff	             mov rcx, qword [rbp - 0xe8]	      2501	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_8
0x417e	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      2501	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_8
0x4185	      0xba00000000	                              mov edx, 0	      2501	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_8
0x418a	          0x4889ce	                            mov rsi, rcx	      2501	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_8
0x418d	          0x4889c7	                            mov rdi, rax	      2501	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_8
0x4190	      0xe833050000	                  call sym.buflist_match	      2501	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_8
0x4195	          0x4885c0	                           test rax, rax	      2501	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_8
0x4198	     0xf8481000000	                            je 0x400425f	      2501	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	CALL_8
0x419e	    0x83bde4feffff	              cmp dword [rbp - 0x11c], 0	      2503	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9
0x41a5	            0x744d	                            je 0x4004234	      2503	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9
0x41a7	    0x488b05000000	            mov rax, qword [0x040041ee] 	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x41ae	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x41b5	            0xeb26	                           jmp 0x400421d	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x41b7	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2510	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	IF_10
0x41be	        0x488b4008	                mov rax, qword [rax + 8]	      2510	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	IF_10
0x41c2	    0x483b8518ffff	             cmp rax, qword [rbp - 0xe8]	      2510	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	IF_10
0x41c9	            0x741e	                            je 0x4004229	      2510	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	IF_10
0x41cb	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x41d2	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x41d6	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x41dd	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x41e5	            0x75d0	                           jne 0x40041f7	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x41e7	            0xeb01	                           jmp 0x400422a	      2509	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	CALL_9
0x41e9	              0x90	                                     nop	      2511	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	IF_10
0x41ea	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      2512	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	IF_11
0x41f2	            0x742a	                            je 0x400425e	      2512	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	IF_11
0x41f4	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      2515	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x41fb	            0x780c	                            js 0x4004249	      2515	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x41fd	    0xc78508ffffff	     mov dword [rbp - 0xf8], 0xfffffffe 	      2517	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x4207	            0xeb36	                           jmp 0x400427f	      2518	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x4209	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2520	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x4210	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      2520	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x4216	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      2520	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x421c	            0xeb01	                           jmp 0x400425f	      2520	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x421e	              0x90	                                     nop	      2513	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_9	IF_11
0x421f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4226	        0x488b4070	            mov rax, qword [rax + 0x70] 	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x422a	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4231	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x4239	     0xf85fffeffff	                           jne 0x400417e	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x423f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x4246	          0x4889c7	                            mov rdi, rax	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x4249	      0xe800000000	                          call 0x400428e	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x424e	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      2524	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_13
0x4255	            0x7916	                           jns 0x40042ad	      2524	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_13
0x4257	    0x838510ffffff	               add dword [rbp - 0xf0], 1	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x425e	    0x83bd10ffffff	               cmp dword [rbp - 0xf0], 3	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x4265	     0xf8e1dfeffff	                           jle 0x40040c8	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x426b	            0xeb01	                           jmp 0x40042ae	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x426d	              0x90	                                     nop	      2525	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_13
0x426e	    0x83bdecfeffff	              cmp dword [rbp - 0x114], 0	      2530	buffer.c	FUNCTION_33	ELSE_2	FOR_1	IF_14
0x4275	            0x7421	                            je 0x40042d8	      2530	buffer.c	FUNCTION_33	ELSE_2	FOR_1	IF_14
0x4277	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 0	      2530	buffer.c	FUNCTION_33	ELSE_2	FOR_1	IF_14
0x427e	            0x7418	                            je 0x40042d8	      2530	buffer.c	FUNCTION_33	ELSE_2	FOR_1	IF_14
0x4280	    0x83bd08ffffff	cmp dword [rbp - 0xf8], 0xffffffffffffffff	      2530	buffer.c	FUNCTION_33	ELSE_2	FOR_1	IF_14
0x4287	            0x750f	                           jne 0x40042d8	      2530	buffer.c	FUNCTION_33	ELSE_2	FOR_1	IF_14
0x4289	    0xc7850cffffff	               mov dword [rbp - 0xf4], 0	      2532	buffer.c	FUNCTION_33	ELSE_2	FOR_1
0x4293	      0xe9e1fdffff	                           jmp 0x40040b9	      2533	buffer.c	FUNCTION_33	ELSE_2	FOR_1
0x4298	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2535	buffer.c	FUNCTION_33	ELSE_2	CALL_11
0x429f	          0x4889c7	                            mov rdi, rax	      2535	buffer.c	FUNCTION_33	ELSE_2	CALL_11
0x42a2	      0xe800000000	                          call 0x40042e7	      2535	buffer.c	FUNCTION_33	ELSE_2	CALL_11
0x42a7	            0xeb01	                           jmp 0x40042ea	      2535	buffer.c	FUNCTION_33	ELSE_2	CALL_11
0x42a9	              0x90	                                     nop	      2452	buffer.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x42aa	    0x83bd08ffffff	cmp dword [rbp - 0xf8], 0xfffffffffffffffe	      2538	buffer.c	FUNCTION_33	IF_15
0x42b1	            0x7521	                           jne 0x4004314	      2538	buffer.c	FUNCTION_33	IF_15
0x42b3	      0xbf00000000	                              mov edi, 0	      2539	buffer.c	FUNCTION_33	CALL_13
0x42b8	      0xe800000000	                          call 0x40042fd	      2539	buffer.c	FUNCTION_33	CALL_13
0x42bd	          0x4889c2	                            mov rdx, rax	      2539	buffer.c	FUNCTION_33	CALL_13
0x42c0	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2539	buffer.c	FUNCTION_33	CALL_13
0x42c7	          0x4889c6	                            mov rsi, rax	      2539	buffer.c	FUNCTION_33	CALL_13
0x42ca	          0x4889d7	                            mov rdi, rdx	      2539	buffer.c	FUNCTION_33	CALL_13
0x42cd	      0xe800000000	                          call 0x4004312	      2539	buffer.c	FUNCTION_33	CALL_13
0x42d2	            0xeb28	                           jmp 0x400433c	      2539	buffer.c	FUNCTION_33	CALL_13
0x42d4	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      2540	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x42db	            0x791f	                           jns 0x400433c	      2540	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x42dd	      0xbf00000000	                              mov edi, 0	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x42e2	      0xe800000000	                          call 0x4004327	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x42e7	          0x4889c2	                            mov rdx, rax	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x42ea	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x42f1	          0x4889c6	                            mov rsi, rax	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x42f4	          0x4889d7	                            mov rdi, rdx	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x42f7	      0xe800000000	                          call 0x400433c	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x42fc	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      2542	buffer.c	FUNCTION_33
0x4302	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2543	buffer.c	FUNCTION_33
0x4306	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2543	buffer.c	FUNCTION_33
0x430f	            0x7405	                            je 0x4004356	      2543	buffer.c	FUNCTION_33
0x4311	      0xe800000000	                          call 0x4004356	      2543	buffer.c	FUNCTION_33
0x4316	              0xc9	                                   leave	      2543	buffer.c	FUNCTION_33
0x4317	              0xc3	                                     ret	      2543	buffer.c	FUNCTION_33
maketitle	FOR,0:WHILE,0:ELSE,10:functions,0:IF,26:CALL,47:SWITCH,1:DO,0	531
0x622e	              0x55	                                push rbp	      3538	buffer.c	FUNCTION_61
0x622f	          0x4889e5	                            mov rbp, rsp	      3538	buffer.c	FUNCTION_61
0x6232	              0x53	                                push rbx	      3538	buffer.c	FUNCTION_61
0x6233	    0x4881ec580400	                          sub rsp, 0x458	      3538	buffer.c	FUNCTION_61
0x623a	    0x64488b042528	                mov rax, qword fs:[0x28]	      3538	buffer.c	FUNCTION_61
0x6243	        0x488945e8	             mov qword [rbp - 0x18], rax	      3538	buffer.c	FUNCTION_61
0x6247	            0x31c0	                            xor eax, eax	      3538	buffer.c	FUNCTION_61
0x6249	    0x48c785c0fbff	              mov qword [rbp - 0x440], 0	      3540	buffer.c	FUNCTION_61
0x6254	    0x48c785d0fbff	              mov qword [rbp - 0x430], 0	      3542	buffer.c	FUNCTION_61
0x625f	    0xc785a0fbffff	              mov dword [rbp - 0x460], 0	      3543	buffer.c	FUNCTION_61
0x6269	      0xe800000000	                          call 0x40062ae	      3549	buffer.c	FUNCTION_61	IF_1	CALL_1
0x626e	            0x85c0	                           test eax, eax	      3549	buffer.c	FUNCTION_61	IF_1	CALL_1
0x6270	            0x750f	                           jne 0x40062c1	      3549	buffer.c	FUNCTION_61	IF_1	CALL_1
0x6272	    0xc70500000000	               mov dword [0x040062bc], 1	      3552	buffer.c	FUNCTION_61	IF_1
0x627c	      0xe95a090000	                           jmp 0x4006c1b	      3553	buffer.c	FUNCTION_61	IF_1
0x6281	    0xc70500000000	               mov dword [0x040062cb], 0	      3556	buffer.c	FUNCTION_61
0x628b	    0x8b0500000000	            mov eax, dword [0x040062d1] 	      3557	buffer.c	FUNCTION_61	IF_2
0x6291	            0x85c0	                           test eax, eax	      3557	buffer.c	FUNCTION_61	IF_2
0x6293	            0x7526	                           jne 0x40062fb	      3557	buffer.c	FUNCTION_61	IF_2
0x6295	    0x8b0500000000	            mov eax, dword [0x040062db] 	      3557	buffer.c	FUNCTION_61	IF_2
0x629b	            0x85c0	                           test eax, eax	      3557	buffer.c	FUNCTION_61	IF_2
0x629d	            0x751c	                           jne 0x40062fb	      3557	buffer.c	FUNCTION_61	IF_2
0x629f	    0x488b05000000	            mov rax, qword [0x040062e6] 	      3557	buffer.c	FUNCTION_61	IF_2
0x62a6	          0x4885c0	                           test rax, rax	      3557	buffer.c	FUNCTION_61	IF_2
0x62a9	            0x7510	                           jne 0x40062fb	      3557	buffer.c	FUNCTION_61	IF_2
0x62ab	    0x488b05000000	            mov rax, qword [0x040062f2] 	      3557	buffer.c	FUNCTION_61	IF_2
0x62b2	          0x4885c0	                           test rax, rax	      3557	buffer.c	FUNCTION_61	IF_2
0x62b5	     0xf841f090000	                            je 0x4006c1a	      3557	buffer.c	FUNCTION_61	IF_2
0x62bb	    0x8b0500000000	            mov eax, dword [0x04006301] 	      3560	buffer.c	FUNCTION_61	IF_3
0x62c1	            0x85c0	                           test eax, eax	      3560	buffer.c	FUNCTION_61	IF_3
0x62c3	     0xf84d8060000	                            je 0x40069e1	      3560	buffer.c	FUNCTION_61	IF_3
0x62c9	    0x488b05000000	            mov rax, qword [0x04006310] 	      3562	buffer.c	FUNCTION_61	IF_3	IF_4
0x62d0	          0x4885c0	                           test rax, rax	      3562	buffer.c	FUNCTION_61	IF_3	IF_4
0x62d3	            0x7e56	                           jle 0x400636b	      3562	buffer.c	FUNCTION_61	IF_3	IF_4
0x62d5	    0x488b15000000	            mov rdx, qword [0x0400631c] 	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x62dc	    0x488b05000000	            mov rax, qword [0x04006323] 	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x62e3	          0x4889d1	                            mov rcx, rdx	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x62e6	        0x480fafc8	                           imul rcx, rax	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x62ea	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x62f4	          0x4889c8	                            mov rax, rcx	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x62f7	          0x48f7ea	                                imul rdx	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x62fa	        0x488d040a	                    lea rax, [rdx + rcx]	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x62fe	        0x48c1f806	                              sar rax, 6	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x6302	          0x4889c2	                            mov rdx, rax	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x6305	          0x4889c8	                            mov rax, rcx	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x6308	        0x48c1f83f	                           sar rax, 0x3f	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x630c	          0x4829c2	                            sub rdx, rax	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x630f	          0x4889d0	                            mov rax, rdx	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x6312	    0x8985a0fbffff	            mov dword [rbp - 0x460], eax	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x6318	    0x83bda0fbffff	              cmp dword [rbp - 0x460], 9	      3565	buffer.c	FUNCTION_61	IF_3	IF_4	IF_5
0x631f	            0x7f0a	                            jg 0x400636b	      3565	buffer.c	FUNCTION_61	IF_3	IF_4	IF_5
0x6321	    0xc785a0fbffff	            mov dword [rbp - 0x460], 0xa	      3566	buffer.c	FUNCTION_61	IF_3	IF_4	IF_5
0x632b	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3569	buffer.c	FUNCTION_61	IF_3
0x6332	    0x488985c0fbff	            mov qword [rbp - 0x440], rax	      3569	buffer.c	FUNCTION_61	IF_3
0x6339	    0x488b05000000	            mov rax, qword [0x04006380] 	      3570	buffer.c	FUNCTION_61	IF_3	IF_6
0x6340	           0xfb600	                   movzx eax, byte [rax]	      3570	buffer.c	FUNCTION_61	IF_3	IF_6
0x6343	            0x84c0	                             test al, al	      3570	buffer.c	FUNCTION_61	IF_3	IF_6
0x6345	     0xf84e0000000	                            je 0x400646b	      3570	buffer.c	FUNCTION_61	IF_3	IF_6
0x634b	    0x8b0500000000	            mov eax, dword [0x04006391] 	      3573	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x6351	          0x83e002	                              and eax, 2	      3573	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x6354	            0x85c0	                           test eax, eax	      3573	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x6356	     0xf84bc000000	                            je 0x4006458	      3573	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x635c	    0xc785a8fbffff	              mov dword [rbp - 0x458], 0	      3575	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x6366	    0x8b0500000000	            mov eax, dword [0x040063ac] 	      3576	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x636c	    0x8985acfbffff	            mov dword [rbp - 0x454], eax	      3576	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x6372	      0xbe00000000	                              mov esi, 0	      3579	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_2
0x6377	      0xbf00000000	                              mov edi, 0	      3579	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_2
0x637c	      0xe800000000	                          call 0x40063c1	      3579	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_2
0x6381	    0x8985a8fbffff	            mov dword [rbp - 0x458], eax	      3579	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_2
0x6387	    0xc70500000000	               mov dword [0x040063d1], 0	      3581	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x6391	    0x488b15000000	            mov rdx, qword [0x040063d8] 	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x6398	    0x488b05000000	            mov rax, qword [0x040063df] 	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x639f	    0x8bbda8fbffff	            mov edi, dword [rbp - 0x458]	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x63a5	    0x488bb5c0fbff	            mov rsi, qword [rbp - 0x440]	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x63ac	        0x4883ec08	                              sub rsp, 8	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x63b0	            0x6a00	                                  push 0	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x63b2	            0x6a00	                                  push 0	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x63b4	    0x8b8da0fbffff	            mov ecx, dword [rbp - 0x460]	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x63ba	              0x51	                                push rcx	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x63bb	    0x41b900000000	                              mov r9d, 0	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x63c1	          0x4189f8	                            mov r8d, edi	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x63c4	          0x4889d1	                            mov rcx, rdx	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x63c7	      0xba01040000	                          mov edx, 0x401	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x63cc	          0x4889c7	                            mov rdi, rax	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x63cf	      0xe800000000	                          call 0x4006414	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x63d4	        0x4883c420	                           add rsp, 0x20	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x63d8	    0x8b0500000000	            mov eax, dword [0x0400641e] 	      3585	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8
0x63de	            0x85c0	                           test eax, eax	      3585	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8
0x63e0	            0x741f	                            je 0x4006441	      3585	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8
0x63e2	    0x41b8fbffffff	                     mov r8d, 0xfffffffb	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x63e8	      0xb901000000	                              mov ecx, 1	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x63ed	      0xba00000000	                              mov edx, 0	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x63f2	      0xbeffffffff	                     mov esi, 0xffffffff	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x63f7	      0xbf00000000	                              mov edi, 0	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x63fc	      0xe800000000	                          call 0x4006441	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x6401	    0x8b0500000000	            mov eax, dword [0x04006447] 	      3588	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x6407	     0xb85acfbffff	             or eax, dword [rbp - 0x454]	      3588	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x640d	    0x890500000000	            mov dword [0x04006453], eax 	      3588	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x6413	      0xe989050000	                           jmp 0x40069e1	      3588	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x6418	    0x488b05000000	            mov rax, qword [0x0400645f] 	      3592	buffer.c	FUNCTION_61	IF_3	IF_6	ELSE_1
0x641f	    0x488985c0fbff	            mov qword [rbp - 0x440], rax	      3592	buffer.c	FUNCTION_61	IF_3	IF_6	ELSE_1
0x6426	      0xe976050000	                           jmp 0x40069e1	      3592	buffer.c	FUNCTION_61	IF_3	IF_6	ELSE_1
0x642b	    0x488b05000000	            mov rax, qword [0x04006472] 	      3601	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_9
0x6432	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3601	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_9
0x6439	          0x4885c0	                           test rax, rax	      3601	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_9
0x643c	            0x7529	                           jne 0x40064a7	      3601	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_9
0x643e	      0xbf00000000	                              mov edi, 0	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x6443	      0xe800000000	                          call 0x4006488	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x6448	          0x4889c1	                            mov rcx, rax	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x644b	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x6452	      0xba9d030000	                          mov edx, 0x39d	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x6457	          0x4889ce	                            mov rsi, rcx	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x645a	          0x4889c7	                            mov rdi, rax	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x645d	      0xe800000000	                          call 0x40064a2	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x6462	      0xe997000000	                           jmp 0x400653e	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x6467	    0x488b05000000	            mov rax, qword [0x040064ae] 	      3604	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10
0x646e	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      3604	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10
0x6475	          0x4885c0	                           test rax, rax	      3604	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10
0x6478	            0x7432	                            je 0x40064ec	      3604	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10
0x647a	    0x488b05000000	            mov rax, qword [0x040064c1] 	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x6481	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x6488	          0x4889c7	                            mov rdi, rax	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x648b	      0xe800000000	                          call 0x40064d0	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x6490	          0x4889c1	                            mov rcx, rax	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x6493	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x649a	      0xba9d030000	                          mov edx, 0x39d	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x649f	          0x4889ce	                            mov rsi, rcx	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x64a2	          0x4889c7	                            mov rdi, rax	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x64a5	      0xe800000000	                          call 0x40064ea	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x64aa	            0xeb52	                           jmp 0x400653e	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x64ac	    0x488b05000000	            mov rax, qword [0x040064f3] 	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x64b3	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x64ba	          0x4889c7	                            mov rdi, rax	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x64bd	      0xe800000000	                          call 0x4006502	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x64c2	          0x4889c7	                            mov rdi, rax	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x64c5	      0xe800000000	                          call 0x400650a	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x64ca	    0x488985d8fbff	            mov qword [rbp - 0x428], rax	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x64d1	    0x488b8dd8fbff	            mov rcx, qword [rbp - 0x428]	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x64d8	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x64df	      0xba9d030000	                          mov edx, 0x39d	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x64e4	          0x4889ce	                            mov rsi, rcx	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x64e7	          0x4889c7	                            mov rdi, rax	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x64ea	      0xe800000000	                          call 0x400652f	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x64ef	    0x488b85d8fbff	            mov rax, qword [rbp - 0x428]	      3614	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_12
0x64f6	          0x4889c7	                            mov rdi, rax	      3614	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_12
0x64f9	      0xe800000000	                          call 0x400653e	      3614	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_12
0x64fe	    0x488b05000000	            mov rax, qword [0x04006545] 	      3618	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11
0x6505	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      3618	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11
0x650c	          0x4885c0	                           test rax, rax	      3618	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11
0x650f	     0xf8577010000	                           jne 0x40066cc	      3618	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11
0x6515	    0x488b05000000	            mov rax, qword [0x0400655c] 	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x651c	          0x4889c7	                            mov rdi, rax	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x651f	      0xe800000000	                          call 0x4006564	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x6524	            0x89c2	                            mov edx, eax	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x6526	    0x488b05000000	            mov rax, qword [0x0400656d] 	      3621	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x652d	    0x8b8060150000	          mov eax, dword [rax + 0x1560] 	      3621	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x6533	             0x1c0	                            add eax, eax	      3621	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x6535	             0x1c2	                            add edx, eax	      3621	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x6537	    0x488b05000000	            mov rax, qword [0x0400657e] 	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x653e	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x6544	            0x85c0	                           test eax, eax	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x6546	            0x7507	                           jne 0x400658f	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x6548	      0xb804000000	                              mov eax, 4	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x654d	            0xeb05	                           jmp 0x4006594	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x654f	      0xb800000000	                              mov eax, 0	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x6554	             0x1d0	                            add eax, edx	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x6556	          0x83f807	                              cmp eax, 7	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x6559	     0xf872d010000	                            ja 0x40066cc	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x655f	            0x89c0	                            mov eax, eax	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x6561	    0x488b04c50000	                  mov rax, qword [rax*8]	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x6569	            0xffe0	                                 jmp rax	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x656b	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x6572	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x6579	          0x4889c2	                            mov rdx, rax	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x657c	      0xb800000000	                              mov eax, 0	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x6581	          0x4889d7	                            mov rdi, rdx	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x6584	            0xf2ae	              repne scasb al, byte [rdi]	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x6586	          0x4889c8	                            mov rax, rcx	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x6589	          0x48f7d0	                                 not rax	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x658c	        0x488d50ff	                      lea rdx, [rax - 1]	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x6590	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x6597	          0x4801d0	                            add rax, rdx	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x659a	      0x66c700202b	                  mov word [rax], 0x2b20	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x659f	        0xc6400200	                   mov byte [rax + 2], 0	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x65a3	      0xe9e4000000	                           jmp 0x40066cc	      3624	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_14
0x65a8	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x65af	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x65b6	          0x4889c2	                            mov rdx, rax	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x65b9	      0xb800000000	                              mov eax, 0	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x65be	          0x4889d7	                            mov rdi, rdx	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x65c1	            0xf2ae	              repne scasb al, byte [rdi]	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x65c3	          0x4889c8	                            mov rax, rcx	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x65c6	          0x48f7d0	                                 not rax	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x65c9	        0x488d50ff	                      lea rdx, [rax - 1]	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x65cd	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x65d4	          0x4801d0	                            add rax, rdx	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x65d7	      0x66c700203d	                  mov word [rax], 0x3d20	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x65dc	        0xc6400200	                   mov byte [rax + 2], 0	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x65e0	      0xe9a7000000	                           jmp 0x40066cc	      3625	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_15
0x65e5	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x65ec	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x65f3	          0x4889c2	                            mov rdx, rax	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x65f6	      0xb800000000	                              mov eax, 0	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x65fb	          0x4889d7	                            mov rdi, rdx	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x65fe	            0xf2ae	              repne scasb al, byte [rdi]	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x6600	          0x4889c8	                            mov rax, rcx	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x6603	          0x48f7d0	                                 not rax	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x6606	        0x488d50ff	                      lea rdx, [rax - 1]	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x660a	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x6611	          0x4801d0	                            add rax, rdx	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x6614	    0xc700203d2b00	               mov dword [rax], 0x2b3d20	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x661a	            0xeb70	                           jmp 0x40066cc	      3626	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_16
0x661c	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x6623	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x662a	          0x4889c2	                            mov rdx, rax	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x662d	      0xb800000000	                              mov eax, 0	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x6632	          0x4889d7	                            mov rdi, rdx	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x6635	            0xf2ae	              repne scasb al, byte [rdi]	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x6637	          0x4889c8	                            mov rax, rcx	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x663a	          0x48f7d0	                                 not rax	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x663d	        0x488d50ff	                      lea rdx, [rax - 1]	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x6641	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x6648	          0x4801d0	                            add rax, rdx	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x664b	      0x66c700202d	                  mov word [rax], 0x2d20	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x6650	        0xc6400200	                   mov byte [rax + 2], 0	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x6654	            0xeb36	                           jmp 0x40066cc	      3628	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_17
0x6656	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x665d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x6664	          0x4889c2	                            mov rdx, rax	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x6667	      0xb800000000	                              mov eax, 0	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x666c	          0x4889d7	                            mov rdi, rdx	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x666f	            0xf2ae	              repne scasb al, byte [rdi]	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x6671	          0x4889c8	                            mov rax, rcx	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x6674	          0x48f7d0	                                 not rax	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x6677	        0x488d50ff	                      lea rdx, [rax - 1]	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x667b	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x6682	          0x4801d0	                            add rax, rdx	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x6685	    0xc700202d2b00	               mov dword [rax], 0x2b2d20	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x668b	              0x90	                                     nop	      3630	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_18
0x668c	    0x488b05000000	            mov rax, qword [0x040066d3] 	      3633	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x6693	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3633	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x669a	          0x4885c0	                           test rax, rax	      3633	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x669d	     0xf84fd010000	                            je 0x40068e0	      3633	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x66a3	    0x488b05000000	            mov rax, qword [0x040066ea] 	      3635	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x66aa	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      3635	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x66b1	          0x4885c0	                           test rax, rax	      3635	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x66b4	     0xf85e6010000	                           jne 0x40068e0	      3635	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x66ba	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x66c1	          0x4889c7	                            mov rdi, rax	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x66c4	      0xe800000000	                          call 0x4006709	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x66c9	    0x8985b0fbffff	            mov dword [rbp - 0x450], eax	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x66cf	    0x8b85b0fbffff	            mov eax, dword [rbp - 0x450]	      3641	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x66d5	          0x8d5001	                      lea edx, [rax + 1]	      3641	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x66d8	    0x8995b0fbffff	            mov dword [rbp - 0x450], edx	      3641	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x66de	            0x4898	                                    cdqe	      3641	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x66e0	    0xc68405e0fbff	     mov byte [rbp + rax - 0x420], 0x20 	      3641	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x66e8	    0x8b85b0fbffff	            mov eax, dword [rbp - 0x450]	      3642	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x66ee	          0x8d5001	                      lea edx, [rax + 1]	      3642	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x66f1	    0x8995b0fbffff	            mov dword [rbp - 0x450], edx	      3642	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x66f7	            0x4898	                                    cdqe	      3642	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x66f9	    0xc68405e0fbff	     mov byte [rbp + rax - 0x420], 0x28 	      3642	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x6701	      0xb8ed030000	                          mov eax, 0x3ed	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x6706	    0x2b85b0fbffff	            sub eax, dword [rbp - 0x450]	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x670c	            0x89c2	                            mov edx, eax	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x670e	    0x8b85b0fbffff	            mov eax, dword [rbp - 0x450]	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x6714	            0x4898	                                    cdqe	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x6716	    0x488d8de0fbff	                  lea rcx, [rbp - 0x420]	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x671d	        0x488d3c01	                    lea rdi, [rcx + rax]	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x6721	    0x488b05000000	            mov rax, qword [0x04006768] 	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x6728	    0x488bb0880000	            mov rsi, qword [rax + 0x88] 	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x672f	    0x488b05000000	            mov rax, qword [0x04006776] 	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x6736	    0x41b801000000	                              mov r8d, 1	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x673c	            0x89d1	                            mov ecx, edx	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x673e	          0x4889fa	                            mov rdx, rdi	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x6741	          0x4889c7	                            mov rdi, rax	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x6744	      0xe800000000	                          call 0x4006789	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x6749	    0x8b85b0fbffff	            mov eax, dword [rbp - 0x450]	      3651	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_22
0x674f	            0x4898	                                    cdqe	      3651	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_22
0x6751	    0x488d95e0fbff	                  lea rdx, [rbp - 0x420]	      3651	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_22
0x6758	          0x4801d0	                            add rax, rdx	      3651	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_22
0x675b	          0x4889c7	                            mov rdi, rax	      3651	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_22
0x675e	      0xe800000000	                          call 0x40067a3	      3651	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_22
0x6763	    0x488985d8fbff	            mov qword [rbp - 0x428], rax	      3651	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_22
0x676a	    0x8b85b0fbffff	            mov eax, dword [rbp - 0x450]	      3652	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14
0x6770	            0x4898	                                    cdqe	      3652	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14
0x6772	    0x488d95e0fbff	                  lea rdx, [rbp - 0x420]	      3652	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14
0x6779	          0x4801d0	                            add rax, rdx	      3652	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14
0x677c	    0x483b85d8fbff	            cmp rax, qword [rbp - 0x428]	      3652	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14
0x6783	            0x753d	                           jne 0x4006802	      3652	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14
0x6785	      0xb8ec030000	                          mov eax, 0x3ec	      3656	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14
0x678a	    0x2b85b0fbffff	            sub eax, dword [rbp - 0x450]	      3656	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14
0x6790	          0x4863d8	                         movsxd rbx, eax	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x6793	      0xbf00000000	                              mov edi, 0	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x6798	      0xe800000000	                          call 0x40067dd	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x679d	          0x4889c1	                            mov rcx, rax	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x67a0	    0x8b85b0fbffff	            mov eax, dword [rbp - 0x450]	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x67a6	            0x4898	                                    cdqe	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x67a8	    0x488d95e0fbff	                  lea rdx, [rbp - 0x420]	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x67af	          0x4801d0	                            add rax, rdx	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x67b2	          0x4889da	                            mov rdx, rbx	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x67b5	          0x4889ce	                            mov rsi, rcx	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x67b8	          0x4889c7	                            mov rdi, rax	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x67bb	      0xe800000000	                          call 0x4006800	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x67c0	            0xeb0a	                           jmp 0x400680c	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x67c2	    0x488b85d8fbff	            mov rax, qword [rbp - 0x428]	      3659	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5
0x67c9	          0xc60000	                       mov byte [rax], 0	      3659	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5
0x67cc	    0x81bdb0fbffff	         cmp dword [rbp - 0x450], 0x3ec 	      3664	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15
0x67d6	            0x7f64	                            jg 0x400687c	      3664	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15
0x67d8	    0x8b85b0fbffff	            mov eax, dword [rbp - 0x450]	      3666	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_25
0x67de	            0x4898	                                    cdqe	      3666	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_25
0x67e0	    0x488d95e0fbff	                  lea rdx, [rbp - 0x420]	      3666	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_25
0x67e7	          0x4801d0	                            add rax, rdx	      3666	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_25
0x67ea	          0x4889c7	                            mov rdi, rax	      3666	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_25
0x67ed	      0xe800000000	                          call 0x4006832	      3666	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_25
0x67f2	    0x488985d8fbff	            mov qword [rbp - 0x428], rax	      3666	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_25
0x67f9	      0xb8ed030000	                          mov eax, 0x3ed	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x67fe	    0x2b85b0fbffff	            sub eax, dword [rbp - 0x450]	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x6804	          0x4863d0	                         movsxd rdx, eax	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x6807	    0x8b85b0fbffff	            mov eax, dword [rbp - 0x450]	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x680d	            0x4898	                                    cdqe	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x680f	    0x488d8de0fbff	                  lea rcx, [rbp - 0x420]	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x6816	          0x4801c1	                            add rcx, rax	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x6819	    0x488b85d8fbff	            mov rax, qword [rbp - 0x428]	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x6820	          0x4889c6	                            mov rsi, rax	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x6823	          0x4889cf	                            mov rdi, rcx	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x6826	      0xe800000000	                          call 0x400686b	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x682b	    0x488b85d8fbff	            mov rax, qword [rbp - 0x428]	      3668	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_27
0x6832	          0x4889c7	                            mov rdi, rax	      3668	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_27
0x6835	      0xe800000000	                          call 0x400687a	      3668	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_27
0x683a	            0xeb30	                           jmp 0x40068ac	      3668	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_27
0x683c	      0xb8f7030000	                          mov eax, 0x3f7	      3673	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6
0x6841	    0x2b85b0fbffff	            sub eax, dword [rbp - 0x450]	      3673	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6
0x6847	            0x4898	                                    cdqe	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x6849	    0x8b95b0fbffff	            mov edx, dword [rbp - 0x450]	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x684f	          0x4863d2	                         movsxd rdx, edx	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x6852	    0x488d8de0fbff	                  lea rcx, [rbp - 0x420]	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x6859	          0x4801d1	                            add rcx, rdx	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x685c	          0x4889c2	                            mov rdx, rax	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x685f	      0xbe00000000	                              mov esi, 0	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x6864	          0x4889cf	                            mov rdi, rcx	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x6867	      0xe800000000	                          call 0x40068ac	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x686c	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x6873	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x687a	          0x4889c2	                            mov rdx, rax	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x687d	      0xb800000000	                              mov eax, 0	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x6882	          0x4889d7	                            mov rdi, rdx	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x6885	            0xf2ae	              repne scasb al, byte [rdi]	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x6887	          0x4889c8	                            mov rax, rcx	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x688a	          0x48f7d0	                                 not rax	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x688d	        0x488d50ff	                      lea rdx, [rax - 1]	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x6891	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x6898	          0x4801d0	                            add rax, rdx	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x689b	      0x66c7002900	                    mov word [rax], 0x29	      3675	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_29
0x68a0	    0x488b05000000	            mov rax, qword [0x040068e7] 	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x68a7	    0x488db5e0fbff	                  lea rsi, [rbp - 0x420]	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x68ae	      0xb900000000	                              mov ecx, 0	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x68b3	      0xbaf7030000	                          mov edx, 0x3f7	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x68b8	          0x4889c7	                            mov rdi, rax	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x68bb	      0xe846330000	              call sym.append_arg_number	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x68c0	    0x488b05000000	            mov rax, qword [0x04006907] 	      3681	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16
0x68c7	          0x4885c0	                           test rax, rax	      3681	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16
0x68ca	            0x7455	                            je 0x4006961	      3681	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16
0x68cc	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x68d3	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x68da	          0x4889c2	                            mov rdx, rax	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x68dd	      0xb800000000	                              mov eax, 0	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x68e2	          0x4889d7	                            mov rdi, rdx	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x68e5	            0xf2ae	              repne scasb al, byte [rdi]	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x68e7	          0x4889c8	                            mov rax, rcx	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x68ea	          0x48f7d0	                                 not rax	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x68ed	        0x488d50ff	                      lea rdx, [rax - 1]	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x68f1	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x68f8	          0x4801d0	                            add rax, rdx	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x68fb	    0xc700202d2000	               mov dword [rax], 0x202d20	      3683	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_31
0x6901	    0x488b0d000000	            mov rcx, qword [0x04006948] 	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x6908	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x690f	      0xba01040000	                          mov edx, 0x401	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x6914	          0x4889ce	                            mov rsi, rcx	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x6917	          0x4889c7	                            mov rdi, rax	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x691a	      0xe800000000	                          call 0x400695f	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x691f	            0xeb3f	                           jmp 0x40069a0	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x6921	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x6928	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x692f	          0x4889c2	                            mov rdx, rax	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x6932	      0xb800000000	                              mov eax, 0	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x6937	          0x4889d7	                            mov rdi, rdx	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x693a	            0xf2ae	              repne scasb al, byte [rdi]	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x693c	          0x4889c8	                            mov rax, rcx	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x693f	          0x48f7d0	                                 not rax	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x6942	        0x488d50ff	                      lea rdx, [rax - 1]	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x6946	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x694d	          0x4801d0	                            add rax, rdx	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x6950	    0xc700202d2056	            mov dword [rax], 0x56202d20 	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x6956	    0x66c74004494d	              mov word [rax + 4], 0x4d49	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x695c	        0xc6400600	                   mov byte [rax + 6], 0	      3688	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_33
0x6960	    0x83bda0fbffff	              cmp dword [rbp - 0x460], 0	      3690	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17
0x6967	            0x7e38	                           jle 0x40069e1	      3690	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17
0x6969	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3693	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	IF_18	CALL_34
0x6970	          0x4889c7	                            mov rdi, rax	      3693	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	IF_18	CALL_34
0x6973	      0xe800000000	                          call 0x40069b8	      3693	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	IF_18	CALL_34
0x6978	    0x3b85a0fbffff	            cmp eax, dword [rbp - 0x460]	      3693	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	IF_18	CALL_34
0x697e	            0x7e21	                           jle 0x40069e1	      3693	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	IF_18	CALL_34
0x6980	    0x8b95a0fbffff	            mov edx, dword [rbp - 0x460]	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x6986	    0x488db5e0fbff	                  lea rsi, [rbp - 0x420]	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x698d	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x6994	      0xb901040000	                          mov ecx, 0x401	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x6999	          0x4889c7	                            mov rdi, rax	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x699c	      0xe800000000	                          call 0x40069e1	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x69a1	    0x488b85c0fbff	            mov rax, qword [rbp - 0x440]	      3698	buffer.c	FUNCTION_61	CALL_36
0x69a8	      0xbe00000000	                              mov esi, 0	      3698	buffer.c	FUNCTION_61	CALL_36
0x69ad	          0x4889c7	                            mov rdi, rax	      3698	buffer.c	FUNCTION_61	CALL_36
0x69b0	      0xe840020000	                      call sym.ti_change	      3698	buffer.c	FUNCTION_61	CALL_36
0x69b5	    0x8985b4fbffff	            mov dword [rbp - 0x44c], eax	      3698	buffer.c	FUNCTION_61	CALL_36
0x69bb	    0x8b0500000000	            mov eax, dword [0x04006a01] 	      3700	buffer.c	FUNCTION_61	IF_19
0x69c1	            0x85c0	                           test eax, eax	      3700	buffer.c	FUNCTION_61	IF_19
0x69c3	     0xf84e7010000	                            je 0x4006bf0	      3700	buffer.c	FUNCTION_61	IF_19
0x69c9	    0x488d85e0fbff	                  lea rax, [rbp - 0x420]	      3702	buffer.c	FUNCTION_61	IF_19
0x69d0	    0x488985d0fbff	            mov qword [rbp - 0x430], rax	      3702	buffer.c	FUNCTION_61	IF_19
0x69d7	    0x488b05000000	            mov rax, qword [0x04006a1e] 	      3703	buffer.c	FUNCTION_61	IF_19	IF_20
0x69de	           0xfb600	                   movzx eax, byte [rax]	      3703	buffer.c	FUNCTION_61	IF_19	IF_20
0x69e1	            0x84c0	                             test al, al	      3703	buffer.c	FUNCTION_61	IF_19	IF_20
0x69e3	     0xf84db000000	                            je 0x4006b04	      3703	buffer.c	FUNCTION_61	IF_19	IF_20
0x69e9	    0x8b0500000000	            mov eax, dword [0x04006a2f] 	      3706	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x69ef	          0x83e001	                              and eax, 1	      3706	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x69f2	            0x85c0	                           test eax, eax	      3706	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x69f4	     0xf84b7000000	                            je 0x4006af1	      3706	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x69fa	    0xc785b8fbffff	              mov dword [rbp - 0x448], 0	      3708	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x6a04	    0x8b0500000000	            mov eax, dword [0x04006a4a] 	      3709	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x6a0a	    0x8985bcfbffff	            mov dword [rbp - 0x444], eax	      3709	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x6a10	      0xbe00000000	                              mov esi, 0	      3712	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_37
0x6a15	      0xbf00000000	                              mov edi, 0	      3712	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_37
0x6a1a	      0xe800000000	                          call 0x4006a5f	      3712	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_37
0x6a1f	    0x8985b8fbffff	            mov dword [rbp - 0x448], eax	      3712	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_37
0x6a25	    0xc70500000000	               mov dword [0x04006a6f], 0	      3714	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x6a2f	    0x488b15000000	            mov rdx, qword [0x04006a76] 	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x6a36	    0x488b05000000	            mov rax, qword [0x04006a7d] 	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x6a3d	    0x8b8db8fbffff	            mov ecx, dword [rbp - 0x448]	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x6a43	    0x488bb5d0fbff	            mov rsi, qword [rbp - 0x430]	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x6a4a	        0x4883ec08	                              sub rsp, 8	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x6a4e	            0x6a00	                                  push 0	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x6a50	            0x6a00	                                  push 0	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x6a52	            0x6a00	                                  push 0	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x6a54	    0x41b900000000	                              mov r9d, 0	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x6a5a	          0x4189c8	                            mov r8d, ecx	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x6a5d	          0x4889d1	                            mov rcx, rdx	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x6a60	      0xba01040000	                          mov edx, 0x401	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x6a65	          0x4889c7	                            mov rdi, rax	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x6a68	      0xe800000000	                          call 0x4006aad	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x6a6d	        0x4883c420	                           add rsp, 0x20	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x6a71	    0x8b0500000000	            mov eax, dword [0x04006ab7] 	      3718	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22
0x6a77	            0x85c0	                           test eax, eax	      3718	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22
0x6a79	            0x741f	                            je 0x4006ada	      3718	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22
0x6a7b	    0x41b8fbffffff	                     mov r8d, 0xfffffffb	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x6a81	      0xb901000000	                              mov ecx, 1	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x6a86	      0xba00000000	                              mov edx, 0	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x6a8b	      0xbeffffffff	                     mov esi, 0xffffffff	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x6a90	      0xbf00000000	                              mov edi, 0	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x6a95	      0xe800000000	                          call 0x4006ada	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x6a9a	    0x8b0500000000	            mov eax, dword [0x04006ae0] 	      3721	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x6aa0	     0xb85bcfbffff	             or eax, dword [rbp - 0x444]	      3721	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x6aa6	    0x890500000000	            mov dword [0x04006aec], eax 	      3721	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x6aac	      0xe9ff000000	                           jmp 0x4006bf0	      3721	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x6ab1	    0x488b05000000	            mov rax, qword [0x04006af8] 	      3725	buffer.c	FUNCTION_61	IF_19	IF_20	ELSE_8
0x6ab8	    0x488985d0fbff	            mov qword [rbp - 0x430], rax	      3725	buffer.c	FUNCTION_61	IF_19	IF_20	ELSE_8
0x6abf	      0xe9ec000000	                           jmp 0x4006bf0	      3725	buffer.c	FUNCTION_61	IF_19	IF_20	ELSE_8
0x6ac4	    0x488b05000000	            mov rax, qword [0x04006b0b] 	      3729	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_23	CALL_40
0x6acb	          0x4889c7	                            mov rdi, rax	      3729	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_23	CALL_40
0x6ace	      0xe800000000	                          call 0x4006b13	      3729	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_23	CALL_40
0x6ad3	          0x4885c0	                           test rax, rax	      3729	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_23	CALL_40
0x6ad6	            0x7418	                            je 0x4006b30	      3729	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_23	CALL_40
0x6ad8	    0x488b05000000	            mov rax, qword [0x04006b1f] 	      3730	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_41
0x6adf	          0x4889c7	                            mov rdi, rax	      3730	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_41
0x6ae2	      0xe800000000	                          call 0x4006b27	      3730	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_41
0x6ae7	    0x488985c8fbff	            mov qword [rbp - 0x438], rax	      3730	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_41
0x6aee	            0xeb1d	                           jmp 0x4006b4d	      3730	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_41
0x6af0	    0x488b05000000	            mov rax, qword [0x04006b37] 	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x6af7	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x6afe	          0x4889c7	                            mov rdi, rax	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x6b01	      0xe800000000	                          call 0x4006b46	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x6b06	    0x488985c8fbff	            mov qword [rbp - 0x438], rax	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x6b0d	    0x488b85d0fbff	            mov rax, qword [rbp - 0x430]	      3733	buffer.c	FUNCTION_61	IF_19	ELSE_9
0x6b14	          0xc60000	                       mov byte [rax], 0	      3733	buffer.c	FUNCTION_61	IF_19	ELSE_9
0x6b17	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      3735	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_43
0x6b1e	          0x4889c7	                            mov rdi, rax	      3735	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_43
0x6b21	      0xe800000000	                          call 0x4006b66	      3735	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_43
0x6b26	    0x8985a4fbffff	            mov dword [rbp - 0x45c], eax	      3735	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_43
0x6b2c	    0x83bda4fbffff	          cmp dword [rbp - 0x45c], 0x64 	      3736	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x6b33	            0x7e4e	                           jle 0x4006bc3	      3736	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x6b35	    0x83ada4fbffff	          sub dword [rbp - 0x45c], 0x64 	      3738	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x6b3c	    0x8b0500000000	            mov eax, dword [0x04006b82] 	      3740	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x6b42	            0x85c0	                           test eax, eax	      3740	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x6b44	            0x742e	                            je 0x4006bb4	      3740	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x6b46	    0x8b85a4fbffff	            mov eax, dword [rbp - 0x45c]	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x6b4c	          0x4863d0	                         movsxd rdx, eax	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x6b4f	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x6b56	          0x4801c2	                            add rdx, rax	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x6b59	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x6b60	          0x4889d6	                            mov rsi, rdx	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x6b63	          0x4889c7	                            mov rdi, rax	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x6b66	      0xe800000000	                          call 0x4006bab	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x6b6b	          0x83c001	                              add eax, 1	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x6b6e	     0x185a4fbffff	            add dword [rbp - 0x45c], eax	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x6b74	    0x8b85a4fbffff	            mov eax, dword [rbp - 0x45c]	      3743	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x6b7a	            0x4898	                                    cdqe	      3743	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x6b7c	    0x480185c8fbff	           add qword [rbp - 0x438], rax 	      3743	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x6b83	    0x488b95c8fbff	            mov rdx, qword [rbp - 0x438]	      3745	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_44
0x6b8a	    0x488b85d0fbff	            mov rax, qword [rbp - 0x430]	      3745	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_44
0x6b91	          0x4889d6	                            mov rsi, rdx	      3745	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_44
0x6b94	          0x4889c7	                            mov rdi, rax	      3745	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_44
0x6b97	      0xe800000000	                          call 0x4006bdc	      3745	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_44
0x6b9c	    0x488b85d0fbff	            mov rax, qword [rbp - 0x430]	      3746	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_45
0x6ba3	      0xbe01040000	                          mov esi, 0x401	      3746	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_45
0x6ba8	          0x4889c7	                            mov rdi, rax	      3746	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_45
0x6bab	      0xe800000000	                          call 0x4006bf0	      3746	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_45
0x6bb0	    0x488b85d0fbff	            mov rax, qword [rbp - 0x430]	      3750	buffer.c	FUNCTION_61	CALL_46
0x6bb7	      0xbe00000000	                              mov esi, 0	      3750	buffer.c	FUNCTION_61	CALL_46
0x6bbc	          0x4889c7	                            mov rdi, rax	      3750	buffer.c	FUNCTION_61	CALL_46
0x6bbf	      0xe831000000	                      call sym.ti_change	      3750	buffer.c	FUNCTION_61	CALL_46
0x6bc4	     0x985b4fbffff	             or dword [rbp - 0x44c], eax	      3750	buffer.c	FUNCTION_61	CALL_46
0x6bca	    0x83bdb4fbffff	              cmp dword [rbp - 0x44c], 0	      3752	buffer.c	FUNCTION_61	IF_26
0x6bd1	            0x7408	                            je 0x4006c1b	      3752	buffer.c	FUNCTION_61	IF_26
0x6bd3	      0xe800000000	                          call 0x4006c18	      3753	buffer.c	FUNCTION_61	CALL_47
0x6bd8	            0xeb01	                           jmp 0x4006c1b	      3753	buffer.c	FUNCTION_61	CALL_47
0x6bda	              0x90	                                     nop	      3558	buffer.c	FUNCTION_61	IF_2
0x6bdb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3754	buffer.c	FUNCTION_61
0x6bdf	    0x644833042528	                xor rax, qword fs:[0x28]	      3754	buffer.c	FUNCTION_61
0x6be8	            0x7405	                            je 0x4006c2f	      3754	buffer.c	FUNCTION_61
0x6bea	      0xe800000000	                          call 0x4006c2f	      3754	buffer.c	FUNCTION_61
0x6bef	        0x488b5df8	                mov rbx, qword [rbp - 8]	      3754	buffer.c	FUNCTION_61
0x6bf3	              0xc9	                                   leave	      3754	buffer.c	FUNCTION_61
0x6bf4	              0xc3	                                     ret	      3754	buffer.c	FUNCTION_61
buflist_setfpos	FOR,1:WHILE,0:ELSE,2:functions,0:IF,10:CALL,5:SWITCH,0:DO,0	129
0x48ff	              0x55	                                push rbp	      2757	buffer.c	FUNCTION_39
0x4900	          0x4889e5	                            mov rbp, rsp	      2757	buffer.c	FUNCTION_39
0x4903	        0x4883ec30	                           sub rsp, 0x30	      2757	buffer.c	FUNCTION_39
0x4907	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2757	buffer.c	FUNCTION_39
0x490b	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2757	buffer.c	FUNCTION_39
0x490f	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2757	buffer.c	FUNCTION_39
0x4913	          0x894dd4	             mov dword [rbp - 0x2c], ecx	      2757	buffer.c	FUNCTION_39
0x4916	        0x448945d0	             mov dword [rbp - 0x30], r8d	      2757	buffer.c	FUNCTION_39
0x491a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2760	buffer.c	FUNCTION_39	FOR_1
0x491e	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      2760	buffer.c	FUNCTION_39	FOR_1
0x4925	        0x488945f8	                mov qword [rbp - 8], rax	      2760	buffer.c	FUNCTION_39	FOR_1
0x4929	            0xeb19	                           jmp 0x4004984	      2760	buffer.c	FUNCTION_39	FOR_1
0x492b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2761	buffer.c	FUNCTION_39	FOR_1	IF_1
0x492f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2761	buffer.c	FUNCTION_39	FOR_1	IF_1
0x4933	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      2761	buffer.c	FUNCTION_39	FOR_1	IF_1
0x4937	            0x7414	                            je 0x400498d	      2761	buffer.c	FUNCTION_39	FOR_1	IF_1
0x4939	        0x488b45f8	                mov rax, qword [rbp - 8]	      2760	buffer.c	FUNCTION_39	FOR_1
0x493d	          0x488b00	                    mov rax, qword [rax]	      2760	buffer.c	FUNCTION_39	FOR_1
0x4940	        0x488945f8	                mov qword [rbp - 8], rax	      2760	buffer.c	FUNCTION_39	FOR_1
0x4944	      0x48837df800	                  cmp qword [rbp - 8], 0	      2760	buffer.c	FUNCTION_39	FOR_1
0x4949	            0x75e0	                           jne 0x400496b	      2760	buffer.c	FUNCTION_39	FOR_1
0x494b	            0xeb01	                           jmp 0x400498e	      2760	buffer.c	FUNCTION_39	FOR_1
0x494d	              0x90	                                     nop	      2762	buffer.c	FUNCTION_39	FOR_1	IF_1
0x494e	      0x48837df800	                  cmp qword [rbp - 8], 0	      2763	buffer.c	FUNCTION_39	IF_2
0x4953	            0x753d	                           jne 0x40049d2	      2763	buffer.c	FUNCTION_39	IF_2
0x4955	      0xbf08020000	                          mov edi, 0x208	      2766	buffer.c	FUNCTION_39	IF_2	CALL_1
0x495a	      0xe800000000	                          call 0x400499f	      2766	buffer.c	FUNCTION_39	IF_2	CALL_1
0x495f	        0x488945f8	                mov qword [rbp - 8], rax	      2766	buffer.c	FUNCTION_39	IF_2	CALL_1
0x4963	      0x48837df800	                  cmp qword [rbp - 8], 0	      2767	buffer.c	FUNCTION_39	IF_2	IF_3
0x4968	     0xf8477010000	                            je 0x4004b25	      2767	buffer.c	FUNCTION_39	IF_2	IF_3
0x496e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2769	buffer.c	FUNCTION_39	IF_2
0x4972	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2769	buffer.c	FUNCTION_39	IF_2
0x4976	        0x48895010	             mov qword [rax + 0x10], rdx	      2769	buffer.c	FUNCTION_39	IF_2
0x497a	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2770	buffer.c	FUNCTION_39	IF_2	IF_4
0x497f	     0xf8592000000	                           jne 0x4004a57	      2770	buffer.c	FUNCTION_39	IF_2	IF_4
0x4985	    0x48c745d80100	               mov qword [rbp - 0x28], 1	      2771	buffer.c	FUNCTION_39	IF_2	IF_4
0x498d	      0xe985000000	                           jmp 0x4004a57	      2771	buffer.c	FUNCTION_39	IF_2	IF_4
0x4992	        0x488b45f8	                mov rax, qword [rbp - 8]	      2776	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x4996	        0x488b4008	                mov rax, qword [rax + 8]	      2776	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x499a	          0x4885c0	                           test rax, rax	      2776	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x499d	            0x7414	                            je 0x40049f3	      2776	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x499f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2777	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x49a3	        0x488b4008	                mov rax, qword [rax + 8]	      2777	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x49a7	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2777	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x49ab	          0x488b12	                    mov rdx, qword [rdx]	      2777	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x49ae	          0x488910	                    mov qword [rax], rdx	      2777	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x49b1	            0xeb12	                           jmp 0x4004a05	      2777	buffer.c	FUNCTION_39	ELSE_1	IF_5
0x49b3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2779	buffer.c	FUNCTION_39	ELSE_1	ELSE_2
0x49b7	          0x488b10	                    mov rdx, qword [rax]	      2779	buffer.c	FUNCTION_39	ELSE_1	ELSE_2
0x49ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2779	buffer.c	FUNCTION_39	ELSE_1	ELSE_2
0x49be	    0x488990280100	            mov qword [rax + 0x128], rdx	      2779	buffer.c	FUNCTION_39	ELSE_1	ELSE_2
0x49c5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2780	buffer.c	FUNCTION_39	ELSE_1	IF_6
0x49c9	          0x488b00	                    mov rax, qword [rax]	      2780	buffer.c	FUNCTION_39	ELSE_1	IF_6
0x49cc	          0x4885c0	                           test rax, rax	      2780	buffer.c	FUNCTION_39	ELSE_1	IF_6
0x49cf	            0x7413	                            je 0x4004a24	      2780	buffer.c	FUNCTION_39	ELSE_1	IF_6
0x49d1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2781	buffer.c	FUNCTION_39	ELSE_1	IF_6
0x49d5	          0x488b00	                    mov rax, qword [rax]	      2781	buffer.c	FUNCTION_39	ELSE_1	IF_6
0x49d8	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2781	buffer.c	FUNCTION_39	ELSE_1	IF_6
0x49dc	        0x488b5208	                mov rdx, qword [rdx + 8]	      2781	buffer.c	FUNCTION_39	ELSE_1	IF_6
0x49e0	        0x48895008	                mov qword [rax + 8], rdx	      2781	buffer.c	FUNCTION_39	ELSE_1	IF_6
0x49e4	        0x837dd000	               cmp dword [rbp - 0x30], 0	      2782	buffer.c	FUNCTION_39	ELSE_1	IF_7
0x49e8	            0x742d	                            je 0x4004a57	      2782	buffer.c	FUNCTION_39	ELSE_1	IF_7
0x49ea	        0x488b45f8	                mov rax, qword [rbp - 8]	      2782	buffer.c	FUNCTION_39	ELSE_1	IF_7
0x49ee	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2782	buffer.c	FUNCTION_39	ELSE_1	IF_7
0x49f1	            0x85c0	                           test eax, eax	      2782	buffer.c	FUNCTION_39	ELSE_1	IF_7
0x49f3	            0x7422	                            je 0x4004a57	      2782	buffer.c	FUNCTION_39	ELSE_1	IF_7
0x49f5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2784	buffer.c	FUNCTION_39	ELSE_1	IF_7	CALL_2
0x49f9	        0x4883c030	                           add rax, 0x30	      2784	buffer.c	FUNCTION_39	ELSE_1	IF_7	CALL_2
0x49fd	          0x4889c7	                            mov rdi, rax	      2784	buffer.c	FUNCTION_39	ELSE_1	IF_7	CALL_2
0x4a00	      0xe800000000	                          call 0x4004a45	      2784	buffer.c	FUNCTION_39	ELSE_1	IF_7	CALL_2
0x4a05	        0x488b45f8	                mov rax, qword [rbp - 8]	      2786	buffer.c	FUNCTION_39	ELSE_1	IF_7	CALL_3
0x4a09	    0x4805f0010000	                          add rax, 0x1f0	      2786	buffer.c	FUNCTION_39	ELSE_1	IF_7	CALL_3
0x4a0f	          0x4889c7	                            mov rdi, rax	      2786	buffer.c	FUNCTION_39	ELSE_1	IF_7	CALL_3
0x4a12	      0xe800000000	                          call 0x4004a57	      2786	buffer.c	FUNCTION_39	ELSE_1	IF_7	CALL_3
0x4a17	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2790	buffer.c	FUNCTION_39	IF_8
0x4a1c	            0x7416	                            je 0x4004a74	      2790	buffer.c	FUNCTION_39	IF_8
0x4a1e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2792	buffer.c	FUNCTION_39	IF_8
0x4a22	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2792	buffer.c	FUNCTION_39	IF_8
0x4a26	        0x48895018	             mov qword [rax + 0x18], rdx	      2792	buffer.c	FUNCTION_39	IF_8
0x4a2a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2793	buffer.c	FUNCTION_39	IF_8
0x4a2e	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2793	buffer.c	FUNCTION_39	IF_8
0x4a31	          0x895020	             mov dword [rax + 0x20], edx	      2793	buffer.c	FUNCTION_39	IF_8
0x4a34	        0x837dd000	               cmp dword [rbp - 0x30], 0	      2795	buffer.c	FUNCTION_39	IF_9
0x4a38	            0x7460	                            je 0x4004ada	      2795	buffer.c	FUNCTION_39	IF_9
0x4a3a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2798	buffer.c	FUNCTION_39	IF_9	CALL_4
0x4a3e	        0x488d5030	                   lea rdx, [rax + 0x30]	      2798	buffer.c	FUNCTION_39	IF_9	CALL_4
0x4a42	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2798	buffer.c	FUNCTION_39	IF_9	CALL_4
0x4a46	    0x4805b0010000	                          add rax, 0x1b0	      2798	buffer.c	FUNCTION_39	IF_9	CALL_4
0x4a4c	          0x4889d6	                            mov rsi, rdx	      2798	buffer.c	FUNCTION_39	IF_9	CALL_4
0x4a4f	          0x4889c7	                            mov rdi, rax	      2798	buffer.c	FUNCTION_39	IF_9	CALL_4
0x4a52	      0xe800000000	                          call 0x4004a97	      2798	buffer.c	FUNCTION_39	IF_9	CALL_4
0x4a57	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2800	buffer.c	FUNCTION_39	IF_9
0x4a5b	     0xfb680200100	          movzx eax, byte [rax + 0x120] 	      2800	buffer.c	FUNCTION_39	IF_9
0x4a62	           0xfbed0	                           movsx edx, al	      2800	buffer.c	FUNCTION_39	IF_9
0x4a65	        0x488b45f8	                mov rax, qword [rbp - 8]	      2800	buffer.c	FUNCTION_39	IF_9
0x4a69	    0x8990e8010000	            mov dword [rax + 0x1e8], edx	      2800	buffer.c	FUNCTION_39	IF_9
0x4a6f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2801	buffer.c	FUNCTION_39	IF_9	CALL_5
0x4a73	    0x488d90f00100	                  lea rdx, [rax + 0x1f0]	      2801	buffer.c	FUNCTION_39	IF_9	CALL_5
0x4a7a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2801	buffer.c	FUNCTION_39	IF_9	CALL_5
0x4a7e	    0x480508010000	                          add rax, 0x108	      2801	buffer.c	FUNCTION_39	IF_9	CALL_5
0x4a84	          0x4889d6	                            mov rsi, rdx	      2801	buffer.c	FUNCTION_39	IF_9	CALL_5
0x4a87	          0x4889c7	                            mov rdi, rax	      2801	buffer.c	FUNCTION_39	IF_9	CALL_5
0x4a8a	      0xe800000000	                          call 0x4004acf	      2801	buffer.c	FUNCTION_39	IF_9	CALL_5
0x4a8f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2803	buffer.c	FUNCTION_39	IF_9
0x4a93	    0xc74028010000	               mov dword [rax + 0x28], 1	      2803	buffer.c	FUNCTION_39	IF_9
0x4a9a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2807	buffer.c	FUNCTION_39
0x4a9e	    0x488b90280100	           mov rdx, qword [rax + 0x128] 	      2807	buffer.c	FUNCTION_39
0x4aa5	        0x488b45f8	                mov rax, qword [rbp - 8]	      2807	buffer.c	FUNCTION_39
0x4aa9	          0x488910	                    mov qword [rax], rdx	      2807	buffer.c	FUNCTION_39
0x4aac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2808	buffer.c	FUNCTION_39
0x4ab0	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2808	buffer.c	FUNCTION_39
0x4ab4	    0x488990280100	            mov qword [rax + 0x128], rdx	      2808	buffer.c	FUNCTION_39
0x4abb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2809	buffer.c	FUNCTION_39
0x4abf	    0x48c740080000	                  mov qword [rax + 8], 0	      2809	buffer.c	FUNCTION_39
0x4ac7	        0x488b45f8	                mov rax, qword [rbp - 8]	      2810	buffer.c	FUNCTION_39	IF_10
0x4acb	          0x488b00	                    mov rax, qword [rax]	      2810	buffer.c	FUNCTION_39	IF_10
0x4ace	          0x4885c0	                           test rax, rax	      2810	buffer.c	FUNCTION_39	IF_10
0x4ad1	            0x7415	                            je 0x4004b28	      2810	buffer.c	FUNCTION_39	IF_10
0x4ad3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2811	buffer.c	FUNCTION_39	IF_10
0x4ad7	          0x488b00	                    mov rax, qword [rax]	      2811	buffer.c	FUNCTION_39	IF_10
0x4ada	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2811	buffer.c	FUNCTION_39	IF_10
0x4ade	        0x48895008	                mov qword [rax + 8], rdx	      2811	buffer.c	FUNCTION_39	IF_10
0x4ae2	              0x90	                                     nop	      2813	buffer.c	FUNCTION_39
0x4ae3	            0xeb03	                           jmp 0x4004b28	      2813	buffer.c	FUNCTION_39
0x4ae5	              0x90	                                     nop	      2768	buffer.c	FUNCTION_39	IF_2	IF_3
0x4ae6	            0xeb01	                           jmp 0x4004b29	      2768	buffer.c	FUNCTION_39	IF_2	IF_3
0x4ae8	              0x90	                                     nop	      2813	buffer.c	FUNCTION_39
0x4ae9	              0xc9	                                   leave	      2814	buffer.c	FUNCTION_39
0x4aea	              0xc3	                                     ret	      2814	buffer.c	FUNCTION_39
buf_spname	FOR,0:WHILE,0:ELSE,1:functions,0:IF,6:CALL,8:SWITCH,0:DO,0	70
0xb7e2	              0x55	                                push rbp	      5677	buffer.c	FUNCTION_84
0xb7e3	          0x4889e5	                            mov rbp, rsp	      5677	buffer.c	FUNCTION_84
0xb7e6	        0x4883ec30	                           sub rsp, 0x30	      5677	buffer.c	FUNCTION_84
0xb7ea	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5677	buffer.c	FUNCTION_84
0xb7ee	    0x64488b042528	                mov rax, qword fs:[0x28]	      5677	buffer.c	FUNCTION_84
0xb7f7	        0x488945f8	                mov qword [rbp - 8], rax	      5677	buffer.c	FUNCTION_84
0xb7fb	            0x31c0	                            xor eax, eax	      5677	buffer.c	FUNCTION_84
0xb7fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5679	buffer.c	FUNCTION_84	IF_1	CALL_1
0xb801	          0x4889c7	                            mov rdi, rax	      5679	buffer.c	FUNCTION_84	IF_1	CALL_1
0xb804	      0xe800000000	                          call 0x400b849	      5679	buffer.c	FUNCTION_84	IF_1	CALL_1
0xb809	            0x85c0	                           test eax, eax	      5679	buffer.c	FUNCTION_84	IF_1	CALL_1
0xb80b	            0x7451	                            je 0x400b89e	      5679	buffer.c	FUNCTION_84	IF_1	CALL_1
0xb80d	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0xb811	        0x488d4de8	                   lea rcx, [rbp - 0x18]	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0xb815	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0xb819	          0x4889ce	                            mov rsi, rcx	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0xb81c	          0x4889c7	                            mov rdi, rax	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0xb81f	      0xe800000000	                          call 0x400b864	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0xb824	          0x83f801	                              cmp eax, 1	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0xb827	            0x7524	                           jne 0x400b88d	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0xb829	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0xb82d	    0x488b80501900	          mov rax, qword [rax + 0x1950] 	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0xb834	          0x4885c0	                           test rax, rax	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0xb837	            0x7414	                            je 0x400b88d	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0xb839	    0x488b05000000	            mov rax, qword [0x0400b880] 	      5689	buffer.c	FUNCTION_84	IF_1	CALL_3
0xb840	          0x4889c7	                            mov rdi, rax	      5689	buffer.c	FUNCTION_84	IF_1	CALL_3
0xb843	      0xe800000000	                          call 0x400b888	      5689	buffer.c	FUNCTION_84	IF_1	CALL_3
0xb848	      0xe990000000	                           jmp 0x400b91d	      5689	buffer.c	FUNCTION_84	IF_1	CALL_3
0xb84d	    0x488b05000000	            mov rax, qword [0x0400b894] 	      5691	buffer.c	FUNCTION_84	IF_1	CALL_4
0xb854	          0x4889c7	                            mov rdi, rax	      5691	buffer.c	FUNCTION_84	IF_1	CALL_4
0xb857	      0xe800000000	                          call 0x400b89c	      5691	buffer.c	FUNCTION_84	IF_1	CALL_4
0xb85c	            0xeb7f	                           jmp 0x400b91d	      5691	buffer.c	FUNCTION_84	IF_1	CALL_4
0xb85e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5697	buffer.c	FUNCTION_84	IF_3	CALL_5
0xb862	          0x4889c7	                            mov rdi, rax	      5697	buffer.c	FUNCTION_84	IF_3	CALL_5
0xb865	      0xe800000000	                          call 0x400b8aa	      5697	buffer.c	FUNCTION_84	IF_3	CALL_5
0xb86a	            0x85c0	                           test eax, eax	      5697	buffer.c	FUNCTION_84	IF_3	CALL_5
0xb86c	            0x744e	                            je 0x400b8fc	      5697	buffer.c	FUNCTION_84	IF_3	CALL_5
0xb86e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5700	buffer.c	FUNCTION_84	IF_3	IF_4
0xb872	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      5700	buffer.c	FUNCTION_84	IF_3	IF_4
0xb879	          0x4885c0	                           test rax, rax	      5700	buffer.c	FUNCTION_84	IF_3	IF_4
0xb87c	            0x7415	                            je 0x400b8d3	      5700	buffer.c	FUNCTION_84	IF_3	IF_4
0xb87e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5701	buffer.c	FUNCTION_84	IF_3	CALL_6
0xb882	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      5701	buffer.c	FUNCTION_84	IF_3	CALL_6
0xb889	          0x4889c7	                            mov rdi, rax	      5701	buffer.c	FUNCTION_84	IF_3	CALL_6
0xb88c	      0xe800000000	                          call 0x400b8d1	      5701	buffer.c	FUNCTION_84	IF_3	CALL_6
0xb891	            0xeb4a	                           jmp 0x400b91d	      5701	buffer.c	FUNCTION_84	IF_3	CALL_6
0xb893	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5703	buffer.c	FUNCTION_84	IF_3	IF_5
0xb897	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      5703	buffer.c	FUNCTION_84	IF_3	IF_5
0xb89e	          0x4885c0	                           test rax, rax	      5703	buffer.c	FUNCTION_84	IF_3	IF_5
0xb8a1	            0x740d	                            je 0x400b8f0	      5703	buffer.c	FUNCTION_84	IF_3	IF_5
0xb8a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5704	buffer.c	FUNCTION_84	IF_3	IF_5
0xb8a7	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      5704	buffer.c	FUNCTION_84	IF_3	IF_5
0xb8ae	            0xeb2d	                           jmp 0x400b91d	      5704	buffer.c	FUNCTION_84	IF_3	IF_5
0xb8b0	      0xbf00000000	                              mov edi, 0	      5705	buffer.c	FUNCTION_84	IF_3	CALL_7
0xb8b5	      0xe800000000	                          call 0x400b8fa	      5705	buffer.c	FUNCTION_84	IF_3	CALL_7
0xb8ba	            0xeb21	                           jmp 0x400b91d	      5705	buffer.c	FUNCTION_84	IF_3	CALL_7
0xb8bc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5708	buffer.c	FUNCTION_84	IF_6
0xb8c0	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      5708	buffer.c	FUNCTION_84	IF_6
0xb8c7	          0x4885c0	                           test rax, rax	      5708	buffer.c	FUNCTION_84	IF_6
0xb8ca	            0x750c	                           jne 0x400b918	      5708	buffer.c	FUNCTION_84	IF_6
0xb8cc	      0xbf00000000	                              mov edi, 0	      5709	buffer.c	FUNCTION_84	CALL_8
0xb8d1	      0xe800000000	                          call 0x400b916	      5709	buffer.c	FUNCTION_84	CALL_8
0xb8d6	            0xeb05	                           jmp 0x400b91d	      5709	buffer.c	FUNCTION_84	CALL_8
0xb8d8	      0xb800000000	                              mov eax, 0	      5710	buffer.c	FUNCTION_84
0xb8dd	        0x488b75f8	                mov rsi, qword [rbp - 8]	      5711	buffer.c	FUNCTION_84
0xb8e1	    0x644833342528	                xor rsi, qword fs:[0x28]	      5711	buffer.c	FUNCTION_84
0xb8ea	            0x7405	                            je 0x400b931	      5711	buffer.c	FUNCTION_84
0xb8ec	      0xe800000000	                          call 0x400b931	      5711	buffer.c	FUNCTION_84
0xb8f1	              0xc9	                                   leave	      5711	buffer.c	FUNCTION_84
0xb8f2	              0xc3	                                     ret	      5711	buffer.c	FUNCTION_84
col_print	FOR,0:WHILE,0:ELSE,1:functions,0:IF,1:CALL,2:SWITCH,0:DO,0	32
0x61c7	              0x55	                                push rbp	      3521	buffer.c	FUNCTION_60
0x61c8	          0x4889e5	                            mov rbp, rsp	      3521	buffer.c	FUNCTION_60
0x61cb	        0x4883ec20	                           sub rsp, 0x20	      3521	buffer.c	FUNCTION_60
0x61cf	        0x48897df8	                mov qword [rbp - 8], rdi	      3521	buffer.c	FUNCTION_60
0x61d3	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3521	buffer.c	FUNCTION_60
0x61d7	          0x8955ec	             mov dword [rbp - 0x14], edx	      3521	buffer.c	FUNCTION_60
0x61da	          0x894de8	             mov dword [rbp - 0x18], ecx	      3521	buffer.c	FUNCTION_60
0x61dd	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3522	buffer.c	FUNCTION_60	IF_1
0x61e0	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      3522	buffer.c	FUNCTION_60	IF_1
0x61e3	            0x7521	                           jne 0x4006246	      3522	buffer.c	FUNCTION_60	IF_1
0x61e5	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      3523	buffer.c	FUNCTION_60	CALL_1
0x61e8	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      3523	buffer.c	FUNCTION_60	CALL_1
0x61ec	        0x488b45f8	                mov rax, qword [rbp - 8]	      3523	buffer.c	FUNCTION_60	CALL_1
0x61f0	            0x89d1	                            mov ecx, edx	      3523	buffer.c	FUNCTION_60	CALL_1
0x61f2	      0xba00000000	                              mov edx, 0	      3523	buffer.c	FUNCTION_60	CALL_1
0x61f7	          0x4889c7	                            mov rdi, rax	      3523	buffer.c	FUNCTION_60	CALL_1
0x61fa	      0xb800000000	                              mov eax, 0	      3523	buffer.c	FUNCTION_60	CALL_1
0x61ff	      0xe800000000	                          call 0x4006244	      3523	buffer.c	FUNCTION_60	CALL_1
0x6204	            0xeb25	                           jmp 0x400626b	      3526	buffer.c	FUNCTION_60
0x6206	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      3525	buffer.c	FUNCTION_60	CALL_2
0x6209	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      3525	buffer.c	FUNCTION_60	CALL_2
0x620c	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      3525	buffer.c	FUNCTION_60	CALL_2
0x6210	        0x488b45f8	                mov rax, qword [rbp - 8]	      3525	buffer.c	FUNCTION_60	CALL_2
0x6214	          0x4189c8	                            mov r8d, ecx	      3525	buffer.c	FUNCTION_60	CALL_2
0x6217	            0x89d1	                            mov ecx, edx	      3525	buffer.c	FUNCTION_60	CALL_2
0x6219	      0xba00000000	                              mov edx, 0	      3525	buffer.c	FUNCTION_60	CALL_2
0x621e	          0x4889c7	                            mov rdi, rax	      3525	buffer.c	FUNCTION_60	CALL_2
0x6221	      0xb800000000	                              mov eax, 0	      3525	buffer.c	FUNCTION_60	CALL_2
0x6226	      0xe800000000	                          call 0x400626b	      3525	buffer.c	FUNCTION_60	CALL_2
0x622b	              0x90	                                     nop	      3526	buffer.c	FUNCTION_60
0x622c	              0xc9	                                   leave	      3526	buffer.c	FUNCTION_60
0x622d	              0xc3	                                     ret	      3526	buffer.c	FUNCTION_60
sign_mark_adjust	FOR,1:WHILE,0:ELSE,2:functions,0:IF,3:CALL,0:SWITCH,0:DO,0	49
0xc2e0	              0x55	                                push rbp	      6129	buffer.c	FUNCTION_100
0xc2e1	          0x4889e5	                            mov rbp, rsp	      6129	buffer.c	FUNCTION_100
0xc2e4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6129	buffer.c	FUNCTION_100
0xc2e8	        0x488975e0	             mov qword [rbp - 0x20], rsi	      6129	buffer.c	FUNCTION_100
0xc2ec	        0x488955d8	             mov qword [rbp - 0x28], rdx	      6129	buffer.c	FUNCTION_100
0xc2f0	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      6129	buffer.c	FUNCTION_100
0xc2f4	    0x488b05000000	            mov rax, qword [0x0400c33b] 	      6132	buffer.c	FUNCTION_100	FOR_1
0xc2fb	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      6132	buffer.c	FUNCTION_100	FOR_1
0xc302	        0x488945f8	                mov qword [rbp - 8], rax	      6132	buffer.c	FUNCTION_100	FOR_1
0xc306	            0xeb7e	                           jmp 0x400c3c6	      6132	buffer.c	FUNCTION_100	FOR_1
0xc308	        0x488b45f8	                mov rax, qword [rbp - 8]	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0xc30c	        0x488b4008	                mov rax, qword [rax + 8]	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0xc310	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0xc314	            0x7c3f	                            jl 0x400c395	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0xc316	        0x488b45f8	                mov rax, qword [rbp - 8]	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0xc31a	        0x488b4008	                mov rax, qword [rax + 8]	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0xc31e	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0xc322	            0x7f31	                            jg 0x400c395	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0xc324	    0x48817dd8ffff	     cmp qword [rbp - 0x28], 0x7fffffff 	      6136	buffer.c	FUNCTION_100	FOR_1	IF_1	IF_2
0xc32c	            0x750e	                           jne 0x400c37c	      6136	buffer.c	FUNCTION_100	FOR_1	IF_1	IF_2
0xc32e	        0x488b45f8	                mov rax, qword [rbp - 8]	      6137	buffer.c	FUNCTION_100	FOR_1	IF_1	IF_2
0xc332	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6137	buffer.c	FUNCTION_100	FOR_1	IF_1	IF_2
0xc336	        0x48895008	                mov qword [rax + 8], rdx	      6137	buffer.c	FUNCTION_100	FOR_1	IF_1	IF_2
0xc33a	            0xeb3e	                           jmp 0x400c3ba	      6136	buffer.c	FUNCTION_100	FOR_1	IF_1	IF_2
0xc33c	        0x488b45f8	                mov rax, qword [rbp - 8]	      6139	buffer.c	FUNCTION_100	FOR_1	IF_1	ELSE_1
0xc340	        0x488b5008	                mov rdx, qword [rax + 8]	      6139	buffer.c	FUNCTION_100	FOR_1	IF_1	ELSE_1
0xc344	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6139	buffer.c	FUNCTION_100	FOR_1	IF_1	ELSE_1
0xc348	          0x4801c2	                            add rdx, rax	      6139	buffer.c	FUNCTION_100	FOR_1	IF_1	ELSE_1
0xc34b	        0x488b45f8	                mov rax, qword [rbp - 8]	      6139	buffer.c	FUNCTION_100	FOR_1	IF_1	ELSE_1
0xc34f	        0x48895008	                mov qword [rax + 8], rdx	      6139	buffer.c	FUNCTION_100	FOR_1	IF_1	ELSE_1
0xc353	            0xeb25	                           jmp 0x400c3ba	      6136	buffer.c	FUNCTION_100	FOR_1	IF_1	IF_2
0xc355	        0x488b45f8	                mov rax, qword [rbp - 8]	      6141	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0xc359	        0x488b4008	                mov rax, qword [rax + 8]	      6141	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0xc35d	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6141	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0xc361	            0x7e17	                           jle 0x400c3ba	      6141	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0xc363	        0x488b45f8	                mov rax, qword [rbp - 8]	      6142	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0xc367	        0x488b5008	                mov rdx, qword [rax + 8]	      6142	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0xc36b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6142	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0xc36f	          0x4801c2	                            add rdx, rax	      6142	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0xc372	        0x488b45f8	                mov rax, qword [rbp - 8]	      6142	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0xc376	        0x48895008	                mov qword [rax + 8], rdx	      6142	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0xc37a	        0x488b45f8	                mov rax, qword [rbp - 8]	      6132	buffer.c	FUNCTION_100	FOR_1
0xc37e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6132	buffer.c	FUNCTION_100	FOR_1
0xc382	        0x488945f8	                mov qword [rbp - 8], rax	      6132	buffer.c	FUNCTION_100	FOR_1
0xc386	      0x48837df800	                  cmp qword [rbp - 8], 0	      6132	buffer.c	FUNCTION_100	FOR_1
0xc38b	     0xf8577ffffff	                           jne 0x400c348	      6132	buffer.c	FUNCTION_100	FOR_1
0xc391	              0x90	                                     nop	      6144	buffer.c	FUNCTION_100
0xc392	              0x5d	                                 pop rbp	      6144	buffer.c	FUNCTION_100
0xc393	              0xc3	                                     ret	      6144	buffer.c	FUNCTION_100
buf_change_sign_type	FOR,1:WHILE,0:ELSE,0:functions,0:IF,1:CALL,0:SWITCH,0:DO,0	27
0xbcfa	              0x55	                                push rbp	      5894	buffer.c	FUNCTION_90
0xbcfb	          0x4889e5	                            mov rbp, rsp	      5894	buffer.c	FUNCTION_90
0xbcfe	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5894	buffer.c	FUNCTION_90
0xbd02	          0x8975e4	             mov dword [rbp - 0x1c], esi	      5894	buffer.c	FUNCTION_90
0xbd05	          0x8955e0	             mov dword [rbp - 0x20], edx	      5894	buffer.c	FUNCTION_90
0xbd08	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5897	buffer.c	FUNCTION_90	FOR_1
0xbd0c	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      5897	buffer.c	FUNCTION_90	FOR_1
0xbd13	        0x488945f8	                mov qword [rbp - 8], rax	      5897	buffer.c	FUNCTION_90	FOR_1
0xbd17	            0xeb2b	                           jmp 0x400bd84	      5897	buffer.c	FUNCTION_90	FOR_1
0xbd19	        0x488b45f8	                mov rax, qword [rbp - 8]	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0xbd1d	            0x8b00	                    mov eax, dword [rax]	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0xbd1f	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0xbd22	            0x7514	                           jne 0x400bd78	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0xbd24	        0x488b45f8	                mov rax, qword [rbp - 8]	      5901	buffer.c	FUNCTION_90	FOR_1	IF_1
0xbd28	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      5901	buffer.c	FUNCTION_90	FOR_1	IF_1
0xbd2b	          0x895010	             mov dword [rax + 0x10], edx	      5901	buffer.c	FUNCTION_90	FOR_1	IF_1
0xbd2e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5902	buffer.c	FUNCTION_90	FOR_1	IF_1
0xbd32	        0x488b4008	                mov rax, qword [rax + 8]	      5902	buffer.c	FUNCTION_90	FOR_1	IF_1
0xbd36	            0xeb18	                           jmp 0x400bd90	      5902	buffer.c	FUNCTION_90	FOR_1	IF_1
0xbd38	        0x488b45f8	                mov rax, qword [rbp - 8]	      5897	buffer.c	FUNCTION_90	FOR_1
0xbd3c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5897	buffer.c	FUNCTION_90	FOR_1
0xbd40	        0x488945f8	                mov qword [rbp - 8], rax	      5897	buffer.c	FUNCTION_90	FOR_1
0xbd44	      0x48837df800	                  cmp qword [rbp - 8], 0	      5897	buffer.c	FUNCTION_90	FOR_1
0xbd49	            0x75ce	                           jne 0x400bd59	      5897	buffer.c	FUNCTION_90	FOR_1
0xbd4b	      0xb800000000	                              mov eax, 0	      5906	buffer.c	FUNCTION_90
0xbd50	              0x5d	                                 pop rbp	      5907	buffer.c	FUNCTION_90
0xbd51	              0xc3	                                     ret	      5907	buffer.c	FUNCTION_90
switch_to_win_for_buf	FOR,0:WHILE,0:ELSE,1:functions,0:IF,2:CALL,5:SWITCH,0:DO,0	53
0xb8f3	              0x55	                                push rbp	      5730	buffer.c	FUNCTION_85
0xb8f4	          0x4889e5	                            mov rbp, rsp	      5730	buffer.c	FUNCTION_85
0xb8f7	        0x4883ec40	                           sub rsp, 0x40	      5730	buffer.c	FUNCTION_85
0xb8fb	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5730	buffer.c	FUNCTION_85
0xb8ff	        0x488975d0	             mov qword [rbp - 0x30], rsi	      5730	buffer.c	FUNCTION_85
0xb903	        0x488955c8	             mov qword [rbp - 0x38], rdx	      5730	buffer.c	FUNCTION_85
0xb907	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      5730	buffer.c	FUNCTION_85
0xb90b	    0x64488b042528	                mov rax, qword fs:[0x28]	      5730	buffer.c	FUNCTION_85
0xb914	        0x488945f8	                mov qword [rbp - 8], rax	      5730	buffer.c	FUNCTION_85
0xb918	            0x31c0	                            xor eax, eax	      5730	buffer.c	FUNCTION_85
0xb91a	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      5734	buffer.c	FUNCTION_85	IF_1	CALL_1
0xb91e	        0x488d4de8	                   lea rcx, [rbp - 0x18]	      5734	buffer.c	FUNCTION_85	IF_1	CALL_1
0xb922	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5734	buffer.c	FUNCTION_85	IF_1	CALL_1
0xb926	          0x4889ce	                            mov rsi, rcx	      5734	buffer.c	FUNCTION_85	IF_1	CALL_1
0xb929	          0x4889c7	                            mov rdi, rax	      5734	buffer.c	FUNCTION_85	IF_1	CALL_1
0xb92c	      0xe800000000	                          call 0x400b971	      5734	buffer.c	FUNCTION_85	IF_1	CALL_1
0xb931	            0x85c0	                           test eax, eax	      5734	buffer.c	FUNCTION_85	IF_1	CALL_1
0xb933	            0x7515	                           jne 0x400b98a	      5734	buffer.c	FUNCTION_85	IF_1	CALL_1
0xb935	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5735	buffer.c	FUNCTION_85	CALL_2
0xb939	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5735	buffer.c	FUNCTION_85	CALL_2
0xb93d	          0x4889d6	                            mov rsi, rdx	      5735	buffer.c	FUNCTION_85	CALL_2
0xb940	          0x4889c7	                            mov rdi, rax	      5735	buffer.c	FUNCTION_85	CALL_2
0xb943	      0xe800000000	                          call 0x400b988	      5735	buffer.c	FUNCTION_85	CALL_2
0xb948	            0xeb53	                           jmp 0x400b9dd	      5741	buffer.c	FUNCTION_85
0xb94a	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0xb94e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0xb952	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0xb956	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0xb95a	    0x41b801000000	                              mov r8d, 1	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0xb960	          0x4889c7	                            mov rdi, rax	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0xb963	      0xe800000000	                          call 0x400b9a8	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0xb968	            0x85c0	                           test eax, eax	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0xb96a	            0x7531	                           jne 0x400b9dd	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0xb96c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0xb970	          0x488b08	                    mov rcx, qword [rax]	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0xb973	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0xb977	          0x488b00	                    mov rax, qword [rax]	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0xb97a	      0xba01000000	                              mov edx, 1	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0xb97f	          0x4889ce	                            mov rsi, rcx	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0xb982	          0x4889c7	                            mov rdi, rax	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0xb985	      0xe800000000	                          call 0x400b9ca	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0xb98a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5739	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_5
0xb98e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5739	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_5
0xb992	          0x4889d6	                            mov rsi, rdx	      5739	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_5
0xb995	          0x4889c7	                            mov rdi, rax	      5739	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_5
0xb998	      0xe800000000	                          call 0x400b9dd	      5739	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_5
0xb99d	              0x90	                                     nop	      5741	buffer.c	FUNCTION_85
0xb99e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5741	buffer.c	FUNCTION_85
0xb9a2	    0x644833042528	                xor rax, qword fs:[0x28]	      5741	buffer.c	FUNCTION_85
0xb9ab	            0x7405	                            je 0x400b9f2	      5741	buffer.c	FUNCTION_85
0xb9ad	      0xe800000000	                          call 0x400b9f2	      5741	buffer.c	FUNCTION_85
0xb9b2	              0xc9	                                   leave	      5741	buffer.c	FUNCTION_85
0xb9b3	              0xc3	                                     ret	      5741	buffer.c	FUNCTION_85
set_buflisted	FOR,0:WHILE,0:ELSE,1:functions,0:IF,2:CALL,2:SWITCH,0:DO,0	31
0xc394	              0x55	                                push rbp	      6152	buffer.c	FUNCTION_101
0xc395	          0x4889e5	                            mov rbp, rsp	      6152	buffer.c	FUNCTION_101
0xc398	        0x4883ec10	                           sub rsp, 0x10	      6152	buffer.c	FUNCTION_101
0xc39c	          0x897dfc	                mov dword [rbp - 4], edi	      6152	buffer.c	FUNCTION_101
0xc39f	    0x488b05000000	            mov rax, qword [0x0400c3e6] 	      6153	buffer.c	FUNCTION_101	IF_1
0xc3a6	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      6153	buffer.c	FUNCTION_101	IF_1
0xc3ac	          0x3b45fc	                cmp eax, dword [rbp - 4]	      6153	buffer.c	FUNCTION_101	IF_1
0xc3af	            0x745e	                            je 0x400c44f	      6153	buffer.c	FUNCTION_101	IF_1
0xc3b1	    0x488b05000000	            mov rax, qword [0x0400c3f8] 	      6155	buffer.c	FUNCTION_101	IF_1
0xc3b8	          0x8b55fc	                mov edx, dword [rbp - 4]	      6155	buffer.c	FUNCTION_101	IF_1
0xc3bb	    0x899024140000	          mov dword [rax + 0x1424], edx 	      6155	buffer.c	FUNCTION_101	IF_1
0xc3c1	        0x837dfc00	                  cmp dword [rbp - 4], 0	      6156	buffer.c	FUNCTION_101	IF_1	IF_2
0xc3c5	            0x7425	                            je 0x400c42c	      6156	buffer.c	FUNCTION_101	IF_1	IF_2
0xc3c7	    0x488b05000000	            mov rax, qword [0x0400c40e] 	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0xc3ce	          0x4989c0	                             mov r8, rax	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0xc3d1	      0xb900000000	                              mov ecx, 0	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0xc3d6	      0xba00000000	                              mov edx, 0	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0xc3db	      0xbe00000000	                              mov esi, 0	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0xc3e0	      0xbf00000000	                              mov edi, 0	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0xc3e5	      0xe800000000	                          call 0x400c42a	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0xc3ea	            0xeb23	                           jmp 0x400c44f	      6161	buffer.c	FUNCTION_101
0xc3ec	    0x488b05000000	            mov rax, qword [0x0400c433] 	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0xc3f3	          0x4989c0	                             mov r8, rax	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0xc3f6	      0xb900000000	                              mov ecx, 0	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0xc3fb	      0xba00000000	                              mov edx, 0	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0xc400	      0xbe00000000	                              mov esi, 0	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0xc405	      0xbf01000000	                              mov edi, 1	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0xc40a	      0xe800000000	                          call 0x400c44f	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0xc40f	              0x90	                                     nop	      6161	buffer.c	FUNCTION_101
0xc410	              0xc9	                                   leave	      6161	buffer.c	FUNCTION_101
0xc411	              0xc3	                                     ret	      6161	buffer.c	FUNCTION_101
resettitle	FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,1:SWITCH,0:DO,0	10
0x6c94	              0x55	                                push rbp	      3782	buffer.c	FUNCTION_63
0x6c95	          0x4889e5	                            mov rbp, rsp	      3782	buffer.c	FUNCTION_63
0x6c98	    0x488b15000000	            mov rdx, qword [0x04006cdf] 	      3783	buffer.c	FUNCTION_63	CALL_1
0x6c9f	    0x488b05000000	            mov rax, qword [0x04006ce6] 	      3783	buffer.c	FUNCTION_63	CALL_1
0x6ca6	          0x4889d6	                            mov rsi, rdx	      3783	buffer.c	FUNCTION_63	CALL_1
0x6ca9	          0x4889c7	                            mov rdi, rax	      3783	buffer.c	FUNCTION_63	CALL_1
0x6cac	      0xe800000000	                          call 0x4006cf1	      3783	buffer.c	FUNCTION_63	CALL_1
0x6cb1	              0x90	                                     nop	      3784	buffer.c	FUNCTION_63
0x6cb2	              0x5d	                                 pop rbp	      3784	buffer.c	FUNCTION_63
0x6cb3	              0xc3	                                     ret	      3784	buffer.c	FUNCTION_63
buf_hashtab_remove	FOR,0:WHILE,0:ELSE,0:functions,0:IF,1:CALL,3:SWITCH,0:DO,0	25
0x902	              0x55	                                push rbp	       413	buffer.c	FUNCTION_7
0x903	          0x4889e5	                            mov rbp, rsp	       413	buffer.c	FUNCTION_7
0x906	        0x4883ec20	                           sub rsp, 0x20	       413	buffer.c	FUNCTION_7
0x90a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       413	buffer.c	FUNCTION_7
0x90e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       414	buffer.c	FUNCTION_7	CALL_1
0x912	    0x4805bc000000	                           add rax, 0xbc	       414	buffer.c	FUNCTION_7	CALL_1
0x918	          0x4889c6	                            mov rsi, rax	       414	buffer.c	FUNCTION_7	CALL_1
0x91b	      0xbf00000000	                              mov edi, 0	       414	buffer.c	FUNCTION_7	CALL_1
0x920	      0xe800000000	                          call 0x4000965	       414	buffer.c	FUNCTION_7	CALL_1
0x925	        0x488945f8	                mov qword [rbp - 8], rax	       414	buffer.c	FUNCTION_7	CALL_1
0x929	        0x488b45f8	                mov rax, qword [rbp - 8]	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x92d	        0x488b4008	                mov rax, qword [rax + 8]	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x931	          0x4885c0	                           test rax, rax	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x934	            0x7421	                            je 0x4000997	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x936	        0x488b45f8	                mov rax, qword [rbp - 8]	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x93a	        0x488b4008	                mov rax, qword [rax + 8]	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x93e	    0x483d00000000	                              cmp rax, 0	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x944	            0x7411	                            je 0x4000997	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x946	        0x488b45f8	                mov rax, qword [rbp - 8]	       417	buffer.c	FUNCTION_7	CALL_3
0x94a	          0x4889c6	                            mov rsi, rax	       417	buffer.c	FUNCTION_7	CALL_3
0x94d	      0xbf00000000	                              mov edi, 0	       417	buffer.c	FUNCTION_7	CALL_3
0x952	      0xe800000000	                          call 0x4000997	       417	buffer.c	FUNCTION_7	CALL_3
0x957	              0x90	                                     nop	       418	buffer.c	FUNCTION_7
0x958	              0xc9	                                   leave	       418	buffer.c	FUNCTION_7
0x959	              0xc3	                                     ret	       418	buffer.c	FUNCTION_7
wipe_buffer	FOR,0:WHILE,0:ELSE,0:functions,0:IF,3:CALL,3:SWITCH,0:DO,0	29
0xc627	              0x55	                                push rbp	      6228	buffer.c	FUNCTION_103
0xc628	          0x4889e5	                            mov rbp, rsp	      6228	buffer.c	FUNCTION_103
0xc62b	        0x4883ec10	                           sub rsp, 0x10	      6228	buffer.c	FUNCTION_103
0xc62f	        0x48897df8	                mov qword [rbp - 8], rdi	      6228	buffer.c	FUNCTION_103
0xc633	          0x8975f4	              mov dword [rbp - 0xc], esi	      6228	buffer.c	FUNCTION_103
0xc636	        0x488b45f8	                mov rax, qword [rbp - 8]	      6229	buffer.c	FUNCTION_103	IF_1
0xc63a	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      6229	buffer.c	FUNCTION_103	IF_1
0xc640	    0x8b1500000000	            mov edx, dword [0x0400c686] 	      6229	buffer.c	FUNCTION_103	IF_1
0xc646	          0x83ea01	                              sub edx, 1	      6229	buffer.c	FUNCTION_103	IF_1
0xc649	            0x39d0	                            cmp eax, edx	      6229	buffer.c	FUNCTION_103	IF_1
0xc64b	            0x750f	                           jne 0x400c69c	      6229	buffer.c	FUNCTION_103	IF_1
0xc64d	    0x8b0500000000	            mov eax, dword [0x0400c693] 	      6230	buffer.c	FUNCTION_103	IF_1
0xc653	          0x83e801	                              sub eax, 1	      6230	buffer.c	FUNCTION_103	IF_1
0xc656	    0x890500000000	            mov dword [0x0400c69c], eax 	      6230	buffer.c	FUNCTION_103	IF_1
0xc65c	        0x837df400	                cmp dword [rbp - 0xc], 0	      6232	buffer.c	FUNCTION_103	IF_2
0xc660	            0x7505	                           jne 0x400c6a7	      6232	buffer.c	FUNCTION_103	IF_2
0xc662	      0xe800000000	                          call 0x400c6a7	      6233	buffer.c	FUNCTION_103	CALL_1
0xc667	        0x488b45f8	                mov rax, qword [rbp - 8]	      6235	buffer.c	FUNCTION_103	CALL_2
0xc66b	      0xb900000000	                              mov ecx, 0	      6235	buffer.c	FUNCTION_103	CALL_2
0xc670	      0xba04000000	                              mov edx, 4	      6235	buffer.c	FUNCTION_103	CALL_2
0xc675	          0x4889c6	                            mov rsi, rax	      6235	buffer.c	FUNCTION_103	CALL_2
0xc678	      0xbf00000000	                              mov edi, 0	      6235	buffer.c	FUNCTION_103	CALL_2
0xc67d	      0xe800000000	                          call 0x400c6c2	      6235	buffer.c	FUNCTION_103	CALL_2
0xc682	        0x837df400	                cmp dword [rbp - 0xc], 0	      6237	buffer.c	FUNCTION_103	IF_3
0xc686	            0x7505	                           jne 0x400c6cd	      6237	buffer.c	FUNCTION_103	IF_3
0xc688	      0xe800000000	                          call 0x400c6cd	      6238	buffer.c	FUNCTION_103	CALL_3
0xc68d	              0x90	                                     nop	      6239	buffer.c	FUNCTION_103
0xc68e	              0xc9	                                   leave	      6239	buffer.c	FUNCTION_103
0xc68f	              0xc3	                                     ret	      6239	buffer.c	FUNCTION_103
empty_curbuf	FOR,0:WHILE,0:ELSE,0:functions,0:IF,4:CALL,8:SWITCH,0:DO,0	76
0x1c29	              0x55	                                push rbp	      1216	buffer.c	FUNCTION_18
0x1c2a	          0x4889e5	                            mov rbp, rsp	      1216	buffer.c	FUNCTION_18
0x1c2d	        0x4883ec40	                           sub rsp, 0x40	      1216	buffer.c	FUNCTION_18
0x1c31	          0x897dcc	             mov dword [rbp - 0x34], edi	      1216	buffer.c	FUNCTION_18
0x1c34	          0x8975c8	             mov dword [rbp - 0x38], esi	      1216	buffer.c	FUNCTION_18
0x1c37	          0x8955c4	             mov dword [rbp - 0x3c], edx	      1216	buffer.c	FUNCTION_18
0x1c3a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1216	buffer.c	FUNCTION_18
0x1c43	        0x488945f8	                mov qword [rbp - 8], rax	      1216	buffer.c	FUNCTION_18
0x1c47	            0x31c0	                            xor eax, eax	      1216	buffer.c	FUNCTION_18
0x1c49	    0x488b05000000	            mov rax, qword [0x04001c90] 	      1218	buffer.c	FUNCTION_18
0x1c50	        0x488945d8	             mov qword [rbp - 0x28], rax	      1218	buffer.c	FUNCTION_18
0x1c54	        0x837dc402	               cmp dword [rbp - 0x3c], 2	      1221	buffer.c	FUNCTION_18	IF_1
0x1c58	            0x751c	                           jne 0x4001cb6	      1221	buffer.c	FUNCTION_18	IF_1
0x1c5a	      0xbf00000000	                              mov edi, 0	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x1c5f	      0xe800000000	                          call 0x4001ca4	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x1c64	          0x4889c7	                            mov rdi, rax	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x1c67	      0xe800000000	                          call 0x4001cac	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x1c6c	      0xb800000000	                              mov eax, 0	      1224	buffer.c	FUNCTION_18	IF_1
0x1c71	      0xe9ca000000	                           jmp 0x4001d80	      1224	buffer.c	FUNCTION_18	IF_1
0x1c76	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1227	buffer.c	FUNCTION_18	CALL_3
0x1c7a	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1227	buffer.c	FUNCTION_18	CALL_3
0x1c7e	          0x4889d6	                            mov rsi, rdx	      1227	buffer.c	FUNCTION_18	CALL_3
0x1c81	          0x4889c7	                            mov rdi, rax	      1227	buffer.c	FUNCTION_18	CALL_3
0x1c84	      0xe800000000	                          call 0x4001cc9	      1227	buffer.c	FUNCTION_18	CALL_3
0x1c89	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1228	buffer.c	FUNCTION_18	IF_2
0x1c8d	            0x7411	                            je 0x4001ce0	      1228	buffer.c	FUNCTION_18	IF_2
0x1c8f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1230	buffer.c	FUNCTION_18	CALL_4
0x1c93	      0xbe01000000	                              mov esi, 1	      1230	buffer.c	FUNCTION_18	CALL_4
0x1c98	          0x4889c7	                            mov rdi, rax	      1230	buffer.c	FUNCTION_18	CALL_4
0x1c9b	      0xe800000000	                          call 0x4001ce0	      1230	buffer.c	FUNCTION_18	CALL_4
0x1ca0	      0xe800000000	                          call 0x4001ce5	      1232	buffer.c	FUNCTION_18	CALL_5
0x1ca5	    0x488b05000000	            mov rax, qword [0x04001cec] 	      1233	buffer.c	FUNCTION_18	CALL_6
0x1cac	        0x837dc800	               cmp dword [rbp - 0x38], 0	      1233	buffer.c	FUNCTION_18	CALL_6
0x1cb0	            0x7407	                            je 0x4001cf9	      1233	buffer.c	FUNCTION_18	CALL_6
0x1cb2	      0xba08000000	                              mov edx, 8	      1233	buffer.c	FUNCTION_18	CALL_6
0x1cb7	            0xeb05	                           jmp 0x4001cfe	      1233	buffer.c	FUNCTION_18	CALL_6
0x1cb9	      0xba00000000	                              mov edx, 0	      1233	buffer.c	FUNCTION_18	CALL_6
0x1cbe	        0x4883ec08	                              sub rsp, 8	      1233	buffer.c	FUNCTION_18	CALL_6
0x1cc2	              0x50	                                push rax	      1233	buffer.c	FUNCTION_18	CALL_6
0x1cc3	          0x4189d1	                            mov r9d, edx	      1233	buffer.c	FUNCTION_18	CALL_6
0x1cc6	    0x41b801000000	                              mov r8d, 1	      1233	buffer.c	FUNCTION_18	CALL_6
0x1ccc	      0xb900000000	                              mov ecx, 0	      1233	buffer.c	FUNCTION_18	CALL_6
0x1cd1	      0xba00000000	                              mov edx, 0	      1233	buffer.c	FUNCTION_18	CALL_6
0x1cd6	      0xbe00000000	                              mov esi, 0	      1233	buffer.c	FUNCTION_18	CALL_6
0x1cdb	      0xbf00000000	                              mov edi, 0	      1233	buffer.c	FUNCTION_18	CALL_6
0x1ce0	      0xe800000000	                          call 0x4001d25	      1233	buffer.c	FUNCTION_18	CALL_6
0x1ce5	        0x4883c410	                           add rsp, 0x10	      1233	buffer.c	FUNCTION_18	CALL_6
0x1ce9	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1233	buffer.c	FUNCTION_18	CALL_6
0x1cec	    0x488b05000000	            mov rax, qword [0x04001d33] 	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x1cf3	        0x483945d8	            cmp qword [rbp - 0x28], rax 	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x1cf7	            0x7434	                            je 0x4001d6d	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x1cf9	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x1cfd	          0x4889c7	                            mov rdi, rax	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x1d00	      0xe800000000	                          call 0x4001d45	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x1d05	            0x85c0	                           test eax, eax	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x1d07	            0x7424	                            je 0x4001d6d	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x1d09	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x1d0d	          0x8b4078	            mov eax, dword [rax + 0x78] 	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x1d10	            0x85c0	                           test eax, eax	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x1d12	            0x7519	                           jne 0x4001d6d	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x1d14	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      1242	buffer.c	FUNCTION_18	CALL_8
0x1d17	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1242	buffer.c	FUNCTION_18	CALL_8
0x1d1b	      0xb900000000	                              mov ecx, 0	      1242	buffer.c	FUNCTION_18	CALL_8
0x1d20	          0x4889c6	                            mov rsi, rax	      1242	buffer.c	FUNCTION_18	CALL_8
0x1d23	      0xbf00000000	                              mov edi, 0	      1242	buffer.c	FUNCTION_18	CALL_8
0x1d28	      0xe800000000	                          call 0x4001d6d	      1242	buffer.c	FUNCTION_18	CALL_8
0x1d2d	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1243	buffer.c	FUNCTION_18	IF_4
0x1d31	            0x750a	                           jne 0x4001d7d	      1243	buffer.c	FUNCTION_18	IF_4
0x1d33	    0xc70500000000	               mov dword [0x04001d7d], 0	      1244	buffer.c	FUNCTION_18	IF_4
0x1d3d	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1245	buffer.c	FUNCTION_18
0x1d40	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1246	buffer.c	FUNCTION_18
0x1d44	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1246	buffer.c	FUNCTION_18
0x1d4d	            0x7405	                            je 0x4001d94	      1246	buffer.c	FUNCTION_18
0x1d4f	      0xe800000000	                          call 0x4001d94	      1246	buffer.c	FUNCTION_18
0x1d54	              0xc9	                                   leave	      1246	buffer.c	FUNCTION_18
0x1d55	              0xc3	                                     ret	      1246	buffer.c	FUNCTION_18
init_changedtick	FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,2:SWITCH,0:DO,0	29
0x1469	              0x55	                                push rbp	       875	buffer.c	FUNCTION_12
0x146a	          0x4889e5	                            mov rbp, rsp	       875	buffer.c	FUNCTION_12
0x146d	        0x4883ec20	                           sub rsp, 0x20	       875	buffer.c	FUNCTION_12
0x1471	        0x48897de8	             mov qword [rbp - 0x18], rdi	       875	buffer.c	FUNCTION_12
0x1475	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       876	buffer.c	FUNCTION_12
0x1479	    0x4805d0000000	                           add rax, 0xd0	       876	buffer.c	FUNCTION_12
0x147f	        0x488945f8	                mov qword [rbp - 8], rax	       876	buffer.c	FUNCTION_12
0x1483	        0x488b45f8	                mov rax, qword [rbp - 8]	       878	buffer.c	FUNCTION_12
0x1487	        0xc6401005	                mov byte [rax + 0x10], 5	       878	buffer.c	FUNCTION_12
0x148b	        0x488b45f8	                mov rax, qword [rbp - 8]	       879	buffer.c	FUNCTION_12
0x148f	    0xc70001000000	                      mov dword [rax], 1	       879	buffer.c	FUNCTION_12
0x1495	        0x488b45f8	                mov rax, qword [rbp - 8]	       880	buffer.c	FUNCTION_12
0x1499	        0xc6400402	                   mov byte [rax + 4], 2	       880	buffer.c	FUNCTION_12
0x149d	        0x488b45f8	                mov rax, qword [rbp - 8]	       881	buffer.c	FUNCTION_12
0x14a1	    0x48c740080000	                  mov qword [rax + 8], 0	       881	buffer.c	FUNCTION_12
0x14a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       884	buffer.c	FUNCTION_12	CALL_1
0x14ad	    0x4805e1000000	                           add rax, 0xe1	       884	buffer.c	FUNCTION_12	CALL_1
0x14b3	    0x48b96368616e	          movabs rcx, 0x746465676e616863	       884	buffer.c	FUNCTION_12	CALL_1
0x14bd	          0x488908	                    mov qword [rax], rcx	       884	buffer.c	FUNCTION_12	CALL_1
0x14c0	    0xc7400869636b	          mov dword [rax + 8], 0x6b6369 	       884	buffer.c	FUNCTION_12	CALL_1
0x14c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       885	buffer.c	FUNCTION_12	CALL_2
0x14cb	    0x488b80301700	          mov rax, qword [rax + 0x1730] 	       885	buffer.c	FUNCTION_12	CALL_2
0x14d2	        0x488b55f8	                mov rdx, qword [rbp - 8]	       885	buffer.c	FUNCTION_12	CALL_2
0x14d6	          0x4889d6	                            mov rsi, rdx	       885	buffer.c	FUNCTION_12	CALL_2
0x14d9	          0x4889c7	                            mov rdi, rax	       885	buffer.c	FUNCTION_12	CALL_2
0x14dc	      0xe800000000	                          call 0x4001521	       885	buffer.c	FUNCTION_12	CALL_2
0x14e1	              0x90	                                     nop	       887	buffer.c	FUNCTION_12
0x14e2	              0xc9	                                   leave	       887	buffer.c	FUNCTION_12
0x14e3	              0xc3	                                     ret	       887	buffer.c	FUNCTION_12
otherfile_buf	FOR,0:WHILE,0:ELSE,0:functions,0:IF,6:CALL,5:SWITCH,0:DO,0	73
0x59c5	              0x55	                                push rbp	      3322	buffer.c	FUNCTION_56
0x59c6	          0x4889e5	                            mov rbp, rsp	      3322	buffer.c	FUNCTION_56
0x59c9	    0x4881ecc00000	                           sub rsp, 0xc0	      3322	buffer.c	FUNCTION_56
0x59d0	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	      3322	buffer.c	FUNCTION_56
0x59d7	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	      3322	buffer.c	FUNCTION_56
0x59de	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	      3322	buffer.c	FUNCTION_56
0x59e5	    0x64488b042528	                mov rax, qword fs:[0x28]	      3322	buffer.c	FUNCTION_56
0x59ee	        0x488945f8	                mov qword [rbp - 8], rax	      3322	buffer.c	FUNCTION_56
0x59f2	            0x31c0	                            xor eax, eax	      3322	buffer.c	FUNCTION_56
0x59f4	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      3324	buffer.c	FUNCTION_56	IF_1
0x59fc	            0x7421	                            je 0x4005a5f	      3324	buffer.c	FUNCTION_56	IF_1
0x59fe	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3324	buffer.c	FUNCTION_56	IF_1
0x5a05	           0xfb600	                   movzx eax, byte [rax]	      3324	buffer.c	FUNCTION_56	IF_1
0x5a08	            0x84c0	                             test al, al	      3324	buffer.c	FUNCTION_56	IF_1
0x5a0a	            0x7413	                            je 0x4005a5f	      3324	buffer.c	FUNCTION_56	IF_1
0x5a0c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3324	buffer.c	FUNCTION_56	IF_1
0x5a13	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      3324	buffer.c	FUNCTION_56	IF_1
0x5a1a	          0x4885c0	                           test rax, rax	      3324	buffer.c	FUNCTION_56	IF_1
0x5a1d	            0x750a	                           jne 0x4005a69	      3324	buffer.c	FUNCTION_56	IF_1
0x5a1f	      0xb801000000	                              mov eax, 1	      3325	buffer.c	FUNCTION_56	IF_1
0x5a24	      0xe9d4000000	                           jmp 0x4005b3d	      3325	buffer.c	FUNCTION_56	IF_1
0x5a29	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3326	buffer.c	FUNCTION_56	IF_2	CALL_1
0x5a30	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      3326	buffer.c	FUNCTION_56	IF_2	CALL_1
0x5a37	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3326	buffer.c	FUNCTION_56	IF_2	CALL_1
0x5a3e	          0x4889d6	                            mov rsi, rdx	      3326	buffer.c	FUNCTION_56	IF_2	CALL_1
0x5a41	          0x4889c7	                            mov rdi, rax	      3326	buffer.c	FUNCTION_56	IF_2	CALL_1
0x5a44	      0xe800000000	                          call 0x4005a89	      3326	buffer.c	FUNCTION_56	IF_2	CALL_1
0x5a49	            0x85c0	                           test eax, eax	      3326	buffer.c	FUNCTION_56	IF_2	CALL_1
0x5a4b	            0x750a	                           jne 0x4005a97	      3326	buffer.c	FUNCTION_56	IF_2	CALL_1
0x5a4d	      0xb800000000	                              mov eax, 0	      3327	buffer.c	FUNCTION_56	IF_2
0x5a52	      0xe9a6000000	                           jmp 0x4005b3d	      3327	buffer.c	FUNCTION_56	IF_2
0x5a57	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      3333	buffer.c	FUNCTION_56	IF_3
0x5a5f	            0x7547	                           jne 0x4005ae8	      3333	buffer.c	FUNCTION_56	IF_3
0x5a61	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3335	buffer.c	FUNCTION_56	IF_3	IF_4	CALL_2
0x5a68	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      3335	buffer.c	FUNCTION_56	IF_3	IF_4	CALL_2
0x5a6e	            0x85c0	                           test eax, eax	      3335	buffer.c	FUNCTION_56	IF_3	IF_4	CALL_2
0x5a70	            0x741d	                            je 0x4005acf	      3335	buffer.c	FUNCTION_56	IF_3	IF_4	CALL_2
0x5a72	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      3335	buffer.c	FUNCTION_56	IF_3	IF_4	CALL_2
0x5a79	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3335	buffer.c	FUNCTION_56	IF_3	IF_4	CALL_2
0x5a80	          0x4889d6	                            mov rsi, rdx	      3335	buffer.c	FUNCTION_56	IF_3	IF_4	CALL_2
0x5a83	          0x4889c7	                            mov rdi, rax	      3335	buffer.c	FUNCTION_56	IF_3	IF_4	CALL_2
0x5a86	      0xe800000000	                          call 0x4005acb	      3335	buffer.c	FUNCTION_56	IF_3	IF_4	CALL_2
0x5a8b	            0x85c0	                           test eax, eax	      3335	buffer.c	FUNCTION_56	IF_3	IF_4	CALL_2
0x5a8d	            0x790b	                           jns 0x4005ada	      3335	buffer.c	FUNCTION_56	IF_3	IF_4	CALL_2
0x5a8f	    0x48c78560ffff	mov qword [rbp - 0xa0], 0xffffffffffffffff	      3336	buffer.c	FUNCTION_56	IF_3	IF_4
0x5a9a	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      3337	buffer.c	FUNCTION_56	IF_3
0x5aa1	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      3337	buffer.c	FUNCTION_56	IF_3
0x5aa8	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      3348	buffer.c	FUNCTION_56	IF_5	CALL_3
0x5aaf	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3348	buffer.c	FUNCTION_56	IF_5	CALL_3
0x5ab6	          0x4889d6	                            mov rsi, rdx	      3348	buffer.c	FUNCTION_56	IF_5	CALL_3
0x5ab9	          0x4889c7	                            mov rdi, rax	      3348	buffer.c	FUNCTION_56	IF_5	CALL_3
0x5abc	      0xe80f010000	                   call sym.buf_same_ino	      3348	buffer.c	FUNCTION_56	IF_5	CALL_3
0x5ac1	            0x85c0	                           test eax, eax	      3348	buffer.c	FUNCTION_56	IF_5	CALL_3
0x5ac3	            0x7433	                            je 0x4005b38	      3348	buffer.c	FUNCTION_56	IF_5	CALL_3
0x5ac5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3350	buffer.c	FUNCTION_56	IF_5	CALL_4
0x5acc	          0x4889c7	                            mov rdi, rax	      3350	buffer.c	FUNCTION_56	IF_5	CALL_4
0x5acf	      0xe800000000	                          call 0x4005b14	      3350	buffer.c	FUNCTION_56	IF_5	CALL_4
0x5ad4	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      3351	buffer.c	FUNCTION_56	IF_5	IF_6	CALL_5
0x5adb	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3351	buffer.c	FUNCTION_56	IF_5	IF_6	CALL_5
0x5ae2	          0x4889d6	                            mov rsi, rdx	      3351	buffer.c	FUNCTION_56	IF_5	IF_6	CALL_5
0x5ae5	          0x4889c7	                            mov rdi, rax	      3351	buffer.c	FUNCTION_56	IF_5	IF_6	CALL_5
0x5ae8	      0xe8e3000000	                   call sym.buf_same_ino	      3351	buffer.c	FUNCTION_56	IF_5	IF_6	CALL_5
0x5aed	            0x85c0	                           test eax, eax	      3351	buffer.c	FUNCTION_56	IF_5	IF_6	CALL_5
0x5aef	            0x7407	                            je 0x4005b38	      3351	buffer.c	FUNCTION_56	IF_5	IF_6	CALL_5
0x5af1	      0xb800000000	                              mov eax, 0	      3352	buffer.c	FUNCTION_56	IF_5	IF_6
0x5af6	            0xeb05	                           jmp 0x4005b3d	      3352	buffer.c	FUNCTION_56	IF_5	IF_6
0x5af8	      0xb801000000	                              mov eax, 1	      3356	buffer.c	FUNCTION_56
0x5afd	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3357	buffer.c	FUNCTION_56
0x5b01	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3357	buffer.c	FUNCTION_56
0x5b0a	            0x7405	                            je 0x4005b51	      3357	buffer.c	FUNCTION_56
0x5b0c	      0xe800000000	                          call 0x4005b51	      3357	buffer.c	FUNCTION_56
0x5b11	              0xc9	                                   leave	      3357	buffer.c	FUNCTION_56
0x5b12	              0xc3	                                     ret	      3357	buffer.c	FUNCTION_56
fname_match	FOR,0:WHILE,0:ELSE,1:functions,0:IF,3:CALL,4:SWITCH,0:DO,0	53
0x472a	              0x55	                                push rbp	      2681	buffer.c	FUNCTION_36
0x472b	          0x4889e5	                            mov rbp, rsp	      2681	buffer.c	FUNCTION_36
0x472e	        0x4883ec30	                           sub rsp, 0x30	      2681	buffer.c	FUNCTION_36
0x4732	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2681	buffer.c	FUNCTION_36
0x4736	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2681	buffer.c	FUNCTION_36
0x473a	          0x8955dc	             mov dword [rbp - 0x24], edx	      2681	buffer.c	FUNCTION_36
0x473d	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      2682	buffer.c	FUNCTION_36
0x4745	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2685	buffer.c	FUNCTION_36	IF_1
0x474a	     0xf849a000000	                            je 0x400482a	      2685	buffer.c	FUNCTION_36	IF_1
0x4750	    0x488b05000000	            mov rax, qword [0x04004797] 	      2688	buffer.c	FUNCTION_36	IF_1
0x4757	          0x4885c0	                           test rax, rax	      2688	buffer.c	FUNCTION_36	IF_1
0x475a	            0x7506	                           jne 0x40047a2	      2688	buffer.c	FUNCTION_36	IF_1
0x475c	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      2688	buffer.c	FUNCTION_36	IF_1
0x4760	            0x7407	                            je 0x40047a9	      2688	buffer.c	FUNCTION_36	IF_1
0x4762	      0xba01000000	                              mov edx, 1	      2688	buffer.c	FUNCTION_36	IF_1
0x4767	            0xeb05	                           jmp 0x40047ae	      2688	buffer.c	FUNCTION_36	IF_1
0x4769	      0xba00000000	                              mov edx, 0	      2688	buffer.c	FUNCTION_36	IF_1
0x476e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2688	buffer.c	FUNCTION_36	IF_1
0x4772	    0x8990a8000000	             mov dword [rax + 0xa8], edx	      2688	buffer.c	FUNCTION_36	IF_1
0x4778	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x477c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4780	      0xba00000000	                              mov edx, 0	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4785	          0x4889ce	                            mov rsi, rcx	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4788	          0x4889c7	                            mov rdi, rax	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x478b	      0xe800000000	                          call 0x40047d0	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4790	            0x85c0	                           test eax, eax	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4792	            0x740a	                            je 0x40047de	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4794	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2690	buffer.c	FUNCTION_36	IF_1	IF_2
0x4798	        0x488945f0	             mov qword [rbp - 0x10], rax	      2690	buffer.c	FUNCTION_36	IF_1	IF_2
0x479c	            0xeb4c	                           jmp 0x400482a	      2690	buffer.c	FUNCTION_36	IF_1	IF_2
0x479e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x47a2	          0x4889c6	                            mov rsi, rax	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x47a5	      0xbf00000000	                              mov edi, 0	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x47aa	      0xe800000000	                          call 0x40047ef	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x47af	        0x488945f8	                mov qword [rbp - 8], rax	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x47b3	      0x48837df800	                  cmp qword [rbp - 8], 0	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x47b8	            0x7424	                            je 0x400481e	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x47ba	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x47be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x47c2	      0xba00000000	                              mov edx, 0	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x47c7	          0x4889ce	                            mov rsi, rcx	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x47ca	          0x4889c7	                            mov rdi, rax	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x47cd	      0xe800000000	                          call 0x4004812	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x47d2	            0x85c0	                           test eax, eax	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x47d4	            0x7408	                            je 0x400481e	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x47d6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2696	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3
0x47da	        0x488945f0	             mov qword [rbp - 0x10], rax	      2696	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3
0x47de	        0x488b45f8	                mov rax, qword [rbp - 8]	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x47e2	          0x4889c7	                            mov rdi, rax	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x47e5	      0xe800000000	                          call 0x400482a	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x47ea	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2701	buffer.c	FUNCTION_36
0x47ee	              0xc9	                                   leave	      2702	buffer.c	FUNCTION_36
0x47ef	              0xc3	                                     ret	      2702	buffer.c	FUNCTION_36
fix_fname	FOR,0:WHILE,0:ELSE,0:functions,0:IF,3:CALL,9:SWITCH,0:DO,0	10
0x9d26	              0x55	                                push rbp	      4749	buffer.c	FUNCTION_68
0x9d27	          0x4889e5	                            mov rbp, rsp	      4749	buffer.c	FUNCTION_68
0x9d2a	        0x4883ec10	                           sub rsp, 0x10	      4749	buffer.c	FUNCTION_68
0x9d2e	        0x48897df8	                mov qword [rbp - 8], rdi	      4749	buffer.c	FUNCTION_68
0x9d32	        0x488b45f8	                mov rax, qword [rbp - 8]	      4759	buffer.c	FUNCTION_68	CALL_1
0x9d36	      0xbe01000000	                              mov esi, 1	      4759	buffer.c	FUNCTION_68	CALL_1
0x9d3b	          0x4889c7	                            mov rdi, rax	      4759	buffer.c	FUNCTION_68	CALL_1
0x9d3e	      0xe800000000	                          call 0x4009d83	      4759	buffer.c	FUNCTION_68	CALL_1
0x9d43	              0xc9	                                   leave	      4787	buffer.c	FUNCTION_68
0x9d44	              0xc3	                                     ret	      4787	buffer.c	FUNCTION_68
bufref_valid	FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,1:SWITCH,0:DO,0	27
0x807	              0x55	                                push rbp	       375	buffer.c	FUNCTION_4
0x808	          0x4889e5	                            mov rbp, rsp	       375	buffer.c	FUNCTION_4
0x80b	        0x4883ec10	                           sub rsp, 0x10	       375	buffer.c	FUNCTION_4
0x80f	        0x48897df8	                mov qword [rbp - 8], rdi	       375	buffer.c	FUNCTION_4
0x813	        0x488b45f8	                mov rax, qword [rbp - 8]	       376	buffer.c	FUNCTION_4
0x817	          0x8b500c	              mov edx, dword [rax + 0xc]	       376	buffer.c	FUNCTION_4
0x81a	    0x8b0500000000	            mov eax, dword [0x04000860] 	       376	buffer.c	FUNCTION_4
0x820	            0x39c2	                            cmp edx, eax	       377	buffer.c	FUNCTION_4	CALL_1
0x822	            0x742b	                            je 0x400088f	       377	buffer.c	FUNCTION_4	CALL_1
0x824	        0x488b45f8	                mov rax, qword [rbp - 8]	       377	buffer.c	FUNCTION_4	CALL_1
0x828	          0x488b00	                    mov rax, qword [rax]	       377	buffer.c	FUNCTION_4	CALL_1
0x82b	          0x4889c7	                            mov rdi, rax	       377	buffer.c	FUNCTION_4	CALL_1
0x82e	      0xe800000000	                          call 0x4000873	       377	buffer.c	FUNCTION_4	CALL_1
0x833	            0x85c0	                           test eax, eax	       377	buffer.c	FUNCTION_4	CALL_1
0x835	            0x741f	                            je 0x4000896	       377	buffer.c	FUNCTION_4	CALL_1
0x837	        0x488b45f8	                mov rax, qword [rbp - 8]	       378	buffer.c	FUNCTION_4
0x83b	          0x8b5008	                mov edx, dword [rax + 8]	       378	buffer.c	FUNCTION_4
0x83e	        0x488b45f8	                mov rax, qword [rbp - 8]	       378	buffer.c	FUNCTION_4
0x842	          0x488b00	                    mov rax, qword [rax]	       378	buffer.c	FUNCTION_4
0x845	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	       378	buffer.c	FUNCTION_4
0x84b	            0x39c2	                            cmp edx, eax	       378	buffer.c	FUNCTION_4
0x84d	            0x7507	                           jne 0x4000896	       378	buffer.c	FUNCTION_4
0x84f	      0xb801000000	                              mov eax, 1	       377	buffer.c	FUNCTION_4	CALL_1
0x854	            0xeb05	                           jmp 0x400089b	       377	buffer.c	FUNCTION_4	CALL_1
0x856	      0xb800000000	                              mov eax, 0	       377	buffer.c	FUNCTION_4	CALL_1
0x85b	              0xc9	                                   leave	       379	buffer.c	FUNCTION_4
0x85c	              0xc3	                                     ret	       379	buffer.c	FUNCTION_4
otherfile	FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,1:SWITCH,0:DO,0	12
0x599c	              0x55	                                push rbp	      3306	buffer.c	FUNCTION_55
0x599d	          0x4889e5	                            mov rbp, rsp	      3306	buffer.c	FUNCTION_55
0x59a0	        0x4883ec10	                           sub rsp, 0x10	      3306	buffer.c	FUNCTION_55
0x59a4	        0x48897df8	                mov qword [rbp - 8], rdi	      3306	buffer.c	FUNCTION_55
0x59a8	    0x488b05000000	            mov rax, qword [0x040059ef] 	      3307	buffer.c	FUNCTION_55	CALL_1
0x59af	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3307	buffer.c	FUNCTION_55	CALL_1
0x59b3	      0xba00000000	                              mov edx, 0	      3307	buffer.c	FUNCTION_55	CALL_1
0x59b8	          0x4889ce	                            mov rsi, rcx	      3307	buffer.c	FUNCTION_55	CALL_1
0x59bb	          0x4889c7	                            mov rdi, rax	      3307	buffer.c	FUNCTION_55	CALL_1
0x59be	      0xe802000000	                  call sym.otherfile_buf	      3307	buffer.c	FUNCTION_55	CALL_1
0x59c3	              0xc9	                                   leave	      3312	buffer.c	FUNCTION_55
0x59c4	              0xc3	                                     ret	      3312	buffer.c	FUNCTION_55
do_bufdel	FOR,1:WHILE,0:ELSE,13:functions,0:IF,20:CALL,28:SWITCH,0:DO,0	217
0x1907	              0x55	                                push rbp	      1099	buffer.c	FUNCTION_17
0x1908	          0x4889e5	                            mov rbp, rsp	      1099	buffer.c	FUNCTION_17
0x190b	        0x4883ec40	                           sub rsp, 0x40	      1099	buffer.c	FUNCTION_17
0x190f	          0x897ddc	             mov dword [rbp - 0x24], edi	      1099	buffer.c	FUNCTION_17
0x1912	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1099	buffer.c	FUNCTION_17
0x1916	          0x8955d8	             mov dword [rbp - 0x28], edx	      1099	buffer.c	FUNCTION_17
0x1919	          0x894dcc	             mov dword [rbp - 0x34], ecx	      1099	buffer.c	FUNCTION_17
0x191c	        0x448945c8	             mov dword [rbp - 0x38], r8d	      1099	buffer.c	FUNCTION_17
0x1920	        0x44894dc4	             mov dword [rbp - 0x3c], r9d	      1099	buffer.c	FUNCTION_17
0x1924	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1100	buffer.c	FUNCTION_17
0x192b	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1101	buffer.c	FUNCTION_17
0x1932	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1102	buffer.c	FUNCTION_17
0x193a	        0x837dd800	               cmp dword [rbp - 0x28], 0	      1106	buffer.c	FUNCTION_17	IF_1
0x193e	            0x7524	                           jne 0x40019a4	      1106	buffer.c	FUNCTION_17	IF_1
0x1940	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x1943	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x1946	          0x4189d0	                            mov r8d, edx	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x1949	      0xb900000000	                              mov ecx, 0	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x194e	      0xba01000000	                              mov edx, 1	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x1953	      0xbe00000000	                              mov esi, 0	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x1958	            0x89c7	                            mov edi, eax	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x195a	      0xe800000000	                          call 0x400199f	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x195f	      0xe9bf020000	                           jmp 0x4001c63	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x1964	        0x837dd802	               cmp dword [rbp - 0x28], 2	      1112	buffer.c	FUNCTION_17	ELSE_1	IF_2
0x1968	            0x7525	                           jne 0x40019cf	      1112	buffer.c	FUNCTION_17	ELSE_1	IF_2
0x196a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1114	buffer.c	FUNCTION_17	ELSE_1	IF_2	IF_3
0x196e	           0xfb600	                   movzx eax, byte [rax]	      1114	buffer.c	FUNCTION_17	ELSE_1	IF_2	IF_3
0x1971	            0x84c0	                             test al, al	      1114	buffer.c	FUNCTION_17	ELSE_1	IF_2	IF_3
0x1973	            0x740f	                            je 0x40019c4	      1114	buffer.c	FUNCTION_17	ELSE_1	IF_2	IF_3
0x1975	      0xbf00000000	                              mov edi, 0	      1115	buffer.c	FUNCTION_17	ELSE_1	IF_2	CALL_2
0x197a	      0xe800000000	                          call 0x40019bf	      1115	buffer.c	FUNCTION_17	ELSE_1	IF_2	CALL_2
0x197f	      0xe9a3020000	                           jmp 0x4001c67	      1115	buffer.c	FUNCTION_17	ELSE_1	IF_2	CALL_2
0x1984	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1116	buffer.c	FUNCTION_17	ELSE_1	IF_2
0x1987	          0x8945ec	             mov dword [rbp - 0x14], eax	      1116	buffer.c	FUNCTION_17	ELSE_1	IF_2
0x198a	      0xe9f1000000	                           jmp 0x4001ac0	      1116	buffer.c	FUNCTION_17	ELSE_1	IF_2
0x198f	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1119	buffer.c	FUNCTION_17	ELSE_1	ELSE_2
0x1992	          0x8945ec	             mov dword [rbp - 0x14], eax	      1119	buffer.c	FUNCTION_17	ELSE_1	ELSE_2
0x1995	      0xe9e6000000	                           jmp 0x4001ac0	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x199a	    0x488b05000000	            mov rax, qword [0x040019e1] 	      1129	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_4
0x19a1	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1129	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_4
0x19a7	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1129	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_4
0x19aa	            0x7508	                           jne 0x40019f4	      1129	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_4
0x19ac	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1130	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_4
0x19af	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1130	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_4
0x19b2	            0xeb28	                           jmp 0x4001a1c	      1130	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_4
0x19b4	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x19b7	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x19ba	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x19bd	          0x4189c8	                            mov r8d, ecx	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x19c0	            0x89d1	                            mov ecx, edx	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x19c2	      0xba01000000	                              mov edx, 1	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x19c7	      0xbe01000000	                              mov esi, 1	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x19cc	            0x89c7	                            mov edi, eax	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x19ce	      0xe800000000	                          call 0x4001a13	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x19d3	          0x83f801	                              cmp eax, 1	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x19d6	            0x7504	                           jne 0x4001a1c	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x19d8	        0x8345e801	               add dword [rbp - 0x18], 1	      1133	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5
0x19dc	        0x837dd802	               cmp dword [rbp - 0x28], 2	      1138	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6
0x19e0	            0x7515	                           jne 0x4001a37	      1138	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6
0x19e2	        0x8345ec01	               add dword [rbp - 0x14], 1	      1140	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6	IF_7
0x19e6	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1140	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6	IF_7
0x19e9	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      1140	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6	IF_7
0x19ec	     0xf8e89000000	                           jle 0x4001abb	      1140	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6	IF_7
0x19f2	      0xe99d000000	                           jmp 0x4001ad4	      1141	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6	IF_7
0x19f7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1145	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_5
0x19fb	          0x4889c7	                            mov rdi, rax	      1145	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_5
0x19fe	      0xe800000000	                          call 0x4001a43	      1145	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_5
0x1a03	        0x488945d0	             mov qword [rbp - 0x30], rax	      1145	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_5
0x1a07	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1146	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_8
0x1a0b	           0xfb600	                   movzx eax, byte [rax]	      1146	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_8
0x1a0e	            0x84c0	                             test al, al	      1146	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_8
0x1a10	            0x747e	                            je 0x4001ad0	      1146	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_8
0x1a12	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1148	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_6
0x1a16	           0xfb600	                   movzx eax, byte [rax]	      1148	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_6
0x1a19	           0xfb6c0	                           movzx eax, al	      1148	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_6
0x1a1c	          0x83e830	                           sub eax, 0x30	      1148	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_6
0x1a1f	          0x83f809	                              cmp eax, 9	      1148	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_6
0x1a22	            0x7648	                           jbe 0x4001aac	      1148	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_6
0x1a24	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1150	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_7
0x1a28	          0x4889c7	                            mov rdi, rax	      1150	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_7
0x1a2b	      0xe800000000	                          call 0x4001a70	      1150	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_7
0x1a30	        0x488945f8	                mov qword [rbp - 8], rax	      1150	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_7
0x1a34	        0x837ddc04	               cmp dword [rbp - 0x24], 4	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x1a38	           0xf94c0	                                 sete al	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x1a3b	           0xfb6d0	                           movzx edx, al	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x1a3e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x1a42	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x1a46	    0x41b800000000	                              mov r8d, 0	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x1a4c	      0xb900000000	                              mov ecx, 0	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x1a51	          0x4889c7	                            mov rdi, rax	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x1a54	      0xe800000000	                          call 0x4001a99	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x1a59	          0x8945ec	             mov dword [rbp - 0x14], eax	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x1a5c	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1153	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	IF_10
0x1a60	            0x7831	                            js 0x4001ad3	      1153	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	IF_10
0x1a62	        0x488b45f8	                mov rax, qword [rbp - 8]	      1155	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9
0x1a66	        0x488945d0	             mov qword [rbp - 0x30], rax	      1155	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9
0x1a6a	            0xeb0f	                           jmp 0x4001abb	      1155	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9
0x1a6c	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1158	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_9
0x1a70	          0x4889c7	                            mov rdi, rax	      1158	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_9
0x1a73	      0xe800000000	                          call 0x4001ab8	      1158	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_9
0x1a78	          0x8945ec	             mov dword [rbp - 0x14], eax	      1158	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_9
0x1a7b	      0xe800000000	                          call 0x4001ac0	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x1a80	    0x8b0500000000	            mov eax, dword [0x04001ac6] 	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x1a86	            0x85c0	                           test eax, eax	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x1a88	     0xf840cffffff	                            je 0x40019da	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x1a8e	            0xeb04	                           jmp 0x4001ad4	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x1a90	              0x90	                                     nop	      1147	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_8
0x1a91	            0xeb01	                           jmp 0x4001ad4	      1147	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_8
0x1a93	              0x90	                                     nop	      1154	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	IF_10
0x1a94	    0x8b0500000000	            mov eax, dword [0x04001ada] 	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x1a9a	            0x85c0	                           test eax, eax	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x1a9c	            0x752e	                           jne 0x4001b0c	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x1a9e	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x1aa2	            0x7428	                            je 0x4001b0c	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x1aa4	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x1aa7	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x1aaa	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x1aad	          0x4189c8	                            mov r8d, ecx	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x1ab0	            0x89d1	                            mov ecx, edx	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x1ab2	      0xba01000000	                              mov edx, 1	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x1ab7	      0xbe01000000	                              mov esi, 1	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x1abc	            0x89c7	                            mov edi, eax	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x1abe	      0xe800000000	                          call 0x4001b03	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x1ac3	          0x83f801	                              cmp eax, 1	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x1ac6	            0x7504	                           jne 0x4001b0c	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x1ac8	        0x8345e801	               add dword [rbp - 0x18], 1	      1163	buffer.c	FUNCTION_17	ELSE_1	IF_11
0x1acc	        0x837de800	               cmp dword [rbp - 0x18], 0	      1165	buffer.c	FUNCTION_17	ELSE_1	IF_12
0x1ad0	            0x757d	                           jne 0x4001b8f	      1165	buffer.c	FUNCTION_17	ELSE_1	IF_12
0x1ad2	        0x837ddc02	               cmp dword [rbp - 0x24], 2	      1167	buffer.c	FUNCTION_17	ELSE_1	IF_12	IF_13
0x1ad6	            0x7521	                           jne 0x4001b39	      1167	buffer.c	FUNCTION_17	ELSE_1	IF_12	IF_13
0x1ad8	      0xbf00000000	                              mov edi, 0	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x1add	      0xe800000000	                          call 0x4001b22	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x1ae2	          0x4889c2	                            mov rdx, rax	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x1ae5	    0x488b05000000	            mov rax, qword [0x04001b2c] 	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x1aec	          0x4889d6	                            mov rsi, rdx	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x1aef	          0x4889c7	                            mov rdi, rax	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x1af2	      0xe800000000	                          call 0x4001b37	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x1af7	            0xeb46	                           jmp 0x4001b7f	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x1af9	        0x837ddc03	               cmp dword [rbp - 0x24], 3	      1169	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x1afd	            0x7521	                           jne 0x4001b60	      1169	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x1aff	      0xbf00000000	                              mov edi, 0	      1170	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x1b04	      0xe800000000	                          call 0x4001b49	      1170	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x1b09	          0x4889c2	                            mov rdx, rax	      1170	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x1b0c	    0x488b05000000	            mov rax, qword [0x04001b53] 	      1170	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x1b13	          0x4889d6	                            mov rsi, rdx	      1170	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x1b16	          0x4889c7	                            mov rdi, rax	      1170	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x1b19	      0xe800000000	                          call 0x4001b5e	      1170	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x1b1e	            0xeb1f	                           jmp 0x4001b7f	      1170	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x1b20	      0xbf00000000	                              mov edi, 0	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x1b25	      0xe800000000	                          call 0x4001b6a	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x1b2a	          0x4889c2	                            mov rdx, rax	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x1b2d	    0x488b05000000	            mov rax, qword [0x04001b74] 	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x1b34	          0x4889d6	                            mov rsi, rdx	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x1b37	          0x4889c7	                            mov rdi, rax	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x1b3a	      0xe800000000	                          call 0x4001b7f	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x1b3f	    0x488b05000000	            mov rax, qword [0x04001b86] 	      1173	buffer.c	FUNCTION_17	ELSE_1	IF_12
0x1b46	        0x488945f0	             mov qword [rbp - 0x10], rax	      1173	buffer.c	FUNCTION_17	ELSE_1	IF_12
0x1b4a	      0xe9d4000000	                           jmp 0x4001c63	      1173	buffer.c	FUNCTION_17	ELSE_1	IF_12
0x1b4f	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1175	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15
0x1b52	          0x4863d0	                         movsxd rdx, eax	      1175	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15
0x1b55	    0x488b05000000	            mov rax, qword [0x04001b9c] 	      1175	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15
0x1b5c	          0x4839c2	                            cmp rdx, rax	      1175	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15
0x1b5f	     0xf8cbe000000	                            jl 0x4001c63	      1175	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15
0x1b65	        0x837ddc02	               cmp dword [rbp - 0x24], 2	      1177	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16
0x1b69	            0x753e	                           jne 0x4001be9	      1177	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16
0x1b6b	        0x837de801	               cmp dword [rbp - 0x18], 1	      1179	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	IF_17
0x1b6f	            0x7517	                           jne 0x4001bc8	      1179	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	IF_17
0x1b71	      0xbf00000000	                              mov edi, 0	      1180	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_18
0x1b76	      0xe800000000	                          call 0x4001bbb	      1180	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_18
0x1b7b	          0x4889c7	                            mov rdi, rax	      1180	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_18
0x1b7e	      0xe800000000	                          call 0x4001bc3	      1180	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_18
0x1b83	      0xe99b000000	                           jmp 0x4001c63	      1180	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_18
0x1b88	      0xbf00000000	                              mov edi, 0	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x1b8d	      0xe800000000	                          call 0x4001bd2	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x1b92	          0x4889c2	                            mov rdx, rax	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x1b95	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x1b98	            0x89c6	                            mov esi, eax	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x1b9a	          0x4889d7	                            mov rdi, rdx	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x1b9d	      0xb800000000	                              mov eax, 0	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x1ba2	      0xe800000000	                          call 0x4001be7	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x1ba7	            0xeb7a	                           jmp 0x4001c63	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x1ba9	        0x837ddc03	               cmp dword [rbp - 0x24], 3	      1184	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18
0x1bad	            0x753b	                           jne 0x4001c2a	      1184	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18
0x1baf	        0x837de801	               cmp dword [rbp - 0x18], 1	      1186	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	IF_19
0x1bb3	            0x7514	                           jne 0x4001c09	      1186	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	IF_19
0x1bb5	      0xbf00000000	                              mov edi, 0	      1187	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_22
0x1bba	      0xe800000000	                          call 0x4001bff	      1187	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_22
0x1bbf	          0x4889c7	                            mov rdi, rax	      1187	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_22
0x1bc2	      0xe800000000	                          call 0x4001c07	      1187	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_22
0x1bc7	            0xeb5a	                           jmp 0x4001c63	      1187	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_22
0x1bc9	      0xbf00000000	                              mov edi, 0	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x1bce	      0xe800000000	                          call 0x4001c13	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x1bd3	          0x4889c2	                            mov rdx, rax	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x1bd6	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x1bd9	            0x89c6	                            mov esi, eax	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x1bdb	          0x4889d7	                            mov rdi, rdx	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x1bde	      0xb800000000	                              mov eax, 0	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x1be3	      0xe800000000	                          call 0x4001c28	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x1be8	            0xeb39	                           jmp 0x4001c63	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x1bea	        0x837de801	               cmp dword [rbp - 0x18], 1	      1193	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	IF_20
0x1bee	            0x7514	                           jne 0x4001c44	      1193	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	IF_20
0x1bf0	      0xbf00000000	                              mov edi, 0	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x1bf5	      0xe800000000	                          call 0x4001c3a	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x1bfa	          0x4889c7	                            mov rdi, rax	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x1bfd	      0xe800000000	                          call 0x4001c42	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x1c02	            0xeb1f	                           jmp 0x4001c63	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x1c04	      0xbf00000000	                              mov edi, 0	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x1c09	      0xe800000000	                          call 0x4001c4e	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x1c0e	          0x4889c2	                            mov rdx, rax	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x1c11	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x1c14	            0x89c6	                            mov esi, eax	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x1c16	          0x4889d7	                            mov rdi, rdx	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x1c19	      0xb800000000	                              mov eax, 0	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x1c1e	      0xe800000000	                          call 0x4001c63	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x1c23	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1202	buffer.c	FUNCTION_17
0x1c27	              0xc9	                                   leave	      1203	buffer.c	FUNCTION_17
0x1c28	              0xc3	                                     ret	      1203	buffer.c	FUNCTION_17
read_buffer	FOR,0:WHILE,2:ELSE,2:functions,0:IF,5:CALL,8:SWITCH,0:DO,0	104
0x0	              0x55	                                push rbp	        73	buffer.c	FUNCTION_1
0x1	          0x4889e5	                            mov rbp, rsp	        73	buffer.c	FUNCTION_1
0x4	        0x4883ec30	                           sub rsp, 0x30	        73	buffer.c	FUNCTION_1
0x8	          0x897ddc	             mov dword [rbp - 0x24], edi	        73	buffer.c	FUNCTION_1
0xb	        0x488975d0	             mov qword [rbp - 0x30], rsi	        73	buffer.c	FUNCTION_1
0xf	          0x8955d8	             mov dword [rbp - 0x28], edx	        73	buffer.c	FUNCTION_1
0x12	    0x64488b042528	                mov rax, qword fs:[0x28]	        73	buffer.c	FUNCTION_1
0x1b	        0x488945f8	                mov qword [rbp - 8], rax	        73	buffer.c	FUNCTION_1
0x1f	            0x31c0	                            xor eax, eax	        73	buffer.c	FUNCTION_1
0x21	    0xc745ec010000	               mov dword [rbp - 0x14], 1	        74	buffer.c	FUNCTION_1
0x28	    0x488b05000000	            mov rax, qword [0x0400006f] 	        82	buffer.c	FUNCTION_1
0x2f	          0x488b00	                    mov rax, qword [rax]	        82	buffer.c	FUNCTION_1
0x32	        0x488945f0	             mov qword [rbp - 0x10], rax	        82	buffer.c	FUNCTION_1
0x36	          0x8b45d8	             mov eax, dword [rbp - 0x28]	        83	buffer.c	FUNCTION_1	CALL_1
0x39	          0x83c808	                               or eax, 8	        83	buffer.c	FUNCTION_1	CALL_1
0x3c	            0x89c7	                            mov edi, eax	        83	buffer.c	FUNCTION_1	CALL_1
0x3e	        0x837ddc00	               cmp dword [rbp - 0x24], 0	        83	buffer.c	FUNCTION_1	CALL_1
0x42	            0x7510	                           jne 0x4000094	        83	buffer.c	FUNCTION_1	CALL_1
0x44	    0x488b05000000	            mov rax, qword [0x0400008b] 	        85	buffer.c	FUNCTION_1
0x4b	    0x488bb0980000	            mov rsi, qword [rax + 0x98] 	        83	buffer.c	FUNCTION_1	CALL_1
0x52	            0xeb05	                           jmp 0x4000099	        83	buffer.c	FUNCTION_1	CALL_1
0x54	      0xbe00000000	                              mov esi, 0	        83	buffer.c	FUNCTION_1	CALL_1
0x59	        0x837ddc00	               cmp dword [rbp - 0x24], 0	        83	buffer.c	FUNCTION_1	CALL_1
0x5d	            0x7510	                           jne 0x40000af	        83	buffer.c	FUNCTION_1	CALL_1
0x5f	    0x488b05000000	            mov rax, qword [0x040000a6] 	        84	buffer.c	FUNCTION_1
0x66	    0x488b80880000	            mov rax, qword [rax + 0x88] 	        83	buffer.c	FUNCTION_1	CALL_1
0x6d	            0xeb05	                           jmp 0x40000b4	        83	buffer.c	FUNCTION_1	CALL_1
0x6f	      0xb800000000	                              mov eax, 0	        83	buffer.c	FUNCTION_1	CALL_1
0x74	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	        83	buffer.c	FUNCTION_1	CALL_1
0x78	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        83	buffer.c	FUNCTION_1	CALL_1
0x7c	        0x4883ec08	                              sub rsp, 8	        83	buffer.c	FUNCTION_1	CALL_1
0x80	              0x57	                                push rdi	        83	buffer.c	FUNCTION_1	CALL_1
0x81	          0x4989c9	                             mov r9, rcx	        83	buffer.c	FUNCTION_1	CALL_1
0x84	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	        83	buffer.c	FUNCTION_1	CALL_1
0x8a	      0xb900000000	                              mov ecx, 0	        83	buffer.c	FUNCTION_1	CALL_1
0x8f	          0x4889c7	                            mov rdi, rax	        83	buffer.c	FUNCTION_1	CALL_1
0x92	      0xe800000000	                          call 0x40000d7	        83	buffer.c	FUNCTION_1	CALL_1
0x97	        0x4883c410	                           add rsp, 0x10	        83	buffer.c	FUNCTION_1	CALL_1
0x9b	          0x8945ec	             mov dword [rbp - 0x14], eax	        83	buffer.c	FUNCTION_1	CALL_1
0x9e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        88	buffer.c	FUNCTION_1	IF_1
0xa1	          0x83f801	                              cmp eax, 1	        88	buffer.c	FUNCTION_1	IF_1
0xa4	            0x7530	                           jne 0x4000116	        88	buffer.c	FUNCTION_1	IF_1
0xa6	            0xeb0f	                           jmp 0x40000f7	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0xa8	      0xbe00000000	                              mov esi, 0	        92	buffer.c	FUNCTION_1	IF_1	CALL_2
0xad	      0xbf01000000	                              mov edi, 1	        92	buffer.c	FUNCTION_1	IF_1	CALL_2
0xb2	      0xe800000000	                          call 0x40000f7	        92	buffer.c	FUNCTION_1	IF_1	CALL_2
0xb7	      0x48836df001	               sub qword [rbp - 0x10], 1	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0xbc	      0x48837df000	               cmp qword [rbp - 0x10], 0	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0xc1	            0x79e5	                           jns 0x40000e8	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0xc3	            0xeb21	                           jmp 0x4000126	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0xc5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        98	buffer.c	FUNCTION_1	ELSE_1	CALL_3
0xc9	      0xbe00000000	                              mov esi, 0	        98	buffer.c	FUNCTION_1	ELSE_1	CALL_3
0xce	          0x4889c7	                            mov rdi, rax	        98	buffer.c	FUNCTION_1	ELSE_1	CALL_3
0xd1	      0xe800000000	                          call 0x4000116	        98	buffer.c	FUNCTION_1	ELSE_1	CALL_3
0xd6	    0x488b05000000	            mov rax, qword [0x0400011d] 	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0xdd	          0x488b00	                    mov rax, qword [rax]	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0xe0	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0xe4	            0x7fdf	                            jg 0x4000105	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0xe6	    0x488b05000000	            mov rax, qword [0x0400012d] 	       101	buffer.c	FUNCTION_1
0xed	    0x48c740380100	               mov qword [rax + 0x38], 1	       101	buffer.c	FUNCTION_1
0xf5	    0x488b05000000	            mov rax, qword [0x0400013c] 	       102	buffer.c	FUNCTION_1
0xfc	    0xc74040000000	               mov dword [rax + 0x40], 0	       102	buffer.c	FUNCTION_1
0x103	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       104	buffer.c	FUNCTION_1	IF_2
0x107	     0xf8480000000	                            je 0x40001cd	       104	buffer.c	FUNCTION_1	IF_2
0x10d	    0x8b0500000000	            mov eax, dword [0x04000153] 	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x113	            0x85c0	                           test eax, eax	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x115	            0x7528	                           jne 0x400017f	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x117	    0x488b05000000	            mov rax, qword [0x0400015e] 	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x11e	          0x488b00	                    mov rax, qword [rax]	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x121	        0x4883f801	                              cmp rax, 1	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x125	            0x7511	                           jne 0x4000178	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x127	      0xbf01000000	                              mov edi, 1	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x12c	      0xe800000000	                          call 0x4000171	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x131	           0xfb600	                   movzx eax, byte [rax]	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x134	            0x84c0	                             test al, al	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x136	            0x7407	                            je 0x400017f	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x138	      0xe800000000	                          call 0x400017d	       109	buffer.c	FUNCTION_1	IF_2	CALL_5
0x13d	            0xeb1c	                           jmp 0x400019b	       109	buffer.c	FUNCTION_1	IF_2	CALL_5
0x13f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       110	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x142	          0x83f801	                              cmp eax, 1	       110	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x145	            0x7514	                           jne 0x400019b	       110	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x147	    0x488b05000000	            mov rax, qword [0x0400018e] 	       111	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x14e	      0xbe00000000	                              mov esi, 0	       111	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x153	          0x4889c7	                            mov rdi, rax	       111	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x156	      0xe800000000	                          call 0x400019b	       111	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x15b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       113	buffer.c	FUNCTION_1	IF_2	IF_5
0x15e	          0x83f801	                              cmp eax, 1	       113	buffer.c	FUNCTION_1	IF_2	IF_5
0x161	            0x752a	                           jne 0x40001cd	       113	buffer.c	FUNCTION_1	IF_2	IF_5
0x163	    0x488b05000000	            mov rax, qword [0x040001aa] 	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x16a	        0x488d55ec	                   lea rdx, [rbp - 0x14]	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x16e	          0x4989d1	                             mov r9, rdx	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x171	          0x4989c0	                             mov r8, rax	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x174	      0xb900000000	                              mov ecx, 0	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x179	      0xba00000000	                              mov edx, 0	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x17e	      0xbe00000000	                              mov esi, 0	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x183	      0xbf49000000	                           mov edi, 0x49	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x188	      0xe800000000	                          call 0x40001cd	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x18d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       123	buffer.c	FUNCTION_1
0x190	        0x488b4df8	                mov rcx, qword [rbp - 8]	       124	buffer.c	FUNCTION_1
0x194	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       124	buffer.c	FUNCTION_1
0x19d	            0x7405	                            je 0x40001e4	       124	buffer.c	FUNCTION_1
0x19f	      0xe800000000	                          call 0x40001e4	       124	buffer.c	FUNCTION_1
0x1a4	              0xc9	                                   leave	       124	buffer.c	FUNCTION_1
0x1a5	              0xc3	                                     ret	       124	buffer.c	FUNCTION_1
do_autochdir	FOR,0:WHILE,0:ELSE,0:functions,0:IF,1:CALL,2:SWITCH,0:DO,0	24
0x2c58	              0x55	                                push rbp	      1808	buffer.c	FUNCTION_22
0x2c59	          0x4889e5	                            mov rbp, rsp	      1808	buffer.c	FUNCTION_22
0x2c5c	    0x8b0500000000	            mov eax, dword [0x04002ca2] 	      1809	buffer.c	FUNCTION_22	IF_1
0x2c62	            0x85c0	                           test eax, eax	      1809	buffer.c	FUNCTION_22	IF_1
0x2c64	            0x740a	                            je 0x4002cb0	      1809	buffer.c	FUNCTION_22	IF_1
0x2c66	    0x8b0500000000	            mov eax, dword [0x04002cac] 	      1809	buffer.c	FUNCTION_22	IF_1
0x2c6c	            0x85c0	                           test eax, eax	      1809	buffer.c	FUNCTION_22	IF_1
0x2c6e	            0x743d	                            je 0x4002ced	      1809	buffer.c	FUNCTION_22	IF_1
0x2c70	    0x488b05000000	            mov rax, qword [0x04002cb7] 	      1810	buffer.c	FUNCTION_22	IF_1
0x2c77	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1810	buffer.c	FUNCTION_22	IF_1
0x2c7e	          0x4885c0	                           test rax, rax	      1810	buffer.c	FUNCTION_22	IF_1
0x2c81	            0x742a	                            je 0x4002ced	      1810	buffer.c	FUNCTION_22	IF_1
0x2c83	    0x488b05000000	            mov rax, qword [0x04002cca] 	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x2c8a	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x2c91	      0xbe00000000	                              mov esi, 0	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x2c96	          0x4889c7	                            mov rdi, rax	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x2c99	      0xe800000000	                          call 0x4002cde	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x2c9e	          0x83f801	                              cmp eax, 1	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x2ca1	            0x750a	                           jne 0x4002ced	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x2ca3	      0xbf01000000	                              mov edi, 1	      1812	buffer.c	FUNCTION_22	CALL_2
0x2ca8	      0xe800000000	                          call 0x4002ced	      1812	buffer.c	FUNCTION_22	CALL_2
0x2cad	              0x90	                                     nop	      1813	buffer.c	FUNCTION_22
0x2cae	              0x5d	                                 pop rbp	      1813	buffer.c	FUNCTION_22
0x2caf	              0xc3	                                     ret	      1813	buffer.c	FUNCTION_22
buf_valid	FOR,1:WHILE,0:ELSE,0:functions,0:IF,1:CALL,0:SWITCH,0:DO,0	19
0x85d	              0x55	                                push rbp	       387	buffer.c	FUNCTION_5
0x85e	          0x4889e5	                            mov rbp, rsp	       387	buffer.c	FUNCTION_5
0x861	        0x48897de8	             mov qword [rbp - 0x18], rdi	       387	buffer.c	FUNCTION_5
0x865	    0x488b05000000	            mov rax, qword [0x040008ac] 	       392	buffer.c	FUNCTION_5	FOR_1
0x86c	        0x488945f8	                mov qword [rbp - 8], rax	       392	buffer.c	FUNCTION_5	FOR_1
0x870	            0xeb1d	                           jmp 0x40008cf	       392	buffer.c	FUNCTION_5	FOR_1
0x872	        0x488b45f8	                mov rax, qword [rbp - 8]	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x876	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x87a	            0x7507	                           jne 0x40008c3	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x87c	      0xb801000000	                              mov eax, 1	       394	buffer.c	FUNCTION_5	FOR_1	IF_1
0x881	            0xeb18	                           jmp 0x40008db	       394	buffer.c	FUNCTION_5	FOR_1	IF_1
0x883	        0x488b45f8	                mov rax, qword [rbp - 8]	       392	buffer.c	FUNCTION_5	FOR_1
0x887	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x88b	        0x488945f8	                mov qword [rbp - 8], rax	       392	buffer.c	FUNCTION_5	FOR_1
0x88f	      0x48837df800	                  cmp qword [rbp - 8], 0	       392	buffer.c	FUNCTION_5	FOR_1
0x894	            0x75dc	                           jne 0x40008b2	       392	buffer.c	FUNCTION_5	FOR_1
0x896	      0xb800000000	                              mov eax, 0	       395	buffer.c	FUNCTION_5
0x89b	              0x5d	                                 pop rbp	       396	buffer.c	FUNCTION_5
0x89c	              0xc3	                                     ret	       396	buffer.c	FUNCTION_5
get_winopts	FOR,0:WHILE,0:ELSE,1:functions,0:IF,2:CALL,7:SWITCH,0:DO,0	62
0x4bf7	              0x55	                                push rbp	      2889	buffer.c	ELSE_1	FUNCTION_42
0x4bf8	          0x4889e5	                            mov rbp, rsp	      2889	buffer.c	ELSE_1	FUNCTION_42
0x4bfb	        0x4883ec20	                           sub rsp, 0x20	      2889	buffer.c	ELSE_1	FUNCTION_42
0x4bff	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2889	buffer.c	ELSE_1	FUNCTION_42
0x4c03	    0x488b05000000	            mov rax, qword [0x04004c4a] 	      2892	buffer.c	ELSE_1	FUNCTION_42	CALL_1
0x4c0a	    0x4805b0010000	                          add rax, 0x1b0	      2892	buffer.c	ELSE_1	FUNCTION_42	CALL_1
0x4c10	          0x4889c7	                            mov rdi, rax	      2892	buffer.c	ELSE_1	FUNCTION_42	CALL_1
0x4c13	      0xe800000000	                          call 0x4004c58	      2892	buffer.c	ELSE_1	FUNCTION_42	CALL_1
0x4c18	    0x488b05000000	            mov rax, qword [0x04004c5f] 	      2894	buffer.c	ELSE_1	FUNCTION_42	CALL_2
0x4c1f	          0x4889c7	                            mov rdi, rax	      2894	buffer.c	ELSE_1	FUNCTION_42	CALL_2
0x4c22	      0xe800000000	                          call 0x4004c67	      2894	buffer.c	ELSE_1	FUNCTION_42	CALL_2
0x4c27	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2897	buffer.c	ELSE_1	FUNCTION_42	CALL_3
0x4c2b	      0xbe01000000	                              mov esi, 1	      2897	buffer.c	ELSE_1	FUNCTION_42	CALL_3
0x4c30	          0x4889c7	                            mov rdi, rax	      2897	buffer.c	ELSE_1	FUNCTION_42	CALL_3
0x4c33	      0xe809ffffff	                   call sym.find_wininfo	      2897	buffer.c	ELSE_1	FUNCTION_42	CALL_3
0x4c38	        0x488945f8	                mov qword [rbp - 8], rax	      2897	buffer.c	ELSE_1	FUNCTION_42	CALL_3
0x4c3c	      0x48837df800	                  cmp qword [rbp - 8], 0	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4c41	            0x7476	                            je 0x4004cf9	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4c43	        0x488b45f8	                mov rax, qword [rbp - 8]	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4c47	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4c4a	            0x85c0	                           test eax, eax	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4c4c	            0x746b	                            je 0x4004cf9	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4c4e	    0x488b05000000	            mov rax, qword [0x04004c95] 	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x4c55	    0x488d90b00100	                  lea rdx, [rax + 0x1b0]	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x4c5c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x4c60	        0x4883c030	                           add rax, 0x30	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x4c64	          0x4889d6	                            mov rsi, rdx	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x4c67	          0x4889c7	                            mov rdi, rax	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x4c6a	      0xe800000000	                          call 0x4004caf	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x4c6f	    0x488b05000000	            mov rax, qword [0x04004cb6] 	      2902	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4c76	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2902	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4c7a	    0x8b92e8010000	           mov edx, dword [rdx + 0x1e8] 	      2902	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4c80	    0x889020010000	              mov byte [rax + 0x120], dl	      2902	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4c86	    0x488b05000000	            mov rax, qword [0x04004ccd] 	      2903	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4c8d	    0xc68021010000	               mov byte [rax + 0x121], 1	      2903	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4c94	    0x488b05000000	            mov rax, qword [0x04004cdb] 	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x4c9b	    0x488d90080100	                  lea rdx, [rax + 0x108]	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x4ca2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x4ca6	    0x4805f0010000	                          add rax, 0x1f0	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x4cac	          0x4889d6	                            mov rsi, rdx	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x4caf	          0x4889c7	                            mov rdi, rax	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x4cb2	      0xe800000000	                          call 0x4004cf7	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x4cb7	            0xeb26	                           jmp 0x4004d1f	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x4cb9	    0x488b05000000	            mov rax, qword [0x04004d00] 	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x4cc0	    0x488d90b00100	                  lea rdx, [rax + 0x1b0]	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x4cc7	    0x488b05000000	            mov rax, qword [0x04004d0e] 	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x4cce	    0x480568030000	                          add rax, 0x368	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x4cd4	          0x4889d6	                            mov rsi, rdx	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x4cd7	          0x4889c7	                            mov rdi, rax	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x4cda	      0xe800000000	                          call 0x4004d1f	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x4cdf	    0x488b05000000	            mov rax, qword [0x04004d26] 	      2912	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x4ce6	          0x4885c0	                           test rax, rax	      2912	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x4ce9	            0x7815	                            js 0x4004d40	      2912	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x4ceb	    0x488b05000000	            mov rax, qword [0x04004d32] 	      2913	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x4cf2	    0x488b15000000	            mov rdx, qword [0x04004d39] 	      2913	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x4cf9	    0x488990e80100	            mov qword [rax + 0x1e8], rdx	      2913	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x4d00	    0x488b05000000	            mov rax, qword [0x04004d47] 	      2916	buffer.c	FUNCTION_42	ELSE_1	CALL_7
0x4d07	          0x4889c7	                            mov rdi, rax	      2916	buffer.c	FUNCTION_42	ELSE_1	CALL_7
0x4d0a	      0xe800000000	                          call 0x4004d4f	      2916	buffer.c	FUNCTION_42	ELSE_1	CALL_7
0x4d0f	              0x90	                                     nop	      2918	buffer.c	FUNCTION_42	ELSE_1
0x4d10	              0xc9	                                   leave	      2918	buffer.c	FUNCTION_42	ELSE_1
0x4d11	              0xc3	                                     ret	      2918	buffer.c	FUNCTION_42	ELSE_1
handle_swap_exists	FOR,0:WHILE,0:ELSE,2:functions,0:IF,5:CALL,12:SWITCH,0:DO,0	87
0x1780	              0x55	                                push rbp	      1009	buffer.c	FUNCTION_16
0x1781	          0x4889e5	                            mov rbp, rsp	      1009	buffer.c	FUNCTION_16
0x1784	        0x4883ec40	                           sub rsp, 0x40	      1009	buffer.c	FUNCTION_16
0x1788	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1009	buffer.c	FUNCTION_16
0x178c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1009	buffer.c	FUNCTION_16
0x1795	        0x488945f8	                mov qword [rbp - 8], rax	      1009	buffer.c	FUNCTION_16
0x1799	            0x31c0	                            xor eax, eax	      1009	buffer.c	FUNCTION_16
0x179b	    0x488b05000000	            mov rax, qword [0x040017e2] 	      1014	buffer.c	FUNCTION_16
0x17a2	    0x488b80b81500	          mov rax, qword [rax + 0x15b8] 	      1014	buffer.c	FUNCTION_16
0x17a9	        0x488945d8	             mov qword [rbp - 0x28], rax	      1014	buffer.c	FUNCTION_16
0x17ad	    0x8b0500000000	            mov eax, dword [0x040017f3] 	      1018	buffer.c	FUNCTION_16	IF_1
0x17b3	          0x83f802	                              cmp eax, 2	      1018	buffer.c	FUNCTION_16	IF_1
0x17b6	     0xf85d8000000	                           jne 0x40018d4	      1018	buffer.c	FUNCTION_16	IF_1
0x17bc	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1023	buffer.c	FUNCTION_16	IF_1	CALL_1
0x17c0	          0x4889c7	                            mov rdi, rax	      1023	buffer.c	FUNCTION_16	IF_1	CALL_1
0x17c3	      0xe800000000	                          call 0x4001808	      1023	buffer.c	FUNCTION_16	IF_1	CALL_1
0x17c8	    0xc70500000000	               mov dword [0x04001812], 0	      1029	buffer.c	FUNCTION_16	IF_1
0x17d2	    0xc70500000000	               mov dword [0x0400181c], 1	      1030	buffer.c	FUNCTION_16	IF_1
0x17dc	    0x488b35000000	            mov rsi, qword [0x04001823] 	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x17e3	    0x488b05000000	            mov rax, qword [0x0400182a] 	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x17ea	      0xb900000000	                              mov ecx, 0	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x17ef	      0xba02000000	                              mov edx, 2	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x17f4	          0x4889c7	                            mov rdi, rax	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x17f7	      0xe800000000	                          call 0x400183c	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x17fc	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1032	buffer.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x1801	            0x7423	                            je 0x4001866	      1032	buffer.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x1803	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1032	buffer.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x1807	          0x4889c7	                            mov rdi, rax	      1032	buffer.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x180a	      0xe800000000	                          call 0x400184f	      1032	buffer.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x180f	            0x85c0	                           test eax, eax	      1032	buffer.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x1811	            0x7413	                            je 0x4001866	      1032	buffer.c	FUNCTION_16	IF_1	IF_2	CALL_3
0x1813	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1033	buffer.c	FUNCTION_16	IF_1	IF_2
0x1817	          0x488b10	                    mov rdx, qword [rax]	      1033	buffer.c	FUNCTION_16	IF_1	IF_2
0x181a	    0x488b05000000	            mov rax, qword [0x04001861] 	      1033	buffer.c	FUNCTION_16	IF_1	IF_2
0x1821	          0x4839c2	                            cmp rdx, rax	      1033	buffer.c	FUNCTION_16	IF_1	IF_2
0x1824	            0x751f	                           jne 0x4001885	      1033	buffer.c	FUNCTION_16	IF_1	IF_2
0x1826	      0xb903000000	                              mov ecx, 3	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x182b	      0xba01000000	                              mov edx, 1	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x1830	      0xbe00000000	                              mov esi, 0	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x1835	      0xbf00000000	                              mov edi, 0	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x183a	      0xe800000000	                          call 0x400187f	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x183f	        0x488945d0	             mov qword [rbp - 0x30], rax	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x1843	            0xeb0b	                           jmp 0x4001890	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x1845	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1036	buffer.c	FUNCTION_16	IF_1	ELSE_1
0x1849	          0x488b00	                    mov rax, qword [rax]	      1036	buffer.c	FUNCTION_16	IF_1	ELSE_1
0x184c	        0x488945d0	             mov qword [rbp - 0x30], rax	      1036	buffer.c	FUNCTION_16	IF_1	ELSE_1
0x1850	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1037	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3
0x1855	            0x742f	                            je 0x40018c6	      1037	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3
0x1857	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1039	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_5
0x185b	          0x4889c7	                            mov rdi, rax	      1039	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_5
0x185e	      0xe800000000	                          call 0x40018a3	      1039	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_5
0x1863	    0x488b05000000	            mov rax, qword [0x040018aa] 	      1041	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	IF_4
0x186a	    0x488b80b81500	          mov rax, qword [rax + 0x15b8] 	      1041	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	IF_4
0x1871	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1041	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	IF_4
0x1875	            0x740f	                            je 0x40018c6	      1041	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	IF_4
0x1877	    0x488b05000000	            mov rax, qword [0x040018be] 	      1042	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_6
0x187e	          0x4889c7	                            mov rdi, rax	      1042	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_6
0x1881	      0xe800000000	                          call 0x40018c6	      1042	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_6
0x1886	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1050	buffer.c	FUNCTION_16	IF_1	CALL_7
0x188a	          0x4889c7	                            mov rdi, rax	      1050	buffer.c	FUNCTION_16	IF_1	CALL_7
0x188d	      0xe800000000	                          call 0x40018d2	      1050	buffer.c	FUNCTION_16	IF_1	CALL_7
0x1892	            0xeb52	                           jmp 0x4001926	      1050	buffer.c	FUNCTION_16	IF_1	CALL_7
0x1894	    0x8b0500000000	            mov eax, dword [0x040018da] 	      1053	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x189a	          0x83f803	                              cmp eax, 3	      1053	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x189d	            0x7547	                           jne 0x4001926	      1053	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x189f	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1058	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_8
0x18a3	          0x4889c7	                            mov rdi, rax	      1058	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_8
0x18a6	      0xe800000000	                          call 0x40018eb	      1058	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_8
0x18ab	    0xc70500000000	               mov dword [0x040018f5], 1	      1062	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x18b5	      0xe800000000	                          call 0x40018fa	      1063	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_9
0x18ba	      0xbf00000000	                              mov edi, 0	      1064	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_10
0x18bf	      0xe800000000	                          call 0x4001904	      1064	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_10
0x18c4	    0x8b0500000000	            mov eax, dword [0x0400190a] 	      1065	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x18ca	    0x890500000000	            mov dword [0x04001910], eax 	      1065	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x18d0	      0xbf00000000	                              mov edi, 0	      1066	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_11
0x18d5	      0xe800000000	                          call 0x400191a	      1066	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_11
0x18da	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1071	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_12
0x18de	          0x4889c7	                            mov rdi, rax	      1071	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_12
0x18e1	      0xe800000000	                          call 0x4001926	      1071	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_12
0x18e6	    0xc70500000000	               mov dword [0x04001930], 0	      1074	buffer.c	FUNCTION_16
0x18f0	              0x90	                                     nop	      1075	buffer.c	FUNCTION_16
0x18f1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1075	buffer.c	FUNCTION_16
0x18f5	    0x644833042528	                xor rax, qword fs:[0x28]	      1075	buffer.c	FUNCTION_16
0x18fe	            0x7405	                            je 0x4001945	      1075	buffer.c	FUNCTION_16
0x1900	      0xe800000000	                          call 0x4001945	      1075	buffer.c	FUNCTION_16
0x1905	              0xc9	                                   leave	      1075	buffer.c	FUNCTION_16
0x1906	              0xc3	                                     ret	      1075	buffer.c	FUNCTION_16
bt_help	FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,0:SWITCH,0:DO,0	14
0xb66c	              0x55	                                push rbp	      5617	buffer.c	FUNCTION_79
0xb66d	          0x4889e5	                            mov rbp, rsp	      5617	buffer.c	FUNCTION_79
0xb670	        0x48897df8	                mov qword [rbp - 8], rdi	      5617	buffer.c	FUNCTION_79
0xb674	      0x48837df800	                  cmp qword [rbp - 8], 0	      5618	buffer.c	FUNCTION_79
0xb679	            0x7415	                            je 0x400b6d0	      5618	buffer.c	FUNCTION_79
0xb67b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5618	buffer.c	FUNCTION_79
0xb67f	    0x8b8058170000	          mov eax, dword [rax + 0x1758] 	      5618	buffer.c	FUNCTION_79
0xb685	            0x85c0	                           test eax, eax	      5618	buffer.c	FUNCTION_79
0xb687	            0x7407	                            je 0x400b6d0	      5618	buffer.c	FUNCTION_79
0xb689	      0xb801000000	                              mov eax, 1	      5618	buffer.c	FUNCTION_79
0xb68e	            0xeb05	                           jmp 0x400b6d5	      5618	buffer.c	FUNCTION_79
0xb690	      0xb800000000	                              mov eax, 0	      5618	buffer.c	FUNCTION_79
0xb695	              0x5d	                                 pop rbp	      5619	buffer.c	FUNCTION_79
0xb696	              0xc3	                                     ret	      5619	buffer.c	FUNCTION_79
buf_findsign	FOR,1:WHILE,0:ELSE,0:functions,0:IF,1:CALL,0:SWITCH,0:DO,0	23
0xbecc	              0x55	                                push rbp	      5984	buffer.c	FUNCTION_93
0xbecd	          0x4889e5	                            mov rbp, rsp	      5984	buffer.c	FUNCTION_93
0xbed0	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5984	buffer.c	FUNCTION_93
0xbed4	          0x8975e4	             mov dword [rbp - 0x1c], esi	      5984	buffer.c	FUNCTION_93
0xbed7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5987	buffer.c	FUNCTION_93	FOR_1
0xbedb	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      5987	buffer.c	FUNCTION_93	FOR_1
0xbee2	        0x488945f8	                mov qword [rbp - 8], rax	      5987	buffer.c	FUNCTION_93	FOR_1
0xbee6	            0xeb21	                           jmp 0x400bf49	      5987	buffer.c	FUNCTION_93	FOR_1
0xbee8	        0x488b45f8	                mov rax, qword [rbp - 8]	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0xbeec	            0x8b00	                    mov eax, dword [rax]	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0xbeee	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0xbef1	            0x750a	                           jne 0x400bf3d	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0xbef3	        0x488b45f8	                mov rax, qword [rbp - 8]	      5989	buffer.c	FUNCTION_93	FOR_1	IF_1
0xbef7	        0x488b4008	                mov rax, qword [rax + 8]	      5989	buffer.c	FUNCTION_93	FOR_1	IF_1
0xbefb	            0xeb18	                           jmp 0x400bf55	      5989	buffer.c	FUNCTION_93	FOR_1	IF_1
0xbefd	        0x488b45f8	                mov rax, qword [rbp - 8]	      5987	buffer.c	FUNCTION_93	FOR_1
0xbf01	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5987	buffer.c	FUNCTION_93	FOR_1
0xbf05	        0x488945f8	                mov qword [rbp - 8], rax	      5987	buffer.c	FUNCTION_93	FOR_1
0xbf09	      0x48837df800	                  cmp qword [rbp - 8], 0	      5987	buffer.c	FUNCTION_93	FOR_1
0xbf0e	            0x75d8	                           jne 0x400bf28	      5987	buffer.c	FUNCTION_93	FOR_1
0xbf10	      0xb800000000	                              mov eax, 0	      5991	buffer.c	FUNCTION_93
0xbf15	              0x5d	                                 pop rbp	      5992	buffer.c	FUNCTION_93
0xbf16	              0xc3	                                     ret	      5992	buffer.c	FUNCTION_93
buf_findsigntype_id	FOR,1:WHILE,0:ELSE,0:functions,0:IF,1:CALL,0:SWITCH,0:DO,0	28
0xbf64	              0x55	                                push rbp	      6016	buffer.c	FUNCTION_95
0xbf65	          0x4889e5	                            mov rbp, rsp	      6016	buffer.c	FUNCTION_95
0xbf68	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6016	buffer.c	FUNCTION_95
0xbf6c	        0x488975e0	             mov qword [rbp - 0x20], rsi	      6016	buffer.c	FUNCTION_95
0xbf70	          0x8955dc	             mov dword [rbp - 0x24], edx	      6016	buffer.c	FUNCTION_95
0xbf73	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6019	buffer.c	FUNCTION_95	FOR_1
0xbf77	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      6019	buffer.c	FUNCTION_95	FOR_1
0xbf7e	        0x488945f8	                mov qword [rbp - 8], rax	      6019	buffer.c	FUNCTION_95	FOR_1
0xbf82	            0xeb2e	                           jmp 0x400bff2	      6019	buffer.c	FUNCTION_95	FOR_1
0xbf84	        0x488b45f8	                mov rax, qword [rbp - 8]	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0xbf88	        0x488b4008	                mov rax, qword [rax + 8]	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0xbf8c	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0xbf90	            0x7514	                           jne 0x400bfe6	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0xbf92	        0x488b45f8	                mov rax, qword [rbp - 8]	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0xbf96	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0xbf99	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0xbf9c	            0x7508	                           jne 0x400bfe6	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0xbf9e	        0x488b45f8	                mov rax, qword [rbp - 8]	      6021	buffer.c	FUNCTION_95	FOR_1	IF_1
0xbfa2	            0x8b00	                    mov eax, dword [rax]	      6021	buffer.c	FUNCTION_95	FOR_1	IF_1
0xbfa4	            0xeb18	                           jmp 0x400bffe	      6021	buffer.c	FUNCTION_95	FOR_1	IF_1
0xbfa6	        0x488b45f8	                mov rax, qword [rbp - 8]	      6019	buffer.c	FUNCTION_95	FOR_1
0xbfaa	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6019	buffer.c	FUNCTION_95	FOR_1
0xbfae	        0x488945f8	                mov qword [rbp - 8], rax	      6019	buffer.c	FUNCTION_95	FOR_1
0xbfb2	      0x48837df800	                  cmp qword [rbp - 8], 0	      6019	buffer.c	FUNCTION_95	FOR_1
0xbfb7	            0x75cb	                           jne 0x400bfc4	      6019	buffer.c	FUNCTION_95	FOR_1
0xbfb9	      0xb800000000	                              mov eax, 0	      6023	buffer.c	FUNCTION_95
0xbfbe	              0x5d	                                 pop rbp	      6024	buffer.c	FUNCTION_95
0xbfbf	              0xc3	                                     ret	      6024	buffer.c	FUNCTION_95
open_buffer	FOR,0:WHILE,0:ELSE,2:functions,0:IF,22:CALL,43:SWITCH,0:DO,0	339
0x1a6	              0x55	                                push rbp	       136	buffer.c	FUNCTION_2
0x1a7	          0x4889e5	                            mov rbp, rsp	       136	buffer.c	FUNCTION_2
0x1aa	    0x4881ec900000	                           sub rsp, 0x90	       136	buffer.c	FUNCTION_2
0x1b1	    0x89bd7cffffff	             mov dword [rbp - 0x84], edi	       136	buffer.c	FUNCTION_2
0x1b7	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       136	buffer.c	FUNCTION_2
0x1be	    0x899578ffffff	             mov dword [rbp - 0x88], edx	       136	buffer.c	FUNCTION_2
0x1c4	    0x64488b042528	                mov rax, qword fs:[0x28]	       136	buffer.c	FUNCTION_2
0x1cd	        0x488945f8	                mov qword [rbp - 8], rax	       136	buffer.c	FUNCTION_2
0x1d1	            0x31c0	                            xor eax, eax	       136	buffer.c	FUNCTION_2
0x1d3	    0xc7458c010000	               mov dword [rbp - 0x74], 1	       137	buffer.c	FUNCTION_2
0x1da	    0x488b05000000	            mov rax, qword [0x04000221] 	       140	buffer.c	FUNCTION_2
0x1e1	    0x488b80b81500	          mov rax, qword [rax + 0x15b8] 	       140	buffer.c	FUNCTION_2
0x1e8	        0x488945a8	             mov qword [rbp - 0x58], rax	       140	buffer.c	FUNCTION_2
0x1ec	    0xc74590000000	               mov dword [rbp - 0x70], 0	       142	buffer.c	FUNCTION_2
0x1f3	    0x8b0500000000	            mov eax, dword [0x04000239] 	       149	buffer.c	FUNCTION_2	IF_1
0x1f9	            0x85c0	                           test eax, eax	       149	buffer.c	FUNCTION_2	IF_1
0x1fb	            0x7435	                            je 0x4000272	       149	buffer.c	FUNCTION_2	IF_1
0x1fd	    0x488b05000000	            mov rax, qword [0x04000244] 	       149	buffer.c	FUNCTION_2	IF_1
0x204	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       149	buffer.c	FUNCTION_2	IF_1
0x20b	          0x4885c0	                           test rax, rax	       149	buffer.c	FUNCTION_2	IF_1
0x20e	            0x7422	                            je 0x4000272	       149	buffer.c	FUNCTION_2	IF_1
0x210	    0x488b05000000	            mov rax, qword [0x04000257] 	       150	buffer.c	FUNCTION_2	IF_1
0x217	          0x8b407c	            mov eax, dword [rax + 0x7c] 	       150	buffer.c	FUNCTION_2	IF_1
0x21a	          0x83e004	                              and eax, 4	       150	buffer.c	FUNCTION_2	IF_1
0x21d	            0x85c0	                           test eax, eax	       150	buffer.c	FUNCTION_2	IF_1
0x21f	            0x7411	                            je 0x4000272	       150	buffer.c	FUNCTION_2	IF_1
0x221	    0x488b05000000	            mov rax, qword [0x04000268] 	       151	buffer.c	FUNCTION_2	IF_1
0x228	    0xc78060150000	            mov dword [rax + 0x1560], 1 	       151	buffer.c	FUNCTION_2	IF_1
0x232	    0x488b05000000	            mov rax, qword [0x04000279] 	       153	buffer.c	FUNCTION_2	IF_2	CALL_1
0x239	          0x4889c7	                            mov rdi, rax	       153	buffer.c	FUNCTION_2	IF_2	CALL_1
0x23c	      0xe800000000	                          call 0x4000281	       153	buffer.c	FUNCTION_2	IF_2	CALL_1
0x241	            0x85c0	                           test eax, eax	       153	buffer.c	FUNCTION_2	IF_2	CALL_1
0x243	     0xf85d5000000	                           jne 0x400035e	       153	buffer.c	FUNCTION_2	IF_2	CALL_1
0x249	    0x488b05000000	            mov rax, qword [0x04000290] 	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x250	      0xb900000000	                              mov ecx, 0	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x255	      0xba00000000	                              mov edx, 0	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x25a	          0x4889c6	                            mov rsi, rax	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x25d	      0xbf00000000	                              mov edi, 0	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x262	      0xe800000000	                          call 0x40002a7	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x267	    0x488b05000000	            mov rax, qword [0x040002ae] 	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x26e	    0x488905000000	            mov qword [0x040002b5], rax 	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x275	            0xeb22	                           jmp 0x40002d9	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x277	    0x488b05000000	            mov rax, qword [0x040002be] 	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x27e	        0x488b4008	                mov rax, qword [rax + 8]	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x282	          0x4885c0	                           test rax, rax	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x285	            0x7520	                           jne 0x40002e7	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x287	    0x488b05000000	            mov rax, qword [0x040002ce] 	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x28e	        0x488b4068	            mov rax, qword [rax + 0x68] 	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x292	    0x488905000000	            mov qword [0x040002d9], rax 	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x299	    0x488b05000000	            mov rax, qword [0x040002e0] 	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x2a0	          0x4885c0	                           test rax, rax	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x2a3	            0x75d2	                           jne 0x40002b7	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x2a5	            0xeb01	                           jmp 0x40002e8	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x2a7	              0x90	                                     nop	       162	buffer.c	FUNCTION_2	IF_2	IF_3
0x2a8	    0x488b05000000	            mov rax, qword [0x040002ef] 	       167	buffer.c	FUNCTION_2	IF_2	IF_4
0x2af	          0x4885c0	                           test rax, rax	       167	buffer.c	FUNCTION_2	IF_2	IF_4
0x2b2	            0x751c	                           jne 0x4000310	       167	buffer.c	FUNCTION_2	IF_2	IF_4
0x2b4	      0xbf00000000	                              mov edi, 0	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x2b9	      0xe800000000	                          call 0x40002fe	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x2be	          0x4889c7	                            mov rdi, rax	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x2c1	      0xe800000000	                          call 0x4000306	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x2c6	      0xbf02000000	                              mov edi, 2	       170	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x2cb	      0xe800000000	                          call 0x4000310	       170	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x2d0	      0xbf00000000	                              mov edi, 0	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x2d5	      0xe800000000	                          call 0x400031a	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x2da	          0x4889c7	                            mov rdi, rax	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x2dd	      0xe800000000	                          call 0x4000322	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x2e2	    0x488b05000000	            mov rax, qword [0x04000329] 	       173	buffer.c	FUNCTION_2	IF_2	CALL_9
0x2e9	          0x4889c7	                            mov rdi, rax	       173	buffer.c	FUNCTION_2	IF_2	CALL_9
0x2ec	      0xe800000000	                          call 0x4000331	       173	buffer.c	FUNCTION_2	IF_2	CALL_9
0x2f1	    0x488b05000000	            mov rax, qword [0x04000338] 	       175	buffer.c	FUNCTION_2	IF_2	IF_5
0x2f8	    0x488b80b81500	          mov rax, qword [rax + 0x15b8] 	       175	buffer.c	FUNCTION_2	IF_2	IF_5
0x2ff	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       175	buffer.c	FUNCTION_2	IF_2	IF_5
0x303	            0x740f	                            je 0x4000354	       175	buffer.c	FUNCTION_2	IF_2	IF_5
0x305	    0x488b05000000	            mov rax, qword [0x0400034c] 	       176	buffer.c	FUNCTION_2	IF_2	CALL_10
0x30c	          0x4889c7	                            mov rdi, rax	       176	buffer.c	FUNCTION_2	IF_2	CALL_10
0x30f	      0xe800000000	                          call 0x4000354	       176	buffer.c	FUNCTION_2	IF_2	CALL_10
0x314	      0xb800000000	                              mov eax, 0	       178	buffer.c	FUNCTION_2	IF_2
0x319	      0xe98d040000	                           jmp 0x40007eb	       178	buffer.c	FUNCTION_2	IF_2
0x31e	    0x488b15000000	            mov rdx, qword [0x04000365] 	       183	buffer.c	FUNCTION_2	CALL_11
0x325	        0x488d45b0	                   lea rax, [rbp - 0x50]	       183	buffer.c	FUNCTION_2	CALL_11
0x329	          0x4889d6	                            mov rsi, rdx	       183	buffer.c	FUNCTION_2	CALL_11
0x32c	          0x4889c7	                            mov rdi, rax	       183	buffer.c	FUNCTION_2	CALL_11
0x32f	      0xe800000000	                          call 0x4000374	       183	buffer.c	FUNCTION_2	CALL_11
0x334	    0xc70500000000	               mov dword [0x0400037e], 0	       184	buffer.c	FUNCTION_2
0x33e	    0x488b05000000	            mov rax, qword [0x04000385] 	       187	buffer.c	FUNCTION_2
0x345	    0xc780b4000000	               mov dword [rax + 0xb4], 0	       187	buffer.c	FUNCTION_2
0x34f	    0x488b05000000	            mov rax, qword [0x04000396] 	       189	buffer.c	FUNCTION_2	IF_6
0x356	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       189	buffer.c	FUNCTION_2	IF_6
0x35d	          0x4885c0	                           test rax, rax	       189	buffer.c	FUNCTION_2	IF_6
0x360	     0xf8484010000	                            je 0x400052a	       189	buffer.c	FUNCTION_2	IF_6
0x366	    0x8b0500000000	            mov eax, dword [0x040003ac] 	       191	buffer.c	FUNCTION_2	IF_6
0x36c	            0x85c0	                           test eax, eax	       191	buffer.c	FUNCTION_2	IF_6
0x36e	     0xf8476010000	                            je 0x400052a	       191	buffer.c	FUNCTION_2	IF_6
0x374	    0x8b0500000000	            mov eax, dword [0x040003ba] 	       195	buffer.c	FUNCTION_2	IF_6
0x37a	          0x894594	             mov dword [rbp - 0x6c], eax	       195	buffer.c	FUNCTION_2	IF_6
0x37d	    0x488b05000000	            mov rax, qword [0x040003c4] 	       197	buffer.c	FUNCTION_2	IF_6
0x384	    0x8b8008140000	          mov eax, dword [rax + 0x1408] 	       197	buffer.c	FUNCTION_2	IF_6
0x38a	          0x894598	             mov dword [rbp - 0x68], eax	       197	buffer.c	FUNCTION_2	IF_6
0x38d	    0x8b0500000000	            mov eax, dword [0x040003d3] 	       201	buffer.c	FUNCTION_2	IF_6
0x393	          0x89459c	             mov dword [rbp - 0x64], eax	       201	buffer.c	FUNCTION_2	IF_6
0x396	    0xc70500000000	               mov dword [0x040003e0], 0	       203	buffer.c	FUNCTION_2	IF_6
0x3a0	    0x488b05000000	            mov rax, qword [0x040003e7] 	       206	buffer.c	FUNCTION_2	IF_6	CALL_12
0x3a7	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       206	buffer.c	FUNCTION_2	IF_6	CALL_12
0x3ae	          0x4889c7	                            mov rdi, rax	       206	buffer.c	FUNCTION_2	IF_6	CALL_12
0x3b1	      0xe800000000	                          call 0x40003f6	       206	buffer.c	FUNCTION_2	IF_6	CALL_12
0x3b6	          0x8945a0	             mov dword [rbp - 0x60], eax	       206	buffer.c	FUNCTION_2	IF_6	CALL_12
0x3b9	        0x837da000	               cmp dword [rbp - 0x60], 0	       207	buffer.c	FUNCTION_2	IF_6	IF_7
0x3bd	            0x7825	                            js 0x4000424	       207	buffer.c	FUNCTION_2	IF_6	IF_7
0x3bf	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       209	buffer.c	FUNCTION_2	IF_6	IF_7	CALL_13
0x3c2	      0x2500f00000	                         and eax, 0xf000	       209	buffer.c	FUNCTION_2	IF_6	IF_7	CALL_13
0x3c7	      0x3d00100000	                         cmp eax, 0x1000	       207	buffer.c	FUNCTION_2	IF_6	IF_7
0x3cc	            0x740f	                            je 0x400041d	       207	buffer.c	FUNCTION_2	IF_6	IF_7
0x3ce	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       212	buffer.c	FUNCTION_2	IF_6	IF_7	CALL_14
0x3d1	      0x2500f00000	                         and eax, 0xf000	       212	buffer.c	FUNCTION_2	IF_6	IF_7	CALL_14
0x3d6	      0x3d00c00000	                         cmp eax, 0xc000	       212	buffer.c	FUNCTION_2	IF_6	IF_7	CALL_14
0x3db	            0x7507	                           jne 0x4000424	       212	buffer.c	FUNCTION_2	IF_6	IF_7	CALL_14
0x3dd	    0xc74590010000	               mov dword [rbp - 0x70], 1	       218	buffer.c	FUNCTION_2	IF_6	IF_7
0x3e4	        0x837d9000	               cmp dword [rbp - 0x70], 0	       219	buffer.c	FUNCTION_2	IF_6	IF_8
0x3e8	            0x7411	                            je 0x400043b	       219	buffer.c	FUNCTION_2	IF_6	IF_8
0x3ea	    0x488b05000000	            mov rax, qword [0x04000431] 	       220	buffer.c	FUNCTION_2	IF_6	IF_8
0x3f1	    0xc78008140000	            mov dword [rax + 0x1408], 1 	       220	buffer.c	FUNCTION_2	IF_6	IF_8
0x3fb	      0xbf46000000	                           mov edi, 0x46	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x400	      0xe800000000	                          call 0x4000445	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x405	            0x85c0	                           test eax, eax	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x407	            0x740a	                            je 0x4000453	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x409	    0xc70500000000	               mov dword [0x04000453], 1	       223	buffer.c	FUNCTION_2	IF_6	IF_9
0x413	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       226	buffer.c	FUNCTION_2	IF_6
0x419	          0x83c801	                               or eax, 1	       226	buffer.c	FUNCTION_2	IF_6
0x41c	        0x837d9000	               cmp dword [rbp - 0x70], 0	       226	buffer.c	FUNCTION_2	IF_6
0x420	            0x7407	                            je 0x4000469	       226	buffer.c	FUNCTION_2	IF_6
0x422	      0xba40000000	                           mov edx, 0x40	       226	buffer.c	FUNCTION_2	IF_6
0x427	            0xeb05	                           jmp 0x400046e	       226	buffer.c	FUNCTION_2	IF_6
0x429	      0xba00000000	                              mov edx, 0	       226	buffer.c	FUNCTION_2	IF_6
0x42e	             0x9d0	                             or eax, edx	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x430	            0x89c1	                            mov ecx, eax	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x432	    0x488b05000000	            mov rax, qword [0x04000479] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x439	    0x488bb0980000	            mov rsi, qword [rax + 0x98] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x440	    0x488b05000000	            mov rax, qword [0x04000487] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x447	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x44e	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x455	        0x4883ec08	                              sub rsp, 8	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x459	              0x51	                                push rcx	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x45a	          0x4989d1	                             mov r9, rdx	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x45d	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x463	      0xb900000000	                              mov ecx, 0	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x468	      0xba00000000	                              mov edx, 0	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x46d	          0x4889c7	                            mov rdi, rax	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x470	      0xe800000000	                          call 0x40004b5	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x475	        0x4883c410	                           add rsp, 0x10	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x479	          0x89458c	             mov dword [rbp - 0x74], eax	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x47c	        0x837d9000	               cmp dword [rbp - 0x70], 0	       228	buffer.c	FUNCTION_2	IF_6	IF_10
0x480	            0x7435	                            je 0x40004f7	       228	buffer.c	FUNCTION_2	IF_6	IF_10
0x482	    0x488b05000000	            mov rax, qword [0x040004c9] 	       230	buffer.c	FUNCTION_2	IF_6	IF_10
0x489	          0x8b5598	             mov edx, dword [rbp - 0x68]	       230	buffer.c	FUNCTION_2	IF_6	IF_10
0x48c	    0x899008140000	          mov dword [rax + 0x1408], edx 	       230	buffer.c	FUNCTION_2	IF_6	IF_10
0x492	          0x8b458c	             mov eax, dword [rbp - 0x74]	       231	buffer.c	FUNCTION_2	IF_6	IF_10	IF_11
0x495	          0x83f801	                              cmp eax, 1	       231	buffer.c	FUNCTION_2	IF_6	IF_10	IF_11
0x498	            0x751d	                           jne 0x40004f7	       231	buffer.c	FUNCTION_2	IF_6	IF_10	IF_11
0x49a	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x4a0	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x4a7	          0x4889c6	                            mov rsi, rax	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x4aa	      0xbf00000000	                              mov edi, 0	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x4af	      0xe84cfbffff	                    call sym.read_buffer	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x4b4	          0x89458c	             mov dword [rbp - 0x74], eax	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x4b7	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       235	buffer.c	FUNCTION_2	IF_6
0x4ba	    0x890500000000	            mov dword [0x04000500], eax 	       235	buffer.c	FUNCTION_2	IF_6
0x4c0	          0x8b459c	             mov eax, dword [rbp - 0x64]	       237	buffer.c	FUNCTION_2	IF_6
0x4c3	    0x890500000000	            mov dword [0x04000509], eax 	       237	buffer.c	FUNCTION_2	IF_6
0x4c9	    0x488b05000000	            mov rax, qword [0x04000510] 	       240	buffer.c	FUNCTION_2	IF_6	IF_12	CALL_20
0x4d0	          0x4889c7	                            mov rdi, rax	       240	buffer.c	FUNCTION_2	IF_6	IF_12	CALL_20
0x4d3	      0xe800000000	                          call 0x4000518	       240	buffer.c	FUNCTION_2	IF_6	IF_12	CALL_20
0x4d8	            0x85c0	                           test eax, eax	       240	buffer.c	FUNCTION_2	IF_6	IF_12	CALL_20
0x4da	     0xf84a9000000	                            je 0x40005c9	       240	buffer.c	FUNCTION_2	IF_6	IF_12	CALL_20
0x4e0	      0xe800000000	                          call 0x4000525	       241	buffer.c	FUNCTION_2	IF_6	CALL_21
0x4e5	      0xe99f000000	                           jmp 0x40005c9	       194	buffer.c	FUNCTION_2	IF_6
0x4ea	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	       243	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4f1	     0xf8493000000	                            je 0x40005ca	       243	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4f7	    0x488b05000000	            mov rax, qword [0x0400053e] 	       245	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4fe	    0x8b8008140000	          mov eax, dword [rax + 0x1408] 	       245	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x504	          0x8945a4	             mov dword [rbp - 0x5c], eax	       245	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x507	    0x488b05000000	            mov rax, qword [0x0400054e] 	       253	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x50e	    0xc78008140000	            mov dword [rax + 0x1408], 1 	       253	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x518	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x51e	          0x83c805	                               or eax, 5	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x521	        0x4883ec08	                              sub rsp, 8	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x525	              0x50	                                push rax	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x526	    0x41b900000000	                              mov r9d, 0	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x52c	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x532	      0xb900000000	                              mov ecx, 0	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x537	      0xba00000000	                              mov edx, 0	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x53c	      0xbe00000000	                              mov esi, 0	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x541	      0xbf00000000	                              mov edi, 0	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x546	      0xe800000000	                          call 0x400058b	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x54b	        0x4883c410	                           add rsp, 0x10	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x54f	          0x89458c	             mov dword [rbp - 0x74], eax	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x552	    0x488b05000000	            mov rax, qword [0x04000599] 	       257	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x559	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       257	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x55c	    0x899008140000	          mov dword [rax + 0x1408], edx 	       257	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x562	          0x8b458c	             mov eax, dword [rbp - 0x74]	       258	buffer.c	FUNCTION_2	ELSE_1	IF_13	IF_14
0x565	          0x83f801	                              cmp eax, 1	       258	buffer.c	FUNCTION_2	ELSE_1	IF_13	IF_14
0x568	            0x7520	                           jne 0x40005ca	       258	buffer.c	FUNCTION_2	ELSE_1	IF_13	IF_14
0x56a	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x570	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x577	          0x4889c6	                            mov rsi, rax	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x57a	      0xbf01000000	                              mov edi, 1	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x57f	      0xe87cfaffff	                    call sym.read_buffer	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x584	          0x89458c	             mov dword [rbp - 0x74], eax	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x587	            0xeb01	                           jmp 0x40005ca	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x589	              0x90	                                     nop	       194	buffer.c	FUNCTION_2	IF_6
0x58a	    0x488b05000000	            mov rax, qword [0x040005d1] 	       263	buffer.c	FUNCTION_2	IF_15
0x591	          0x8b407c	            mov eax, dword [rax + 0x7c] 	       263	buffer.c	FUNCTION_2	IF_15
0x594	          0x83e004	                              and eax, 4	       263	buffer.c	FUNCTION_2	IF_15
0x597	            0x85c0	                           test eax, eax	       263	buffer.c	FUNCTION_2	IF_15
0x599	            0x7423	                            je 0x40005fe	       263	buffer.c	FUNCTION_2	IF_15
0x59b	    0x488b05000000	            mov rax, qword [0x040005e2] 	       265	buffer.c	FUNCTION_2	IF_15	CALL_24
0x5a2	      0xbe00000000	                              mov esi, 0	       265	buffer.c	FUNCTION_2	IF_15	CALL_24
0x5a7	          0x4889c7	                            mov rdi, rax	       265	buffer.c	FUNCTION_2	IF_15	CALL_24
0x5aa	      0xe800000000	                          call 0x40005ef	       265	buffer.c	FUNCTION_2	IF_15	CALL_24
0x5af	    0x488b05000000	            mov rax, qword [0x040005f6] 	       267	buffer.c	FUNCTION_2	IF_15	CALL_25
0x5b6	          0x4889c7	                            mov rdi, rax	       267	buffer.c	FUNCTION_2	IF_15	CALL_25
0x5b9	      0xe800000000	                          call 0x40005fe	       267	buffer.c	FUNCTION_2	IF_15	CALL_25
0x5be	    0x8b0500000000	            mov eax, dword [0x04000604] 	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x5c4	            0x85c0	                           test eax, eax	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x5c6	            0x7419	                            je 0x4000621	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x5c8	    0x488b05000000	            mov rax, qword [0x0400060f] 	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x5cf	      0xbe69000000	                           mov esi, 0x69	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x5d4	          0x4889c7	                            mov rdi, rax	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x5d7	      0xe800000000	                          call 0x400061c	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x5dc	          0x4885c0	                           test rax, rax	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x5df	            0x752c	                           jne 0x400064d	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x5e1	    0x8b0500000000	            mov eax, dword [0x04000627] 	       280	buffer.c	FUNCTION_2	IF_16
0x5e7	            0x85c0	                           test eax, eax	       280	buffer.c	FUNCTION_2	IF_16
0x5e9	            0x7522	                           jne 0x400064d	       280	buffer.c	FUNCTION_2	IF_16
0x5eb	      0xe800000000	                          call 0x4000630	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x5f0	            0x85c0	                           test eax, eax	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x5f2	            0x7420	                            je 0x4000654	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x5f4	    0x488b05000000	            mov rax, qword [0x0400063b] 	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x5fb	      0xbe69000000	                           mov esi, 0x69	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x600	          0x4889c7	                            mov rdi, rax	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x603	      0xe800000000	                          call 0x4000648	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x608	          0x4885c0	                           test rax, rax	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x60b	            0x7407	                            je 0x4000654	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x60d	      0xe800000000	                          call 0x4000652	       285	buffer.c	FUNCTION_2	CALL_29
0x612	            0xeb2b	                           jmp 0x400067f	       285	buffer.c	FUNCTION_2	CALL_29
0x614	          0x8b458c	             mov eax, dword [rbp - 0x74]	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x617	          0x83f801	                              cmp eax, 1	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x61a	            0x7523	                           jne 0x400067f	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x61c	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x623	            0x751a	                           jne 0x400067f	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x625	        0x837d9000	               cmp dword [rbp - 0x70], 0	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x629	            0x7514	                           jne 0x400067f	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x62b	    0x488b05000000	            mov rax, qword [0x04000672] 	       287	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x632	      0xbe00000000	                              mov esi, 0	       287	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x637	          0x4889c7	                            mov rdi, rax	       287	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x63a	      0xe800000000	                          call 0x400067f	       287	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x63f	    0x488b05000000	            mov rax, qword [0x04000686] 	       288	buffer.c	FUNCTION_2	CALL_31
0x646	          0x4889c7	                            mov rdi, rax	       288	buffer.c	FUNCTION_2	CALL_31
0x649	      0xe800000000	                          call 0x400068e	       288	buffer.c	FUNCTION_2	CALL_31
0x64e	    0x488b05000000	            mov rax, qword [0x04000695] 	       292	buffer.c	FUNCTION_2	CALL_32
0x655	    0x488b15000000	            mov rdx, qword [0x0400069c] 	       292	buffer.c	FUNCTION_2	CALL_32
0x65c	    0x488b92d80000	            mov rdx, qword [rdx + 0xd8] 	       292	buffer.c	FUNCTION_2	CALL_32
0x663	    0x488990f80000	             mov qword [rax + 0xf8], rdx	       292	buffer.c	FUNCTION_2	CALL_32
0x66a	    0x488b05000000	            mov rax, qword [0x040006b1] 	       294	buffer.c	FUNCTION_2	CALL_33
0x671	    0x488b15000000	            mov rdx, qword [0x040006b8] 	       294	buffer.c	FUNCTION_2	CALL_33
0x678	    0x488b92d80000	            mov rdx, qword [rdx + 0xd8] 	       294	buffer.c	FUNCTION_2	CALL_33
0x67f	    0x488990000100	            mov qword [rax + 0x100], rdx	       294	buffer.c	FUNCTION_2	CALL_33
0x686	      0xe800000000	                          call 0x40006cb	       299	buffer.c	FUNCTION_2	IF_18	CALL_34
0x68b	            0x85c0	                           test eax, eax	       299	buffer.c	FUNCTION_2	IF_18	CALL_34
0x68d	            0x7417	                            je 0x40006e6	       299	buffer.c	FUNCTION_2	IF_18	CALL_34
0x68f	    0x488b05000000	            mov rax, qword [0x040006d6] 	       303	buffer.c	FUNCTION_2	IF_18	IF_19
0x696	    0x488b15000000	            mov rdx, qword [0x040006dd] 	       303	buffer.c	FUNCTION_2	IF_18	IF_19
0x69d	          0x8b527c	            mov edx, dword [rdx + 0x7c] 	       303	buffer.c	FUNCTION_2	IF_18	IF_19
0x6a0	          0x83ca40	                            or edx, 0x40	       303	buffer.c	FUNCTION_2	IF_18	IF_19
0x6a3	          0x89507c	             mov dword [rax + 0x7c], edx	       303	buffer.c	FUNCTION_2	IF_18	IF_19
0x6a6	    0x488b05000000	            mov rax, qword [0x040006ed] 	       308	buffer.c	FUNCTION_2	CALL_35
0x6ad	          0x4889c7	                            mov rdi, rax	       308	buffer.c	FUNCTION_2	CALL_35
0x6b0	      0xe800000000	                          call 0x40006f5	       308	buffer.c	FUNCTION_2	CALL_35
0x6b5	    0x488b05000000	            mov rax, qword [0x040006fc] 	       312	buffer.c	FUNCTION_2	IF_20
0x6bc	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       312	buffer.c	FUNCTION_2	IF_20
0x6c2	      0x2580000000	                           and eax, 0x80	       312	buffer.c	FUNCTION_2	IF_20
0x6c7	            0x85c0	                           test eax, eax	       312	buffer.c	FUNCTION_2	IF_20
0x6c9	            0x7520	                           jne 0x400072b	       312	buffer.c	FUNCTION_2	IF_20
0x6cb	    0x488b05000000	            mov rax, qword [0x04000712] 	       314	buffer.c	FUNCTION_2	IF_20
0x6d2	    0x48c740780100	               mov qword [rax + 0x78], 1	       314	buffer.c	FUNCTION_2	IF_20
0x6da	    0x488b05000000	            mov rax, qword [0x04000721] 	       316	buffer.c	FUNCTION_2	IF_20
0x6e1	    0xc78084000000	               mov dword [rax + 0x84], 0	       316	buffer.c	FUNCTION_2	IF_20
0x6eb	    0x488b05000000	            mov rax, qword [0x04000732] 	       320	buffer.c	FUNCTION_2	CALL_36
0x6f2	        0x488d558c	                   lea rdx, [rbp - 0x74]	       320	buffer.c	FUNCTION_2	CALL_36
0x6f6	          0x4989d1	                             mov r9, rdx	       320	buffer.c	FUNCTION_2	CALL_36
0x6f9	          0x4989c0	                             mov r8, rax	       320	buffer.c	FUNCTION_2	CALL_36
0x6fc	      0xb900000000	                              mov ecx, 0	       320	buffer.c	FUNCTION_2	CALL_36
0x701	      0xba00000000	                              mov edx, 0	       320	buffer.c	FUNCTION_2	CALL_36
0x706	      0xbe00000000	                              mov esi, 0	       320	buffer.c	FUNCTION_2	CALL_36
0x70b	      0xbf02000000	                              mov edi, 2	       320	buffer.c	FUNCTION_2	CALL_36
0x710	      0xe800000000	                          call 0x4000755	       320	buffer.c	FUNCTION_2	CALL_36
0x715	          0x8b458c	             mov eax, dword [rbp - 0x74]	       325	buffer.c	FUNCTION_2	IF_21
0x718	          0x83f801	                              cmp eax, 1	       325	buffer.c	FUNCTION_2	IF_21
0x71b	     0xf8587000000	                           jne 0x40007e8	       325	buffer.c	FUNCTION_2	IF_21
0x721	        0x488d45b0	                   lea rax, [rbp - 0x50]	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x725	          0x4889c7	                            mov rdi, rax	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x728	      0xe800000000	                          call 0x400076d	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x72d	            0x85c0	                           test eax, eax	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x72f	            0x7477	                            je 0x40007e8	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x731	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x735	        0x488b4008	                mov rax, qword [rax + 8]	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x739	          0x4885c0	                           test rax, rax	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x73c	            0x746a	                            je 0x40007e8	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x73e	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       336	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_39
0x742	        0x488d45c0	                   lea rax, [rbp - 0x40]	       336	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_39
0x746	          0x4889d6	                            mov rsi, rdx	       336	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_39
0x749	          0x4889c7	                            mov rdi, rax	       336	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_39
0x74c	      0xe800000000	                          call 0x4000791	       336	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_39
0x751	      0xbf00000000	                              mov edi, 0	       337	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_40
0x756	      0xe800000000	                          call 0x400079b	       337	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_40
0x75b	    0x488b05000000	            mov rax, qword [0x040007a2] 	       338	buffer.c	FUNCTION_2	IF_21	IF_22
0x762	    0x488b15000000	            mov rdx, qword [0x040007a9] 	       338	buffer.c	FUNCTION_2	IF_21	IF_22
0x769	          0x8b527c	            mov edx, dword [rdx + 0x7c] 	       338	buffer.c	FUNCTION_2	IF_21	IF_22
0x76c	          0x83e2f9	                     and edx, 0xfffffff9	       338	buffer.c	FUNCTION_2	IF_21	IF_22
0x76f	          0x89507c	             mov dword [rax + 0x7c], edx	       338	buffer.c	FUNCTION_2	IF_21	IF_22
0x772	    0x488b05000000	            mov rax, qword [0x040007b9] 	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x779	        0x488d558c	                   lea rdx, [rbp - 0x74]	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x77d	          0x4989d1	                             mov r9, rdx	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x780	          0x4989c0	                             mov r8, rax	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x783	      0xb900000000	                              mov ecx, 0	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x788	      0xba00000000	                              mov edx, 0	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x78d	      0xbe00000000	                              mov esi, 0	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x792	      0xbf0d000000	                            mov edi, 0xd	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x797	      0xe800000000	                          call 0x40007dc	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x79c	        0x488d45c0	                   lea rax, [rbp - 0x40]	       348	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_43
0x7a0	          0x4889c7	                            mov rdi, rax	       348	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_43
0x7a3	      0xe800000000	                          call 0x40007e8	       348	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_43
0x7a8	          0x8b458c	             mov eax, dword [rbp - 0x74]	       352	buffer.c	FUNCTION_2
0x7ab	        0x488b4df8	                mov rcx, qword [rbp - 8]	       353	buffer.c	FUNCTION_2
0x7af	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       353	buffer.c	FUNCTION_2
0x7b8	            0x7405	                            je 0x40007ff	       353	buffer.c	FUNCTION_2
0x7ba	      0xe800000000	                          call 0x40007ff	       353	buffer.c	FUNCTION_2
0x7bf	              0xc9	                                   leave	       353	buffer.c	FUNCTION_2
0x7c0	              0xc3	                                     ret	       353	buffer.c	FUNCTION_2
bt_terminal	FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,0:SWITCH,0:DO,0	15
0xb63d	              0x55	                                push rbp	      5608	buffer.c	FUNCTION_78
0xb63e	          0x4889e5	                            mov rbp, rsp	      5608	buffer.c	FUNCTION_78
0xb641	        0x48897df8	                mov qword [rbp - 8], rdi	      5608	buffer.c	FUNCTION_78
0xb645	      0x48837df800	                  cmp qword [rbp - 8], 0	      5609	buffer.c	FUNCTION_78
0xb64a	            0x7419	                            je 0x400b6a5	      5609	buffer.c	FUNCTION_78
0xb64c	        0x488b45f8	                mov rax, qword [rbp - 8]	      5609	buffer.c	FUNCTION_78
0xb650	    0x488b80181400	          mov rax, qword [rax + 0x1418] 	      5609	buffer.c	FUNCTION_78
0xb657	           0xfb600	                   movzx eax, byte [rax]	      5609	buffer.c	FUNCTION_78
0xb65a	            0x3c74	                            cmp al, 0x74	      5609	buffer.c	FUNCTION_78
0xb65c	            0x7507	                           jne 0x400b6a5	      5609	buffer.c	FUNCTION_78
0xb65e	      0xb801000000	                              mov eax, 1	      5609	buffer.c	FUNCTION_78
0xb663	            0xeb05	                           jmp 0x400b6aa	      5609	buffer.c	FUNCTION_78
0xb665	      0xb800000000	                              mov eax, 0	      5609	buffer.c	FUNCTION_78
0xb66a	              0x5d	                                 pop rbp	      5610	buffer.c	FUNCTION_78
0xb66b	              0xc3	                                     ret	      5610	buffer.c	FUNCTION_78
buflist_nr2name	FOR,0:WHILE,0:ELSE,0:functions,0:IF,1:CALL,2:SWITCH,0:DO,0	31
0x4896	              0x55	                                push rbp	      2735	buffer.c	FUNCTION_38
0x4897	          0x4889e5	                            mov rbp, rsp	      2735	buffer.c	FUNCTION_38
0x489a	        0x4883ec20	                           sub rsp, 0x20	      2735	buffer.c	FUNCTION_38
0x489e	          0x897dec	             mov dword [rbp - 0x14], edi	      2735	buffer.c	FUNCTION_38
0x48a1	          0x8975e8	             mov dword [rbp - 0x18], esi	      2735	buffer.c	FUNCTION_38
0x48a4	          0x8955e4	             mov dword [rbp - 0x1c], edx	      2735	buffer.c	FUNCTION_38
0x48a7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2738	buffer.c	FUNCTION_38	CALL_1
0x48aa	            0x89c7	                            mov edi, eax	      2738	buffer.c	FUNCTION_38	CALL_1
0x48ac	      0xe800000000	                          call 0x40048f1	      2738	buffer.c	FUNCTION_38	CALL_1
0x48b1	        0x488945f8	                mov qword [rbp - 8], rax	      2738	buffer.c	FUNCTION_38	CALL_1
0x48b5	      0x48837df800	                  cmp qword [rbp - 8], 0	      2739	buffer.c	FUNCTION_38	IF_1
0x48ba	            0x7507	                           jne 0x4004903	      2739	buffer.c	FUNCTION_38	IF_1
0x48bc	      0xb800000000	                              mov eax, 0	      2740	buffer.c	FUNCTION_38	IF_1
0x48c1	            0xeb3a	                           jmp 0x400493d	      2740	buffer.c	FUNCTION_38	IF_1
0x48c3	        0x837de800	               cmp dword [rbp - 0x18], 0	      2741	buffer.c	FUNCTION_38	CALL_2
0x48c7	            0x740d	                            je 0x4004916	      2741	buffer.c	FUNCTION_38	CALL_2
0x48c9	        0x488b45f8	                mov rax, qword [rbp - 8]	      2741	buffer.c	FUNCTION_38	CALL_2
0x48cd	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2741	buffer.c	FUNCTION_38	CALL_2
0x48d4	            0xeb0b	                           jmp 0x4004921	      2741	buffer.c	FUNCTION_38	CALL_2
0x48d6	        0x488b45f8	                mov rax, qword [rbp - 8]	      2741	buffer.c	FUNCTION_38	CALL_2
0x48da	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2741	buffer.c	FUNCTION_38	CALL_2
0x48e1	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2741	buffer.c	FUNCTION_38	CALL_2
0x48e5	            0x7406	                            je 0x400492d	      2741	buffer.c	FUNCTION_38	CALL_2
0x48e7	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2741	buffer.c	FUNCTION_38	CALL_2
0x48eb	            0xeb05	                           jmp 0x4004932	      2741	buffer.c	FUNCTION_38	CALL_2
0x48ed	      0xba00000000	                              mov edx, 0	      2741	buffer.c	FUNCTION_38	CALL_2
0x48f2	          0x4889c6	                            mov rsi, rax	      2741	buffer.c	FUNCTION_38	CALL_2
0x48f5	          0x4889d7	                            mov rdi, rdx	      2741	buffer.c	FUNCTION_38	CALL_2
0x48f8	      0xe800000000	                          call 0x400493d	      2741	buffer.c	FUNCTION_38	CALL_2
0x48fd	              0xc9	                                   leave	      2743	buffer.c	FUNCTION_38
0x48fe	              0xc3	                                     ret	      2743	buffer.c	FUNCTION_38
buflist_findnr	FOR,0:WHILE,0:ELSE,0:functions,0:IF,2:CALL,3:SWITCH,0:DO,0	42
0x47f0	              0x55	                                push rbp	      2709	buffer.c	FUNCTION_37
0x47f1	          0x4889e5	                            mov rbp, rsp	      2709	buffer.c	FUNCTION_37
0x47f4	        0x4883ec40	                           sub rsp, 0x40	      2709	buffer.c	FUNCTION_37
0x47f8	          0x897dcc	             mov dword [rbp - 0x34], edi	      2709	buffer.c	FUNCTION_37
0x47fb	    0x64488b042528	                mov rax, qword fs:[0x28]	      2709	buffer.c	FUNCTION_37
0x4804	        0x488945f8	                mov qword [rbp - 8], rax	      2709	buffer.c	FUNCTION_37
0x4808	            0x31c0	                            xor eax, eax	      2709	buffer.c	FUNCTION_37
0x480a	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2713	buffer.c	FUNCTION_37	IF_1
0x480e	            0x7510	                           jne 0x4004860	      2713	buffer.c	FUNCTION_37	IF_1
0x4810	    0x488b05000000	            mov rax, qword [0x04004857] 	      2714	buffer.c	FUNCTION_37	IF_1
0x4817	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	      2714	buffer.c	FUNCTION_37	IF_1
0x481d	          0x8945cc	             mov dword [rbp - 0x34], eax	      2714	buffer.c	FUNCTION_37	IF_1
0x4820	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      2715	buffer.c	FUNCTION_37	CALL_1
0x4823	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2715	buffer.c	FUNCTION_37	CALL_1
0x4827	      0xbe00000000	                              mov esi, 0	      2715	buffer.c	FUNCTION_37	CALL_1
0x482c	          0x4889c7	                            mov rdi, rax	      2715	buffer.c	FUNCTION_37	CALL_1
0x482f	      0xb800000000	                              mov eax, 0	      2715	buffer.c	FUNCTION_37	CALL_1
0x4834	      0xe800000000	                          call 0x4004879	      2715	buffer.c	FUNCTION_37	CALL_1
0x4839	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2716	buffer.c	FUNCTION_37	CALL_2
0x483d	          0x4889c6	                            mov rsi, rax	      2716	buffer.c	FUNCTION_37	CALL_2
0x4840	      0xbf00000000	                              mov edi, 0	      2716	buffer.c	FUNCTION_37	CALL_2
0x4845	      0xe800000000	                          call 0x400488a	      2716	buffer.c	FUNCTION_37	CALL_2
0x484a	        0x488945d8	             mov qword [rbp - 0x28], rax	      2716	buffer.c	FUNCTION_37	CALL_2
0x484e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2718	buffer.c	FUNCTION_37	IF_2	CALL_3
0x4852	        0x488b4008	                mov rax, qword [rax + 8]	      2718	buffer.c	FUNCTION_37	IF_2	CALL_3
0x4856	          0x4885c0	                           test rax, rax	      2718	buffer.c	FUNCTION_37	IF_2	CALL_3
0x4859	            0x7420	                            je 0x40048bb	      2718	buffer.c	FUNCTION_37	IF_2	CALL_3
0x485b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2718	buffer.c	FUNCTION_37	IF_2	CALL_3
0x485f	        0x488b4008	                mov rax, qword [rax + 8]	      2718	buffer.c	FUNCTION_37	IF_2	CALL_3
0x4863	    0x483d00000000	                              cmp rax, 0	      2718	buffer.c	FUNCTION_37	IF_2	CALL_3
0x4869	            0x7410	                            je 0x40048bb	      2718	buffer.c	FUNCTION_37	IF_2	CALL_3
0x486b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2719	buffer.c	FUNCTION_37	IF_2
0x486f	        0x488b4008	                mov rax, qword [rax + 8]	      2719	buffer.c	FUNCTION_37	IF_2
0x4873	    0x482dbc000000	                           sub rax, 0xbc	      2719	buffer.c	FUNCTION_37	IF_2
0x4879	            0xeb05	                           jmp 0x40048c0	      2719	buffer.c	FUNCTION_37	IF_2
0x487b	      0xb800000000	                              mov eax, 0	      2721	buffer.c	FUNCTION_37
0x4880	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2722	buffer.c	FUNCTION_37
0x4884	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2722	buffer.c	FUNCTION_37
0x488d	            0x7405	                            je 0x40048d4	      2722	buffer.c	FUNCTION_37
0x488f	      0xe800000000	                          call 0x40048d4	      2722	buffer.c	FUNCTION_37
0x4894	              0xc9	                                   leave	      2722	buffer.c	FUNCTION_37
0x4895	              0xc3	                                     ret	      2722	buffer.c	FUNCTION_37
buf_freeall	FOR,0:WHILE,0:ELSE,0:functions,0:IF,12:CALL,21:SWITCH,0:DO,0	219
0x1057	              0x55	                                push rbp	       720	buffer.c	FUNCTION_10
0x1058	          0x4889e5	                            mov rbp, rsp	       720	buffer.c	FUNCTION_10
0x105b	        0x4883ec60	                           sub rsp, 0x60	       720	buffer.c	FUNCTION_10
0x105f	        0x48897da8	             mov qword [rbp - 0x58], rdi	       720	buffer.c	FUNCTION_10
0x1063	          0x8975a4	             mov dword [rbp - 0x5c], esi	       720	buffer.c	FUNCTION_10
0x1066	    0x64488b042528	                mov rax, qword fs:[0x28]	       720	buffer.c	FUNCTION_10
0x106f	        0x488945f8	                mov qword [rbp - 8], rax	       720	buffer.c	FUNCTION_10
0x1073	            0x31c0	                            xor eax, eax	       720	buffer.c	FUNCTION_10
0x1075	    0x488b05000000	            mov rax, qword [0x040010bc] 	       721	buffer.c	FUNCTION_10
0x107c	        0x483945a8	            cmp qword [rbp - 0x58], rax 	       721	buffer.c	FUNCTION_10
0x1080	           0xf94c0	                                 sete al	       721	buffer.c	FUNCTION_10
0x1083	           0xfb6c0	                           movzx eax, al	       721	buffer.c	FUNCTION_10
0x1086	          0x8945b8	             mov dword [rbp - 0x48], eax	       721	buffer.c	FUNCTION_10
0x1089	    0x488b05000000	            mov rax, qword [0x040010d0] 	       723	buffer.c	FUNCTION_10
0x1090	          0x4885c0	                           test rax, rax	       723	buffer.c	FUNCTION_10
0x1093	            0x7418	                            je 0x40010ed	       723	buffer.c	FUNCTION_10
0x1095	    0x488b05000000	            mov rax, qword [0x040010dc] 	       723	buffer.c	FUNCTION_10
0x109c	        0x488b4008	                mov rax, qword [rax + 8]	       723	buffer.c	FUNCTION_10
0x10a0	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       723	buffer.c	FUNCTION_10
0x10a4	            0x7507	                           jne 0x40010ed	       723	buffer.c	FUNCTION_10
0x10a6	      0xb801000000	                              mov eax, 1	       723	buffer.c	FUNCTION_10
0x10ab	            0xeb05	                           jmp 0x40010f2	       723	buffer.c	FUNCTION_10
0x10ad	      0xb800000000	                              mov eax, 0	       723	buffer.c	FUNCTION_10
0x10b2	          0x8945bc	             mov dword [rbp - 0x44], eax	       723	buffer.c	FUNCTION_10
0x10b5	    0x488b05000000	            mov rax, qword [0x040010fc] 	       724	buffer.c	FUNCTION_10
0x10bc	        0x488945d0	             mov qword [rbp - 0x30], rax	       724	buffer.c	FUNCTION_10
0x10c0	    0x488b05000000	            mov rax, qword [0x04001107] 	       725	buffer.c	FUNCTION_10
0x10c7	        0x488945d8	             mov qword [rbp - 0x28], rax	       725	buffer.c	FUNCTION_10
0x10cb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       728	buffer.c	FUNCTION_10
0x10cf	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       728	buffer.c	FUNCTION_10
0x10d5	          0x8d5001	                      lea edx, [rax + 1]	       728	buffer.c	FUNCTION_10
0x10d8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       728	buffer.c	FUNCTION_10
0x10dc	    0x899080000000	             mov dword [rax + 0x80], edx	       728	buffer.c	FUNCTION_10
0x10e2	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       729	buffer.c	FUNCTION_10	CALL_1
0x10e6	        0x488d45e0	                   lea rax, [rbp - 0x20]	       729	buffer.c	FUNCTION_10	CALL_1
0x10ea	          0x4889d6	                            mov rsi, rdx	       729	buffer.c	FUNCTION_10	CALL_1
0x10ed	          0x4889c7	                            mov rdi, rax	       729	buffer.c	FUNCTION_10	CALL_1
0x10f0	      0xe800000000	                          call 0x4001135	       729	buffer.c	FUNCTION_10	CALL_1
0x10f5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       730	buffer.c	FUNCTION_10	IF_1
0x10f9	        0x488b4008	                mov rax, qword [rax + 8]	       730	buffer.c	FUNCTION_10	IF_1
0x10fd	          0x4885c0	                           test rax, rax	       730	buffer.c	FUNCTION_10	IF_1
0x1100	            0x7447	                            je 0x4001189	       730	buffer.c	FUNCTION_10	IF_1
0x1102	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x1106	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x110d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x1111	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x1118	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x111c	          0x4989c8	                             mov r8, rcx	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x111f	      0xb900000000	                              mov ecx, 0	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x1124	          0x4889c6	                            mov rsi, rax	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x1127	      0xbf0c000000	                            mov edi, 0xc	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x112c	      0xe800000000	                          call 0x4001171	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x1131	            0x85c0	                           test eax, eax	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x1133	            0x7414	                            je 0x4001189	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x1135	        0x488d45e0	                   lea rax, [rbp - 0x20]	       734	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_3
0x1139	          0x4889c7	                            mov rdi, rax	       734	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_3
0x113c	      0xe800000000	                          call 0x4001181	       734	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_3
0x1141	            0x85c0	                           test eax, eax	       734	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_3
0x1143	     0xf8438020000	                            je 0x40013c1	       734	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_3
0x1149	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       738	buffer.c	FUNCTION_10	IF_3
0x114c	          0x83e001	                              and eax, 1	       738	buffer.c	FUNCTION_10	IF_3
0x114f	            0x85c0	                           test eax, eax	       738	buffer.c	FUNCTION_10	IF_3
0x1151	            0x7455	                            je 0x40011e8	       738	buffer.c	FUNCTION_10	IF_3
0x1153	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       738	buffer.c	FUNCTION_10	IF_3
0x1157	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	       738	buffer.c	FUNCTION_10	IF_3
0x115d	            0x85c0	                           test eax, eax	       738	buffer.c	FUNCTION_10	IF_3
0x115f	            0x7447	                            je 0x40011e8	       738	buffer.c	FUNCTION_10	IF_3
0x1161	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x1165	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x116c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x1170	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x1177	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x117b	          0x4989c8	                             mov r8, rcx	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x117e	      0xb900000000	                              mov ecx, 0	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x1183	          0x4889c6	                            mov rsi, rax	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x1186	      0xbf01000000	                              mov edi, 1	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x118b	      0xe800000000	                          call 0x40011d0	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x1190	            0x85c0	                           test eax, eax	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x1192	            0x7414	                            je 0x40011e8	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x1194	        0x488d45e0	                   lea rax, [rbp - 0x20]	       742	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x1198	          0x4889c7	                            mov rdi, rax	       742	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x119b	      0xe800000000	                          call 0x40011e0	       742	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x11a0	            0x85c0	                           test eax, eax	       742	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x11a2	     0xf84dc010000	                            je 0x40013c4	       742	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x11a8	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       746	buffer.c	FUNCTION_10	IF_5
0x11ab	          0x83e002	                              and eax, 2	       746	buffer.c	FUNCTION_10	IF_5
0x11ae	            0x85c0	                           test eax, eax	       746	buffer.c	FUNCTION_10	IF_5
0x11b0	            0x7447	                            je 0x4001239	       746	buffer.c	FUNCTION_10	IF_5
0x11b2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x11b6	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x11bd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x11c1	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x11c8	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x11cc	          0x4989c8	                             mov r8, rcx	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x11cf	      0xb900000000	                              mov ecx, 0	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x11d4	          0x4889c6	                            mov rsi, rax	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x11d7	      0xbf0f000000	                            mov edi, 0xf	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x11dc	      0xe800000000	                          call 0x4001221	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x11e1	            0x85c0	                           test eax, eax	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x11e3	            0x7414	                            je 0x4001239	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x11e5	        0x488d45e0	                   lea rax, [rbp - 0x20]	       750	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_7
0x11e9	          0x4889c7	                            mov rdi, rax	       750	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_7
0x11ec	      0xe800000000	                          call 0x4001231	       750	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_7
0x11f1	            0x85c0	                           test eax, eax	       750	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_7
0x11f3	     0xf848e010000	                            je 0x40013c7	       750	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_7
0x11f9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       754	buffer.c	FUNCTION_10
0x11fd	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       754	buffer.c	FUNCTION_10
0x1203	          0x8d50ff	                      lea edx, [rax - 1]	       754	buffer.c	FUNCTION_10
0x1206	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       754	buffer.c	FUNCTION_10
0x120a	    0x899080000000	             mov dword [rax + 0x80], edx	       754	buffer.c	FUNCTION_10
0x1210	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x1214	            0x743a	                            je 0x4001290	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x1216	    0x488b05000000	            mov rax, qword [0x0400125d] 	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x121d	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x1221	            0x742d	                            je 0x4001290	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x1223	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x1227	          0x4889c7	                            mov rdi, rax	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x122a	      0xe800000000	                          call 0x400126f	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x122f	            0x85c0	                           test eax, eax	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x1231	            0x741d	                            je 0x4001290	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x1233	      0xe800000000	                          call 0x4001278	       761	buffer.c	FUNCTION_10	IF_7	CALL_9
0x1238	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       762	buffer.c	FUNCTION_10	IF_7	CALL_10
0x123c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       762	buffer.c	FUNCTION_10	IF_7	CALL_10
0x1240	          0x4889d6	                            mov rsi, rdx	       762	buffer.c	FUNCTION_10	IF_7	CALL_10
0x1243	          0x4889c7	                            mov rdi, rax	       762	buffer.c	FUNCTION_10	IF_7	CALL_10
0x1246	      0xe800000000	                          call 0x400128b	       762	buffer.c	FUNCTION_10	IF_7	CALL_10
0x124b	      0xe800000000	                          call 0x4001290	       763	buffer.c	FUNCTION_10	IF_7	CALL_11
0x1250	      0xe800000000	                          call 0x4001295	       767	buffer.c	FUNCTION_10	IF_8	CALL_12
0x1255	            0x85c0	                           test eax, eax	       767	buffer.c	FUNCTION_10	IF_8	CALL_12
0x1257	     0xf852d010000	                           jne 0x40013ca	       767	buffer.c	FUNCTION_10	IF_8	CALL_12
0x125d	    0x488b05000000	            mov rax, qword [0x040012a4] 	       777	buffer.c	FUNCTION_10	IF_9
0x1264	        0x483945a8	            cmp qword [rbp - 0x58], rax 	       777	buffer.c	FUNCTION_10	IF_9
0x1268	            0x750a	                           jne 0x40012b4	       777	buffer.c	FUNCTION_10	IF_9
0x126a	        0x837db800	               cmp dword [rbp - 0x48], 0	       777	buffer.c	FUNCTION_10	IF_9
0x126e	     0xf8419010000	                            je 0x40013cd	       777	buffer.c	FUNCTION_10	IF_9
0x1274	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       780	buffer.c	FUNCTION_10	CALL_13
0x1278	          0x4889c7	                            mov rdi, rax	       780	buffer.c	FUNCTION_10	CALL_13
0x127b	      0xe800000000	                          call 0x40012c0	       780	buffer.c	FUNCTION_10	CALL_13
0x1280	    0x488b05000000	            mov rax, qword [0x040012c7] 	       784	buffer.c	FUNCTION_10	IF_10
0x1287	          0x4885c0	                           test rax, rax	       784	buffer.c	FUNCTION_10	IF_10
0x128a	            0x7420	                            je 0x40012ec	       784	buffer.c	FUNCTION_10	IF_10
0x128c	    0x488b05000000	            mov rax, qword [0x040012d3] 	       784	buffer.c	FUNCTION_10	IF_10
0x1293	        0x488b4008	                mov rax, qword [rax + 8]	       784	buffer.c	FUNCTION_10	IF_10
0x1297	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       784	buffer.c	FUNCTION_10	IF_10
0x129b	            0x750f	                           jne 0x40012ec	       784	buffer.c	FUNCTION_10	IF_10
0x129d	    0x488b05000000	            mov rax, qword [0x040012e4] 	       785	buffer.c	FUNCTION_10	CALL_14
0x12a4	          0x4889c7	                            mov rdi, rax	       785	buffer.c	FUNCTION_10	CALL_14
0x12a7	      0xe800000000	                          call 0x40012ec	       785	buffer.c	FUNCTION_10	CALL_14
0x12ac	    0x488b05000000	            mov rax, qword [0x040012f3] 	       794	buffer.c	FUNCTION_10	CALL_15
0x12b3	        0x488945c8	             mov qword [rbp - 0x38], rax	       794	buffer.c	FUNCTION_10	CALL_15
0x12b7	            0xeb5c	                           jmp 0x4001355	       794	buffer.c	FUNCTION_10	CALL_15
0x12b9	    0x488b05000000	            mov rax, qword [0x04001300] 	       794	buffer.c	FUNCTION_10	CALL_15
0x12c0	        0x483945c8	            cmp qword [rbp - 0x38], rax 	       794	buffer.c	FUNCTION_10	CALL_15
0x12c4	            0x740a	                            je 0x4001310	       794	buffer.c	FUNCTION_10	CALL_15
0x12c6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       794	buffer.c	FUNCTION_10	CALL_15
0x12ca	        0x488b4020	            mov rax, qword [rax + 0x20] 	       794	buffer.c	FUNCTION_10	CALL_15
0x12ce	            0xeb07	                           jmp 0x4001317	       794	buffer.c	FUNCTION_10	CALL_15
0x12d0	    0x488b05000000	            mov rax, qword [0x04001317] 	       794	buffer.c	FUNCTION_10	CALL_15
0x12d7	        0x488945c0	             mov qword [rbp - 0x40], rax	       794	buffer.c	FUNCTION_10	CALL_15
0x12db	            0xeb26	                           jmp 0x4001343	       794	buffer.c	FUNCTION_10	CALL_15
0x12dd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       795	buffer.c	FUNCTION_10	IF_11
0x12e1	        0x488b4008	                mov rax, qword [rax + 8]	       795	buffer.c	FUNCTION_10	IF_11
0x12e5	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       795	buffer.c	FUNCTION_10	IF_11
0x12e9	            0x750c	                           jne 0x4001337	       795	buffer.c	FUNCTION_10	IF_11
0x12eb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       796	buffer.c	FUNCTION_10	CALL_16
0x12ef	          0x4889c7	                            mov rdi, rax	       796	buffer.c	FUNCTION_10	CALL_16
0x12f2	      0xe800000000	                          call 0x4001337	       796	buffer.c	FUNCTION_10	CALL_16
0x12f7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       794	buffer.c	FUNCTION_10	CALL_15
0x12fb	        0x488b4020	            mov rax, qword [rax + 0x20] 	       794	buffer.c	FUNCTION_10	CALL_15
0x12ff	        0x488945c0	             mov qword [rbp - 0x40], rax	       794	buffer.c	FUNCTION_10	CALL_15
0x1303	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       794	buffer.c	FUNCTION_10	CALL_15
0x1308	            0x75d3	                           jne 0x400131d	       794	buffer.c	FUNCTION_10	CALL_15
0x130a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       794	buffer.c	FUNCTION_10	CALL_15
0x130e	          0x488b00	                    mov rax, qword [rax]	       794	buffer.c	FUNCTION_10	CALL_15
0x1311	        0x488945c8	             mov qword [rbp - 0x38], rax	       794	buffer.c	FUNCTION_10	CALL_15
0x1315	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       794	buffer.c	FUNCTION_10	CALL_15
0x131a	            0x759d	                           jne 0x40012f9	       794	buffer.c	FUNCTION_10	CALL_15
0x131c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       803	buffer.c	FUNCTION_10	CALL_18
0x1320	      0xbe01000000	                              mov esi, 1	       803	buffer.c	FUNCTION_10	CALL_18
0x1325	          0x4889c7	                            mov rdi, rax	       803	buffer.c	FUNCTION_10	CALL_18
0x1328	      0xe800000000	                          call 0x400136d	       803	buffer.c	FUNCTION_10	CALL_18
0x132d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       804	buffer.c	FUNCTION_10
0x1331	    0x48c700000000	                      mov qword [rax], 0	       804	buffer.c	FUNCTION_10
0x1338	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       805	buffer.c	FUNCTION_10	IF_12
0x133b	          0x83e004	                              and eax, 4	       805	buffer.c	FUNCTION_10	IF_12
0x133e	            0x85c0	                           test eax, eax	       805	buffer.c	FUNCTION_10	IF_12
0x1340	            0x7518	                           jne 0x400139a	       805	buffer.c	FUNCTION_10	IF_12
0x1342	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       807	buffer.c	FUNCTION_10	IF_12	CALL_19
0x1346	          0x4889c7	                            mov rdi, rax	       807	buffer.c	FUNCTION_10	IF_12	CALL_19
0x1349	      0xe800000000	                          call 0x400138e	       807	buffer.c	FUNCTION_10	IF_12	CALL_19
0x134e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       808	buffer.c	FUNCTION_10	IF_12	CALL_20
0x1352	          0x4889c7	                            mov rdi, rax	       808	buffer.c	FUNCTION_10	IF_12	CALL_20
0x1355	      0xe800000000	                          call 0x400139a	       808	buffer.c	FUNCTION_10	IF_12	CALL_20
0x135a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       811	buffer.c	FUNCTION_10	CALL_21
0x135e	    0x480568170000	                         add rax, 0x1768	       811	buffer.c	FUNCTION_10	CALL_21
0x1364	          0x4889c7	                            mov rdi, rax	       811	buffer.c	FUNCTION_10	CALL_21
0x1367	      0xe800000000	                          call 0x40013ac	       811	buffer.c	FUNCTION_10	CALL_21
0x136c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       813	buffer.c	FUNCTION_10
0x1370	          0x8b407c	            mov eax, dword [rax + 0x7c] 	       813	buffer.c	FUNCTION_10
0x1373	          0x83e0bf	                     and eax, 0xffffffbf	       813	buffer.c	FUNCTION_10
0x1376	            0x89c2	                            mov edx, eax	       813	buffer.c	FUNCTION_10
0x1378	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       813	buffer.c	FUNCTION_10
0x137c	          0x89507c	             mov dword [rax + 0x7c], edx	       813	buffer.c	FUNCTION_10
0x137f	            0xeb0d	                           jmp 0x40013ce	       813	buffer.c	FUNCTION_10
0x1381	              0x90	                                     nop	       736	buffer.c	FUNCTION_10	IF_1	IF_2
0x1382	            0xeb0a	                           jmp 0x40013ce	       736	buffer.c	FUNCTION_10	IF_1	IF_2
0x1384	              0x90	                                     nop	       744	buffer.c	FUNCTION_10	IF_3	IF_4
0x1385	            0xeb07	                           jmp 0x40013ce	       744	buffer.c	FUNCTION_10	IF_3	IF_4
0x1387	              0x90	                                     nop	       752	buffer.c	FUNCTION_10	IF_5	IF_6
0x1388	            0xeb04	                           jmp 0x40013ce	       752	buffer.c	FUNCTION_10	IF_5	IF_6
0x138a	              0x90	                                     nop	       768	buffer.c	FUNCTION_10	IF_8
0x138b	            0xeb01	                           jmp 0x40013ce	       768	buffer.c	FUNCTION_10	IF_8
0x138d	              0x90	                                     nop	       778	buffer.c	FUNCTION_10	IF_9
0x138e	        0x488b45f8	                mov rax, qword [rbp - 8]	       814	buffer.c	FUNCTION_10
0x1392	    0x644833042528	                xor rax, qword fs:[0x28]	       814	buffer.c	FUNCTION_10
0x139b	            0x7405	                            je 0x40013e2	       814	buffer.c	FUNCTION_10
0x139d	      0xe800000000	                          call 0x40013e2	       814	buffer.c	FUNCTION_10
0x13a2	              0xc9	                                   leave	       814	buffer.c	FUNCTION_10
0x13a3	              0xc3	                                     ret	       814	buffer.c	FUNCTION_10
buf_name_changed	FOR,0:WHILE,0:ELSE,0:functions,0:IF,2:CALL,6:SWITCH,0:DO,0	29
0x57e8	              0x55	                                push rbp	      3196	buffer.c	FUNCTION_49
0x57e9	          0x4889e5	                            mov rbp, rsp	      3196	buffer.c	FUNCTION_49
0x57ec	        0x4883ec10	                           sub rsp, 0x10	      3196	buffer.c	FUNCTION_49
0x57f0	        0x48897df8	                mov qword [rbp - 8], rdi	      3196	buffer.c	FUNCTION_49
0x57f4	        0x488b45f8	                mov rax, qword [rbp - 8]	      3200	buffer.c	FUNCTION_49	IF_1
0x57f8	        0x488b4008	                mov rax, qword [rax + 8]	      3200	buffer.c	FUNCTION_49	IF_1
0x57fc	          0x4885c0	                           test rax, rax	      3200	buffer.c	FUNCTION_49	IF_1
0x57ff	            0x740c	                            je 0x400584d	      3200	buffer.c	FUNCTION_49	IF_1
0x5801	        0x488b45f8	                mov rax, qword [rbp - 8]	      3201	buffer.c	FUNCTION_49	CALL_1
0x5805	          0x4889c7	                            mov rdi, rax	      3201	buffer.c	FUNCTION_49	CALL_1
0x5808	      0xe800000000	                          call 0x400584d	      3201	buffer.c	FUNCTION_49	CALL_1
0x580d	    0x488b05000000	            mov rax, qword [0x04005854] 	      3203	buffer.c	FUNCTION_49	IF_2
0x5814	        0x488b4008	                mov rax, qword [rax + 8]	      3203	buffer.c	FUNCTION_49	IF_2
0x5818	        0x483b45f8	                cmp rax, qword [rbp - 8]	      3203	buffer.c	FUNCTION_49	IF_2
0x581c	            0x750f	                           jne 0x400586d	      3203	buffer.c	FUNCTION_49	IF_2
0x581e	    0x488b05000000	            mov rax, qword [0x04005865] 	      3204	buffer.c	FUNCTION_49	CALL_2
0x5825	          0x4889c7	                            mov rdi, rax	      3204	buffer.c	FUNCTION_49	CALL_2
0x5828	      0xe800000000	                          call 0x400586d	      3204	buffer.c	FUNCTION_49	CALL_2
0x582d	      0xe800000000	                          call 0x4005872	      3206	buffer.c	FUNCTION_49	CALL_3
0x5832	      0xe800000000	                          call 0x4005877	      3208	buffer.c	FUNCTION_49	CALL_4
0x5837	        0x488b45f8	                mov rax, qword [rbp - 8]	      3209	buffer.c	FUNCTION_49	CALL_5
0x583b	          0x4889c7	                            mov rdi, rax	      3209	buffer.c	FUNCTION_49	CALL_5
0x583e	      0xe800000000	                          call 0x4005883	      3209	buffer.c	FUNCTION_49	CALL_5
0x5843	        0x488b45f8	                mov rax, qword [rbp - 8]	      3210	buffer.c	FUNCTION_49	CALL_6
0x5847	          0x4889c7	                            mov rdi, rax	      3210	buffer.c	FUNCTION_49	CALL_6
0x584a	      0xe800000000	                          call 0x400588f	      3210	buffer.c	FUNCTION_49	CALL_6
0x584f	              0x90	                                     nop	      3211	buffer.c	FUNCTION_49
0x5850	              0xc9	                                   leave	      3211	buffer.c	FUNCTION_49
0x5851	              0xc3	                                     ret	      3211	buffer.c	FUNCTION_49
buf_clear_file	FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,2:SWITCH,0:DO,0	30
0xfc3	              0x55	                                push rbp	       693	buffer.c	FUNCTION_9
0xfc4	          0x4889e5	                            mov rbp, rsp	       693	buffer.c	FUNCTION_9
0xfc7	        0x4883ec10	                           sub rsp, 0x10	       693	buffer.c	FUNCTION_9
0xfcb	        0x48897df8	                mov qword [rbp - 8], rdi	       693	buffer.c	FUNCTION_9
0xfcf	        0x488b45f8	                mov rax, qword [rbp - 8]	       694	buffer.c	FUNCTION_9
0xfd3	    0x48c700010000	                      mov qword [rax], 1	       694	buffer.c	FUNCTION_9
0xfda	        0x488b45f8	                mov rax, qword [rbp - 8]	       695	buffer.c	FUNCTION_9	CALL_1
0xfde	      0xbe01000000	                              mov esi, 1	       695	buffer.c	FUNCTION_9	CALL_1
0xfe3	          0x4889c7	                            mov rdi, rax	       695	buffer.c	FUNCTION_9	CALL_1
0xfe6	      0xe800000000	                          call 0x400102b	       695	buffer.c	FUNCTION_9	CALL_1
0xfeb	        0x488b45f8	                mov rax, qword [rbp - 8]	       696	buffer.c	FUNCTION_9
0xfef	    0xc78060170000	            mov dword [rax + 0x1760], 0 	       696	buffer.c	FUNCTION_9
0xff9	        0x488b45f8	                mov rax, qword [rbp - 8]	       697	buffer.c	FUNCTION_9
0xffd	    0xc78070140000	            mov dword [rax + 0x1470], 1 	       697	buffer.c	FUNCTION_9
0x1007	        0x488b45f8	                mov rax, qword [rbp - 8]	       698	buffer.c	FUNCTION_9
0x100b	    0xc78000170000	            mov dword [rax + 0x1700], 1 	       698	buffer.c	FUNCTION_9
0x1015	        0x488b45f8	                mov rax, qword [rbp - 8]	       700	buffer.c	FUNCTION_9
0x1019	    0xc7800c140000	            mov dword [rax + 0x140c], 0 	       700	buffer.c	FUNCTION_9
0x1023	        0x488b45f8	                mov rax, qword [rbp - 8]	       701	buffer.c	FUNCTION_9
0x1027	    0xc78014170000	            mov dword [rax + 0x1714], 0 	       701	buffer.c	FUNCTION_9
0x1031	        0x488b45f8	                mov rax, qword [rbp - 8]	       703	buffer.c	FUNCTION_9
0x1035	    0x48c740080000	                  mov qword [rax + 8], 0	       703	buffer.c	FUNCTION_9
0x103d	        0x488b45f8	                mov rax, qword [rbp - 8]	       704	buffer.c	FUNCTION_9
0x1041	    0xc74010010000	               mov dword [rax + 0x10], 1	       704	buffer.c	FUNCTION_9
0x1048	        0x488b45f8	                mov rax, qword [rbp - 8]	       706	buffer.c	FUNCTION_9	CALL_2
0x104c	          0x4889c7	                            mov rdi, rax	       706	buffer.c	FUNCTION_9	CALL_2
0x104f	      0xe800000000	                          call 0x4001094	       706	buffer.c	FUNCTION_9	CALL_2
0x1054	              0x90	                                     nop	       708	buffer.c	FUNCTION_9
0x1055	              0xc9	                                   leave	       708	buffer.c	FUNCTION_9
0x1056	              0xc3	                                     ret	       708	buffer.c	FUNCTION_9
restore_win_for_buf	FOR,0:WHILE,0:ELSE,1:functions,0:IF,1:CALL,2:SWITCH,0:DO,0	23
0xb9b4	              0x55	                                push rbp	      5748	buffer.c	FUNCTION_86
0xb9b5	          0x4889e5	                            mov rbp, rsp	      5748	buffer.c	FUNCTION_86
0xb9b8	        0x4883ec20	                           sub rsp, 0x20	      5748	buffer.c	FUNCTION_86
0xb9bc	        0x48897df8	                mov qword [rbp - 8], rdi	      5748	buffer.c	FUNCTION_86
0xb9c0	        0x488975f0	             mov qword [rbp - 0x10], rsi	      5748	buffer.c	FUNCTION_86
0xb9c4	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5748	buffer.c	FUNCTION_86
0xb9c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5749	buffer.c	FUNCTION_86	IF_1
0xb9cc	          0x488b00	                    mov rax, qword [rax]	      5749	buffer.c	FUNCTION_86	IF_1
0xb9cf	          0x4885c0	                           test rax, rax	      5749	buffer.c	FUNCTION_86	IF_1
0xb9d2	            0x751a	                           jne 0x400ba2e	      5749	buffer.c	FUNCTION_86	IF_1
0xb9d4	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      5750	buffer.c	FUNCTION_86	CALL_1
0xb9d8	        0x488b45f8	                mov rax, qword [rbp - 8]	      5750	buffer.c	FUNCTION_86	CALL_1
0xb9dc	      0xba01000000	                              mov edx, 1	      5750	buffer.c	FUNCTION_86	CALL_1
0xb9e1	          0x4889ce	                            mov rsi, rcx	      5750	buffer.c	FUNCTION_86	CALL_1
0xb9e4	          0x4889c7	                            mov rdi, rax	      5750	buffer.c	FUNCTION_86	CALL_1
0xb9e7	      0xe800000000	                          call 0x400ba2c	      5750	buffer.c	FUNCTION_86	CALL_1
0xb9ec	            0xeb0c	                           jmp 0x400ba3a	      5753	buffer.c	FUNCTION_86
0xb9ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5752	buffer.c	FUNCTION_86	CALL_2
0xb9f2	          0x4889c7	                            mov rdi, rax	      5752	buffer.c	FUNCTION_86	CALL_2
0xb9f5	      0xe800000000	                          call 0x400ba3a	      5752	buffer.c	FUNCTION_86	CALL_2
0xb9fa	              0x90	                                     nop	      5753	buffer.c	FUNCTION_86
0xb9fb	              0xc9	                                   leave	      5753	buffer.c	FUNCTION_86
0xb9fc	              0xc3	                                     ret	      5753	buffer.c	FUNCTION_86
curbuf_reusable	FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,2:SWITCH,0:DO,0	34
0x2d43	              0x55	                                push rbp	      1850	buffer.c	FUNCTION_25
0x2d44	          0x4889e5	                            mov rbp, rsp	      1850	buffer.c	FUNCTION_25
0x2d47	    0x488b05000000	            mov rax, qword [0x04002d8e] 	      1851	buffer.c	FUNCTION_25
0x2d4e	          0x4885c0	                           test rax, rax	      1855	buffer.c	FUNCTION_25	CALL_2
0x2d51	            0x7463	                            je 0x4002df6	      1855	buffer.c	FUNCTION_25	CALL_2
0x2d53	    0x488b05000000	            mov rax, qword [0x04002d9a] 	      1852	buffer.c	FUNCTION_25
0x2d5a	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1852	buffer.c	FUNCTION_25
0x2d61	          0x4885c0	                           test rax, rax	      1852	buffer.c	FUNCTION_25
0x2d64	            0x7550	                           jne 0x4002df6	      1852	buffer.c	FUNCTION_25
0x2d66	    0x488b05000000	            mov rax, qword [0x04002dad] 	      1853	buffer.c	FUNCTION_25
0x2d6d	          0x8b4078	            mov eax, dword [rax + 0x78] 	      1853	buffer.c	FUNCTION_25
0x2d70	          0x83f801	                              cmp eax, 1	      1853	buffer.c	FUNCTION_25
0x2d73	            0x7f41	                            jg 0x4002df6	      1853	buffer.c	FUNCTION_25
0x2d75	    0x488b05000000	            mov rax, qword [0x04002dbc] 	      1854	buffer.c	FUNCTION_25	CALL_1
0x2d7c	        0x488b4008	                mov rax, qword [rax + 8]	      1854	buffer.c	FUNCTION_25	CALL_1
0x2d80	          0x4885c0	                           test rax, rax	      1854	buffer.c	FUNCTION_25	CALL_1
0x2d83	            0x7421	                            je 0x4002de6	      1854	buffer.c	FUNCTION_25	CALL_1
0x2d85	    0x488b05000000	            mov rax, qword [0x04002dcc] 	      1854	buffer.c	FUNCTION_25	CALL_1
0x2d8c	          0x488b00	                    mov rax, qword [rax]	      1854	buffer.c	FUNCTION_25	CALL_1
0x2d8f	        0x4883f801	                              cmp rax, 1	      1854	buffer.c	FUNCTION_25	CALL_1
0x2d93	            0x7521	                           jne 0x4002df6	      1854	buffer.c	FUNCTION_25	CALL_1
0x2d95	      0xbf01000000	                              mov edi, 1	      1854	buffer.c	FUNCTION_25	CALL_1
0x2d9a	      0xe800000000	                          call 0x4002ddf	      1854	buffer.c	FUNCTION_25	CALL_1
0x2d9f	           0xfb600	                   movzx eax, byte [rax]	      1854	buffer.c	FUNCTION_25	CALL_1
0x2da2	            0x84c0	                             test al, al	      1854	buffer.c	FUNCTION_25	CALL_1
0x2da4	            0x7510	                           jne 0x4002df6	      1854	buffer.c	FUNCTION_25	CALL_1
0x2da6	      0xe800000000	                          call 0x4002deb	      1855	buffer.c	FUNCTION_25	CALL_2
0x2dab	            0x85c0	                           test eax, eax	      1855	buffer.c	FUNCTION_25	CALL_2
0x2dad	            0x7507	                           jne 0x4002df6	      1855	buffer.c	FUNCTION_25	CALL_2
0x2daf	      0xb801000000	                              mov eax, 1	      1855	buffer.c	FUNCTION_25	CALL_2
0x2db4	            0xeb05	                           jmp 0x4002dfb	      1855	buffer.c	FUNCTION_25	CALL_2
0x2db6	      0xb800000000	                              mov eax, 0	      1855	buffer.c	FUNCTION_25	CALL_2
0x2dbb	              0x5d	                                 pop rbp	      1856	buffer.c	FUNCTION_25
0x2dbc	              0xc3	                                     ret	      1856	buffer.c	FUNCTION_25
free_buffer_stuff	FOR,0:WHILE,0:ELSE,0:functions,0:IF,1:CALL,14:SWITCH,0:DO,0	72
0x14e4	              0x55	                                push rbp	       896	buffer.c	FUNCTION_13
0x14e5	          0x4889e5	                            mov rbp, rsp	       896	buffer.c	FUNCTION_13
0x14e8	        0x4883ec20	                           sub rsp, 0x20	       896	buffer.c	FUNCTION_13
0x14ec	        0x48897de8	             mov qword [rbp - 0x18], rdi	       896	buffer.c	FUNCTION_13
0x14f0	          0x8975e4	             mov dword [rbp - 0x1c], esi	       896	buffer.c	FUNCTION_13
0x14f3	        0x837de400	               cmp dword [rbp - 0x1c], 0	       897	buffer.c	FUNCTION_13	IF_1
0x14f7	            0x742f	                            je 0x4001568	       897	buffer.c	FUNCTION_13	IF_1
0x14f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       899	buffer.c	FUNCTION_13	IF_1	CALL_1
0x14fd	          0x4889c7	                            mov rdi, rax	       899	buffer.c	FUNCTION_13	IF_1	CALL_1
0x1500	      0xe810010000	                  call sym.clear_wininfo	       899	buffer.c	FUNCTION_13	IF_1	CALL_1
0x1505	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       900	buffer.c	FUNCTION_13	IF_1	CALL_2
0x1509	      0xbe01000000	                              mov esi, 1	       900	buffer.c	FUNCTION_13	IF_1	CALL_2
0x150e	          0x4889c7	                            mov rdi, rax	       900	buffer.c	FUNCTION_13	IF_1	CALL_2
0x1511	      0xe800000000	                          call 0x4001556	       900	buffer.c	FUNCTION_13	IF_1	CALL_2
0x1516	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       902	buffer.c	FUNCTION_13	IF_1	CALL_3
0x151a	    0x4805b01a0000	                         add rax, 0x1ab0	       902	buffer.c	FUNCTION_13	IF_1	CALL_3
0x1520	          0x4889c7	                            mov rdi, rax	       902	buffer.c	FUNCTION_13	IF_1	CALL_3
0x1523	      0xe800000000	                          call 0x4001568	       902	buffer.c	FUNCTION_13	IF_1	CALL_3
0x1528	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       907	buffer.c	FUNCTION_13	CALL_4
0x152c	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	       907	buffer.c	FUNCTION_13	CALL_4
0x1533	        0x488945f8	                mov qword [rbp - 8], rax	       907	buffer.c	FUNCTION_13	CALL_4
0x1537	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       909	buffer.c	FUNCTION_13	CALL_5
0x153b	    0x488b80301700	          mov rax, qword [rax + 0x1730] 	       909	buffer.c	FUNCTION_13	CALL_5
0x1542	        0x4883c010	                           add rax, 0x10	       909	buffer.c	FUNCTION_13	CALL_5
0x1546	          0x4889c7	                            mov rdi, rax	       909	buffer.c	FUNCTION_13	CALL_5
0x1549	      0xe800000000	                          call 0x400158e	       909	buffer.c	FUNCTION_13	CALL_5
0x154e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       910	buffer.c	FUNCTION_13	CALL_6
0x1552	    0x488b80301700	          mov rax, qword [rax + 0x1730] 	       910	buffer.c	FUNCTION_13	CALL_6
0x1559	        0x4883c010	                           add rax, 0x10	       910	buffer.c	FUNCTION_13	CALL_6
0x155d	          0x4889c7	                            mov rdi, rax	       910	buffer.c	FUNCTION_13	CALL_6
0x1560	      0xe800000000	                          call 0x40015a5	       910	buffer.c	FUNCTION_13	CALL_6
0x1565	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       911	buffer.c	FUNCTION_13	CALL_7
0x1569	          0x4889c7	                            mov rdi, rax	       911	buffer.c	FUNCTION_13	CALL_7
0x156c	      0xe8f8feffff	               call sym.init_changedtick	       911	buffer.c	FUNCTION_13	CALL_7
0x1571	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       912	buffer.c	FUNCTION_13	CALL_8
0x1575	        0x488b55f8	                mov rdx, qword [rbp - 8]	       912	buffer.c	FUNCTION_13	CALL_8
0x1579	    0x488990d80000	             mov qword [rax + 0xd8], rdx	       912	buffer.c	FUNCTION_13	CALL_8
0x1580	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       916	buffer.c	FUNCTION_13	CALL_9
0x1584	    0x4805c8110000	                         add rax, 0x11c8	       916	buffer.c	FUNCTION_13	CALL_9
0x158a	          0x4889c7	                            mov rdi, rax	       916	buffer.c	FUNCTION_13	CALL_9
0x158d	      0xe800000000	                          call 0x40015d2	       916	buffer.c	FUNCTION_13	CALL_9
0x1592	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       919	buffer.c	FUNCTION_13	CALL_10
0x1596	          0x4889c7	                            mov rdi, rax	       919	buffer.c	FUNCTION_13	CALL_10
0x1599	      0xe800000000	                          call 0x40015de	       919	buffer.c	FUNCTION_13	CALL_10
0x159e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       922	buffer.c	FUNCTION_13	CALL_11
0x15a2	          0x4889c7	                            mov rdi, rax	       922	buffer.c	FUNCTION_13	CALL_11
0x15a5	      0xe800000000	                          call 0x40015ea	       922	buffer.c	FUNCTION_13	CALL_11
0x15aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       925	buffer.c	FUNCTION_13	CALL_12
0x15ae	      0xb900000000	                              mov ecx, 0	       925	buffer.c	FUNCTION_13	CALL_12
0x15b3	      0xba01000000	                              mov edx, 1	       925	buffer.c	FUNCTION_13	CALL_12
0x15b8	      0xbe3f300000	                         mov esi, 0x303f	       925	buffer.c	FUNCTION_13	CALL_12
0x15bd	          0x4889c7	                            mov rdi, rax	       925	buffer.c	FUNCTION_13	CALL_12
0x15c0	      0xe800000000	                          call 0x4001605	       925	buffer.c	FUNCTION_13	CALL_12
0x15c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       926	buffer.c	FUNCTION_13	CALL_13
0x15c9	      0xb901000000	                              mov ecx, 1	       926	buffer.c	FUNCTION_13	CALL_13
0x15ce	      0xba01000000	                              mov edx, 1	       926	buffer.c	FUNCTION_13	CALL_13
0x15d3	      0xbe3f300000	                         mov esi, 0x303f	       926	buffer.c	FUNCTION_13	CALL_13
0x15d8	          0x4889c7	                            mov rdi, rax	       926	buffer.c	FUNCTION_13	CALL_13
0x15db	      0xe800000000	                          call 0x4001620	       926	buffer.c	FUNCTION_13	CALL_13
0x15e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       929	buffer.c	FUNCTION_13	CALL_14
0x15e4	    0x488b80081700	          mov rax, qword [rax + 0x1708] 	       929	buffer.c	FUNCTION_13	CALL_14
0x15eb	          0x4885c0	                           test rax, rax	       929	buffer.c	FUNCTION_13	CALL_14
0x15ee	            0x7422	                            je 0x4001652	       929	buffer.c	FUNCTION_13	CALL_14
0x15f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       929	buffer.c	FUNCTION_13	CALL_14
0x15f4	    0x488b80081700	          mov rax, qword [rax + 0x1708] 	       929	buffer.c	FUNCTION_13	CALL_14
0x15fb	          0x4889c7	                            mov rdi, rax	       929	buffer.c	FUNCTION_13	CALL_14
0x15fe	      0xe800000000	                          call 0x4001643	       929	buffer.c	FUNCTION_13	CALL_14
0x1603	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       929	buffer.c	FUNCTION_13	CALL_14
0x1607	    0x48c780081700	            mov qword [rax + 0x1708], 0 	       929	buffer.c	FUNCTION_13	CALL_14
0x1612	              0x90	                                     nop	       931	buffer.c	FUNCTION_13
0x1613	              0xc9	                                   leave	       931	buffer.c	FUNCTION_13
0x1614	              0xc3	                                     ret	       931	buffer.c	FUNCTION_13
buf_setino	FOR,0:WHILE,0:ELSE,1:functions,0:IF,1:CALL,1:SWITCH,0:DO,0	37
0x5b13	              0x55	                                push rbp	      3366	buffer.c	FUNCTION_57
0x5b14	          0x4889e5	                            mov rbp, rsp	      3366	buffer.c	FUNCTION_57
0x5b17	    0x4881ecb00000	                           sub rsp, 0xb0	      3366	buffer.c	FUNCTION_57
0x5b1e	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	      3366	buffer.c	FUNCTION_57
0x5b25	    0x64488b042528	                mov rax, qword fs:[0x28]	      3366	buffer.c	FUNCTION_57
0x5b2e	        0x488945f8	                mov qword [rbp - 8], rax	      3366	buffer.c	FUNCTION_57
0x5b32	            0x31c0	                            xor eax, eax	      3366	buffer.c	FUNCTION_57
0x5b34	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x5b3b	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x5b42	          0x4885c0	                           test rax, rax	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x5b45	            0x7461	                            je 0x4005be8	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x5b47	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x5b4e	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x5b55	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x5b5c	          0x4889d6	                            mov rsi, rdx	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x5b5f	          0x4889c7	                            mov rdi, rax	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x5b62	      0xe800000000	                          call 0x4005ba7	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x5b67	            0x85c0	                           test eax, eax	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x5b69	            0x783d	                            js 0x4005be8	      3369	buffer.c	FUNCTION_57	IF_1	CALL_1
0x5b6b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3371	buffer.c	FUNCTION_57	IF_1
0x5b72	    0xc780a0000000	               mov dword [rax + 0xa0], 1	      3371	buffer.c	FUNCTION_57	IF_1
0x5b7c	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      3372	buffer.c	FUNCTION_57	IF_1
0x5b83	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3372	buffer.c	FUNCTION_57	IF_1
0x5b8a	    0x488990a80000	             mov qword [rax + 0xa8], rdx	      3372	buffer.c	FUNCTION_57	IF_1
0x5b91	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      3373	buffer.c	FUNCTION_57	IF_1
0x5b98	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3373	buffer.c	FUNCTION_57	IF_1
0x5b9f	    0x488990b00000	             mov qword [rax + 0xb0], rdx	      3373	buffer.c	FUNCTION_57	IF_1
0x5ba6	            0xeb11	                           jmp 0x4005bf9	      3373	buffer.c	FUNCTION_57	IF_1
0x5ba8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3376	buffer.c	FUNCTION_57	ELSE_1
0x5baf	    0xc780a0000000	               mov dword [rax + 0xa0], 0	      3376	buffer.c	FUNCTION_57	ELSE_1
0x5bb9	              0x90	                                     nop	      3377	buffer.c	FUNCTION_57	ELSE_1
0x5bba	        0x488b45f8	                mov rax, qword [rbp - 8]	      3377	buffer.c	FUNCTION_57	ELSE_1
0x5bbe	    0x644833042528	                xor rax, qword fs:[0x28]	      3377	buffer.c	FUNCTION_57	ELSE_1
0x5bc7	            0x7405	                            je 0x4005c0e	      3377	buffer.c	FUNCTION_57	ELSE_1
0x5bc9	      0xe800000000	                          call 0x4005c0e	      3377	buffer.c	FUNCTION_57	ELSE_1
0x5bce	              0xc9	                                   leave	      3377	buffer.c	FUNCTION_57	ELSE_1
0x5bcf	              0xc3	                                     ret	      3377	buffer.c	FUNCTION_57	ELSE_1
buflist_add	FOR,0:WHILE,0:ELSE,0:functions,0:IF,1:CALL,1:SWITCH,0:DO,0	21
0x591d	              0x55	                                push rbp	      3262	buffer.c	FUNCTION_52
0x591e	          0x4889e5	                            mov rbp, rsp	      3262	buffer.c	FUNCTION_52
0x5921	        0x4883ec20	                           sub rsp, 0x20	      3262	buffer.c	FUNCTION_52
0x5925	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3262	buffer.c	FUNCTION_52
0x5929	          0x8975e4	             mov dword [rbp - 0x1c], esi	      3262	buffer.c	FUNCTION_52
0x592c	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      3265	buffer.c	FUNCTION_52	CALL_1
0x592f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3265	buffer.c	FUNCTION_52	CALL_1
0x5933	            0x89d1	                            mov ecx, edx	      3265	buffer.c	FUNCTION_52	CALL_1
0x5935	      0xba00000000	                              mov edx, 0	      3265	buffer.c	FUNCTION_52	CALL_1
0x593a	      0xbe00000000	                              mov esi, 0	      3265	buffer.c	FUNCTION_52	CALL_1
0x593f	          0x4889c7	                            mov rdi, rax	      3265	buffer.c	FUNCTION_52	CALL_1
0x5942	      0xe800000000	                          call 0x4005987	      3265	buffer.c	FUNCTION_52	CALL_1
0x5947	        0x488945f8	                mov qword [rbp - 8], rax	      3265	buffer.c	FUNCTION_52	CALL_1
0x594b	      0x48837df800	                  cmp qword [rbp - 8], 0	      3266	buffer.c	FUNCTION_52	IF_1
0x5950	            0x740c	                            je 0x400599e	      3266	buffer.c	FUNCTION_52	IF_1
0x5952	        0x488b45f8	                mov rax, qword [rbp - 8]	      3267	buffer.c	FUNCTION_52	IF_1
0x5956	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      3267	buffer.c	FUNCTION_52	IF_1
0x595c	            0xeb05	                           jmp 0x40059a3	      3267	buffer.c	FUNCTION_52	IF_1
0x595e	      0xb800000000	                              mov eax, 0	      3268	buffer.c	FUNCTION_52
0x5963	              0xc9	                                   leave	      3269	buffer.c	FUNCTION_52
0x5964	              0xc3	                                     ret	      3269	buffer.c	FUNCTION_52
goto_buffer	FOR,0:WHILE,0:ELSE,1:functions,0:IF,1:CALL,6:SWITCH,0:DO,0	61
0x1690	              0x55	                                push rbp	       965	buffer.c	FUNCTION_15
0x1691	          0x4889e5	                            mov rbp, rsp	       965	buffer.c	FUNCTION_15
0x1694	        0x4883ec50	                           sub rsp, 0x50	       965	buffer.c	FUNCTION_15
0x1698	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       965	buffer.c	FUNCTION_15
0x169c	          0x8975c4	             mov dword [rbp - 0x3c], esi	       965	buffer.c	FUNCTION_15
0x169f	          0x8955c0	             mov dword [rbp - 0x40], edx	       965	buffer.c	FUNCTION_15
0x16a2	          0x894dbc	             mov dword [rbp - 0x44], ecx	       965	buffer.c	FUNCTION_15
0x16a5	    0x64488b042528	                mov rax, qword fs:[0x28]	       965	buffer.c	FUNCTION_15
0x16ae	        0x488945f8	                mov qword [rbp - 8], rax	       965	buffer.c	FUNCTION_15
0x16b2	            0x31c0	                            xor eax, eax	       965	buffer.c	FUNCTION_15
0x16b4	    0x488b15000000	            mov rdx, qword [0x040016fb] 	       969	buffer.c	FUNCTION_15	CALL_1
0x16bb	        0x488d45d0	                   lea rax, [rbp - 0x30]	       969	buffer.c	FUNCTION_15	CALL_1
0x16bf	          0x4889d6	                            mov rsi, rdx	       969	buffer.c	FUNCTION_15	CALL_1
0x16c2	          0x4889c7	                            mov rdi, rax	       969	buffer.c	FUNCTION_15	CALL_1
0x16c5	      0xe800000000	                          call 0x400170a	       969	buffer.c	FUNCTION_15	CALL_1
0x16ca	    0xc70500000000	               mov dword [0x04001714], 1	       971	buffer.c	FUNCTION_15
0x16d4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       973	buffer.c	FUNCTION_15	CALL_2
0x16d8	          0x8b7834	            mov edi, dword [rax + 0x34] 	       973	buffer.c	FUNCTION_15	CALL_2
0x16db	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       973	buffer.c	FUNCTION_15	CALL_2
0x16df	        0x488b4010	            mov rax, qword [rax + 0x10] 	       973	buffer.c	FUNCTION_15	CALL_2
0x16e3	           0xfb600	                   movzx eax, byte [rax]	       973	buffer.c	FUNCTION_15	CALL_2
0x16e6	            0x3c73	                            cmp al, 0x73	       973	buffer.c	FUNCTION_15	CALL_2
0x16e8	           0xf94c0	                                 sete al	       973	buffer.c	FUNCTION_15	CALL_2
0x16eb	           0xfb6c0	                           movzx eax, al	       973	buffer.c	FUNCTION_15	CALL_2
0x16ee	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	       973	buffer.c	FUNCTION_15	CALL_2
0x16f1	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       973	buffer.c	FUNCTION_15	CALL_2
0x16f4	          0x8b75c4	             mov esi, dword [rbp - 0x3c]	       973	buffer.c	FUNCTION_15	CALL_2
0x16f7	          0x4189f8	                            mov r8d, edi	       973	buffer.c	FUNCTION_15	CALL_2
0x16fa	            0x89c7	                            mov edi, eax	       973	buffer.c	FUNCTION_15	CALL_2
0x16fc	      0xe800000000	                          call 0x4001741	       973	buffer.c	FUNCTION_15	CALL_2
0x1701	    0x8b0500000000	            mov eax, dword [0x04001747] 	       976	buffer.c	FUNCTION_15	IF_1
0x1707	          0x83f802	                              cmp eax, 2	       976	buffer.c	FUNCTION_15	IF_1
0x170a	            0x7551	                           jne 0x400179d	       976	buffer.c	FUNCTION_15	IF_1
0x170c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       976	buffer.c	FUNCTION_15	IF_1
0x1710	        0x488b4010	            mov rax, qword [rax + 0x10] 	       976	buffer.c	FUNCTION_15	IF_1
0x1714	           0xfb600	                   movzx eax, byte [rax]	       976	buffer.c	FUNCTION_15	IF_1
0x1717	            0x3c73	                            cmp al, 0x73	       976	buffer.c	FUNCTION_15	IF_1
0x1719	            0x7542	                           jne 0x400179d	       976	buffer.c	FUNCTION_15	IF_1
0x171b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       983	buffer.c	FUNCTION_15	IF_1	CALL_3
0x171f	          0x4889c7	                            mov rdi, rax	       983	buffer.c	FUNCTION_15	IF_1	CALL_3
0x1722	      0xe800000000	                          call 0x4001767	       983	buffer.c	FUNCTION_15	IF_1	CALL_3
0x1727	    0x488b05000000	            mov rax, qword [0x0400176e] 	       987	buffer.c	FUNCTION_15	IF_1	CALL_4
0x172e	      0xbe01000000	                              mov esi, 1	       987	buffer.c	FUNCTION_15	IF_1	CALL_4
0x1733	          0x4889c7	                            mov rdi, rax	       987	buffer.c	FUNCTION_15	IF_1	CALL_4
0x1736	      0xe800000000	                          call 0x400177b	       987	buffer.c	FUNCTION_15	IF_1	CALL_4
0x173b	    0xc70500000000	               mov dword [0x04001785], 0	       988	buffer.c	FUNCTION_15	IF_1
0x1745	    0xc70500000000	               mov dword [0x0400178f], 1	       989	buffer.c	FUNCTION_15	IF_1
0x174f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       994	buffer.c	FUNCTION_15	IF_1	CALL_5
0x1753	          0x4889c7	                            mov rdi, rax	       994	buffer.c	FUNCTION_15	IF_1	CALL_5
0x1756	      0xe800000000	                          call 0x400179b	       994	buffer.c	FUNCTION_15	IF_1	CALL_5
0x175b	            0xeb0c	                           jmp 0x40017a9	       977	buffer.c	FUNCTION_15	IF_1
0x175d	        0x488d45d0	                   lea rax, [rbp - 0x30]	       998	buffer.c	FUNCTION_15	CALL_6
0x1761	          0x4889c7	                            mov rdi, rax	       998	buffer.c	FUNCTION_15	CALL_6
0x1764	      0xe800000000	                          call 0x40017a9	       998	buffer.c	FUNCTION_15	CALL_6
0x1769	              0x90	                                     nop	      1000	buffer.c	FUNCTION_15
0x176a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	buffer.c	FUNCTION_15
0x176e	    0x644833042528	                xor rax, qword fs:[0x28]	      1000	buffer.c	FUNCTION_15
0x1777	            0x7405	                            je 0x40017be	      1000	buffer.c	FUNCTION_15
0x1779	      0xe800000000	                          call 0x40017be	      1000	buffer.c	FUNCTION_15
0x177e	              0xc9	                                   leave	      1000	buffer.c	FUNCTION_15
0x177f	              0xc3	                                     ret	      1000	buffer.c	FUNCTION_15
buflist_findfpos	FOR,0:WHILE,0:ELSE,1:functions,0:IF,1:CALL,2:SWITCH,0:DO,0	17
0x4d12	              0x55	                                push rbp	      2927	buffer.c	FUNCTION_43
0x4d13	          0x4889e5	                            mov rbp, rsp	      2927	buffer.c	FUNCTION_43
0x4d16	        0x4883ec18	                           sub rsp, 0x18	      2927	buffer.c	FUNCTION_43
0x4d1a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2927	buffer.c	FUNCTION_43
0x4d1e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2931	buffer.c	FUNCTION_43	CALL_2
0x4d22	      0xbe00000000	                              mov esi, 0	      2931	buffer.c	FUNCTION_43	CALL_2
0x4d27	          0x4889c7	                            mov rdi, rax	      2931	buffer.c	FUNCTION_43	CALL_2
0x4d2a	      0xe812feffff	                   call sym.find_wininfo	      2931	buffer.c	FUNCTION_43	CALL_2
0x4d2f	        0x488945f8	                mov qword [rbp - 8], rax	      2931	buffer.c	FUNCTION_43	CALL_2
0x4d33	      0x48837df800	                  cmp qword [rbp - 8], 0	      2932	buffer.c	FUNCTION_43	IF_1
0x4d38	            0x740a	                            je 0x4004d84	      2932	buffer.c	FUNCTION_43	IF_1
0x4d3a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2933	buffer.c	FUNCTION_43	IF_1
0x4d3e	        0x4883c018	                           add rax, 0x18	      2933	buffer.c	FUNCTION_43	IF_1
0x4d42	            0xeb05	                           jmp 0x4004d89	      2933	buffer.c	FUNCTION_43	IF_1
0x4d44	      0xb800000000	                              mov eax, 0	      2935	buffer.c	FUNCTION_43	ELSE_1
0x4d49	              0xc9	                                   leave	      2936	buffer.c	FUNCTION_43	ELSE_1
0x4d4a	              0xc3	                                     ret	      2936	buffer.c	FUNCTION_43	ELSE_1
insert_sign	FOR,0:WHILE,0:ELSE,1:functions,0:IF,5:CALL,4:SWITCH,0:DO,0	61
0xbaa8	              0x55	                                push rbp	      5789	buffer.c	FUNCTION_88
0xbaa9	          0x4889e5	                            mov rbp, rsp	      5789	buffer.c	FUNCTION_88
0xbaac	        0x4883ec40	                           sub rsp, 0x40	      5789	buffer.c	FUNCTION_88
0xbab0	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5789	buffer.c	FUNCTION_88
0xbab4	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5789	buffer.c	FUNCTION_88
0xbab8	        0x488955d8	             mov qword [rbp - 0x28], rdx	      5789	buffer.c	FUNCTION_88
0xbabc	          0x894dd4	             mov dword [rbp - 0x2c], ecx	      5789	buffer.c	FUNCTION_88
0xbabf	        0x4c8945c8	              mov qword [rbp - 0x38], r8	      5789	buffer.c	FUNCTION_88
0xbac3	        0x44894dd0	             mov dword [rbp - 0x30], r9d	      5789	buffer.c	FUNCTION_88
0xbac7	      0xbe00000000	                              mov esi, 0	      5792	buffer.c	FUNCTION_88	CALL_1
0xbacc	      0xbf28000000	                           mov edi, 0x28	      5792	buffer.c	FUNCTION_88	CALL_1
0xbad1	      0xe800000000	                          call 0x400bb16	      5792	buffer.c	FUNCTION_88	CALL_1
0xbad6	        0x488945f8	                mov qword [rbp - 8], rax	      5792	buffer.c	FUNCTION_88	CALL_1
0xbada	      0x48837df800	                  cmp qword [rbp - 8], 0	      5793	buffer.c	FUNCTION_88	IF_1
0xbadf	     0xf84ab000000	                            je 0x400bbd0	      5793	buffer.c	FUNCTION_88	IF_1
0xbae5	        0x488b45f8	                mov rax, qword [rbp - 8]	      5795	buffer.c	FUNCTION_88	IF_1
0xbae9	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      5795	buffer.c	FUNCTION_88	IF_1
0xbaec	            0x8910	                    mov dword [rax], edx	      5795	buffer.c	FUNCTION_88	IF_1
0xbaee	        0x488b45f8	                mov rax, qword [rbp - 8]	      5796	buffer.c	FUNCTION_88	IF_1
0xbaf2	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      5796	buffer.c	FUNCTION_88	IF_1
0xbaf6	        0x48895008	                mov qword [rax + 8], rdx	      5796	buffer.c	FUNCTION_88	IF_1
0xbafa	        0x488b45f8	                mov rax, qword [rbp - 8]	      5797	buffer.c	FUNCTION_88	IF_1
0xbafe	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      5797	buffer.c	FUNCTION_88	IF_1
0xbb01	          0x895010	             mov dword [rax + 0x10], edx	      5797	buffer.c	FUNCTION_88	IF_1
0xbb04	        0x488b45f8	                mov rax, qword [rbp - 8]	      5798	buffer.c	FUNCTION_88	IF_1
0xbb08	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5798	buffer.c	FUNCTION_88	IF_1
0xbb0c	        0x48895018	             mov qword [rax + 0x18], rdx	      5798	buffer.c	FUNCTION_88	IF_1
0xbb10	        0x488b45f8	                mov rax, qword [rbp - 8]	      5800	buffer.c	FUNCTION_88	IF_1
0xbb14	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5800	buffer.c	FUNCTION_88	IF_1
0xbb18	        0x48895020	             mov qword [rax + 0x20], rdx	      5800	buffer.c	FUNCTION_88	IF_1
0xbb1c	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      5801	buffer.c	FUNCTION_88	IF_1	IF_2
0xbb21	            0x740c	                            je 0x400bb6f	      5801	buffer.c	FUNCTION_88	IF_1	IF_2
0xbb23	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5802	buffer.c	FUNCTION_88	IF_1	IF_2
0xbb27	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5802	buffer.c	FUNCTION_88	IF_1	IF_2
0xbb2b	        0x48895020	             mov qword [rax + 0x20], rdx	      5802	buffer.c	FUNCTION_88	IF_1	IF_2
0xbb2f	      0x48837de000	               cmp qword [rbp - 0x20], 0	      5805	buffer.c	FUNCTION_88	IF_1	IF_3
0xbb34	            0x754e	                           jne 0x400bbc4	      5805	buffer.c	FUNCTION_88	IF_1	IF_3
0xbb36	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5809	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4
0xbb3a	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      5809	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4
0xbb41	          0x4885c0	                           test rax, rax	      5809	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4
0xbb44	            0x7516	                           jne 0x400bb9c	      5809	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4
0xbb46	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5811	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_2
0xbb4a	      0xbe28000000	                           mov esi, 0x28	      5811	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_2
0xbb4f	          0x4889c7	                            mov rdi, rax	      5811	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_2
0xbb52	      0xe800000000	                          call 0x400bb97	      5811	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_2
0xbb57	      0xe800000000	                          call 0x400bb9c	      5812	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_3
0xbb5c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5816	buffer.c	FUNCTION_88	IF_1	IF_3
0xbb60	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5816	buffer.c	FUNCTION_88	IF_1	IF_3
0xbb64	    0x488990201c00	          mov qword [rax + 0x1c20], rdx 	      5816	buffer.c	FUNCTION_88	IF_1	IF_3
0xbb6b	      0xe800000000	                          call 0x400bbb0	      5818	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5	CALL_4
0xbb70	            0x85c0	                           test eax, eax	      5818	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5	CALL_4
0xbb72	            0x741c	                            je 0x400bbd0	      5818	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5	CALL_4
0xbb74	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5819	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5
0xbb78	    0xc780281c0000	            mov dword [rax + 0x1c28], 1 	      5819	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5
0xbb82	            0xeb0c	                           jmp 0x400bbd0	      5825	buffer.c	FUNCTION_88	ELSE_1
0xbb84	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5823	buffer.c	FUNCTION_88	IF_1	ELSE_1
0xbb88	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5823	buffer.c	FUNCTION_88	IF_1	ELSE_1
0xbb8c	        0x48895018	             mov qword [rax + 0x18], rdx	      5823	buffer.c	FUNCTION_88	IF_1	ELSE_1
0xbb90	              0x90	                                     nop	      5825	buffer.c	FUNCTION_88	ELSE_1
0xbb91	              0xc9	                                   leave	      5825	buffer.c	FUNCTION_88	ELSE_1
0xbb92	              0xc3	                                     ret	      5825	buffer.c	FUNCTION_88	ELSE_1
append_arg_number	FOR,0:WHILE,0:ELSE,0:functions,0:IF,3:CALL,3:SWITCH,0:DO,0	77
0x9c06	              0x55	                                push rbp	      4721	buffer.c	FUNCTION_67
0x9c07	          0x4889e5	                            mov rbp, rsp	      4721	buffer.c	FUNCTION_67
0x9c0a	        0x4883ec30	                           sub rsp, 0x30	      4721	buffer.c	FUNCTION_67
0x9c0e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4721	buffer.c	FUNCTION_67
0x9c12	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4721	buffer.c	FUNCTION_67
0x9c16	          0x8955dc	             mov dword [rbp - 0x24], edx	      4721	buffer.c	FUNCTION_67
0x9c19	          0x894dd8	             mov dword [rbp - 0x28], ecx	      4721	buffer.c	FUNCTION_67
0x9c1c	    0x488b05000000	            mov rax, qword [0x04009c63] 	      4724	buffer.c	FUNCTION_67	IF_1
0x9c23	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      4724	buffer.c	FUNCTION_67	IF_1
0x9c2a	            0x8b00	                    mov eax, dword [rax]	      4724	buffer.c	FUNCTION_67	IF_1
0x9c2c	          0x83f801	                              cmp eax, 1	      4724	buffer.c	FUNCTION_67	IF_1
0x9c2f	            0x7f0a	                            jg 0x4009c7b	      4724	buffer.c	FUNCTION_67	IF_1
0x9c31	      0xb800000000	                              mov eax, 0	      4725	buffer.c	FUNCTION_67	IF_1
0x9c36	      0xe9e9000000	                           jmp 0x4009d64	      4725	buffer.c	FUNCTION_67	IF_1
0x9c3b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4727	buffer.c	FUNCTION_67	CALL_1
0x9c3f	          0x4889c7	                            mov rdi, rax	      4727	buffer.c	FUNCTION_67	CALL_1
0x9c42	      0xe800000000	                          call 0x4009c87	      4727	buffer.c	FUNCTION_67	CALL_1
0x9c47	          0x4889c2	                            mov rdx, rax	      4727	buffer.c	FUNCTION_67	CALL_1
0x9c4a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4727	buffer.c	FUNCTION_67	CALL_1
0x9c4e	          0x4801d0	                            add rax, rdx	      4727	buffer.c	FUNCTION_67	CALL_1
0x9c51	        0x488945f8	                mov qword [rbp - 8], rax	      4727	buffer.c	FUNCTION_67	CALL_1
0x9c55	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4728	buffer.c	FUNCTION_67	IF_2
0x9c59	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4728	buffer.c	FUNCTION_67	IF_2
0x9c5d	          0x4829c2	                            sub rdx, rax	      4728	buffer.c	FUNCTION_67	IF_2
0x9c60	          0x4889d0	                            mov rax, rdx	      4728	buffer.c	FUNCTION_67	IF_2
0x9c63	        0x488d5023	                   lea rdx, [rax + 0x23]	      4728	buffer.c	FUNCTION_67	IF_2
0x9c67	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4728	buffer.c	FUNCTION_67	IF_2
0x9c6a	            0x4898	                                    cdqe	      4728	buffer.c	FUNCTION_67	IF_2
0x9c6c	          0x4839c2	                            cmp rdx, rax	      4728	buffer.c	FUNCTION_67	IF_2
0x9c6f	            0x7c0a	                            jl 0x4009cbb	      4728	buffer.c	FUNCTION_67	IF_2
0x9c71	      0xb800000000	                              mov eax, 0	      4729	buffer.c	FUNCTION_67	IF_2
0x9c76	      0xe9a9000000	                           jmp 0x4009d64	      4729	buffer.c	FUNCTION_67	IF_2
0x9c7b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4730	buffer.c	FUNCTION_67
0x9c7f	        0x488d5001	                      lea rdx, [rax + 1]	      4730	buffer.c	FUNCTION_67
0x9c83	        0x488955f8	                mov qword [rbp - 8], rdx	      4730	buffer.c	FUNCTION_67
0x9c87	          0xc60020	                    mov byte [rax], 0x20	      4730	buffer.c	FUNCTION_67
0x9c8a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4731	buffer.c	FUNCTION_67
0x9c8e	        0x488d5001	                      lea rdx, [rax + 1]	      4731	buffer.c	FUNCTION_67
0x9c92	        0x488955f8	                mov qword [rbp - 8], rdx	      4731	buffer.c	FUNCTION_67
0x9c96	          0xc60028	                    mov byte [rax], 0x28	      4731	buffer.c	FUNCTION_67
0x9c99	        0x837dd800	               cmp dword [rbp - 0x28], 0	      4732	buffer.c	FUNCTION_67	IF_3
0x9c9d	            0x7415	                            je 0x4009cf4	      4732	buffer.c	FUNCTION_67	IF_3
0x9c9f	        0x488b45f8	                mov rax, qword [rbp - 8]	      4734	buffer.c	FUNCTION_67	IF_3	CALL_2
0x9ca3	    0xc70066696c65	            mov dword [rax], 0x656c6966 	      4734	buffer.c	FUNCTION_67	IF_3	CALL_2
0x9ca9	    0x66c740042000	                mov word [rax + 4], 0x20	      4734	buffer.c	FUNCTION_67	IF_3	CALL_2
0x9caf	      0x488345f805	                  add qword [rbp - 8], 5	      4735	buffer.c	FUNCTION_67	IF_3
0x9cb4	    0x488b05000000	            mov rax, qword [0x04009cfb] 	      4739	buffer.c	FUNCTION_67
0x9cbb	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      4739	buffer.c	FUNCTION_67
0x9cc2	            0x8b08	                    mov ecx, dword [rax]	      4737	buffer.c	FUNCTION_67	CALL_3
0x9cc4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4739	buffer.c	FUNCTION_67
0x9cc8	    0x8b8088010000	           mov eax, dword [rax + 0x188] 	      4739	buffer.c	FUNCTION_67
0x9cce	          0x8d5001	                      lea edx, [rax + 1]	      4737	buffer.c	FUNCTION_67	CALL_3
0x9cd1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4738	buffer.c	FUNCTION_67
0x9cd5	    0x8b808c010000	           mov eax, dword [rax + 0x18c] 	      4738	buffer.c	FUNCTION_67
0x9cdb	            0x85c0	                           test eax, eax	      4737	buffer.c	FUNCTION_67	CALL_3
0x9cdd	            0x7408	                            je 0x4009d27	      4737	buffer.c	FUNCTION_67	CALL_3
0x9cdf	    0x41b900000000	                              mov r9d, 0	      4737	buffer.c	FUNCTION_67	CALL_3
0x9ce5	            0xeb06	                           jmp 0x4009d2d	      4737	buffer.c	FUNCTION_67	CALL_3
0x9ce7	    0x41b900000000	                              mov r9d, 0	      4737	buffer.c	FUNCTION_67	CALL_3
0x9ced	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4737	buffer.c	FUNCTION_67	CALL_3
0x9cf0	            0x4898	                                    cdqe	      4737	buffer.c	FUNCTION_67	CALL_3
0x9cf2	        0x488b7df8	                mov rdi, qword [rbp - 8]	      4737	buffer.c	FUNCTION_67	CALL_3
0x9cf6	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      4737	buffer.c	FUNCTION_67	CALL_3
0x9cfa	          0x4829f7	                            sub rdi, rsi	      4737	buffer.c	FUNCTION_67	CALL_3
0x9cfd	          0x4889fe	                            mov rsi, rdi	      4737	buffer.c	FUNCTION_67	CALL_3
0x9d00	          0x4829f0	                            sub rax, rsi	      4737	buffer.c	FUNCTION_67	CALL_3
0x9d03	          0x4889c6	                            mov rsi, rax	      4737	buffer.c	FUNCTION_67	CALL_3
0x9d06	        0x488b45f8	                mov rax, qword [rbp - 8]	      4737	buffer.c	FUNCTION_67	CALL_3
0x9d0a	          0x4189c8	                            mov r8d, ecx	      4737	buffer.c	FUNCTION_67	CALL_3
0x9d0d	            0x89d1	                            mov ecx, edx	      4737	buffer.c	FUNCTION_67	CALL_3
0x9d0f	          0x4c89ca	                             mov rdx, r9	      4737	buffer.c	FUNCTION_67	CALL_3
0x9d12	          0x4889c7	                            mov rdi, rax	      4737	buffer.c	FUNCTION_67	CALL_3
0x9d15	      0xb800000000	                              mov eax, 0	      4737	buffer.c	FUNCTION_67	CALL_3
0x9d1a	      0xe800000000	                          call 0x4009d5f	      4737	buffer.c	FUNCTION_67	CALL_3
0x9d1f	      0xb801000000	                              mov eax, 1	      4740	buffer.c	FUNCTION_67
0x9d24	              0xc9	                                   leave	      4741	buffer.c	FUNCTION_67
0x9d25	              0xc3	                                     ret	      4741	buffer.c	FUNCTION_67
buflist_findname	FOR,0:WHILE,0:ELSE,0:functions,0:IF,1:CALL,2:SWITCH,0:DO,0	26
0x3e18	              0x55	                                push rbp	      2390	buffer.c	FUNCTION_31
0x3e19	          0x4889e5	                            mov rbp, rsp	      2390	buffer.c	FUNCTION_31
0x3e1c	    0x4881ecb00000	                           sub rsp, 0xb0	      2390	buffer.c	FUNCTION_31
0x3e23	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	      2390	buffer.c	FUNCTION_31
0x3e2a	    0x64488b042528	                mov rax, qword fs:[0x28]	      2390	buffer.c	FUNCTION_31
0x3e33	        0x488945f8	                mov qword [rbp - 8], rax	      2390	buffer.c	FUNCTION_31
0x3e37	            0x31c0	                            xor eax, eax	      2390	buffer.c	FUNCTION_31
0x3e39	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      2394	buffer.c	FUNCTION_31	IF_1	CALL_1
0x3e40	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2394	buffer.c	FUNCTION_31	IF_1	CALL_1
0x3e47	          0x4889d6	                            mov rsi, rdx	      2394	buffer.c	FUNCTION_31	IF_1	CALL_1
0x3e4a	          0x4889c7	                            mov rdi, rax	      2394	buffer.c	FUNCTION_31	IF_1	CALL_1
0x3e4d	      0xe800000000	                          call 0x4003e92	      2394	buffer.c	FUNCTION_31	IF_1	CALL_1
0x3e52	            0x85c0	                           test eax, eax	      2394	buffer.c	FUNCTION_31	IF_1	CALL_1
0x3e54	            0x790b	                           jns 0x4003ea1	      2394	buffer.c	FUNCTION_31	IF_1	CALL_1
0x3e56	    0x48c78560ffff	mov qword [rbp - 0xa0], 0xffffffffffffffff	      2395	buffer.c	FUNCTION_31	IF_1
0x3e61	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      2396	buffer.c	FUNCTION_31	CALL_2
0x3e68	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2396	buffer.c	FUNCTION_31	CALL_2
0x3e6f	          0x4889d6	                            mov rsi, rdx	      2396	buffer.c	FUNCTION_31	CALL_2
0x3e72	          0x4889c7	                            mov rdi, rax	      2396	buffer.c	FUNCTION_31	CALL_2
0x3e75	      0xe816000000	          call sym.buflist_findname_stat	      2396	buffer.c	FUNCTION_31	CALL_2
0x3e7a	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2397	buffer.c	FUNCTION_31
0x3e7e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2397	buffer.c	FUNCTION_31
0x3e87	            0x7405	                            je 0x4003ece	      2397	buffer.c	FUNCTION_31
0x3e89	      0xe800000000	                          call 0x4003ece	      2397	buffer.c	FUNCTION_31
0x3e8e	              0xc9	                                   leave	      2397	buffer.c	FUNCTION_31
0x3e8f	              0xc3	                                     ret	      2397	buffer.c	FUNCTION_31
buflist_name_nr	FOR,0:WHILE,0:ELSE,0:functions,0:IF,1:CALL,2:SWITCH,0:DO,0	31
0x5376	              0x55	                                push rbp	      3058	buffer.c	FUNCTION_46
0x5377	          0x4889e5	                            mov rbp, rsp	      3058	buffer.c	FUNCTION_46
0x537a	        0x4883ec30	                           sub rsp, 0x30	      3058	buffer.c	FUNCTION_46
0x537e	          0x897dec	             mov dword [rbp - 0x14], edi	      3058	buffer.c	FUNCTION_46
0x5381	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3058	buffer.c	FUNCTION_46
0x5385	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3058	buffer.c	FUNCTION_46
0x5389	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3061	buffer.c	FUNCTION_46	CALL_1
0x538c	            0x89c7	                            mov edi, eax	      3061	buffer.c	FUNCTION_46	CALL_1
0x538e	      0xe800000000	                          call 0x40053d3	      3061	buffer.c	FUNCTION_46	CALL_1
0x5393	        0x488945f8	                mov qword [rbp - 8], rax	      3061	buffer.c	FUNCTION_46	CALL_1
0x5397	      0x48837df800	                  cmp qword [rbp - 8], 0	      3062	buffer.c	FUNCTION_46	IF_1
0x539c	            0x7410	                            je 0x40053ee	      3062	buffer.c	FUNCTION_46	IF_1
0x539e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3062	buffer.c	FUNCTION_46	IF_1
0x53a2	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      3062	buffer.c	FUNCTION_46	IF_1
0x53a9	          0x4885c0	                           test rax, rax	      3062	buffer.c	FUNCTION_46	IF_1
0x53ac	            0x7507	                           jne 0x40053f5	      3062	buffer.c	FUNCTION_46	IF_1
0x53ae	      0xb800000000	                              mov eax, 0	      3063	buffer.c	FUNCTION_46	IF_1
0x53b3	            0xeb2d	                           jmp 0x4005422	      3063	buffer.c	FUNCTION_46	IF_1
0x53b5	        0x488b45f8	                mov rax, qword [rbp - 8]	      3065	buffer.c	FUNCTION_46
0x53b9	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      3065	buffer.c	FUNCTION_46
0x53c0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3065	buffer.c	FUNCTION_46
0x53c4	          0x488910	                    mov qword [rax], rdx	      3065	buffer.c	FUNCTION_46
0x53c7	        0x488b45f8	                mov rax, qword [rbp - 8]	      3066	buffer.c	FUNCTION_46	CALL_2
0x53cb	          0x4889c7	                            mov rdi, rax	      3066	buffer.c	FUNCTION_46	CALL_2
0x53ce	      0xe800000000	                          call 0x4005413	      3066	buffer.c	FUNCTION_46	CALL_2
0x53d3	          0x4889c2	                            mov rdx, rax	      3066	buffer.c	FUNCTION_46	CALL_2
0x53d6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3066	buffer.c	FUNCTION_46	CALL_2
0x53da	          0x488910	                    mov qword [rax], rdx	      3066	buffer.c	FUNCTION_46	CALL_2
0x53dd	      0xb801000000	                              mov eax, 1	      3068	buffer.c	FUNCTION_46
0x53e2	              0xc9	                                   leave	      3069	buffer.c	FUNCTION_46
0x53e3	              0xc3	                                     ret	      3069	buffer.c	FUNCTION_46
get_rel_pos	FOR,0:WHILE,0:ELSE,2:functions,0:IF,4:CALL,7:SWITCH,0:DO,0	127
0x9a3c	              0x55	                                push rbp	      4684	buffer.c	FUNCTION_66
0x9a3d	          0x4889e5	                            mov rbp, rsp	      4684	buffer.c	FUNCTION_66
0x9a40	              0x53	                                push rbx	      4684	buffer.c	FUNCTION_66
0x9a41	        0x4883ec38	                           sub rsp, 0x38	      4684	buffer.c	FUNCTION_66
0x9a45	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4684	buffer.c	FUNCTION_66
0x9a49	        0x488975d0	             mov qword [rbp - 0x30], rsi	      4684	buffer.c	FUNCTION_66
0x9a4d	          0x8955cc	             mov dword [rbp - 0x34], edx	      4684	buffer.c	FUNCTION_66
0x9a50	        0x837dcc02	               cmp dword [rbp - 0x34], 2	      4688	buffer.c	FUNCTION_66	IF_1
0x9a54	     0xf8ea4010000	                           jle 0x4009c3e	      4688	buffer.c	FUNCTION_66	IF_1
0x9a5a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4690	buffer.c	FUNCTION_66
0x9a5e	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4690	buffer.c	FUNCTION_66
0x9a62	        0x4883e801	                              sub rax, 1	      4690	buffer.c	FUNCTION_66
0x9a66	        0x488945e0	             mov qword [rbp - 0x20], rax	      4690	buffer.c	FUNCTION_66
0x9a6a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4692	buffer.c	FUNCTION_66	CALL_1
0x9a6e	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      4692	buffer.c	FUNCTION_66	CALL_1
0x9a72	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4692	buffer.c	FUNCTION_66	CALL_1
0x9a76	          0x4889d6	                            mov rsi, rdx	      4692	buffer.c	FUNCTION_66	CALL_1
0x9a79	          0x4889c7	                            mov rdi, rax	      4692	buffer.c	FUNCTION_66	CALL_1
0x9a7c	      0xe800000000	                          call 0x4009ac1	      4692	buffer.c	FUNCTION_66	CALL_1
0x9a81	            0x89c2	                            mov edx, eax	      4692	buffer.c	FUNCTION_66	CALL_1
0x9a83	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4692	buffer.c	FUNCTION_66	CALL_1
0x9a87	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      4692	buffer.c	FUNCTION_66	CALL_1
0x9a8d	            0x29c2	                            sub edx, eax	      4692	buffer.c	FUNCTION_66	CALL_1
0x9a8f	            0x89d0	                            mov eax, edx	      4692	buffer.c	FUNCTION_66	CALL_1
0x9a91	            0x4898	                                    cdqe	      4692	buffer.c	FUNCTION_66	CALL_1
0x9a93	        0x480145e0	            add qword [rbp - 0x20], rax 	      4692	buffer.c	FUNCTION_66	CALL_1
0x9a97	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4693	buffer.c	FUNCTION_66	IF_2
0x9a9b	        0x488b4078	            mov rax, qword [rax + 0x78] 	      4693	buffer.c	FUNCTION_66	IF_2
0x9a9f	        0x4883f801	                              cmp rax, 1	      4693	buffer.c	FUNCTION_66	IF_2
0x9aa3	            0x7516	                           jne 0x4009afb	      4693	buffer.c	FUNCTION_66	IF_2
0x9aa5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4693	buffer.c	FUNCTION_66	IF_2
0x9aa9	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      4693	buffer.c	FUNCTION_66	IF_2
0x9aaf	            0x85c0	                           test eax, eax	      4693	buffer.c	FUNCTION_66	IF_2
0x9ab1	            0x7e08	                           jle 0x4009afb	      4693	buffer.c	FUNCTION_66	IF_2
0x9ab3	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      4694	buffer.c	FUNCTION_66	IF_2
0x9abb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4698	buffer.c	FUNCTION_66
0x9abf	        0x488b4008	                mov rax, qword [rax + 8]	      4698	buffer.c	FUNCTION_66
0x9ac3	          0x488b10	                    mov rdx, qword [rax]	      4698	buffer.c	FUNCTION_66
0x9ac6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4698	buffer.c	FUNCTION_66
0x9aca	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      4698	buffer.c	FUNCTION_66
0x9ad1	          0x4829c2	                            sub rdx, rax	      4698	buffer.c	FUNCTION_66
0x9ad4	          0x4889d0	                            mov rax, rdx	      4698	buffer.c	FUNCTION_66
0x9ad7	        0x4883c001	                              add rax, 1	      4698	buffer.c	FUNCTION_66
0x9adb	        0x488945e8	             mov qword [rbp - 0x18], rax	      4698	buffer.c	FUNCTION_66
0x9adf	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4699	buffer.c	FUNCTION_66	IF_3
0x9ae4	            0x7f43	                            jg 0x4009b69	      4699	buffer.c	FUNCTION_66	IF_3
0x9ae6	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4701	buffer.c	FUNCTION_66	IF_3
0x9ae9	          0x83e801	                              sub eax, 1	      4701	buffer.c	FUNCTION_66	IF_3
0x9aec	          0x4863d8	                         movsxd rbx, eax	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x9aef	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x9af4	            0x750f	                           jne 0x4009b45	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x9af6	      0xbf00000000	                              mov edi, 0	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x9afb	      0xe800000000	                          call 0x4009b40	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x9b00	          0x4889c1	                            mov rcx, rax	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x9b03	            0xeb0d	                           jmp 0x4009b52	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x9b05	      0xbf00000000	                              mov edi, 0	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x9b0a	      0xe800000000	                          call 0x4009b4f	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x9b0f	          0x4889c1	                            mov rcx, rax	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x9b12	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x9b16	          0x4889da	                            mov rdx, rbx	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x9b19	          0x4889ce	                            mov rsi, rcx	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x9b1c	          0x4889c7	                            mov rdi, rax	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x9b1f	      0xe800000000	                          call 0x4009b64	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x9b24	      0xe9d6000000	                           jmp 0x4009c3f	      4700	buffer.c	FUNCTION_66	IF_3	CALL_4
0x9b29	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4702	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x9b2e	            0x7f2d	                            jg 0x4009b9d	      4702	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x9b30	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x9b33	          0x83e801	                              sub eax, 1	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x9b36	          0x4863d8	                         movsxd rbx, eax	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x9b39	      0xbf00000000	                              mov edi, 0	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x9b3e	      0xe800000000	                          call 0x4009b83	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x9b43	          0x4889c1	                            mov rcx, rax	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x9b46	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x9b4a	          0x4889da	                            mov rdx, rbx	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x9b4d	          0x4889ce	                            mov rsi, rcx	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x9b50	          0x4889c7	                            mov rdi, rax	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x9b53	      0xe800000000	                          call 0x4009b98	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x9b58	      0xe9a2000000	                           jmp 0x4009c3f	      4703	buffer.c	FUNCTION_66	ELSE_1	IF_4
0x9b5d	    0x48817de04042	        cmp qword [rbp - 0x20], 0xf4240 	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x9b65	            0x7e41	                           jle 0x4009be8	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x9b67	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4706	buffer.c	FUNCTION_66	ELSE_2
0x9b6b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4706	buffer.c	FUNCTION_66	ELSE_2
0x9b6f	        0x488d0c02	                    lea rcx, [rdx + rax]	      4706	buffer.c	FUNCTION_66	ELSE_2
0x9b73	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	      4706	buffer.c	FUNCTION_66	ELSE_2
0x9b7d	          0x4889c8	                            mov rax, rcx	      4706	buffer.c	FUNCTION_66	ELSE_2
0x9b80	          0x48f7ea	                                imul rdx	      4706	buffer.c	FUNCTION_66	ELSE_2
0x9b83	        0x488d040a	                    lea rax, [rdx + rcx]	      4706	buffer.c	FUNCTION_66	ELSE_2
0x9b87	        0x48c1f806	                              sar rax, 6	      4706	buffer.c	FUNCTION_66	ELSE_2
0x9b8b	          0x4889c2	                            mov rdx, rax	      4706	buffer.c	FUNCTION_66	ELSE_2
0x9b8e	          0x4889c8	                            mov rax, rcx	      4706	buffer.c	FUNCTION_66	ELSE_2
0x9b91	        0x48c1f83f	                           sar rax, 0x3f	      4706	buffer.c	FUNCTION_66	ELSE_2
0x9b95	          0x4889d3	                            mov rbx, rdx	      4706	buffer.c	FUNCTION_66	ELSE_2
0x9b98	          0x4829c3	                            sub rbx, rax	      4706	buffer.c	FUNCTION_66	ELSE_2
0x9b9b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4706	buffer.c	FUNCTION_66	ELSE_2
0x9b9f	            0x4899	                                     cqo	      4706	buffer.c	FUNCTION_66	ELSE_2
0x9ba1	          0x48f7fb	                                idiv rbx	      4706	buffer.c	FUNCTION_66	ELSE_2
0x9ba4	            0x89c2	                            mov edx, eax	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x9ba6	            0xeb36	                           jmp 0x4009c1e	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x9ba8	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4707	buffer.c	FUNCTION_66	ELSE_2
0x9bac	          0x4889d0	                            mov rax, rdx	      4707	buffer.c	FUNCTION_66	ELSE_2
0x9baf	        0x48c1e002	                              shl rax, 2	      4707	buffer.c	FUNCTION_66	ELSE_2
0x9bb3	          0x4801d0	                            add rax, rdx	      4707	buffer.c	FUNCTION_66	ELSE_2
0x9bb6	    0x488d14850000	                        lea rdx, [rax*4]	      4707	buffer.c	FUNCTION_66	ELSE_2
0x9bbe	          0x4801d0	                            add rax, rdx	      4707	buffer.c	FUNCTION_66	ELSE_2
0x9bc1	        0x48c1e002	                              shl rax, 2	      4707	buffer.c	FUNCTION_66	ELSE_2
0x9bc5	          0x4889c1	                            mov rcx, rax	      4707	buffer.c	FUNCTION_66	ELSE_2
0x9bc8	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4707	buffer.c	FUNCTION_66	ELSE_2
0x9bcc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4707	buffer.c	FUNCTION_66	ELSE_2
0x9bd0	        0x488d1c02	                    lea rbx, [rdx + rax]	      4707	buffer.c	FUNCTION_66	ELSE_2
0x9bd4	          0x4889c8	                            mov rax, rcx	      4707	buffer.c	FUNCTION_66	ELSE_2
0x9bd7	            0x4899	                                     cqo	      4707	buffer.c	FUNCTION_66	ELSE_2
0x9bd9	          0x48f7fb	                                idiv rbx	      4707	buffer.c	FUNCTION_66	ELSE_2
0x9bdc	            0x89c2	                            mov edx, eax	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x9bde	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x9be1	          0x4863f0	                         movsxd rsi, eax	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x9be4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x9be8	            0x89d1	                            mov ecx, edx	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x9bea	      0xba00000000	                              mov edx, 0	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x9bef	          0x4889c7	                            mov rdi, rax	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x9bf2	      0xb800000000	                              mov eax, 0	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x9bf7	      0xe800000000	                          call 0x4009c3c	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x9bfc	            0xeb01	                           jmp 0x4009c3f	      4705	buffer.c	FUNCTION_66	ELSE_2	CALL_7
0x9bfe	              0x90	                                     nop	      4689	buffer.c	FUNCTION_66	IF_1
0x9bff	        0x4883c438	                           add rsp, 0x38	      4708	buffer.c	FUNCTION_66
0x9c03	              0x5b	                                 pop rbx	      4708	buffer.c	FUNCTION_66
0x9c04	              0x5d	                                 pop rbp	      4708	buffer.c	FUNCTION_66
0x9c05	              0xc3	                                     ret	      4708	buffer.c	FUNCTION_66
find_win_for_buf	FOR,0:WHILE,0:ELSE,0:functions,0:IF,1:CALL,1:SWITCH,0:DO,0	51
0xb9fd	              0x55	                                push rbp	      5767	buffer.c	FUNCTION_87
0xb9fe	          0x4889e5	                            mov rbp, rsp	      5767	buffer.c	FUNCTION_87
0xba01	        0x48897df8	                mov qword [rbp - 8], rdi	      5767	buffer.c	FUNCTION_87
0xba05	        0x488975f0	             mov qword [rbp - 0x10], rsi	      5767	buffer.c	FUNCTION_87
0xba09	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5767	buffer.c	FUNCTION_87
0xba0d	    0x488b15000000	            mov rdx, qword [0x0400ba54] 	      5768	buffer.c	FUNCTION_87	CALL_1
0xba14	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5768	buffer.c	FUNCTION_87	CALL_1
0xba18	          0x488910	                    mov qword [rax], rdx	      5768	buffer.c	FUNCTION_87	CALL_1
0xba1b	            0xeb70	                           jmp 0x400bacd	      5768	buffer.c	FUNCTION_87	CALL_1
0xba1d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5768	buffer.c	FUNCTION_87	CALL_1
0xba21	          0x488b10	                    mov rdx, qword [rax]	      5768	buffer.c	FUNCTION_87	CALL_1
0xba24	    0x488b05000000	            mov rax, qword [0x0400ba6b] 	      5768	buffer.c	FUNCTION_87	CALL_1
0xba2b	          0x4839c2	                            cmp rdx, rax	      5768	buffer.c	FUNCTION_87	CALL_1
0xba2e	            0x740d	                            je 0x400ba7d	      5768	buffer.c	FUNCTION_87	CALL_1
0xba30	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5768	buffer.c	FUNCTION_87	CALL_1
0xba34	          0x488b00	                    mov rax, qword [rax]	      5768	buffer.c	FUNCTION_87	CALL_1
0xba37	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5768	buffer.c	FUNCTION_87	CALL_1
0xba3b	            0xeb07	                           jmp 0x400ba84	      5768	buffer.c	FUNCTION_87	CALL_1
0xba3d	    0x488b05000000	            mov rax, qword [0x0400ba84] 	      5768	buffer.c	FUNCTION_87	CALL_1
0xba44	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5768	buffer.c	FUNCTION_87	CALL_1
0xba48	          0x488902	                    mov qword [rdx], rax	      5768	buffer.c	FUNCTION_87	CALL_1
0xba4b	            0xeb23	                           jmp 0x400bab0	      5768	buffer.c	FUNCTION_87	CALL_1
0xba4d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5769	buffer.c	FUNCTION_87	IF_1
0xba51	          0x488b00	                    mov rax, qword [rax]	      5769	buffer.c	FUNCTION_87	IF_1
0xba54	        0x488b4008	                mov rax, qword [rax + 8]	      5769	buffer.c	FUNCTION_87	IF_1
0xba58	        0x483b45f8	                cmp rax, qword [rbp - 8]	      5769	buffer.c	FUNCTION_87	IF_1
0xba5c	            0x7442	                            je 0x400bae0	      5769	buffer.c	FUNCTION_87	IF_1
0xba5e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5768	buffer.c	FUNCTION_87	CALL_1
0xba62	          0x488b00	                    mov rax, qword [rax]	      5768	buffer.c	FUNCTION_87	CALL_1
0xba65	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      5768	buffer.c	FUNCTION_87	CALL_1
0xba69	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5768	buffer.c	FUNCTION_87	CALL_1
0xba6d	          0x488910	                    mov qword [rax], rdx	      5768	buffer.c	FUNCTION_87	CALL_1
0xba70	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5768	buffer.c	FUNCTION_87	CALL_1
0xba74	          0x488b00	                    mov rax, qword [rax]	      5768	buffer.c	FUNCTION_87	CALL_1
0xba77	          0x4885c0	                           test rax, rax	      5768	buffer.c	FUNCTION_87	CALL_1
0xba7a	            0x75d1	                           jne 0x400ba8d	      5768	buffer.c	FUNCTION_87	CALL_1
0xba7c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5768	buffer.c	FUNCTION_87	CALL_1
0xba80	          0x488b00	                    mov rax, qword [rax]	      5768	buffer.c	FUNCTION_87	CALL_1
0xba83	          0x488b10	                    mov rdx, qword [rax]	      5768	buffer.c	FUNCTION_87	CALL_1
0xba86	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5768	buffer.c	FUNCTION_87	CALL_1
0xba8a	          0x488910	                    mov qword [rax], rdx	      5768	buffer.c	FUNCTION_87	CALL_1
0xba8d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5768	buffer.c	FUNCTION_87	CALL_1
0xba91	          0x488b00	                    mov rax, qword [rax]	      5768	buffer.c	FUNCTION_87	CALL_1
0xba94	          0x4885c0	                           test rax, rax	      5768	buffer.c	FUNCTION_87	CALL_1
0xba97	            0x7584	                           jne 0x400ba5d	      5768	buffer.c	FUNCTION_87	CALL_1
0xba99	      0xb800000000	                              mov eax, 0	      5771	buffer.c	FUNCTION_87
0xba9e	            0xeb06	                           jmp 0x400bae6	      5771	buffer.c	FUNCTION_87
0xbaa0	              0x90	                                     nop	      5770	buffer.c	FUNCTION_87	IF_1
0xbaa1	      0xb801000000	                              mov eax, 1	      5773	buffer.c	FUNCTION_87
0xbaa6	              0x5d	                                 pop rbp	      5774	buffer.c	FUNCTION_87
0xbaa7	              0xc3	                                     ret	      5774	buffer.c	FUNCTION_87
read_viminfo_bufferlist	FOR,0:WHILE,0:ELSE,0:functions,0:IF,4:CALL,12:SWITCH,0:DO,0	96
0xb276	              0x55	                                push rbp	      5493	buffer.c	FUNCTION_75
0xb277	          0x4889e5	                            mov rbp, rsp	      5493	buffer.c	FUNCTION_75
0xb27a	        0x4883ec40	                           sub rsp, 0x40	      5493	buffer.c	FUNCTION_75
0xb27e	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      5493	buffer.c	FUNCTION_75
0xb282	          0x8975c4	             mov dword [rbp - 0x3c], esi	      5493	buffer.c	FUNCTION_75
0xb285	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5502	buffer.c	FUNCTION_75	CALL_1
0xb289	      0xba00000000	                              mov edx, 0	      5502	buffer.c	FUNCTION_75	CALL_1
0xb28e	      0xbe01000000	                              mov esi, 1	      5502	buffer.c	FUNCTION_75	CALL_1
0xb293	          0x4889c7	                            mov rdi, rax	      5502	buffer.c	FUNCTION_75	CALL_1
0xb296	      0xe800000000	                          call 0x400b2db	      5502	buffer.c	FUNCTION_75	CALL_1
0xb29b	        0x488945e0	             mov qword [rbp - 0x20], rax	      5502	buffer.c	FUNCTION_75	CALL_1
0xb29f	      0x48837de000	               cmp qword [rbp - 0x20], 0	      5505	buffer.c	FUNCTION_75	IF_1
0xb2a4	     0xf844b010000	                            je 0x400b435	      5505	buffer.c	FUNCTION_75	IF_1
0xb2aa	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      5505	buffer.c	FUNCTION_75	IF_1
0xb2ae	     0xf8541010000	                           jne 0x400b435	      5505	buffer.c	FUNCTION_75	IF_1
0xb2b4	    0x488b05000000	            mov rax, qword [0x0400b2fb] 	      5505	buffer.c	FUNCTION_75	IF_1
0xb2bb	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      5505	buffer.c	FUNCTION_75	IF_1
0xb2c2	            0x8b00	                    mov eax, dword [rax]	      5505	buffer.c	FUNCTION_75	IF_1
0xb2c4	            0x85c0	                           test eax, eax	      5505	buffer.c	FUNCTION_75	IF_1
0xb2c6	     0xf8529010000	                           jne 0x400b435	      5505	buffer.c	FUNCTION_75	IF_1
0xb2cc	      0xbf25000000	                           mov edi, 0x25	      5506	buffer.c	FUNCTION_75	IF_1	CALL_2
0xb2d1	      0xe800000000	                          call 0x400b316	      5506	buffer.c	FUNCTION_75	IF_1	CALL_2
0xb2d6	          0x4885c0	                           test rax, rax	      5506	buffer.c	FUNCTION_75	IF_1	CALL_2
0xb2d9	     0xf8416010000	                            je 0x400b435	      5506	buffer.c	FUNCTION_75	IF_1	CALL_2
0xb2df	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      5510	buffer.c	FUNCTION_75	IF_1
0xb2e7	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      5511	buffer.c	FUNCTION_75	IF_1
0xb2ee	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5512	buffer.c	FUNCTION_75	IF_1	CALL_3
0xb2f2	      0xbe09000000	                              mov esi, 9	      5512	buffer.c	FUNCTION_75	IF_1	CALL_3
0xb2f7	          0x4889c7	                            mov rdi, rax	      5512	buffer.c	FUNCTION_75	IF_1	CALL_3
0xb2fa	      0xe800000000	                          call 0x400b33f	      5512	buffer.c	FUNCTION_75	IF_1	CALL_3
0xb2ff	        0x488945e8	             mov qword [rbp - 0x18], rax	      5512	buffer.c	FUNCTION_75	IF_1	CALL_3
0xb303	      0x48837de800	               cmp qword [rbp - 0x18], 0	      5513	buffer.c	FUNCTION_75	IF_1	IF_2
0xb308	            0x7459	                            je 0x400b3a3	      5513	buffer.c	FUNCTION_75	IF_1	IF_2
0xb30a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5515	buffer.c	FUNCTION_75	IF_1	IF_2
0xb30e	        0x488d5001	                      lea rdx, [rax + 1]	      5515	buffer.c	FUNCTION_75	IF_1	IF_2
0xb312	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5515	buffer.c	FUNCTION_75	IF_1	IF_2
0xb316	          0xc60000	                       mov byte [rax], 0	      5515	buffer.c	FUNCTION_75	IF_1	IF_2
0xb319	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5516	buffer.c	FUNCTION_75	IF_1	IF_2	CALL_4
0xb31d	          0x4889c7	                            mov rdi, rax	      5516	buffer.c	FUNCTION_75	IF_1	IF_2	CALL_4
0xb320	      0xe800000000	                          call 0x400b365	      5516	buffer.c	FUNCTION_75	IF_1	IF_2	CALL_4
0xb325	          0x8945d4	             mov dword [rbp - 0x2c], eax	      5516	buffer.c	FUNCTION_75	IF_1	IF_2	CALL_4
0xb328	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5517	buffer.c	FUNCTION_75	IF_1	IF_2	CALL_5
0xb32c	      0xbe09000000	                              mov esi, 9	      5517	buffer.c	FUNCTION_75	IF_1	IF_2	CALL_5
0xb331	          0x4889c7	                            mov rdi, rax	      5517	buffer.c	FUNCTION_75	IF_1	IF_2	CALL_5
0xb334	      0xe800000000	                          call 0x400b379	      5517	buffer.c	FUNCTION_75	IF_1	IF_2	CALL_5
0xb339	        0x488945e8	             mov qword [rbp - 0x18], rax	      5517	buffer.c	FUNCTION_75	IF_1	IF_2	CALL_5
0xb33d	      0x48837de800	               cmp qword [rbp - 0x18], 0	      5518	buffer.c	FUNCTION_75	IF_1	IF_2	IF_3
0xb342	            0x741f	                            je 0x400b3a3	      5518	buffer.c	FUNCTION_75	IF_1	IF_2	IF_3
0xb344	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5520	buffer.c	FUNCTION_75	IF_1	IF_2	IF_3
0xb348	        0x488d5001	                      lea rdx, [rax + 1]	      5520	buffer.c	FUNCTION_75	IF_1	IF_2	IF_3
0xb34c	        0x488955e8	             mov qword [rbp - 0x18], rdx	      5520	buffer.c	FUNCTION_75	IF_1	IF_2	IF_3
0xb350	          0xc60000	                       mov byte [rax], 0	      5520	buffer.c	FUNCTION_75	IF_1	IF_2	IF_3
0xb353	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5521	buffer.c	FUNCTION_75	IF_1	IF_2	IF_3	CALL_6
0xb357	          0x4889c7	                            mov rdi, rax	      5521	buffer.c	FUNCTION_75	IF_1	IF_2	IF_3	CALL_6
0xb35a	      0xe800000000	                          call 0x400b39f	      5521	buffer.c	FUNCTION_75	IF_1	IF_2	IF_3	CALL_6
0xb35f	        0x488945d8	             mov qword [rbp - 0x28], rax	      5521	buffer.c	FUNCTION_75	IF_1	IF_2	IF_3	CALL_6
0xb363	    0x488b0d000000	            mov rcx, qword [0x0400b3aa] 	      5527	buffer.c	FUNCTION_75	IF_1	CALL_7
0xb36a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5527	buffer.c	FUNCTION_75	IF_1	CALL_7
0xb36e	      0xba00100000	                         mov edx, 0x1000	      5527	buffer.c	FUNCTION_75	IF_1	CALL_7
0xb373	          0x4889ce	                            mov rsi, rcx	      5527	buffer.c	FUNCTION_75	IF_1	CALL_7
0xb376	          0x4889c7	                            mov rdi, rax	      5527	buffer.c	FUNCTION_75	IF_1	CALL_7
0xb379	      0xe800000000	                          call 0x400b3be	      5527	buffer.c	FUNCTION_75	IF_1	CALL_7
0xb37e	    0x488b05000000	            mov rax, qword [0x0400b3c5] 	      5528	buffer.c	FUNCTION_75	IF_1	CALL_8
0xb385	          0x4889c7	                            mov rdi, rax	      5528	buffer.c	FUNCTION_75	IF_1	CALL_8
0xb388	      0xe800000000	                          call 0x400b3cd	      5528	buffer.c	FUNCTION_75	IF_1	CALL_8
0xb38d	        0x488945f0	             mov qword [rbp - 0x10], rax	      5528	buffer.c	FUNCTION_75	IF_1	CALL_8
0xb391	    0x488b05000000	            mov rax, qword [0x0400b3d8] 	      5530	buffer.c	FUNCTION_75	IF_1	CALL_9
0xb398	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      5530	buffer.c	FUNCTION_75	IF_1	CALL_9
0xb39c	      0xb902000000	                              mov ecx, 2	      5530	buffer.c	FUNCTION_75	IF_1	CALL_9
0xb3a1	      0xba00000000	                              mov edx, 0	      5530	buffer.c	FUNCTION_75	IF_1	CALL_9
0xb3a6	          0x4889c7	                            mov rdi, rax	      5530	buffer.c	FUNCTION_75	IF_1	CALL_9
0xb3a9	      0xe800000000	                          call 0x400b3ee	      5530	buffer.c	FUNCTION_75	IF_1	CALL_9
0xb3ae	        0x488945f8	                mov qword [rbp - 8], rax	      5530	buffer.c	FUNCTION_75	IF_1	CALL_9
0xb3b2	      0x48837df800	                  cmp qword [rbp - 8], 0	      5531	buffer.c	FUNCTION_75	IF_1	IF_4
0xb3b7	            0x743c	                            je 0x400b435	      5531	buffer.c	FUNCTION_75	IF_1	IF_4
0xb3b9	        0x488b45f8	                mov rax, qword [rbp - 8]	      5533	buffer.c	FUNCTION_75	IF_1	IF_4
0xb3bd	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5533	buffer.c	FUNCTION_75	IF_1	IF_4
0xb3c1	    0x488990280300	            mov qword [rax + 0x328], rdx	      5533	buffer.c	FUNCTION_75	IF_1	IF_4
0xb3c8	        0x488b45f8	                mov rax, qword [rbp - 8]	      5534	buffer.c	FUNCTION_75	IF_1	IF_4
0xb3cc	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      5534	buffer.c	FUNCTION_75	IF_1	IF_4
0xb3cf	    0x899030030000	            mov dword [rax + 0x330], edx	      5534	buffer.c	FUNCTION_75	IF_1	IF_4
0xb3d5	    0x488b35000000	            mov rsi, qword [0x0400b41c] 	      5535	buffer.c	FUNCTION_75	IF_1	IF_4	CALL_10
0xb3dc	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      5535	buffer.c	FUNCTION_75	IF_1	IF_4	CALL_10
0xb3df	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5535	buffer.c	FUNCTION_75	IF_1	IF_4	CALL_10
0xb3e3	        0x488b45f8	                mov rax, qword [rbp - 8]	      5535	buffer.c	FUNCTION_75	IF_1	IF_4	CALL_10
0xb3e7	    0x41b800000000	                              mov r8d, 0	      5535	buffer.c	FUNCTION_75	IF_1	IF_4	CALL_10
0xb3ed	          0x4889c7	                            mov rdi, rax	      5535	buffer.c	FUNCTION_75	IF_1	IF_4	CALL_10
0xb3f0	      0xe80a95ffff	                call sym.buflist_setfpos	      5535	buffer.c	FUNCTION_75	IF_1	IF_4	CALL_10
0xb3f5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5538	buffer.c	FUNCTION_75	CALL_11
0xb3f9	          0x4889c7	                            mov rdi, rax	      5538	buffer.c	FUNCTION_75	CALL_11
0xb3fc	      0xe800000000	                          call 0x400b441	      5538	buffer.c	FUNCTION_75	CALL_11
0xb401	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5540	buffer.c	FUNCTION_75	CALL_12
0xb405	          0x4889c7	                            mov rdi, rax	      5540	buffer.c	FUNCTION_75	CALL_12
0xb408	      0xe800000000	                          call 0x400b44d	      5540	buffer.c	FUNCTION_75	CALL_12
0xb40d	              0xc9	                                   leave	      5541	buffer.c	FUNCTION_75
0xb40e	              0xc3	                                     ret	      5541	buffer.c	FUNCTION_75
do_modelines	FOR,2:WHILE,0:ELSE,0:functions,0:IF,4:CALL,2:SWITCH,0:DO,0	73
0xad15	              0x55	                                push rbp	      5335	buffer.c	FUNCTION_73
0xad16	          0x4889e5	                            mov rbp, rsp	      5335	buffer.c	FUNCTION_73
0xad19	        0x4883ec20	                           sub rsp, 0x20	      5335	buffer.c	FUNCTION_73
0xad1d	          0x897dec	             mov dword [rbp - 0x14], edi	      5335	buffer.c	FUNCTION_73
0xad20	    0x488b05000000	            mov rax, qword [0x0400ad67] 	      5340	buffer.c	FUNCTION_73	IF_1
0xad27	    0x8b8038150000	          mov eax, dword [rax + 0x1538] 	      5340	buffer.c	FUNCTION_73	IF_1
0xad2d	            0x85c0	                           test eax, eax	      5340	buffer.c	FUNCTION_73	IF_1
0xad2f	     0xf84e6000000	                            je 0x400ae5b	      5340	buffer.c	FUNCTION_73	IF_1
0xad35	    0x488b05000000	            mov rax, qword [0x0400ad7c] 	      5340	buffer.c	FUNCTION_73	IF_1
0xad3c	          0x8945f4	              mov dword [rbp - 0xc], eax	      5340	buffer.c	FUNCTION_73	IF_1
0xad3f	        0x837df400	                cmp dword [rbp - 0xc], 0	      5340	buffer.c	FUNCTION_73	IF_1
0xad43	     0xf84d2000000	                            je 0x400ae5b	      5340	buffer.c	FUNCTION_73	IF_1
0xad49	    0x8b0500000000	            mov eax, dword [0x0400ad8f] 	      5345	buffer.c	FUNCTION_73	IF_2
0xad4f	            0x85c0	                           test eax, eax	      5345	buffer.c	FUNCTION_73	IF_2
0xad51	     0xf85c7000000	                           jne 0x400ae5e	      5345	buffer.c	FUNCTION_73	IF_2
0xad57	    0x8b0500000000	            mov eax, dword [0x0400ad9d] 	      5348	buffer.c	FUNCTION_73
0xad5d	          0x83c001	                              add eax, 1	      5348	buffer.c	FUNCTION_73
0xad60	    0x890500000000	            mov dword [0x0400ada6], eax 	      5348	buffer.c	FUNCTION_73
0xad66	    0x48c745f80100	                  mov qword [rbp - 8], 1	      5349	buffer.c	FUNCTION_73	FOR_1
0xad6e	            0xeb21	                           jmp 0x400add1	      5349	buffer.c	FUNCTION_73	FOR_1
0xad70	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0xad73	        0x488b45f8	                mov rax, qword [rbp - 8]	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0xad77	            0x89d6	                            mov esi, edx	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0xad79	          0x4889c7	                            mov rdi, rax	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0xad7c	      0xe8a0000000	                   call sym.chk_modeline	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0xad81	            0x85c0	                           test eax, eax	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0xad83	            0x7507	                           jne 0x400adcc	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0xad85	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      5352	buffer.c	FUNCTION_73	FOR_1	IF_3
0xad8c	      0x488345f801	                  add qword [rbp - 8], 1	      5350	buffer.c	FUNCTION_73	FOR_1
0xad91	    0x488b05000000	            mov rax, qword [0x0400add8] 	      5349	buffer.c	FUNCTION_73	FOR_1
0xad98	          0x488b00	                    mov rax, qword [rax]	      5349	buffer.c	FUNCTION_73	FOR_1
0xad9b	        0x483b45f8	                cmp rax, qword [rbp - 8]	      5349	buffer.c	FUNCTION_73	FOR_1
0xad9f	            0x7c0b	                            jl 0x400adec	      5349	buffer.c	FUNCTION_73	FOR_1
0xada1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5349	buffer.c	FUNCTION_73	FOR_1
0xada4	            0x4898	                                    cdqe	      5349	buffer.c	FUNCTION_73	FOR_1
0xada6	        0x483b45f8	                cmp rax, qword [rbp - 8]	      5349	buffer.c	FUNCTION_73	FOR_1
0xadaa	            0x7dc4	                           jge 0x400adb0	      5349	buffer.c	FUNCTION_73	FOR_1
0xadac	    0x488b05000000	            mov rax, qword [0x0400adf3] 	      5354	buffer.c	FUNCTION_73	FOR_2
0xadb3	          0x488b00	                    mov rax, qword [rax]	      5354	buffer.c	FUNCTION_73	FOR_2
0xadb6	        0x488945f8	                mov qword [rbp - 8], rax	      5354	buffer.c	FUNCTION_73	FOR_2
0xadba	            0xeb21	                           jmp 0x400ae1d	      5354	buffer.c	FUNCTION_73	FOR_2
0xadbc	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0xadbf	        0x488b45f8	                mov rax, qword [rbp - 8]	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0xadc3	            0x89d6	                            mov esi, edx	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0xadc5	          0x4889c7	                            mov rdi, rax	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0xadc8	      0xe854000000	                   call sym.chk_modeline	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0xadcd	            0x85c0	                           test eax, eax	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0xadcf	            0x7507	                           jne 0x400ae18	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0xadd1	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      5357	buffer.c	FUNCTION_73	FOR_2	IF_4
0xadd8	      0x48836df801	                  sub qword [rbp - 8], 1	      5355	buffer.c	FUNCTION_73	FOR_2
0xaddd	      0x48837df800	                  cmp qword [rbp - 8], 0	      5354	buffer.c	FUNCTION_73	FOR_2
0xade2	            0x7e26	                           jle 0x400ae4a	      5354	buffer.c	FUNCTION_73	FOR_2
0xade4	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5354	buffer.c	FUNCTION_73	FOR_2
0xade7	            0x4898	                                    cdqe	      5354	buffer.c	FUNCTION_73	FOR_2
0xade9	        0x483b45f8	                cmp rax, qword [rbp - 8]	      5354	buffer.c	FUNCTION_73	FOR_2
0xaded	            0x7d1b	                           jge 0x400ae4a	      5354	buffer.c	FUNCTION_73	FOR_2
0xadef	    0x488b05000000	            mov rax, qword [0x0400ae36] 	      5355	buffer.c	FUNCTION_73	FOR_2
0xadf6	          0x488b10	                    mov rdx, qword [rax]	      5355	buffer.c	FUNCTION_73	FOR_2
0xadf9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5355	buffer.c	FUNCTION_73	FOR_2
0xadfc	            0x4898	                                    cdqe	      5355	buffer.c	FUNCTION_73	FOR_2
0xadfe	          0x4829c2	                            sub rdx, rax	      5355	buffer.c	FUNCTION_73	FOR_2
0xae01	          0x4889d0	                            mov rax, rdx	      5355	buffer.c	FUNCTION_73	FOR_2
0xae04	        0x483b45f8	                cmp rax, qword [rbp - 8]	      5355	buffer.c	FUNCTION_73	FOR_2
0xae08	            0x7cb2	                            jl 0x400adfc	      5355	buffer.c	FUNCTION_73	FOR_2
0xae0a	    0x8b0500000000	            mov eax, dword [0x0400ae50] 	      5358	buffer.c	FUNCTION_73
0xae10	          0x83e801	                              sub eax, 1	      5358	buffer.c	FUNCTION_73
0xae13	    0x890500000000	            mov dword [0x0400ae59], eax 	      5358	buffer.c	FUNCTION_73
0xae19	            0xeb04	                           jmp 0x400ae5f	      5358	buffer.c	FUNCTION_73
0xae1b	              0x90	                                     nop	      5341	buffer.c	FUNCTION_73	IF_1
0xae1c	            0xeb01	                           jmp 0x400ae5f	      5341	buffer.c	FUNCTION_73	IF_1
0xae1e	              0x90	                                     nop	      5346	buffer.c	FUNCTION_73	IF_2
0xae1f	              0xc9	                                   leave	      5359	buffer.c	FUNCTION_73
0xae20	              0xc3	                                     ret	      5359	buffer.c	FUNCTION_73
buf_hide	FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,0:SWITCH,1:DO,0	34
0xb77d	              0x55	                                push rbp	      5659	buffer.c	FUNCTION_83
0xb77e	          0x4889e5	                            mov rbp, rsp	      5659	buffer.c	FUNCTION_83
0xb781	        0x48897df8	                mov qword [rbp - 8], rdi	      5659	buffer.c	FUNCTION_83
0xb785	        0x488b45f8	                mov rax, qword [rbp - 8]	      5661	buffer.c	FUNCTION_83	SWITCH_1
0xb789	    0x488b80101400	          mov rax, qword [rax + 0x1410] 	      5661	buffer.c	FUNCTION_83	SWITCH_1
0xb790	           0xfb600	                   movzx eax, byte [rax]	      5661	buffer.c	FUNCTION_83	SWITCH_1
0xb793	           0xfb6c0	                           movzx eax, al	      5661	buffer.c	FUNCTION_83	SWITCH_1
0xb796	          0x83f868	                           cmp eax, 0x68	      5661	buffer.c	FUNCTION_83	SWITCH_1
0xb799	            0x741d	                            je 0x400b7f8	      5661	buffer.c	FUNCTION_83	SWITCH_1
0xb79b	          0x83f868	                           cmp eax, 0x68	      5661	buffer.c	FUNCTION_83	SWITCH_1
0xb79e	            0x7f07	                            jg 0x400b7e7	      5661	buffer.c	FUNCTION_83	SWITCH_1
0xb7a0	          0x83f864	                           cmp eax, 0x64	      5661	buffer.c	FUNCTION_83	SWITCH_1
0xb7a3	            0x740c	                            je 0x400b7f1	      5661	buffer.c	FUNCTION_83	SWITCH_1
0xb7a5	            0xeb18	                           jmp 0x400b7ff	      5661	buffer.c	FUNCTION_83	SWITCH_1
0xb7a7	          0x83f875	                           cmp eax, 0x75	      5661	buffer.c	FUNCTION_83	SWITCH_1
0xb7aa	            0x7405	                            je 0x400b7f1	      5661	buffer.c	FUNCTION_83	SWITCH_1
0xb7ac	          0x83f877	                           cmp eax, 0x77	      5661	buffer.c	FUNCTION_83	SWITCH_1
0xb7af	            0x750e	                           jne 0x400b7ff	      5661	buffer.c	FUNCTION_83	SWITCH_1
0xb7b1	      0xb800000000	                              mov eax, 0	      5665	buffer.c	FUNCTION_83	SWITCH_1
0xb7b6	            0xeb28	                           jmp 0x400b820	      5665	buffer.c	FUNCTION_83	SWITCH_1
0xb7b8	      0xb801000000	                              mov eax, 1	      5666	buffer.c	FUNCTION_83	SWITCH_1
0xb7bd	            0xeb21	                           jmp 0x400b820	      5666	buffer.c	FUNCTION_83	SWITCH_1
0xb7bf	    0x8b0500000000	            mov eax, dword [0x0400b805] 	      5668	buffer.c	FUNCTION_83
0xb7c5	            0x85c0	                           test eax, eax	      5668	buffer.c	FUNCTION_83
0xb7c7	            0x750a	                           jne 0x400b813	      5668	buffer.c	FUNCTION_83
0xb7c9	    0x8b0500000000	            mov eax, dword [0x0400b80f] 	      5668	buffer.c	FUNCTION_83
0xb7cf	            0x85c0	                           test eax, eax	      5668	buffer.c	FUNCTION_83
0xb7d1	            0x7407	                            je 0x400b81a	      5668	buffer.c	FUNCTION_83
0xb7d3	      0xb801000000	                              mov eax, 1	      5668	buffer.c	FUNCTION_83
0xb7d8	            0xeb05	                           jmp 0x400b81f	      5668	buffer.c	FUNCTION_83
0xb7da	      0xb800000000	                              mov eax, 0	      5668	buffer.c	FUNCTION_83
0xb7df	              0x90	                                     nop	      5668	buffer.c	FUNCTION_83
0xb7e0	              0x5d	                                 pop rbp	      5669	buffer.c	FUNCTION_83
0xb7e1	              0xc3	                                     ret	      5669	buffer.c	FUNCTION_83
set_curbuf	FOR,0:WHILE,0:ELSE,0:functions,0:IF,10:CALL,22:SWITCH,0:DO,0	167
0x26b8	              0x55	                                push rbp	      1619	buffer.c	FUNCTION_20
0x26b9	          0x4889e5	                            mov rbp, rsp	      1619	buffer.c	FUNCTION_20
0x26bc	        0x4883ec60	                           sub rsp, 0x60	      1619	buffer.c	FUNCTION_20
0x26c0	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1619	buffer.c	FUNCTION_20
0x26c4	          0x8975a4	             mov dword [rbp - 0x5c], esi	      1619	buffer.c	FUNCTION_20
0x26c7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1619	buffer.c	FUNCTION_20
0x26d0	        0x488945f8	                mov qword [rbp - 8], rax	      1619	buffer.c	FUNCTION_20
0x26d4	            0x31c0	                            xor eax, eax	      1619	buffer.c	FUNCTION_20
0x26d6	        0x837da402	               cmp dword [rbp - 0x5c], 2	      1622	buffer.c	FUNCTION_20
0x26da	            0x740c	                            je 0x4002728	      1622	buffer.c	FUNCTION_20
0x26dc	        0x837da403	               cmp dword [rbp - 0x5c], 3	      1621	buffer.c	FUNCTION_20
0x26e0	            0x7406	                            je 0x4002728	      1621	buffer.c	FUNCTION_20
0x26e2	        0x837da404	               cmp dword [rbp - 0x5c], 4	      1622	buffer.c	FUNCTION_20
0x26e6	            0x7507	                           jne 0x400272f	      1622	buffer.c	FUNCTION_20
0x26e8	      0xb801000000	                              mov eax, 1	      1622	buffer.c	FUNCTION_20
0x26ed	            0xeb05	                           jmp 0x4002734	      1622	buffer.c	FUNCTION_20
0x26ef	      0xb800000000	                              mov eax, 0	      1622	buffer.c	FUNCTION_20
0x26f4	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1621	buffer.c	FUNCTION_20
0x26f7	    0x488b05000000	            mov rax, qword [0x0400273e] 	      1624	buffer.c	FUNCTION_20
0x26fe	    0x488b80b81500	          mov rax, qword [rax + 0x15b8] 	      1624	buffer.c	FUNCTION_20
0x2705	        0x488945b8	             mov qword [rbp - 0x48], rax	      1624	buffer.c	FUNCTION_20
0x2709	      0xe800000000	                          call 0x400274e	      1629	buffer.c	FUNCTION_20	CALL_1
0x270e	    0x8b0500000000	            mov eax, dword [0x04002754] 	      1630	buffer.c	FUNCTION_20	IF_1
0x2714	            0x85c0	                           test eax, eax	      1630	buffer.c	FUNCTION_20	IF_1
0x2716	            0x751a	                           jne 0x4002772	      1630	buffer.c	FUNCTION_20	IF_1
0x2718	    0x488b05000000	            mov rax, qword [0x0400275f] 	      1631	buffer.c	FUNCTION_20	IF_1
0x271f	    0x488b15000000	            mov rdx, qword [0x04002766] 	      1631	buffer.c	FUNCTION_20	IF_1
0x2726	    0x8b92b8000000	            mov edx, dword [rdx + 0xb8] 	      1631	buffer.c	FUNCTION_20	IF_1
0x272c	    0x899078010000	            mov dword [rax + 0x178], edx	      1631	buffer.c	FUNCTION_20	IF_1
0x2732	    0x488b05000000	            mov rax, qword [0x04002779] 	      1632	buffer.c	FUNCTION_20	CALL_2
0x2739	          0x4889c7	                            mov rdi, rax	      1632	buffer.c	FUNCTION_20	CALL_2
0x273c	      0xe800000000	                          call 0x4002781	      1632	buffer.c	FUNCTION_20	CALL_2
0x2741	    0xc70500000000	               mov dword [0x0400278b], 0	      1635	buffer.c	FUNCTION_20
0x274b	    0x488b05000000	            mov rax, qword [0x04002792] 	      1639	buffer.c	FUNCTION_20
0x2752	        0x488945c0	             mov qword [rbp - 0x40], rax	      1639	buffer.c	FUNCTION_20
0x2756	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1640	buffer.c	FUNCTION_20	CALL_3
0x275a	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1640	buffer.c	FUNCTION_20	CALL_3
0x275e	          0x4889d6	                            mov rsi, rdx	      1640	buffer.c	FUNCTION_20	CALL_3
0x2761	          0x4889c7	                            mov rdi, rax	      1640	buffer.c	FUNCTION_20	CALL_3
0x2764	      0xe800000000	                          call 0x40027a9	      1640	buffer.c	FUNCTION_20	CALL_3
0x2769	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1641	buffer.c	FUNCTION_20	CALL_4
0x276d	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1641	buffer.c	FUNCTION_20	CALL_4
0x2771	          0x4889d6	                            mov rsi, rdx	      1641	buffer.c	FUNCTION_20	CALL_4
0x2774	          0x4889c7	                            mov rdi, rax	      1641	buffer.c	FUNCTION_20	CALL_4
0x2777	      0xe800000000	                          call 0x40027bc	      1641	buffer.c	FUNCTION_20	CALL_4
0x277c	    0x488b05000000	            mov rax, qword [0x040027c3] 	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x2783	          0x4989c0	                             mov r8, rax	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x2786	      0xb900000000	                              mov ecx, 0	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x278b	      0xba00000000	                              mov edx, 0	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x2790	      0xbe00000000	                              mov esi, 0	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x2795	      0xbf06000000	                              mov edi, 6	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x279a	      0xe800000000	                          call 0x40027df	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x279f	            0x85c0	                           test eax, eax	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x27a1	            0x7435	                            je 0x4002818	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x27a3	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1646	buffer.c	FUNCTION_20	IF_2	CALL_6
0x27a7	          0x4889c7	                            mov rdi, rax	      1646	buffer.c	FUNCTION_20	IF_2	CALL_6
0x27aa	      0xe800000000	                          call 0x40027ef	      1646	buffer.c	FUNCTION_20	IF_2	CALL_6
0x27af	            0x85c0	                           test eax, eax	      1646	buffer.c	FUNCTION_20	IF_2	CALL_6
0x27b1	     0xf842f010000	                            je 0x4002926	      1646	buffer.c	FUNCTION_20	IF_2	CALL_6
0x27b7	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1647	buffer.c	FUNCTION_20	IF_2	CALL_7
0x27bb	          0x4889c7	                            mov rdi, rax	      1647	buffer.c	FUNCTION_20	IF_2	CALL_7
0x27be	      0xe800000000	                          call 0x4002803	      1647	buffer.c	FUNCTION_20	IF_2	CALL_7
0x27c3	            0x85c0	                           test eax, eax	      1647	buffer.c	FUNCTION_20	IF_2	CALL_7
0x27c5	     0xf841b010000	                            je 0x4002926	      1647	buffer.c	FUNCTION_20	IF_2	CALL_7
0x27cb	      0xe800000000	                          call 0x4002810	      1649	buffer.c	FUNCTION_20	IF_2	CALL_8
0x27d0	            0x85c0	                           test eax, eax	      1649	buffer.c	FUNCTION_20	IF_2	CALL_8
0x27d2	     0xf850e010000	                           jne 0x4002926	      1649	buffer.c	FUNCTION_20	IF_2	CALL_8
0x27d8	    0x488b05000000	            mov rax, qword [0x0400281f] 	      1654	buffer.c	FUNCTION_20	IF_2	IF_3
0x27df	        0x488b4008	                mov rax, qword [rax + 8]	      1654	buffer.c	FUNCTION_20	IF_2	IF_3
0x27e3	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1654	buffer.c	FUNCTION_20	IF_2	IF_3
0x27e7	            0x750f	                           jne 0x4002838	      1654	buffer.c	FUNCTION_20	IF_2	IF_3
0x27e9	    0x488b05000000	            mov rax, qword [0x04002830] 	      1655	buffer.c	FUNCTION_20	IF_2	CALL_9
0x27f0	          0x4889c7	                            mov rdi, rax	      1655	buffer.c	FUNCTION_20	IF_2	CALL_9
0x27f3	      0xe800000000	                          call 0x4002838	      1655	buffer.c	FUNCTION_20	IF_2	CALL_9
0x27f8	        0x837db400	               cmp dword [rbp - 0x4c], 0	      1657	buffer.c	FUNCTION_20	IF_2	IF_4
0x27fc	            0x7411	                            je 0x400284f	      1657	buffer.c	FUNCTION_20	IF_2	IF_4
0x27fe	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1658	buffer.c	FUNCTION_20	IF_2	CALL_10
0x2802	      0xbe00000000	                              mov esi, 0	      1658	buffer.c	FUNCTION_20	IF_2	CALL_10
0x2807	          0x4889c7	                            mov rdi, rax	      1658	buffer.c	FUNCTION_20	IF_2	CALL_10
0x280a	      0xe800000000	                          call 0x400284f	      1658	buffer.c	FUNCTION_20	IF_2	CALL_10
0x280f	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x2813	          0x4889c7	                            mov rdi, rax	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x2816	      0xe800000000	                          call 0x400285b	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x281b	            0x85c0	                           test eax, eax	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x281d	     0xf84c3000000	                            je 0x4002926	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x2823	      0xe800000000	                          call 0x4002868	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x2828	            0x85c0	                           test eax, eax	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x282a	     0xf85b6000000	                           jne 0x4002926	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x2830	    0x488b05000000	            mov rax, qword [0x04002877] 	      1665	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6
0x2837	        0x488945c8	             mov qword [rbp - 0x38], rax	      1665	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6
0x283b	    0x488b05000000	            mov rax, qword [0x04002882] 	      1666	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_7
0x2842	        0x483945c0	            cmp qword [rbp - 0x40], rax 	      1666	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_7
0x2846	            0x750a	                           jne 0x4002892	      1666	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_7
0x2848	      0xbf00000000	                              mov edi, 0	      1667	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_14
0x284d	      0xe800000000	                          call 0x4002892	      1667	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_14
0x2852	        0x837db400	               cmp dword [rbp - 0x4c], 0	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x2856	            0x7534	                           jne 0x40028cc	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x2858	        0x837da400	               cmp dword [rbp - 0x5c], 0	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x285c	            0x7527	                           jne 0x40028c5	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x285e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1670	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_16
0x2862	          0x4889c7	                            mov rdi, rax	      1670	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_16
0x2865	      0xe800000000	                          call 0x40028aa	      1670	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_16
0x286a	            0x85c0	                           test eax, eax	      1670	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_16
0x286c	            0x7517	                           jne 0x40028c5	      1670	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_16
0x286e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x2872	          0x4889c7	                            mov rdi, rax	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x2875	      0xe800000000	                          call 0x40028ba	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x287a	            0x85c0	                           test eax, eax	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x287c	            0x7507	                           jne 0x40028c5	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x287e	      0xb802000000	                              mov eax, 2	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x2883	            0xeb0a	                           jmp 0x40028cf	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x2885	      0xb800000000	                              mov eax, 0	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x288a	            0xeb03	                           jmp 0x40028cf	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x288c	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x288f	    0x488b15000000	            mov rdx, qword [0x040028d6] 	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x2896	        0x488b5208	                mov rdx, qword [rdx + 8]	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x289a	        0x483b55c0	             cmp rdx, qword [rbp - 0x40]	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x289e	            0x7509	                           jne 0x40028e9	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x28a0	    0x488b3d000000	            mov rdi, qword [0x040028e7] 	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x28a7	            0xeb05	                           jmp 0x40028ee	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x28a9	      0xbf00000000	                              mov edi, 0	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x28ae	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x28b2	      0xb900000000	                              mov ecx, 0	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x28b7	            0x89c2	                            mov edx, eax	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x28b9	      0xe800000000	                          call 0x40028fe	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x28be	    0x488b05000000	            mov rax, qword [0x04002905] 	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x28c5	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x28c9	            0x741b	                            je 0x4002926	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x28cb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x28cf	          0x4889c7	                            mov rdi, rax	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x28d2	      0xe800000000	                          call 0x4002917	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x28d7	            0x85c0	                           test eax, eax	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x28d9	            0x740b	                            je 0x4002926	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x28db	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1674	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8
0x28df	    0x488905000000	            mov qword [0x04002926], rax 	      1674	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8
0x28e6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x28ea	          0x4889c7	                            mov rdi, rax	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x28ed	      0xe800000000	                          call 0x4002932	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x28f2	            0x85c0	                           test eax, eax	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x28f4	            0x7416	                            je 0x400294c	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x28f6	    0x488b05000000	            mov rax, qword [0x0400293d] 	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x28fd	        0x483945a8	            cmp qword [rbp - 0x58], rax 	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x2901	            0x7409	                            je 0x400294c	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x2903	      0xe800000000	                          call 0x4002948	      1682	buffer.c	FUNCTION_20	IF_9	CALL_20
0x2908	            0x85c0	                           test eax, eax	      1682	buffer.c	FUNCTION_20	IF_9	CALL_20
0x290a	            0x7410	                            je 0x400295c	      1682	buffer.c	FUNCTION_20	IF_9	CALL_20
0x290c	    0x488b05000000	            mov rax, qword [0x04002953] 	      1684	buffer.c	FUNCTION_20	IF_9
0x2913	        0x488b4008	                mov rax, qword [rax + 8]	      1684	buffer.c	FUNCTION_20	IF_9
0x2917	          0x4885c0	                           test rax, rax	      1684	buffer.c	FUNCTION_20	IF_9
0x291a	            0x752f	                           jne 0x400298b	      1684	buffer.c	FUNCTION_20	IF_9
0x291c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1686	buffer.c	FUNCTION_20	IF_9	CALL_21
0x2920	          0x4889c7	                            mov rdi, rax	      1686	buffer.c	FUNCTION_20	IF_9	CALL_21
0x2923	      0xe800000000	                          call 0x4002968	      1686	buffer.c	FUNCTION_20	IF_9	CALL_21
0x2928	    0x488b05000000	            mov rax, qword [0x0400296f] 	      1688	buffer.c	FUNCTION_20	IF_9	IF_10
0x292f	    0x488b80b81500	          mov rax, qword [rax + 0x15b8] 	      1688	buffer.c	FUNCTION_20	IF_9	IF_10
0x2936	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      1688	buffer.c	FUNCTION_20	IF_9	IF_10
0x293a	            0x740f	                            je 0x400298b	      1688	buffer.c	FUNCTION_20	IF_9	IF_10
0x293c	    0x488b05000000	            mov rax, qword [0x04002983] 	      1689	buffer.c	FUNCTION_20	IF_9	CALL_22
0x2943	          0x4889c7	                            mov rdi, rax	      1689	buffer.c	FUNCTION_20	IF_9	CALL_22
0x2946	      0xe800000000	                          call 0x400298b	      1689	buffer.c	FUNCTION_20	IF_9	CALL_22
0x294b	              0x90	                                     nop	      1692	buffer.c	FUNCTION_20
0x294c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1692	buffer.c	FUNCTION_20
0x2950	    0x644833042528	                xor rax, qword fs:[0x28]	      1692	buffer.c	FUNCTION_20
0x2959	            0x7405	                            je 0x40029a0	      1692	buffer.c	FUNCTION_20
0x295b	      0xe800000000	                          call 0x40029a0	      1692	buffer.c	FUNCTION_20
0x2960	              0xc9	                                   leave	      1692	buffer.c	FUNCTION_20
0x2961	              0xc3	                                     ret	      1692	buffer.c	FUNCTION_20
setaltfname	FOR,0:WHILE,0:ELSE,0:functions,0:IF,1:CALL,1:SWITCH,0:DO,0	25
0x5852	              0x55	                                push rbp	      3224	buffer.c	FUNCTION_50
0x5853	          0x4889e5	                            mov rbp, rsp	      3224	buffer.c	FUNCTION_50
0x5856	        0x4883ec30	                           sub rsp, 0x30	      3224	buffer.c	FUNCTION_50
0x585a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3224	buffer.c	FUNCTION_50
0x585e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3224	buffer.c	FUNCTION_50
0x5862	        0x488955d8	             mov qword [rbp - 0x28], rdx	      3224	buffer.c	FUNCTION_50
0x5866	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      3228	buffer.c	FUNCTION_50	CALL_1
0x586a	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      3228	buffer.c	FUNCTION_50	CALL_1
0x586e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3228	buffer.c	FUNCTION_50	CALL_1
0x5872	      0xb900000000	                              mov ecx, 0	      3228	buffer.c	FUNCTION_50	CALL_1
0x5877	          0x4889c7	                            mov rdi, rax	      3228	buffer.c	FUNCTION_50	CALL_1
0x587a	      0xe800000000	                          call 0x40058bf	      3228	buffer.c	FUNCTION_50	CALL_1
0x587f	        0x488945f8	                mov qword [rbp - 8], rax	      3228	buffer.c	FUNCTION_50	CALL_1
0x5883	      0x48837df800	                  cmp qword [rbp - 8], 0	      3229	buffer.c	FUNCTION_50	IF_1
0x5888	            0x7421	                            je 0x40058eb	      3229	buffer.c	FUNCTION_50	IF_1
0x588a	    0x8b0500000000	            mov eax, dword [0x040058d0] 	      3229	buffer.c	FUNCTION_50	IF_1
0x5890	            0x85c0	                           test eax, eax	      3229	buffer.c	FUNCTION_50	IF_1
0x5892	            0x7517	                           jne 0x40058eb	      3229	buffer.c	FUNCTION_50	IF_1
0x5894	    0x488b05000000	            mov rax, qword [0x040058db] 	      3230	buffer.c	FUNCTION_50	IF_1
0x589b	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3230	buffer.c	FUNCTION_50	IF_1
0x589f	    0x8b92b8000000	            mov edx, dword [rdx + 0xb8] 	      3230	buffer.c	FUNCTION_50	IF_1
0x58a5	    0x899078010000	            mov dword [rax + 0x178], edx	      3230	buffer.c	FUNCTION_50	IF_1
0x58ab	        0x488b45f8	                mov rax, qword [rbp - 8]	      3231	buffer.c	FUNCTION_50
0x58af	              0xc9	                                   leave	      3232	buffer.c	FUNCTION_50
0x58b0	              0xc3	                                     ret	      3232	buffer.c	FUNCTION_50
chk_modeline	FOR,2:WHILE,1:ELSE,1:functions,0:IF,14:CALL,16:SWITCH,0:DO,1	297
0xae21	              0x55	                                push rbp	      5371	buffer.c	FUNCTION_74
0xae22	          0x4889e5	                            mov rbp, rsp	      5371	buffer.c	FUNCTION_74
0xae25	        0x4883ec60	                           sub rsp, 0x60	      5371	buffer.c	FUNCTION_74
0xae29	        0x48897da8	             mov qword [rbp - 0x58], rdi	      5371	buffer.c	FUNCTION_74
0xae2d	          0x8975a4	             mov dword [rbp - 0x5c], esi	      5371	buffer.c	FUNCTION_74
0xae30	    0x64488b042528	                mov rax, qword fs:[0x28]	      5371	buffer.c	FUNCTION_74
0xae39	        0x488945f8	                mov qword [rbp - 8], rax	      5371	buffer.c	FUNCTION_74
0xae3d	            0x31c0	                            xor eax, eax	      5371	buffer.c	FUNCTION_74
0xae3f	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	      5378	buffer.c	FUNCTION_74
0xae46	    0xc745bcffffff	     mov dword [rbp - 0x44], 0xffffffff 	      5385	buffer.c	FUNCTION_74
0xae4d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0xae51	          0x4889c7	                            mov rdi, rax	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0xae54	      0xe800000000	                          call 0x400ae99	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0xae59	        0x488945d8	             mov qword [rbp - 0x28], rax	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0xae5d	      0xe9d5010000	                           jmp 0x400b077	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0xae62	        0x837dbcff	cmp dword [rbp - 0x44], 0xffffffffffffffff	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0xae66	            0x7412	                            je 0x400aeba	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0xae68	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0xae6b	            0x89c7	                            mov edi, eax	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0xae6d	      0xe800000000	                          call 0x400aeb2	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0xae72	            0x85c0	                           test eax, eax	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0xae74	     0xf84ab010000	                            je 0x400b065	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0xae7a	        0x837dbcff	cmp dword [rbp - 0x44], 0xffffffffffffffff	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0xae7e	            0x741e	                            je 0x400aede	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0xae80	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0xae84	      0xba03000000	                              mov edx, 3	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0xae89	      0xbe00000000	                              mov esi, 0	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0xae8e	          0x4889c7	                            mov rdi, rax	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0xae91	      0xe800000000	                          call 0x400aed6	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0xae96	            0x85c0	                           test eax, eax	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0xae98	     0xf84a8010000	                            je 0x400b086	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0xae9e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0xaea2	      0xba03000000	                              mov edx, 3	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0xaea7	      0xbe00000000	                              mov esi, 0	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0xaeac	          0x4889c7	                            mov rdi, rax	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0xaeaf	      0xe800000000	                          call 0x400aef4	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0xaeb4	            0x85c0	                           test eax, eax	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0xaeb6	     0xf848a010000	                            je 0x400b086	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0xaebc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0xaec0	           0xfb600	                   movzx eax, byte [rax]	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0xaec3	            0x3c76	                            cmp al, 0x76	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0xaec5	            0x740f	                            je 0x400af16	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0xaec7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0xaecb	           0xfb600	                   movzx eax, byte [rax]	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0xaece	            0x3c56	                            cmp al, 0x56	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0xaed0	     0xf854f010000	                           jne 0x400b065	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0xaed6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0xaeda	        0x4883c001	                              add rax, 1	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0xaede	           0xfb600	                   movzx eax, byte [rax]	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0xaee1	            0x3c69	                            cmp al, 0x69	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0xaee3	     0xf853c010000	                           jne 0x400b065	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0xaee9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0xaeed	        0x4883c002	                              add rax, 2	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0xaef1	           0xfb600	                   movzx eax, byte [rax]	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0xaef4	            0x3c6d	                            cmp al, 0x6d	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0xaef6	     0xf8529010000	                           jne 0x400b065	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0xaefc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0xaf00	        0x4883c003	                              add rax, 3	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0xaf04	           0xfb600	                   movzx eax, byte [rax]	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0xaf07	            0x3c3c	                            cmp al, 0x3c	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0xaf09	            0x741e	                            je 0x400af69	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0xaf0b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0xaf0f	        0x4883c003	                              add rax, 3	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0xaf13	           0xfb600	                   movzx eax, byte [rax]	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0xaf16	            0x3c3d	                            cmp al, 0x3d	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0xaf18	            0x740f	                            je 0x400af69	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0xaf1a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0xaf1e	        0x4883c003	                              add rax, 3	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0xaf22	           0xfb600	                   movzx eax, byte [rax]	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0xaf25	            0x3c3e	                            cmp al, 0x3e	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0xaf27	            0x750e	                           jne 0x400af77	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0xaf29	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5397	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0xaf2d	        0x4883c004	                              add rax, 4	      5397	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0xaf31	        0x488945d0	             mov qword [rbp - 0x30], rax	      5397	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0xaf35	            0xeb0c	                           jmp 0x400af83	      5397	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0xaf37	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5399	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	ELSE_1
0xaf3b	        0x4883c003	                              add rax, 3	      5399	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	ELSE_1
0xaf3f	        0x488945d0	             mov qword [rbp - 0x30], rax	      5399	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	ELSE_1
0xaf43	        0x488d45d0	                   lea rax, [rbp - 0x30]	      5400	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	CALL_5
0xaf47	          0x4889c7	                            mov rdi, rax	      5400	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	CALL_5
0xaf4a	      0xe800000000	                          call 0x400af8f	      5400	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	CALL_5
0xaf4f	          0x8945c8	             mov dword [rbp - 0x38], eax	      5400	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	CALL_5
0xaf52	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5401	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xaf56	           0xfb600	                   movzx eax, byte [rax]	      5401	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xaf59	            0x3c3a	                            cmp al, 0x3a	      5401	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xaf5b	     0xf85c4000000	                           jne 0x400b065	      5401	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xaf61	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5402	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xaf65	           0xfb600	                   movzx eax, byte [rax]	      5402	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xaf68	            0x3c56	                            cmp al, 0x56	      5402	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xaf6a	            0x752a	                           jne 0x400afd6	      5402	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xaf6c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0xaf70	        0x4883c001	                              add rax, 1	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0xaf74	          0x4889c7	                            mov rdi, rax	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0xaf77	      0xe800000000	                          call 0x400afbc	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0xaf7c	      0xba03000000	                              mov edx, 3	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0xaf81	      0xbe00000000	                              mov esi, 0	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0xaf86	          0x4889c7	                            mov rdi, rax	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0xaf89	      0xe800000000	                          call 0x400afce	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0xaf8e	            0x85c0	                           test eax, eax	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0xaf90	     0xf858f000000	                           jne 0x400b065	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0xaf96	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5404	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xaf9a	        0x4883c003	                              add rax, 3	      5404	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xaf9e	           0xfb600	                   movzx eax, byte [rax]	      5404	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xafa1	            0x3c3a	                            cmp al, 0x3a	      5404	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xafa3	     0xf849d000000	                            je 0x400b086	      5404	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xafa9	    0x817dc8200300	          cmp dword [rbp - 0x38], 0x320 	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0xafb0	            0x7f2b	                            jg 0x400b01d	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0xafb2	      0xe800000000	                          call 0x400aff7	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0xafb7	          0x488b00	                    mov rax, qword [rax]	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0xafba	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0xafbe	        0x4883c203	                              add rdx, 3	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0xafc2	           0xfb612	                   movzx edx, byte [rdx]	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0xafc5	           0xfb6d2	                           movzx edx, dl	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0xafc8	          0x4801d2	                            add rdx, rdx	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0xafcb	          0x4801d0	                            add rax, rdx	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0xafce	           0xfb700	                   movzx eax, word [rax]	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0xafd1	           0xfb7c0	                           movzx eax, ax	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0xafd4	      0x2500080000	                          and eax, 0x800	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0xafd9	            0x85c0	                           test eax, eax	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0xafdb	            0x7569	                           jne 0x400b086	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0xafdd	    0x817dc8200300	          cmp dword [rbp - 0x38], 0x320 	      5406	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xafe4	            0x7e0f	                           jle 0x400b035	      5406	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xafe6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5406	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xafea	        0x4883c003	                              add rax, 3	      5406	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xafee	           0xfb600	                   movzx eax, byte [rax]	      5406	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xaff1	            0x3c3c	                            cmp al, 0x3c	      5406	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xaff3	            0x7451	                            je 0x400b086	      5406	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xaff5	    0x817dc81f0300	          cmp dword [rbp - 0x38], 0x31f 	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xaffc	            0x7f0f	                            jg 0x400b04d	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xaffe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xb002	        0x4883c003	                              add rax, 3	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xb006	           0xfb600	                   movzx eax, byte [rax]	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xb009	            0x3c3e	                            cmp al, 0x3e	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xb00b	            0x7439	                            je 0x400b086	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xb00d	    0x817dc8200300	          cmp dword [rbp - 0x38], 0x320 	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xb014	            0x750f	                           jne 0x400b065	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xb016	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xb01a	        0x4883c003	                              add rax, 3	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xb01e	           0xfb600	                   movzx eax, byte [rax]	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xb021	            0x3c3d	                            cmp al, 0x3d	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xb023	            0x7421	                            je 0x400b086	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0xb025	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5412	buffer.c	FUNCTION_74	FOR_1
0xb029	           0xfb600	                   movzx eax, byte [rax]	      5412	buffer.c	FUNCTION_74	FOR_1
0xb02c	           0xfb6c0	                           movzx eax, al	      5412	buffer.c	FUNCTION_74	FOR_1
0xb02f	          0x8945bc	             mov dword [rbp - 0x44], eax	      5412	buffer.c	FUNCTION_74	FOR_1
0xb032	      0x488345d801	               add qword [rbp - 0x28], 1	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0xb037	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0xb03b	           0xfb600	                   movzx eax, byte [rax]	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0xb03e	            0x84c0	                             test al, al	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0xb040	     0xf851cfeffff	                           jne 0x400aea2	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0xb046	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5415	buffer.c	FUNCTION_74	IF_6
0xb04a	           0xfb600	                   movzx eax, byte [rax]	      5415	buffer.c	FUNCTION_74	IF_6
0xb04d	            0x84c0	                             test al, al	      5415	buffer.c	FUNCTION_74	IF_6
0xb04f	     0xf8408020000	                            je 0x400b29d	      5415	buffer.c	FUNCTION_74	IF_6
0xb055	      0x488345d801	               add qword [rbp - 0x28], 1	      5418	buffer.c	FUNCTION_74	IF_6	DO_1
0xb05a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5419	buffer.c	FUNCTION_74	IF_6
0xb05e	        0x4883e801	                              sub rax, 1	      5419	buffer.c	FUNCTION_74	IF_6
0xb062	           0xfb600	                   movzx eax, byte [rax]	      5419	buffer.c	FUNCTION_74	IF_6
0xb065	            0x3c3a	                            cmp al, 0x3a	      5419	buffer.c	FUNCTION_74	IF_6
0xb067	            0x75ec	                           jne 0x400b095	      5419	buffer.c	FUNCTION_74	IF_6
0xb069	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5421	buffer.c	FUNCTION_74	IF_6	CALL_9
0xb06d	          0x4889c7	                            mov rdi, rax	      5421	buffer.c	FUNCTION_74	IF_6	CALL_9
0xb070	      0xe800000000	                          call 0x400b0b5	      5421	buffer.c	FUNCTION_74	IF_6	CALL_9
0xb075	        0x488945e0	             mov qword [rbp - 0x20], rax	      5421	buffer.c	FUNCTION_74	IF_6	CALL_9
0xb079	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5421	buffer.c	FUNCTION_74	IF_6	CALL_9
0xb07d	        0x488945d8	             mov qword [rbp - 0x28], rax	      5421	buffer.c	FUNCTION_74	IF_6	CALL_9
0xb081	      0x48837de000	               cmp qword [rbp - 0x20], 0	      5422	buffer.c	FUNCTION_74	IF_6	IF_7
0xb086	            0x750a	                           jne 0x400b0d2	      5422	buffer.c	FUNCTION_74	IF_6	IF_7
0xb088	      0xb800000000	                              mov eax, 0	      5423	buffer.c	FUNCTION_74	IF_6	IF_7
0xb08d	      0xe9ce010000	                           jmp 0x400b2a0	      5423	buffer.c	FUNCTION_74	IF_6	IF_7
0xb092	    0x488b05000000	            mov rax, qword [0x0400b0d9] 	      5425	buffer.c	FUNCTION_74	IF_6
0xb099	        0x488945e8	             mov qword [rbp - 0x18], rax	      5425	buffer.c	FUNCTION_74	IF_6
0xb09d	    0x488b05000000	            mov rax, qword [0x0400b0e4] 	      5426	buffer.c	FUNCTION_74	IF_6
0xb0a4	        0x488945f0	             mov qword [rbp - 0x10], rax	      5426	buffer.c	FUNCTION_74	IF_6
0xb0a8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5427	buffer.c	FUNCTION_74	IF_6
0xb0ac	    0x488905000000	            mov qword [0x0400b0f3], rax 	      5427	buffer.c	FUNCTION_74	IF_6
0xb0b3	    0x48c705000000	               mov qword [0x0400b0fe], 0	      5428	buffer.c	FUNCTION_74	IF_6
0xb0be	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      5430	buffer.c	FUNCTION_74	IF_6
0xb0c5	      0xe95e010000	                           jmp 0x400b268	      5431	buffer.c	FUNCTION_74	IF_6	WHILE_1
0xb0ca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5433	buffer.c	FUNCTION_74	IF_6	WHILE_1	CALL_10
0xb0ce	          0x4889c7	                            mov rdi, rax	      5433	buffer.c	FUNCTION_74	IF_6	WHILE_1	CALL_10
0xb0d1	      0xe800000000	                          call 0x400b116	      5433	buffer.c	FUNCTION_74	IF_6	WHILE_1	CALL_10
0xb0d6	        0x488945d8	             mov qword [rbp - 0x28], rax	      5433	buffer.c	FUNCTION_74	IF_6	WHILE_1	CALL_10
0xb0da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5434	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_8
0xb0de	           0xfb600	                   movzx eax, byte [rax]	      5434	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_8
0xb0e1	            0x84c0	                             test al, al	      5434	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_8
0xb0e3	     0xf844b010000	                            je 0x400b274	      5434	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_8
0xb0e9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0xb0ed	        0x488945d0	             mov qword [rbp - 0x30], rax	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0xb0f1	            0xeb51	                           jmp 0x400b184	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0xb0f3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0xb0f7	           0xfb600	                   movzx eax, byte [rax]	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0xb0fa	            0x3c5c	                            cmp al, 0x5c	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0xb0fc	            0x753a	                           jne 0x400b178	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0xb0fe	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0xb102	        0x4883c001	                              add rax, 1	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0xb106	           0xfb600	                   movzx eax, byte [rax]	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0xb109	            0x3c3a	                            cmp al, 0x3a	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0xb10b	            0x752b	                           jne 0x400b178	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0xb10d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0xb111	        0x4883c001	                              add rax, 1	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0xb115	          0x4889c7	                            mov rdi, rax	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0xb118	      0xe800000000	                          call 0x400b15d	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0xb11d	        0x488d5001	                      lea rdx, [rax + 1]	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0xb121	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0xb125	        0x488d4801	                      lea rcx, [rax + 1]	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0xb129	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0xb12d	          0x4889ce	                            mov rsi, rcx	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0xb130	          0x4889c7	                            mov rdi, rax	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0xb133	      0xe800000000	                          call 0x400b178	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0xb138	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0xb13c	        0x4883c001	                              add rax, 1	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0xb140	        0x488945d0	             mov qword [rbp - 0x30], rax	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0xb144	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0xb148	           0xfb600	                   movzx eax, byte [rax]	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0xb14b	            0x3c3a	                            cmp al, 0x3a	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0xb14d	            0x740b	                            je 0x400b19a	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0xb14f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0xb153	           0xfb600	                   movzx eax, byte [rax]	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0xb156	            0x84c0	                             test al, al	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0xb158	            0x7599	                           jne 0x400b133	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0xb15a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5444	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_10
0xb15e	           0xfb600	                   movzx eax, byte [rax]	      5444	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_10
0xb161	            0x84c0	                             test al, al	      5444	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_10
0xb163	            0x7507	                           jne 0x400b1ac	      5444	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_10
0xb165	    0xc745c0010000	               mov dword [rbp - 0x40], 1	      5445	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_10
0xb16c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0xb170	      0xba04000000	                              mov edx, 4	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0xb175	      0xbe00000000	                              mov esi, 0	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0xb17a	          0x4889c7	                            mov rdi, rax	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0xb17d	      0xe800000000	                          call 0x400b1c2	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0xb182	            0x85c0	                           test eax, eax	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0xb184	            0x741a	                            je 0x400b1e0	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0xb186	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0xb18a	      0xba03000000	                              mov edx, 3	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0xb18f	      0xbe00000000	                              mov esi, 0	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0xb194	          0x4889c7	                            mov rdi, rax	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0xb197	      0xe800000000	                          call 0x400b1dc	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0xb19c	            0x85c0	                           test eax, eax	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0xb19e	            0x752f	                           jne 0x400b20f	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0xb1a0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5457	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	IF_12
0xb1a4	           0xfb600	                   movzx eax, byte [rax]	      5457	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	IF_12
0xb1a7	            0x3c3a	                            cmp al, 0x3a	      5457	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	IF_12
0xb1a9	     0xf8588000000	                           jne 0x400b277	      5457	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	IF_12
0xb1af	    0xc745c0010000	               mov dword [rbp - 0x40], 1	      5459	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11
0xb1b6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0xb1ba	      0xbe20000000	                           mov esi, 0x20	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0xb1bf	          0x4889c7	                            mov rdi, rax	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0xb1c2	      0xe800000000	                          call 0x400b207	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0xb1c7	        0x4883c001	                              add rax, 1	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0xb1cb	        0x488945d8	             mov qword [rbp - 0x28], rax	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0xb1cf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5462	buffer.c	FUNCTION_74	IF_6	WHILE_1
0xb1d3	          0xc60000	                       mov byte [rax], 0	      5462	buffer.c	FUNCTION_74	IF_6	WHILE_1
0xb1d6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5464	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0xb1da	           0xfb600	                   movzx eax, byte [rax]	      5464	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0xb1dd	            0x84c0	                             test al, al	      5464	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0xb1df	            0x743b	                            je 0x400b25c	      5464	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0xb1e1	    0x8b0500000000	            mov eax, dword [0x0400b227] 	      5467	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0xb1e7	          0x8945cc	             mov dword [rbp - 0x34], eax	      5467	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0xb1ea	    0xc70500000000	     mov dword [0x0400b234], 0xffffffff 	      5468	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0xb1f4	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0xb1f7	          0x83c80c	                             or eax, 0xc	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0xb1fa	            0x89c2	                            mov edx, eax	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0xb1fc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0xb200	            0x89d6	                            mov esi, edx	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0xb202	          0x4889c7	                            mov rdi, rax	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0xb205	      0xe800000000	                          call 0x400b24a	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0xb20a	          0x8945c4	             mov dword [rbp - 0x3c], eax	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0xb20d	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5472	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0xb210	    0x890500000000	            mov dword [0x0400b256], eax 	      5472	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0xb216	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      5474	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	IF_14
0xb21a	            0x741e	                            je 0x400b27a	      5474	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	IF_14
0xb21c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5477	buffer.c	FUNCTION_74	IF_6	WHILE_1
0xb220	        0x4883c001	                              add rax, 1	      5477	buffer.c	FUNCTION_74	IF_6	WHILE_1
0xb224	        0x488945d8	             mov qword [rbp - 0x28], rax	      5477	buffer.c	FUNCTION_74	IF_6	WHILE_1
0xb228	        0x837dc000	               cmp dword [rbp - 0x40], 0	      5431	buffer.c	FUNCTION_74	IF_6	WHILE_1
0xb22c	     0xf8498feffff	                            je 0x400b10a	      5431	buffer.c	FUNCTION_74	IF_6	WHILE_1
0xb232	            0xeb07	                           jmp 0x400b27b	      5431	buffer.c	FUNCTION_74	IF_6	WHILE_1
0xb234	              0x90	                                     nop	      5435	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_8
0xb235	            0xeb04	                           jmp 0x400b27b	      5435	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_8
0xb237	              0x90	                                     nop	      5458	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	IF_12
0xb238	            0xeb01	                           jmp 0x400b27b	      5458	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	IF_12
0xb23a	              0x90	                                     nop	      5475	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	IF_14
0xb23b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5480	buffer.c	FUNCTION_74	IF_6
0xb23f	    0x488905000000	            mov qword [0x0400b286], rax 	      5480	buffer.c	FUNCTION_74	IF_6
0xb246	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5481	buffer.c	FUNCTION_74	IF_6
0xb24a	    0x488905000000	            mov qword [0x0400b291], rax 	      5481	buffer.c	FUNCTION_74	IF_6
0xb251	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5483	buffer.c	FUNCTION_74	IF_6	CALL_16
0xb255	          0x4889c7	                            mov rdi, rax	      5483	buffer.c	FUNCTION_74	IF_6	CALL_16
0xb258	      0xe800000000	                          call 0x400b29d	      5483	buffer.c	FUNCTION_74	IF_6	CALL_16
0xb25d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      5485	buffer.c	FUNCTION_74
0xb260	        0x488b4df8	                mov rcx, qword [rbp - 8]	      5486	buffer.c	FUNCTION_74
0xb264	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5486	buffer.c	FUNCTION_74
0xb26d	            0x7405	                            je 0x400b2b4	      5486	buffer.c	FUNCTION_74
0xb26f	      0xe800000000	                          call 0x400b2b4	      5486	buffer.c	FUNCTION_74
0xb274	              0xc9	                                   leave	      5486	buffer.c	FUNCTION_74
0xb275	              0xc3	                                     ret	      5486	buffer.c	FUNCTION_74
sign_list_placed	FOR,1:WHILE,1:ELSE,1:functions,0:IF,3:CALL,13:SWITCH,0:DO,0	106
0xc0f4	              0x55	                                push rbp	      6088	buffer.c	FUNCTION_99
0xc0f5	          0x4889e5	                            mov rbp, rsp	      6088	buffer.c	FUNCTION_99
0xc0f8	            0x4155	                                push r13	      6088	buffer.c	FUNCTION_99
0xc0fa	            0x4154	                                push r12	      6088	buffer.c	FUNCTION_99
0xc0fc	              0x53	                                push rbx	      6088	buffer.c	FUNCTION_99
0xc0fd	    0x4881ec382000	                         sub rsp, 0x2038	      6088	buffer.c	FUNCTION_99
0xc104	    0x4889bdb8dfff	           mov qword [rbp - 0x2048], rdi	      6088	buffer.c	FUNCTION_99
0xc10b	    0x64488b042528	                mov rax, qword fs:[0x28]	      6088	buffer.c	FUNCTION_99
0xc114	        0x488945d8	             mov qword [rbp - 0x28], rax	      6088	buffer.c	FUNCTION_99
0xc118	            0x31c0	                            xor eax, eax	      6088	buffer.c	FUNCTION_99
0xc11a	      0xbf00000000	                              mov edi, 0	      6093	buffer.c	FUNCTION_99	CALL_2
0xc11f	      0xe800000000	                          call 0x400c164	      6093	buffer.c	FUNCTION_99	CALL_2
0xc124	          0x4889c7	                            mov rdi, rax	      6093	buffer.c	FUNCTION_99	CALL_2
0xc127	      0xe800000000	                          call 0x400c16c	      6093	buffer.c	FUNCTION_99	CALL_2
0xc12c	      0xbf0a000000	                            mov edi, 0xa	      6094	buffer.c	FUNCTION_99	CALL_3
0xc131	      0xe800000000	                          call 0x400c176	      6094	buffer.c	FUNCTION_99	CALL_3
0xc136	    0x4883bdb8dfff	             cmp qword [rbp - 0x2048], 0	      6095	buffer.c	FUNCTION_99	IF_1
0xc13e	            0x7513	                           jne 0x400c193	      6095	buffer.c	FUNCTION_99	IF_1
0xc140	    0x488b05000000	            mov rax, qword [0x0400c187] 	      6096	buffer.c	FUNCTION_99	IF_1
0xc147	    0x488985c0dfff	           mov qword [rbp - 0x2040], rax	      6096	buffer.c	FUNCTION_99	IF_1
0xc14e	      0xe94f010000	                           jmp 0x400c2e2	      6096	buffer.c	FUNCTION_99	IF_1
0xc153	    0x488b85b8dfff	           mov rax, qword [rbp - 0x2048]	      6098	buffer.c	FUNCTION_99	ELSE_1
0xc15a	    0x488985c0dfff	           mov qword [rbp - 0x2040], rax	      6098	buffer.c	FUNCTION_99	ELSE_1
0xc161	      0xe93c010000	                           jmp 0x400c2e2	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0xc166	    0x488b85c0dfff	           mov rax, qword [rbp - 0x2040]	      6101	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2
0xc16d	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      6101	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2
0xc174	          0x4885c0	                           test rax, rax	      6101	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2
0xc177	            0x7458	                            je 0x400c211	      6101	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2
0xc179	    0x488b85c0dfff	           mov rax, qword [rbp - 0x2040]	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0xc180	    0x488b98980000	            mov rbx, qword [rax + 0x98] 	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0xc187	      0xbf00000000	                              mov edi, 0	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0xc18c	      0xe800000000	                          call 0x400c1d1	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0xc191	          0x4889c2	                            mov rdx, rax	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0xc194	    0x488d85d0dfff	                 lea rax, [rbp - 0x2030]	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0xc19b	          0x4889d9	                            mov rcx, rbx	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0xc19e	      0xbe00200000	                         mov esi, 0x2000	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0xc1a3	          0x4889c7	                            mov rdi, rax	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0xc1a6	      0xb800000000	                              mov eax, 0	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0xc1ab	      0xe800000000	                          call 0x400c1f0	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0xc1b0	    0x8b1500000000	            mov edx, dword [0x0400c1f6] 	      6104	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_7
0xc1b6	    0x488d85d0dfff	                 lea rax, [rbp - 0x2030]	      6104	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_7
0xc1bd	            0x89d6	                            mov esi, edx	      6104	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_7
0xc1bf	          0x4889c7	                            mov rdi, rax	      6104	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_7
0xc1c2	      0xe800000000	                          call 0x400c207	      6104	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_7
0xc1c7	      0xbf0a000000	                            mov edi, 0xa	      6105	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_8
0xc1cc	      0xe800000000	                          call 0x400c211	      6105	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_8
0xc1d1	    0x488b85c0dfff	           mov rax, qword [rbp - 0x2040]	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0xc1d8	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0xc1df	    0x488985c8dfff	           mov qword [rbp - 0x2038], rax	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0xc1e6	      0xe983000000	                           jmp 0x400c2ae	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0xc1eb	    0x488b85c8dfff	           mov rax, qword [rbp - 0x2038]	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0xc1f2	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0xc1f5	            0x89c7	                            mov edi, eax	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0xc1f7	      0xe800000000	                          call 0x400c23c	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0xc1fc	          0x4989c5	                            mov r13, rax	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0xc1ff	    0x488b85c8dfff	           mov rax, qword [rbp - 0x2038]	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0xc206	          0x448b20	                   mov r12d, dword [rax]	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0xc209	    0x488b85c8dfff	           mov rax, qword [rbp - 0x2038]	      6110	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_11
0xc210	        0x488b5808	                mov rbx, qword [rax + 8]	      6110	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_11
0xc214	      0xbf00000000	                              mov edi, 0	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0xc219	      0xe800000000	                          call 0x400c25e	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0xc21e	          0x4889c2	                            mov rdx, rax	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0xc221	    0x488d85d0dfff	                 lea rax, [rbp - 0x2030]	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0xc228	          0x4d89e9	                             mov r9, r13	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0xc22b	          0x4589e0	                           mov r8d, r12d	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0xc22e	          0x4889d9	                            mov rcx, rbx	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0xc231	      0xbe00200000	                         mov esi, 0x2000	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0xc236	          0x4889c7	                            mov rdi, rax	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0xc239	      0xb800000000	                              mov eax, 0	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0xc23e	      0xe800000000	                          call 0x400c283	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0xc243	    0x488d85d0dfff	                 lea rax, [rbp - 0x2030]	      6111	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_12
0xc24a	          0x4889c7	                            mov rdi, rax	      6111	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_12
0xc24d	      0xe800000000	                          call 0x400c292	      6111	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_12
0xc252	      0xbf0a000000	                            mov edi, 0xa	      6112	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_13
0xc257	      0xe800000000	                          call 0x400c29c	      6112	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_13
0xc25c	    0x488b85c8dfff	           mov rax, qword [rbp - 0x2038]	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0xc263	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0xc267	    0x488985c8dfff	           mov qword [rbp - 0x2038], rax	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0xc26e	    0x4883bdc8dfff	             cmp qword [rbp - 0x2038], 0	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0xc276	            0x740e	                            je 0x400c2c6	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0xc278	    0x8b0500000000	            mov eax, dword [0x0400c2be] 	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0xc27e	            0x85c0	                           test eax, eax	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0xc280	     0xf8465ffffff	                            je 0x400c22b	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0xc286	    0x4883bdb8dfff	             cmp qword [rbp - 0x2048], 0	      6114	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_3
0xc28e	            0x752c	                           jne 0x400c2fc	      6114	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_3
0xc290	    0x488b85c0dfff	           mov rax, qword [rbp - 0x2040]	      6116	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0xc297	        0x488b4068	            mov rax, qword [rax + 0x68] 	      6116	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0xc29b	    0x488985c0dfff	           mov qword [rbp - 0x2040], rax	      6116	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0xc2a2	    0x4883bdc0dfff	             cmp qword [rbp - 0x2040], 0	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0xc2aa	            0x7411	                            je 0x400c2fd	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0xc2ac	    0x8b0500000000	            mov eax, dword [0x0400c2f2] 	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0xc2b2	            0x85c0	                           test eax, eax	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0xc2b4	     0xf84acfeffff	                            je 0x400c1a6	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0xc2ba	            0xeb01	                           jmp 0x400c2fd	      6118	buffer.c	FUNCTION_99
0xc2bc	              0x90	                                     nop	      6115	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_3
0xc2bd	              0x90	                                     nop	      6118	buffer.c	FUNCTION_99
0xc2be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6118	buffer.c	FUNCTION_99
0xc2c2	    0x644833042528	                xor rax, qword fs:[0x28]	      6118	buffer.c	FUNCTION_99
0xc2cb	            0x7405	                            je 0x400c312	      6118	buffer.c	FUNCTION_99
0xc2cd	      0xe800000000	                          call 0x400c312	      6118	buffer.c	FUNCTION_99
0xc2d2	    0x4881c4382000	                         add rsp, 0x2038	      6118	buffer.c	FUNCTION_99
0xc2d9	              0x5b	                                 pop rbx	      6118	buffer.c	FUNCTION_99
0xc2da	            0x415c	                                 pop r12	      6118	buffer.c	FUNCTION_99
0xc2dc	            0x415d	                                 pop r13	      6118	buffer.c	FUNCTION_99
0xc2de	              0x5d	                                 pop rbp	      6118	buffer.c	FUNCTION_99
0xc2df	              0xc3	                                     ret	      6118	buffer.c	FUNCTION_99
alist_name	FOR,0:WHILE,0:ELSE,0:functions,0:IF,1:CALL,1:SWITCH,0:DO,0	22
0x9d9d	              0x55	                                push rbp	      4827	buffer.c	FUNCTION_70
0x9d9e	          0x4889e5	                            mov rbp, rsp	      4827	buffer.c	FUNCTION_70
0x9da1	        0x4883ec20	                           sub rsp, 0x20	      4827	buffer.c	FUNCTION_70
0x9da5	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4827	buffer.c	FUNCTION_70
0x9da9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4831	buffer.c	FUNCTION_70	CALL_1
0x9dad	          0x8b4008	                mov eax, dword [rax + 8]	      4831	buffer.c	FUNCTION_70	CALL_1
0x9db0	            0x89c7	                            mov edi, eax	      4831	buffer.c	FUNCTION_70	CALL_1
0x9db2	      0xe800000000	                          call 0x4009df7	      4831	buffer.c	FUNCTION_70	CALL_1
0x9db7	        0x488945f8	                mov qword [rbp - 8], rax	      4831	buffer.c	FUNCTION_70	CALL_1
0x9dbb	      0x48837df800	                  cmp qword [rbp - 8], 0	      4832	buffer.c	FUNCTION_70	IF_1
0x9dc0	            0x7410	                            je 0x4009e12	      4832	buffer.c	FUNCTION_70	IF_1
0x9dc2	        0x488b45f8	                mov rax, qword [rbp - 8]	      4832	buffer.c	FUNCTION_70	IF_1
0x9dc6	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      4832	buffer.c	FUNCTION_70	IF_1
0x9dcd	          0x4885c0	                           test rax, rax	      4832	buffer.c	FUNCTION_70	IF_1
0x9dd0	            0x7509	                           jne 0x4009e1b	      4832	buffer.c	FUNCTION_70	IF_1
0x9dd2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4833	buffer.c	FUNCTION_70	IF_1
0x9dd6	          0x488b00	                    mov rax, qword [rax]	      4833	buffer.c	FUNCTION_70	IF_1
0x9dd9	            0xeb0b	                           jmp 0x4009e26	      4833	buffer.c	FUNCTION_70	IF_1
0x9ddb	        0x488b45f8	                mov rax, qword [rbp - 8]	      4834	buffer.c	FUNCTION_70
0x9ddf	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      4834	buffer.c	FUNCTION_70
0x9de6	              0xc9	                                   leave	      4835	buffer.c	FUNCTION_70
0x9de7	              0xc3	                                     ret	      4835	buffer.c	FUNCTION_70
getaltfname	FOR,0:WHILE,0:ELSE,0:functions,0:IF,2:CALL,3:SWITCH,0:DO,0	29
0x58b1	              0x55	                                push rbp	      3241	buffer.c	FUNCTION_51
0x58b2	          0x4889e5	                            mov rbp, rsp	      3241	buffer.c	FUNCTION_51
0x58b5	        0x4883ec30	                           sub rsp, 0x30	      3241	buffer.c	FUNCTION_51
0x58b9	          0x897ddc	             mov dword [rbp - 0x24], edi	      3241	buffer.c	FUNCTION_51
0x58bc	    0x64488b042528	                mov rax, qword fs:[0x28]	      3241	buffer.c	FUNCTION_51
0x58c5	        0x488945f8	                mov qword [rbp - 8], rax	      3241	buffer.c	FUNCTION_51
0x58c9	            0x31c0	                            xor eax, eax	      3241	buffer.c	FUNCTION_51
0x58cb	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x58cf	        0x488d45e8	                   lea rax, [rbp - 0x18]	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x58d3	          0x4889c6	                            mov rsi, rax	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x58d6	      0xbf00000000	                              mov edi, 0	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x58db	      0xe800000000	                          call 0x4005920	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x58e0	            0x85c0	                           test eax, eax	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x58e2	            0x751f	                           jne 0x4005943	      3245	buffer.c	FUNCTION_51	IF_1	CALL_1
0x58e4	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3247	buffer.c	FUNCTION_51	IF_1	IF_2
0x58e8	            0x7412	                            je 0x400593c	      3247	buffer.c	FUNCTION_51	IF_1	IF_2
0x58ea	      0xbf00000000	                              mov edi, 0	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x58ef	      0xe800000000	                          call 0x4005934	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x58f4	          0x4889c7	                            mov rdi, rax	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x58f7	      0xe800000000	                          call 0x400593c	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x58fc	      0xb800000000	                              mov eax, 0	      3249	buffer.c	FUNCTION_51	IF_1
0x5901	            0xeb04	                           jmp 0x4005947	      3249	buffer.c	FUNCTION_51	IF_1
0x5903	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3251	buffer.c	FUNCTION_51
0x5907	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3252	buffer.c	FUNCTION_51
0x590b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3252	buffer.c	FUNCTION_51
0x5914	            0x7405	                            je 0x400595b	      3252	buffer.c	FUNCTION_51
0x5916	      0xe800000000	                          call 0x400595b	      3252	buffer.c	FUNCTION_51
0x591b	              0xc9	                                   leave	      3252	buffer.c	FUNCTION_51
0x591c	              0xc3	                                     ret	      3252	buffer.c	FUNCTION_51
buflist_list	FOR,1:WHILE,0:ELSE,4:functions,0:IF,7:CALL,33:SWITCH,0:DO,1	399
0x4d68	              0x55	                                push rbp	      2952	buffer.c	FUNCTION_45
0x4d69	          0x4889e5	                            mov rbp, rsp	      2952	buffer.c	FUNCTION_45
0x4d6c	              0x53	                                push rbx	      2952	buffer.c	FUNCTION_45
0x4d6d	        0x4883ec38	                           sub rsp, 0x38	      2952	buffer.c	FUNCTION_45
0x4d71	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      2952	buffer.c	FUNCTION_45
0x4d75	    0x488b05000000	            mov rax, qword [0x04004dbc] 	      2963	buffer.c	FUNCTION_45	FOR_1
0x4d7c	        0x488945e8	             mov qword [rbp - 0x18], rax	      2963	buffer.c	FUNCTION_45	FOR_1
0x4d80	      0xe9d5050000	                           jmp 0x400539a	      2963	buffer.c	FUNCTION_45	FOR_1
0x4d85	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2966	buffer.c	FUNCTION_45	FOR_1	CALL_1
0x4d89	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      2966	buffer.c	FUNCTION_45	FOR_1	CALL_1
0x4d90	          0x4889c7	                            mov rdi, rax	      2966	buffer.c	FUNCTION_45	FOR_1	CALL_1
0x4d93	      0xe800000000	                          call 0x4004dd8	      2966	buffer.c	FUNCTION_45	FOR_1	CALL_1
0x4d98	          0x8945e0	             mov dword [rbp - 0x20], eax	      2966	buffer.c	FUNCTION_45	FOR_1	CALL_1
0x4d9b	        0x837de000	               cmp dword [rbp - 0x20], 0	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4d9f	            0x741e	                            je 0x4004dff	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4da1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4da5	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4dac	          0x4889c7	                            mov rdi, rax	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4daf	      0xe800000000	                          call 0x4004df4	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4db4	            0x85c0	                           test eax, eax	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4db6	            0x7407	                            je 0x4004dff	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4db8	      0xb801000000	                              mov eax, 1	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4dbd	            0xeb05	                           jmp 0x4004e04	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4dbf	      0xb800000000	                              mov eax, 0	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4dc4	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4dc7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4dcb	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4dd1	            0x85c0	                           test eax, eax	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4dd3	            0x7528	                           jne 0x4004e3d	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4dd5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4dd9	          0x8b4034	            mov eax, dword [rax + 0x34] 	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4ddc	            0x85c0	                           test eax, eax	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4dde	            0x751d	                           jne 0x4004e3d	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4de0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4de4	          0x488b00	                    mov rax, qword [rax]	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4de7	      0xbe75000000	                           mov esi, 0x75	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4dec	          0x4889c7	                            mov rdi, rax	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4def	      0xe800000000	                          call 0x4004e34	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4df4	          0x4885c0	                           test rax, rax	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4df7	     0xf844d050000	                            je 0x400538a	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4dfd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4e01	          0x488b00	                    mov rax, qword [rax]	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4e04	      0xbe75000000	                           mov esi, 0x75	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4e09	          0x4889c7	                            mov rdi, rax	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4e0c	      0xe800000000	                          call 0x4004e51	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4e11	          0x4885c0	                           test rax, rax	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4e14	            0x7412	                            je 0x4004e68	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4e16	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4e1a	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4e20	            0x85c0	                           test eax, eax	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4e22	     0xf8522050000	                           jne 0x400538a	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4e28	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4e2c	          0x488b00	                    mov rax, qword [rax]	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4e2f	      0xbe2b000000	                           mov esi, 0x2b	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4e34	          0x4889c7	                            mov rdi, rax	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4e37	      0xe800000000	                          call 0x4004e7c	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4e3c	          0x4885c0	                           test rax, rax	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4e3f	            0x7426	                            je 0x4004ea7	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4e41	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4e45	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4e48	          0x83e040	                           and eax, 0x40	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4e4b	            0x85c0	                           test eax, eax	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4e4d	     0xf85f7040000	                           jne 0x400538a	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4e53	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4e57	          0x4889c7	                            mov rdi, rax	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4e5a	      0xe800000000	                          call 0x4004e9f	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4e5f	            0x85c0	                           test eax, eax	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4e61	     0xf84e3040000	                            je 0x400538a	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4e67	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4e6b	          0x488b00	                    mov rax, qword [rax]	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4e6e	      0xbe61000000	                           mov esi, 0x61	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4e73	          0x4889c7	                            mov rdi, rax	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4e76	      0xe800000000	                          call 0x4004ebb	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4e7b	          0x4885c0	                           test rax, rax	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4e7e	            0x7420	                            je 0x4004ee0	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4e80	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4e84	        0x488b4008	                mov rax, qword [rax + 8]	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4e88	          0x4885c0	                           test rax, rax	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4e8b	     0xf84b9040000	                            je 0x400538a	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4e91	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4e95	          0x8b4078	            mov eax, dword [rax + 0x78] 	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4e98	            0x85c0	                           test eax, eax	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4e9a	     0xf84aa040000	                            je 0x400538a	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4ea0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x4ea4	          0x488b00	                    mov rax, qword [rax]	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x4ea7	      0xbe68000000	                           mov esi, 0x68	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x4eac	          0x4889c7	                            mov rdi, rax	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x4eaf	      0xe800000000	                          call 0x4004ef4	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x4eb4	          0x4885c0	                           test rax, rax	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x4eb7	            0x7420	                            je 0x4004f19	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x4eb9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4ebd	        0x488b4008	                mov rax, qword [rax + 8]	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4ec1	          0x4885c0	                           test rax, rax	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4ec4	     0xf8480040000	                            je 0x400538a	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4eca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4ece	          0x8b4078	            mov eax, dword [rax + 0x78] 	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4ed1	            0x85c0	                           test eax, eax	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4ed3	     0xf8571040000	                           jne 0x400538a	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4ed9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x4edd	          0x488b00	                    mov rax, qword [rax]	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x4ee0	      0xbe52000000	                           mov esi, 0x52	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x4ee5	          0x4889c7	                            mov rdi, rax	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x4ee8	      0xe800000000	                          call 0x4004f2d	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x4eed	          0x4885c0	                           test rax, rax	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x4ef0	            0x741a	                            je 0x4004f4c	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x4ef2	        0x837de000	               cmp dword [rbp - 0x20], 0	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4ef6	     0xf844e040000	                            je 0x400538a	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4efc	        0x837de000	               cmp dword [rbp - 0x20], 0	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4f00	            0x740a	                            je 0x4004f4c	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4f02	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4f06	     0xf853e040000	                           jne 0x400538a	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4f0c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4f10	          0x488b00	                    mov rax, qword [rax]	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4f13	      0xbe3f000000	                           mov esi, 0x3f	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4f18	          0x4889c7	                            mov rdi, rax	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4f1b	      0xe800000000	                          call 0x4004f60	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4f20	          0x4885c0	                           test rax, rax	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4f23	            0x741a	                            je 0x4004f7f	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4f25	        0x837de000	               cmp dword [rbp - 0x20], 0	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4f29	     0xf841b040000	                            je 0x400538a	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4f2f	        0x837de000	               cmp dword [rbp - 0x20], 0	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4f33	            0x740a	                            je 0x4004f7f	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4f35	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4f39	     0xf840b040000	                            je 0x400538a	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4f3f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4f43	          0x488b00	                    mov rax, qword [rax]	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4f46	      0xbe46000000	                           mov esi, 0x46	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4f4b	          0x4889c7	                            mov rdi, rax	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4f4e	      0xe800000000	                          call 0x4004f93	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4f53	          0x4885c0	                           test rax, rax	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4f56	            0x741e	                            je 0x4004fb6	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4f58	        0x837de000	               cmp dword [rbp - 0x20], 0	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4f5c	     0xf85e8030000	                           jne 0x400538a	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4f62	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4f66	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4f6d	          0x4885c0	                           test rax, rax	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4f70	     0xf84d4030000	                            je 0x400538a	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4f76	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4f7a	          0x488b00	                    mov rax, qword [rax]	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4f7d	      0xbe2d000000	                           mov esi, 0x2d	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4f82	          0x4889c7	                            mov rdi, rax	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4f85	      0xe800000000	                          call 0x4004fca	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4f8a	          0x4885c0	                           test rax, rax	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4f8d	            0x7412	                            je 0x4004fe1	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4f8f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4f93	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4f99	            0x85c0	                           test eax, eax	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4f9b	     0xf85a9030000	                           jne 0x400538a	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4fa1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4fa5	          0x488b00	                    mov rax, qword [rax]	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4fa8	      0xbe3d000000	                           mov esi, 0x3d	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4fad	          0x4889c7	                            mov rdi, rax	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4fb0	      0xe800000000	                          call 0x4004ff5	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4fb5	          0x4885c0	                           test rax, rax	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4fb8	            0x7412	                            je 0x400500c	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4fba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4fbe	    0x8b8060150000	          mov eax, dword [rax + 0x1560] 	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4fc4	            0x85c0	                           test eax, eax	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4fc6	     0xf847e030000	                            je 0x400538a	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4fcc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4fd0	          0x488b00	                    mov rax, qword [rax]	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4fd3	      0xbe78000000	                           mov esi, 0x78	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4fd8	          0x4889c7	                            mov rdi, rax	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4fdb	      0xe800000000	                          call 0x4005020	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4fe0	          0x4885c0	                           test rax, rax	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4fe3	            0x7412	                            je 0x4005037	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4fe5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4fe9	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4fec	          0x83e040	                           and eax, 0x40	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4fef	            0x85c0	                           test eax, eax	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4ff1	     0xf8453030000	                            je 0x400538a	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x4ff7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x4ffb	          0x488b00	                    mov rax, qword [rax]	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x4ffe	      0xbe25000000	                           mov esi, 0x25	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x5003	          0x4889c7	                            mov rdi, rax	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x5006	      0xe800000000	                          call 0x400504b	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x500b	          0x4885c0	                           test rax, rax	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x500e	            0x7411	                            je 0x4005061	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x5010	    0x488b05000000	            mov rax, qword [0x04005057] 	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x5017	        0x483945e8	            cmp qword [rbp - 0x18], rax 	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x501b	     0xf8529030000	                           jne 0x400538a	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x5021	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x5025	          0x488b00	                    mov rax, qword [rax]	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x5028	      0xbe23000000	                           mov esi, 0x23	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x502d	          0x4889c7	                            mov rdi, rax	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x5030	      0xe800000000	                          call 0x4005075	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x5035	          0x4885c0	                           test rax, rax	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x5038	            0x7430	                            je 0x40050aa	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x503a	    0x488b05000000	            mov rax, qword [0x04005081] 	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x5041	        0x483945e8	            cmp qword [rbp - 0x18], rax 	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x5045	     0xf84ff020000	                            je 0x400538a	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x504b	    0x488b05000000	            mov rax, qword [0x04005092] 	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x5052	    0x8b9078010000	           mov edx, dword [rax + 0x178] 	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x5058	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x505c	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x5062	            0x39c2	                            cmp edx, eax	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x5064	     0xf85e0020000	                           jne 0x400538a	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x506a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2993	buffer.c	FUNCTION_45	FOR_1	IF_2	CALL_17
0x506e	          0x4889c7	                            mov rdi, rax	      2993	buffer.c	FUNCTION_45	FOR_1	IF_2	CALL_17
0x5071	      0xe800000000	                          call 0x40050b6	      2993	buffer.c	FUNCTION_45	FOR_1	IF_2	CALL_17
0x5076	          0x4885c0	                           test rax, rax	      2993	buffer.c	FUNCTION_45	FOR_1	IF_2	CALL_17
0x5079	            0x7428	                            je 0x40050e3	      2993	buffer.c	FUNCTION_45	FOR_1	IF_2	CALL_17
0x507b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x507f	          0x4889c7	                            mov rdi, rax	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x5082	      0xe800000000	                          call 0x40050c7	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x5087	          0x4889c1	                            mov rcx, rax	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x508a	    0x488b05000000	            mov rax, qword [0x040050d1] 	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x5091	      0xbaff0f0000	                          mov edx, 0xfff	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x5096	          0x4889ce	                            mov rsi, rcx	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x5099	          0x4889c7	                            mov rdi, rax	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x509c	      0xe800000000	                          call 0x40050e1	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x50a1	            0xeb29	                           jmp 0x400510c	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x50a3	    0x488b15000000	            mov rdx, qword [0x040050ea] 	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x50aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x50ae	    0x488bb0980000	            mov rsi, qword [rax + 0x98] 	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x50b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x50b9	    0x41b801000000	                              mov r8d, 1	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x50bf	      0xb900100000	                         mov ecx, 0x1000	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x50c4	          0x4889c7	                            mov rdi, rax	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x50c7	      0xe800000000	                          call 0x400510c	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x50cc	    0x488b05000000	            mov rax, qword [0x04005113] 	      2997	buffer.c	FUNCTION_45	FOR_1	IF_3	CALL_21
0x50d3	          0x4889c7	                            mov rdi, rax	      2997	buffer.c	FUNCTION_45	FOR_1	IF_3	CALL_21
0x50d6	      0xe800000000	                          call 0x400511b	      2997	buffer.c	FUNCTION_45	FOR_1	IF_3	CALL_21
0x50db	            0x85c0	                           test eax, eax	      2997	buffer.c	FUNCTION_45	FOR_1	IF_3	CALL_21
0x50dd	     0xf856a020000	                           jne 0x400538d	      2997	buffer.c	FUNCTION_45	FOR_1	IF_3	CALL_21
0x50e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3000	buffer.c	FUNCTION_45	FOR_1
0x50e7	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      3000	buffer.c	FUNCTION_45	FOR_1
0x50ea	          0x83e040	                           and eax, 0x40	      3000	buffer.c	FUNCTION_45	FOR_1
0x50ed	            0x85c0	                           test eax, eax	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x50ef	            0x751e	                           jne 0x400514f	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x50f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x50f5	          0x4889c7	                            mov rdi, rax	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x50f8	      0xe800000000	                          call 0x400513d	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x50fd	            0x85c0	                           test eax, eax	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x50ff	            0x7407	                            je 0x4005148	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x5101	      0xb82b000000	                           mov eax, 0x2b	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x5106	            0xeb0c	                           jmp 0x4005154	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x5108	      0xb820000000	                           mov eax, 0x20	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x510d	            0xeb05	                           jmp 0x4005154	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x510f	      0xb878000000	                           mov eax, 0x78	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x5114	          0x8945dc	             mov dword [rbp - 0x24], eax	      3000	buffer.c	FUNCTION_45	FOR_1
0x5117	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x511b	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x5122	          0x4889c7	                            mov rdi, rax	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x5125	      0xe800000000	                          call 0x400516a	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x512a	            0x85c0	                           test eax, eax	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x512c	            0x7430	                            je 0x400519e	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x512e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3005	buffer.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_24
0x5132	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      3005	buffer.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_24
0x5139	          0x4889c7	                            mov rdi, rax	      3005	buffer.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_24
0x513c	      0xe800000000	                          call 0x4005181	      3005	buffer.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_24
0x5141	            0x85c0	                           test eax, eax	      3005	buffer.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_24
0x5143	            0x7409	                            je 0x400518e	      3005	buffer.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_24
0x5145	    0xc745d83f0000	           mov dword [rbp - 0x28], 0x3f 	      3006	buffer.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x514c	            0xeb07	                           jmp 0x4005195	      3006	buffer.c	FUNCTION_45	FOR_1	IF_4	IF_5
0x514e	    0xc745d8520000	           mov dword [rbp - 0x28], 0x52 	      3008	buffer.c	FUNCTION_45	FOR_1	IF_4	ELSE_2
0x5155	    0xc745dc200000	           mov dword [rbp - 0x24], 0x20 	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x515c	            0xeb4b	                           jmp 0x40051e9	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x515e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3012	buffer.c	FUNCTION_45	FOR_1	ELSE_3	IF_6
0x5162	    0x488b80481c00	          mov rax, qword [rax + 0x1c48] 	      3012	buffer.c	FUNCTION_45	FOR_1	ELSE_3	IF_6
0x5169	          0x4885c0	                           test rax, rax	      3012	buffer.c	FUNCTION_45	FOR_1	ELSE_3	IF_6
0x516c	            0x7409	                            je 0x40051b7	      3012	buffer.c	FUNCTION_45	FOR_1	ELSE_3	IF_6
0x516e	    0xc745d8460000	           mov dword [rbp - 0x28], 0x46 	      3013	buffer.c	FUNCTION_45	FOR_1	ELSE_3	IF_6
0x5175	            0xeb32	                           jmp 0x40051e9	      3013	buffer.c	FUNCTION_45	FOR_1	ELSE_3	IF_6
0x5177	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x517b	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x5181	            0x85c0	                           test eax, eax	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x5183	            0x741c	                            je 0x40051e1	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x5185	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x5189	    0x8b8060150000	          mov eax, dword [rax + 0x1560] 	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x518f	            0x85c0	                           test eax, eax	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x5191	            0x7407	                            je 0x40051da	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x5193	      0xb83d000000	                           mov eax, 0x3d	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x5198	            0xeb0c	                           jmp 0x40051e6	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x519a	      0xb820000000	                           mov eax, 0x20	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x519f	            0xeb05	                           jmp 0x40051e6	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x51a1	      0xb82d000000	                           mov eax, 0x2d	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x51a6	          0x8945d8	             mov dword [rbp - 0x28], eax	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x51a9	      0xbf0a000000	                            mov edi, 0xa	      3018	buffer.c	FUNCTION_45	FOR_1	CALL_25
0x51ae	      0xe800000000	                          call 0x40051f3	      3018	buffer.c	FUNCTION_45	FOR_1	CALL_25
0x51b3	    0x488b35000000	            mov rsi, qword [0x040051fa] 	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x51ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3024	buffer.c	FUNCTION_45	FOR_1
0x51be	        0x488b4008	                mov rax, qword [rax + 8]	      3024	buffer.c	FUNCTION_45	FOR_1
0x51c2	          0x4885c0	                           test rax, rax	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x51c5	            0x7419	                            je 0x4005220	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x51c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3025	buffer.c	FUNCTION_45	FOR_1
0x51cb	          0x8b4078	            mov eax, dword [rax + 0x78] 	      3025	buffer.c	FUNCTION_45	FOR_1
0x51ce	            0x85c0	                           test eax, eax	      3025	buffer.c	FUNCTION_45	FOR_1
0x51d0	            0x7507	                           jne 0x4005219	      3025	buffer.c	FUNCTION_45	FOR_1
0x51d2	      0xb868000000	                           mov eax, 0x68	      3025	buffer.c	FUNCTION_45	FOR_1
0x51d7	            0xeb0c	                           jmp 0x4005225	      3025	buffer.c	FUNCTION_45	FOR_1
0x51d9	      0xb861000000	                           mov eax, 0x61	      3025	buffer.c	FUNCTION_45	FOR_1
0x51de	            0xeb05	                           jmp 0x4005225	      3025	buffer.c	FUNCTION_45	FOR_1
0x51e0	      0xb820000000	                           mov eax, 0x20	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x51e5	    0x488b15000000	            mov rdx, qword [0x0400522c] 	      3022	buffer.c	FUNCTION_45	FOR_1
0x51ec	        0x483955e8	            cmp qword [rbp - 0x18], rdx 	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x51f0	            0x7429	                            je 0x400525b	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x51f2	    0x488b15000000	            mov rdx, qword [0x04005239] 	      3023	buffer.c	FUNCTION_45	FOR_1
0x51f9	    0x8b8a78010000	           mov ecx, dword [rdx + 0x178] 	      3023	buffer.c	FUNCTION_45	FOR_1
0x51ff	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3023	buffer.c	FUNCTION_45	FOR_1
0x5203	    0x8b92b8000000	            mov edx, dword [rdx + 0xb8] 	      3023	buffer.c	FUNCTION_45	FOR_1
0x5209	            0x39d1	                            cmp ecx, edx	      3023	buffer.c	FUNCTION_45	FOR_1
0x520b	            0x7507	                           jne 0x4005254	      3023	buffer.c	FUNCTION_45	FOR_1
0x520d	      0xba23000000	                           mov edx, 0x23	      3023	buffer.c	FUNCTION_45	FOR_1
0x5212	            0xeb0c	                           jmp 0x4005260	      3023	buffer.c	FUNCTION_45	FOR_1
0x5214	      0xba20000000	                           mov edx, 0x20	      3023	buffer.c	FUNCTION_45	FOR_1
0x5219	            0xeb05	                           jmp 0x4005260	      3023	buffer.c	FUNCTION_45	FOR_1
0x521b	      0xba25000000	                           mov edx, 0x25	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x5220	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      3021	buffer.c	FUNCTION_45	FOR_1
0x5224	    0x8b8924140000	          mov ecx, dword [rcx + 0x1424] 	      3021	buffer.c	FUNCTION_45	FOR_1
0x522a	            0x85c9	                           test ecx, ecx	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x522c	            0x7408	                            je 0x4005276	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x522e	    0x41b820000000	                           mov r8d, 0x20	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x5234	            0xeb06	                           jmp 0x400527c	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x5236	    0x41b875000000	                           mov r8d, 0x75	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x523c	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x5240	    0x8b89b8000000	            mov ecx, dword [rcx + 0xb8] 	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x5246	    0x488b3d000000	            mov rdi, qword [0x0400528d] 	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x524d	              0x56	                                push rsi	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x524e	          0x8b75dc	             mov esi, dword [rbp - 0x24]	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x5251	              0x56	                                push rsi	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x5252	          0x8b75d8	             mov esi, dword [rbp - 0x28]	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x5255	              0x56	                                push rsi	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x5256	              0x50	                                push rax	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x5257	          0x4189d1	                            mov r9d, edx	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x525a	      0xba00000000	                              mov edx, 0	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x525f	      0xbeed030000	                          mov esi, 0x3ed	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x5264	      0xb800000000	                              mov eax, 0	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x5269	      0xe800000000	                          call 0x40052ae	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x526e	        0x4883c420	                           add rsp, 0x20	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x5272	          0x8945d0	             mov dword [rbp - 0x30], eax	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x5275	    0x817dd0ed0300	          cmp dword [rbp - 0x30], 0x3ed 	      3029	buffer.c	FUNCTION_45	FOR_1	IF_7
0x527c	            0x7e07	                           jle 0x40052c5	      3029	buffer.c	FUNCTION_45	FOR_1	IF_7
0x527e	    0xc745d0ed0300	          mov dword [rbp - 0x30], 0x3ed 	      3030	buffer.c	FUNCTION_45	FOR_1	IF_7
0x5285	    0x488b05000000	            mov rax, qword [0x040052cc] 	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x528c	          0x4889c7	                            mov rdi, rax	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x528f	      0xe800000000	                          call 0x40052d4	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x5294	      0xba28000000	                           mov edx, 0x28	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x5299	            0x29c2	                            sub edx, eax	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x529b	            0x89d0	                            mov eax, edx	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x529d	          0x8945d4	             mov dword [rbp - 0x2c], eax	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x52a0	    0x488b0d000000	            mov rcx, qword [0x040052e7] 	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x52a7	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x52aa	          0x8d5001	                      lea edx, [rax + 1]	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x52ad	          0x8955d0	             mov dword [rbp - 0x30], edx	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x52b0	            0x4898	                                    cdqe	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x52b2	          0x4801c8	                            add rax, rcx	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x52b5	          0xc60020	                    mov byte [rax], 0x20	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x52b8	        0x836dd401	               sub dword [rbp - 0x2c], 1	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x52bc	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x52c0	            0x7e09	                           jle 0x400530b	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x52c2	    0x817dd0ee0300	          cmp dword [rbp - 0x30], 0x3ee 	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x52c9	            0x7ed5	                           jle 0x40052e0	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x52cb	    0x488b05000000	            mov rax, qword [0x04005312] 	      3039	buffer.c	FUNCTION_45	FOR_1	CALL_29
0x52d2	        0x483945e8	            cmp qword [rbp - 0x18], rax 	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x52d6	            0x750d	                           jne 0x4005325	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x52d8	    0x488b05000000	            mov rax, qword [0x0400531f] 	      3039	buffer.c	FUNCTION_45	FOR_1	CALL_29
0x52df	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x52e3	            0xeb0f	                           jmp 0x4005334	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x52e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x52e9	          0x4889c7	                            mov rdi, rax	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x52ec	      0xe800000000	                          call 0x4005331	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x52f1	          0x4889c3	                            mov rbx, rax	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x52f4	      0xbf00000000	                              mov edi, 0	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x52f9	      0xe800000000	                          call 0x400533e	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x52fe	          0x4889c6	                            mov rsi, rax	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x5301	      0xb801040000	                          mov eax, 0x401	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x5306	          0x2b45d0	             sub eax, dword [rbp - 0x30]	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x5309	            0x4898	                                    cdqe	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x530b	    0x488b0d000000	            mov rcx, qword [0x04005352] 	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x5312	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x5315	          0x4863d2	                         movsxd rdx, edx	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x5318	        0x488d3c11	                    lea rdi, [rcx + rdx]	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x531c	          0x4889d9	                            mov rcx, rbx	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x531f	          0x4889f2	                            mov rdx, rsi	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x5322	          0x4889c6	                            mov rsi, rax	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x5325	      0xb800000000	                              mov eax, 0	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x532a	      0xe800000000	                          call 0x400536f	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x532f	    0x488b05000000	            mov rax, qword [0x04005376] 	      3041	buffer.c	FUNCTION_45	FOR_1	CALL_31
0x5336	          0x4889c7	                            mov rdi, rax	      3041	buffer.c	FUNCTION_45	FOR_1	CALL_31
0x5339	      0xe800000000	                          call 0x400537e	      3041	buffer.c	FUNCTION_45	FOR_1	CALL_31
0x533e	      0xe800000000	                          call 0x4005383	      3042	buffer.c	FUNCTION_45	FOR_1	CALL_32
0x5343	      0xe800000000	                          call 0x4005388	      3043	buffer.c	FUNCTION_45	FOR_1	CALL_33
0x5348	            0xeb04	                           jmp 0x400538e	      3043	buffer.c	FUNCTION_45	FOR_1	CALL_33
0x534a	              0x90	                                     nop	      2992	buffer.c	FUNCTION_45	FOR_1	IF_1
0x534b	            0xeb01	                           jmp 0x400538e	      2992	buffer.c	FUNCTION_45	FOR_1	IF_1
0x534d	              0x90	                                     nop	      2998	buffer.c	FUNCTION_45	FOR_1	IF_3
0x534e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2963	buffer.c	FUNCTION_45	FOR_1
0x5352	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2963	buffer.c	FUNCTION_45	FOR_1
0x5356	        0x488945e8	             mov qword [rbp - 0x18], rax	      2963	buffer.c	FUNCTION_45	FOR_1
0x535a	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2963	buffer.c	FUNCTION_45	FOR_1
0x535f	            0x740e	                            je 0x40053af	      2963	buffer.c	FUNCTION_45	FOR_1
0x5361	    0x8b0500000000	            mov eax, dword [0x040053a7] 	      2963	buffer.c	FUNCTION_45	FOR_1
0x5367	            0x85c0	                           test eax, eax	      2963	buffer.c	FUNCTION_45	FOR_1
0x5369	     0xf8416faffff	                            je 0x4004dc5	      2963	buffer.c	FUNCTION_45	FOR_1
0x536f	              0x90	                                     nop	      3045	buffer.c	FUNCTION_45
0x5370	        0x488b5df8	                mov rbx, qword [rbp - 8]	      3045	buffer.c	FUNCTION_45
0x5374	              0xc9	                                   leave	      3045	buffer.c	FUNCTION_45
0x5375	              0xc3	                                     ret	      3045	buffer.c	FUNCTION_45
buf_same_ino	FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,0:SWITCH,0:DO,0	25
0x5bd0	              0x55	                                push rbp	      3386	buffer.c	ELSE_1	FUNCTION_58
0x5bd1	          0x4889e5	                            mov rbp, rsp	      3386	buffer.c	ELSE_1	FUNCTION_58
0x5bd4	        0x48897df8	                mov qword [rbp - 8], rdi	      3386	buffer.c	ELSE_1	FUNCTION_58
0x5bd8	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3386	buffer.c	ELSE_1	FUNCTION_58
0x5bdc	        0x488b45f8	                mov rax, qword [rbp - 8]	      3387	buffer.c	ELSE_1	FUNCTION_58
0x5be0	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      3387	buffer.c	ELSE_1	FUNCTION_58
0x5be6	            0x85c0	                           test eax, eax	      3389	buffer.c	ELSE_1	FUNCTION_58
0x5be8	            0x7436	                            je 0x4005c60	      3389	buffer.c	ELSE_1	FUNCTION_58
0x5bea	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3388	buffer.c	ELSE_1	FUNCTION_58
0x5bee	          0x488b10	                    mov rdx, qword [rax]	      3388	buffer.c	ELSE_1	FUNCTION_58
0x5bf1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3388	buffer.c	ELSE_1	FUNCTION_58
0x5bf5	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      3388	buffer.c	ELSE_1	FUNCTION_58
0x5bfc	          0x4839c2	                            cmp rdx, rax	      3388	buffer.c	ELSE_1	FUNCTION_58
0x5bff	            0x751f	                           jne 0x4005c60	      3388	buffer.c	ELSE_1	FUNCTION_58
0x5c01	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3389	buffer.c	ELSE_1	FUNCTION_58
0x5c05	        0x488b5008	                mov rdx, qword [rax + 8]	      3389	buffer.c	ELSE_1	FUNCTION_58
0x5c09	        0x488b45f8	                mov rax, qword [rbp - 8]	      3389	buffer.c	ELSE_1	FUNCTION_58
0x5c0d	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	      3389	buffer.c	ELSE_1	FUNCTION_58
0x5c14	          0x4839c2	                            cmp rdx, rax	      3389	buffer.c	ELSE_1	FUNCTION_58
0x5c17	            0x7507	                           jne 0x4005c60	      3389	buffer.c	ELSE_1	FUNCTION_58
0x5c19	      0xb801000000	                              mov eax, 1	      3389	buffer.c	ELSE_1	FUNCTION_58
0x5c1e	            0xeb05	                           jmp 0x4005c65	      3389	buffer.c	ELSE_1	FUNCTION_58
0x5c20	      0xb800000000	                              mov eax, 0	      3389	buffer.c	ELSE_1	FUNCTION_58
0x5c25	              0x5d	                                 pop rbp	      3390	buffer.c	ELSE_1	FUNCTION_58
0x5c26	              0xc3	                                     ret	      3390	buffer.c	ELSE_1	FUNCTION_58
buflist_new	FOR,0:WHILE,0:ELSE,3:functions,0:IF,32:CALL,51:SWITCH,0:DO,0	456
0x2dbd	              0x55	                                push rbp	      1876	buffer.c	FUNCTION_26
0x2dbe	          0x4889e5	                            mov rbp, rsp	      1876	buffer.c	FUNCTION_26
0x2dc1	    0x4881ece00000	                           sub rsp, 0xe0	      1876	buffer.c	FUNCTION_26
0x2dc8	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	      1876	buffer.c	FUNCTION_26
0x2dcf	    0x4889b530ffff	             mov qword [rbp - 0xd0], rsi	      1876	buffer.c	FUNCTION_26
0x2dd6	    0x48899528ffff	             mov qword [rbp - 0xd8], rdx	      1876	buffer.c	FUNCTION_26
0x2ddd	    0x898d24ffffff	             mov dword [rbp - 0xdc], ecx	      1876	buffer.c	FUNCTION_26
0x2de3	    0x64488b042528	                mov rax, qword fs:[0x28]	      1876	buffer.c	FUNCTION_26
0x2dec	        0x488945f8	                mov qword [rbp - 8], rax	      1876	buffer.c	FUNCTION_26
0x2df0	            0x31c0	                            xor eax, eax	      1876	buffer.c	FUNCTION_26
0x2df2	    0x8b0500000000	            mov eax, dword [0x04002e38] 	      1882	buffer.c	FUNCTION_26	IF_1
0x2df8	          0x83f801	                              cmp eax, 1	      1882	buffer.c	FUNCTION_26	IF_1
0x2dfb	            0x750a	                           jne 0x4002e47	      1882	buffer.c	FUNCTION_26	IF_1
0x2dfd	      0xbf00000000	                              mov edi, 0	      1883	buffer.c	FUNCTION_26	CALL_1
0x2e02	      0xe800000000	                          call 0x4002e47	      1883	buffer.c	FUNCTION_26	CALL_1
0x2e07	    0x488b05000000	            mov rax, qword [0x04002e4e] 	      1885	buffer.c	FUNCTION_26	CALL_2
0x2e0e	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	      1885	buffer.c	FUNCTION_26	CALL_2
0x2e15	    0x488d8d38ffff	                   lea rcx, [rbp - 0xc8]	      1885	buffer.c	FUNCTION_26	CALL_2
0x2e1c	          0x4889ce	                            mov rsi, rcx	      1885	buffer.c	FUNCTION_26	CALL_2
0x2e1f	          0x4889c7	                            mov rdi, rax	      1885	buffer.c	FUNCTION_26	CALL_2
0x2e22	      0xe800000000	                          call 0x4002e67	      1885	buffer.c	FUNCTION_26	CALL_2
0x2e27	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      1893	buffer.c	FUNCTION_26	IF_2	CALL_3
0x2e2e	          0x4885c0	                           test rax, rax	      1893	buffer.c	FUNCTION_26	IF_2	CALL_3
0x2e31	            0x741d	                            je 0x4002e90	      1893	buffer.c	FUNCTION_26	IF_2	CALL_3
0x2e33	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      1893	buffer.c	FUNCTION_26	IF_2	CALL_3
0x2e3a	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      1893	buffer.c	FUNCTION_26	IF_2	CALL_3
0x2e41	          0x4889d6	                            mov rsi, rdx	      1893	buffer.c	FUNCTION_26	IF_2	CALL_3
0x2e44	          0x4889c7	                            mov rdi, rax	      1893	buffer.c	FUNCTION_26	IF_2	CALL_3
0x2e47	      0xe800000000	                          call 0x4002e8c	      1893	buffer.c	FUNCTION_26	IF_2	CALL_3
0x2e4c	            0x85c0	                           test eax, eax	      1893	buffer.c	FUNCTION_26	IF_2	CALL_3
0x2e4e	            0x790b	                           jns 0x4002e9b	      1893	buffer.c	FUNCTION_26	IF_2	CALL_3
0x2e50	    0x48c78560ffff	mov qword [rbp - 0xa0], 0xffffffffffffffff	      1894	buffer.c	FUNCTION_26	IF_2
0x2e5b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1896	buffer.c	FUNCTION_26	IF_3
0x2e62	          0x4885c0	                           test rax, rax	      1896	buffer.c	FUNCTION_26	IF_3
0x2e65	     0xf844a010000	                            je 0x4002ff5	      1896	buffer.c	FUNCTION_26	IF_3
0x2e6b	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1896	buffer.c	FUNCTION_26	IF_3
0x2e71	          0x83e00c	                            and eax, 0xc	      1896	buffer.c	FUNCTION_26	IF_3
0x2e74	            0x85c0	                           test eax, eax	      1896	buffer.c	FUNCTION_26	IF_3
0x2e76	     0xf8539010000	                           jne 0x4002ff5	      1896	buffer.c	FUNCTION_26	IF_3
0x2e7c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1898	buffer.c	FUNCTION_26	IF_3	CALL_4
0x2e83	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      1896	buffer.c	FUNCTION_26	IF_3
0x2e8a	          0x4889d6	                            mov rsi, rdx	      1896	buffer.c	FUNCTION_26	IF_3
0x2e8d	          0x4889c7	                            mov rdi, rax	      1896	buffer.c	FUNCTION_26	IF_3
0x2e90	      0xe8fb0f0000	          call sym.buflist_findname_stat	      1896	buffer.c	FUNCTION_26	IF_3
0x2e95	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1896	buffer.c	FUNCTION_26	IF_3
0x2e9c	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      1896	buffer.c	FUNCTION_26	IF_3
0x2ea4	     0xf840b010000	                            je 0x4002ff5	      1896	buffer.c	FUNCTION_26	IF_3
0x2eaa	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1904	buffer.c	FUNCTION_26	IF_3	CALL_6
0x2eb1	          0x4889c7	                            mov rdi, rax	      1904	buffer.c	FUNCTION_26	IF_3	CALL_6
0x2eb4	      0xe800000000	                          call 0x4002ef9	      1904	buffer.c	FUNCTION_26	IF_3	CALL_6
0x2eb9	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      1905	buffer.c	FUNCTION_26	IF_3	IF_4
0x2ec1	            0x7428	                            je 0x4002f2b	      1905	buffer.c	FUNCTION_26	IF_3	IF_4
0x2ec3	    0x488b35000000	            mov rsi, qword [0x04002f0a] 	      1906	buffer.c	FUNCTION_26	IF_3	CALL_7
0x2eca	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      1906	buffer.c	FUNCTION_26	IF_3	CALL_7
0x2ed1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1906	buffer.c	FUNCTION_26	IF_3	CALL_7
0x2ed8	    0x41b800000000	                              mov r8d, 0	      1906	buffer.c	FUNCTION_26	IF_3	CALL_7
0x2ede	      0xb900000000	                              mov ecx, 0	      1906	buffer.c	FUNCTION_26	IF_3	CALL_7
0x2ee3	          0x4889c7	                            mov rdi, rax	      1906	buffer.c	FUNCTION_26	IF_3	CALL_7
0x2ee6	      0xe8141a0000	                call sym.buflist_setfpos	      1906	buffer.c	FUNCTION_26	IF_3	CALL_7
0x2eeb	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1908	buffer.c	FUNCTION_26	IF_3	IF_5
0x2ef1	          0x83e010	                           and eax, 0x10	      1908	buffer.c	FUNCTION_26	IF_3	IF_5
0x2ef4	            0x85c0	                           test eax, eax	      1908	buffer.c	FUNCTION_26	IF_3	IF_5
0x2ef6	            0x7514	                           jne 0x4002f4c	      1908	buffer.c	FUNCTION_26	IF_3	IF_5
0x2ef8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1911	buffer.c	FUNCTION_26	IF_3	CALL_8
0x2eff	      0xbe00000000	                              mov esi, 0	      1911	buffer.c	FUNCTION_26	IF_3	CALL_8
0x2f04	          0x4889c7	                            mov rdi, rax	      1911	buffer.c	FUNCTION_26	IF_3	CALL_8
0x2f07	      0xe800000000	                          call 0x4002f4c	      1911	buffer.c	FUNCTION_26	IF_3	CALL_8
0x2f0c	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1913	buffer.c	FUNCTION_26	IF_3	IF_6
0x2f12	          0x83e002	                              and eax, 2	      1913	buffer.c	FUNCTION_26	IF_3	IF_6
0x2f15	            0x85c0	                           test eax, eax	      1913	buffer.c	FUNCTION_26	IF_3	IF_6
0x2f17	     0xf848c000000	                            je 0x4002fe9	      1913	buffer.c	FUNCTION_26	IF_3	IF_6
0x2f1d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1913	buffer.c	FUNCTION_26	IF_3	IF_6
0x2f24	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      1913	buffer.c	FUNCTION_26	IF_3	IF_6
0x2f2a	            0x85c0	                           test eax, eax	      1913	buffer.c	FUNCTION_26	IF_3	IF_6
0x2f2c	            0x757b	                           jne 0x4002fe9	      1913	buffer.c	FUNCTION_26	IF_3	IF_6
0x2f2e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1917	buffer.c	FUNCTION_26	IF_3	IF_6
0x2f35	    0xc78024140000	            mov dword [rax + 0x1424], 1 	      1917	buffer.c	FUNCTION_26	IF_3	IF_6
0x2f3f	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      1918	buffer.c	FUNCTION_26	IF_3	IF_6	CALL_9
0x2f46	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      1918	buffer.c	FUNCTION_26	IF_3	IF_6	CALL_9
0x2f4d	          0x4889d6	                            mov rsi, rdx	      1918	buffer.c	FUNCTION_26	IF_3	IF_6	CALL_9
0x2f50	          0x4889c7	                            mov rdi, rax	      1918	buffer.c	FUNCTION_26	IF_3	IF_6	CALL_9
0x2f53	      0xe800000000	                          call 0x4002f98	      1918	buffer.c	FUNCTION_26	IF_3	IF_6	CALL_9
0x2f58	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1919	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7
0x2f5e	          0x83e004	                              and eax, 4	      1919	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7
0x2f61	            0x85c0	                           test eax, eax	      1919	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7
0x2f63	            0x7544	                           jne 0x4002fe9	      1919	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7
0x2f65	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1921	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_10
0x2f6c	          0x4989c0	                             mov r8, rax	      1921	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_10
0x2f6f	      0xb900000000	                              mov ecx, 0	      1921	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_10
0x2f74	      0xba00000000	                              mov edx, 0	      1921	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_10
0x2f79	      0xbe00000000	                              mov esi, 0	      1921	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_10
0x2f7e	      0xbf00000000	                              mov edi, 0	      1921	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_10
0x2f83	      0xe800000000	                          call 0x4002fc8	      1921	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_10
0x2f88	            0x85c0	                           test eax, eax	      1921	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_10
0x2f8a	            0x741d	                            je 0x4002fe9	      1921	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_10
0x2f8c	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      1922	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_11
0x2f93	          0x4889c7	                            mov rdi, rax	      1922	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_11
0x2f96	      0xe800000000	                          call 0x4002fdb	      1922	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_11
0x2f9b	            0x85c0	                           test eax, eax	      1922	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_11
0x2f9d	            0x750a	                           jne 0x4002fe9	      1922	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8	CALL_11
0x2f9f	      0xb800000000	                              mov eax, 0	      1923	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8
0x2fa4	      0xe9fd060000	                           jmp 0x40036e6	      1923	buffer.c	FUNCTION_26	IF_3	IF_6	IF_7	IF_8
0x2fa9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1926	buffer.c	FUNCTION_26	IF_3
0x2fb0	      0xe9f1060000	                           jmp 0x40036e6	      1926	buffer.c	FUNCTION_26	IF_3
0x2fb5	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      1937	buffer.c	FUNCTION_26
0x2fc0	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      1938	buffer.c	FUNCTION_26	IF_9	CALL_12
0x2fc6	          0x83e001	                              and eax, 1	      1938	buffer.c	FUNCTION_26	IF_9	CALL_12
0x2fc9	            0x85c0	                           test eax, eax	      1938	buffer.c	FUNCTION_26	IF_9	CALL_12
0x2fcb	     0xf84cf000000	                            je 0x40030e0	      1938	buffer.c	FUNCTION_26	IF_9	CALL_12
0x2fd1	      0xe800000000	                          call 0x4003016	      1938	buffer.c	FUNCTION_26	IF_9	CALL_12
0x2fd6	            0x85c0	                           test eax, eax	      1938	buffer.c	FUNCTION_26	IF_9	CALL_12
0x2fd8	     0xf84c2000000	                            je 0x40030e0	      1938	buffer.c	FUNCTION_26	IF_9	CALL_12
0x2fde	    0x488b05000000	            mov rax, qword [0x04003025] 	      1940	buffer.c	FUNCTION_26	IF_9
0x2fe5	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1940	buffer.c	FUNCTION_26	IF_9
0x2fec	    0x488b05000000	            mov rax, qword [0x04003033] 	      1943	buffer.c	FUNCTION_26	IF_9	IF_10
0x2ff3	    0x8b8024140000	          mov eax, dword [rax + 0x1424] 	      1943	buffer.c	FUNCTION_26	IF_9	IF_10
0x2ff9	            0x85c0	                           test eax, eax	      1943	buffer.c	FUNCTION_26	IF_9	IF_10
0x2ffb	            0x7423	                            je 0x4003060	      1943	buffer.c	FUNCTION_26	IF_9	IF_10
0x2ffd	    0x488b05000000	            mov rax, qword [0x04003044] 	      1944	buffer.c	FUNCTION_26	IF_9	CALL_13
0x3004	          0x4989c0	                             mov r8, rax	      1944	buffer.c	FUNCTION_26	IF_9	CALL_13
0x3007	      0xb900000000	                              mov ecx, 0	      1944	buffer.c	FUNCTION_26	IF_9	CALL_13
0x300c	      0xba00000000	                              mov edx, 0	      1944	buffer.c	FUNCTION_26	IF_9	CALL_13
0x3011	      0xbe00000000	                              mov esi, 0	      1944	buffer.c	FUNCTION_26	IF_9	CALL_13
0x3016	      0xbf01000000	                              mov edi, 1	      1944	buffer.c	FUNCTION_26	IF_9	CALL_13
0x301b	      0xe800000000	                          call 0x4003060	      1944	buffer.c	FUNCTION_26	IF_9	CALL_13
0x3020	    0x488b05000000	            mov rax, qword [0x04003067] 	      1945	buffer.c	FUNCTION_26	IF_9	IF_11
0x3027	    0x48398548ffff	            cmp qword [rbp - 0xb8], rax 	      1945	buffer.c	FUNCTION_26	IF_9	IF_11
0x302e	            0x7523	                           jne 0x4003093	      1945	buffer.c	FUNCTION_26	IF_9	IF_11
0x3030	    0x488b05000000	            mov rax, qword [0x04003077] 	      1946	buffer.c	FUNCTION_26	IF_9	CALL_14
0x3037	          0x4989c0	                             mov r8, rax	      1946	buffer.c	FUNCTION_26	IF_9	CALL_14
0x303a	      0xb900000000	                              mov ecx, 0	      1946	buffer.c	FUNCTION_26	IF_9	CALL_14
0x303f	      0xba00000000	                              mov edx, 0	      1946	buffer.c	FUNCTION_26	IF_9	CALL_14
0x3044	      0xbe00000000	                              mov esi, 0	      1946	buffer.c	FUNCTION_26	IF_9	CALL_14
0x3049	      0xbf0f000000	                            mov edi, 0xf	      1946	buffer.c	FUNCTION_26	IF_9	CALL_14
0x304e	      0xe800000000	                          call 0x4003093	      1946	buffer.c	FUNCTION_26	IF_9	CALL_14
0x3053	      0xe800000000	                          call 0x4003098	      1948	buffer.c	FUNCTION_26	IF_9	IF_12	CALL_15
0x3058	            0x85c0	                           test eax, eax	      1948	buffer.c	FUNCTION_26	IF_9	IF_12	CALL_15
0x305a	            0x740a	                            je 0x40030a6	      1948	buffer.c	FUNCTION_26	IF_9	IF_12	CALL_15
0x305c	      0xb800000000	                              mov eax, 0	      1949	buffer.c	FUNCTION_26	IF_9	IF_12
0x3061	      0xe940060000	                           jmp 0x40036e6	      1949	buffer.c	FUNCTION_26	IF_9	IF_12
0x3066	    0x488b05000000	            mov rax, qword [0x040030ad] 	      1951	buffer.c	FUNCTION_26	IF_9	IF_13
0x306d	    0x48398548ffff	            cmp qword [rbp - 0xb8], rax 	      1951	buffer.c	FUNCTION_26	IF_9	IF_13
0x3074	            0x752a	                           jne 0x40030e0	      1951	buffer.c	FUNCTION_26	IF_9	IF_13
0x3076	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1954	buffer.c	FUNCTION_26	IF_9	IF_13	CALL_16
0x307d	    0x480510140000	                         add rax, 0x1410	      1954	buffer.c	FUNCTION_26	IF_9	IF_13	CALL_16
0x3083	          0x4889c7	                            mov rdi, rax	      1954	buffer.c	FUNCTION_26	IF_9	IF_13	CALL_16
0x3086	      0xe800000000	                          call 0x40030cb	      1954	buffer.c	FUNCTION_26	IF_9	IF_13	CALL_16
0x308b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1955	buffer.c	FUNCTION_26	IF_9	IF_13	CALL_17
0x3092	    0x480518140000	                         add rax, 0x1418	      1955	buffer.c	FUNCTION_26	IF_9	IF_13	CALL_17
0x3098	          0x4889c7	                            mov rdi, rax	      1955	buffer.c	FUNCTION_26	IF_9	IF_13	CALL_17
0x309b	      0xe800000000	                          call 0x40030e0	      1955	buffer.c	FUNCTION_26	IF_9	IF_13	CALL_17
0x30a0	    0x488b05000000	            mov rax, qword [0x040030e7] 	      1958	buffer.c	FUNCTION_26	IF_14
0x30a7	    0x48398548ffff	            cmp qword [rbp - 0xb8], rax 	      1958	buffer.c	FUNCTION_26	IF_14
0x30ae	            0x7510	                           jne 0x4003100	      1958	buffer.c	FUNCTION_26	IF_14
0x30b0	    0x488b05000000	            mov rax, qword [0x040030f7] 	      1958	buffer.c	FUNCTION_26	IF_14
0x30b7	          0x4885c0	                           test rax, rax	      1958	buffer.c	FUNCTION_26	IF_14
0x30ba	     0xf85c0000000	                           jne 0x40031c0	      1958	buffer.c	FUNCTION_26	IF_14
0x30c0	      0xbf501c0000	                         mov edi, 0x1c50	      1960	buffer.c	FUNCTION_26	IF_14	CALL_18
0x30c5	      0xe800000000	                          call 0x400310a	      1960	buffer.c	FUNCTION_26	IF_14	CALL_18
0x30ca	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1960	buffer.c	FUNCTION_26	IF_14	CALL_18
0x30d1	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      1961	buffer.c	FUNCTION_26	IF_14	IF_15
0x30d9	            0x7519	                           jne 0x4003134	      1961	buffer.c	FUNCTION_26	IF_14	IF_15
0x30db	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1963	buffer.c	FUNCTION_26	IF_14	IF_15	CALL_19
0x30e2	          0x4889c7	                            mov rdi, rax	      1963	buffer.c	FUNCTION_26	IF_14	IF_15	CALL_19
0x30e5	      0xe800000000	                          call 0x400312a	      1963	buffer.c	FUNCTION_26	IF_14	IF_15	CALL_19
0x30ea	      0xb800000000	                              mov eax, 0	      1964	buffer.c	FUNCTION_26	IF_14	IF_15
0x30ef	      0xe9b2050000	                           jmp 0x40036e6	      1964	buffer.c	FUNCTION_26	IF_14	IF_15
0x30f4	      0xe800000000	                          call 0x4003139	      1968	buffer.c	FUNCTION_26	IF_14	CALL_20
0x30f9	          0x4889c2	                            mov rdx, rax	      1968	buffer.c	FUNCTION_26	IF_14	CALL_20
0x30fc	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1968	buffer.c	FUNCTION_26	IF_14	CALL_20
0x3103	    0x488990301700	          mov qword [rax + 0x1730], rdx 	      1968	buffer.c	FUNCTION_26	IF_14	CALL_20
0x310a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1969	buffer.c	FUNCTION_26	IF_14	IF_16
0x3111	    0x488b80301700	          mov rax, qword [rax + 0x1730] 	      1969	buffer.c	FUNCTION_26	IF_14	IF_16
0x3118	          0x4885c0	                           test rax, rax	      1969	buffer.c	FUNCTION_26	IF_14	IF_16
0x311b	            0x7528	                           jne 0x4003185	      1969	buffer.c	FUNCTION_26	IF_14	IF_16
0x311d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1971	buffer.c	FUNCTION_26	IF_14	IF_16	CALL_21
0x3124	          0x4889c7	                            mov rdi, rax	      1971	buffer.c	FUNCTION_26	IF_14	IF_16	CALL_21
0x3127	      0xe800000000	                          call 0x400316c	      1971	buffer.c	FUNCTION_26	IF_14	IF_16	CALL_21
0x312c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1972	buffer.c	FUNCTION_26	IF_14	IF_16	CALL_22
0x3133	          0x4889c7	                            mov rdi, rax	      1972	buffer.c	FUNCTION_26	IF_14	IF_16	CALL_22
0x3136	      0xe800000000	                          call 0x400317b	      1972	buffer.c	FUNCTION_26	IF_14	IF_16	CALL_22
0x313b	      0xb800000000	                              mov eax, 0	      1973	buffer.c	FUNCTION_26	IF_14	IF_16
0x3140	      0xe961050000	                           jmp 0x40036e6	      1973	buffer.c	FUNCTION_26	IF_14	IF_16
0x3145	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1975	buffer.c	FUNCTION_26	IF_14	CALL_23
0x314c	    0x488d88181700	                 lea rcx, [rax + 0x1718]	      1975	buffer.c	FUNCTION_26	IF_14	CALL_23
0x3153	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1975	buffer.c	FUNCTION_26	IF_14	CALL_23
0x315a	    0x488b80301700	          mov rax, qword [rax + 0x1730] 	      1975	buffer.c	FUNCTION_26	IF_14	CALL_23
0x3161	      0xba01000000	                              mov edx, 1	      1975	buffer.c	FUNCTION_26	IF_14	CALL_23
0x3166	          0x4889ce	                            mov rsi, rcx	      1975	buffer.c	FUNCTION_26	IF_14	CALL_23
0x3169	          0x4889c7	                            mov rdi, rax	      1975	buffer.c	FUNCTION_26	IF_14	CALL_23
0x316c	      0xe800000000	                          call 0x40031b1	      1975	buffer.c	FUNCTION_26	IF_14	CALL_23
0x3171	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1977	buffer.c	FUNCTION_26	IF_14	CALL_24
0x3178	          0x4889c7	                            mov rdi, rax	      1977	buffer.c	FUNCTION_26	IF_14	CALL_24
0x317b	      0xe8e9e2ffff	               call sym.init_changedtick	      1977	buffer.c	FUNCTION_26	IF_14	CALL_24
0x3180	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1980	buffer.c	FUNCTION_26	IF_17
0x3187	          0x4885c0	                           test rax, rax	      1980	buffer.c	FUNCTION_26	IF_17
0x318a	            0x7435	                            je 0x4003201	      1980	buffer.c	FUNCTION_26	IF_17
0x318c	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1982	buffer.c	FUNCTION_26	IF_17
0x3193	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1982	buffer.c	FUNCTION_26	IF_17
0x319a	    0x488990880000	             mov qword [rax + 0x88], rdx	      1982	buffer.c	FUNCTION_26	IF_17
0x31a1	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      1983	buffer.c	FUNCTION_26	IF_17	CALL_25
0x31a8	          0x4889c7	                            mov rdi, rax	      1983	buffer.c	FUNCTION_26	IF_17	CALL_25
0x31ab	      0xe800000000	                          call 0x40031f0	      1983	buffer.c	FUNCTION_26	IF_17	CALL_25
0x31b0	          0x4889c2	                            mov rdx, rax	      1983	buffer.c	FUNCTION_26	IF_17	CALL_25
0x31b3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1983	buffer.c	FUNCTION_26	IF_17	CALL_25
0x31ba	    0x488990900000	             mov qword [rax + 0x90], rdx	      1983	buffer.c	FUNCTION_26	IF_17	CALL_25
0x31c1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1986	buffer.c	FUNCTION_26	CALL_26
0x31c8	          0x4889c7	                            mov rdi, rax	      1986	buffer.c	FUNCTION_26	CALL_26
0x31cb	      0xe845e4ffff	                  call sym.clear_wininfo	      1986	buffer.c	FUNCTION_26	CALL_26
0x31d0	      0xbf08020000	                          mov edi, 0x208	      1987	buffer.c	FUNCTION_26	CALL_27
0x31d5	      0xe800000000	                          call 0x400321a	      1987	buffer.c	FUNCTION_26	CALL_27
0x31da	          0x4889c2	                            mov rdx, rax	      1987	buffer.c	FUNCTION_26	CALL_27
0x31dd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1987	buffer.c	FUNCTION_26	CALL_27
0x31e4	    0x488990280100	            mov qword [rax + 0x128], rdx	      1987	buffer.c	FUNCTION_26	CALL_27
0x31eb	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1989	buffer.c	FUNCTION_26	IF_18
0x31f2	          0x4885c0	                           test rax, rax	      1989	buffer.c	FUNCTION_26	IF_18
0x31f5	            0x7426	                            je 0x400325d	      1989	buffer.c	FUNCTION_26	IF_18
0x31f7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1989	buffer.c	FUNCTION_26	IF_18
0x31fe	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1989	buffer.c	FUNCTION_26	IF_18
0x3205	          0x4885c0	                           test rax, rax	      1989	buffer.c	FUNCTION_26	IF_18
0x3208	            0x742a	                            je 0x4003274	      1989	buffer.c	FUNCTION_26	IF_18
0x320a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1989	buffer.c	FUNCTION_26	IF_18
0x3211	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      1989	buffer.c	FUNCTION_26	IF_18
0x3218	          0x4885c0	                           test rax, rax	      1989	buffer.c	FUNCTION_26	IF_18
0x321b	            0x7417	                            je 0x4003274	      1989	buffer.c	FUNCTION_26	IF_18
0x321d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1990	buffer.c	FUNCTION_26	IF_18
0x3224	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      1990	buffer.c	FUNCTION_26	IF_18
0x322b	          0x4885c0	                           test rax, rax	      1990	buffer.c	FUNCTION_26	IF_18
0x322e	     0xf859f000000	                           jne 0x4003313	      1990	buffer.c	FUNCTION_26	IF_18
0x3234	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1992	buffer.c	FUNCTION_26	IF_18	CALL_28
0x323b	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1992	buffer.c	FUNCTION_26	IF_18	CALL_28
0x3242	          0x4885c0	                           test rax, rax	      1992	buffer.c	FUNCTION_26	IF_18	CALL_28
0x3245	            0x7428	                            je 0x40032af	      1992	buffer.c	FUNCTION_26	IF_18	CALL_28
0x3247	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1992	buffer.c	FUNCTION_26	IF_18	CALL_28
0x324e	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1992	buffer.c	FUNCTION_26	IF_18	CALL_28
0x3255	          0x4889c7	                            mov rdi, rax	      1992	buffer.c	FUNCTION_26	IF_18	CALL_28
0x3258	      0xe800000000	                          call 0x400329d	      1992	buffer.c	FUNCTION_26	IF_18	CALL_28
0x325d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1992	buffer.c	FUNCTION_26	IF_18	CALL_28
0x3264	    0x48c780880000	               mov qword [rax + 0x88], 0	      1992	buffer.c	FUNCTION_26	IF_18	CALL_28
0x326f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1993	buffer.c	FUNCTION_26	IF_18	CALL_29
0x3276	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      1993	buffer.c	FUNCTION_26	IF_18	CALL_29
0x327d	          0x4885c0	                           test rax, rax	      1993	buffer.c	FUNCTION_26	IF_18	CALL_29
0x3280	            0x7428	                            je 0x40032ea	      1993	buffer.c	FUNCTION_26	IF_18	CALL_29
0x3282	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1993	buffer.c	FUNCTION_26	IF_18	CALL_29
0x3289	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      1993	buffer.c	FUNCTION_26	IF_18	CALL_29
0x3290	          0x4889c7	                            mov rdi, rax	      1993	buffer.c	FUNCTION_26	IF_18	CALL_29
0x3293	      0xe800000000	                          call 0x40032d8	      1993	buffer.c	FUNCTION_26	IF_18	CALL_29
0x3298	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1993	buffer.c	FUNCTION_26	IF_18	CALL_29
0x329f	    0x48c780900000	               mov qword [rax + 0x90], 0	      1993	buffer.c	FUNCTION_26	IF_18	CALL_29
0x32aa	    0x488b05000000	            mov rax, qword [0x040032f1] 	      1994	buffer.c	FUNCTION_26	IF_18	IF_19
0x32b1	    0x48398548ffff	            cmp qword [rbp - 0xb8], rax 	      1994	buffer.c	FUNCTION_26	IF_18	IF_19
0x32b8	            0x740f	                            je 0x4003309	      1994	buffer.c	FUNCTION_26	IF_18	IF_19
0x32ba	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1995	buffer.c	FUNCTION_26	IF_18	CALL_30
0x32c1	          0x4889c7	                            mov rdi, rax	      1995	buffer.c	FUNCTION_26	IF_18	CALL_30
0x32c4	      0xe8dbe0ffff	                    call sym.free_buffer	      1995	buffer.c	FUNCTION_26	IF_18	CALL_30
0x32c9	      0xb800000000	                              mov eax, 0	      1996	buffer.c	FUNCTION_26	IF_18
0x32ce	      0xe9d3030000	                           jmp 0x40036e6	      1996	buffer.c	FUNCTION_26	IF_18
0x32d3	    0x488b05000000	            mov rax, qword [0x0400331a] 	      1999	buffer.c	FUNCTION_26	IF_20
0x32da	    0x48398548ffff	            cmp qword [rbp - 0xb8], rax 	      1999	buffer.c	FUNCTION_26	IF_20
0x32e1	     0xf859e000000	                           jne 0x40033c5	      1999	buffer.c	FUNCTION_26	IF_20
0x32e7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2002	buffer.c	FUNCTION_26	IF_20	CALL_31
0x32ee	      0xbe00000000	                              mov esi, 0	      2002	buffer.c	FUNCTION_26	IF_20	CALL_31
0x32f3	          0x4889c7	                            mov rdi, rax	      2002	buffer.c	FUNCTION_26	IF_20	CALL_31
0x32f6	      0xe800000000	                          call 0x400333b	      2002	buffer.c	FUNCTION_26	IF_20	CALL_31
0x32fb	    0x488b05000000	            mov rax, qword [0x04003342] 	      2003	buffer.c	FUNCTION_26	IF_20	IF_21
0x3302	    0x48398548ffff	            cmp qword [rbp - 0xb8], rax 	      2003	buffer.c	FUNCTION_26	IF_20	IF_21
0x3309	            0x740a	                            je 0x4003355	      2003	buffer.c	FUNCTION_26	IF_20	IF_21
0x330b	      0xb800000000	                              mov eax, 0	      2004	buffer.c	FUNCTION_26	IF_20	IF_21
0x3310	      0xe991030000	                           jmp 0x40036e6	      2004	buffer.c	FUNCTION_26	IF_20	IF_21
0x3315	      0xe800000000	                          call 0x400335a	      2006	buffer.c	FUNCTION_26	IF_20	IF_22	CALL_32
0x331a	            0x85c0	                           test eax, eax	      2006	buffer.c	FUNCTION_26	IF_20	IF_22	CALL_32
0x331c	            0x740a	                            je 0x4003368	      2006	buffer.c	FUNCTION_26	IF_20	IF_22	CALL_32
0x331e	      0xb800000000	                              mov eax, 0	      2007	buffer.c	FUNCTION_26	IF_20	IF_22
0x3323	      0xe97e030000	                           jmp 0x40036e6	      2007	buffer.c	FUNCTION_26	IF_20	IF_22
0x3328	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2009	buffer.c	FUNCTION_26	IF_20	CALL_33
0x332f	      0xbe00000000	                              mov esi, 0	      2009	buffer.c	FUNCTION_26	IF_20	CALL_33
0x3334	          0x4889c7	                            mov rdi, rax	      2009	buffer.c	FUNCTION_26	IF_20	CALL_33
0x3337	      0xe8a8e1ffff	              call sym.free_buffer_stuff	      2009	buffer.c	FUNCTION_26	IF_20	CALL_33
0x333c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2012	buffer.c	FUNCTION_26	IF_20
0x3343	    0xc780a8120000	            mov dword [rax + 0x12a8], 0 	      2012	buffer.c	FUNCTION_26	IF_20
0x334d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2013	buffer.c	FUNCTION_26	IF_20	CALL_34
0x3354	      0xbe01000000	                              mov esi, 1	      2013	buffer.c	FUNCTION_26	IF_20	CALL_34
0x3359	          0x4889c7	                            mov rdi, rax	      2013	buffer.c	FUNCTION_26	IF_20	CALL_34
0x335c	      0xe800000000	                          call 0x40033a1	      2013	buffer.c	FUNCTION_26	IF_20	CALL_34
0x3361	    0x488b05000000	            mov rax, qword [0x040033a8] 	      2017	buffer.c	FUNCTION_26	IF_20
0x3368	    0x488b15000000	            mov rdx, qword [0x040033af] 	      2017	buffer.c	FUNCTION_26	IF_20
0x336f	     0xfb792881200	         movzx edx, word [rdx + 0x1288] 	      2017	buffer.c	FUNCTION_26	IF_20
0x3376	          0x83ca01	                               or edx, 1	      2017	buffer.c	FUNCTION_26	IF_20
0x3379	    0x668990881200	            mov word [rax + 0x1288], dx 	      2017	buffer.c	FUNCTION_26	IF_20
0x3380	      0xe9ef000000	                           jmp 0x40034b4	      2017	buffer.c	FUNCTION_26	IF_20
0x3385	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2025	buffer.c	FUNCTION_26	ELSE_1
0x338c	    0x48c740680000	               mov qword [rax + 0x68], 0	      2025	buffer.c	FUNCTION_26	ELSE_1
0x3394	    0x488b05000000	            mov rax, qword [0x040033db] 	      2026	buffer.c	FUNCTION_26	ELSE_1	IF_23
0x339b	          0x4885c0	                           test rax, rax	      2026	buffer.c	FUNCTION_26	ELSE_1	IF_23
0x339e	            0x751f	                           jne 0x40033ff	      2026	buffer.c	FUNCTION_26	ELSE_1	IF_23
0x33a0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2028	buffer.c	FUNCTION_26	ELSE_1	IF_23
0x33a7	    0x48c740700000	               mov qword [rax + 0x70], 0	      2028	buffer.c	FUNCTION_26	ELSE_1	IF_23
0x33af	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2029	buffer.c	FUNCTION_26	ELSE_1	IF_23
0x33b6	    0x488905000000	            mov qword [0x040033fd], rax 	      2029	buffer.c	FUNCTION_26	ELSE_1	IF_23
0x33bd	            0xeb24	                           jmp 0x4003423	      2029	buffer.c	FUNCTION_26	ELSE_1	IF_23
0x33bf	    0x488b05000000	            mov rax, qword [0x04003406] 	      2033	buffer.c	FUNCTION_26	ELSE_1	ELSE_2
0x33c6	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      2033	buffer.c	FUNCTION_26	ELSE_1	ELSE_2
0x33cd	        0x48895068	             mov qword [rax + 0x68], rdx	      2033	buffer.c	FUNCTION_26	ELSE_1	ELSE_2
0x33d1	    0x488b15000000	            mov rdx, qword [0x04003418] 	      2034	buffer.c	FUNCTION_26	ELSE_1	ELSE_2
0x33d8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2034	buffer.c	FUNCTION_26	ELSE_1	ELSE_2
0x33df	        0x48895070	             mov qword [rax + 0x70], rdx	      2034	buffer.c	FUNCTION_26	ELSE_1	ELSE_2
0x33e3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2036	buffer.c	FUNCTION_26	ELSE_1
0x33ea	    0x488905000000	            mov qword [0x04003431], rax 	      2036	buffer.c	FUNCTION_26	ELSE_1
0x33f1	    0x8b0500000000	            mov eax, dword [0x04003437] 	      2038	buffer.c	FUNCTION_26	ELSE_1
0x33f7	          0x8d5001	                      lea edx, [rax + 1]	      2038	buffer.c	FUNCTION_26	ELSE_1
0x33fa	    0x891500000000	            mov dword [0x04003440], edx 	      2038	buffer.c	FUNCTION_26	ELSE_1
0x3400	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      2038	buffer.c	FUNCTION_26	ELSE_1
0x3407	    0x8982b8000000	             mov dword [rdx + 0xb8], eax	      2038	buffer.c	FUNCTION_26	ELSE_1
0x340d	    0x8b0500000000	            mov eax, dword [0x04003453] 	      2039	buffer.c	FUNCTION_26	ELSE_1	IF_24
0x3413	            0x85c0	                           test eax, eax	      2039	buffer.c	FUNCTION_26	ELSE_1	IF_24
0x3415	            0x793a	                           jns 0x4003491	      2039	buffer.c	FUNCTION_26	ELSE_1	IF_24
0x3417	      0xbf00000000	                              mov edi, 0	      2041	buffer.c	FUNCTION_26	ELSE_1	IF_24	CALL_36
0x341c	      0xe800000000	                          call 0x4003461	      2041	buffer.c	FUNCTION_26	ELSE_1	IF_24	CALL_36
0x3421	          0x4889c7	                            mov rdi, rax	      2041	buffer.c	FUNCTION_26	ELSE_1	IF_24	CALL_36
0x3424	      0xe800000000	                          call 0x4003469	      2041	buffer.c	FUNCTION_26	ELSE_1	IF_24	CALL_36
0x3429	    0x8b0500000000	            mov eax, dword [0x0400346f] 	      2042	buffer.c	FUNCTION_26	ELSE_1	IF_24	IF_25
0x342f	            0x85c0	                           test eax, eax	      2042	buffer.c	FUNCTION_26	ELSE_1	IF_24	IF_25
0x3431	            0x7514	                           jne 0x4003487	      2042	buffer.c	FUNCTION_26	ELSE_1	IF_24	IF_25
0x3433	      0xe800000000	                          call 0x4003478	      2044	buffer.c	FUNCTION_26	ELSE_1	IF_24	IF_25	CALL_37
0x3438	      0xbe01000000	                              mov esi, 1	      2045	buffer.c	FUNCTION_26	ELSE_1	IF_24	IF_25	CALL_38
0x343d	      0xbfb80b0000	                          mov edi, 0xbb8	      2045	buffer.c	FUNCTION_26	ELSE_1	IF_24	IF_25	CALL_38
0x3442	      0xe800000000	                          call 0x4003487	      2045	buffer.c	FUNCTION_26	ELSE_1	IF_24	IF_25	CALL_38
0x3447	    0xc70500000000	               mov dword [0x04003491], 1	      2047	buffer.c	FUNCTION_26	ELSE_1	IF_24
0x3451	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2049	buffer.c	FUNCTION_26	ELSE_1	CALL_39
0x3458	          0x4889c7	                            mov rdi, rax	      2049	buffer.c	FUNCTION_26	ELSE_1	CALL_39
0x345b	      0xe83dd4ffff	                call sym.buf_hashtab_add	      2049	buffer.c	FUNCTION_26	ELSE_1	CALL_39
0x3460	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2054	buffer.c	FUNCTION_26	ELSE_1	CALL_40
0x3467	      0xbe02000000	                              mov esi, 2	      2054	buffer.c	FUNCTION_26	ELSE_1	CALL_40
0x346c	          0x4889c7	                            mov rdi, rax	      2054	buffer.c	FUNCTION_26	ELSE_1	CALL_40
0x346f	      0xe800000000	                          call 0x40034b4	      2054	buffer.c	FUNCTION_26	ELSE_1	CALL_40
0x3474	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2057	buffer.c	FUNCTION_26
0x347b	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      2057	buffer.c	FUNCTION_26
0x3482	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      2057	buffer.c	FUNCTION_26
0x3489	        0x48895018	             mov qword [rax + 0x18], rdx	      2057	buffer.c	FUNCTION_26
0x348d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2058	buffer.c	FUNCTION_26
0x3494	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      2058	buffer.c	FUNCTION_26
0x349b	    0x488b15000000	            mov rdx, qword [0x040034e2] 	      2058	buffer.c	FUNCTION_26
0x34a2	        0x48895010	             mov qword [rax + 0x10], rdx	      2058	buffer.c	FUNCTION_26
0x34a6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2061	buffer.c	FUNCTION_26	CALL_41
0x34ad	    0x480568170000	                         add rax, 0x1768	      2061	buffer.c	FUNCTION_26	CALL_41
0x34b3	          0x4889c7	                            mov rdi, rax	      2061	buffer.c	FUNCTION_26	CALL_41
0x34b6	      0xe800000000	                          call 0x40034fb	      2061	buffer.c	FUNCTION_26	CALL_41
0x34bb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2062	buffer.c	FUNCTION_26	CALL_42
0x34c2	    0x480590180000	                         add rax, 0x1890	      2062	buffer.c	FUNCTION_26	CALL_42
0x34c8	          0x4889c7	                            mov rdi, rax	      2062	buffer.c	FUNCTION_26	CALL_42
0x34cb	      0xe800000000	                          call 0x4003510	      2062	buffer.c	FUNCTION_26	CALL_42
0x34d0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2065	buffer.c	FUNCTION_26
0x34d7	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      2065	buffer.c	FUNCTION_26
0x34de	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2065	buffer.c	FUNCTION_26
0x34e5	    0x488990980000	             mov qword [rax + 0x98], rdx	      2065	buffer.c	FUNCTION_26
0x34ec	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2067	buffer.c	FUNCTION_26	IF_26
0x34f3	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2067	buffer.c	FUNCTION_26	IF_26
0x34f7	            0x7513	                           jne 0x400354c	      2067	buffer.c	FUNCTION_26	IF_26
0x34f9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2068	buffer.c	FUNCTION_26	IF_26
0x3500	    0xc780a0000000	               mov dword [rax + 0xa0], 0	      2068	buffer.c	FUNCTION_26	IF_26
0x350a	            0xeb3b	                           jmp 0x4003587	      2068	buffer.c	FUNCTION_26	IF_26
0x350c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2071	buffer.c	FUNCTION_26	ELSE_3
0x3513	    0xc780a0000000	               mov dword [rax + 0xa0], 1	      2071	buffer.c	FUNCTION_26	ELSE_3
0x351d	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      2072	buffer.c	FUNCTION_26	ELSE_3
0x3524	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2072	buffer.c	FUNCTION_26	ELSE_3
0x352b	    0x488990a80000	             mov qword [rax + 0xa8], rdx	      2072	buffer.c	FUNCTION_26	ELSE_3
0x3532	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      2073	buffer.c	FUNCTION_26	ELSE_3
0x3539	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2073	buffer.c	FUNCTION_26	ELSE_3
0x3540	    0x488990b00000	             mov qword [rax + 0xb0], rdx	      2073	buffer.c	FUNCTION_26	ELSE_3
0x3547	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2076	buffer.c	FUNCTION_26
0x354e	    0xc78034120000	            mov dword [rax + 0x1234], 1 	      2076	buffer.c	FUNCTION_26
0x3558	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2077	buffer.c	FUNCTION_26
0x355f	    0xc7407c060000	               mov dword [rax + 0x7c], 6	      2077	buffer.c	FUNCTION_26
0x3566	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2078	buffer.c	FUNCTION_26	IF_27
0x356c	          0x83e004	                              and eax, 4	      2078	buffer.c	FUNCTION_26	IF_27
0x356f	            0x85c0	                           test eax, eax	      2078	buffer.c	FUNCTION_26	IF_27
0x3571	            0x7418	                            je 0x40035cb	      2078	buffer.c	FUNCTION_26	IF_27
0x3573	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2079	buffer.c	FUNCTION_26	IF_27
0x357a	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      2079	buffer.c	FUNCTION_26	IF_27
0x357d	             0xc80	                             or al, 0x80	      2079	buffer.c	FUNCTION_26	IF_27
0x357f	            0x89c2	                            mov edx, eax	      2079	buffer.c	FUNCTION_26	IF_27
0x3581	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2079	buffer.c	FUNCTION_26	IF_27
0x3588	          0x89507c	             mov dword [rax + 0x7c], edx	      2079	buffer.c	FUNCTION_26	IF_27
0x358b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2080	buffer.c	FUNCTION_26	CALL_43
0x3592	          0x4889c7	                            mov rdi, rax	      2080	buffer.c	FUNCTION_26	CALL_43
0x3595	      0xe800000000	                          call 0x40035da	      2080	buffer.c	FUNCTION_26	CALL_43
0x359a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2081	buffer.c	FUNCTION_26	CALL_44
0x35a1	          0x4889c7	                            mov rdi, rax	      2081	buffer.c	FUNCTION_26	CALL_44
0x35a4	      0xe800000000	                          call 0x40035e9	      2081	buffer.c	FUNCTION_26	CALL_44
0x35a9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2082	buffer.c	FUNCTION_26	CALL_45
0x35b0	          0x4889c7	                            mov rdi, rax	      2082	buffer.c	FUNCTION_26	CALL_45
0x35b3	      0xe800000000	                          call 0x40035f8	      2082	buffer.c	FUNCTION_26	CALL_45
0x35b8	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2083	buffer.c	FUNCTION_26
0x35be	          0x83e002	                              and eax, 2	      2083	buffer.c	FUNCTION_26
0x35c1	            0x85c0	                           test eax, eax	      2083	buffer.c	FUNCTION_26
0x35c3	           0xf95c0	                                setne al	      2083	buffer.c	FUNCTION_26
0x35c6	           0xfb6d0	                           movzx edx, al	      2083	buffer.c	FUNCTION_26
0x35c9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2083	buffer.c	FUNCTION_26
0x35d0	    0x899024140000	          mov dword [rax + 0x1424], edx 	      2083	buffer.c	FUNCTION_26
0x35d6	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2084	buffer.c	FUNCTION_26	IF_28
0x35dc	          0x83e004	                              and eax, 4	      2084	buffer.c	FUNCTION_26	IF_28
0x35df	            0x85c0	                           test eax, eax	      2084	buffer.c	FUNCTION_26	IF_28
0x35e1	     0xf85b8000000	                           jne 0x40036df	      2084	buffer.c	FUNCTION_26	IF_28
0x35e7	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      2091	buffer.c	FUNCTION_26	IF_28	CALL_46
0x35ee	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      2091	buffer.c	FUNCTION_26	IF_28	CALL_46
0x35f5	          0x4889d6	                            mov rsi, rdx	      2091	buffer.c	FUNCTION_26	IF_28	CALL_46
0x35f8	          0x4889c7	                            mov rdi, rax	      2091	buffer.c	FUNCTION_26	IF_28	CALL_46
0x35fb	      0xe800000000	                          call 0x4003640	      2091	buffer.c	FUNCTION_26	IF_28	CALL_46
0x3600	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2092	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_47
0x3607	          0x4989c0	                             mov r8, rax	      2092	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_47
0x360a	      0xb900000000	                              mov ecx, 0	      2092	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_47
0x360f	      0xba00000000	                              mov edx, 0	      2092	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_47
0x3614	      0xbe00000000	                              mov esi, 0	      2092	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_47
0x3619	      0xbf07000000	                              mov edi, 7	      2092	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_47
0x361e	      0xe800000000	                          call 0x4003663	      2092	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_47
0x3623	            0x85c0	                           test eax, eax	      2092	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_47
0x3625	            0x741a	                            je 0x4003681	      2092	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_47
0x3627	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      2093	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_48
0x362e	          0x4889c7	                            mov rdi, rax	      2093	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_48
0x3631	      0xe800000000	                          call 0x4003676	      2093	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_48
0x3636	            0x85c0	                           test eax, eax	      2093	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_48
0x3638	            0x7507	                           jne 0x4003681	      2093	buffer.c	FUNCTION_26	IF_28	IF_29	CALL_48
0x363a	      0xb800000000	                              mov eax, 0	      2094	buffer.c	FUNCTION_26	IF_28	IF_29
0x363f	            0xeb65	                           jmp 0x40036e6	      2094	buffer.c	FUNCTION_26	IF_28	IF_29
0x3641	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      2095	buffer.c	FUNCTION_26	IF_28	IF_30
0x3647	          0x83e002	                              and eax, 2	      2095	buffer.c	FUNCTION_26	IF_28	IF_30
0x364a	            0x85c0	                           test eax, eax	      2095	buffer.c	FUNCTION_26	IF_28	IF_30
0x364c	            0x7441	                            je 0x40036cf	      2095	buffer.c	FUNCTION_26	IF_28	IF_30
0x364e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2097	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_49
0x3655	          0x4989c0	                             mov r8, rax	      2097	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_49
0x3658	      0xb900000000	                              mov ecx, 0	      2097	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_49
0x365d	      0xba00000000	                              mov edx, 0	      2097	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_49
0x3662	      0xbe00000000	                              mov esi, 0	      2097	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_49
0x3667	      0xbf00000000	                              mov edi, 0	      2097	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_49
0x366c	      0xe800000000	                          call 0x40036b1	      2097	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_49
0x3671	            0x85c0	                           test eax, eax	      2097	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_49
0x3673	            0x741a	                            je 0x40036cf	      2097	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_49
0x3675	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      2098	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_50
0x367c	          0x4889c7	                            mov rdi, rax	      2098	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_50
0x367f	      0xe800000000	                          call 0x40036c4	      2098	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_50
0x3684	            0x85c0	                           test eax, eax	      2098	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_50
0x3686	            0x7507	                           jne 0x40036cf	      2098	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31	CALL_50
0x3688	      0xb800000000	                              mov eax, 0	      2099	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31
0x368d	            0xeb17	                           jmp 0x40036e6	      2099	buffer.c	FUNCTION_26	IF_28	IF_30	IF_31
0x368f	      0xe800000000	                          call 0x40036d4	      2102	buffer.c	FUNCTION_26	IF_28	IF_32	CALL_51
0x3694	            0x85c0	                           test eax, eax	      2102	buffer.c	FUNCTION_26	IF_28	IF_32	CALL_51
0x3696	            0x7407	                            je 0x40036df	      2102	buffer.c	FUNCTION_26	IF_28	IF_32	CALL_51
0x3698	      0xb800000000	                              mov eax, 0	      2103	buffer.c	FUNCTION_26	IF_28	IF_32
0x369d	            0xeb07	                           jmp 0x40036e6	      2103	buffer.c	FUNCTION_26	IF_28	IF_32
0x369f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2107	buffer.c	FUNCTION_26
0x36a6	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2108	buffer.c	FUNCTION_26
0x36aa	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2108	buffer.c	FUNCTION_26
0x36b3	            0x7405	                            je 0x40036fa	      2108	buffer.c	FUNCTION_26
0x36b5	      0xe800000000	                          call 0x40036fa	      2108	buffer.c	FUNCTION_26
0x36ba	              0xc9	                                   leave	      2108	buffer.c	FUNCTION_26
0x36bb	              0xc3	                                     ret	      2108	buffer.c	FUNCTION_26
bt_quickfix	FOR,0:WHILE,0:ELSE,0:functions,0:IF,0:CALL,0:SWITCH,0:DO,0	15
0xb60e	              0x55	                                push rbp	      5599	buffer.c	FUNCTION_77
0xb60f	          0x4889e5	                            mov rbp, rsp	      5599	buffer.c	FUNCTION_77
0xb612	        0x48897df8	                mov qword [rbp - 8], rdi	      5599	buffer.c	FUNCTION_77
0xb616	      0x48837df800	                  cmp qword [rbp - 8], 0	      5600	buffer.c	FUNCTION_77
0xb61b	            0x7419	                            je 0x400b676	      5600	buffer.c	FUNCTION_77
0xb61d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5600	buffer.c	FUNCTION_77
0xb621	    0x488b80181400	          mov rax, qword [rax + 0x1418] 	      5600	buffer.c	FUNCTION_77
0xb628	           0xfb600	                   movzx eax, byte [rax]	      5600	buffer.c	FUNCTION_77
0xb62b	            0x3c71	                            cmp al, 0x71	      5600	buffer.c	FUNCTION_77
0xb62d	            0x7507	                           jne 0x400b676	      5600	buffer.c	FUNCTION_77
0xb62f	      0xb801000000	                              mov eax, 1	      5600	buffer.c	FUNCTION_77
0xb634	            0xeb05	                           jmp 0x400b67b	      5600	buffer.c	FUNCTION_77
0xb636	      0xb800000000	                              mov eax, 0	      5600	buffer.c	FUNCTION_77
0xb63b	              0x5d	                                 pop rbp	      5601	buffer.c	FUNCTION_77
0xb63c	              0xc3	                                     ret	      5601	buffer.c	FUNCTION_77
buf_getsigntype	FOR,1:WHILE,0:ELSE,0:functions,0:IF,1:CALL,3:SWITCH,0:DO,0	52
0xbd52	              0x55	                                push rbp	      5914	buffer.c	FUNCTION_91
0xbd53	          0x4889e5	                            mov rbp, rsp	      5914	buffer.c	FUNCTION_91
0xbd56	        0x4883ec30	                           sub rsp, 0x30	      5914	buffer.c	FUNCTION_91
0xbd5a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5914	buffer.c	FUNCTION_91
0xbd5e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5914	buffer.c	FUNCTION_91
0xbd62	          0x8955dc	             mov dword [rbp - 0x24], edx	      5914	buffer.c	FUNCTION_91
0xbd65	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5917	buffer.c	FUNCTION_91	FOR_1
0xbd69	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      5917	buffer.c	FUNCTION_91	FOR_1
0xbd70	        0x488945f8	                mov qword [rbp - 8], rax	      5917	buffer.c	FUNCTION_91	FOR_1
0xbd74	            0xeb78	                           jmp 0x400be2e	      5917	buffer.c	FUNCTION_91	FOR_1
0xbd76	        0x488b45f8	                mov rax, qword [rbp - 8]	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0xbd7a	        0x488b4008	                mov rax, qword [rax + 8]	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0xbd7e	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0xbd82	            0x755e	                           jne 0x400be22	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0xbd84	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      5919	buffer.c	FUNCTION_91	FOR_1	IF_1
0xbd88	            0x744f	                            je 0x400be19	      5919	buffer.c	FUNCTION_91	FOR_1	IF_1
0xbd8a	        0x837ddc02	               cmp dword [rbp - 0x24], 2	      5921	buffer.c	FUNCTION_91	FOR_1	IF_1
0xbd8e	            0x7513	                           jne 0x400bde3	      5921	buffer.c	FUNCTION_91	FOR_1	IF_1
0xbd90	        0x488b45f8	                mov rax, qword [rbp - 8]	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0xbd94	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0xbd97	            0x89c7	                            mov edi, eax	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0xbd99	      0xe800000000	                          call 0x400bdde	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0xbd9e	          0x4885c0	                           test rax, rax	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0xbda1	            0x7536	                           jne 0x400be19	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0xbda3	        0x837ddc03	               cmp dword [rbp - 0x24], 3	      5924	buffer.c	FUNCTION_91	FOR_1	IF_1
0xbda7	            0x7513	                           jne 0x400bdfc	      5924	buffer.c	FUNCTION_91	FOR_1	IF_1
0xbda9	        0x488b45f8	                mov rax, qword [rbp - 8]	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0xbdad	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0xbdb0	            0x89c7	                            mov edi, eax	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0xbdb2	      0xe800000000	                          call 0x400bdf7	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0xbdb7	          0x4885c0	                           test rax, rax	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0xbdba	            0x751d	                           jne 0x400be19	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0xbdbc	        0x837ddc01	               cmp dword [rbp - 0x24], 1	      5926	buffer.c	FUNCTION_91	FOR_1	IF_1
0xbdc0	            0x7520	                           jne 0x400be22	      5926	buffer.c	FUNCTION_91	FOR_1	IF_1
0xbdc2	        0x488b45f8	                mov rax, qword [rbp - 8]	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0xbdc6	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0xbdc9	      0xbe01000000	                              mov esi, 1	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0xbdce	            0x89c7	                            mov edi, eax	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0xbdd0	      0xe800000000	                          call 0x400be15	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0xbdd5	            0x85c0	                           test eax, eax	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0xbdd7	            0x7409	                            je 0x400be22	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0xbdd9	        0x488b45f8	                mov rax, qword [rbp - 8]	      5928	buffer.c	FUNCTION_91	FOR_1	IF_1
0xbddd	          0x8b4010	            mov eax, dword [rax + 0x10] 	      5928	buffer.c	FUNCTION_91	FOR_1	IF_1
0xbde0	            0xeb18	                           jmp 0x400be3a	      5928	buffer.c	FUNCTION_91	FOR_1	IF_1
0xbde2	        0x488b45f8	                mov rax, qword [rbp - 8]	      5917	buffer.c	FUNCTION_91	FOR_1
0xbde6	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5917	buffer.c	FUNCTION_91	FOR_1
0xbdea	        0x488945f8	                mov qword [rbp - 8], rax	      5917	buffer.c	FUNCTION_91	FOR_1
0xbdee	      0x48837df800	                  cmp qword [rbp - 8], 0	      5917	buffer.c	FUNCTION_91	FOR_1
0xbdf3	            0x7581	                           jne 0x400bdb6	      5917	buffer.c	FUNCTION_91	FOR_1
0xbdf5	      0xb800000000	                              mov eax, 0	      5929	buffer.c	FUNCTION_91
0xbdfa	              0xc9	                                   leave	      5930	buffer.c	FUNCTION_91
0xbdfb	              0xc3	                                     ret	      5930	buffer.c	FUNCTION_91
ti_change	FOR,0:WHILE,0:ELSE,1:functions,0:IF,2:CALL,3:SWITCH,0:DO,0	48
0x6bf5	              0x55	                                push rbp	      3763	buffer.c	FUNCTION_62
0x6bf6	          0x4889e5	                            mov rbp, rsp	      3763	buffer.c	FUNCTION_62
0x6bf9	        0x4883ec10	                           sub rsp, 0x10	      3763	buffer.c	FUNCTION_62
0x6bfd	        0x48897df8	                mov qword [rbp - 8], rdi	      3763	buffer.c	FUNCTION_62
0x6c01	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3763	buffer.c	FUNCTION_62
0x6c05	      0x48837df800	                  cmp qword [rbp - 8], 0	      3764	buffer.c	FUNCTION_62	IF_1
0x6c0a	           0xf94c2	                                 sete dl	      3764	buffer.c	FUNCTION_62	IF_1
0x6c0d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3764	buffer.c	FUNCTION_62	IF_1
0x6c11	          0x488b00	                    mov rax, qword [rax]	      3764	buffer.c	FUNCTION_62	IF_1
0x6c14	          0x4885c0	                           test rax, rax	      3764	buffer.c	FUNCTION_62	IF_1
0x6c17	           0xf94c0	                                 sete al	      3764	buffer.c	FUNCTION_62	IF_1
0x6c1a	            0x31d0	                            xor eax, edx	      3764	buffer.c	FUNCTION_62	IF_1
0x6c1c	            0x84c0	                             test al, al	      3764	buffer.c	FUNCTION_62	IF_1
0x6c1e	            0x752d	                           jne 0x4006c8d	      3764	buffer.c	FUNCTION_62	IF_1
0x6c20	      0x48837df800	                  cmp qword [rbp - 8], 0	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x6c25	            0x7466	                            je 0x4006ccd	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x6c27	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x6c2b	          0x488b00	                    mov rax, qword [rax]	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x6c2e	          0x4885c0	                           test rax, rax	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x6c31	            0x745a	                            je 0x4006ccd	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x6c33	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x6c37	          0x488b10	                    mov rdx, qword [rax]	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x6c3a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x6c3e	          0x4889d6	                            mov rsi, rdx	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x6c41	          0x4889c7	                            mov rdi, rax	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x6c44	      0xe800000000	                          call 0x4006c89	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x6c49	            0x85c0	                           test eax, eax	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x6c4b	            0x7440	                            je 0x4006ccd	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x6c4d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x6c51	          0x488b00	                    mov rax, qword [rax]	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x6c54	          0x4889c7	                            mov rdi, rax	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x6c57	      0xe800000000	                          call 0x4006c9c	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x6c5c	      0x48837df800	                  cmp qword [rbp - 8], 0	      3768	buffer.c	FUNCTION_62	IF_1	IF_2
0x6c61	            0x750d	                           jne 0x4006cb0	      3768	buffer.c	FUNCTION_62	IF_1	IF_2
0x6c63	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3769	buffer.c	FUNCTION_62	IF_1	IF_2
0x6c67	    0x48c700000000	                      mov qword [rax], 0	      3769	buffer.c	FUNCTION_62	IF_1	IF_2
0x6c6e	            0xeb16	                           jmp 0x4006cc6	      3769	buffer.c	FUNCTION_62	IF_1	IF_2
0x6c70	        0x488b45f8	                mov rax, qword [rbp - 8]	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x6c74	          0x4889c7	                            mov rdi, rax	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x6c77	      0xe800000000	                          call 0x4006cbc	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x6c7c	          0x4889c2	                            mov rdx, rax	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x6c7f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x6c83	          0x488910	                    mov qword [rax], rdx	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x6c86	      0xb801000000	                              mov eax, 1	      3772	buffer.c	FUNCTION_62	IF_1
0x6c8b	            0xeb05	                           jmp 0x4006cd2	      3772	buffer.c	FUNCTION_62	IF_1
0x6c8d	      0xb800000000	                              mov eax, 0	      3774	buffer.c	FUNCTION_62
0x6c92	              0xc9	                                   leave	      3775	buffer.c	FUNCTION_62
0x6c93	              0xc3	                                     ret	      3775	buffer.c	FUNCTION_62
free_buffer	FOR,0:WHILE,0:ELSE,1:functions,0:IF,1:CALL,14:SWITCH,0:DO,0	49
0x13a4	              0x55	                                push rbp	       822	buffer.c	FUNCTION_11
0x13a5	          0x4889e5	                            mov rbp, rsp	       822	buffer.c	FUNCTION_11
0x13a8	        0x4883ec10	                           sub rsp, 0x10	       822	buffer.c	FUNCTION_11
0x13ac	        0x48897df8	                mov qword [rbp - 8], rdi	       822	buffer.c	FUNCTION_11
0x13b0	    0x8b0500000000	            mov eax, dword [0x040013f6] 	       823	buffer.c	FUNCTION_11
0x13b6	          0x83c001	                              add eax, 1	       823	buffer.c	FUNCTION_11
0x13b9	    0x890500000000	            mov dword [0x040013ff], eax 	       823	buffer.c	FUNCTION_11
0x13bf	        0x488b45f8	                mov rax, qword [rbp - 8]	       824	buffer.c	FUNCTION_11	CALL_1
0x13c3	      0xbe01000000	                              mov esi, 1	       824	buffer.c	FUNCTION_11	CALL_1
0x13c8	          0x4889c7	                            mov rdi, rax	       824	buffer.c	FUNCTION_11	CALL_1
0x13cb	      0xe814010000	              call sym.free_buffer_stuff	       824	buffer.c	FUNCTION_11	CALL_1
0x13d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       827	buffer.c	FUNCTION_11	CALL_2
0x13d4	    0x488d90d00000	                   lea rdx, [rax + 0xd0]	       827	buffer.c	FUNCTION_11	CALL_2
0x13db	        0x488b45f8	                mov rax, qword [rbp - 8]	       827	buffer.c	FUNCTION_11	CALL_2
0x13df	    0x488b80301700	          mov rax, qword [rax + 0x1730] 	       827	buffer.c	FUNCTION_11	CALL_2
0x13e6	          0x4889d6	                            mov rsi, rdx	       827	buffer.c	FUNCTION_11	CALL_2
0x13e9	          0x4889c7	                            mov rdi, rax	       827	buffer.c	FUNCTION_11	CALL_2
0x13ec	      0xe800000000	                          call 0x4001431	       827	buffer.c	FUNCTION_11	CALL_2
0x13f1	        0x488b45f8	                mov rax, qword [rbp - 8]	       828	buffer.c	FUNCTION_11	CALL_3
0x13f5	    0x488b80301700	          mov rax, qword [rax + 0x1730] 	       828	buffer.c	FUNCTION_11	CALL_3
0x13fc	          0x4889c7	                            mov rdi, rax	       828	buffer.c	FUNCTION_11	CALL_3
0x13ff	      0xe800000000	                          call 0x4001444	       828	buffer.c	FUNCTION_11	CALL_3
0x1404	        0x488b45f8	                mov rax, qword [rbp - 8]	       849	buffer.c	FUNCTION_11	CALL_10
0x1408	          0x4889c7	                            mov rdi, rax	       849	buffer.c	FUNCTION_11	CALL_10
0x140b	      0xe800000000	                          call 0x4001450	       849	buffer.c	FUNCTION_11	CALL_10
0x1410	        0x488b45f8	                mov rax, qword [rbp - 8]	       852	buffer.c	FUNCTION_11	CALL_11
0x1414	          0x4889c7	                            mov rdi, rax	       852	buffer.c	FUNCTION_11	CALL_11
0x1417	      0xe800000000	                          call 0x400145c	       852	buffer.c	FUNCTION_11	CALL_11
0x141c	        0x488b45f8	                mov rax, qword [rbp - 8]	       855	buffer.c	FUNCTION_11	CALL_12
0x1420	          0x4889c7	                            mov rdi, rax	       855	buffer.c	FUNCTION_11	CALL_12
0x1423	      0xe8daf4ffff	             call sym.buf_hashtab_remove	       855	buffer.c	FUNCTION_11	CALL_12
0x1428	        0x488b45f8	                mov rax, qword [rbp - 8]	       857	buffer.c	FUNCTION_11	CALL_13
0x142c	          0x4889c7	                            mov rdi, rax	       857	buffer.c	FUNCTION_11	CALL_13
0x142f	      0xe800000000	                          call 0x4001474	       857	buffer.c	FUNCTION_11	CALL_13
0x1434	    0x8b0500000000	            mov eax, dword [0x0400147a] 	       859	buffer.c	FUNCTION_11	IF_1
0x143a	            0x85c0	                           test eax, eax	       859	buffer.c	FUNCTION_11	IF_1
0x143c	            0x741c	                            je 0x400149a	       859	buffer.c	FUNCTION_11	IF_1
0x143e	    0x488b15000000	            mov rdx, qword [0x04001485] 	       863	buffer.c	FUNCTION_11	IF_1
0x1445	        0x488b45f8	                mov rax, qword [rbp - 8]	       863	buffer.c	FUNCTION_11	IF_1
0x1449	        0x48895068	             mov qword [rax + 0x68], rdx	       863	buffer.c	FUNCTION_11	IF_1
0x144d	        0x488b45f8	                mov rax, qword [rbp - 8]	       864	buffer.c	FUNCTION_11	IF_1
0x1451	    0x488905000000	            mov qword [0x04001498], rax 	       864	buffer.c	FUNCTION_11	IF_1
0x1458	            0xeb0c	                           jmp 0x40014a6	       868	buffer.c	FUNCTION_11
0x145a	        0x488b45f8	                mov rax, qword [rbp - 8]	       867	buffer.c	FUNCTION_11	CALL_14
0x145e	          0x4889c7	                            mov rdi, rax	       867	buffer.c	FUNCTION_11	CALL_14
0x1461	      0xe800000000	                          call 0x40014a6	       867	buffer.c	FUNCTION_11	CALL_14
0x1466	              0x90	                                     nop	       868	buffer.c	FUNCTION_11
0x1467	              0xc9	                                   leave	       868	buffer.c	FUNCTION_11
0x1468	              0xc3	                                     ret	       868	buffer.c	FUNCTION_11
find_wininfo	FOR,2:WHILE,0:ELSE,1:functions,0:IF,4:CALL,2:SWITCH,0:DO,0	53
0x4b41	              0x55	                                push rbp	      2852	buffer.c	FUNCTION_41
0x4b42	          0x4889e5	                            mov rbp, rsp	      2852	buffer.c	FUNCTION_41
0x4b45	        0x4883ec20	                           sub rsp, 0x20	      2852	buffer.c	FUNCTION_41
0x4b49	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2852	buffer.c	FUNCTION_41
0x4b4d	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2852	buffer.c	FUNCTION_41
0x4b50	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2855	buffer.c	FUNCTION_41	FOR_1
0x4b54	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      2855	buffer.c	FUNCTION_41	FOR_1
0x4b5b	        0x488945f8	                mov qword [rbp - 8], rax	      2855	buffer.c	FUNCTION_41	FOR_1
0x4b5f	            0xeb35	                           jmp 0x4004bd6	      2855	buffer.c	FUNCTION_41	FOR_1
0x4b61	        0x488b45f8	                mov rax, qword [rbp - 8]	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x4b65	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x4b69	    0x488b05000000	            mov rax, qword [0x04004bb0] 	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x4b70	          0x4839c2	                            cmp rdx, rax	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x4b73	            0x7516	                           jne 0x4004bcb	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x4b75	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2858	buffer.c	FUNCTION_41	FOR_1	IF_1	CALL_1
0x4b79	            0x7422	                            je 0x4004bdd	      2858	buffer.c	FUNCTION_41	FOR_1	IF_1	CALL_1
0x4b7b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2858	buffer.c	FUNCTION_41	FOR_1	IF_1	CALL_1
0x4b7f	          0x4889c7	                            mov rdi, rax	      2858	buffer.c	FUNCTION_41	FOR_1	IF_1	CALL_1
0x4b82	      0xe864ffffff	         call sym.wininfo_other_tab_diff	      2858	buffer.c	FUNCTION_41	FOR_1	IF_1	CALL_1
0x4b87	            0x85c0	                           test eax, eax	      2858	buffer.c	FUNCTION_41	FOR_1	IF_1	CALL_1
0x4b89	            0x7412	                            je 0x4004bdd	      2858	buffer.c	FUNCTION_41	FOR_1	IF_1	CALL_1
0x4b8b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2855	buffer.c	FUNCTION_41	FOR_1
0x4b8f	          0x488b00	                    mov rax, qword [rax]	      2855	buffer.c	FUNCTION_41	FOR_1
0x4b92	        0x488945f8	                mov qword [rbp - 8], rax	      2855	buffer.c	FUNCTION_41	FOR_1
0x4b96	      0x48837df800	                  cmp qword [rbp - 8], 0	      2855	buffer.c	FUNCTION_41	FOR_1
0x4b9b	            0x75c4	                           jne 0x4004ba1	      2855	buffer.c	FUNCTION_41	FOR_1
0x4b9d	      0x48837df800	                  cmp qword [rbp - 8], 0	      2865	buffer.c	FUNCTION_41	IF_2
0x4ba2	            0x754d	                           jne 0x4004c31	      2865	buffer.c	FUNCTION_41	IF_2
0x4ba4	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2868	buffer.c	FUNCTION_41	IF_2	IF_3
0x4ba8	            0x7435	                            je 0x4004c1f	      2868	buffer.c	FUNCTION_41	IF_2	IF_3
0x4baa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x4bae	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x4bb5	        0x488945f8	                mov qword [rbp - 8], rax	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x4bb9	            0xeb1b	                           jmp 0x4004c16	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x4bbb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2871	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2	IF_4	CALL_2
0x4bbf	          0x4889c7	                            mov rdi, rax	      2871	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2	IF_4	CALL_2
0x4bc2	      0xe824ffffff	         call sym.wininfo_other_tab_diff	      2871	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2	IF_4	CALL_2
0x4bc7	            0x85c0	                           test eax, eax	      2871	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2	IF_4	CALL_2
0x4bc9	            0x7425	                            je 0x4004c30	      2871	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2	IF_4	CALL_2
0x4bcb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x4bcf	          0x488b00	                    mov rax, qword [rax]	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x4bd2	        0x488945f8	                mov qword [rbp - 8], rax	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x4bd6	      0x48837df800	                  cmp qword [rbp - 8], 0	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x4bdb	            0x75de	                           jne 0x4004bfb	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x4bdd	            0xeb12	                           jmp 0x4004c31	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x4bdf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2876	buffer.c	FUNCTION_41	IF_2	ELSE_1
0x4be3	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      2876	buffer.c	FUNCTION_41	IF_2	ELSE_1
0x4bea	        0x488945f8	                mov qword [rbp - 8], rax	      2876	buffer.c	FUNCTION_41	IF_2	ELSE_1
0x4bee	            0xeb01	                           jmp 0x4004c31	      2876	buffer.c	FUNCTION_41	IF_2	ELSE_1
0x4bf0	              0x90	                                     nop	      2872	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2	IF_4
0x4bf1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2878	buffer.c	FUNCTION_41	ELSE_1
0x4bf5	              0xc9	                                   leave	      2879	buffer.c	FUNCTION_41	ELSE_1
0x4bf6	              0xc3	                                     ret	      2879	buffer.c	FUNCTION_41	ELSE_1
setfname	FOR,0:WHILE,0:ELSE,2:functions,0:IF,10:CALL,17:SWITCH,0:DO,0	158
0x53e4	              0x55	                                push rbp	      3083	buffer.c	FUNCTION_47
0x53e5	          0x4889e5	                            mov rbp, rsp	      3083	buffer.c	FUNCTION_47
0x53e8	    0x4881ecd00000	                           sub rsp, 0xd0	      3083	buffer.c	FUNCTION_47
0x53ef	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	      3083	buffer.c	FUNCTION_47
0x53f6	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	      3083	buffer.c	FUNCTION_47
0x53fd	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	      3083	buffer.c	FUNCTION_47
0x5404	    0x898d34ffffff	             mov dword [rbp - 0xcc], ecx	      3083	buffer.c	FUNCTION_47
0x540a	    0x64488b042528	                mov rax, qword fs:[0x28]	      3083	buffer.c	FUNCTION_47
0x5413	        0x488945f8	                mov qword [rbp - 8], rax	      3083	buffer.c	FUNCTION_47
0x5417	            0x31c0	                            xor eax, eax	      3083	buffer.c	FUNCTION_47
0x5419	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      3084	buffer.c	FUNCTION_47
0x5424	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3089	buffer.c	FUNCTION_47	IF_1
0x542b	          0x4885c0	                           test rax, rax	      3089	buffer.c	FUNCTION_47	IF_1
0x542e	            0x7412	                            je 0x4005482	      3089	buffer.c	FUNCTION_47	IF_1
0x5430	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3089	buffer.c	FUNCTION_47	IF_1
0x5437	           0xfb600	                   movzx eax, byte [rax]	      3089	buffer.c	FUNCTION_47	IF_1
0x543a	            0x84c0	                             test al, al	      3089	buffer.c	FUNCTION_47	IF_1
0x543c	     0xf8586000000	                           jne 0x4005508	      3089	buffer.c	FUNCTION_47	IF_1
0x5442	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3092	buffer.c	FUNCTION_47	IF_1	CALL_1
0x5449	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      3092	buffer.c	FUNCTION_47	IF_1	CALL_1
0x5450	          0x4885c0	                           test rax, rax	      3092	buffer.c	FUNCTION_47	IF_1	CALL_1
0x5453	            0x7428	                            je 0x40054bd	      3092	buffer.c	FUNCTION_47	IF_1	CALL_1
0x5455	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3092	buffer.c	FUNCTION_47	IF_1	CALL_1
0x545c	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      3092	buffer.c	FUNCTION_47	IF_1	CALL_1
0x5463	          0x4889c7	                            mov rdi, rax	      3092	buffer.c	FUNCTION_47	IF_1	CALL_1
0x5466	      0xe800000000	                          call 0x40054ab	      3092	buffer.c	FUNCTION_47	IF_1	CALL_1
0x546b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3092	buffer.c	FUNCTION_47	IF_1	CALL_1
0x5472	    0x48c780880000	               mov qword [rax + 0x88], 0	      3092	buffer.c	FUNCTION_47	IF_1	CALL_1
0x547d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3093	buffer.c	FUNCTION_47	IF_1	CALL_2
0x5484	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3093	buffer.c	FUNCTION_47	IF_1	CALL_2
0x548b	          0x4885c0	                           test rax, rax	      3093	buffer.c	FUNCTION_47	IF_1	CALL_2
0x548e	            0x7428	                            je 0x40054f8	      3093	buffer.c	FUNCTION_47	IF_1	CALL_2
0x5490	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3093	buffer.c	FUNCTION_47	IF_1	CALL_2
0x5497	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3093	buffer.c	FUNCTION_47	IF_1	CALL_2
0x549e	          0x4889c7	                            mov rdi, rax	      3093	buffer.c	FUNCTION_47	IF_1	CALL_2
0x54a1	      0xe800000000	                          call 0x40054e6	      3093	buffer.c	FUNCTION_47	IF_1	CALL_2
0x54a6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3093	buffer.c	FUNCTION_47	IF_1	CALL_2
0x54ad	    0x48c780900000	               mov qword [rax + 0x90], 0	      3093	buffer.c	FUNCTION_47	IF_1	CALL_2
0x54b8	    0x48c78560ffff	mov qword [rbp - 0xa0], 0xffffffffffffffff	      3095	buffer.c	FUNCTION_47	IF_1
0x54c3	      0xe9b9010000	                           jmp 0x40056c1	      3095	buffer.c	FUNCTION_47	IF_1
0x54c8	    0x488d9538ffff	                   lea rdx, [rbp - 0xc8]	      3100	buffer.c	FUNCTION_47	ELSE_1	CALL_3
0x54cf	    0x488d8d40ffff	                   lea rcx, [rbp - 0xc0]	      3100	buffer.c	FUNCTION_47	ELSE_1	CALL_3
0x54d6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3100	buffer.c	FUNCTION_47	ELSE_1	CALL_3
0x54dd	          0x4889ce	                            mov rsi, rcx	      3100	buffer.c	FUNCTION_47	ELSE_1	CALL_3
0x54e0	          0x4889c7	                            mov rdi, rax	      3100	buffer.c	FUNCTION_47	ELSE_1	CALL_3
0x54e3	      0xe800000000	                          call 0x4005528	      3100	buffer.c	FUNCTION_47	ELSE_1	CALL_3
0x54e8	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3101	buffer.c	FUNCTION_47	ELSE_1	IF_2
0x54ef	          0x4885c0	                           test rax, rax	      3101	buffer.c	FUNCTION_47	ELSE_1	IF_2
0x54f2	            0x750a	                           jne 0x400553e	      3101	buffer.c	FUNCTION_47	ELSE_1	IF_2
0x54f4	      0xb800000000	                              mov eax, 0	      3102	buffer.c	FUNCTION_47	ELSE_1	IF_2
0x54f9	      0xe91f020000	                           jmp 0x400575d	      3102	buffer.c	FUNCTION_47	ELSE_1	IF_2
0x54fe	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3110	buffer.c	FUNCTION_47	ELSE_1	IF_3	CALL_4
0x5505	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      3110	buffer.c	FUNCTION_47	ELSE_1	IF_3	CALL_4
0x550c	          0x4889d6	                            mov rsi, rdx	      3110	buffer.c	FUNCTION_47	ELSE_1	IF_3	CALL_4
0x550f	          0x4889c7	                            mov rdi, rax	      3110	buffer.c	FUNCTION_47	ELSE_1	IF_3	CALL_4
0x5512	      0xe800000000	                          call 0x4005557	      3110	buffer.c	FUNCTION_47	ELSE_1	IF_3	CALL_4
0x5517	            0x85c0	                           test eax, eax	      3110	buffer.c	FUNCTION_47	ELSE_1	IF_3	CALL_4
0x5519	            0x790b	                           jns 0x4005566	      3110	buffer.c	FUNCTION_47	ELSE_1	IF_3	CALL_4
0x551b	    0x48c78560ffff	mov qword [rbp - 0xa0], 0xffffffffffffffff	      3111	buffer.c	FUNCTION_47	ELSE_1	IF_3
0x5526	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3113	buffer.c	FUNCTION_47	ELSE_1	IF_4
0x552d	          0x8b407c	            mov eax, dword [rax + 0x7c] 	      3113	buffer.c	FUNCTION_47	ELSE_1	IF_4
0x5530	      0x2580000000	                           and eax, 0x80	      3113	buffer.c	FUNCTION_47	ELSE_1	IF_4
0x5535	            0x85c0	                           test eax, eax	      3113	buffer.c	FUNCTION_47	ELSE_1	IF_4
0x5537	            0x7520	                           jne 0x4005599	      3113	buffer.c	FUNCTION_47	ELSE_1	IF_4
0x5539	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3115	buffer.c	FUNCTION_47	ELSE_1	CALL_5
0x5540	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	      3115	buffer.c	FUNCTION_47	ELSE_1	CALL_5
0x5547	          0x4889d6	                            mov rsi, rdx	      3115	buffer.c	FUNCTION_47	ELSE_1	CALL_5
0x554a	          0x4889c7	                            mov rdi, rax	      3115	buffer.c	FUNCTION_47	ELSE_1	CALL_5
0x554d	      0xe83ee9ffff	          call sym.buflist_findname_stat	      3115	buffer.c	FUNCTION_47	ELSE_1	CALL_5
0x5552	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      3115	buffer.c	FUNCTION_47	ELSE_1	CALL_5
0x5559	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      3119	buffer.c	FUNCTION_47	ELSE_1	IF_5
0x5561	            0x7472	                            je 0x4005615	      3119	buffer.c	FUNCTION_47	ELSE_1	IF_5
0x5563	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3119	buffer.c	FUNCTION_47	ELSE_1	IF_5
0x556a	    0x483b8548ffff	             cmp rax, qword [rbp - 0xb8]	      3119	buffer.c	FUNCTION_47	ELSE_1	IF_5
0x5571	            0x7462	                            je 0x4005615	      3119	buffer.c	FUNCTION_47	ELSE_1	IF_5
0x5573	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3121	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6
0x557a	        0x488b4008	                mov rax, qword [rax + 8]	      3121	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6
0x557e	          0x4885c0	                           test rax, rax	      3121	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6
0x5581	            0x7434	                            je 0x40055f7	      3121	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6
0x5583	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      3123	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6	IF_7
0x558a	            0x7412	                            je 0x40055de	      3123	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6	IF_7
0x558c	      0xbf00000000	                              mov edi, 0	      3124	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6	CALL_8
0x5591	      0xe800000000	                          call 0x40055d6	      3124	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6	CALL_8
0x5596	          0x4889c7	                            mov rdi, rax	      3124	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6	CALL_8
0x5599	      0xe800000000	                          call 0x40055de	      3124	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6	CALL_8
0x559e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3125	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6	CALL_9
0x55a5	          0x4889c7	                            mov rdi, rax	      3125	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6	CALL_9
0x55a8	      0xe800000000	                          call 0x40055ed	      3125	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6	CALL_9
0x55ad	      0xb800000000	                              mov eax, 0	      3126	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6
0x55b2	      0xe966010000	                           jmp 0x400575d	      3126	buffer.c	FUNCTION_47	ELSE_1	IF_5	IF_6
0x55b7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3129	buffer.c	FUNCTION_47	ELSE_1	IF_5	CALL_10
0x55be	      0xb900000000	                              mov ecx, 0	      3129	buffer.c	FUNCTION_47	ELSE_1	IF_5	CALL_10
0x55c3	      0xba04000000	                              mov edx, 4	      3129	buffer.c	FUNCTION_47	ELSE_1	IF_5	CALL_10
0x55c8	          0x4889c6	                            mov rsi, rax	      3129	buffer.c	FUNCTION_47	ELSE_1	IF_5	CALL_10
0x55cb	      0xbf00000000	                              mov edi, 0	      3129	buffer.c	FUNCTION_47	ELSE_1	IF_5	CALL_10
0x55d0	      0xe800000000	                          call 0x4005615	      3129	buffer.c	FUNCTION_47	ELSE_1	IF_5	CALL_10
0x55d5	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      3131	buffer.c	FUNCTION_47	ELSE_1	CALL_11
0x55dc	          0x4889c7	                            mov rdi, rax	      3131	buffer.c	FUNCTION_47	ELSE_1	CALL_11
0x55df	      0xe800000000	                          call 0x4005624	      3131	buffer.c	FUNCTION_47	ELSE_1	CALL_11
0x55e4	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      3131	buffer.c	FUNCTION_47	ELSE_1	CALL_11
0x55eb	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3132	buffer.c	FUNCTION_47	ELSE_1	IF_8
0x55f2	          0x4885c0	                           test rax, rax	      3132	buffer.c	FUNCTION_47	ELSE_1	IF_8
0x55f5	            0x740c	                            je 0x4005643	      3132	buffer.c	FUNCTION_47	ELSE_1	IF_8
0x55f7	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      3132	buffer.c	FUNCTION_47	ELSE_1	IF_8
0x55fe	          0x4885c0	                           test rax, rax	      3132	buffer.c	FUNCTION_47	ELSE_1	IF_8
0x5601	            0x7528	                           jne 0x400566b	      3132	buffer.c	FUNCTION_47	ELSE_1	IF_8
0x5603	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      3134	buffer.c	FUNCTION_47	ELSE_1	IF_8	CALL_12
0x560a	          0x4889c7	                            mov rdi, rax	      3134	buffer.c	FUNCTION_47	ELSE_1	IF_8	CALL_12
0x560d	      0xe800000000	                          call 0x4005652	      3134	buffer.c	FUNCTION_47	ELSE_1	IF_8	CALL_12
0x5612	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3135	buffer.c	FUNCTION_47	ELSE_1	IF_8	CALL_13
0x5619	          0x4889c7	                            mov rdi, rax	      3135	buffer.c	FUNCTION_47	ELSE_1	IF_8	CALL_13
0x561c	      0xe800000000	                          call 0x4005661	      3135	buffer.c	FUNCTION_47	ELSE_1	IF_8	CALL_13
0x5621	      0xb800000000	                              mov eax, 0	      3136	buffer.c	FUNCTION_47	ELSE_1	IF_8
0x5626	      0xe9f2000000	                           jmp 0x400575d	      3136	buffer.c	FUNCTION_47	ELSE_1	IF_8
0x562b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3144	buffer.c	FUNCTION_47	ELSE_1	CALL_15
0x5632	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      3144	buffer.c	FUNCTION_47	ELSE_1	CALL_15
0x5639	          0x4889c7	                            mov rdi, rax	      3144	buffer.c	FUNCTION_47	ELSE_1	CALL_15
0x563c	      0xe800000000	                          call 0x4005681	      3144	buffer.c	FUNCTION_47	ELSE_1	CALL_15
0x5641	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3145	buffer.c	FUNCTION_47	ELSE_1	CALL_16
0x5648	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      3145	buffer.c	FUNCTION_47	ELSE_1	CALL_16
0x564f	          0x4889c7	                            mov rdi, rax	      3145	buffer.c	FUNCTION_47	ELSE_1	CALL_16
0x5652	      0xe800000000	                          call 0x4005697	      3145	buffer.c	FUNCTION_47	ELSE_1	CALL_16
0x5657	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	      3146	buffer.c	FUNCTION_47	ELSE_1
0x565e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3146	buffer.c	FUNCTION_47	ELSE_1
0x5665	    0x488990880000	             mov qword [rax + 0x88], rdx	      3146	buffer.c	FUNCTION_47	ELSE_1
0x566c	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      3147	buffer.c	FUNCTION_47	ELSE_1
0x5673	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3147	buffer.c	FUNCTION_47	ELSE_1
0x567a	    0x488990900000	             mov qword [rax + 0x90], rdx	      3147	buffer.c	FUNCTION_47	ELSE_1
0x5681	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3149	buffer.c	FUNCTION_47
0x5688	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      3149	buffer.c	FUNCTION_47
0x568f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3149	buffer.c	FUNCTION_47
0x5696	    0x488990980000	             mov qword [rax + 0x98], rdx	      3149	buffer.c	FUNCTION_47
0x569d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      3151	buffer.c	FUNCTION_47	IF_10
0x56a4	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      3151	buffer.c	FUNCTION_47	IF_10
0x56a8	            0x7513	                           jne 0x40056fd	      3151	buffer.c	FUNCTION_47	IF_10
0x56aa	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3152	buffer.c	FUNCTION_47	IF_10
0x56b1	    0xc780a0000000	               mov dword [rax + 0xa0], 0	      3152	buffer.c	FUNCTION_47	IF_10
0x56bb	            0xeb3b	                           jmp 0x4005738	      3152	buffer.c	FUNCTION_47	IF_10
0x56bd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3155	buffer.c	FUNCTION_47	ELSE_2
0x56c4	    0xc780a0000000	               mov dword [rax + 0xa0], 1	      3155	buffer.c	FUNCTION_47	ELSE_2
0x56ce	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      3156	buffer.c	FUNCTION_47	ELSE_2
0x56d5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3156	buffer.c	FUNCTION_47	ELSE_2
0x56dc	    0x488990a80000	             mov qword [rax + 0xa8], rdx	      3156	buffer.c	FUNCTION_47	ELSE_2
0x56e3	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      3157	buffer.c	FUNCTION_47	ELSE_2
0x56ea	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3157	buffer.c	FUNCTION_47	ELSE_2
0x56f1	    0x488990b00000	             mov qword [rax + 0xb0], rdx	      3157	buffer.c	FUNCTION_47	ELSE_2
0x56f8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3161	buffer.c	FUNCTION_47
0x56ff	    0xc78060170000	            mov dword [rax + 0x1760], 0 	      3161	buffer.c	FUNCTION_47
0x5709	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3163	buffer.c	FUNCTION_47	CALL_17
0x5710	          0x4889c7	                            mov rdi, rax	      3163	buffer.c	FUNCTION_47	CALL_17
0x5713	      0xe800000000	                          call 0x4005758	      3163	buffer.c	FUNCTION_47	CALL_17
0x5718	      0xb801000000	                              mov eax, 1	      3164	buffer.c	FUNCTION_47
0x571d	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3165	buffer.c	FUNCTION_47
0x5721	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3165	buffer.c	FUNCTION_47
0x572a	            0x7405	                            je 0x4005771	      3165	buffer.c	FUNCTION_47
0x572c	      0xe800000000	                          call 0x4005771	      3165	buffer.c	FUNCTION_47
0x5731	              0xc9	                                   leave	      3165	buffer.c	FUNCTION_47
0x5732	              0xc3	                                     ret	      3165	buffer.c	FUNCTION_47
buflist_getfile	FOR,0:WHILE,0:ELSE,3:functions,0:IF,14:CALL,18:SWITCH,0:DO,0	171
0x3aa9	              0x55	                                push rbp	      2242	buffer.c	FUNCTION_28
0x3aaa	          0x4889e5	                            mov rbp, rsp	      2242	buffer.c	FUNCTION_28
0x3aad	              0x53	                                push rbx	      2242	buffer.c	FUNCTION_28
0x3aae	        0x4883ec48	                           sub rsp, 0x48	      2242	buffer.c	FUNCTION_28
0x3ab2	          0x897dcc	             mov dword [rbp - 0x34], edi	      2242	buffer.c	FUNCTION_28
0x3ab5	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2242	buffer.c	FUNCTION_28
0x3ab9	          0x8955c8	             mov dword [rbp - 0x38], edx	      2242	buffer.c	FUNCTION_28
0x3abc	          0x894dbc	             mov dword [rbp - 0x44], ecx	      2242	buffer.c	FUNCTION_28
0x3abf	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      2244	buffer.c	FUNCTION_28
0x3ac7	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2248	buffer.c	FUNCTION_28	CALL_1
0x3aca	            0x89c7	                            mov edi, eax	      2248	buffer.c	FUNCTION_28	CALL_1
0x3acc	      0xe800000000	                          call 0x4003b11	      2248	buffer.c	FUNCTION_28	CALL_1
0x3ad1	        0x488945e0	             mov qword [rbp - 0x20], rax	      2248	buffer.c	FUNCTION_28	CALL_1
0x3ad5	      0x48837de000	               cmp qword [rbp - 0x20], 0	      2249	buffer.c	FUNCTION_28	IF_1
0x3ada	            0x7549	                           jne 0x4003b65	      2249	buffer.c	FUNCTION_28	IF_1
0x3adc	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x3adf	          0x83e002	                              and eax, 2	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x3ae2	            0x85c0	                           test eax, eax	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x3ae4	            0x741a	                            je 0x4003b40	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x3ae6	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x3aea	            0x7514	                           jne 0x4003b40	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x3aec	      0xbf00000000	                              mov edi, 0	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x3af1	      0xe800000000	                          call 0x4003b36	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x3af6	          0x4889c7	                            mov rdi, rax	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x3af9	      0xe800000000	                          call 0x4003b3e	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x3afe	            0xeb1b	                           jmp 0x4003b5b	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x3b00	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x3b03	          0x4863d8	                         movsxd rbx, eax	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x3b06	      0xbf00000000	                              mov edi, 0	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x3b0b	      0xe800000000	                          call 0x4003b50	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x3b10	          0x4889de	                            mov rsi, rbx	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x3b13	          0x4889c7	                            mov rdi, rax	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x3b16	      0xe800000000	                          call 0x4003b5b	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x3b1b	      0xb800000000	                              mov eax, 0	      2255	buffer.c	FUNCTION_28	IF_1
0x3b20	      0xe919020000	                           jmp 0x4003d7e	      2255	buffer.c	FUNCTION_28	IF_1
0x3b25	    0x488b05000000	            mov rax, qword [0x04003b6c] 	      2259	buffer.c	FUNCTION_28	IF_3
0x3b2c	        0x483945e0	            cmp qword [rbp - 0x20], rax 	      2259	buffer.c	FUNCTION_28	IF_3
0x3b30	            0x750a	                           jne 0x4003b7c	      2259	buffer.c	FUNCTION_28	IF_3
0x3b32	      0xb801000000	                              mov eax, 1	      2260	buffer.c	FUNCTION_28	IF_3
0x3b37	      0xe902020000	                           jmp 0x4003d7e	      2260	buffer.c	FUNCTION_28	IF_3
0x3b3c	      0xe800000000	                          call 0x4003b81	      2262	buffer.c	FUNCTION_28	IF_4	CALL_6
0x3b41	            0x85c0	                           test eax, eax	      2262	buffer.c	FUNCTION_28	IF_4	CALL_6
0x3b43	            0x740f	                            je 0x4003b94	      2262	buffer.c	FUNCTION_28	IF_4	CALL_6
0x3b45	      0xe800000000	                          call 0x4003b8a	      2264	buffer.c	FUNCTION_28	IF_4	CALL_7
0x3b4a	      0xb800000000	                              mov eax, 0	      2265	buffer.c	FUNCTION_28	IF_4
0x3b4f	      0xe9ea010000	                           jmp 0x4003d7e	      2265	buffer.c	FUNCTION_28	IF_4
0x3b54	      0xe800000000	                          call 0x4003b99	      2267	buffer.c	FUNCTION_28	IF_5	CALL_8
0x3b59	            0x85c0	                           test eax, eax	      2267	buffer.c	FUNCTION_28	IF_5	CALL_8
0x3b5b	            0x740a	                            je 0x4003ba7	      2267	buffer.c	FUNCTION_28	IF_5	CALL_8
0x3b5d	      0xb800000000	                              mov eax, 0	      2268	buffer.c	FUNCTION_28	IF_5
0x3b62	      0xe9d7010000	                           jmp 0x4003d7e	      2268	buffer.c	FUNCTION_28	IF_5
0x3b67	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      2271	buffer.c	FUNCTION_28	IF_6
0x3b6c	            0x7527	                           jne 0x4003bd5	      2271	buffer.c	FUNCTION_28	IF_6
0x3b6e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2273	buffer.c	FUNCTION_28	IF_6	CALL_9
0x3b72	          0x4889c7	                            mov rdi, rax	      2273	buffer.c	FUNCTION_28	IF_6	CALL_9
0x3b75	      0xe800000000	                          call 0x4003bba	      2273	buffer.c	FUNCTION_28	IF_6	CALL_9
0x3b7a	        0x488945e8	             mov qword [rbp - 0x18], rax	      2273	buffer.c	FUNCTION_28	IF_6	CALL_9
0x3b7e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2274	buffer.c	FUNCTION_28	IF_6
0x3b82	          0x488b00	                    mov rax, qword [rax]	      2274	buffer.c	FUNCTION_28	IF_6
0x3b85	        0x488945c0	             mov qword [rbp - 0x40], rax	      2274	buffer.c	FUNCTION_28	IF_6
0x3b89	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2275	buffer.c	FUNCTION_28	IF_6
0x3b8d	          0x8b4008	                mov eax, dword [rax + 8]	      2275	buffer.c	FUNCTION_28	IF_6
0x3b90	          0x8945d4	             mov dword [rbp - 0x2c], eax	      2275	buffer.c	FUNCTION_28	IF_6
0x3b93	            0xeb07	                           jmp 0x4003bdc	      2275	buffer.c	FUNCTION_28	IF_6
0x3b95	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      2278	buffer.c	FUNCTION_28	ELSE_2
0x3b9c	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2280	buffer.c	FUNCTION_28	ELSE_2	IF_7
0x3b9f	          0x83e004	                              and eax, 4	      2280	buffer.c	FUNCTION_28	ELSE_2	IF_7
0x3ba2	            0x85c0	                           test eax, eax	      2280	buffer.c	FUNCTION_28	ELSE_2	IF_7
0x3ba4	     0xf84e7000000	                            je 0x4003cd1	      2280	buffer.c	FUNCTION_28	ELSE_2	IF_7
0x3baa	    0x8b0500000000	            mov eax, dword [0x04003bf0] 	      2284	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_8
0x3bb0	          0x83e001	                              and eax, 1	      2284	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_8
0x3bb3	            0x85c0	                           test eax, eax	      2284	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_8
0x3bb5	            0x7410	                            je 0x4003c07	      2284	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_8
0x3bb7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2285	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x3bbb	          0x4889c7	                            mov rdi, rax	      2285	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x3bbe	      0xe800000000	                          call 0x4003c03	      2285	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x3bc3	        0x488945d8	             mov qword [rbp - 0x28], rax	      2285	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x3bc7	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x3bcc	            0x751d	                           jne 0x4003c2b	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x3bce	    0x8b0500000000	            mov eax, dword [0x04003c14] 	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x3bd4	          0x83e002	                              and eax, 2	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x3bd7	            0x85c0	                           test eax, eax	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x3bd9	            0x7410	                            je 0x4003c2b	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x3bdb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2290	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_11
0x3bdf	          0x4889c7	                            mov rdi, rax	      2290	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_11
0x3be2	      0xe800000000	                          call 0x4003c27	      2290	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_11
0x3be7	        0x488945d8	             mov qword [rbp - 0x28], rax	      2290	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_11
0x3beb	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x3bf0	     0xf859b000000	                           jne 0x4003cd1	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x3bf6	    0x8b0500000000	            mov eax, dword [0x04003c3c] 	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x3bfc	          0x83e01c	                           and eax, 0x1c	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x3bff	            0x85c0	                           test eax, eax	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x3c01	     0xf848a000000	                            je 0x4003cd1	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x3c07	    0x488b05000000	            mov rax, qword [0x04003c4e] 	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x3c0e	          0x488b00	                    mov rax, qword [rax]	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x3c11	        0x4883f801	                              cmp rax, 1	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x3c15	            0x7511	                           jne 0x4003c68	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x3c17	      0xbf01000000	                              mov edi, 1	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x3c1c	      0xe800000000	                          call 0x4003c61	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x3c21	           0xfb600	                   movzx eax, byte [rax]	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x3c24	            0x84c0	                             test al, al	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x3c26	            0x7469	                            je 0x4003cd1	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x3c28	    0x8b0500000000	            mov eax, dword [0x04003c6e] 	      2297	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	IF_11
0x3c2e	          0x83e008	                              and eax, 8	      2297	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	IF_11
0x3c31	            0x85c0	                           test eax, eax	      2297	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	IF_11
0x3c33	            0x7407	                            je 0x4003c7c	      2297	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	IF_11
0x3c35	      0xe800000000	                          call 0x4003c7a	      2298	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_13
0x3c3a	            0xeb33	                           jmp 0x4003caf	      2298	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_13
0x3c3c	    0x8b0500000000	            mov eax, dword [0x04003c82] 	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x3c42	          0x83e010	                           and eax, 0x10	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x3c45	            0x85c0	                           test eax, eax	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x3c47	            0x7407	                            je 0x4003c90	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x3c49	      0xb802000000	                              mov eax, 2	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x3c4e	            0xeb05	                           jmp 0x4003c95	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x3c50	      0xb800000000	                              mov eax, 0	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x3c55	            0x89c6	                            mov esi, eax	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x3c57	      0xbf00000000	                              mov edi, 0	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x3c5c	      0xe800000000	                          call 0x4003ca1	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x3c61	            0x85c0	                           test eax, eax	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x3c63	            0x750a	                           jne 0x4003caf	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x3c65	      0xb800000000	                              mov eax, 0	      2301	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12
0x3c6a	      0xe9cf000000	                           jmp 0x4003d7e	      2301	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12
0x3c6f	    0x488b05000000	            mov rax, qword [0x04003cb6] 	      2302	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_15
0x3c76	    0xc78088020000	              mov dword [rax + 0x288], 0	      2302	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_15
0x3c80	    0x488b05000000	            mov rax, qword [0x04003cc7] 	      2302	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_15
0x3c87	    0xc780b0020000	              mov dword [rax + 0x2b0], 0	      2302	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_15
0x3c91	    0x8b0500000000	            mov eax, dword [0x04003cd7] 	      2306	buffer.c	FUNCTION_28
0x3c97	          0x83c001	                              add eax, 1	      2306	buffer.c	FUNCTION_28
0x3c9a	    0x890500000000	            mov dword [0x04003ce0], eax 	      2306	buffer.c	FUNCTION_28
0x3ca0	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x3ca3	          0x83e001	                              and eax, 1	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x3ca6	            0x89c2	                            mov edx, eax	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x3ca8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x3cac	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x3cb2	          0x8b75bc	             mov esi, dword [rbp - 0x44]	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x3cb5	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x3cb9	          0x4189f1	                            mov r9d, esi	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x3cbc	          0x4989c8	                             mov r8, rcx	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x3cbf	            0x89d1	                            mov ecx, edx	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x3cc1	      0xba00000000	                              mov edx, 0	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x3cc6	      0xbe00000000	                              mov esi, 0	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x3ccb	            0x89c7	                            mov edi, eax	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x3ccd	      0xe800000000	                          call 0x4003d12	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x3cd2	            0x85c0	                           test eax, eax	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x3cd4	            0x7f54	                            jg 0x4003d6a	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x3cd6	    0x8b0500000000	            mov eax, dword [0x04003d1c] 	      2310	buffer.c	FUNCTION_28	IF_13
0x3cdc	          0x83e801	                              sub eax, 1	      2310	buffer.c	FUNCTION_28	IF_13
0x3cdf	    0x890500000000	            mov dword [0x04003d25], eax 	      2310	buffer.c	FUNCTION_28	IF_13
0x3ce5	    0x8b0500000000	            mov eax, dword [0x04003d2b] 	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x3ceb	            0x85c0	                           test eax, eax	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x3ced	            0x7534	                           jne 0x4003d63	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x3cef	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x3cf3	            0x742e	                            je 0x4003d63	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x3cf5	    0x488b05000000	            mov rax, qword [0x04003d3c] 	      2315	buffer.c	FUNCTION_28	IF_13	IF_14
0x3cfc	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2315	buffer.c	FUNCTION_28	IF_13	IF_14
0x3cff	          0x895040	             mov dword [rax + 0x40], edx	      2315	buffer.c	FUNCTION_28	IF_13	IF_14
0x3d02	      0xe800000000	                          call 0x4003d47	      2316	buffer.c	FUNCTION_28	IF_13	IF_14	CALL_18
0x3d07	    0x488b05000000	            mov rax, qword [0x04003d4e] 	      2318	buffer.c	FUNCTION_28	IF_13	IF_14
0x3d0e	    0xc74044000000	               mov dword [rax + 0x44], 0	      2318	buffer.c	FUNCTION_28	IF_13	IF_14
0x3d15	    0x488b05000000	            mov rax, qword [0x04003d5c] 	      2320	buffer.c	FUNCTION_28	IF_13	IF_14
0x3d1c	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      2320	buffer.c	FUNCTION_28	IF_13	IF_14
0x3d23	      0xb801000000	                              mov eax, 1	      2322	buffer.c	FUNCTION_28	IF_13
0x3d28	            0xeb14	                           jmp 0x4003d7e	      2322	buffer.c	FUNCTION_28	IF_13
0x3d2a	    0x8b0500000000	            mov eax, dword [0x04003d70] 	      2324	buffer.c	FUNCTION_28
0x3d30	          0x83e801	                              sub eax, 1	      2324	buffer.c	FUNCTION_28
0x3d33	    0x890500000000	            mov dword [0x04003d79], eax 	      2324	buffer.c	FUNCTION_28
0x3d39	      0xb800000000	                              mov eax, 0	      2325	buffer.c	FUNCTION_28
0x3d3e	        0x4883c448	                           add rsp, 0x48	      2326	buffer.c	FUNCTION_28
0x3d42	              0x5b	                                 pop rbx	      2326	buffer.c	FUNCTION_28
0x3d43	              0x5d	                                 pop rbp	      2326	buffer.c	FUNCTION_28
0x3d44	              0xc3	                                     ret	      2326	buffer.c	FUNCTION_28
buflist_match	FOR,0:WHILE,0:ELSE,0:functions,0:IF,1:CALL,2:SWITCH,0:DO,0	27
0x46c8	              0x55	                                push rbp	      2661	buffer.c	FUNCTION_35
0x46c9	          0x4889e5	                            mov rbp, rsp	      2661	buffer.c	FUNCTION_35
0x46cc	        0x4883ec30	                           sub rsp, 0x30	      2661	buffer.c	FUNCTION_35
0x46d0	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2661	buffer.c	FUNCTION_35
0x46d4	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2661	buffer.c	FUNCTION_35
0x46d8	          0x8955dc	             mov dword [rbp - 0x24], edx	      2661	buffer.c	FUNCTION_35
0x46db	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2665	buffer.c	FUNCTION_35	CALL_1
0x46df	    0x488b88900000	            mov rcx, qword [rax + 0x90] 	      2665	buffer.c	FUNCTION_35	CALL_1
0x46e6	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2665	buffer.c	FUNCTION_35	CALL_1
0x46e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2665	buffer.c	FUNCTION_35	CALL_1
0x46ed	          0x4889ce	                            mov rsi, rcx	      2665	buffer.c	FUNCTION_35	CALL_1
0x46f0	          0x4889c7	                            mov rdi, rax	      2665	buffer.c	FUNCTION_35	CALL_1
0x46f3	      0xe832000000	                    call sym.fname_match	      2665	buffer.c	FUNCTION_35	CALL_1
0x46f8	        0x488945f8	                mov qword [rbp - 8], rax	      2665	buffer.c	FUNCTION_35	CALL_1
0x46fc	      0x48837df800	                  cmp qword [rbp - 8], 0	      2666	buffer.c	FUNCTION_35	IF_1
0x4701	            0x7521	                           jne 0x4004764	      2666	buffer.c	FUNCTION_35	IF_1
0x4703	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2667	buffer.c	FUNCTION_35	CALL_2
0x4707	    0x488b88880000	            mov rcx, qword [rax + 0x88] 	      2667	buffer.c	FUNCTION_35	CALL_2
0x470e	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2667	buffer.c	FUNCTION_35	CALL_2
0x4711	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2667	buffer.c	FUNCTION_35	CALL_2
0x4715	          0x4889ce	                            mov rsi, rcx	      2667	buffer.c	FUNCTION_35	CALL_2
0x4718	          0x4889c7	                            mov rdi, rax	      2667	buffer.c	FUNCTION_35	CALL_2
0x471b	      0xe80a000000	                    call sym.fname_match	      2667	buffer.c	FUNCTION_35	CALL_2
0x4720	        0x488945f8	                mov qword [rbp - 8], rax	      2667	buffer.c	FUNCTION_35	CALL_2
0x4724	        0x488b45f8	                mov rax, qword [rbp - 8]	      2669	buffer.c	FUNCTION_35
0x4728	              0xc9	                                   leave	      2670	buffer.c	FUNCTION_35
0x4729	              0xc3	                                     ret	      2670	buffer.c	FUNCTION_35
