update_topline	CALL,24:WHILE,1:SWITCH,0:functions,0:DO,0:IF,28:ELSE,9:FOR,2	385
0x27f	              0x55	                                push rbp	       163	move.c	FUNCTION_4
0x280	          0x4889e5	                            mov rbp, rsp	       163	move.c	FUNCTION_4
0x283	              0x53	                                push rbx	       163	move.c	FUNCTION_4
0x284	        0x4883ec58	                           sub rsp, 0x58	       163	move.c	FUNCTION_4
0x288	    0x64488b042528	                mov rax, qword fs:[0x28]	       163	move.c	FUNCTION_4
0x291	        0x488945e8	             mov qword [rbp - 0x18], rax	       163	move.c	FUNCTION_4
0x295	            0x31c0	                            xor eax, eax	       163	move.c	FUNCTION_4
0x297	    0xc745a8000000	               mov dword [rbp - 0x58], 0	       174	move.c	FUNCTION_4
0x29e	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       175	move.c	FUNCTION_4
0x2a5	    0x488b05000000	            mov rax, qword [0x040002ec] 	       177	move.c	FUNCTION_4
0x2ac	          0x8945b0	             mov dword [rbp - 0x50], eax	       177	move.c	FUNCTION_4
0x2af	      0xbf01000000	                              mov edi, 1	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x2b4	      0xe800000000	                          call 0x40002f9	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x2b9	            0x85c0	                           test eax, eax	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x2bb	            0x7411	                            je 0x400030e	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x2bd	    0x488b05000000	            mov rax, qword [0x04000304] 	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x2c4	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x2ca	            0x85c0	                           test eax, eax	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x2cc	            0x7563	                           jne 0x4000371	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x2ce	    0x488b05000000	            mov rax, qword [0x04000315] 	       184	move.c	FUNCTION_4	IF_1
0x2d5	    0x488b15000000	            mov rdx, qword [0x0400031c] 	       184	move.c	FUNCTION_4	IF_1
0x2dc	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	       184	move.c	FUNCTION_4	IF_1
0x2e0	        0x48895078	             mov qword [rax + 0x78], rdx	       184	move.c	FUNCTION_4	IF_1
0x2e4	    0x488b05000000	            mov rax, qword [0x0400032b] 	       185	move.c	FUNCTION_4	IF_1
0x2eb	    0x488b15000000	            mov rdx, qword [0x04000332] 	       185	move.c	FUNCTION_4	IF_1
0x2f2	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	       185	move.c	FUNCTION_4	IF_1
0x2f6	    0x488990e80000	             mov qword [rax + 0xe8], rdx	       185	move.c	FUNCTION_4	IF_1
0x2fd	    0x488b05000000	            mov rax, qword [0x04000344] 	       186	move.c	FUNCTION_4	IF_1
0x304	    0x488b15000000	            mov rdx, qword [0x0400034b] 	       186	move.c	FUNCTION_4	IF_1
0x30b	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	       186	move.c	FUNCTION_4	IF_1
0x311	          0x83ca60	                            or edx, 0x60	       186	move.c	FUNCTION_4	IF_1
0x314	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       186	move.c	FUNCTION_4	IF_1
0x31a	    0x488b05000000	            mov rax, qword [0x04000361] 	       188	move.c	FUNCTION_4	IF_1
0x321	    0x48c780500500	              mov qword [rax + 0x550], 1	       188	move.c	FUNCTION_4	IF_1
0x32c	      0xe9fd050000	                           jmp 0x400096e	       190	move.c	FUNCTION_4	IF_1
0x331	    0x488b05000000	            mov rax, qword [0x04000378] 	       193	move.c	FUNCTION_4	CALL_2
0x338	          0x4889c7	                            mov rdi, rax	       193	move.c	FUNCTION_4	CALL_2
0x33b	      0xe800000000	                          call 0x4000380	       193	move.c	FUNCTION_4	CALL_2
0x340	    0x488b05000000	            mov rax, qword [0x04000387] 	       194	move.c	FUNCTION_4	IF_2
0x347	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       194	move.c	FUNCTION_4	IF_2
0x34d	      0x2580000000	                           and eax, 0x80	       194	move.c	FUNCTION_4	IF_2
0x352	            0x85c0	                           test eax, eax	       194	move.c	FUNCTION_4	IF_2
0x354	     0xf85d3050000	                           jne 0x400096d	       194	move.c	FUNCTION_4	IF_2
0x35a	    0x8b0500000000	            mov eax, dword [0x040003a0] 	       199	move.c	FUNCTION_4	IF_3
0x360	            0x85c0	                           test eax, eax	       199	move.c	FUNCTION_4	IF_3
0x362	            0x7e12	                           jle 0x40003b6	       199	move.c	FUNCTION_4	IF_3
0x364	    0x8b0500000000	            mov eax, dword [0x040003aa] 	       200	move.c	FUNCTION_4	IF_3
0x36a	          0x83e801	                              sub eax, 1	       200	move.c	FUNCTION_4	IF_3
0x36d	            0x4898	                                    cdqe	       200	move.c	FUNCTION_4	IF_3
0x36f	    0x488905000000	            mov qword [0x040003b6], rax 	       200	move.c	FUNCTION_4	IF_3
0x376	    0x488b05000000	            mov rax, qword [0x040003bd] 	       203	move.c	FUNCTION_4
0x37d	        0x488b4078	            mov rax, qword [rax + 0x78] 	       203	move.c	FUNCTION_4
0x381	        0x488945c8	             mov qword [rbp - 0x38], rax	       203	move.c	FUNCTION_4
0x385	    0x488b05000000	            mov rax, qword [0x040003cc] 	       205	move.c	FUNCTION_4
0x38c	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	       205	move.c	FUNCTION_4
0x392	          0x8945b4	             mov dword [rbp - 0x4c], eax	       205	move.c	FUNCTION_4
0x395	    0x488b05000000	            mov rax, qword [0x040003dc] 	       211	move.c	FUNCTION_4	IF_4	CALL_3
0x39c	          0x488b00	                    mov rax, qword [rax]	       211	move.c	FUNCTION_4	IF_4	CALL_3
0x39f	        0x4883f801	                              cmp rax, 1	       211	move.c	FUNCTION_4	IF_4	CALL_3
0x3a3	     0xf8581000000	                           jne 0x400046a	       211	move.c	FUNCTION_4	IF_4	CALL_3
0x3a9	      0xbf01000000	                              mov edi, 1	       211	move.c	FUNCTION_4	IF_4	CALL_3
0x3ae	      0xe800000000	                          call 0x40003f3	       211	move.c	FUNCTION_4	IF_4	CALL_3
0x3b3	           0xfb600	                   movzx eax, byte [rax]	       211	move.c	FUNCTION_4	IF_4	CALL_3
0x3b6	            0x84c0	                             test al, al	       211	move.c	FUNCTION_4	IF_4	CALL_3
0x3b8	            0x7570	                           jne 0x400046a	       211	move.c	FUNCTION_4	IF_4	CALL_3
0x3ba	    0x488b05000000	            mov rax, qword [0x04000401] 	       213	move.c	FUNCTION_4	IF_4	IF_5
0x3c1	        0x488b4078	            mov rax, qword [rax + 0x78] 	       213	move.c	FUNCTION_4	IF_4	IF_5
0x3c5	        0x4883f801	                              cmp rax, 1	       213	move.c	FUNCTION_4	IF_4	IF_5
0x3c9	            0x740a	                            je 0x4000415	       213	move.c	FUNCTION_4	IF_4	IF_5
0x3cb	      0xbf28000000	                           mov edi, 0x28	       214	move.c	FUNCTION_4	IF_4	CALL_4
0x3d0	      0xe800000000	                          call 0x4000415	       214	move.c	FUNCTION_4	IF_4	CALL_4
0x3d5	    0x488b05000000	            mov rax, qword [0x0400041c] 	       215	move.c	FUNCTION_4	IF_4
0x3dc	    0x48c740780100	               mov qword [rax + 0x78], 1	       215	move.c	FUNCTION_4	IF_4
0x3e4	    0x488b05000000	            mov rax, qword [0x0400042b] 	       216	move.c	FUNCTION_4	IF_4
0x3eb	    0x48c780e80000	               mov qword [rax + 0xe8], 2	       216	move.c	FUNCTION_4	IF_4
0x3f6	    0x488b05000000	            mov rax, qword [0x0400043d] 	       217	move.c	FUNCTION_4	IF_4
0x3fd	    0x488b15000000	            mov rdx, qword [0x04000444] 	       217	move.c	FUNCTION_4	IF_4
0x404	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	       217	move.c	FUNCTION_4	IF_4
0x40a	          0x83ca60	                            or edx, 0x60	       217	move.c	FUNCTION_4	IF_4
0x40d	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       217	move.c	FUNCTION_4	IF_4
0x413	    0x488b05000000	            mov rax, qword [0x0400045a] 	       219	move.c	FUNCTION_4	IF_4
0x41a	    0x48c780500500	              mov qword [rax + 0x550], 1	       219	move.c	FUNCTION_4	IF_4
0x425	      0xe9c1010000	                           jmp 0x400062b	       219	move.c	FUNCTION_4	IF_4
0x42a	    0x488b05000000	            mov rax, qword [0x04000471] 	       229	move.c	FUNCTION_4	ELSE_1	IF_6
0x431	        0x488b4078	            mov rax, qword [rax + 0x78] 	       229	move.c	FUNCTION_4	ELSE_1	IF_6
0x435	        0x4883f801	                              cmp rax, 1	       229	move.c	FUNCTION_4	ELSE_1	IF_6
0x439	            0x7e34	                           jle 0x40004af	       229	move.c	FUNCTION_4	ELSE_1	IF_6
0x43b	    0x488b05000000	            mov rax, qword [0x04000482] 	       234	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x442	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       234	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x446	    0x488b05000000	            mov rax, qword [0x0400048d] 	       234	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x44d	        0x488b4078	            mov rax, qword [rax + 0x78] 	       234	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x451	          0x4839c2	                            cmp rdx, rax	       234	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x454	            0x7d09	                           jge 0x400049f	       234	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x456	    0xc745a8010000	               mov dword [rbp - 0x58], 1	       235	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x45d	            0xeb10	                           jmp 0x40004af	       235	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x45f	      0xe848050000	               call sym.check_top_offset	       236	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8	CALL_5
0x464	            0x85c0	                           test eax, eax	       236	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8	CALL_5
0x466	            0x7407	                            je 0x40004af	       236	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8	CALL_5
0x468	    0xc745a8010000	               mov dword [rbp - 0x58], 1	       237	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8
0x46f	        0x837da800	               cmp dword [rbp - 0x58], 0	       241	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x473	            0x7535	                           jne 0x40004ea	       241	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x475	    0x488b05000000	            mov rax, qword [0x040004bc] 	       241	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x47c	    0x8b9884000000	            mov ebx, dword [rax + 0x84] 	       241	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x482	    0x488b05000000	            mov rax, qword [0x040004c9] 	       242	move.c	FUNCTION_4	ELSE_1	IF_9
0x489	        0x488b5078	            mov rdx, qword [rax + 0x78] 	       241	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x48d	    0x488b05000000	            mov rax, qword [0x040004d4] 	       241	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x494	          0x4889d6	                            mov rsi, rdx	       241	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x497	          0x4889c7	                            mov rdi, rax	       241	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x49a	      0xe800000000	                          call 0x40004df	       241	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x49f	            0x39c3	                            cmp ebx, eax	       241	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x4a1	            0x7e07	                           jle 0x40004ea	       241	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x4a3	    0xc745a8010000	               mov dword [rbp - 0x58], 1	       243	move.c	FUNCTION_4	ELSE_1	IF_9
0x4aa	        0x837da800	               cmp dword [rbp - 0x58], 0	       246	move.c	FUNCTION_4	ELSE_1	IF_10
0x4ae	     0xf840a010000	                            je 0x40005fe	       246	move.c	FUNCTION_4	ELSE_1	IF_10
0x4b4	    0x488b05000000	            mov rax, qword [0x040004fb] 	       248	move.c	FUNCTION_4	ELSE_1	IF_10
0x4bb	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       248	move.c	FUNCTION_4	ELSE_1	IF_10
0x4c1	            0x89c2	                            mov edx, eax	       248	move.c	FUNCTION_4	ELSE_1	IF_10
0x4c3	          0xc1ea1f	                           shr edx, 0x1f	       248	move.c	FUNCTION_4	ELSE_1	IF_10
0x4c6	             0x1d0	                            add eax, edx	       248	move.c	FUNCTION_4	ELSE_1	IF_10
0x4c8	            0xd1f8	                              sar eax, 1	       248	move.c	FUNCTION_4	ELSE_1	IF_10
0x4ca	          0x83e801	                              sub eax, 1	       248	move.c	FUNCTION_4	ELSE_1	IF_10
0x4cd	          0x8945a0	             mov dword [rbp - 0x60], eax	       248	move.c	FUNCTION_4	ELSE_1	IF_10
0x4d0	        0x837da001	               cmp dword [rbp - 0x60], 1	       249	move.c	FUNCTION_4	ELSE_1	IF_10	IF_11
0x4d4	            0x7f07	                            jg 0x400051d	       249	move.c	FUNCTION_4	ELSE_1	IF_10	IF_11
0x4d6	    0xc745a0020000	               mov dword [rbp - 0x60], 2	       250	move.c	FUNCTION_4	ELSE_1	IF_10	IF_11
0x4dd	    0x488b05000000	            mov rax, qword [0x04000524] 	       253	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	CALL_7
0x4e4	          0x4889c7	                            mov rdi, rax	       253	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	CALL_7
0x4e7	      0xe800000000	                          call 0x400052c	       253	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	CALL_7
0x4ec	            0x85c0	                           test eax, eax	       253	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	CALL_7
0x4ee	            0x7478	                            je 0x40005a8	       253	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	CALL_7
0x4f0	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       258	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12
0x4f7	    0x488b05000000	            mov rax, qword [0x0400053e] 	       259	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4fe	        0x488b4038	            mov rax, qword [rax + 0x38] 	       259	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x502	        0x488945b8	             mov qword [rbp - 0x48], rax	       259	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x506	            0xeb40	                           jmp 0x4000588	       259	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x508	        0x8345a401	               add dword [rbp - 0x5c], 1	       262	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x50c	    0x488b05000000	            mov rax, qword [0x04000553] 	       264	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x513	          0x488b10	                    mov rdx, qword [rax]	       264	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x516	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       264	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x51a	          0x4839c2	                            cmp rdx, rax	       264	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x51d	            0x7e71	                           jle 0x40005d0	       264	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x51f	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       264	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x522	          0x3b45a0	             cmp eax, dword [rbp - 0x60]	       264	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x525	            0x7d69	                           jge 0x40005d0	       264	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x527	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       266	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	CALL_8
0x52b	        0x488d55b8	                   lea rdx, [rbp - 0x48]	       266	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	CALL_8
0x52f	      0xbe00000000	                              mov esi, 0	       266	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	CALL_8
0x534	          0x4889c7	                            mov rdi, rax	       266	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	CALL_8
0x537	      0xe800000000	                          call 0x400057c	       266	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	CALL_8
0x53c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x540	        0x4883c001	                              add rax, 1	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x544	        0x488945b8	             mov qword [rbp - 0x48], rax	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x548	    0x488b05000000	            mov rax, qword [0x0400058f] 	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x54f	        0x488b5078	            mov rdx, qword [rax + 0x78] 	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x553	    0x488b05000000	            mov rax, qword [0x0400059a] 	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x55a	          0x4801c2	                            add rdx, rax	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x55d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x561	          0x4839c2	                            cmp rdx, rax	       259	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x564	            0x7fa2	                            jg 0x4000548	       259	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x566	            0xeb28	                           jmp 0x40005d0	       259	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x568	    0x488b05000000	            mov rax, qword [0x040005af] 	       271	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x56f	        0x488b4078	            mov rax, qword [rax + 0x78] 	       271	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x573	            0x89c2	                            mov edx, eax	       271	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x575	    0x488b05000000	            mov rax, qword [0x040005bc] 	       271	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x57c	             0x1c2	                            add edx, eax	       271	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x57e	    0x488b05000000	            mov rax, qword [0x040005c5] 	       271	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x585	        0x488b4038	            mov rax, qword [rax + 0x38] 	       271	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x589	            0x29c2	                            sub edx, eax	       271	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x58b	            0x89d0	                            mov eax, edx	       271	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x58d	          0x8945a4	             mov dword [rbp - 0x5c], eax	       271	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x590	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       276	move.c	FUNCTION_4	ELSE_1	IF_10	IF_14
0x593	          0x3b45a0	             cmp eax, dword [rbp - 0x60]	       276	move.c	FUNCTION_4	ELSE_1	IF_10	IF_14
0x596	            0x7c0c	                            jl 0x40005e4	       276	move.c	FUNCTION_4	ELSE_1	IF_10	IF_14
0x598	      0xbf00000000	                              mov edi, 0	       277	move.c	FUNCTION_4	ELSE_1	IF_10	CALL_9
0x59d	      0xe800000000	                          call 0x40005e2	       277	move.c	FUNCTION_4	ELSE_1	IF_10	CALL_9
0x5a2	            0xeb47	                           jmp 0x400062b	       277	move.c	FUNCTION_4	ELSE_1	IF_10	CALL_9
0x5a4	      0xe8a0030000	               call sym.scrolljump_value	       280	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4	CALL_11
0x5a9	      0xbe00000000	                              mov esi, 0	       280	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4	CALL_11
0x5ae	            0x89c7	                            mov edi, eax	       280	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4	CALL_11
0x5b0	      0xe800000000	                          call 0x40005f5	       280	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4	CALL_11
0x5b5	    0xc745ac010000	               mov dword [rbp - 0x54], 1	       281	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4
0x5bc	            0xeb2d	                           jmp 0x400062b	       281	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4
0x5be	    0x488b05000000	            mov rax, qword [0x04000605] 	       289	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x5c5	        0x488d4878	                   lea rcx, [rax + 0x78]	       289	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x5c9	    0x488b05000000	            mov rax, qword [0x04000610] 	       289	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x5d0	        0x488b4078	            mov rax, qword [rax + 0x78] 	       289	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x5d4	      0xba00000000	                              mov edx, 0	       289	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x5d9	          0x4889ce	                            mov rsi, rcx	       289	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x5dc	          0x4889c7	                            mov rdi, rax	       289	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x5df	      0xe800000000	                          call 0x4000624	       289	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x5e4	    0xc745ac010000	               mov dword [rbp - 0x54], 1	       291	move.c	FUNCTION_4	ELSE_1	ELSE_5
0x5eb	        0x837dac00	               cmp dword [rbp - 0x54], 0	       303	move.c	FUNCTION_4	IF_15
0x5ef	     0xf8488020000	                            je 0x40008bd	       303	move.c	FUNCTION_4	IF_15
0x5f5	    0x488b05000000	            mov rax, qword [0x0400063c] 	       305	move.c	FUNCTION_4	IF_15	IF_16
0x5fc	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       305	move.c	FUNCTION_4	IF_15	IF_16
0x602	          0x83e040	                           and eax, 0x40	       305	move.c	FUNCTION_4	IF_15	IF_16
0x605	            0x85c0	                           test eax, eax	       305	move.c	FUNCTION_4	IF_15	IF_16
0x607	            0x7505	                           jne 0x400064e	       305	move.c	FUNCTION_4	IF_15	IF_16
0x609	      0xe800000000	                          call 0x400064e	       306	move.c	FUNCTION_4	IF_15	CALL_13
0x60e	    0x488b05000000	            mov rax, qword [0x04000655] 	       308	move.c	FUNCTION_4	IF_15	IF_17
0x615	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	       308	move.c	FUNCTION_4	IF_15	IF_17
0x61c	    0x488b05000000	            mov rax, qword [0x04000663] 	       308	move.c	FUNCTION_4	IF_15	IF_17
0x623	          0x488b00	                    mov rax, qword [rax]	       308	move.c	FUNCTION_4	IF_15	IF_17
0x626	          0x4839c2	                            cmp rdx, rax	       308	move.c	FUNCTION_4	IF_15	IF_17
0x629	     0xf8f4e020000	                            jg 0x40008bd	       308	move.c	FUNCTION_4	IF_15	IF_17
0x62f	    0x488b05000000	            mov rax, qword [0x04000676] 	       310	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x636	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       310	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x63a	    0x488b05000000	            mov rax, qword [0x04000681] 	       310	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x641	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	       310	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x648	          0x4839c2	                            cmp rdx, rax	       310	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x64b	     0xf8d1b010000	                           jge 0x40007ac	       310	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x651	    0x488b05000000	            mov rax, qword [0x04000698] 	       312	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x658	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       312	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x65c	    0x488b05000000	            mov rax, qword [0x040006a3] 	       313	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x663	    0x488b88e80000	            mov rcx, qword [rax + 0xe8] 	       313	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x66a	    0x488b05000000	            mov rax, qword [0x040006b1] 	       313	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x671	          0x4829c1	                            sub rcx, rax	       313	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x674	          0x4889c8	                            mov rax, rcx	       313	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x677	          0x4839c2	                            cmp rdx, rax	       312	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x67a	            0x7d17	                           jge 0x40006d3	       312	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x67c	    0x488b05000000	            mov rax, qword [0x040006c3] 	       315	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x683	          0x4889c7	                            mov rdi, rax	       315	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x686	      0xe800000000	                          call 0x40006cb	       315	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x68b	            0x85c0	                           test eax, eax	       315	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x68d	     0xf84cf000000	                            je 0x40007a2	       315	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x693	    0x488b05000000	            mov rax, qword [0x040006da] 	       324	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x69a	    0x8b80f0000000	            mov eax, dword [rax + 0xf0] 	       324	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x6a0	          0x8945a4	             mov dword [rbp - 0x5c], eax	       324	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x6a3	    0x488b05000000	            mov rax, qword [0x040006ea] 	       325	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x6aa	        0x488b4038	            mov rax, qword [rax + 0x38] 	       325	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x6ae	        0x488945d0	             mov qword [rbp - 0x30], rax	       325	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x6b2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       328	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x6b6	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       328	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x6ba	      0xbe00000000	                              mov esi, 0	       328	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x6bf	          0x4889c7	                            mov rdi, rax	       328	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x6c2	      0xe800000000	                          call 0x4000707	       328	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x6c7	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x6ce	    0x488b05000000	            mov rax, qword [0x04000715] 	       332	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x6d5	    0x8b80f4000000	            mov eax, dword [rax + 0xf4] 	       332	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x6db	           0x145a4	             add dword [rbp - 0x5c], eax	       332	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x6de	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       334	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x6e5	            0xeb24	                           jmp 0x400074b	       335	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x6e7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       341	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x6ea	           0x145a4	             add dword [rbp - 0x5c], eax	       341	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x6ed	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       342	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x6f0	          0x4863d0	                         movsxd rdx, eax	       342	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x6f3	    0x488b05000000	            mov rax, qword [0x0400073a] 	       342	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x6fa	          0x4839c2	                            cmp rdx, rax	       342	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x6fd	            0x7d47	                           jge 0x4000786	       342	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x6ff	        0x488d45d0	                   lea rax, [rbp - 0x30]	       344	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	CALL_16
0x703	          0x4889c7	                            mov rdi, rax	       344	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	CALL_16
0x706	      0xe802280000	                   call sym.botline_forw	       344	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	CALL_16
0x70b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       335	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x70f	    0x488b05000000	            mov rax, qword [0x04000756] 	       335	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x716	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	       335	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x71d	          0x4839c2	                            cmp rdx, rax	       335	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x720	            0x7d25	                           jge 0x4000787	       335	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x722	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       337	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x726	        0x488d5001	                      lea rdx, [rax + 1]	       337	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x72a	    0x488b05000000	            mov rax, qword [0x04000771] 	       337	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x731	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	       337	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x738	          0x4839c2	                            cmp rdx, rax	       337	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x73b	            0x7caa	                            jl 0x4000727	       337	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x73d	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       337	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x740	            0x85c0	                           test eax, eax	       337	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x742	            0x74a3	                            je 0x4000727	       337	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x744	            0xeb01	                           jmp 0x4000787	       337	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x746	              0x90	                                     nop	       343	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x747	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       346	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	IF_21
0x74a	          0x4863d0	                         movsxd rdx, eax	       346	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	IF_21
0x74d	    0x488b05000000	            mov rax, qword [0x04000794] 	       346	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	IF_21
0x754	          0x4839c2	                            cmp rdx, rax	       346	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	IF_21
0x757	            0x7c12	                            jl 0x40007ab	       346	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	IF_21
0x759	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       348	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	IF_21
0x760	            0xeb09	                           jmp 0x40007ab	       318	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x762	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       352	move.c	FUNCTION_4	IF_15	IF_17	IF_18	ELSE_6
0x769	            0xeb01	                           jmp 0x40007ac	       352	move.c	FUNCTION_4	IF_15	IF_17	IF_18	ELSE_6
0x76b	              0x90	                                     nop	       318	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x76c	        0x837dac00	               cmp dword [rbp - 0x54], 0	       354	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22
0x770	     0xf8407010000	                            je 0x40008bd	       354	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22
0x776	    0x488b05000000	            mov rax, qword [0x040007bd] 	       357	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	CALL_17
0x77d	          0x4889c7	                            mov rdi, rax	       357	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	CALL_17
0x780	      0xe800000000	                          call 0x40007c5	       357	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	CALL_17
0x785	            0x85c0	                           test eax, eax	       357	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	CALL_17
0x787	     0xf848a000000	                            je 0x4000857	       357	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	CALL_17
0x78d	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       362	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23
0x795	    0x488b05000000	            mov rax, qword [0x040007dc] 	       363	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x79c	        0x488b4038	            mov rax, qword [rax + 0x38] 	       363	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x7a0	        0x488945b8	             mov qword [rbp - 0x48], rax	       363	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x7a4	            0xeb4e	                           jmp 0x4000834	       363	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x7a6	      0x488345c001	               add qword [rbp - 0x40], 1	       366	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x7ab	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       368	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x7af	          0x4885c0	                           test rax, rax	       368	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x7b2	     0xf8e90000000	                           jle 0x4000888	       368	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x7b8	    0x488b05000000	            mov rax, qword [0x040007ff] 	       368	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x7bf	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       368	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x7c5	          0x83c001	                              add eax, 1	       368	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x7c8	            0x4898	                                    cdqe	       368	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x7ca	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       368	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x7ce	            0x7c78	                            jl 0x4000888	       368	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x7d0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       370	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x7d4	        0x488d4db8	                   lea rcx, [rbp - 0x48]	       370	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x7d8	      0xba00000000	                              mov edx, 0	       370	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x7dd	          0x4889ce	                            mov rsi, rcx	       370	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x7e0	          0x4889c7	                            mov rdi, rax	       370	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x7e3	      0xe800000000	                          call 0x4000828	       370	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x7e8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x7ec	        0x4883e801	                              sub rax, 1	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x7f0	        0x488945b8	             mov qword [rbp - 0x48], rax	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x7f4	    0x488b05000000	            mov rax, qword [0x0400083b] 	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x7fb	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x802	    0x488b05000000	            mov rax, qword [0x04000849] 	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x809	          0x4829c2	                            sub rdx, rax	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x80c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x810	          0x4839c2	                            cmp rdx, rax	       363	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x813	            0x7e91	                           jle 0x40007e6	       363	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x815	            0xeb31	                           jmp 0x4000888	       363	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x817	    0x488b05000000	            mov rax, qword [0x0400085e] 	       375	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x81e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       375	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x822	    0x488b05000000	            mov rax, qword [0x04000869] 	       375	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x829	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	       375	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x830	          0x4829c2	                            sub rdx, rax	       375	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x833	          0x4889d0	                            mov rax, rdx	       375	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x836	        0x488d5001	                      lea rdx, [rax + 1]	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x83a	    0x488b05000000	            mov rax, qword [0x04000881] 	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x841	          0x4801d0	                            add rax, rdx	       375	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x844	        0x488945c0	             mov qword [rbp - 0x40], rax	       375	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x848	    0x488b05000000	            mov rax, qword [0x0400088f] 	       377	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x84f	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       377	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x855	          0x83c001	                              add eax, 1	       377	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x858	            0x4898	                                    cdqe	       377	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x85a	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       377	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x85e	            0x7c13	                            jl 0x40008b3	       377	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x860	      0xe8e4000000	               call sym.scrolljump_value	       378	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x865	      0xbe00000000	                              mov esi, 0	       378	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x86a	            0x89c7	                            mov edi, eax	       378	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x86c	      0xe800000000	                          call 0x40008b1	       378	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x871	            0xeb0a	                           jmp 0x40008bd	       378	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x873	      0xbf00000000	                              mov edi, 0	       380	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x878	      0xe800000000	                          call 0x40008bd	       380	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x87d	    0x488b05000000	            mov rax, qword [0x040008c4] 	       384	move.c	FUNCTION_4
0x884	    0x488b15000000	            mov rdx, qword [0x040008cb] 	       384	move.c	FUNCTION_4
0x88b	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	       384	move.c	FUNCTION_4
0x891	          0x80ca80	                             or dl, 0x80	       384	move.c	FUNCTION_4
0x894	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       384	move.c	FUNCTION_4
0x89a	    0x488b05000000	            mov rax, qword [0x040008e1] 	       389	move.c	FUNCTION_4	IF_26
0x8a1	        0x488b4078	            mov rax, qword [rax + 0x78] 	       389	move.c	FUNCTION_4	IF_26
0x8a5	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       389	move.c	FUNCTION_4	IF_26
0x8a9	            0x7512	                           jne 0x40008fd	       389	move.c	FUNCTION_4	IF_26
0x8ab	    0x488b05000000	            mov rax, qword [0x040008f2] 	       391	move.c	FUNCTION_4	IF_26
0x8b2	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	       391	move.c	FUNCTION_4	IF_26
0x8b8	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	       391	move.c	FUNCTION_4	IF_26
0x8bb	            0x7462	                            je 0x400095f	       391	move.c	FUNCTION_4	IF_26
0x8bd	    0xc70500000000	     mov dword [0x04000907], 0xffffffff 	       395	move.c	FUNCTION_4	IF_26
0x8c7	    0x488b05000000	            mov rax, qword [0x0400090e] 	       396	move.c	FUNCTION_4	IF_26	IF_27
0x8ce	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	       396	move.c	FUNCTION_4	IF_26	IF_27
0x8d4	            0x85c0	                           test eax, eax	       396	move.c	FUNCTION_4	IF_26	IF_27
0x8d6	            0x741d	                            je 0x4000935	       396	move.c	FUNCTION_4	IF_26	IF_27
0x8d8	    0x488b05000000	            mov rax, qword [0x0400091f] 	       398	move.c	FUNCTION_4	IF_26	IF_27
0x8df	    0xc78098000000	               mov dword [rax + 0x98], 0	       398	move.c	FUNCTION_4	IF_26	IF_27
0x8e9	      0xbf28000000	                           mov edi, 0x28	       399	move.c	FUNCTION_4	IF_26	IF_27	CALL_22
0x8ee	      0xe800000000	                          call 0x4000933	       399	move.c	FUNCTION_4	IF_26	IF_27	CALL_22
0x8f3	            0xeb0a	                           jmp 0x400093f	       399	move.c	FUNCTION_4	IF_26	IF_27	CALL_22
0x8f5	      0xbf0a000000	                            mov edi, 0xa	       402	move.c	FUNCTION_4	IF_26	CALL_23
0x8fa	      0xe800000000	                          call 0x400093f	       402	move.c	FUNCTION_4	IF_26	CALL_23
0x8ff	    0x488b05000000	            mov rax, qword [0x04000946] 	       404	move.c	FUNCTION_4	IF_26	IF_28
0x906	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       404	move.c	FUNCTION_4	IF_26	IF_28
0x90a	    0x488b05000000	            mov rax, qword [0x04000951] 	       404	move.c	FUNCTION_4	IF_26	IF_28
0x911	        0x488b4078	            mov rax, qword [rax + 0x78] 	       404	move.c	FUNCTION_4	IF_26	IF_28
0x915	          0x4839c2	                            cmp rdx, rax	       404	move.c	FUNCTION_4	IF_26	IF_28
0x918	            0x7505	                           jne 0x400095f	       404	move.c	FUNCTION_4	IF_26	IF_28
0x91a	      0xe800000000	                          call 0x400095f	       405	move.c	FUNCTION_4	IF_26	CALL_24
0x91f	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       409	move.c	FUNCTION_4
0x922	            0x4898	                                    cdqe	       409	move.c	FUNCTION_4
0x924	    0x488905000000	            mov qword [0x0400096b], rax 	       409	move.c	FUNCTION_4
0x92b	            0xeb01	                           jmp 0x400096e	       409	move.c	FUNCTION_4
0x92d	              0x90	                                     nop	       195	move.c	FUNCTION_4	IF_2
0x92e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       411	move.c	FUNCTION_4
0x932	    0x644833042528	                xor rax, qword fs:[0x28]	       411	move.c	FUNCTION_4
0x93b	            0x7405	                            je 0x4000982	       411	move.c	FUNCTION_4
0x93d	      0xe800000000	                          call 0x4000982	       411	move.c	FUNCTION_4
0x942	        0x4883c458	                           add rsp, 0x58	       411	move.c	FUNCTION_4
0x946	              0x5b	                                 pop rbx	       411	move.c	FUNCTION_4
0x947	              0x5d	                                 pop rbp	       411	move.c	FUNCTION_4
0x948	              0xc3	                                     ret	       411	move.c	FUNCTION_4
changed_window_setting	CALL,1:WHILE,0:SWITCH,0:functions,0:DO,0:IF,0:ELSE,0:FOR,0	8
0xbf0	              0x55	                                push rbp	       515	move.c	FUNCTION_9
0xbf1	          0x4889e5	                            mov rbp, rsp	       515	move.c	FUNCTION_9
0xbf4	    0x488b05000000	            mov rax, qword [0x04000c3b] 	       516	move.c	FUNCTION_9	CALL_1
0xbfb	          0x4889c7	                            mov rdi, rax	       516	move.c	FUNCTION_9	CALL_1
0xbfe	      0xe800000000	                          call 0x4000c43	       516	move.c	FUNCTION_9	CALL_1
0xc03	              0x90	                                     nop	       517	move.c	FUNCTION_9
0xc04	              0x5d	                                 pop rbp	       517	move.c	FUNCTION_9
0xc05	              0xc3	                                     ret	       517	move.c	FUNCTION_9
check_cursor_moved	CALL,0:WHILE,0:SWITCH,0:functions,0:DO,0:IF,2:ELSE,1:FOR,0	65
0xaed	              0x55	                                push rbp	       484	move.c	FUNCTION_8
0xaee	          0x4889e5	                            mov rbp, rsp	       484	move.c	FUNCTION_8
0xaf1	        0x48897df8	                mov qword [rbp - 8], rdi	       484	move.c	FUNCTION_8
0xaf5	        0x488b45f8	                mov rax, qword [rbp - 8]	       485	move.c	FUNCTION_8	IF_1
0xaf9	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       485	move.c	FUNCTION_8	IF_1
0xafd	        0x488b45f8	                mov rax, qword [rbp - 8]	       485	move.c	FUNCTION_8	IF_1
0xb01	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       485	move.c	FUNCTION_8	IF_1
0xb08	          0x4839c2	                            cmp rdx, rax	       485	move.c	FUNCTION_8	IF_1
0xb0b	            0x744f	                            je 0x4000b9c	       485	move.c	FUNCTION_8	IF_1
0xb0d	        0x488b45f8	                mov rax, qword [rbp - 8]	       487	move.c	FUNCTION_8	IF_1
0xb11	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       487	move.c	FUNCTION_8	IF_1
0xb17	            0x2460	                            and al, 0x60	       487	move.c	FUNCTION_8	IF_1
0xb19	            0x89c2	                            mov edx, eax	       487	move.c	FUNCTION_8	IF_1
0xb1b	        0x488b45f8	                mov rax, qword [rbp - 8]	       487	move.c	FUNCTION_8	IF_1
0xb1f	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       487	move.c	FUNCTION_8	IF_1
0xb25	        0x488b4df8	                mov rcx, qword [rbp - 8]	       489	move.c	FUNCTION_8	IF_1
0xb29	        0x488b45f8	                mov rax, qword [rbp - 8]	       489	move.c	FUNCTION_8	IF_1
0xb2d	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       489	move.c	FUNCTION_8	IF_1
0xb31	        0x488b4038	            mov rax, qword [rax + 0x38] 	       489	move.c	FUNCTION_8	IF_1
0xb35	    0x488981b80000	             mov qword [rcx + 0xb8], rax	       489	move.c	FUNCTION_8	IF_1
0xb3c	    0x488991c00000	             mov qword [rcx + 0xc0], rdx	       489	move.c	FUNCTION_8	IF_1
0xb43	        0x488b45f8	                mov rax, qword [rbp - 8]	       490	move.c	FUNCTION_8	IF_1
0xb47	    0x8b9094000000	            mov edx, dword [rax + 0x94] 	       490	move.c	FUNCTION_8	IF_1
0xb4d	        0x488b45f8	                mov rax, qword [rbp - 8]	       490	move.c	FUNCTION_8	IF_1
0xb51	    0x8990c8000000	             mov dword [rax + 0xc8], edx	       490	move.c	FUNCTION_8	IF_1
0xb57	      0xe991000000	                           jmp 0x4000c2d	       506	move.c	FUNCTION_8
0xb5c	        0x488b45f8	                mov rax, qword [rbp - 8]	       492	move.c	FUNCTION_8	ELSE_1	IF_2
0xb60	          0x8b5040	            mov edx, dword [rax + 0x40] 	       492	move.c	FUNCTION_8	ELSE_1	IF_2
0xb63	        0x488b45f8	                mov rax, qword [rbp - 8]	       492	move.c	FUNCTION_8	ELSE_1	IF_2
0xb67	    0x8b80c0000000	            mov eax, dword [rax + 0xc0] 	       492	move.c	FUNCTION_8	ELSE_1	IF_2
0xb6d	            0x39c2	                            cmp edx, eax	       492	move.c	FUNCTION_8	ELSE_1	IF_2
0xb6f	            0x752d	                           jne 0x4000bde	       492	move.c	FUNCTION_8	ELSE_1	IF_2
0xb71	        0x488b45f8	                mov rax, qword [rbp - 8]	       493	move.c	FUNCTION_8	ELSE_1	IF_2
0xb75	    0x8b9094000000	            mov edx, dword [rax + 0x94] 	       493	move.c	FUNCTION_8	ELSE_1	IF_2
0xb7b	        0x488b45f8	                mov rax, qword [rbp - 8]	       493	move.c	FUNCTION_8	ELSE_1	IF_2
0xb7f	    0x8b80c8000000	            mov eax, dword [rax + 0xc8] 	       493	move.c	FUNCTION_8	ELSE_1	IF_2
0xb85	            0x39c2	                            cmp edx, eax	       493	move.c	FUNCTION_8	ELSE_1	IF_2
0xb87	            0x7515	                           jne 0x4000bde	       493	move.c	FUNCTION_8	ELSE_1	IF_2
0xb89	        0x488b45f8	                mov rax, qword [rbp - 8]	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0xb8d	          0x8b5044	            mov edx, dword [rax + 0x44] 	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0xb90	        0x488b45f8	                mov rax, qword [rbp - 8]	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0xb94	    0x8b80c4000000	            mov eax, dword [rax + 0xc4] 	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0xb9a	            0x39c2	                            cmp edx, eax	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0xb9c	            0x744f	                            je 0x4000c2d	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0xb9e	        0x488b45f8	                mov rax, qword [rbp - 8]	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0xba2	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0xba8	          0x83e0f8	                     and eax, 0xfffffff8	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0xbab	            0x89c2	                            mov edx, eax	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0xbad	        0x488b45f8	                mov rax, qword [rbp - 8]	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0xbb1	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0xbb7	        0x488b45f8	                mov rax, qword [rbp - 8]	       500	move.c	FUNCTION_8	ELSE_1	IF_2
0xbbb	          0x8b5040	            mov edx, dword [rax + 0x40] 	       500	move.c	FUNCTION_8	ELSE_1	IF_2
0xbbe	        0x488b45f8	                mov rax, qword [rbp - 8]	       500	move.c	FUNCTION_8	ELSE_1	IF_2
0xbc2	    0x8990c0000000	             mov dword [rax + 0xc0], edx	       500	move.c	FUNCTION_8	ELSE_1	IF_2
0xbc8	        0x488b45f8	                mov rax, qword [rbp - 8]	       501	move.c	FUNCTION_8	ELSE_1	IF_2
0xbcc	    0x8b9094000000	            mov edx, dword [rax + 0x94] 	       501	move.c	FUNCTION_8	ELSE_1	IF_2
0xbd2	        0x488b45f8	                mov rax, qword [rbp - 8]	       501	move.c	FUNCTION_8	ELSE_1	IF_2
0xbd6	    0x8990c8000000	             mov dword [rax + 0xc8], edx	       501	move.c	FUNCTION_8	ELSE_1	IF_2
0xbdc	        0x488b45f8	                mov rax, qword [rbp - 8]	       503	move.c	FUNCTION_8	ELSE_1	IF_2
0xbe0	          0x8b5044	            mov edx, dword [rax + 0x44] 	       503	move.c	FUNCTION_8	ELSE_1	IF_2
0xbe3	        0x488b45f8	                mov rax, qword [rbp - 8]	       503	move.c	FUNCTION_8	ELSE_1	IF_2
0xbe7	    0x8990c4000000	             mov dword [rax + 0xc4], edx	       503	move.c	FUNCTION_8	ELSE_1	IF_2
0xbed	              0x90	                                     nop	       506	move.c	FUNCTION_8
0xbee	              0x5d	                                 pop rbp	       506	move.c	FUNCTION_8
0xbef	              0xc3	                                     ret	       506	move.c	FUNCTION_8
scrolldown	CALL,13:WHILE,2:SWITCH,0:functions,0:DO,0:IF,9:ELSE,4:FOR,0	216
0x22b6	              0x55	                                push rbp	      1186	move.c	FUNCTION_33
0x22b7	          0x4889e5	                            mov rbp, rsp	      1186	move.c	FUNCTION_33
0x22ba	              0x53	                                push rbx	      1186	move.c	FUNCTION_33
0x22bb	        0x4883ec38	                           sub rsp, 0x38	      1186	move.c	FUNCTION_33
0x22bf	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1186	move.c	FUNCTION_33
0x22c3	          0x8975c4	             mov dword [rbp - 0x3c], esi	      1186	move.c	FUNCTION_33
0x22c6	    0x64488b042528	                mov rax, qword fs:[0x28]	      1186	move.c	FUNCTION_33
0x22cf	        0x488945e8	             mov qword [rbp - 0x18], rax	      1186	move.c	FUNCTION_33
0x22d3	            0x31c0	                            xor eax, eax	      1186	move.c	FUNCTION_33
0x22d5	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1187	move.c	FUNCTION_33
0x22dd	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1189	move.c	FUNCTION_33
0x22e4	    0x488b05000000	            mov rax, qword [0x0400232b] 	      1195	move.c	FUNCTION_33	CALL_1
0x22eb	        0x488d4878	                   lea rcx, [rax + 0x78]	      1195	move.c	FUNCTION_33	CALL_1
0x22ef	    0x488b05000000	            mov rax, qword [0x04002336] 	      1195	move.c	FUNCTION_33	CALL_1
0x22f6	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1195	move.c	FUNCTION_33	CALL_1
0x22fa	      0xba00000000	                              mov edx, 0	      1195	move.c	FUNCTION_33	CALL_1
0x22ff	          0x4889ce	                            mov rsi, rcx	      1195	move.c	FUNCTION_33	CALL_1
0x2302	          0x4889c7	                            mov rdi, rax	      1195	move.c	FUNCTION_33	CALL_1
0x2305	      0xe800000000	                          call 0x400234a	      1195	move.c	FUNCTION_33	CALL_1
0x230a	      0xe800000000	                          call 0x400234f	      1197	move.c	FUNCTION_33	CALL_2
0x230f	      0xe972010000	                           jmp 0x40024c6	      1198	move.c	FUNCTION_33	WHILE_1
0x2314	    0x488b05000000	            mov rax, qword [0x0400235b] 	      1201	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x231b	    0x8b9884000000	            mov ebx, dword [rax + 0x84] 	      1201	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x2321	    0x488b05000000	            mov rax, qword [0x04002368] 	      1201	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x2328	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1201	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x232c	    0x488b05000000	            mov rax, qword [0x04002373] 	      1201	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x2333	          0x4889d6	                            mov rsi, rdx	      1201	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x2336	          0x4889c7	                            mov rdi, rax	      1201	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x2339	      0xe800000000	                          call 0x400237e	      1201	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x233e	            0x39c3	                            cmp ebx, eax	      1201	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x2340	            0x7d41	                           jge 0x40023c3	      1201	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x2342	    0x488b05000000	            mov rax, qword [0x04002389] 	      1202	move.c	FUNCTION_33	WHILE_1	IF_1
0x2349	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      1202	move.c	FUNCTION_33	WHILE_1	IF_1
0x234f	    0x488b05000000	            mov rax, qword [0x04002396] 	      1202	move.c	FUNCTION_33	WHILE_1	IF_1
0x2356	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1202	move.c	FUNCTION_33	WHILE_1	IF_1
0x235c	          0x83e801	                              sub eax, 1	      1202	move.c	FUNCTION_33	WHILE_1	IF_1
0x235f	            0x39c2	                            cmp edx, eax	      1202	move.c	FUNCTION_33	WHILE_1	IF_1
0x2361	            0x7d20	                           jge 0x40023c3	      1202	move.c	FUNCTION_33	WHILE_1	IF_1
0x2363	    0x488b05000000	            mov rax, qword [0x040023aa] 	      1204	move.c	FUNCTION_33	WHILE_1	IF_1
0x236a	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      1204	move.c	FUNCTION_33	WHILE_1	IF_1
0x2370	          0x83c201	                              add edx, 1	      1204	move.c	FUNCTION_33	WHILE_1	IF_1
0x2373	    0x899084000000	             mov dword [rax + 0x84], edx	      1204	move.c	FUNCTION_33	WHILE_1	IF_1
0x2379	      0x488345e001	               add qword [rbp - 0x20], 1	      1205	move.c	FUNCTION_33	WHILE_1	IF_1
0x237e	      0xe9e5000000	                           jmp 0x40024a8	      1205	move.c	FUNCTION_33	WHILE_1	IF_1
0x2383	    0x488b05000000	            mov rax, qword [0x040023ca] 	      1210	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_2
0x238a	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1210	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_2
0x238e	        0x4883f801	                              cmp rax, 1	      1210	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_2
0x2392	     0xf8405010000	                            je 0x40024dd	      1210	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_2
0x2398	    0x488b05000000	            mov rax, qword [0x040023df] 	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1
0x239f	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1
0x23a3	        0x4883ea01	                              sub rdx, 1	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1
0x23a7	        0x48895078	             mov qword [rax + 0x78], rdx	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1
0x23ab	    0x488b05000000	            mov rax, qword [0x040023f2] 	      1214	move.c	FUNCTION_33	WHILE_1	ELSE_1
0x23b2	    0xc78084000000	               mov dword [rax + 0x84], 0	      1214	move.c	FUNCTION_33	WHILE_1	ELSE_1
0x23bc	    0x488b05000000	            mov rax, qword [0x04002403] 	      1218	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x23c3	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1218	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x23c7	        0x488d4dd8	                   lea rcx, [rbp - 0x28]	      1218	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x23cb	      0xba00000000	                              mov edx, 0	      1218	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x23d0	          0x4889ce	                            mov rsi, rcx	      1218	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x23d3	          0x4889c7	                            mov rdi, rax	      1218	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x23d6	      0xe800000000	                          call 0x400241b	      1218	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x23db	            0x85c0	                           test eax, eax	      1218	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x23dd	            0x7470	                            je 0x400248f	      1218	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x23df	      0x488345e001	               add qword [rbp - 0x20], 1	      1220	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x23e4	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1221	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x23e8	            0x751d	                           jne 0x4002447	      1221	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x23ea	    0x488b05000000	            mov rax, qword [0x04002431] 	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x23f1	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x23f5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x23f9	          0x4829c2	                            sub rdx, rax	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x23fc	          0x4889d0	                            mov rax, rdx	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x23ff	        0x4883e801	                              sub rax, 1	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x2403	        0x482945c8	             sub qword [rbp - 0x38], rax	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x2407	    0x488b05000000	            mov rax, qword [0x0400244e] 	      1223	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x240e	    0x488b15000000	            mov rdx, qword [0x04002455] 	      1223	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x2415	    0x488b8ae80000	            mov rcx, qword [rdx + 0xe8] 	      1223	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x241c	    0x488b15000000	            mov rdx, qword [0x04002463] 	      1223	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x2423	        0x488b7278	            mov rsi, qword [rdx + 0x78] 	      1223	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x2427	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1223	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x242b	          0x4829d6	                            sub rsi, rdx	      1223	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x242e	          0x4889f2	                            mov rdx, rsi	      1223	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x2431	          0x4829d1	                            sub rcx, rdx	      1223	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x2434	          0x4889ca	                            mov rdx, rcx	      1223	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x2437	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      1223	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x243e	    0x488b05000000	            mov rax, qword [0x04002485] 	      1224	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x2445	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1224	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x2449	        0x48895078	             mov qword [rax + 0x78], rdx	      1224	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x244d	            0xeb19	                           jmp 0x40024a8	      1224	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x244f	    0x488b05000000	            mov rax, qword [0x04002496] 	      1228	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x2456	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1228	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x245a	          0x4889c7	                            mov rdi, rax	      1228	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x245d	      0xe800000000	                          call 0x40024a2	      1228	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x2462	            0x4898	                                    cdqe	      1228	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x2464	        0x480145e0	            add qword [rbp - 0x20], rax 	      1228	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x2468	    0x488b05000000	            mov rax, qword [0x040024af] 	      1230	move.c	FUNCTION_33	WHILE_1
0x246f	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      1230	move.c	FUNCTION_33	WHILE_1
0x2476	        0x4883ea01	                              sub rdx, 1	      1230	move.c	FUNCTION_33	WHILE_1
0x247a	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      1230	move.c	FUNCTION_33	WHILE_1
0x2481	      0xe800000000	                          call 0x40024c6	      1231	move.c	FUNCTION_33	WHILE_1	CALL_6
0x2486	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1198	move.c	FUNCTION_33	WHILE_1
0x248a	        0x488d50ff	                      lea rdx, [rax - 1]	      1198	move.c	FUNCTION_33	WHILE_1
0x248e	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1198	move.c	FUNCTION_33	WHILE_1
0x2492	          0x4885c0	                           test rax, rax	      1198	move.c	FUNCTION_33	WHILE_1
0x2495	     0xf8f79feffff	                            jg 0x4002354	      1198	move.c	FUNCTION_33	WHILE_1
0x249b	            0xeb01	                           jmp 0x40024de	      1198	move.c	FUNCTION_33	WHILE_1
0x249d	              0x90	                                     nop	      1211	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_2
0x249e	    0x488b05000000	            mov rax, qword [0x040024e5] 	      1233	move.c	FUNCTION_33
0x24a5	    0x488b15000000	            mov rdx, qword [0x040024ec] 	      1233	move.c	FUNCTION_33
0x24ac	    0x8b92dc000000	            mov edx, dword [rdx + 0xdc] 	      1233	move.c	FUNCTION_33
0x24b2	            0x89d1	                            mov ecx, edx	      1233	move.c	FUNCTION_33
0x24b4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1233	move.c	FUNCTION_33
0x24b8	             0x1ca	                            add edx, ecx	      1233	move.c	FUNCTION_33
0x24ba	    0x8990dc000000	             mov dword [rax + 0xdc], edx	      1233	move.c	FUNCTION_33
0x24c0	    0x488b05000000	            mov rax, qword [0x04002507] 	      1234	move.c	FUNCTION_33
0x24c7	    0x488b15000000	            mov rdx, qword [0x0400250e] 	      1234	move.c	FUNCTION_33
0x24ce	    0x8b92d4000000	            mov edx, dword [rdx + 0xd4] 	      1234	move.c	FUNCTION_33
0x24d4	            0x89d1	                            mov ecx, edx	      1234	move.c	FUNCTION_33
0x24d6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1234	move.c	FUNCTION_33
0x24da	             0x1ca	                            add edx, ecx	      1234	move.c	FUNCTION_33
0x24dc	    0x8990d4000000	             mov dword [rax + 0xd4], edx	      1234	move.c	FUNCTION_33
0x24e2	    0x488b05000000	            mov rax, qword [0x04002529] 	      1237	move.c	FUNCTION_33	IF_5
0x24e9	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1237	move.c	FUNCTION_33	IF_5
0x24ed	    0x488b05000000	            mov rax, qword [0x04002534] 	      1237	move.c	FUNCTION_33	IF_5
0x24f4	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1237	move.c	FUNCTION_33	IF_5
0x24f8	          0x4839c2	                            cmp rdx, rax	      1237	move.c	FUNCTION_33	IF_5
0x24fb	            0x7511	                           jne 0x400254e	      1237	move.c	FUNCTION_33	IF_5
0x24fd	    0x488b05000000	            mov rax, qword [0x04002544] 	      1238	move.c	FUNCTION_33	IF_5
0x2504	    0xc780d4000000	               mov dword [rax + 0xd4], 0	      1238	move.c	FUNCTION_33	IF_5
0x250e	    0x488b05000000	            mov rax, qword [0x04002555] 	      1239	move.c	FUNCTION_33	CALL_7
0x2515	      0xbe01000000	                              mov esi, 1	      1239	move.c	FUNCTION_33	CALL_7
0x251a	          0x4889c7	                            mov rdi, rax	      1239	move.c	FUNCTION_33	CALL_7
0x251d	      0xe800000000	                          call 0x4002562	      1239	move.c	FUNCTION_33	CALL_7
0x2522	    0x488b05000000	            mov rax, qword [0x04002569] 	      1246	move.c	FUNCTION_33
0x2529	    0x8b80dc000000	            mov eax, dword [rax + 0xdc] 	      1246	move.c	FUNCTION_33
0x252f	          0x8945d0	             mov dword [rbp - 0x30], eax	      1246	move.c	FUNCTION_33
0x2532	    0x488b05000000	            mov rax, qword [0x04002579] 	      1247	move.c	FUNCTION_33	IF_6
0x2539	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      1247	move.c	FUNCTION_33	IF_6
0x253f	            0x85c0	                           test eax, eax	      1247	move.c	FUNCTION_33	IF_6
0x2541	     0xf84f1000000	                            je 0x4002678	      1247	move.c	FUNCTION_33	IF_6
0x2547	    0x488b05000000	            mov rax, qword [0x0400258e] 	      1247	move.c	FUNCTION_33	IF_6
0x254e	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1247	move.c	FUNCTION_33	IF_6
0x2554	            0x85c0	                           test eax, eax	      1247	move.c	FUNCTION_33	IF_6
0x2556	     0xf84dc000000	                            je 0x4002678	      1247	move.c	FUNCTION_33	IF_6
0x255c	      0xe800000000	                          call 0x40025a1	      1249	move.c	FUNCTION_33	IF_6	CALL_8
0x2561	      0xe899efffff	               call sym.validate_cheight	      1250	move.c	FUNCTION_33	IF_6	CALL_9
0x2566	    0x488b05000000	            mov rax, qword [0x040025ad] 	      1251	move.c	FUNCTION_33	IF_6
0x256d	    0x8b80cc000000	            mov eax, dword [rax + 0xcc] 	      1251	move.c	FUNCTION_33	IF_6
0x2573	          0x8d48ff	                      lea ecx, [rax - 1]	      1251	move.c	FUNCTION_33	IF_6
0x2576	    0x488b05000000	            mov rax, qword [0x040025bd] 	      1252	move.c	FUNCTION_33	IF_6
0x257d	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      1252	move.c	FUNCTION_33	IF_6
0x2583	    0x488b15000000	            mov rdx, qword [0x040025ca] 	      1252	move.c	FUNCTION_33	IF_6
0x258a	    0x8b9aac000000	            mov ebx, dword [rdx + 0xac] 	      1252	move.c	FUNCTION_33	IF_6
0x2590	              0x99	                                     cdq	      1252	move.c	FUNCTION_33	IF_6
0x2591	            0xf7fb	                                idiv ebx	      1252	move.c	FUNCTION_33	IF_6
0x2593	            0x29c1	                            sub ecx, eax	      1251	move.c	FUNCTION_33	IF_6
0x2595	            0x89c8	                            mov eax, ecx	      1251	move.c	FUNCTION_33	IF_6
0x2597	           0x145d0	             add dword [rbp - 0x30], eax	      1251	move.c	FUNCTION_33	IF_6
0x259a	      0xe999000000	                           jmp 0x4002678	      1254	move.c	FUNCTION_33	WHILE_2
0x259f	    0x488b05000000	            mov rax, qword [0x040025e6] 	      1257	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x25a6	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1257	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x25aa	        0x488d4dd8	                   lea rcx, [rbp - 0x28]	      1257	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x25ae	      0xba00000000	                              mov edx, 0	      1257	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x25b3	          0x4889ce	                            mov rsi, rcx	      1257	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x25b6	          0x4889c7	                            mov rdi, rax	      1257	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x25b9	      0xe800000000	                          call 0x40025fe	      1257	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x25be	            0x85c0	                           test eax, eax	      1257	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x25c0	            0x7434	                            je 0x4002636	      1257	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x25c2	        0x836dd001	               sub dword [rbp - 0x30], 1	      1259	move.c	FUNCTION_33	WHILE_2	IF_7
0x25c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1260	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x25ca	        0x4883f801	                              cmp rax, 1	      1260	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x25ce	            0x7511	                           jne 0x4002621	      1260	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x25d0	    0x488b05000000	            mov rax, qword [0x04002617] 	      1261	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x25d7	    0x48c740380100	               mov qword [rax + 0x38], 1	      1261	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x25df	            0xeb33	                           jmp 0x4002654	      1261	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x25e1	    0x488b05000000	            mov rax, qword [0x04002628] 	      1263	move.c	FUNCTION_33	WHILE_2	IF_7	ELSE_3
0x25e8	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1263	move.c	FUNCTION_33	WHILE_2	IF_7	ELSE_3
0x25ec	        0x4883ea01	                              sub rdx, 1	      1263	move.c	FUNCTION_33	WHILE_2	IF_7	ELSE_3
0x25f0	        0x48895038	             mov qword [rax + 0x38], rdx	      1263	move.c	FUNCTION_33	WHILE_2	IF_7	ELSE_3
0x25f4	            0xeb1e	                           jmp 0x4002654	      1263	move.c	FUNCTION_33	WHILE_2	IF_7	ELSE_3
0x25f6	    0x488b15000000	            mov rdx, qword [0x0400263d] 	      1267	move.c	FUNCTION_33	WHILE_2	CALL_11
0x25fd	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      1267	move.c	FUNCTION_33	WHILE_2	CALL_11
0x2601	        0x488d48ff	                      lea rcx, [rax - 1]	      1267	move.c	FUNCTION_33	WHILE_2	CALL_11
0x2605	        0x48894a38	             mov qword [rdx + 0x38], rcx	      1267	move.c	FUNCTION_33	WHILE_2	CALL_11
0x2609	          0x4889c7	                            mov rdi, rax	      1267	move.c	FUNCTION_33	WHILE_2	CALL_11
0x260c	      0xe800000000	                          call 0x4002651	      1267	move.c	FUNCTION_33	WHILE_2	CALL_11
0x2611	          0x2945d0	             sub dword [rbp - 0x30], eax	      1267	move.c	FUNCTION_33	WHILE_2	CALL_11
0x2614	    0x488b05000000	            mov rax, qword [0x0400265b] 	      1268	move.c	FUNCTION_33	WHILE_2
0x261b	    0x488b15000000	            mov rdx, qword [0x04002662] 	      1268	move.c	FUNCTION_33	WHILE_2
0x2622	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      1268	move.c	FUNCTION_33	WHILE_2
0x2628	          0x83e2e0	                     and edx, 0xffffffe0	      1268	move.c	FUNCTION_33	WHILE_2
0x262b	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1268	move.c	FUNCTION_33	WHILE_2
0x2631	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	      1270	move.c	FUNCTION_33	WHILE_2
0x2638	    0x488b05000000	            mov rax, qword [0x0400267f] 	      1254	move.c	FUNCTION_33	WHILE_2
0x263f	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1254	move.c	FUNCTION_33	WHILE_2
0x2645	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      1254	move.c	FUNCTION_33	WHILE_2
0x2648	            0x7f15	                            jg 0x400269f	      1254	move.c	FUNCTION_33	WHILE_2
0x264a	    0x488b05000000	            mov rax, qword [0x04002691] 	      1254	move.c	FUNCTION_33	WHILE_2
0x2651	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1254	move.c	FUNCTION_33	WHILE_2
0x2655	        0x4883f801	                              cmp rax, 1	      1254	move.c	FUNCTION_33	WHILE_2
0x2659	     0xf8f40ffffff	                            jg 0x40025df	      1254	move.c	FUNCTION_33	WHILE_2
0x265f	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1272	move.c	FUNCTION_33	IF_9
0x2663	            0x7416	                            je 0x40026bb	      1272	move.c	FUNCTION_33	IF_9
0x2665	      0xe800000000	                          call 0x40026aa	      1276	move.c	FUNCTION_33	IF_9	CALL_12
0x266a	    0x488b05000000	            mov rax, qword [0x040026b1] 	      1278	move.c	FUNCTION_33	IF_9	CALL_13
0x2671	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1278	move.c	FUNCTION_33	IF_9	CALL_13
0x2674	            0x89c7	                            mov edi, eax	      1278	move.c	FUNCTION_33	IF_9	CALL_13
0x2676	      0xe800000000	                          call 0x40026bb	      1278	move.c	FUNCTION_33	IF_9	CALL_13
0x267b	              0x90	                                     nop	      1280	move.c	FUNCTION_33
0x267c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1280	move.c	FUNCTION_33
0x2680	    0x644833042528	                xor rax, qword fs:[0x28]	      1280	move.c	FUNCTION_33
0x2689	            0x7405	                            je 0x40026d0	      1280	move.c	FUNCTION_33
0x268b	      0xe800000000	                          call 0x40026d0	      1280	move.c	FUNCTION_33
0x2690	        0x4883c438	                           add rsp, 0x38	      1280	move.c	FUNCTION_33
0x2694	              0x5b	                                 pop rbx	      1280	move.c	FUNCTION_33
0x2695	              0x5d	                                 pop rbp	      1280	move.c	FUNCTION_33
0x2696	              0xc3	                                     ret	      1280	move.c	FUNCTION_33
scrollup_clamp	CALL,5:WHILE,0:SWITCH,0:functions,0:DO,0:IF,4:ELSE,1:FOR,0	84
0x2ccb	              0x55	                                push rbp	      1489	move.c	FUNCTION_38
0x2ccc	          0x4889e5	                            mov rbp, rsp	      1489	move.c	FUNCTION_38
0x2ccf	              0x53	                                push rbx	      1489	move.c	FUNCTION_38
0x2cd0	        0x4883ec18	                           sub rsp, 0x18	      1489	move.c	FUNCTION_38
0x2cd4	    0x488b05000000	            mov rax, qword [0x04002d1b] 	      1492	move.c	FUNCTION_38	IF_1
0x2cdb	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1492	move.c	FUNCTION_38	IF_1
0x2cdf	    0x488b05000000	            mov rax, qword [0x04002d26] 	      1492	move.c	FUNCTION_38	IF_1
0x2ce6	          0x488b00	                    mov rax, qword [rax]	      1492	move.c	FUNCTION_38	IF_1
0x2ce9	          0x4839c2	                            cmp rdx, rax	      1492	move.c	FUNCTION_38	IF_1
0x2cec	            0x7515	                           jne 0x4002d43	      1492	move.c	FUNCTION_38	IF_1
0x2cee	    0x488b05000000	            mov rax, qword [0x04002d35] 	      1494	move.c	FUNCTION_38	IF_1
0x2cf5	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1494	move.c	FUNCTION_38	IF_1
0x2cfb	            0x85c0	                           test eax, eax	      1494	move.c	FUNCTION_38	IF_1
0x2cfd	     0xf8431010000	                            je 0x4002e74	      1494	move.c	FUNCTION_38	IF_1
0x2d03	      0xe800000000	                          call 0x4002d48	      1499	move.c	FUNCTION_38	CALL_1
0x2d08	    0x488b05000000	            mov rax, qword [0x04002d4f] 	      1507	move.c	FUNCTION_38	CALL_2
0x2d0f	    0x8b98dc000000	            mov ebx, dword [rax + 0xdc] 	      1507	move.c	FUNCTION_38	CALL_2
0x2d15	    0x488b05000000	            mov rax, qword [0x04002d5c] 	      1507	move.c	FUNCTION_38	CALL_2
0x2d1c	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1507	move.c	FUNCTION_38	CALL_2
0x2d20	          0x4889c7	                            mov rdi, rax	      1507	move.c	FUNCTION_38	CALL_2
0x2d23	      0xe800000000	                          call 0x4002d68	      1507	move.c	FUNCTION_38	CALL_2
0x2d28	            0x29c3	                            sub ebx, eax	      1507	move.c	FUNCTION_38	CALL_2
0x2d2a	            0x89da	                            mov edx, ebx	      1507	move.c	FUNCTION_38	CALL_2
0x2d2c	    0x488b05000000	            mov rax, qword [0x04002d73] 	      1508	move.c	FUNCTION_38
0x2d33	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1508	move.c	FUNCTION_38
0x2d39	            0x29c2	                            sub edx, eax	      1507	move.c	FUNCTION_38	CALL_2
0x2d3b	            0x89d0	                            mov eax, edx	      1507	move.c	FUNCTION_38	CALL_2
0x2d3d	          0x8945ec	             mov dword [rbp - 0x14], eax	      1507	move.c	FUNCTION_38	CALL_2
0x2d40	    0x488b05000000	            mov rax, qword [0x04002d87] 	      1512	move.c	FUNCTION_38	IF_2
0x2d47	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      1512	move.c	FUNCTION_38	IF_2
0x2d4d	            0x85c0	                           test eax, eax	      1512	move.c	FUNCTION_38	IF_2
0x2d4f	            0x7436	                            je 0x4002dc7	      1512	move.c	FUNCTION_38	IF_2
0x2d51	    0x488b05000000	            mov rax, qword [0x04002d98] 	      1512	move.c	FUNCTION_38	IF_2
0x2d58	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1512	move.c	FUNCTION_38	IF_2
0x2d5e	            0x85c0	                           test eax, eax	      1512	move.c	FUNCTION_38	IF_2
0x2d60	            0x7425	                            je 0x4002dc7	      1512	move.c	FUNCTION_38	IF_2
0x2d62	      0xe800000000	                          call 0x4002da7	      1514	move.c	FUNCTION_38	IF_2	CALL_4
0x2d67	    0x488b05000000	            mov rax, qword [0x04002dae] 	      1515	move.c	FUNCTION_38	IF_2
0x2d6e	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      1515	move.c	FUNCTION_38	IF_2
0x2d74	    0x488b15000000	            mov rdx, qword [0x04002dbb] 	      1515	move.c	FUNCTION_38	IF_2
0x2d7b	    0x8b8aac000000	            mov ecx, dword [rdx + 0xac] 	      1515	move.c	FUNCTION_38	IF_2
0x2d81	              0x99	                                     cdq	      1515	move.c	FUNCTION_38	IF_2
0x2d82	            0xf7f9	                                idiv ecx	      1515	move.c	FUNCTION_38	IF_2
0x2d84	          0x2945ec	             sub dword [rbp - 0x14], eax	      1515	move.c	FUNCTION_38	IF_2
0x2d87	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1517	move.c	FUNCTION_38	IF_3
0x2d8a	          0x4863d0	                         movsxd rdx, eax	      1517	move.c	FUNCTION_38	IF_3
0x2d8d	    0x488b05000000	            mov rax, qword [0x04002dd4] 	      1517	move.c	FUNCTION_38	IF_3
0x2d94	          0x4839c2	                            cmp rdx, rax	      1517	move.c	FUNCTION_38	IF_3
0x2d97	     0xf8c98000000	                            jl 0x4002e75	      1517	move.c	FUNCTION_38	IF_3
0x2d9d	    0x488b05000000	            mov rax, qword [0x04002de4] 	      1520	move.c	FUNCTION_38	IF_3	IF_4
0x2da4	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1520	move.c	FUNCTION_38	IF_3	IF_4
0x2daa	            0x85c0	                           test eax, eax	      1520	move.c	FUNCTION_38	IF_3	IF_4
0x2dac	            0x7e18	                           jle 0x4002e06	      1520	move.c	FUNCTION_38	IF_3	IF_4
0x2dae	    0x488b05000000	            mov rax, qword [0x04002df5] 	      1521	move.c	FUNCTION_38	IF_3	IF_4
0x2db5	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      1521	move.c	FUNCTION_38	IF_3	IF_4
0x2dbb	          0x83ea01	                              sub edx, 1	      1521	move.c	FUNCTION_38	IF_3	IF_4
0x2dbe	    0x899084000000	             mov dword [rax + 0x84], edx	      1521	move.c	FUNCTION_38	IF_3	IF_4
0x2dc4	            0xeb36	                           jmp 0x4002e3c	      1521	move.c	FUNCTION_38	IF_3	IF_4
0x2dc6	    0x488b05000000	            mov rax, qword [0x04002e0d] 	      1526	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x2dcd	        0x488d5078	                   lea rdx, [rax + 0x78]	      1526	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x2dd1	    0x488b05000000	            mov rax, qword [0x04002e18] 	      1526	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x2dd8	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1526	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x2ddc	      0xbe00000000	                              mov esi, 0	      1526	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x2de1	          0x4889c7	                            mov rdi, rax	      1526	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x2de4	      0xe800000000	                          call 0x4002e29	      1526	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x2de9	    0x488b05000000	            mov rax, qword [0x04002e30] 	      1528	move.c	FUNCTION_38	IF_3	ELSE_1
0x2df0	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1528	move.c	FUNCTION_38	IF_3	ELSE_1
0x2df4	        0x4883c201	                              add rdx, 1	      1528	move.c	FUNCTION_38	IF_3	ELSE_1
0x2df8	        0x48895078	             mov qword [rax + 0x78], rdx	      1528	move.c	FUNCTION_38	IF_3	ELSE_1
0x2dfc	    0x488b05000000	            mov rax, qword [0x04002e43] 	      1530	move.c	FUNCTION_38	IF_3
0x2e03	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      1530	move.c	FUNCTION_38	IF_3
0x2e0a	        0x4883c201	                              add rdx, 1	      1530	move.c	FUNCTION_38	IF_3
0x2e0e	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      1530	move.c	FUNCTION_38	IF_3
0x2e15	    0x488b05000000	            mov rax, qword [0x04002e5c] 	      1531	move.c	FUNCTION_38	IF_3
0x2e1c	    0x488b15000000	            mov rdx, qword [0x04002e63] 	      1531	move.c	FUNCTION_38	IF_3
0x2e23	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      1531	move.c	FUNCTION_38	IF_3
0x2e29	          0x83e2ce	                     and edx, 0xffffffce	      1531	move.c	FUNCTION_38	IF_3
0x2e2c	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1531	move.c	FUNCTION_38	IF_3
0x2e32	            0xeb01	                           jmp 0x4002e75	      1531	move.c	FUNCTION_38	IF_3
0x2e34	              0x90	                                     nop	      1497	move.c	FUNCTION_38	IF_1
0x2e35	        0x4883c418	                           add rsp, 0x18	      1533	move.c	FUNCTION_38
0x2e39	              0x5b	                                 pop rbx	      1533	move.c	FUNCTION_38
0x2e3a	              0x5d	                                 pop rbp	      1533	move.c	FUNCTION_38
0x2e3b	              0xc3	                                     ret	      1533	move.c	FUNCTION_38
validate_botline	CALL,1:WHILE,0:SWITCH,0:functions,0:DO,0:IF,1:ELSE,0:FOR,0	13
0xd90	              0x55	                                push rbp	       595	move.c	FUNCTION_16
0xd91	          0x4889e5	                            mov rbp, rsp	       595	move.c	FUNCTION_16
0xd94	    0x488b05000000	            mov rax, qword [0x04000ddb] 	       596	move.c	FUNCTION_16	IF_1
0xd9b	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       596	move.c	FUNCTION_16	IF_1
0xda1	          0x83e020	                           and eax, 0x20	       596	move.c	FUNCTION_16	IF_1
0xda4	            0x85c0	                           test eax, eax	       596	move.c	FUNCTION_16	IF_1
0xda6	            0x750f	                           jne 0x4000df7	       596	move.c	FUNCTION_16	IF_1
0xda8	    0x488b05000000	            mov rax, qword [0x04000def] 	       597	move.c	FUNCTION_16	CALL_1
0xdaf	          0x4889c7	                            mov rdi, rax	       597	move.c	FUNCTION_16	CALL_1
0xdb2	      0xe849f2ffff	                   call sym.comp_botline	       597	move.c	FUNCTION_16	CALL_1
0xdb7	              0x90	                                     nop	       598	move.c	FUNCTION_16
0xdb8	              0x5d	                                 pop rbp	       598	move.c	FUNCTION_16
0xdb9	              0xc3	                                     ret	       598	move.c	FUNCTION_16
scroll_cursor_halfway	CALL,7:WHILE,1:SWITCH,0:functions,0:DO,0:IF,9:ELSE,2:FOR,0	132
0x3bae	              0x55	                                push rbp	      2041	move.c	FUNCTION_46
0x3baf	          0x4889e5	                            mov rbp, rsp	      2041	move.c	FUNCTION_46
0x3bb2	        0x4883ec60	                           sub rsp, 0x60	      2041	move.c	FUNCTION_46
0x3bb6	          0x897dac	             mov dword [rbp - 0x54], edi	      2041	move.c	FUNCTION_46
0x3bb9	    0x64488b042528	                mov rax, qword fs:[0x28]	      2041	move.c	FUNCTION_46
0x3bc2	        0x488945f8	                mov qword [rbp - 8], rax	      2041	move.c	FUNCTION_46
0x3bc6	            0x31c0	                            xor eax, eax	      2041	move.c	FUNCTION_46
0x3bc8	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      2042	move.c	FUNCTION_46
0x3bcf	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      2045	move.c	FUNCTION_46
0x3bd6	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      2047	move.c	FUNCTION_46
0x3bdd	    0x488b05000000	            mov rax, qword [0x04003c24] 	      2052	move.c	FUNCTION_46
0x3be4	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2052	move.c	FUNCTION_46
0x3be8	        0x488945c8	             mov qword [rbp - 0x38], rax	      2052	move.c	FUNCTION_46
0x3bec	    0x488b05000000	            mov rax, qword [0x04003c33] 	      2055	move.c	FUNCTION_46
0x3bf3	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2055	move.c	FUNCTION_46
0x3bf7	        0x488945e0	             mov qword [rbp - 0x20], rax	      2055	move.c	FUNCTION_46
0x3bfb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2055	move.c	FUNCTION_46
0x3bff	        0x488945d0	             mov qword [rbp - 0x30], rax	      2055	move.c	FUNCTION_46
0x3c03	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2057	move.c	FUNCTION_46	CALL_1
0x3c07	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2057	move.c	FUNCTION_46	CALL_1
0x3c0b	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      2057	move.c	FUNCTION_46	CALL_1
0x3c0f	          0x4889ce	                            mov rsi, rcx	      2057	move.c	FUNCTION_46	CALL_1
0x3c12	          0x4889c7	                            mov rdi, rax	      2057	move.c	FUNCTION_46	CALL_1
0x3c15	      0xe800000000	                          call 0x4003c5a	      2057	move.c	FUNCTION_46	CALL_1
0x3c1a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2060	move.c	FUNCTION_46	CALL_2
0x3c1e	          0x4889c7	                            mov rdi, rax	      2060	move.c	FUNCTION_46	CALL_2
0x3c21	      0xe800000000	                          call 0x4003c66	      2060	move.c	FUNCTION_46	CALL_2
0x3c26	          0x8945bc	             mov dword [rbp - 0x44], eax	      2060	move.c	FUNCTION_46	CALL_2
0x3c29	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      2061	move.c	FUNCTION_46
0x3c30	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      2062	move.c	FUNCTION_46
0x3c37	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2066	move.c	FUNCTION_46
0x3c3b	        0x488945c0	             mov qword [rbp - 0x40], rax	      2066	move.c	FUNCTION_46
0x3c3f	      0xe9a8000000	                           jmp 0x4003d2c	      2067	move.c	FUNCTION_46	WHILE_1
0x3c44	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2069	move.c	FUNCTION_46	WHILE_1	IF_1
0x3c47	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      2069	move.c	FUNCTION_46	WHILE_1	IF_1
0x3c4a	            0x7f4d	                            jg 0x4003cd9	      2069	move.c	FUNCTION_46	WHILE_1	IF_1
0x3c4c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2071	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x3c50	    0x488b05000000	            mov rax, qword [0x04003c97] 	      2071	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x3c57	          0x488b00	                    mov rax, qword [rax]	      2071	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x3c5a	          0x4839c2	                            cmp rdx, rax	      2071	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x3c5d	            0x7d2c	                           jge 0x4003ccb	      2071	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x3c5f	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2073	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	CALL_4
0x3c63	          0x4889c7	                            mov rdi, rax	      2073	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	CALL_4
0x3c66	      0xe8a2f2ffff	                   call sym.botline_forw	      2073	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	CALL_4
0x3c6b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2074	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x3c6e	           0x145bc	             add dword [rbp - 0x44], eax	      2074	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x3c71	    0x488b05000000	            mov rax, qword [0x04003cb8] 	      2075	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	IF_3
0x3c78	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2075	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	IF_3
0x3c7e	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      2075	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	IF_3
0x3c81	            0x7c76	                            jl 0x4003d39	      2075	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	IF_3
0x3c83	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2077	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x3c86	           0x145b8	             add dword [rbp - 0x48], eax	      2077	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x3c89	            0xeb0e	                           jmp 0x4003cd9	      2077	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x3c8b	        0x8345b801	               add dword [rbp - 0x48], 1	      2081	move.c	FUNCTION_46	WHILE_1	IF_1	ELSE_1
0x3c8f	        0x837dac00	               cmp dword [rbp - 0x54], 0	      2082	move.c	FUNCTION_46	WHILE_1	IF_1	ELSE_1	IF_4
0x3c93	            0x7404	                            je 0x4003cd9	      2082	move.c	FUNCTION_46	WHILE_1	IF_1	ELSE_1	IF_4
0x3c95	        0x8345bc01	               add dword [rbp - 0x44], 1	      2083	move.c	FUNCTION_46	WHILE_1	IF_1	ELSE_1	IF_4
0x3c99	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2087	move.c	FUNCTION_46	WHILE_1	IF_5
0x3c9c	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      2087	move.c	FUNCTION_46	WHILE_1	IF_5
0x3c9f	            0x7e4b	                           jle 0x4003d2c	      2087	move.c	FUNCTION_46	WHILE_1	IF_5
0x3ca1	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2089	move.c	FUNCTION_46	WHILE_1	IF_5	CALL_5
0x3ca5	          0x4889c7	                            mov rdi, rax	      2089	move.c	FUNCTION_46	WHILE_1	IF_5	CALL_5
0x3ca8	      0xe88ff1ffff	                   call sym.topline_back	      2089	move.c	FUNCTION_46	WHILE_1	IF_5	CALL_5
0x3cad	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2090	move.c	FUNCTION_46	WHILE_1	IF_5	IF_6
0x3cb0	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      2090	move.c	FUNCTION_46	WHILE_1	IF_5	IF_6
0x3cb5	            0x7509	                           jne 0x4003d00	      2090	move.c	FUNCTION_46	WHILE_1	IF_5	IF_6
0x3cb7	    0xc745bcffffff	      mov dword [rbp - 0x44], 0x7fffffff	      2091	move.c	FUNCTION_46	WHILE_1	IF_5	IF_6
0x3cbe	            0xeb06	                           jmp 0x4003d06	      2091	move.c	FUNCTION_46	WHILE_1	IF_5	IF_6
0x3cc0	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2093	move.c	FUNCTION_46	WHILE_1	IF_5	ELSE_2
0x3cc3	           0x145bc	             add dword [rbp - 0x44], eax	      2093	move.c	FUNCTION_46	WHILE_1	IF_5	ELSE_2
0x3cc6	    0x488b05000000	            mov rax, qword [0x04003d0d] 	      2094	move.c	FUNCTION_46	WHILE_1	IF_5	IF_7
0x3ccd	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2094	move.c	FUNCTION_46	WHILE_1	IF_5	IF_7
0x3cd3	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      2094	move.c	FUNCTION_46	WHILE_1	IF_5	IF_7
0x3cd6	            0x7c24	                            jl 0x4003d3c	      2094	move.c	FUNCTION_46	WHILE_1	IF_5	IF_7
0x3cd8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2096	move.c	FUNCTION_46	WHILE_1	IF_5
0x3cdb	           0x145b0	             add dword [rbp - 0x50], eax	      2096	move.c	FUNCTION_46	WHILE_1	IF_5
0x3cde	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2097	move.c	FUNCTION_46	WHILE_1	IF_5
0x3ce2	        0x488945c0	             mov qword [rbp - 0x40], rax	      2097	move.c	FUNCTION_46	WHILE_1	IF_5
0x3ce6	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2099	move.c	FUNCTION_46	WHILE_1	IF_5
0x3ce9	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2099	move.c	FUNCTION_46	WHILE_1	IF_5
0x3cec	      0x48837dc001	               cmp qword [rbp - 0x40], 1	      2067	move.c	FUNCTION_46	WHILE_1
0x3cf1	     0xf8f4dffffff	                            jg 0x4003c84	      2067	move.c	FUNCTION_46	WHILE_1
0x3cf7	            0xeb04	                           jmp 0x4003d3d	      2067	move.c	FUNCTION_46	WHILE_1
0x3cf9	              0x90	                                     nop	      2076	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	IF_3
0x3cfa	            0xeb01	                           jmp 0x4003d3d	      2076	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	IF_3
0x3cfc	              0x90	                                     nop	      2095	move.c	FUNCTION_46	WHILE_1	IF_5	IF_7
0x3cfd	    0x488b05000000	            mov rax, qword [0x04003d44] 	      2104	move.c	FUNCTION_46	IF_8	CALL_6
0x3d04	        0x488d4878	                   lea rcx, [rax + 0x78]	      2104	move.c	FUNCTION_46	IF_8	CALL_6
0x3d08	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2104	move.c	FUNCTION_46	IF_8	CALL_6
0x3d0c	      0xba00000000	                              mov edx, 0	      2104	move.c	FUNCTION_46	IF_8	CALL_6
0x3d11	          0x4889ce	                            mov rsi, rcx	      2104	move.c	FUNCTION_46	IF_8	CALL_6
0x3d14	          0x4889c7	                            mov rdi, rax	      2104	move.c	FUNCTION_46	IF_8	CALL_6
0x3d17	      0xe800000000	                          call 0x4003d5c	      2104	move.c	FUNCTION_46	IF_8	CALL_6
0x3d1c	            0x85c0	                           test eax, eax	      2104	move.c	FUNCTION_46	IF_8	CALL_6
0x3d1e	            0x750f	                           jne 0x4003d6f	      2104	move.c	FUNCTION_46	IF_8	CALL_6
0x3d20	    0x488b05000000	            mov rax, qword [0x04003d67] 	      2106	move.c	FUNCTION_46	IF_8
0x3d27	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2106	move.c	FUNCTION_46	IF_8
0x3d2b	        0x48895078	             mov qword [rax + 0x78], rdx	      2106	move.c	FUNCTION_46	IF_8
0x3d2f	    0x488b05000000	            mov rax, qword [0x04003d76] 	      2108	move.c	FUNCTION_46
0x3d36	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      2108	move.c	FUNCTION_46
0x3d39	    0x899084000000	             mov dword [rax + 0x84], edx	      2108	move.c	FUNCTION_46
0x3d3f	    0x488b05000000	            mov rax, qword [0x04003d86] 	      2109	move.c	FUNCTION_46	IF_9
0x3d46	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2109	move.c	FUNCTION_46	IF_9
0x3d4a	    0x488b05000000	            mov rax, qword [0x04003d91] 	      2109	move.c	FUNCTION_46	IF_9
0x3d51	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2109	move.c	FUNCTION_46	IF_9
0x3d57	            0x4898	                                    cdqe	      2109	move.c	FUNCTION_46	IF_9
0x3d59	          0x4801d0	                            add rax, rdx	      2109	move.c	FUNCTION_46	IF_9
0x3d5c	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2109	move.c	FUNCTION_46	IF_9
0x3d60	            0x7d11	                           jge 0x4003db3	      2109	move.c	FUNCTION_46	IF_9
0x3d62	    0x488b05000000	            mov rax, qword [0x04003da9] 	      2110	move.c	FUNCTION_46	IF_9
0x3d69	    0xc7808c000000	               mov dword [rax + 0x8c], 0	      2110	move.c	FUNCTION_46	IF_9
0x3d73	    0x488b05000000	            mov rax, qword [0x04003dba] 	      2111	move.c	FUNCTION_46	CALL_7
0x3d7a	      0xbe00000000	                              mov esi, 0	      2111	move.c	FUNCTION_46	CALL_7
0x3d7f	          0x4889c7	                            mov rdi, rax	      2111	move.c	FUNCTION_46	CALL_7
0x3d82	      0xe800000000	                          call 0x4003dc7	      2111	move.c	FUNCTION_46	CALL_7
0x3d87	    0x488b05000000	            mov rax, qword [0x04003dce] 	      2113	move.c	FUNCTION_46
0x3d8e	    0x488b15000000	            mov rdx, qword [0x04003dd5] 	      2113	move.c	FUNCTION_46
0x3d95	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2113	move.c	FUNCTION_46
0x3d9b	          0x83e28e	                     and edx, 0xffffff8e	      2113	move.c	FUNCTION_46
0x3d9e	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2113	move.c	FUNCTION_46
0x3da4	    0x488b05000000	            mov rax, qword [0x04003deb] 	      2114	move.c	FUNCTION_46
0x3dab	    0x488b15000000	            mov rdx, qword [0x04003df2] 	      2114	move.c	FUNCTION_46
0x3db2	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2114	move.c	FUNCTION_46
0x3db8	          0x80ca80	                             or dl, 0x80	      2114	move.c	FUNCTION_46
0x3dbb	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2114	move.c	FUNCTION_46
0x3dc1	              0x90	                                     nop	      2115	move.c	FUNCTION_46
0x3dc2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2115	move.c	FUNCTION_46
0x3dc6	    0x644833042528	                xor rax, qword fs:[0x28]	      2115	move.c	FUNCTION_46
0x3dcf	            0x7405	                            je 0x4003e16	      2115	move.c	FUNCTION_46
0x3dd1	      0xe800000000	                          call 0x4003e16	      2115	move.c	FUNCTION_46
0x3dd6	              0xc9	                                   leave	      2115	move.c	FUNCTION_46
0x3dd7	              0xc3	                                     ret	      2115	move.c	FUNCTION_46
changed_cline_bef_curs_win	CALL,0:WHILE,0:SWITCH,0:functions,0:DO,0:IF,0:ELSE,0:FOR,0	12
0xd26	              0x55	                                push rbp	       566	move.c	FUNCTION_13
0xd27	          0x4889e5	                            mov rbp, rsp	       566	move.c	FUNCTION_13
0xd2a	        0x48897df8	                mov qword [rbp - 8], rdi	       566	move.c	FUNCTION_13
0xd2e	        0x488b45f8	                mov rax, qword [rbp - 8]	       567	move.c	FUNCTION_13
0xd32	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       567	move.c	FUNCTION_13
0xd38	            0x2470	                            and al, 0x70	       567	move.c	FUNCTION_13
0xd3a	            0x89c2	                            mov edx, eax	       567	move.c	FUNCTION_13
0xd3c	        0x488b45f8	                mov rax, qword [rbp - 8]	       567	move.c	FUNCTION_13
0xd40	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       567	move.c	FUNCTION_13
0xd46	              0x90	                                     nop	       569	move.c	FUNCTION_13
0xd47	              0x5d	                                 pop rbp	       569	move.c	FUNCTION_13
0xd48	              0xc3	                                     ret	       569	move.c	FUNCTION_13
scroll_cursor_top	CALL,10:WHILE,1:SWITCH,0:functions,0:DO,0:IF,15:ELSE,4:FOR,0	237
0x30a4	              0x55	                                push rbp	      1649	move.c	FUNCTION_43
0x30a5	          0x4889e5	                            mov rbp, rsp	      1649	move.c	FUNCTION_43
0x30a8	              0x53	                                push rbx	      1649	move.c	FUNCTION_43
0x30a9	        0x4883ec68	                           sub rsp, 0x68	      1649	move.c	FUNCTION_43
0x30ad	          0x897d9c	             mov dword [rbp - 0x64], edi	      1649	move.c	FUNCTION_43
0x30b0	          0x897598	             mov dword [rbp - 0x68], esi	      1649	move.c	FUNCTION_43
0x30b3	    0x64488b042528	                mov rax, qword fs:[0x28]	      1649	move.c	FUNCTION_43
0x30bc	        0x488945e8	             mov qword [rbp - 0x18], rax	      1649	move.c	FUNCTION_43
0x30c0	            0x31c0	                            xor eax, eax	      1649	move.c	FUNCTION_43
0x30c2	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      1650	move.c	FUNCTION_43
0x30c9	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      1651	move.c	FUNCTION_43
0x30d0	    0x488b05000000	            mov rax, qword [0x04003117] 	      1656	move.c	FUNCTION_43
0x30d7	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1656	move.c	FUNCTION_43
0x30db	        0x488945d8	             mov qword [rbp - 0x28], rax	      1656	move.c	FUNCTION_43
0x30df	    0x488b05000000	            mov rax, qword [0x04003126] 	      1658	move.c	FUNCTION_43
0x30e6	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1658	move.c	FUNCTION_43
0x30ec	            0x4898	                                    cdqe	      1658	move.c	FUNCTION_43
0x30ee	        0x488945e0	             mov qword [rbp - 0x20], rax	      1658	move.c	FUNCTION_43
0x30f2	    0x488b05000000	            mov rax, qword [0x04003139] 	      1661	move.c	FUNCTION_43
0x30f9	          0x8945bc	             mov dword [rbp - 0x44], eax	      1661	move.c	FUNCTION_43
0x30fc	    0x8b0500000000	            mov eax, dword [0x04003142] 	      1664	move.c	FUNCTION_43	IF_1
0x3102	            0x85c0	                           test eax, eax	      1664	move.c	FUNCTION_43	IF_1
0x3104	            0x7e0c	                           jle 0x4003152	      1664	move.c	FUNCTION_43	IF_1
0x3106	    0x8b0500000000	            mov eax, dword [0x0400314c] 	      1665	move.c	FUNCTION_43	IF_1
0x310c	          0x83e801	                              sub eax, 1	      1665	move.c	FUNCTION_43	IF_1
0x310f	          0x8945bc	             mov dword [rbp - 0x44], eax	      1665	move.c	FUNCTION_43	IF_1
0x3112	      0xe8e8e3ffff	               call sym.validate_cheight	      1675	move.c	FUNCTION_43	CALL_1
0x3117	    0x488b05000000	            mov rax, qword [0x0400315e] 	      1676	move.c	FUNCTION_43
0x311e	    0x8b80cc000000	            mov eax, dword [rax + 0xcc] 	      1676	move.c	FUNCTION_43
0x3124	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1676	move.c	FUNCTION_43
0x3127	    0x488b05000000	            mov rax, qword [0x0400316e] 	      1677	move.c	FUNCTION_43	IF_2
0x312e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1677	move.c	FUNCTION_43	IF_2
0x3132	    0x488b05000000	            mov rax, qword [0x04003179] 	      1677	move.c	FUNCTION_43	IF_2
0x3139	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1677	move.c	FUNCTION_43	IF_2
0x313d	          0x4839c2	                            cmp rdx, rax	      1677	move.c	FUNCTION_43	IF_2
0x3140	            0x7d06	                           jge 0x4003188	      1677	move.c	FUNCTION_43	IF_2
0x3142	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1678	move.c	FUNCTION_43	IF_2
0x3145	          0x8945ac	             mov dword [rbp - 0x54], eax	      1678	move.c	FUNCTION_43	IF_2
0x3148	    0x488b05000000	            mov rax, qword [0x0400318f] 	      1681	move.c	FUNCTION_43	IF_3	CALL_2
0x314f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1681	move.c	FUNCTION_43	IF_3	CALL_2
0x3153	        0x488d55c8	                   lea rdx, [rbp - 0x38]	      1681	move.c	FUNCTION_43	IF_3	CALL_2
0x3157	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1681	move.c	FUNCTION_43	IF_3	CALL_2
0x315b	          0x4889ce	                            mov rsi, rcx	      1681	move.c	FUNCTION_43	IF_3	CALL_2
0x315e	          0x4889c7	                            mov rdi, rax	      1681	move.c	FUNCTION_43	IF_3	CALL_2
0x3161	      0xe800000000	                          call 0x40031a6	      1681	move.c	FUNCTION_43	IF_3	CALL_2
0x3166	            0x85c0	                           test eax, eax	      1681	move.c	FUNCTION_43	IF_3	CALL_2
0x3168	            0x741a	                            je 0x40031c4	      1681	move.c	FUNCTION_43	IF_3	CALL_2
0x316a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1683	move.c	FUNCTION_43	IF_3
0x316e	        0x4883e801	                              sub rax, 1	      1683	move.c	FUNCTION_43	IF_3
0x3172	        0x488945c0	             mov qword [rbp - 0x40], rax	      1683	move.c	FUNCTION_43	IF_3
0x3176	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1684	move.c	FUNCTION_43	IF_3
0x317a	        0x4883c001	                              add rax, 1	      1684	move.c	FUNCTION_43	IF_3
0x317e	        0x488945c8	             mov qword [rbp - 0x38], rax	      1684	move.c	FUNCTION_43	IF_3
0x3182	            0xeb26	                           jmp 0x40031ea	      1684	move.c	FUNCTION_43	IF_3
0x3184	    0x488b05000000	            mov rax, qword [0x040031cb] 	      1689	move.c	FUNCTION_43	ELSE_1
0x318b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1689	move.c	FUNCTION_43	ELSE_1
0x318f	        0x4883e801	                              sub rax, 1	      1689	move.c	FUNCTION_43	ELSE_1
0x3193	        0x488945c0	             mov qword [rbp - 0x40], rax	      1689	move.c	FUNCTION_43	ELSE_1
0x3197	    0x488b05000000	            mov rax, qword [0x040031de] 	      1690	move.c	FUNCTION_43	ELSE_1
0x319e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1690	move.c	FUNCTION_43	ELSE_1
0x31a2	        0x4883c001	                              add rax, 1	      1690	move.c	FUNCTION_43	ELSE_1
0x31a6	        0x488945c8	             mov qword [rbp - 0x38], rax	      1690	move.c	FUNCTION_43	ELSE_1
0x31aa	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1692	move.c	FUNCTION_43
0x31ae	        0x4883c001	                              add rax, 1	      1692	move.c	FUNCTION_43
0x31b2	        0x488945d0	             mov qword [rbp - 0x30], rax	      1692	move.c	FUNCTION_43
0x31b6	    0x488b05000000	            mov rax, qword [0x040031fd] 	      1698	move.c	FUNCTION_43	CALL_3
0x31bd	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1698	move.c	FUNCTION_43	CALL_3
0x31c1	    0x488b05000000	            mov rax, qword [0x04003208] 	      1698	move.c	FUNCTION_43	CALL_3
0x31c8	          0x4889d6	                            mov rsi, rdx	      1698	move.c	FUNCTION_43	CALL_3
0x31cb	          0x4889c7	                            mov rdi, rax	      1698	move.c	FUNCTION_43	CALL_3
0x31ce	      0xe800000000	                          call 0x4003213	      1698	move.c	FUNCTION_43	CALL_3
0x31d3	           0x145b0	             add dword [rbp - 0x50], eax	      1698	move.c	FUNCTION_43	CALL_3
0x31d6	      0xe9fb000000	                           jmp 0x4003316	      1705	move.c	FUNCTION_43	WHILE_1
0x31db	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1708	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x31df	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1708	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x31e3	      0xba00000000	                              mov edx, 0	      1708	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x31e8	          0x4889ce	                            mov rsi, rcx	      1708	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x31eb	          0x4889c7	                            mov rdi, rax	      1708	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x31ee	      0xe800000000	                          call 0x4003233	      1708	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x31f3	            0x85c0	                           test eax, eax	      1708	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x31f5	            0x7409	                            je 0x4003240	      1708	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x31f7	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      1710	move.c	FUNCTION_43	WHILE_1	IF_4
0x31fe	            0xeb0f	                           jmp 0x400324f	      1710	move.c	FUNCTION_43	WHILE_1	IF_4
0x3200	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1713	move.c	FUNCTION_43	WHILE_1	CALL_5
0x3204	          0x4889c7	                            mov rdi, rax	      1713	move.c	FUNCTION_43	WHILE_1	CALL_5
0x3207	      0xe800000000	                          call 0x400324c	      1713	move.c	FUNCTION_43	WHILE_1	CALL_5
0x320c	          0x8945b8	             mov dword [rbp - 0x48], eax	      1713	move.c	FUNCTION_43	WHILE_1	CALL_5
0x320f	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1714	move.c	FUNCTION_43	WHILE_1
0x3212	           0x145b4	             add dword [rbp - 0x4c], eax	      1714	move.c	FUNCTION_43	WHILE_1
0x3215	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1715	move.c	FUNCTION_43	WHILE_1	IF_5
0x3218	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1715	move.c	FUNCTION_43	WHILE_1	IF_5
0x321b	             0x1d0	                            add eax, edx	      1715	move.c	FUNCTION_43	WHILE_1	IF_5
0x321d	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      1715	move.c	FUNCTION_43	WHILE_1	IF_5
0x3220	            0x7f41	                            jg 0x40032a3	      1715	move.c	FUNCTION_43	WHILE_1	IF_5
0x3222	    0x488b05000000	            mov rax, qword [0x04003269] 	      1715	move.c	FUNCTION_43	WHILE_1	IF_5
0x3229	          0x488b10	                    mov rdx, qword [rax]	      1715	move.c	FUNCTION_43	WHILE_1	IF_5
0x322c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1715	move.c	FUNCTION_43	WHILE_1	IF_5
0x3230	          0x4839c2	                            cmp rdx, rax	      1715	move.c	FUNCTION_43	WHILE_1	IF_5
0x3233	            0x7e2e	                           jle 0x40032a3	      1715	move.c	FUNCTION_43	WHILE_1	IF_5
0x3235	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1718	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x3239	        0x488d55c8	                   lea rdx, [rbp - 0x38]	      1718	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x323d	      0xbe00000000	                              mov esi, 0	      1718	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x3242	          0x4889c7	                            mov rdi, rax	      1718	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x3245	      0xe800000000	                          call 0x400328a	      1718	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x324a	            0x85c0	                           test eax, eax	      1718	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x324c	            0x7406	                            je 0x4003294	      1718	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x324e	        0x8345b401	               add dword [rbp - 0x4c], 1	      1720	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6
0x3252	            0xeb0f	                           jmp 0x40032a3	      1720	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6
0x3254	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1723	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x3258	          0x4889c7	                            mov rdi, rax	      1723	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x325b	      0xe800000000	                          call 0x40032a0	      1723	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x3260	           0x145b4	             add dword [rbp - 0x4c], eax	      1723	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x3263	    0x488b05000000	            mov rax, qword [0x040032aa] 	      1725	move.c	FUNCTION_43	WHILE_1	IF_7
0x326a	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1725	move.c	FUNCTION_43	WHILE_1	IF_7
0x3270	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      1725	move.c	FUNCTION_43	WHILE_1	IF_7
0x3273	            0x7c70	                            jl 0x4003325	      1725	move.c	FUNCTION_43	WHILE_1	IF_7
0x3275	    0x488b05000000	            mov rax, qword [0x040032bc] 	      1727	move.c	FUNCTION_43	WHILE_1	IF_8
0x327c	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1727	move.c	FUNCTION_43	WHILE_1	IF_8
0x3280	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1727	move.c	FUNCTION_43	WHILE_1	IF_8
0x3284	          0x4839c2	                            cmp rdx, rax	      1727	move.c	FUNCTION_43	WHILE_1	IF_8
0x3287	            0x7e06	                           jle 0x40032cf	      1727	move.c	FUNCTION_43	WHILE_1	IF_8
0x3289	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1728	move.c	FUNCTION_43	WHILE_1	IF_8
0x328c	           0x145ac	             add dword [rbp - 0x54], eax	      1728	move.c	FUNCTION_43	WHILE_1	IF_8
0x328f	    0x488b05000000	            mov rax, qword [0x040032d6] 	      1733	move.c	FUNCTION_43	WHILE_1	IF_9
0x3296	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1733	move.c	FUNCTION_43	WHILE_1	IF_9
0x329a	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1733	move.c	FUNCTION_43	WHILE_1	IF_9
0x329e	            0x7e08	                           jle 0x40032e8	      1733	move.c	FUNCTION_43	WHILE_1	IF_9
0x32a0	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1733	move.c	FUNCTION_43	WHILE_1	IF_9
0x32a3	          0x3b459c	             cmp eax, dword [rbp - 0x64]	      1733	move.c	FUNCTION_43	WHILE_1	IF_9
0x32a6	            0x7e08	                           jle 0x40032f0	      1733	move.c	FUNCTION_43	WHILE_1	IF_9
0x32a8	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1734	move.c	FUNCTION_43	WHILE_1	IF_9
0x32ab	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      1734	move.c	FUNCTION_43	WHILE_1	IF_9
0x32ae	            0x7d38	                           jge 0x4003328	      1734	move.c	FUNCTION_43	WHILE_1	IF_9
0x32b0	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1737	move.c	FUNCTION_43	WHILE_1
0x32b3	           0x145b0	             add dword [rbp - 0x50], eax	      1737	move.c	FUNCTION_43	WHILE_1
0x32b6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1738	move.c	FUNCTION_43	WHILE_1
0x32ba	        0x488945d0	             mov qword [rbp - 0x30], rax	      1738	move.c	FUNCTION_43	WHILE_1
0x32be	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1739	move.c	FUNCTION_43	WHILE_1
0x32c2	        0x4883e801	                              sub rax, 1	      1739	move.c	FUNCTION_43	WHILE_1
0x32c6	        0x488945c0	             mov qword [rbp - 0x40], rax	      1739	move.c	FUNCTION_43	WHILE_1
0x32ca	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1740	move.c	FUNCTION_43	WHILE_1
0x32ce	        0x4883c001	                              add rax, 1	      1740	move.c	FUNCTION_43	WHILE_1
0x32d2	        0x488945c8	             mov qword [rbp - 0x38], rax	      1740	move.c	FUNCTION_43	WHILE_1
0x32d6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1705	move.c	FUNCTION_43	WHILE_1
0x32da	          0x4885c0	                           test rax, rax	      1705	move.c	FUNCTION_43	WHILE_1
0x32dd	     0xf8ff8feffff	                            jg 0x400321b	      1705	move.c	FUNCTION_43	WHILE_1
0x32e3	            0xeb04	                           jmp 0x4003329	      1705	move.c	FUNCTION_43	WHILE_1
0x32e5	              0x90	                                     nop	      1726	move.c	FUNCTION_43	WHILE_1	IF_7
0x32e6	            0xeb01	                           jmp 0x4003329	      1726	move.c	FUNCTION_43	WHILE_1	IF_7
0x32e8	              0x90	                                     nop	      1735	move.c	FUNCTION_43	WHILE_1	IF_9
0x32e9	    0x488b05000000	            mov rax, qword [0x04003330] 	      1748	move.c	FUNCTION_43	IF_10
0x32f0	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1748	move.c	FUNCTION_43	IF_10
0x32f6	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      1748	move.c	FUNCTION_43	IF_10
0x32f9	            0x7d0f	                           jge 0x400334a	      1748	move.c	FUNCTION_43	IF_10
0x32fb	      0xbf00000000	                              mov edi, 0	      1749	move.c	FUNCTION_43	CALL_8
0x3300	      0xe800000000	                          call 0x4003345	      1749	move.c	FUNCTION_43	CALL_8
0x3305	      0xe954010000	                           jmp 0x400349e	      1779	move.c	FUNCTION_43
0x330a	    0x488b05000000	            mov rax, qword [0x04003351] 	      1756	move.c	FUNCTION_43	ELSE_4	IF_11
0x3311	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1756	move.c	FUNCTION_43	ELSE_4	IF_11
0x3315	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1756	move.c	FUNCTION_43	ELSE_4	IF_11
0x3319	            0x7f06	                            jg 0x4003361	      1756	move.c	FUNCTION_43	ELSE_4	IF_11
0x331b	        0x837d9800	               cmp dword [rbp - 0x68], 0	      1756	move.c	FUNCTION_43	ELSE_4	IF_11
0x331f	            0x740f	                            je 0x4003370	      1756	move.c	FUNCTION_43	ELSE_4	IF_11
0x3321	    0x488b05000000	            mov rax, qword [0x04003368] 	      1757	move.c	FUNCTION_43	ELSE_4	IF_11
0x3328	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1757	move.c	FUNCTION_43	ELSE_4	IF_11
0x332c	        0x48895078	             mov qword [rax + 0x78], rdx	      1757	move.c	FUNCTION_43	ELSE_4	IF_11
0x3330	    0x488b05000000	            mov rax, qword [0x04003377] 	      1758	move.c	FUNCTION_43	ELSE_4	IF_12
0x3337	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1758	move.c	FUNCTION_43	ELSE_4	IF_12
0x333b	    0x488b05000000	            mov rax, qword [0x04003382] 	      1758	move.c	FUNCTION_43	ELSE_4	IF_12
0x3342	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1758	move.c	FUNCTION_43	ELSE_4	IF_12
0x3346	          0x4839c2	                            cmp rdx, rax	      1758	move.c	FUNCTION_43	ELSE_4	IF_12
0x3349	            0x7e16	                           jle 0x40033a1	      1758	move.c	FUNCTION_43	ELSE_4	IF_12
0x334b	    0x488b05000000	            mov rax, qword [0x04003392] 	      1759	move.c	FUNCTION_43	ELSE_4	IF_12
0x3352	    0x488b15000000	            mov rdx, qword [0x04003399] 	      1759	move.c	FUNCTION_43	ELSE_4	IF_12
0x3359	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      1759	move.c	FUNCTION_43	ELSE_4	IF_12
0x335d	        0x48895078	             mov qword [rax + 0x78], rdx	      1759	move.c	FUNCTION_43	ELSE_4	IF_12
0x3361	    0x488b1d000000	            mov rbx, qword [0x040033a8] 	      1761	move.c	FUNCTION_43	ELSE_4	CALL_9
0x3368	    0x488b05000000	            mov rax, qword [0x040033af] 	      1761	move.c	FUNCTION_43	ELSE_4	CALL_9
0x336f	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1761	move.c	FUNCTION_43	ELSE_4	CALL_9
0x3373	    0x488b05000000	            mov rax, qword [0x040033ba] 	      1761	move.c	FUNCTION_43	ELSE_4	CALL_9
0x337a	          0x4889d6	                            mov rsi, rdx	      1761	move.c	FUNCTION_43	ELSE_4	CALL_9
0x337d	          0x4889c7	                            mov rdi, rax	      1761	move.c	FUNCTION_43	ELSE_4	CALL_9
0x3380	      0xe800000000	                          call 0x40033c5	      1761	move.c	FUNCTION_43	ELSE_4	CALL_9
0x3385	    0x898384000000	             mov dword [rbx + 0x84], eax	      1761	move.c	FUNCTION_43	ELSE_4	CALL_9
0x338b	    0x488b05000000	            mov rax, qword [0x040033d2] 	      1762	move.c	FUNCTION_43	ELSE_4	IF_13
0x3392	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1762	move.c	FUNCTION_43	ELSE_4	IF_13
0x3398	            0x85c0	                           test eax, eax	      1762	move.c	FUNCTION_43	ELSE_4	IF_13
0x339a	            0x7e4e	                           jle 0x400342a	      1762	move.c	FUNCTION_43	ELSE_4	IF_13
0x339c	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1762	move.c	FUNCTION_43	ELSE_4	IF_13
0x339f	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      1762	move.c	FUNCTION_43	ELSE_4	IF_13
0x33a2	            0x7e46	                           jle 0x400342a	      1762	move.c	FUNCTION_43	ELSE_4	IF_13
0x33a4	    0x488b05000000	            mov rax, qword [0x040033eb] 	      1764	move.c	FUNCTION_43	ELSE_4	IF_13
0x33ab	    0x488b15000000	            mov rdx, qword [0x040033f2] 	      1764	move.c	FUNCTION_43	ELSE_4	IF_13
0x33b2	    0x8b8a84000000	            mov ecx, dword [rdx + 0x84] 	      1764	move.c	FUNCTION_43	ELSE_4	IF_13
0x33b8	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1764	move.c	FUNCTION_43	ELSE_4	IF_13
0x33bb	          0x2b55bc	             sub edx, dword [rbp - 0x44]	      1764	move.c	FUNCTION_43	ELSE_4	IF_13
0x33be	            0x29d1	                            sub ecx, edx	      1764	move.c	FUNCTION_43	ELSE_4	IF_13
0x33c0	            0x89ca	                            mov edx, ecx	      1764	move.c	FUNCTION_43	ELSE_4	IF_13
0x33c2	    0x899084000000	             mov dword [rax + 0x84], edx	      1764	move.c	FUNCTION_43	ELSE_4	IF_13
0x33c8	    0x488b05000000	            mov rax, qword [0x0400340f] 	      1765	move.c	FUNCTION_43	ELSE_4	IF_13	IF_14
0x33cf	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1765	move.c	FUNCTION_43	ELSE_4	IF_13	IF_14
0x33d5	            0x85c0	                           test eax, eax	      1765	move.c	FUNCTION_43	ELSE_4	IF_13	IF_14
0x33d7	            0x7911	                           jns 0x400342a	      1765	move.c	FUNCTION_43	ELSE_4	IF_13	IF_14
0x33d9	    0x488b05000000	            mov rax, qword [0x04003420] 	      1766	move.c	FUNCTION_43	ELSE_4	IF_13	IF_14
0x33e0	    0xc78084000000	               mov dword [rax + 0x84], 0	      1766	move.c	FUNCTION_43	ELSE_4	IF_13	IF_14
0x33ea	    0x488b05000000	            mov rax, qword [0x04003431] 	      1768	move.c	FUNCTION_43	ELSE_4	CALL_10
0x33f1	      0xbe00000000	                              mov esi, 0	      1768	move.c	FUNCTION_43	ELSE_4	CALL_10
0x33f6	          0x4889c7	                            mov rdi, rax	      1768	move.c	FUNCTION_43	ELSE_4	CALL_10
0x33f9	      0xe800000000	                          call 0x400343e	      1768	move.c	FUNCTION_43	ELSE_4	CALL_10
0x33fe	    0x488b05000000	            mov rax, qword [0x04003445] 	      1770	move.c	FUNCTION_43	ELSE_4	IF_15
0x3405	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1770	move.c	FUNCTION_43	ELSE_4	IF_15
0x3409	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1770	move.c	FUNCTION_43	ELSE_4	IF_15
0x340d	            0x7515	                           jne 0x4003464	      1770	move.c	FUNCTION_43	ELSE_4	IF_15
0x340f	    0x488b05000000	            mov rax, qword [0x04003456] 	      1772	move.c	FUNCTION_43	ELSE_4	IF_15
0x3416	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1772	move.c	FUNCTION_43	ELSE_4	IF_15
0x341c	            0x4898	                                    cdqe	      1772	move.c	FUNCTION_43	ELSE_4	IF_15
0x341e	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      1772	move.c	FUNCTION_43	ELSE_4	IF_15
0x3422	            0x741d	                            je 0x4003481	      1772	move.c	FUNCTION_43	ELSE_4	IF_15
0x3424	    0x488b05000000	            mov rax, qword [0x0400346b] 	      1775	move.c	FUNCTION_43	ELSE_4	IF_15
0x342b	    0x488b15000000	            mov rdx, qword [0x04003472] 	      1775	move.c	FUNCTION_43	ELSE_4	IF_15
0x3432	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      1775	move.c	FUNCTION_43	ELSE_4	IF_15
0x3438	          0x83e28e	                     and edx, 0xffffff8e	      1775	move.c	FUNCTION_43	ELSE_4	IF_15
0x343b	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1775	move.c	FUNCTION_43	ELSE_4	IF_15
0x3441	    0x488b05000000	            mov rax, qword [0x04003488] 	      1777	move.c	FUNCTION_43	ELSE_4
0x3448	    0x488b15000000	            mov rdx, qword [0x0400348f] 	      1777	move.c	FUNCTION_43	ELSE_4
0x344f	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      1777	move.c	FUNCTION_43	ELSE_4
0x3455	          0x80ca80	                             or dl, 0x80	      1777	move.c	FUNCTION_43	ELSE_4
0x3458	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1777	move.c	FUNCTION_43	ELSE_4
0x345e	              0x90	                                     nop	      1779	move.c	FUNCTION_43
0x345f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1779	move.c	FUNCTION_43
0x3463	    0x644833042528	                xor rax, qword fs:[0x28]	      1779	move.c	FUNCTION_43
0x346c	            0x7405	                            je 0x40034b3	      1779	move.c	FUNCTION_43
0x346e	      0xe800000000	                          call 0x40034b3	      1779	move.c	FUNCTION_43
0x3473	        0x4883c468	                           add rsp, 0x68	      1779	move.c	FUNCTION_43
0x3477	              0x5b	                                 pop rbx	      1779	move.c	FUNCTION_43
0x3478	              0x5d	                                 pop rbp	      1779	move.c	FUNCTION_43
0x3479	              0xc3	                                     ret	      1779	move.c	FUNCTION_43
set_empty_rows	CALL,1:WHILE,0:SWITCH,0:functions,0:DO,0:IF,3:ELSE,2:FOR,0	57
0x347a	              0x55	                                push rbp	      1787	move.c	FUNCTION_44
0x347b	          0x4889e5	                            mov rbp, rsp	      1787	move.c	FUNCTION_44
0x347e	        0x4883ec10	                           sub rsp, 0x10	      1787	move.c	FUNCTION_44
0x3482	        0x48897df8	                mov qword [rbp - 8], rdi	      1787	move.c	FUNCTION_44
0x3486	          0x8975f4	              mov dword [rbp - 0xc], esi	      1787	move.c	FUNCTION_44
0x3489	        0x488b45f8	                mov rax, qword [rbp - 8]	      1789	move.c	FUNCTION_44
0x348d	    0xc780f4000000	               mov dword [rax + 0xf4], 0	      1789	move.c	FUNCTION_44
0x3497	        0x837df400	                cmp dword [rbp - 0xc], 0	      1791	move.c	FUNCTION_44	IF_1
0x349b	            0x7513	                           jne 0x40034f0	      1791	move.c	FUNCTION_44	IF_1
0x349d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1792	move.c	FUNCTION_44	IF_1
0x34a1	    0xc780f0000000	               mov dword [rax + 0xf0], 0	      1792	move.c	FUNCTION_44	IF_1
0x34ab	      0xe9ba000000	                           jmp 0x40035aa	      1810	move.c	FUNCTION_44
0x34b0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1795	move.c	FUNCTION_44	ELSE_1
0x34b4	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1795	move.c	FUNCTION_44	ELSE_1
0x34ba	          0x2b45f4	              sub eax, dword [rbp - 0xc]	      1795	move.c	FUNCTION_44	ELSE_1
0x34bd	            0x89c2	                            mov edx, eax	      1795	move.c	FUNCTION_44	ELSE_1
0x34bf	        0x488b45f8	                mov rax, qword [rbp - 8]	      1795	move.c	FUNCTION_44	ELSE_1
0x34c3	    0x8990f0000000	             mov dword [rax + 0xf0], edx	      1795	move.c	FUNCTION_44	ELSE_1
0x34c9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1797	move.c	FUNCTION_44	ELSE_1	IF_2
0x34cd	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      1797	move.c	FUNCTION_44	ELSE_1	IF_2
0x34d4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1797	move.c	FUNCTION_44	ELSE_1	IF_2
0x34d8	        0x488b4008	                mov rax, qword [rax + 8]	      1797	move.c	FUNCTION_44	ELSE_1	IF_2
0x34dc	          0x488b00	                    mov rax, qword [rax]	      1797	move.c	FUNCTION_44	ELSE_1	IF_2
0x34df	          0x4839c2	                            cmp rdx, rax	      1797	move.c	FUNCTION_44	ELSE_1	IF_2
0x34e2	     0xf8f82000000	                            jg 0x40035aa	      1797	move.c	FUNCTION_44	ELSE_1	IF_2
0x34e8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1799	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x34ec	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      1799	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x34f3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1799	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x34f7	          0x4889d6	                            mov rsi, rdx	      1799	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x34fa	          0x4889c7	                            mov rdi, rax	      1799	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x34fd	      0xe800000000	                          call 0x4003542	      1799	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x3502	            0x89c2	                            mov edx, eax	      1799	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x3504	        0x488b45f8	                mov rax, qword [rbp - 8]	      1799	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x3508	    0x8990f4000000	             mov dword [rax + 0xf4], edx	      1799	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x350e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1800	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x3512	    0x8b90f0000000	            mov edx, dword [rax + 0xf0] 	      1800	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x3518	        0x488b45f8	                mov rax, qword [rbp - 8]	      1800	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x351c	    0x8b80f4000000	            mov eax, dword [rax + 0xf4] 	      1800	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x3522	            0x39c2	                            cmp edx, eax	      1800	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x3524	            0x7e22	                           jle 0x4003588	      1800	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x3526	        0x488b45f8	                mov rax, qword [rbp - 8]	      1801	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x352a	    0x8b90f0000000	            mov edx, dword [rax + 0xf0] 	      1801	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x3530	        0x488b45f8	                mov rax, qword [rbp - 8]	      1801	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x3534	    0x8b80f4000000	            mov eax, dword [rax + 0xf4] 	      1801	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x353a	            0x29c2	                            sub edx, eax	      1801	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x353c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1801	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x3540	    0x8990f0000000	             mov dword [rax + 0xf0], edx	      1801	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x3546	            0xeb22	                           jmp 0x40035aa	      1810	move.c	FUNCTION_44
0x3548	        0x488b45f8	                mov rax, qword [rbp - 8]	      1804	move.c	FUNCTION_44	ELSE_1	IF_2	ELSE_2
0x354c	    0x8b90f0000000	            mov edx, dword [rax + 0xf0] 	      1804	move.c	FUNCTION_44	ELSE_1	IF_2	ELSE_2
0x3552	        0x488b45f8	                mov rax, qword [rbp - 8]	      1804	move.c	FUNCTION_44	ELSE_1	IF_2	ELSE_2
0x3556	    0x8990f4000000	             mov dword [rax + 0xf4], edx	      1804	move.c	FUNCTION_44	ELSE_1	IF_2	ELSE_2
0x355c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1805	move.c	FUNCTION_44	ELSE_1	IF_2	ELSE_2
0x3560	    0xc780f0000000	               mov dword [rax + 0xf0], 0	      1805	move.c	FUNCTION_44	ELSE_1	IF_2	ELSE_2
0x356a	              0x90	                                     nop	      1810	move.c	FUNCTION_44
0x356b	              0xc9	                                   leave	      1810	move.c	FUNCTION_44
0x356c	              0xc3	                                     ret	      1810	move.c	FUNCTION_44
topline_botline	CALL,1:WHILE,0:SWITCH,0:functions,0:DO,0:IF,1:ELSE,0:FOR,0	30
0x3048	              0x55	                                push rbp	      1633	move.c	FUNCTION_42
0x3049	          0x4889e5	                            mov rbp, rsp	      1633	move.c	FUNCTION_42
0x304c	        0x4883ec10	                           sub rsp, 0x10	      1633	move.c	FUNCTION_42
0x3050	        0x48897df8	                mov qword [rbp - 8], rdi	      1633	move.c	FUNCTION_42
0x3054	        0x488b45f8	                mov rax, qword [rbp - 8]	      1634	move.c	FUNCTION_42	IF_1
0x3058	          0x8b4008	                mov eax, dword [rax + 8]	      1634	move.c	FUNCTION_42	IF_1
0x305b	            0x85c0	                           test eax, eax	      1634	move.c	FUNCTION_42	IF_1
0x305d	            0x7e42	                           jle 0x40030e1	      1634	move.c	FUNCTION_42	IF_1
0x305f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1636	move.c	FUNCTION_42	IF_1	CALL_1
0x3063	          0x488b10	                    mov rdx, qword [rax]	      1636	move.c	FUNCTION_42	IF_1	CALL_1
0x3066	    0x488b05000000	            mov rax, qword [0x040030ad] 	      1636	move.c	FUNCTION_42	IF_1	CALL_1
0x306d	          0x4889d6	                            mov rsi, rdx	      1636	move.c	FUNCTION_42	IF_1	CALL_1
0x3070	          0x4889c7	                            mov rdi, rax	      1636	move.c	FUNCTION_42	IF_1	CALL_1
0x3073	      0xe800000000	                          call 0x40030b8	      1636	move.c	FUNCTION_42	IF_1	CALL_1
0x3078	            0x89c2	                            mov edx, eax	      1636	move.c	FUNCTION_42	IF_1	CALL_1
0x307a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1636	move.c	FUNCTION_42	IF_1	CALL_1
0x307e	          0x8b4008	                mov eax, dword [rax + 8]	      1636	move.c	FUNCTION_42	IF_1	CALL_1
0x3081	            0x29c2	                            sub edx, eax	      1636	move.c	FUNCTION_42	IF_1	CALL_1
0x3083	            0x89d0	                            mov eax, edx	      1636	move.c	FUNCTION_42	IF_1	CALL_1
0x3085	          0x8d5001	                      lea edx, [rax + 1]	      1636	move.c	FUNCTION_42	IF_1	CALL_1
0x3088	        0x488b45f8	                mov rax, qword [rbp - 8]	      1636	move.c	FUNCTION_42	IF_1	CALL_1
0x308c	          0x895008	                mov dword [rax + 8], edx	      1636	move.c	FUNCTION_42	IF_1	CALL_1
0x308f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1637	move.c	FUNCTION_42	IF_1
0x3093	          0x488b00	                    mov rax, qword [rax]	      1637	move.c	FUNCTION_42	IF_1
0x3096	        0x488d50ff	                      lea rdx, [rax - 1]	      1637	move.c	FUNCTION_42	IF_1
0x309a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1637	move.c	FUNCTION_42	IF_1
0x309e	          0x488910	                    mov qword [rax], rdx	      1637	move.c	FUNCTION_42	IF_1
0x30a1	              0x90	                                     nop	      1639	move.c	FUNCTION_42
0x30a2	              0xc9	                                   leave	      1639	move.c	FUNCTION_42
0x30a3	              0xc3	                                     ret	      1639	move.c	FUNCTION_42
changed_line_abv_curs	CALL,0:WHILE,0:SWITCH,0:functions,0:DO,0:IF,0:ELSE,0:FOR,0	10
0xd49	              0x55	                                push rbp	       578	move.c	FUNCTION_14
0xd4a	          0x4889e5	                            mov rbp, rsp	       578	move.c	FUNCTION_14
0xd4d	    0x488b05000000	            mov rax, qword [0x04000d94] 	       579	move.c	FUNCTION_14
0xd54	    0x488b15000000	            mov rdx, qword [0x04000d9b] 	       579	move.c	FUNCTION_14
0xd5b	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	       579	move.c	FUNCTION_14
0xd61	          0x80e260	                            and dl, 0x60	       579	move.c	FUNCTION_14
0xd64	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       579	move.c	FUNCTION_14
0xd6a	              0x90	                                     nop	       581	move.c	FUNCTION_14
0xd6b	              0x5d	                                 pop rbp	       581	move.c	FUNCTION_14
0xd6c	              0xc3	                                     ret	       581	move.c	FUNCTION_14
curwin_col_off	CALL,1:WHILE,0:SWITCH,0:functions,0:DO,0:IF,0:ELSE,0:FOR,0	7
0x1790	              0x55	                                push rbp	       898	move.c	FUNCTION_29
0x1791	          0x4889e5	                            mov rbp, rsp	       898	move.c	FUNCTION_29
0x1794	    0x488b05000000	            mov rax, qword [0x040017db] 	       899	move.c	FUNCTION_29	CALL_1
0x179b	          0x4889c7	                            mov rdi, rax	       899	move.c	FUNCTION_29	CALL_1
0x179e	      0xe800000000	                          call 0x40017e3	       899	move.c	FUNCTION_29	CALL_1
0x17a3	              0x5d	                                 pop rbp	       900	move.c	FUNCTION_29
0x17a4	              0xc3	                                     ret	       900	move.c	FUNCTION_29
approximate_botline_win	CALL,0:WHILE,0:SWITCH,0:functions,0:DO,0:IF,0:ELSE,0:FOR,0	12
0xe02	              0x55	                                push rbp	       618	move.c	FUNCTION_19
0xe03	          0x4889e5	                            mov rbp, rsp	       618	move.c	FUNCTION_19
0xe06	        0x48897df8	                mov qword [rbp - 8], rdi	       618	move.c	FUNCTION_19
0xe0a	        0x488b45f8	                mov rax, qword [rbp - 8]	       619	move.c	FUNCTION_19
0xe0e	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       619	move.c	FUNCTION_19
0xe14	          0x83e0df	                     and eax, 0xffffffdf	       619	move.c	FUNCTION_19
0xe17	            0x89c2	                            mov edx, eax	       619	move.c	FUNCTION_19
0xe19	        0x488b45f8	                mov rax, qword [rbp - 8]	       619	move.c	FUNCTION_19
0xe1d	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       619	move.c	FUNCTION_19
0xe23	              0x90	                                     nop	       620	move.c	FUNCTION_19
0xe24	              0x5d	                                 pop rbp	       620	move.c	FUNCTION_19
0xe25	              0xc3	                                     ret	       620	move.c	FUNCTION_19
win_col_off	CALL,2:WHILE,0:SWITCH,0:functions,0:DO,0:IF,0:ELSE,0:FOR,0	46
0x16f7	              0x55	                                push rbp	       882	move.c	ELSE_1	FUNCTION_28
0x16f8	          0x4889e5	                            mov rbp, rsp	       882	move.c	ELSE_1	FUNCTION_28
0x16fb	              0x53	                                push rbx	       882	move.c	ELSE_1	FUNCTION_28
0x16fc	        0x4883ec18	                           sub rsp, 0x18	       882	move.c	ELSE_1	FUNCTION_28
0x1700	        0x48897de8	             mov qword [rbp - 0x18], rdi	       882	move.c	ELSE_1	FUNCTION_28
0x1704	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       883	move.c	ELSE_1	FUNCTION_28	CALL_1
0x1708	    0x8b8038020000	           mov eax, dword [rax + 0x238] 	       883	move.c	ELSE_1	FUNCTION_28	CALL_1
0x170e	            0x85c0	                           test eax, eax	       883	move.c	ELSE_1	FUNCTION_28	CALL_1
0x1710	            0x750e	                           jne 0x4001760	       883	move.c	ELSE_1	FUNCTION_28	CALL_1
0x1712	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       883	move.c	ELSE_1	FUNCTION_28	CALL_1
0x1716	    0x8b803c020000	           mov eax, dword [rax + 0x23c] 	       883	move.c	ELSE_1	FUNCTION_28	CALL_1
0x171c	            0x85c0	                           test eax, eax	       883	move.c	ELSE_1	FUNCTION_28	CALL_1
0x171e	            0x7411	                            je 0x4001771	       883	move.c	ELSE_1	FUNCTION_28	CALL_1
0x1720	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       883	move.c	ELSE_1	FUNCTION_28	CALL_1
0x1724	          0x4889c7	                            mov rdi, rax	       883	move.c	ELSE_1	FUNCTION_28	CALL_1
0x1727	      0xe800000000	                          call 0x400176c	       883	move.c	ELSE_1	FUNCTION_28	CALL_1
0x172c	          0x8d5001	                      lea edx, [rax + 1]	       883	move.c	ELSE_1	FUNCTION_28	CALL_1
0x172f	            0xeb05	                           jmp 0x4001776	       883	move.c	ELSE_1	FUNCTION_28	CALL_1
0x1731	      0xba00000000	                              mov edx, 0	       883	move.c	ELSE_1	FUNCTION_28	CALL_1
0x1736	    0x8b0500000000	            mov eax, dword [0x0400177c] 	       885	move.c	ELSE_1	FUNCTION_28
0x173c	            0x85c0	                           test eax, eax	       885	move.c	ELSE_1	FUNCTION_28
0x173e	            0x7414	                            je 0x4001794	       885	move.c	ELSE_1	FUNCTION_28
0x1740	    0x488b05000000	            mov rax, qword [0x04001787] 	       885	move.c	ELSE_1	FUNCTION_28
0x1747	        0x483945e8	            cmp qword [rbp - 0x18], rax 	       885	move.c	ELSE_1	FUNCTION_28
0x174b	            0x7507	                           jne 0x4001794	       885	move.c	ELSE_1	FUNCTION_28
0x174d	      0xb801000000	                              mov eax, 1	       885	move.c	ELSE_1	FUNCTION_28
0x1752	            0xeb05	                           jmp 0x4001799	       885	move.c	ELSE_1	FUNCTION_28
0x1754	      0xb800000000	                              mov eax, 0	       885	move.c	ELSE_1	FUNCTION_28
0x1759	             0x1d0	                            add eax, edx	       885	move.c	ELSE_1	FUNCTION_28
0x175b	            0x89c2	                            mov edx, eax	       883	move.c	ELSE_1	FUNCTION_28	CALL_1
0x175d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       888	move.c	ELSE_1	FUNCTION_28
0x1761	    0x488b80c80100	           mov rax, qword [rax + 0x1c8] 	       888	move.c	ELSE_1	FUNCTION_28
0x1768	          0x8d1c02	                    lea ebx, [rdx + rax]	       883	move.c	ELSE_1	FUNCTION_28	CALL_1
0x176b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       891	move.c	ELSE_1	FUNCTION_28	CALL_2
0x176f	          0x4889c7	                            mov rdi, rax	       891	move.c	ELSE_1	FUNCTION_28	CALL_2
0x1772	      0xe800000000	                          call 0x40017b7	       891	move.c	ELSE_1	FUNCTION_28	CALL_2
0x1777	            0x85c0	                           test eax, eax	       883	move.c	ELSE_1	FUNCTION_28	CALL_1
0x1779	            0x7407	                            je 0x40017c2	       883	move.c	ELSE_1	FUNCTION_28	CALL_1
0x177b	      0xb802000000	                              mov eax, 2	       883	move.c	ELSE_1	FUNCTION_28	CALL_1
0x1780	            0xeb05	                           jmp 0x40017c7	       883	move.c	ELSE_1	FUNCTION_28	CALL_1
0x1782	      0xb800000000	                              mov eax, 0	       883	move.c	ELSE_1	FUNCTION_28	CALL_1
0x1787	             0x1d8	                            add eax, ebx	       883	move.c	ELSE_1	FUNCTION_28	CALL_1
0x1789	        0x4883c418	                           add rsp, 0x18	       894	move.c	ELSE_1	FUNCTION_28
0x178d	              0x5b	                                 pop rbx	       894	move.c	ELSE_1	FUNCTION_28
0x178e	              0x5d	                                 pop rbp	       894	move.c	ELSE_1	FUNCTION_28
0x178f	              0xc3	                                     ret	       894	move.c	ELSE_1	FUNCTION_28
botline_topline	CALL,1:WHILE,0:SWITCH,0:functions,0:DO,0:IF,1:ELSE,0:FOR,0	30
0x2fec	              0x55	                                push rbp	      1618	move.c	FUNCTION_41
0x2fed	          0x4889e5	                            mov rbp, rsp	      1618	move.c	FUNCTION_41
0x2ff0	        0x4883ec10	                           sub rsp, 0x10	      1618	move.c	FUNCTION_41
0x2ff4	        0x48897df8	                mov qword [rbp - 8], rdi	      1618	move.c	FUNCTION_41
0x2ff8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1619	move.c	FUNCTION_41	IF_1
0x2ffc	          0x8b4008	                mov eax, dword [rax + 8]	      1619	move.c	FUNCTION_41	IF_1
0x2fff	            0x85c0	                           test eax, eax	      1619	move.c	FUNCTION_41	IF_1
0x3001	            0x7e42	                           jle 0x4003085	      1619	move.c	FUNCTION_41	IF_1
0x3003	        0x488b45f8	                mov rax, qword [rbp - 8]	      1621	move.c	FUNCTION_41	IF_1
0x3007	          0x488b00	                    mov rax, qword [rax]	      1621	move.c	FUNCTION_41	IF_1
0x300a	        0x488d5001	                      lea rdx, [rax + 1]	      1621	move.c	FUNCTION_41	IF_1
0x300e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1621	move.c	FUNCTION_41	IF_1
0x3012	          0x488910	                    mov qword [rax], rdx	      1621	move.c	FUNCTION_41	IF_1
0x3015	        0x488b45f8	                mov rax, qword [rbp - 8]	      1622	move.c	FUNCTION_41	IF_1	CALL_1
0x3019	          0x488b10	                    mov rdx, qword [rax]	      1622	move.c	FUNCTION_41	IF_1	CALL_1
0x301c	    0x488b05000000	            mov rax, qword [0x04003063] 	      1622	move.c	FUNCTION_41	IF_1	CALL_1
0x3023	          0x4889d6	                            mov rsi, rdx	      1622	move.c	FUNCTION_41	IF_1	CALL_1
0x3026	          0x4889c7	                            mov rdi, rax	      1622	move.c	FUNCTION_41	IF_1	CALL_1
0x3029	      0xe800000000	                          call 0x400306e	      1622	move.c	FUNCTION_41	IF_1	CALL_1
0x302e	            0x89c2	                            mov edx, eax	      1622	move.c	FUNCTION_41	IF_1	CALL_1
0x3030	        0x488b45f8	                mov rax, qword [rbp - 8]	      1622	move.c	FUNCTION_41	IF_1	CALL_1
0x3034	          0x8b4008	                mov eax, dword [rax + 8]	      1622	move.c	FUNCTION_41	IF_1	CALL_1
0x3037	            0x29c2	                            sub edx, eax	      1622	move.c	FUNCTION_41	IF_1	CALL_1
0x3039	            0x89d0	                            mov eax, edx	      1622	move.c	FUNCTION_41	IF_1	CALL_1
0x303b	          0x8d5001	                      lea edx, [rax + 1]	      1622	move.c	FUNCTION_41	IF_1	CALL_1
0x303e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1622	move.c	FUNCTION_41	IF_1	CALL_1
0x3042	          0x895008	                mov dword [rax + 8], edx	      1622	move.c	FUNCTION_41	IF_1	CALL_1
0x3045	              0x90	                                     nop	      1624	move.c	FUNCTION_41
0x3046	              0xc9	                                   leave	      1624	move.c	FUNCTION_41
0x3047	              0xc3	                                     ret	      1624	move.c	FUNCTION_41
invalidate_botline_win	CALL,0:WHILE,0:SWITCH,0:functions,0:DO,0:IF,0:ELSE,0:FOR,0	12
0xdde	              0x55	                                push rbp	       611	move.c	FUNCTION_18
0xddf	          0x4889e5	                            mov rbp, rsp	       611	move.c	FUNCTION_18
0xde2	        0x48897df8	                mov qword [rbp - 8], rdi	       611	move.c	FUNCTION_18
0xde6	        0x488b45f8	                mov rax, qword [rbp - 8]	       612	move.c	FUNCTION_18
0xdea	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       612	move.c	FUNCTION_18
0xdf0	          0x83e09f	                     and eax, 0xffffff9f	       612	move.c	FUNCTION_18
0xdf3	            0x89c2	                            mov edx, eax	       612	move.c	FUNCTION_18
0xdf5	        0x488b45f8	                mov rax, qword [rbp - 8]	       612	move.c	FUNCTION_18
0xdf9	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       612	move.c	FUNCTION_18
0xdff	              0x90	                                     nop	       613	move.c	FUNCTION_18
0xe00	              0x5d	                                 pop rbp	       613	move.c	FUNCTION_18
0xe01	              0xc3	                                     ret	       613	move.c	FUNCTION_18
validate_virtcol_win	CALL,4:WHILE,0:SWITCH,0:functions,0:DO,0:IF,2:ELSE,0:FOR,0	42
0x1465	              0x55	                                push rbp	       802	move.c	FUNCTION_25
0x1466	          0x4889e5	                            mov rbp, rsp	       802	move.c	FUNCTION_25
0x1469	        0x4883ec10	                           sub rsp, 0x10	       802	move.c	FUNCTION_25
0x146d	        0x48897df8	                mov qword [rbp - 8], rdi	       802	move.c	FUNCTION_25
0x1471	        0x488b45f8	                mov rax, qword [rbp - 8]	       803	move.c	FUNCTION_25	CALL_1
0x1475	          0x4889c7	                            mov rdi, rax	       803	move.c	FUNCTION_25	CALL_1
0x1478	      0xe800000000	                          call 0x40014bd	       803	move.c	FUNCTION_25	CALL_1
0x147d	        0x488b45f8	                mov rax, qword [rbp - 8]	       804	move.c	FUNCTION_25	IF_1
0x1481	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       804	move.c	FUNCTION_25	IF_1
0x1487	          0x83e004	                              and eax, 4	       804	move.c	FUNCTION_25	IF_1
0x148a	            0x85c0	                           test eax, eax	       804	move.c	FUNCTION_25	IF_1
0x148c	            0x756e	                           jne 0x400153c	       804	move.c	FUNCTION_25	IF_1
0x148e	        0x488b45f8	                mov rax, qword [rbp - 8]	       806	move.c	FUNCTION_25	IF_1	CALL_2
0x1492	    0x488d90d80000	                   lea rdx, [rax + 0xd8]	       806	move.c	FUNCTION_25	IF_1	CALL_2
0x1499	        0x488b45f8	                mov rax, qword [rbp - 8]	       806	move.c	FUNCTION_25	IF_1	CALL_2
0x149d	        0x488d7038	                   lea rsi, [rax + 0x38]	       806	move.c	FUNCTION_25	IF_1	CALL_2
0x14a1	        0x488b45f8	                mov rax, qword [rbp - 8]	       806	move.c	FUNCTION_25	IF_1	CALL_2
0x14a5	    0x41b800000000	                              mov r8d, 0	       806	move.c	FUNCTION_25	IF_1	CALL_2
0x14ab	          0x4889d1	                            mov rcx, rdx	       806	move.c	FUNCTION_25	IF_1	CALL_2
0x14ae	      0xba00000000	                              mov edx, 0	       806	move.c	FUNCTION_25	IF_1	CALL_2
0x14b3	          0x4889c7	                            mov rdi, rax	       806	move.c	FUNCTION_25	IF_1	CALL_2
0x14b6	      0xe800000000	                          call 0x40014fb	       806	move.c	FUNCTION_25	IF_1	CALL_2
0x14bb	        0x488b45f8	                mov rax, qword [rbp - 8]	       807	move.c	FUNCTION_25	IF_1
0x14bf	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       807	move.c	FUNCTION_25	IF_1
0x14c5	          0x83c804	                               or eax, 4	       807	move.c	FUNCTION_25	IF_1
0x14c8	            0x89c2	                            mov edx, eax	       807	move.c	FUNCTION_25	IF_1
0x14ca	        0x488b45f8	                mov rax, qword [rbp - 8]	       807	move.c	FUNCTION_25	IF_1
0x14ce	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       807	move.c	FUNCTION_25	IF_1
0x14d4	        0x488b45f8	                mov rax, qword [rbp - 8]	       809	move.c	FUNCTION_25	IF_1	IF_2
0x14d8	    0x8b806c020000	           mov eax, dword [rax + 0x26c] 	       809	move.c	FUNCTION_25	IF_1	IF_2
0x14de	            0x85c0	                           test eax, eax	       809	move.c	FUNCTION_25	IF_1	IF_2
0x14e0	            0x741a	                            je 0x400153c	       809	move.c	FUNCTION_25	IF_1	IF_2
0x14e2	      0xe800000000	                          call 0x4001527	       811	move.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x14e7	            0x85c0	                           test eax, eax	       811	move.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x14e9	            0x7511	                           jne 0x400153c	       811	move.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x14eb	        0x488b45f8	                mov rax, qword [rbp - 8]	       814	move.c	FUNCTION_25	IF_1	CALL_4
0x14ef	      0xbe23000000	                           mov esi, 0x23	       814	move.c	FUNCTION_25	IF_1	CALL_4
0x14f4	          0x4889c7	                            mov rdi, rax	       814	move.c	FUNCTION_25	IF_1	CALL_4
0x14f7	      0xe800000000	                          call 0x400153c	       814	move.c	FUNCTION_25	IF_1	CALL_4
0x14fc	              0x90	                                     nop	       817	move.c	FUNCTION_25
0x14fd	              0xc9	                                   leave	       817	move.c	FUNCTION_25
0x14fe	              0xc3	                                     ret	       817	move.c	FUNCTION_25
invalidate_botline	CALL,0:WHILE,0:SWITCH,0:functions,0:DO,0:IF,0:ELSE,0:FOR,0	10
0xdba	              0x55	                                push rbp	       605	move.c	FUNCTION_17
0xdbb	          0x4889e5	                            mov rbp, rsp	       605	move.c	FUNCTION_17
0xdbe	    0x488b05000000	            mov rax, qword [0x04000e05] 	       606	move.c	FUNCTION_17
0xdc5	    0x488b15000000	            mov rdx, qword [0x04000e0c] 	       606	move.c	FUNCTION_17
0xdcc	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	       606	move.c	FUNCTION_17
0xdd2	          0x83e29f	                     and edx, 0xffffff9f	       606	move.c	FUNCTION_17
0xdd5	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       606	move.c	FUNCTION_17
0xddb	              0x90	                                     nop	       607	move.c	FUNCTION_17
0xddc	              0x5d	                                 pop rbp	       607	move.c	FUNCTION_17
0xddd	              0xc3	                                     ret	       607	move.c	FUNCTION_17
curs_columns	CALL,16:WHILE,1:SWITCH,0:functions,0:DO,0:IF,35:ELSE,15:FOR,0	627
0x1813	              0x55	                                push rbp	       929	move.c	FUNCTION_32
0x1814	          0x4889e5	                            mov rbp, rsp	       929	move.c	FUNCTION_32
0x1817	              0x53	                                push rbx	       929	move.c	FUNCTION_32
0x1818	        0x4883ec58	                           sub rsp, 0x58	       929	move.c	FUNCTION_32
0x181c	          0x897dac	             mov dword [rbp - 0x54], edi	       929	move.c	FUNCTION_32
0x181f	    0x64488b042528	                mov rax, qword fs:[0x28]	       929	move.c	FUNCTION_32
0x1828	        0x488945e8	             mov qword [rbp - 0x18], rax	       929	move.c	FUNCTION_32
0x182c	            0x31c0	                            xor eax, eax	       929	move.c	FUNCTION_32
0x182e	    0xc745d0000000	               mov dword [rbp - 0x30], 0	       935	move.c	FUNCTION_32
0x1835	      0xe800000000	                          call 0x400187a	       945	move.c	FUNCTION_32	CALL_1
0x183a	    0x488b05000000	            mov rax, qword [0x04001881] 	       950	move.c	FUNCTION_32	IF_1
0x1841	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       950	move.c	FUNCTION_32	IF_1
0x1847	          0x83e010	                           and eax, 0x10	       950	move.c	FUNCTION_32	IF_1
0x184a	            0x85c0	                           test eax, eax	       950	move.c	FUNCTION_32	IF_1
0x184c	            0x750f	                           jne 0x400189d	       950	move.c	FUNCTION_32	IF_1
0x184e	    0x488b05000000	            mov rax, qword [0x04001895] 	       951	move.c	FUNCTION_32	CALL_2
0x1855	          0x4889c7	                            mov rdi, rax	       951	move.c	FUNCTION_32	CALL_2
0x1858	      0xe82cf6ffff	                      call sym.curs_rows	       951	move.c	FUNCTION_32	CALL_2
0x185d	    0x488b05000000	            mov rax, qword [0x040018a4] 	       957	move.c	FUNCTION_32	IF_2
0x1864	    0x8b80d0000000	            mov eax, dword [rax + 0xd0] 	       957	move.c	FUNCTION_32	IF_2
0x186a	            0x85c0	                           test eax, eax	       957	move.c	FUNCTION_32	IF_2
0x186c	            0x742b	                            je 0x40018d9	       957	move.c	FUNCTION_32	IF_2
0x186e	    0x488b05000000	            mov rax, qword [0x040018b5] 	       959	move.c	FUNCTION_32	IF_2
0x1875	    0x488b15000000	            mov rdx, qword [0x040018bc] 	       959	move.c	FUNCTION_32	IF_2
0x187c	    0x8b9294000000	            mov edx, dword [rdx + 0x94] 	       959	move.c	FUNCTION_32	IF_2
0x1882	          0x8955bc	             mov dword [rbp - 0x44], edx	       959	move.c	FUNCTION_32	IF_2
0x1885	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       959	move.c	FUNCTION_32	IF_2
0x1888	    0x8990d8000000	             mov dword [rax + 0xd8], edx	       959	move.c	FUNCTION_32	IF_2
0x188e	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	       959	move.c	FUNCTION_32	IF_2
0x1894	          0x8945b8	             mov dword [rbp - 0x48], eax	       959	move.c	FUNCTION_32	IF_2
0x1897	            0xeb33	                           jmp 0x400190c	       959	move.c	FUNCTION_32	IF_2
0x1899	    0x488b05000000	            mov rax, qword [0x040018e0] 	       963	move.c	FUNCTION_32	ELSE_1
0x18a0	    0x488d88d80000	                   lea rcx, [rax + 0xd8]	       962	move.c	FUNCTION_32	ELSE_1	CALL_3
0x18a7	    0x488b05000000	            mov rax, qword [0x040018ee] 	       962	move.c	FUNCTION_32	ELSE_1	CALL_3
0x18ae	        0x488d7038	                   lea rsi, [rax + 0x38]	       962	move.c	FUNCTION_32	ELSE_1	CALL_3
0x18b2	    0x488b05000000	            mov rax, qword [0x040018f9] 	       962	move.c	FUNCTION_32	ELSE_1	CALL_3
0x18b9	        0x488d7dbc	                   lea rdi, [rbp - 0x44]	       962	move.c	FUNCTION_32	ELSE_1	CALL_3
0x18bd	        0x488d55b8	                   lea rdx, [rbp - 0x48]	       962	move.c	FUNCTION_32	ELSE_1	CALL_3
0x18c1	          0x4989f8	                             mov r8, rdi	       962	move.c	FUNCTION_32	ELSE_1	CALL_3
0x18c4	          0x4889c7	                            mov rdi, rax	       962	move.c	FUNCTION_32	ELSE_1	CALL_3
0x18c7	      0xe800000000	                          call 0x400190c	       962	move.c	FUNCTION_32	ELSE_1	CALL_3
0x18cc	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       966	move.c	FUNCTION_32	IF_3
0x18cf	    0x8b0500000000	            mov eax, dword [0x04001915] 	       966	move.c	FUNCTION_32	IF_3
0x18d5	            0x39c2	                            cmp edx, eax	       966	move.c	FUNCTION_32	IF_3
0x18d7	            0x7e0a	                           jle 0x4001923	       966	move.c	FUNCTION_32	IF_3
0x18d9	    0xc70500000000	     mov dword [0x04001923], 0xffffffff 	       967	move.c	FUNCTION_32	IF_3
0x18e3	      0xe800000000	                          call 0x4001928	       969	move.c	FUNCTION_32	CALL_4
0x18e8	          0x8945c4	             mov dword [rbp - 0x3c], eax	       969	move.c	FUNCTION_32	CALL_4
0x18eb	    0x488b05000000	            mov rax, qword [0x04001932] 	       970	move.c	FUNCTION_32
0x18f2	    0x488b15000000	            mov rdx, qword [0x04001939] 	       970	move.c	FUNCTION_32
0x18f9	    0x8b8ad8000000	            mov ecx, dword [rdx + 0xd8] 	       970	move.c	FUNCTION_32
0x18ff	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       970	move.c	FUNCTION_32
0x1902	             0x1ca	                            add edx, ecx	       970	move.c	FUNCTION_32
0x1904	    0x8990e0000000	             mov dword [rax + 0xe0], edx	       970	move.c	FUNCTION_32
0x190a	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       971	move.c	FUNCTION_32
0x190d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       971	move.c	FUNCTION_32
0x1910	             0x1d0	                            add eax, edx	       971	move.c	FUNCTION_32
0x1912	          0x8945bc	             mov dword [rbp - 0x44], eax	       971	move.c	FUNCTION_32
0x1915	    0x488b05000000	            mov rax, qword [0x0400195c] 	       976	move.c	FUNCTION_32
0x191c	    0x488b15000000	            mov rdx, qword [0x04001963] 	       976	move.c	FUNCTION_32
0x1923	    0x8b92d4000000	            mov edx, dword [rdx + 0xd4] 	       976	move.c	FUNCTION_32
0x1929	    0x8990dc000000	             mov dword [rax + 0xdc], edx	       976	move.c	FUNCTION_32
0x192f	    0x488b05000000	            mov rax, qword [0x04001976] 	       978	move.c	FUNCTION_32
0x1936	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       978	move.c	FUNCTION_32
0x193c	          0x2b45c4	             sub eax, dword [rbp - 0x3c]	       978	move.c	FUNCTION_32
0x193f	          0x8945d8	             mov dword [rbp - 0x28], eax	       978	move.c	FUNCTION_32
0x1942	        0x837dd800	               cmp dword [rbp - 0x28], 0	       979	move.c	FUNCTION_32	IF_4
0x1946	            0x7f3f	                            jg 0x40019c7	       979	move.c	FUNCTION_32	IF_4
0x1948	    0x488b05000000	            mov rax, qword [0x0400198f] 	       982	move.c	FUNCTION_32	IF_4
0x194f	    0x488b15000000	            mov rdx, qword [0x04001996] 	       982	move.c	FUNCTION_32	IF_4
0x1956	    0x8b92ac000000	            mov edx, dword [rdx + 0xac] 	       982	move.c	FUNCTION_32	IF_4
0x195c	          0x83ea01	                              sub edx, 1	       982	move.c	FUNCTION_32	IF_4
0x195f	    0x8990e0000000	             mov dword [rax + 0xe0], edx	       982	move.c	FUNCTION_32	IF_4
0x1965	    0x488b05000000	            mov rax, qword [0x040019ac] 	       983	move.c	FUNCTION_32	IF_4
0x196c	    0x488b15000000	            mov rdx, qword [0x040019b3] 	       983	move.c	FUNCTION_32	IF_4
0x1973	    0x8b92a0000000	            mov edx, dword [rdx + 0xa0] 	       983	move.c	FUNCTION_32	IF_4
0x1979	          0x83ea01	                              sub edx, 1	       983	move.c	FUNCTION_32	IF_4
0x197c	    0x8990dc000000	             mov dword [rax + 0xdc], edx	       983	move.c	FUNCTION_32	IF_4
0x1982	      0xe91f030000	                           jmp 0x4001ce6	       983	move.c	FUNCTION_32	IF_4
0x1987	    0x488b05000000	            mov rax, qword [0x040019ce] 	       985	move.c	FUNCTION_32	ELSE_2	IF_5
0x198e	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	       985	move.c	FUNCTION_32	ELSE_2	IF_5
0x1994	            0x85c0	                           test eax, eax	       985	move.c	FUNCTION_32	ELSE_2	IF_5
0x1996	     0xf840e010000	                            je 0x4001aea	       985	move.c	FUNCTION_32	ELSE_2	IF_5
0x199c	    0x488b05000000	            mov rax, qword [0x040019e3] 	       985	move.c	FUNCTION_32	ELSE_2	IF_5
0x19a3	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       985	move.c	FUNCTION_32	ELSE_2	IF_5
0x19a9	            0x85c0	                           test eax, eax	       985	move.c	FUNCTION_32	ELSE_2	IF_5
0x19ab	     0xf84f9000000	                            je 0x4001aea	       985	move.c	FUNCTION_32	ELSE_2	IF_5
0x19b1	      0xe800000000	                          call 0x40019f6	       987	move.c	FUNCTION_32	ELSE_2	IF_5	CALL_5
0x19b6	            0x89c2	                            mov edx, eax	       987	move.c	FUNCTION_32	ELSE_2	IF_5	CALL_5
0x19b8	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       987	move.c	FUNCTION_32	ELSE_2	IF_5	CALL_5
0x19bb	             0x1d0	                            add eax, edx	       987	move.c	FUNCTION_32	ELSE_2	IF_5	CALL_5
0x19bd	          0x8945d0	             mov dword [rbp - 0x30], eax	       987	move.c	FUNCTION_32	ELSE_2	IF_5	CALL_5
0x19c0	    0x488b05000000	            mov rax, qword [0x04001a07] 	       990	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x19c7	    0x8b90e0000000	            mov edx, dword [rax + 0xe0] 	       990	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x19cd	    0x488b05000000	            mov rax, qword [0x04001a14] 	       990	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x19d4	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       990	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x19da	            0x39c2	                            cmp edx, eax	       990	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x19dc	     0xf8cc3020000	                            jl 0x4001ce5	       990	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x19e2	    0x488b05000000	            mov rax, qword [0x04001a29] 	       993	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x19e9	    0x8b90e0000000	            mov edx, dword [rax + 0xe0] 	       993	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x19ef	    0x488b05000000	            mov rax, qword [0x04001a36] 	       993	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x19f6	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       993	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x19fc	            0x29c2	                            sub edx, eax	       993	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x19fe	            0x89d0	                            mov eax, edx	       993	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x1a00	              0x99	                                     cdq	       993	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x1a01	          0xf77dd0	                 idiv dword [rbp - 0x30]	       993	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x1a04	          0x83c001	                              add eax, 1	       993	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x1a07	          0x8945c8	             mov dword [rbp - 0x38], eax	       993	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x1a0a	    0x488b05000000	            mov rax, qword [0x04001a51] 	       994	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x1a11	    0x488b15000000	            mov rdx, qword [0x04001a58] 	       994	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x1a18	    0x8b8ae0000000	            mov ecx, dword [rdx + 0xe0] 	       994	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x1a1e	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       994	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x1a21	         0xfaf55d0	            imul edx, dword [rbp - 0x30]	       994	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x1a25	            0x29d1	                            sub ecx, edx	       994	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x1a27	            0x89ca	                            mov edx, ecx	       994	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x1a29	    0x8990e0000000	             mov dword [rax + 0xe0], edx	       994	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x1a2f	    0x488b05000000	            mov rax, qword [0x04001a76] 	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x1a36	    0x488b15000000	            mov rdx, qword [0x04001a7d] 	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x1a3d	    0x8b8adc000000	            mov ecx, dword [rdx + 0xdc] 	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x1a43	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x1a46	             0x1ca	                            add edx, ecx	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x1a48	    0x8990dc000000	             mov dword [rax + 0xdc], edx	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x1a4e	    0x488b05000000	            mov rax, qword [0x04001a95] 	      1001	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x1a55	           0xfb600	                   movzx eax, byte [rax]	      1001	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x1a58	            0x84c0	                             test al, al	      1001	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x1a5a	     0xf8445020000	                            je 0x4001ce5	      1001	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x1a60	      0xe800000000	                          call 0x4001aa5	      1001	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x1a65	           0xfb600	                   movzx eax, byte [rax]	      1001	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x1a68	            0x84c0	                             test al, al	      1001	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x1a6a	     0xf8535020000	                           jne 0x4001ce5	      1001	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x1a70	    0x488b05000000	            mov rax, qword [0x04001ab7] 	      1002	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x1a77	    0x8b98e0000000	            mov ebx, dword [rax + 0xe0] 	      1002	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x1a7d	    0x488b05000000	            mov rax, qword [0x04001ac4] 	      1002	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x1a84	          0x4889c7	                            mov rdi, rax	      1002	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x1a87	      0xe800000000	                          call 0x4001acc	      1002	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x1a8c	            0x39c3	                            cmp ebx, eax	      1002	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x1a8e	     0xf8511020000	                           jne 0x4001ce5	      1002	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x1a94	    0x488b05000000	            mov rax, qword [0x04001adb] 	      1003	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7
0x1a9b	    0xc780e0000000	               mov dword [rax + 0xe0], 0	      1003	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7
0x1aa5	      0xe9fb010000	                           jmp 0x4001ce5	       990	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x1aaa	        0x837dac00	               cmp dword [rbp - 0x54], 0	      1011	move.c	FUNCTION_32	ELSE_3	IF_8
0x1aae	     0xf8493010000	                            je 0x4001c87	      1011	move.c	FUNCTION_32	ELSE_3	IF_8
0x1ab4	    0x488b05000000	            mov rax, qword [0x04001afb] 	      1013	move.c	FUNCTION_32	ELSE_3	IF_8
0x1abb	    0x8b80d0000000	            mov eax, dword [rax + 0xd0] 	      1013	move.c	FUNCTION_32	ELSE_3	IF_8
0x1ac1	            0x85c0	                           test eax, eax	      1013	move.c	FUNCTION_32	ELSE_3	IF_8
0x1ac3	     0xf857e010000	                           jne 0x4001c87	      1013	move.c	FUNCTION_32	ELSE_3	IF_8
0x1ac9	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      1023	move.c	FUNCTION_32	ELSE_3	IF_8
0x1acc	    0x488b05000000	            mov rax, qword [0x04001b13] 	      1023	move.c	FUNCTION_32	ELSE_3	IF_8
0x1ad3	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      1023	move.c	FUNCTION_32	ELSE_3	IF_8
0x1ad9	            0x29c2	                            sub edx, eax	      1023	move.c	FUNCTION_32	ELSE_3	IF_8
0x1adb	            0x89d0	                            mov eax, edx	      1023	move.c	FUNCTION_32	ELSE_3	IF_8
0x1add	            0x89c2	                            mov edx, eax	      1023	move.c	FUNCTION_32	ELSE_3	IF_8
0x1adf	    0x488b05000000	            mov rax, qword [0x04001b26] 	      1023	move.c	FUNCTION_32	ELSE_3	IF_8
0x1ae6	            0x29c2	                            sub edx, eax	      1023	move.c	FUNCTION_32	ELSE_3	IF_8
0x1ae8	            0x89d0	                            mov eax, edx	      1023	move.c	FUNCTION_32	ELSE_3	IF_8
0x1aea	          0x8945dc	             mov dword [rbp - 0x24], eax	      1023	move.c	FUNCTION_32	ELSE_3	IF_8
0x1aed	    0x488b05000000	            mov rax, qword [0x04001b34] 	      1024	move.c	FUNCTION_32	ELSE_3	IF_8
0x1af4	            0x89c1	                            mov ecx, eax	      1024	move.c	FUNCTION_32	ELSE_3	IF_8
0x1af6	    0x488b05000000	            mov rax, qword [0x04001b3d] 	      1024	move.c	FUNCTION_32	ELSE_3	IF_8
0x1afd	    0x8b9094000000	            mov edx, dword [rax + 0x94] 	      1024	move.c	FUNCTION_32	ELSE_3	IF_8
0x1b03	    0x488b05000000	            mov rax, qword [0x04001b4a] 	      1024	move.c	FUNCTION_32	ELSE_3	IF_8
0x1b0a	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1024	move.c	FUNCTION_32	ELSE_3	IF_8
0x1b10	             0x1d0	                            add eax, edx	      1024	move.c	FUNCTION_32	ELSE_3	IF_8
0x1b12	            0x29c1	                            sub ecx, eax	      1024	move.c	FUNCTION_32	ELSE_3	IF_8
0x1b14	            0x89c8	                            mov eax, ecx	      1024	move.c	FUNCTION_32	ELSE_3	IF_8
0x1b16	            0x89c2	                            mov edx, eax	      1024	move.c	FUNCTION_32	ELSE_3	IF_8
0x1b18	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1024	move.c	FUNCTION_32	ELSE_3	IF_8
0x1b1b	             0x1d0	                            add eax, edx	      1024	move.c	FUNCTION_32	ELSE_3	IF_8
0x1b1d	          0x83c001	                              add eax, 1	      1024	move.c	FUNCTION_32	ELSE_3	IF_8
0x1b20	          0x8945e0	             mov dword [rbp - 0x20], eax	      1024	move.c	FUNCTION_32	ELSE_3	IF_8
0x1b23	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1026	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9
0x1b27	            0x780a	                            js 0x4001b73	      1026	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9
0x1b29	        0x837de000	               cmp dword [rbp - 0x20], 0	      1026	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9
0x1b2d	     0xf8ee7000000	                           jle 0x4001c5a	      1026	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9
0x1b33	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1028	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x1b37	            0x790a	                           jns 0x4001b83	      1028	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x1b39	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x1b3c	            0xf7d8	                                 neg eax	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x1b3e	          0x8945c0	             mov dword [rbp - 0x40], eax	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x1b41	            0xeb06	                           jmp 0x4001b89	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x1b43	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1031	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_4
0x1b46	          0x8945c0	             mov dword [rbp - 0x40], eax	      1031	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_4
0x1b49	    0x488b05000000	            mov rax, qword [0x04001b90] 	      1035	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b50	          0x4885c0	                           test rax, rax	      1035	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b53	            0x7419	                            je 0x4001bae	      1035	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b55	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1035	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b58	            0x89c2	                            mov edx, eax	      1035	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b5a	          0xc1ea1f	                           shr edx, 0x1f	      1035	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b5d	             0x1d0	                            add eax, edx	      1035	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b5f	            0xd1f8	                              sar eax, 1	      1035	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b61	          0x3b45c0	             cmp eax, dword [rbp - 0x40]	      1035	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b64	            0x7e08	                           jle 0x4001bae	      1035	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b66	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1035	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b69	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      1035	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b6c	            0x7c27	                            jl 0x4001bd5	      1035	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b6e	    0x488b05000000	            mov rax, qword [0x04001bb5] 	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b75	    0x8b80e0000000	            mov eax, dword [rax + 0xe0] 	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b7b	          0x2b45c4	             sub eax, dword [rbp - 0x3c]	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b7e	            0x89c2	                            mov edx, eax	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b80	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b83	            0x89c1	                            mov ecx, eax	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b85	          0xc1e91f	                           shr ecx, 0x1f	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b88	             0x1c8	                            add eax, ecx	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b8a	            0xd1f8	                              sar eax, 1	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b8c	            0x29c2	                            sub edx, eax	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b8e	            0x89d0	                            mov eax, edx	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b90	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b93	            0xeb4c	                           jmp 0x4001c21	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x1b95	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1039	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_12
0x1b98	          0x4863d0	                         movsxd rdx, eax	      1039	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_12
0x1b9b	    0x488b05000000	            mov rax, qword [0x04001be2] 	      1039	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_12
0x1ba2	          0x4839c2	                            cmp rdx, rax	      1039	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_12
0x1ba5	            0x7d0a	                           jge 0x4001bf1	      1039	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_12
0x1ba7	    0x488b05000000	            mov rax, qword [0x04001bee] 	      1040	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_12
0x1bae	          0x8945c0	             mov dword [rbp - 0x40], eax	      1040	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_12
0x1bb1	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1041	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x1bb5	            0x7915	                           jns 0x4001c0c	      1041	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x1bb7	    0x488b05000000	            mov rax, qword [0x04001bfe] 	      1042	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x1bbe	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      1042	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x1bc4	          0x2b45c0	             sub eax, dword [rbp - 0x40]	      1042	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x1bc7	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1042	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x1bca	            0xeb15	                           jmp 0x4001c21	      1042	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x1bcc	    0x488b05000000	            mov rax, qword [0x04001c13] 	      1044	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	ELSE_6
0x1bd3	    0x8b9094000000	            mov edx, dword [rax + 0x94] 	      1044	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	ELSE_6
0x1bd9	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      1044	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	ELSE_6
0x1bdc	             0x1d0	                            add eax, edx	      1044	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	ELSE_6
0x1bde	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1044	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	ELSE_6
0x1be1	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1046	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_14
0x1be5	            0x7907	                           jns 0x4001c2e	      1046	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_14
0x1be7	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1047	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_14
0x1bee	    0x488b05000000	            mov rax, qword [0x04001c35] 	      1048	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15
0x1bf5	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      1048	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15
0x1bfb	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1048	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15
0x1bfe	            0x741a	                            je 0x4001c5a	      1048	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15
0x1c00	    0x488b05000000	            mov rax, qword [0x04001c47] 	      1050	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15
0x1c07	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      1050	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15
0x1c0a	    0x899094000000	             mov dword [rax + 0x94], edx	      1050	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15
0x1c10	      0xbf28000000	                           mov edi, 0x28	      1052	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15	CALL_8
0x1c15	      0xe800000000	                          call 0x4001c5a	      1052	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15	CALL_8
0x1c1a	    0x488b05000000	            mov rax, qword [0x04001c61] 	      1055	move.c	FUNCTION_32	ELSE_3	IF_8
0x1c21	    0x488b15000000	            mov rdx, qword [0x04001c68] 	      1055	move.c	FUNCTION_32	ELSE_3	IF_8
0x1c28	    0x8b8ae0000000	            mov ecx, dword [rdx + 0xe0] 	      1055	move.c	FUNCTION_32	ELSE_3	IF_8
0x1c2e	    0x488b15000000	            mov rdx, qword [0x04001c75] 	      1055	move.c	FUNCTION_32	ELSE_3	IF_8
0x1c35	    0x8b9294000000	            mov edx, dword [rdx + 0x94] 	      1055	move.c	FUNCTION_32	ELSE_3	IF_8
0x1c3b	            0x29d1	                            sub ecx, edx	      1055	move.c	FUNCTION_32	ELSE_3	IF_8
0x1c3d	            0x89ca	                            mov edx, ecx	      1055	move.c	FUNCTION_32	ELSE_3	IF_8
0x1c3f	    0x8990e0000000	             mov dword [rax + 0xe0], edx	      1055	move.c	FUNCTION_32	ELSE_3	IF_8
0x1c45	            0xeb5f	                           jmp 0x4001ce6	      1055	move.c	FUNCTION_32	ELSE_3	IF_8
0x1c47	    0x488b05000000	            mov rax, qword [0x04001c8e] 	      1057	move.c	FUNCTION_32	ELSE_7	IF_16
0x1c4e	    0x8b90e0000000	            mov edx, dword [rax + 0xe0] 	      1057	move.c	FUNCTION_32	ELSE_7	IF_16
0x1c54	    0x488b05000000	            mov rax, qword [0x04001c9b] 	      1057	move.c	FUNCTION_32	ELSE_7	IF_16
0x1c5b	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      1057	move.c	FUNCTION_32	ELSE_7	IF_16
0x1c61	            0x39c2	                            cmp edx, eax	      1057	move.c	FUNCTION_32	ELSE_7	IF_16
0x1c63	            0x7e2d	                           jle 0x4001cd2	      1057	move.c	FUNCTION_32	ELSE_7	IF_16
0x1c65	    0x488b05000000	            mov rax, qword [0x04001cac] 	      1058	move.c	FUNCTION_32	ELSE_7	IF_16
0x1c6c	    0x488b15000000	            mov rdx, qword [0x04001cb3] 	      1058	move.c	FUNCTION_32	ELSE_7	IF_16
0x1c73	    0x8b8ae0000000	            mov ecx, dword [rdx + 0xe0] 	      1058	move.c	FUNCTION_32	ELSE_7	IF_16
0x1c79	    0x488b15000000	            mov rdx, qword [0x04001cc0] 	      1058	move.c	FUNCTION_32	ELSE_7	IF_16
0x1c80	    0x8b9294000000	            mov edx, dword [rdx + 0x94] 	      1058	move.c	FUNCTION_32	ELSE_7	IF_16
0x1c86	            0x29d1	                            sub ecx, edx	      1058	move.c	FUNCTION_32	ELSE_7	IF_16
0x1c88	            0x89ca	                            mov edx, ecx	      1058	move.c	FUNCTION_32	ELSE_7	IF_16
0x1c8a	    0x8990e0000000	             mov dword [rax + 0xe0], edx	      1058	move.c	FUNCTION_32	ELSE_7	IF_16
0x1c90	            0xeb14	                           jmp 0x4001ce6	      1058	move.c	FUNCTION_32	ELSE_7	IF_16
0x1c92	    0x488b05000000	            mov rax, qword [0x04001cd9] 	      1060	move.c	FUNCTION_32	ELSE_8
0x1c99	    0xc780e0000000	               mov dword [rax + 0xe0], 0	      1060	move.c	FUNCTION_32	ELSE_8
0x1ca3	            0xeb01	                           jmp 0x4001ce6	      1060	move.c	FUNCTION_32	ELSE_8
0x1ca5	              0x90	                                     nop	       990	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x1ca6	    0x488b05000000	            mov rax, qword [0x04001ced] 	      1065	move.c	FUNCTION_32	IF_17
0x1cad	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1065	move.c	FUNCTION_32	IF_17
0x1cb1	    0x488b05000000	            mov rax, qword [0x04001cf8] 	      1065	move.c	FUNCTION_32	IF_17
0x1cb8	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1065	move.c	FUNCTION_32	IF_17
0x1cbc	          0x4839c2	                            cmp rdx, rax	      1065	move.c	FUNCTION_32	IF_17
0x1cbf	            0x752b	                           jne 0x4001d2c	      1065	move.c	FUNCTION_32	IF_17
0x1cc1	    0x488b05000000	            mov rax, qword [0x04001d08] 	      1066	move.c	FUNCTION_32	IF_17
0x1cc8	    0x488b15000000	            mov rdx, qword [0x04001d0f] 	      1066	move.c	FUNCTION_32	IF_17
0x1ccf	    0x8b8adc000000	            mov ecx, dword [rdx + 0xdc] 	      1066	move.c	FUNCTION_32	IF_17
0x1cd5	    0x488b15000000	            mov rdx, qword [0x04001d1c] 	      1066	move.c	FUNCTION_32	IF_17
0x1cdc	    0x8b9284000000	            mov edx, dword [rdx + 0x84] 	      1066	move.c	FUNCTION_32	IF_17
0x1ce2	             0x1ca	                            add edx, ecx	      1066	move.c	FUNCTION_32	IF_17
0x1ce4	    0x8990dc000000	             mov dword [rax + 0xdc], edx	      1066	move.c	FUNCTION_32	IF_17
0x1cea	            0xeb3b	                           jmp 0x4001d67	      1066	move.c	FUNCTION_32	IF_17
0x1cec	    0x488b05000000	            mov rax, qword [0x04001d33] 	      1068	move.c	FUNCTION_32	CALL_9
0x1cf3	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1068	move.c	FUNCTION_32	CALL_9
0x1cf7	    0x488b05000000	            mov rax, qword [0x04001d3e] 	      1068	move.c	FUNCTION_32	CALL_9
0x1cfe	          0x4889d6	                            mov rsi, rdx	      1068	move.c	FUNCTION_32	CALL_9
0x1d01	          0x4889c7	                            mov rdi, rax	      1068	move.c	FUNCTION_32	CALL_9
0x1d04	      0xe800000000	                          call 0x4001d49	      1068	move.c	FUNCTION_32	CALL_9
0x1d09	            0x89c1	                            mov ecx, eax	      1068	move.c	FUNCTION_32	CALL_9
0x1d0b	    0x488b05000000	            mov rax, qword [0x04001d52] 	      1068	move.c	FUNCTION_32	CALL_9
0x1d12	    0x488b15000000	            mov rdx, qword [0x04001d59] 	      1068	move.c	FUNCTION_32	CALL_9
0x1d19	    0x8b92dc000000	            mov edx, dword [rdx + 0xdc] 	      1068	move.c	FUNCTION_32	CALL_9
0x1d1f	             0x1ca	                            add edx, ecx	      1068	move.c	FUNCTION_32	CALL_9
0x1d21	    0x8990dc000000	             mov dword [rax + 0xdc], edx	      1068	move.c	FUNCTION_32	CALL_9
0x1d27	    0x488b05000000	            mov rax, qword [0x04001d6e] 	      1071	move.c	FUNCTION_32
0x1d2e	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      1071	move.c	FUNCTION_32
0x1d34	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1071	move.c	FUNCTION_32
0x1d37	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1073	move.c	FUNCTION_32
0x1d3e	    0x488b05000000	            mov rax, qword [0x04001d85] 	      1074	move.c	FUNCTION_32	IF_18
0x1d45	    0x8b90dc000000	            mov edx, dword [rax + 0xdc] 	      1074	move.c	FUNCTION_32	IF_18
0x1d4b	    0x488b05000000	            mov rax, qword [0x04001d92] 	      1074	move.c	FUNCTION_32	IF_18
0x1d52	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1074	move.c	FUNCTION_32	IF_18
0x1d58	            0x39c2	                            cmp edx, eax	      1074	move.c	FUNCTION_32	IF_18
0x1d5a	            0x7d78	                           jge 0x4001e14	      1074	move.c	FUNCTION_32	IF_18
0x1d5c	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1075	move.c	FUNCTION_32	IF_18
0x1d60	            0x7f32	                            jg 0x4001dd4	      1075	move.c	FUNCTION_32	IF_18
0x1d62	    0x488b05000000	            mov rax, qword [0x04001da9] 	      1076	move.c	FUNCTION_32	IF_18
0x1d69	    0x8b80dc000000	            mov eax, dword [rax + 0xdc] 	      1076	move.c	FUNCTION_32	IF_18
0x1d6f	          0x4863d0	                         movsxd rdx, eax	      1076	move.c	FUNCTION_32	IF_18
0x1d72	    0x488b05000000	            mov rax, qword [0x04001db9] 	      1076	move.c	FUNCTION_32	IF_18
0x1d79	          0x4801c2	                            add rdx, rax	      1076	move.c	FUNCTION_32	IF_18
0x1d7c	    0x488b05000000	            mov rax, qword [0x04001dc3] 	      1076	move.c	FUNCTION_32	IF_18
0x1d83	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1076	move.c	FUNCTION_32	IF_18
0x1d89	            0x4898	                                    cdqe	      1076	move.c	FUNCTION_32	IF_18
0x1d8b	          0x4839c2	                            cmp rdx, rax	      1076	move.c	FUNCTION_32	IF_18
0x1d8e	     0xf8c81040000	                            jl 0x4002255	      1076	move.c	FUNCTION_32	IF_18
0x1d94	    0x488b05000000	            mov rax, qword [0x04001ddb] 	      1083	move.c	FUNCTION_32	IF_18
0x1d9b	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      1079	move.c	FUNCTION_32	IF_18
0x1d9f	    0x488b05000000	            mov rax, qword [0x04001de6] 	      1079	move.c	FUNCTION_32	IF_18
0x1da6	      0xba00000000	                              mov edx, 0	      1077	move.c	FUNCTION_32	IF_18
0x1dab	          0x4889ce	                            mov rsi, rcx	      1077	move.c	FUNCTION_32	IF_18
0x1dae	          0x4889c7	                            mov rdi, rax	      1077	move.c	FUNCTION_32	IF_18
0x1db1	      0xe800000000	                          call 0x4001df6	      1077	move.c	FUNCTION_32	IF_18
0x1db6	          0x8945cc	             mov dword [rbp - 0x34], eax	      1077	move.c	FUNCTION_32	IF_18
0x1db9	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1084	move.c	FUNCTION_32	IF_18
0x1dbc	          0x8d50ff	                      lea edx, [rax - 1]	      1084	move.c	FUNCTION_32	IF_18
0x1dbf	    0x488b05000000	            mov rax, qword [0x04001e06] 	      1084	move.c	FUNCTION_32	IF_18
0x1dc6	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1084	move.c	FUNCTION_32	IF_18
0x1dcc	            0x39c2	                            cmp edx, eax	      1077	move.c	FUNCTION_32	IF_18
0x1dce	     0xf8c41040000	                            jl 0x4002255	      1077	move.c	FUNCTION_32	IF_18
0x1dd4	    0x488b05000000	            mov rax, qword [0x04001e1b] 	      1085	move.c	FUNCTION_32	IF_18
0x1ddb	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1085	move.c	FUNCTION_32	IF_18
0x1de1	            0x85c0	                           test eax, eax	      1085	move.c	FUNCTION_32	IF_18
0x1de3	     0xf842c040000	                            je 0x4002255	      1085	move.c	FUNCTION_32	IF_18
0x1de9	    0x488b05000000	            mov rax, qword [0x04001e30] 	      1086	move.c	FUNCTION_32	IF_18
0x1df0	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1086	move.c	FUNCTION_32	IF_18
0x1df4	    0x488b05000000	            mov rax, qword [0x04001e3b] 	      1086	move.c	FUNCTION_32	IF_18
0x1dfb	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1086	move.c	FUNCTION_32	IF_18
0x1dff	          0x4839c2	                            cmp rdx, rax	      1086	move.c	FUNCTION_32	IF_18
0x1e02	     0xf850d040000	                           jne 0x4002255	      1086	move.c	FUNCTION_32	IF_18
0x1e08	        0x837dd000	               cmp dword [rbp - 0x30], 0	      1087	move.c	FUNCTION_32	IF_18
0x1e0c	     0xf8e03040000	                           jle 0x4002255	      1087	move.c	FUNCTION_32	IF_18
0x1e12	    0x488b05000000	            mov rax, qword [0x04001e59] 	      1088	move.c	FUNCTION_32	IF_18
0x1e19	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1088	move.c	FUNCTION_32	IF_18
0x1e1f	            0x85c0	                           test eax, eax	      1088	move.c	FUNCTION_32	IF_18
0x1e21	     0xf84ee030000	                            je 0x4002255	      1088	move.c	FUNCTION_32	IF_18
0x1e27	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      1096	move.c	FUNCTION_32	IF_18
0x1e2e	    0x488b05000000	            mov rax, qword [0x04001e75] 	      1097	move.c	FUNCTION_32	IF_18	IF_19
0x1e35	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      1097	move.c	FUNCTION_32	IF_18	IF_19
0x1e3b	          0x4863d0	                         movsxd rdx, eax	      1097	move.c	FUNCTION_32	IF_18	IF_19
0x1e3e	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1097	move.c	FUNCTION_32	IF_18	IF_19
0x1e41	          0x4863c8	                         movsxd rcx, eax	      1097	move.c	FUNCTION_32	IF_18	IF_19
0x1e44	    0x488b05000000	            mov rax, qword [0x04001e8b] 	      1097	move.c	FUNCTION_32	IF_18	IF_19
0x1e4b	        0x480fafc1	                           imul rax, rcx	      1097	move.c	FUNCTION_32	IF_18	IF_19
0x1e4f	          0x4801c2	                            add rdx, rax	      1097	move.c	FUNCTION_32	IF_18	IF_19
0x1e52	    0x488b05000000	            mov rax, qword [0x04001e99] 	      1097	move.c	FUNCTION_32	IF_18	IF_19
0x1e59	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      1097	move.c	FUNCTION_32	IF_18	IF_19
0x1e5f	            0x4898	                                    cdqe	      1097	move.c	FUNCTION_32	IF_18	IF_19
0x1e61	          0x4839c2	                            cmp rdx, rax	      1097	move.c	FUNCTION_32	IF_18	IF_19
0x1e64	            0x7e07	                           jle 0x4001ead	      1097	move.c	FUNCTION_32	IF_18	IF_19
0x1e66	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	      1098	move.c	FUNCTION_32	IF_18	IF_19
0x1e6d	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1101	move.c	FUNCTION_32	IF_18	IF_20
0x1e71	            0x7525	                           jne 0x4001ed8	      1101	move.c	FUNCTION_32	IF_18	IF_20
0x1e73	    0x488b05000000	            mov rax, qword [0x04001eba] 	      1102	move.c	FUNCTION_32	IF_18	CALL_11
0x1e7a	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      1102	move.c	FUNCTION_32	IF_18	CALL_11
0x1e7e	    0x488b05000000	            mov rax, qword [0x04001ec5] 	      1102	move.c	FUNCTION_32	IF_18	CALL_11
0x1e85	      0xba00000000	                              mov edx, 0	      1102	move.c	FUNCTION_32	IF_18	CALL_11
0x1e8a	          0x4889ce	                            mov rsi, rcx	      1102	move.c	FUNCTION_32	IF_18	CALL_11
0x1e8d	          0x4889c7	                            mov rdi, rax	      1102	move.c	FUNCTION_32	IF_18	CALL_11
0x1e90	      0xe800000000	                          call 0x4001ed5	      1102	move.c	FUNCTION_32	IF_18	CALL_11
0x1e95	          0x8945cc	             mov dword [rbp - 0x34], eax	      1102	move.c	FUNCTION_32	IF_18	CALL_11
0x1e98	        0x836dcc01	               sub dword [rbp - 0x34], 1	      1103	move.c	FUNCTION_32	IF_18
0x1e9c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1104	move.c	FUNCTION_32	IF_18	IF_21
0x1e9f	          0x4863d0	                         movsxd rdx, eax	      1104	move.c	FUNCTION_32	IF_18	IF_21
0x1ea2	    0x488b05000000	            mov rax, qword [0x04001ee9] 	      1104	move.c	FUNCTION_32	IF_18	IF_21
0x1ea9	    0x8b80dc000000	            mov eax, dword [rax + 0xdc] 	      1104	move.c	FUNCTION_32	IF_18	IF_21
0x1eaf	          0x4863c8	                         movsxd rcx, eax	      1104	move.c	FUNCTION_32	IF_18	IF_21
0x1eb2	    0x488b05000000	            mov rax, qword [0x04001ef9] 	      1104	move.c	FUNCTION_32	IF_18	IF_21
0x1eb9	          0x4801c8	                            add rax, rcx	      1104	move.c	FUNCTION_32	IF_18	IF_21
0x1ebc	          0x4839c2	                            cmp rdx, rax	      1104	move.c	FUNCTION_32	IF_18	IF_21
0x1ebf	            0x7e1d	                           jle 0x4001f1e	      1104	move.c	FUNCTION_32	IF_18	IF_21
0x1ec1	    0x488b05000000	            mov rax, qword [0x04001f08] 	      1105	move.c	FUNCTION_32	IF_18	IF_21
0x1ec8	    0x8b80dc000000	            mov eax, dword [rax + 0xdc] 	      1105	move.c	FUNCTION_32	IF_18	IF_21
0x1ece	            0x89c2	                            mov edx, eax	      1105	move.c	FUNCTION_32	IF_18	IF_21
0x1ed0	    0x488b05000000	            mov rax, qword [0x04001f17] 	      1105	move.c	FUNCTION_32	IF_18	IF_21
0x1ed7	             0x1d0	                            add eax, edx	      1105	move.c	FUNCTION_32	IF_18	IF_21
0x1ed9	          0x8945c8	             mov dword [rbp - 0x38], eax	      1105	move.c	FUNCTION_32	IF_18	IF_21
0x1edc	            0xeb06	                           jmp 0x4001f24	      1105	move.c	FUNCTION_32	IF_18	IF_21
0x1ede	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1107	move.c	FUNCTION_32	IF_18	ELSE_10
0x1ee1	          0x8945c8	             mov dword [rbp - 0x38], eax	      1107	move.c	FUNCTION_32	IF_18	ELSE_10
0x1ee4	    0x488b05000000	            mov rax, qword [0x04001f2b] 	      1108	move.c	FUNCTION_32	IF_18	IF_22
0x1eeb	    0x8b88a0000000	            mov ecx, dword [rax + 0xa0] 	      1108	move.c	FUNCTION_32	IF_18	IF_22
0x1ef1	    0x488b05000000	            mov rax, qword [0x04001f38] 	      1108	move.c	FUNCTION_32	IF_18	IF_22
0x1ef8	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      1108	move.c	FUNCTION_32	IF_18	IF_22
0x1efe	              0x99	                                     cdq	      1108	move.c	FUNCTION_32	IF_18	IF_22
0x1eff	          0xf77dd0	                 idiv dword [rbp - 0x30]	      1108	move.c	FUNCTION_32	IF_18	IF_22
0x1f02	             0x1c8	                            add eax, ecx	      1108	move.c	FUNCTION_32	IF_18	IF_22
0x1f04	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      1108	move.c	FUNCTION_32	IF_18	IF_22
0x1f07	            0x7f04	                            jg 0x4001f4d	      1108	move.c	FUNCTION_32	IF_18	IF_22
0x1f09	        0x8345c402	               add dword [rbp - 0x3c], 2	      1109	move.c	FUNCTION_32	IF_18	IF_22
0x1f0d	        0x837dc403	               cmp dword [rbp - 0x3c], 3	      1111	move.c	FUNCTION_32	IF_18	IF_23
0x1f11	            0x7418	                            je 0x4001f6b	      1111	move.c	FUNCTION_32	IF_18	IF_23
0x1f13	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1111	move.c	FUNCTION_32	IF_18	IF_23
0x1f16	            0x4898	                                    cdqe	      1111	move.c	FUNCTION_32	IF_18	IF_23
0x1f18	    0x488b15000000	            mov rdx, qword [0x04001f5f] 	      1111	move.c	FUNCTION_32	IF_18	IF_23
0x1f1f	          0x4801d2	                            add rdx, rdx	      1111	move.c	FUNCTION_32	IF_18	IF_23
0x1f22	          0x4839d0	                            cmp rax, rdx	      1111	move.c	FUNCTION_32	IF_18	IF_23
0x1f25	     0xf8da0000000	                           jge 0x400200b	      1111	move.c	FUNCTION_32	IF_18	IF_23
0x1f2b	    0x488b05000000	            mov rax, qword [0x04001f72] 	      1114	move.c	FUNCTION_32	IF_18	IF_23
0x1f32	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      1114	move.c	FUNCTION_32	IF_18	IF_23
0x1f38	              0x99	                                     cdq	      1114	move.c	FUNCTION_32	IF_18	IF_23
0x1f39	          0xf77dd0	                 idiv dword [rbp - 0x30]	      1114	move.c	FUNCTION_32	IF_18	IF_23
0x1f3c	          0x8945c8	             mov dword [rbp - 0x38], eax	      1114	move.c	FUNCTION_32	IF_18	IF_23
0x1f3f	    0x488b05000000	            mov rax, qword [0x04001f86] 	      1115	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x1f46	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1115	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x1f4c	            0x89c2	                            mov edx, eax	      1115	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x1f4e	          0xc1ea1f	                           shr edx, 0x1f	      1115	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x1f51	             0x1d0	                            add eax, edx	      1115	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x1f53	            0xd1f8	                              sar eax, 1	      1115	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x1f55	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      1115	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x1f58	            0x7d1b	                           jge 0x4001fb5	      1115	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x1f5a	    0x488b05000000	            mov rax, qword [0x04001fa1] 	      1116	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x1f61	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1116	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x1f67	            0x89c2	                            mov edx, eax	      1116	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x1f69	          0xc1ea1f	                           shr edx, 0x1f	      1116	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x1f6c	             0x1d0	                            add eax, edx	      1116	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x1f6e	            0xd1f8	                              sar eax, 1	      1116	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x1f70	          0x2945c8	             sub dword [rbp - 0x38], eax	      1116	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x1f73	            0xeb07	                           jmp 0x4001fbc	      1116	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x1f75	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      1118	move.c	FUNCTION_32	IF_18	IF_23	ELSE_11
0x1f7c	    0x488b05000000	            mov rax, qword [0x04001fc3] 	      1120	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x1f83	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1120	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x1f89	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      1120	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x1f8c	            0x29c2	                            sub edx, eax	      1120	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x1f8e	            0x89d0	                            mov eax, edx	      1120	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x1f90	          0x83c001	                              add eax, 1	      1120	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x1f93	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      1120	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x1f96	            0x7d1a	                           jge 0x4001ff2	      1120	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x1f98	    0x488b05000000	            mov rax, qword [0x04001fdf] 	      1121	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x1f9f	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1121	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x1fa5	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      1121	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x1fa8	            0x29c2	                            sub edx, eax	      1121	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x1faa	            0x89d0	                            mov eax, edx	      1121	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x1fac	          0x83c001	                              add eax, 1	      1121	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x1faf	          0x8945c8	             mov dword [rbp - 0x38], eax	      1121	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x1fb2	    0x488b05000000	            mov rax, qword [0x04001ff9] 	      1122	move.c	FUNCTION_32	IF_18	IF_23
0x1fb9	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      1122	move.c	FUNCTION_32	IF_18	IF_23
0x1fbc	         0xfaf55d0	            imul edx, dword [rbp - 0x30]	      1122	move.c	FUNCTION_32	IF_18	IF_23
0x1fc0	    0x899098000000	             mov dword [rax + 0x98], edx	      1122	move.c	FUNCTION_32	IF_18	IF_23
0x1fc6	      0xe920010000	                           jmp 0x400212b	      1122	move.c	FUNCTION_32	IF_18	IF_23
0x1fcb	        0x837dc401	               cmp dword [rbp - 0x3c], 1	      1124	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x1fcf	     0xf85af000000	                           jne 0x40020c4	      1124	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x1fd5	    0x488b05000000	            mov rax, qword [0x0400201c] 	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x1fdc	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x1fe2	          0x4863d0	                         movsxd rdx, eax	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x1fe5	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x1fe8	          0x4863c8	                         movsxd rcx, eax	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x1feb	    0x488b05000000	            mov rax, qword [0x04002032] 	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x1ff2	        0x480fafc1	                           imul rax, rcx	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x1ff6	          0x4801c2	                            add rdx, rax	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x1ff9	    0x488b05000000	            mov rax, qword [0x04002040] 	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x2000	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x2006	            0x4898	                                    cdqe	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x2008	          0x4829c2	                            sub rdx, rax	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x200b	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1128	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x200e	            0x4898	                                    cdqe	      1128	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x2010	          0x4801d0	                            add rax, rdx	      1128	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x2013	        0x4883e801	                              sub rax, 1	      1128	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x2017	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1128	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x201a	          0x4863da	                         movsxd rbx, edx	      1128	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x201d	            0x4899	                                     cqo	      1128	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x201f	          0x48f7fb	                                idiv rbx	      1128	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x2022	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x2025	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1129	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x2029	     0xf8ebc000000	                           jle 0x400212b	      1129	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x202f	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1131	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x2032	         0xfaf45d0	            imul eax, dword [rbp - 0x30]	      1131	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x2036	            0x89c2	                            mov edx, eax	      1131	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x2038	    0x488b05000000	            mov rax, qword [0x0400207f] 	      1131	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x203f	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      1131	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x2045	            0x39c2	                            cmp edx, eax	      1131	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x2047	            0x7e14	                           jle 0x400209d	      1131	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x2049	    0x488b05000000	            mov rax, qword [0x04002090] 	      1132	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x2050	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      1132	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x2056	              0x99	                                     cdq	      1132	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x2057	          0xf77dd0	                 idiv dword [rbp - 0x30]	      1132	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x205a	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1132	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x205d	    0x488b05000000	            mov rax, qword [0x040020a4] 	      1133	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x2064	    0x488b15000000	            mov rdx, qword [0x040020ab] 	      1133	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x206b	    0x8b8a98000000	            mov ecx, dword [rdx + 0x98] 	      1133	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x2071	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      1133	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x2074	         0xfaf55d0	            imul edx, dword [rbp - 0x30]	      1133	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x2078	            0x29d1	                            sub ecx, edx	      1133	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x207a	            0x89ca	                            mov edx, ecx	      1133	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x207c	    0x899098000000	             mov dword [rax + 0x98], edx	      1133	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x2082	            0xeb67	                           jmp 0x400212b	      1133	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x2084	        0x837dc402	               cmp dword [rbp - 0x3c], 2	      1136	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x2088	            0x7561	                           jne 0x400212b	      1136	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x208a	    0x488b05000000	            mov rax, qword [0x040020d1] 	      1139	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x2091	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1139	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x2097	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      1139	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x209a	            0x29c2	                            sub edx, eax	      1139	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x209c	            0x89d0	                            mov eax, edx	      1139	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x209e	          0x83c001	                              add eax, 1	      1139	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x20a1	         0xfaf45d0	            imul eax, dword [rbp - 0x30]	      1139	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x20a5	          0x8945bc	             mov dword [rbp - 0x44], eax	      1139	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x20a8	            0xeb09	                           jmp 0x40020f3	      1140	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x20aa	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1141	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x20ad	          0x2b45d0	             sub eax, dword [rbp - 0x30]	      1141	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x20b0	          0x8945bc	             mov dword [rbp - 0x44], eax	      1141	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x20b3	    0x488b05000000	            mov rax, qword [0x040020fa] 	      1140	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x20ba	    0x8b90d8000000	            mov edx, dword [rax + 0xd8] 	      1140	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x20c0	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1140	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x20c3	            0x39c2	                            cmp edx, eax	      1140	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x20c5	            0x7ce3	                            jl 0x40020ea	      1140	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x20c7	    0x488b05000000	            mov rax, qword [0x0400210e] 	      1142	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x20ce	    0x8b9098000000	            mov edx, dword [rax + 0x98] 	      1142	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x20d4	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1142	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x20d7	            0x39c2	                            cmp edx, eax	      1142	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x20d9	            0x7d10	                           jge 0x400212b	      1142	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x20db	    0x488b05000000	            mov rax, qword [0x04002122] 	      1143	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x20e2	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      1143	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x20e5	    0x899098000000	             mov dword [rax + 0x98], edx	      1143	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x20eb	    0x488b0d000000	            mov rcx, qword [0x04002132] 	      1146	move.c	FUNCTION_32	IF_18
0x20f2	    0x488b05000000	            mov rax, qword [0x04002139] 	      1146	move.c	FUNCTION_32	IF_18
0x20f9	    0x8bb0dc000000	            mov esi, dword [rax + 0xdc] 	      1146	move.c	FUNCTION_32	IF_18
0x20ff	    0x488b05000000	            mov rax, qword [0x04002146] 	      1146	move.c	FUNCTION_32	IF_18
0x2106	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      1146	move.c	FUNCTION_32	IF_18
0x210c	              0x99	                                     cdq	      1146	move.c	FUNCTION_32	IF_18
0x210d	          0xf77dd0	                 idiv dword [rbp - 0x30]	      1146	move.c	FUNCTION_32	IF_18
0x2110	            0x29c6	                            sub esi, eax	      1146	move.c	FUNCTION_32	IF_18
0x2112	            0x89f0	                            mov eax, esi	      1146	move.c	FUNCTION_32	IF_18
0x2114	    0x8981dc000000	             mov dword [rcx + 0xdc], eax	      1146	move.c	FUNCTION_32	IF_18
0x211a	    0x488b05000000	            mov rax, qword [0x04002161] 	      1147	move.c	FUNCTION_32	IF_18	IF_31
0x2121	    0x8b90dc000000	            mov edx, dword [rax + 0xdc] 	      1147	move.c	FUNCTION_32	IF_18	IF_31
0x2127	    0x488b05000000	            mov rax, qword [0x0400216e] 	      1147	move.c	FUNCTION_32	IF_18	IF_31
0x212e	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1147	move.c	FUNCTION_32	IF_18	IF_31
0x2134	            0x39c2	                            cmp edx, eax	      1147	move.c	FUNCTION_32	IF_18	IF_31
0x2136	            0x7c64	                            jl 0x40021dc	      1147	move.c	FUNCTION_32	IF_18	IF_31
0x2138	    0x488b05000000	            mov rax, qword [0x0400217f] 	      1150	move.c	FUNCTION_32	IF_18	IF_31
0x213f	    0x8b90dc000000	            mov edx, dword [rax + 0xdc] 	      1150	move.c	FUNCTION_32	IF_18	IF_31
0x2145	    0x488b05000000	            mov rax, qword [0x0400218c] 	      1150	move.c	FUNCTION_32	IF_18	IF_31
0x214c	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1150	move.c	FUNCTION_32	IF_18	IF_31
0x2152	            0x29c2	                            sub edx, eax	      1150	move.c	FUNCTION_32	IF_18	IF_31
0x2154	            0x89d0	                            mov eax, edx	      1150	move.c	FUNCTION_32	IF_18	IF_31
0x2156	          0x83c001	                              add eax, 1	      1150	move.c	FUNCTION_32	IF_18	IF_31
0x2159	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1150	move.c	FUNCTION_32	IF_18	IF_31
0x215c	    0x488b05000000	            mov rax, qword [0x040021a3] 	      1151	move.c	FUNCTION_32	IF_18	IF_31
0x2163	    0x488b15000000	            mov rdx, qword [0x040021aa] 	      1151	move.c	FUNCTION_32	IF_18	IF_31
0x216a	    0x8b8a98000000	            mov ecx, dword [rdx + 0x98] 	      1151	move.c	FUNCTION_32	IF_18	IF_31
0x2170	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      1151	move.c	FUNCTION_32	IF_18	IF_31
0x2173	         0xfaf55d0	            imul edx, dword [rbp - 0x30]	      1151	move.c	FUNCTION_32	IF_18	IF_31
0x2177	             0x1ca	                            add edx, ecx	      1151	move.c	FUNCTION_32	IF_18	IF_31
0x2179	    0x899098000000	             mov dword [rax + 0x98], edx	      1151	move.c	FUNCTION_32	IF_18	IF_31
0x217f	    0x488b05000000	            mov rax, qword [0x040021c6] 	      1152	move.c	FUNCTION_32	IF_18	IF_31
0x2186	    0x488b15000000	            mov rdx, qword [0x040021cd] 	      1152	move.c	FUNCTION_32	IF_18	IF_31
0x218d	    0x8b92dc000000	            mov edx, dword [rdx + 0xdc] 	      1152	move.c	FUNCTION_32	IF_18	IF_31
0x2193	          0x2b55c4	             sub edx, dword [rbp - 0x3c]	      1152	move.c	FUNCTION_32	IF_18	IF_31
0x2196	    0x8990dc000000	             mov dword [rax + 0xdc], edx	      1152	move.c	FUNCTION_32	IF_18	IF_31
0x219c	    0x488b05000000	            mov rax, qword [0x040021e3] 	      1155	move.c	FUNCTION_32	IF_18
0x21a3	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      1155	move.c	FUNCTION_32	IF_18
0x21a9	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1155	move.c	FUNCTION_32	IF_18
0x21ac	            0x29c2	                            sub edx, eax	      1155	move.c	FUNCTION_32	IF_18
0x21ae	            0x89d0	                            mov eax, edx	      1155	move.c	FUNCTION_32	IF_18
0x21b0	              0x99	                                     cdq	      1155	move.c	FUNCTION_32	IF_18
0x21b1	          0xf77dd0	                 idiv dword [rbp - 0x30]	      1155	move.c	FUNCTION_32	IF_18
0x21b4	          0x8945c4	             mov dword [rbp - 0x3c], eax	      1155	move.c	FUNCTION_32	IF_18
0x21b7	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1156	move.c	FUNCTION_32	IF_18	IF_32
0x21bb	            0x7e24	                           jle 0x4002221	      1156	move.c	FUNCTION_32	IF_18	IF_32
0x21bd	    0x488b05000000	            mov rax, qword [0x04002204] 	      1157	move.c	FUNCTION_32	IF_18	CALL_12
0x21c4	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      1157	move.c	FUNCTION_32	IF_18	CALL_12
0x21c7	    0x41b800000000	                              mov r8d, 0	      1157	move.c	FUNCTION_32	IF_18	CALL_12
0x21cd	      0xb900000000	                              mov ecx, 0	      1157	move.c	FUNCTION_32	IF_18	CALL_12
0x21d2	      0xbe00000000	                              mov esi, 0	      1157	move.c	FUNCTION_32	IF_18	CALL_12
0x21d7	          0x4889c7	                            mov rdi, rax	      1157	move.c	FUNCTION_32	IF_18	CALL_12
0x21da	      0xe800000000	                          call 0x400221f	      1157	move.c	FUNCTION_32	IF_18	CALL_12
0x21df	            0xeb47	                           jmp 0x4002268	      1156	move.c	FUNCTION_32	IF_18	IF_32
0x21e1	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1158	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x21e5	            0x7941	                           jns 0x4002268	      1158	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x21e7	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      1159	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x21ea	            0xf7d8	                                 neg eax	      1159	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x21ec	            0x89c2	                            mov edx, eax	      1159	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x21ee	    0x488b05000000	            mov rax, qword [0x04002235] 	      1159	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x21f5	    0x41b900000000	                              mov r9d, 0	      1159	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x21fb	    0x41b800000000	                              mov r8d, 0	      1159	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x2201	      0xb900000000	                              mov ecx, 0	      1159	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x2206	      0xbe00000000	                              mov esi, 0	      1159	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x220b	          0x4889c7	                            mov rdi, rax	      1159	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x220e	      0xe800000000	                          call 0x4002253	      1159	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x2213	            0xeb13	                           jmp 0x4002268	      1156	move.c	FUNCTION_32	IF_18	IF_32
0x2215	    0x488b05000000	            mov rax, qword [0x0400225c] 	      1162	move.c	FUNCTION_32	ELSE_15
0x221c	    0xc78098000000	               mov dword [rax + 0x98], 0	      1162	move.c	FUNCTION_32	ELSE_15
0x2226	            0xeb01	                           jmp 0x4002269	      1162	move.c	FUNCTION_32	ELSE_15
0x2228	              0x90	                                     nop	      1156	move.c	FUNCTION_32	IF_18	IF_32
0x2229	    0x488b05000000	            mov rax, qword [0x04002270] 	      1163	move.c	FUNCTION_32	IF_34
0x2230	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      1163	move.c	FUNCTION_32	IF_34
0x2236	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1163	move.c	FUNCTION_32	IF_34
0x2239	            0x740a	                            je 0x4002285	      1163	move.c	FUNCTION_32	IF_34
0x223b	      0xbf28000000	                           mov edi, 0x28	      1164	move.c	FUNCTION_32	CALL_14
0x2240	      0xe800000000	                          call 0x4002285	      1164	move.c	FUNCTION_32	CALL_14
0x2245	    0x488b05000000	            mov rax, qword [0x0400228c] 	      1168	move.c	FUNCTION_32	IF_35
0x224c	    0x8b806c020000	           mov eax, dword [rax + 0x26c] 	      1168	move.c	FUNCTION_32	IF_35
0x2252	            0x85c0	                           test eax, eax	      1168	move.c	FUNCTION_32	IF_35
0x2254	            0x7427	                            je 0x40022bd	      1168	move.c	FUNCTION_32	IF_35
0x2256	    0x488b05000000	            mov rax, qword [0x0400229d] 	      1168	move.c	FUNCTION_32	IF_35
0x225d	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      1168	move.c	FUNCTION_32	IF_35
0x2263	          0x83e004	                              and eax, 4	      1168	move.c	FUNCTION_32	IF_35
0x2266	            0x85c0	                           test eax, eax	      1168	move.c	FUNCTION_32	IF_35
0x2268	            0x7513	                           jne 0x40022bd	      1168	move.c	FUNCTION_32	IF_35
0x226a	      0xe800000000	                          call 0x40022af	      1170	move.c	FUNCTION_32	IF_35	CALL_15
0x226f	            0x85c0	                           test eax, eax	      1170	move.c	FUNCTION_32	IF_35	CALL_15
0x2271	            0x750a	                           jne 0x40022bd	      1170	move.c	FUNCTION_32	IF_35	CALL_15
0x2273	      0xbf23000000	                           mov edi, 0x23	      1173	move.c	FUNCTION_32	CALL_16
0x2278	      0xe800000000	                          call 0x40022bd	      1173	move.c	FUNCTION_32	CALL_16
0x227d	    0x488b05000000	            mov rax, qword [0x040022c4] 	      1176	move.c	FUNCTION_32
0x2284	    0x488b15000000	            mov rdx, qword [0x040022cb] 	      1176	move.c	FUNCTION_32
0x228b	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      1176	move.c	FUNCTION_32
0x2291	          0x83ca07	                               or edx, 7	      1176	move.c	FUNCTION_32
0x2294	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1176	move.c	FUNCTION_32
0x229a	              0x90	                                     nop	      1177	move.c	FUNCTION_32
0x229b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1177	move.c	FUNCTION_32
0x229f	    0x644833042528	                xor rax, qword fs:[0x28]	      1177	move.c	FUNCTION_32
0x22a8	            0x7405	                            je 0x40022ef	      1177	move.c	FUNCTION_32
0x22aa	      0xe800000000	                          call 0x40022ef	      1177	move.c	FUNCTION_32
0x22af	        0x4883c458	                           add rsp, 0x58	      1177	move.c	FUNCTION_32
0x22b3	              0x5b	                                 pop rbx	      1177	move.c	FUNCTION_32
0x22b4	              0x5d	                                 pop rbp	      1177	move.c	FUNCTION_32
0x22b5	              0xc3	                                     ret	      1177	move.c	FUNCTION_32
update_topline_redraw	CALL,2:WHILE,0:SWITCH,0:functions,0:DO,0:IF,1:ELSE,0:FOR,0	11
0x25f	              0x55	                                push rbp	       152	move.c	FUNCTION_3
0x260	          0x4889e5	                            mov rbp, rsp	       152	move.c	FUNCTION_3
0x263	      0xe800000000	                          call 0x40002a8	       153	move.c	FUNCTION_3	CALL_1
0x268	    0x8b0500000000	            mov eax, dword [0x040002ae] 	       154	move.c	FUNCTION_3	IF_1
0x26e	            0x85c0	                           test eax, eax	       154	move.c	FUNCTION_3	IF_1
0x270	            0x740a	                            je 0x40002bc	       154	move.c	FUNCTION_3	IF_1
0x272	      0xbf00000000	                              mov edi, 0	       155	move.c	FUNCTION_3	CALL_2
0x277	      0xe800000000	                          call 0x40002bc	       155	move.c	FUNCTION_3	CALL_2
0x27c	              0x90	                                     nop	       156	move.c	FUNCTION_3
0x27d	              0x5d	                                 pop rbp	       156	move.c	FUNCTION_3
0x27e	              0xc3	                                     ret	       156	move.c	FUNCTION_3
cursor_correct	CALL,7:WHILE,1:SWITCH,0:functions,0:DO,0:IF,15:ELSE,4:FOR,0	236
0x3dd8	              0x55	                                push rbp	      2125	move.c	FUNCTION_47
0x3dd9	          0x4889e5	                            mov rbp, rsp	      2125	move.c	FUNCTION_47
0x3ddc	        0x4883ec40	                           sub rsp, 0x40	      2125	move.c	FUNCTION_47
0x3de0	    0x64488b042528	                mov rax, qword fs:[0x28]	      2125	move.c	FUNCTION_47
0x3de9	        0x488945f8	                mov qword [rbp - 8], rax	      2125	move.c	FUNCTION_47
0x3ded	            0x31c0	                            xor eax, eax	      2125	move.c	FUNCTION_47
0x3def	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      2126	move.c	FUNCTION_47
0x3df6	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      2128	move.c	FUNCTION_47
0x3dfd	    0x488b05000000	            mov rax, qword [0x04003e44] 	      2138	move.c	FUNCTION_47
0x3e04	          0x8945d4	             mov dword [rbp - 0x2c], eax	      2138	move.c	FUNCTION_47
0x3e07	    0x488b05000000	            mov rax, qword [0x04003e4e] 	      2139	move.c	FUNCTION_47
0x3e0e	          0x8945d8	             mov dword [rbp - 0x28], eax	      2139	move.c	FUNCTION_47
0x3e11	    0x8b0500000000	            mov eax, dword [0x04003e57] 	      2141	move.c	FUNCTION_47	IF_1
0x3e17	            0x85c0	                           test eax, eax	      2141	move.c	FUNCTION_47	IF_1
0x3e19	            0x7e18	                           jle 0x4003e73	      2141	move.c	FUNCTION_47	IF_1
0x3e1b	    0x8b0500000000	            mov eax, dword [0x04003e61] 	      2143	move.c	FUNCTION_47	IF_1
0x3e21	          0x83e801	                              sub eax, 1	      2143	move.c	FUNCTION_47	IF_1
0x3e24	          0x8945d4	             mov dword [rbp - 0x2c], eax	      2143	move.c	FUNCTION_47	IF_1
0x3e27	    0x8b0500000000	            mov eax, dword [0x04003e6d] 	      2144	move.c	FUNCTION_47	IF_1
0x3e2d	          0x83e801	                              sub eax, 1	      2144	move.c	FUNCTION_47	IF_1
0x3e30	          0x8945d8	             mov dword [rbp - 0x28], eax	      2144	move.c	FUNCTION_47	IF_1
0x3e33	    0x488b05000000	            mov rax, qword [0x04003e7a] 	      2147	move.c	FUNCTION_47	IF_2
0x3e3a	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2147	move.c	FUNCTION_47	IF_2
0x3e3e	        0x4883f801	                              cmp rax, 1	      2147	move.c	FUNCTION_47	IF_2
0x3e42	            0x752e	                           jne 0x4003eb2	      2147	move.c	FUNCTION_47	IF_2
0x3e44	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      2149	move.c	FUNCTION_47	IF_2
0x3e4b	    0x488b05000000	            mov rax, qword [0x04003e92] 	      2150	move.c	FUNCTION_47	IF_2
0x3e52	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2150	move.c	FUNCTION_47	IF_2
0x3e58	            0x89c2	                            mov edx, eax	      2150	move.c	FUNCTION_47	IF_2
0x3e5a	          0xc1ea1f	                           shr edx, 0x1f	      2150	move.c	FUNCTION_47	IF_2
0x3e5d	             0x1d0	                            add eax, edx	      2150	move.c	FUNCTION_47	IF_2
0x3e5f	            0xd1f8	                              sar eax, 1	      2150	move.c	FUNCTION_47	IF_2
0x3e61	          0x8945dc	             mov dword [rbp - 0x24], eax	      2150	move.c	FUNCTION_47	IF_2
0x3e64	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2151	move.c	FUNCTION_47	IF_2	IF_3
0x3e67	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      2151	move.c	FUNCTION_47	IF_2	IF_3
0x3e6a	            0x7e06	                           jle 0x4003eb2	      2151	move.c	FUNCTION_47	IF_2	IF_3
0x3e6c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2152	move.c	FUNCTION_47	IF_2	IF_3
0x3e6f	          0x8945d8	             mov dword [rbp - 0x28], eax	      2152	move.c	FUNCTION_47	IF_2	IF_3
0x3e72	      0xe800000000	                          call 0x4003eb7	      2154	move.c	FUNCTION_47	CALL_1
0x3e77	    0x488b05000000	            mov rax, qword [0x04003ebe] 	      2155	move.c	FUNCTION_47	IF_4
0x3e7e	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      2155	move.c	FUNCTION_47	IF_4
0x3e85	    0x488b05000000	            mov rax, qword [0x04003ecc] 	      2155	move.c	FUNCTION_47	IF_4
0x3e8c	          0x488b00	                    mov rax, qword [rax]	      2155	move.c	FUNCTION_47	IF_4
0x3e8f	        0x4883c001	                              add rax, 1	      2155	move.c	FUNCTION_47	IF_4
0x3e93	          0x4839c2	                            cmp rdx, rax	      2155	move.c	FUNCTION_47	IF_4
0x3e96	            0x753b	                           jne 0x4003f13	      2155	move.c	FUNCTION_47	IF_4
0x3e98	    0x8b0500000000	            mov eax, dword [0x04003ede] 	      2157	move.c	FUNCTION_47	IF_4
0x3e9e	            0x85c0	                           test eax, eax	      2157	move.c	FUNCTION_47	IF_4
0x3ea0	            0x7531	                           jne 0x4003f13	      2157	move.c	FUNCTION_47	IF_4
0x3ea2	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      2161	move.c	FUNCTION_47	IF_4
0x3ea9	    0x488b05000000	            mov rax, qword [0x04003ef0] 	      2162	move.c	FUNCTION_47	IF_4
0x3eb0	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2162	move.c	FUNCTION_47	IF_4
0x3eb6	          0x83e801	                              sub eax, 1	      2162	move.c	FUNCTION_47	IF_4
0x3eb9	            0x89c2	                            mov edx, eax	      2162	move.c	FUNCTION_47	IF_4
0x3ebb	          0xc1ea1f	                           shr edx, 0x1f	      2162	move.c	FUNCTION_47	IF_4
0x3ebe	             0x1d0	                            add eax, edx	      2162	move.c	FUNCTION_47	IF_4
0x3ec0	            0xd1f8	                              sar eax, 1	      2162	move.c	FUNCTION_47	IF_4
0x3ec2	          0x8945dc	             mov dword [rbp - 0x24], eax	      2162	move.c	FUNCTION_47	IF_4
0x3ec5	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2163	move.c	FUNCTION_47	IF_4	IF_5
0x3ec8	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      2163	move.c	FUNCTION_47	IF_4	IF_5
0x3ecb	            0x7e06	                           jle 0x4003f13	      2163	move.c	FUNCTION_47	IF_4	IF_5
0x3ecd	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2164	move.c	FUNCTION_47	IF_4	IF_5
0x3ed0	          0x8945d4	             mov dword [rbp - 0x2c], eax	      2164	move.c	FUNCTION_47	IF_4	IF_5
0x3ed3	    0x488b05000000	            mov rax, qword [0x04003f1a] 	      2171	move.c	FUNCTION_47
0x3eda	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2171	move.c	FUNCTION_47
0x3ede	        0x488945f0	             mov qword [rbp - 0x10], rax	      2171	move.c	FUNCTION_47
0x3ee2	    0x488b05000000	            mov rax, qword [0x04003f29] 	      2172	move.c	FUNCTION_47	IF_6
0x3ee9	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2172	move.c	FUNCTION_47	IF_6
0x3eed	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2172	move.c	FUNCTION_47	IF_6
0x3ef0	            0x4898	                                    cdqe	      2172	move.c	FUNCTION_47	IF_6
0x3ef2	          0x4801d0	                            add rax, rdx	      2172	move.c	FUNCTION_47	IF_6
0x3ef5	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      2172	move.c	FUNCTION_47	IF_6
0x3ef9	            0x7f36	                            jg 0x4003f71	      2172	move.c	FUNCTION_47	IF_6
0x3efb	    0x488b05000000	            mov rax, qword [0x04003f42] 	      2173	move.c	FUNCTION_47	IF_6
0x3f02	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      2173	move.c	FUNCTION_47	IF_6
0x3f09	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2173	move.c	FUNCTION_47	IF_6
0x3f0c	            0x4898	                                    cdqe	      2173	move.c	FUNCTION_47	IF_6
0x3f0e	          0x4829c2	                            sub rdx, rax	      2173	move.c	FUNCTION_47	IF_6
0x3f11	          0x4889d0	                            mov rax, rdx	      2173	move.c	FUNCTION_47	IF_6
0x3f14	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      2173	move.c	FUNCTION_47	IF_6
0x3f18	            0x7e17	                           jle 0x4003f71	      2173	move.c	FUNCTION_47	IF_6
0x3f1a	    0x488b05000000	            mov rax, qword [0x04003f61] 	      2175	move.c	FUNCTION_47	IF_6	CALL_2
0x3f21	          0x4889c7	                            mov rdi, rax	      2175	move.c	FUNCTION_47	IF_6	CALL_2
0x3f24	      0xe800000000	                          call 0x4003f69	      2175	move.c	FUNCTION_47	IF_6	CALL_2
0x3f29	            0x85c0	                           test eax, eax	      2175	move.c	FUNCTION_47	IF_6	CALL_2
0x3f2b	     0xf8440020000	                            je 0x40041b1	      2175	move.c	FUNCTION_47	IF_6	CALL_2
0x3f31	    0x488b05000000	            mov rax, qword [0x04003f78] 	      2186	move.c	FUNCTION_47
0x3f38	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2186	move.c	FUNCTION_47
0x3f3c	        0x488945e0	             mov qword [rbp - 0x20], rax	      2186	move.c	FUNCTION_47
0x3f40	    0x488b05000000	            mov rax, qword [0x04003f87] 	      2187	move.c	FUNCTION_47
0x3f47	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      2187	move.c	FUNCTION_47
0x3f4e	        0x4883e801	                              sub rax, 1	      2187	move.c	FUNCTION_47
0x3f52	        0x488945e8	             mov qword [rbp - 0x18], rax	      2187	move.c	FUNCTION_47
0x3f56	    0x488b05000000	            mov rax, qword [0x04003f9d] 	      2190	move.c	FUNCTION_47
0x3f5d	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      2190	move.c	FUNCTION_47
0x3f63	          0x8945cc	             mov dword [rbp - 0x34], eax	      2190	move.c	FUNCTION_47
0x3f66	    0x488b05000000	            mov rax, qword [0x04003fad] 	      2191	move.c	FUNCTION_47
0x3f6d	    0x8b80f4000000	            mov eax, dword [rax + 0xf4] 	      2191	move.c	FUNCTION_47
0x3f73	          0x8945d0	             mov dword [rbp - 0x30], eax	      2191	move.c	FUNCTION_47
0x3f76	      0xe9d1000000	                           jmp 0x400408c	      2193	move.c	FUNCTION_47	WHILE_1
0x3f7b	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2195	move.c	FUNCTION_47	WHILE_1	IF_7
0x3f7e	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	      2195	move.c	FUNCTION_47	WHILE_1	IF_7
0x3f81	            0x7d4d	                           jge 0x4004010	      2195	move.c	FUNCTION_47	WHILE_1	IF_7
0x3f83	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2195	move.c	FUNCTION_47	WHILE_1	IF_7
0x3f86	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      2195	move.c	FUNCTION_47	WHILE_1	IF_7
0x3f89	            0x7e08	                           jle 0x4003fd3	      2195	move.c	FUNCTION_47	WHILE_1	IF_7
0x3f8b	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2195	move.c	FUNCTION_47	WHILE_1	IF_7
0x3f8e	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      2195	move.c	FUNCTION_47	WHILE_1	IF_7
0x3f91	            0x7c3d	                            jl 0x4004010	      2195	move.c	FUNCTION_47	WHILE_1	IF_7
0x3f93	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2198	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x3f97	        0x488d4de8	                   lea rcx, [rbp - 0x18]	      2198	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x3f9b	      0xba00000000	                              mov edx, 0	      2198	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x3fa0	          0x4889ce	                            mov rsi, rcx	      2198	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x3fa3	          0x4889c7	                            mov rdi, rax	      2198	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x3fa6	      0xe800000000	                          call 0x4003feb	      2198	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x3fab	            0x85c0	                           test eax, eax	      2198	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x3fad	            0x7406	                            je 0x4003ff5	      2198	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x3faf	        0x8345d001	               add dword [rbp - 0x30], 1	      2199	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8
0x3fb3	            0xeb0f	                           jmp 0x4004004	      2199	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8
0x3fb5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2202	move.c	FUNCTION_47	WHILE_1	IF_7	CALL_4
0x3fb9	          0x4889c7	                            mov rdi, rax	      2202	move.c	FUNCTION_47	WHILE_1	IF_7	CALL_4
0x3fbc	      0xe800000000	                          call 0x4004001	      2202	move.c	FUNCTION_47	WHILE_1	IF_7	CALL_4
0x3fc1	           0x145d0	             add dword [rbp - 0x30], eax	      2202	move.c	FUNCTION_47	WHILE_1	IF_7	CALL_4
0x3fc4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2203	move.c	FUNCTION_47	WHILE_1	IF_7
0x3fc8	        0x4883e801	                              sub rax, 1	      2203	move.c	FUNCTION_47	WHILE_1	IF_7
0x3fcc	        0x488945e8	             mov qword [rbp - 0x18], rax	      2203	move.c	FUNCTION_47	WHILE_1	IF_7
0x3fd0	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2205	move.c	FUNCTION_47	WHILE_1	IF_9
0x3fd3	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      2205	move.c	FUNCTION_47	WHILE_1	IF_9
0x3fd6	            0x7d74	                           jge 0x400408c	      2205	move.c	FUNCTION_47	WHILE_1	IF_9
0x3fd8	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2205	move.c	FUNCTION_47	WHILE_1	IF_9
0x3fdb	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      2205	move.c	FUNCTION_47	WHILE_1	IF_9
0x3fde	            0x7c08	                            jl 0x4004028	      2205	move.c	FUNCTION_47	WHILE_1	IF_9
0x3fe0	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2205	move.c	FUNCTION_47	WHILE_1	IF_9
0x3fe3	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	      2205	move.c	FUNCTION_47	WHILE_1	IF_9
0x3fe6	            0x7c64	                            jl 0x400408c	      2205	move.c	FUNCTION_47	WHILE_1	IF_9
0x3fe8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2208	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x3fec	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      2208	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x3ff0	      0xbe00000000	                              mov esi, 0	      2208	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x3ff5	          0x4889c7	                            mov rdi, rax	      2208	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x3ff8	      0xe800000000	                          call 0x400403d	      2208	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x3ffd	            0x85c0	                           test eax, eax	      2208	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x3fff	            0x7406	                            je 0x4004047	      2208	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x4001	        0x8345cc01	               add dword [rbp - 0x34], 1	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10
0x4005	            0xeb0f	                           jmp 0x4004056	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10
0x4007	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2212	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_6
0x400b	          0x4889c7	                            mov rdi, rax	      2212	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_6
0x400e	      0xe800000000	                          call 0x4004053	      2212	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_6
0x4013	           0x145cc	             add dword [rbp - 0x34], eax	      2212	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_6
0x4016	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2215	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x401a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2215	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x401e	          0x4839c2	                            cmp rdx, rax	      2215	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x4021	            0x7d1d	                           jge 0x4004080	      2215	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x4023	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2216	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x4027	        0x488d5001	                      lea rdx, [rax + 1]	      2216	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x402b	    0x488b05000000	            mov rax, qword [0x04004072] 	      2216	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x4032	          0x4889d6	                            mov rsi, rdx	      2216	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x4035	          0x4889c7	                            mov rdi, rax	      2216	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x4038	      0xe800000000	                          call 0x400407d	      2216	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x403d	           0x145cc	             add dword [rbp - 0x34], eax	      2216	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x4040	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2218	move.c	FUNCTION_47	WHILE_1	IF_9
0x4044	        0x4883c001	                              add rax, 1	      2218	move.c	FUNCTION_47	WHILE_1	IF_9
0x4048	        0x488945e0	             mov qword [rbp - 0x20], rax	      2218	move.c	FUNCTION_47	WHILE_1	IF_9
0x404c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2193	move.c	FUNCTION_47	WHILE_1
0x404f	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      2193	move.c	FUNCTION_47	WHILE_1
0x4052	            0x7c08	                            jl 0x400409c	      2193	move.c	FUNCTION_47	WHILE_1
0x4054	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2193	move.c	FUNCTION_47	WHILE_1
0x4057	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	      2193	move.c	FUNCTION_47	WHILE_1
0x405a	            0x7d11	                           jge 0x40040ad	      2193	move.c	FUNCTION_47	WHILE_1
0x405c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2193	move.c	FUNCTION_47	WHILE_1
0x4060	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2193	move.c	FUNCTION_47	WHILE_1
0x4064	          0x4839c2	                            cmp rdx, rax	      2193	move.c	FUNCTION_47	WHILE_1
0x4067	     0xf8c0effffff	                            jl 0x4003fbb	      2193	move.c	FUNCTION_47	WHILE_1
0x406d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2221	move.c	FUNCTION_47	IF_12
0x4071	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2221	move.c	FUNCTION_47	IF_12
0x4075	          0x4839c2	                            cmp rdx, rax	      2221	move.c	FUNCTION_47	IF_12
0x4078	            0x7409	                            je 0x40040c3	      2221	move.c	FUNCTION_47	IF_12
0x407a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2221	move.c	FUNCTION_47	IF_12
0x407e	          0x4885c0	                           test rax, rax	      2221	move.c	FUNCTION_47	IF_12
0x4081	            0x7514	                           jne 0x40040d7	      2221	move.c	FUNCTION_47	IF_12
0x4083	    0x488b05000000	            mov rax, qword [0x040040ca] 	      2222	move.c	FUNCTION_47	IF_12
0x408a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2222	move.c	FUNCTION_47	IF_12
0x408e	        0x48895038	             mov qword [rax + 0x38], rdx	      2222	move.c	FUNCTION_47	IF_12
0x4092	      0xe9bb000000	                           jmp 0x4004192	      2222	move.c	FUNCTION_47	IF_12
0x4097	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2223	move.c	FUNCTION_47	ELSE_3	IF_13
0x409b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2223	move.c	FUNCTION_47	ELSE_3	IF_13
0x409f	          0x4839c2	                            cmp rdx, rax	      2223	move.c	FUNCTION_47	ELSE_3	IF_13
0x40a2	            0x7e14	                           jle 0x40040f8	      2223	move.c	FUNCTION_47	ELSE_3	IF_13
0x40a4	    0x488b05000000	            mov rax, qword [0x040040eb] 	      2224	move.c	FUNCTION_47	ELSE_3	IF_13
0x40ab	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2224	move.c	FUNCTION_47	ELSE_3	IF_13
0x40af	        0x48895038	             mov qword [rax + 0x38], rdx	      2224	move.c	FUNCTION_47	ELSE_3	IF_13
0x40b3	      0xe99a000000	                           jmp 0x4004192	      2224	move.c	FUNCTION_47	ELSE_3	IF_13
0x40b8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2227	move.c	FUNCTION_47	ELSE_4	IF_14
0x40bc	        0x483945f0	            cmp qword [rbp - 0x10], rax 	      2227	move.c	FUNCTION_47	ELSE_4	IF_14
0x40c0	            0x7d3d	                           jge 0x400413f	      2227	move.c	FUNCTION_47	ELSE_4	IF_14
0x40c2	    0x488b05000000	            mov rax, qword [0x04004109] 	      2227	move.c	FUNCTION_47	ELSE_4	IF_14
0x40c9	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2227	move.c	FUNCTION_47	ELSE_4	IF_14
0x40cd	        0x4883f801	                              cmp rax, 1	      2227	move.c	FUNCTION_47	ELSE_4	IF_14
0x40d1	            0x7e2c	                           jle 0x400413f	      2227	move.c	FUNCTION_47	ELSE_4	IF_14
0x40d3	    0x488b05000000	            mov rax, qword [0x0400411a] 	      2229	move.c	FUNCTION_47	ELSE_4	IF_14
0x40da	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2229	move.c	FUNCTION_47	ELSE_4	IF_14
0x40de	        0x48895038	             mov qword [rax + 0x38], rdx	      2229	move.c	FUNCTION_47	ELSE_4	IF_14
0x40e2	    0x488b05000000	            mov rax, qword [0x04004129] 	      2230	move.c	FUNCTION_47	ELSE_4	IF_14
0x40e9	    0x488b15000000	            mov rdx, qword [0x04004130] 	      2230	move.c	FUNCTION_47	ELSE_4	IF_14
0x40f0	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2230	move.c	FUNCTION_47	ELSE_4	IF_14
0x40f6	          0x83e2e4	                     and edx, 0xffffffe4	      2230	move.c	FUNCTION_47	ELSE_4	IF_14
0x40f9	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2230	move.c	FUNCTION_47	ELSE_4	IF_14
0x40ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2233	move.c	FUNCTION_47	ELSE_4	IF_15
0x4103	        0x483945f0	            cmp qword [rbp - 0x10], rax 	      2233	move.c	FUNCTION_47	ELSE_4	IF_15
0x4107	            0x7e49	                           jle 0x4004192	      2233	move.c	FUNCTION_47	ELSE_4	IF_15
0x4109	    0x488b05000000	            mov rax, qword [0x04004150] 	      2233	move.c	FUNCTION_47	ELSE_4	IF_15
0x4110	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      2233	move.c	FUNCTION_47	ELSE_4	IF_15
0x4117	    0x488b05000000	            mov rax, qword [0x0400415e] 	      2233	move.c	FUNCTION_47	ELSE_4	IF_15
0x411e	          0x488b00	                    mov rax, qword [rax]	      2233	move.c	FUNCTION_47	ELSE_4	IF_15
0x4121	          0x4839c2	                            cmp rdx, rax	      2233	move.c	FUNCTION_47	ELSE_4	IF_15
0x4124	            0x7f2c	                            jg 0x4004192	      2233	move.c	FUNCTION_47	ELSE_4	IF_15
0x4126	    0x488b05000000	            mov rax, qword [0x0400416d] 	      2235	move.c	FUNCTION_47	ELSE_4	IF_15
0x412d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2235	move.c	FUNCTION_47	ELSE_4	IF_15
0x4131	        0x48895038	             mov qword [rax + 0x38], rdx	      2235	move.c	FUNCTION_47	ELSE_4	IF_15
0x4135	    0x488b05000000	            mov rax, qword [0x0400417c] 	      2236	move.c	FUNCTION_47	ELSE_4	IF_15
0x413c	    0x488b15000000	            mov rdx, qword [0x04004183] 	      2236	move.c	FUNCTION_47	ELSE_4	IF_15
0x4143	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2236	move.c	FUNCTION_47	ELSE_4	IF_15
0x4149	          0x83e2e4	                     and edx, 0xffffffe4	      2236	move.c	FUNCTION_47	ELSE_4	IF_15
0x414c	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2236	move.c	FUNCTION_47	ELSE_4	IF_15
0x4152	    0x488b05000000	            mov rax, qword [0x04004199] 	      2240	move.c	FUNCTION_47
0x4159	    0x488b15000000	            mov rdx, qword [0x040041a0] 	      2240	move.c	FUNCTION_47
0x4160	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2240	move.c	FUNCTION_47
0x4166	          0x80ca80	                             or dl, 0x80	      2240	move.c	FUNCTION_47
0x4169	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2240	move.c	FUNCTION_47
0x416f	            0xeb01	                           jmp 0x40041b2	      2240	move.c	FUNCTION_47
0x4171	              0x90	                                     nop	      2178	move.c	FUNCTION_47	IF_6
0x4172	        0x488b45f8	                mov rax, qword [rbp - 8]	      2241	move.c	FUNCTION_47
0x4176	    0x644833042528	                xor rax, qword fs:[0x28]	      2241	move.c	FUNCTION_47
0x417f	            0x7405	                            je 0x40041c6	      2241	move.c	FUNCTION_47
0x4181	      0xe800000000	                          call 0x40041c6	      2241	move.c	FUNCTION_47
0x4186	              0xc9	                                   leave	      2241	move.c	FUNCTION_47
0x4187	              0xc3	                                     ret	      2241	move.c	FUNCTION_47
scrolljump_value	CALL,0:WHILE,0:SWITCH,0:functions,0:DO,0:IF,1:ELSE,0:FOR,0	26
0x949	              0x55	                                push rbp	       420	move.c	FUNCTION_5
0x94a	          0x4889e5	                            mov rbp, rsp	       420	move.c	FUNCTION_5
0x94d	    0x488b05000000	            mov rax, qword [0x04000994] 	       421	move.c	FUNCTION_5	IF_1
0x954	          0x4885c0	                           test rax, rax	       421	move.c	FUNCTION_5	IF_1
0x957	            0x7809	                            js 0x40009a2	       421	move.c	FUNCTION_5	IF_1
0x959	    0x488b05000000	            mov rax, qword [0x040009a0] 	       422	move.c	FUNCTION_5	IF_1
0x960	            0xeb48	                           jmp 0x40009ea	       422	move.c	FUNCTION_5	IF_1
0x962	    0x488b05000000	            mov rax, qword [0x040009a9] 	       423	move.c	FUNCTION_5
0x969	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       423	move.c	FUNCTION_5
0x96f	            0x4898	                                    cdqe	       423	move.c	FUNCTION_5
0x971	    0x488b15000000	            mov rdx, qword [0x040009b8] 	       423	move.c	FUNCTION_5
0x978	          0x48f7da	                                 neg rdx	       423	move.c	FUNCTION_5
0x97b	        0x480fafc2	                           imul rax, rdx	       423	move.c	FUNCTION_5
0x97f	          0x4889c1	                            mov rcx, rax	       423	move.c	FUNCTION_5
0x982	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	       423	move.c	FUNCTION_5
0x98c	          0x4889c8	                            mov rax, rcx	       423	move.c	FUNCTION_5
0x98f	          0x48f7ea	                                imul rdx	       423	move.c	FUNCTION_5
0x992	        0x488d040a	                    lea rax, [rdx + rcx]	       423	move.c	FUNCTION_5
0x996	        0x48c1f806	                              sar rax, 6	       423	move.c	FUNCTION_5
0x99a	          0x4889c2	                            mov rdx, rax	       423	move.c	FUNCTION_5
0x99d	          0x4889c8	                            mov rax, rcx	       423	move.c	FUNCTION_5
0x9a0	        0x48c1f83f	                           sar rax, 0x3f	       423	move.c	FUNCTION_5
0x9a4	          0x4829c2	                            sub rdx, rax	       423	move.c	FUNCTION_5
0x9a7	          0x4889d0	                            mov rax, rdx	       423	move.c	FUNCTION_5
0x9aa	              0x5d	                                 pop rbp	       424	move.c	FUNCTION_5
0x9ab	              0xc3	                                     ret	       424	move.c	FUNCTION_5
halfpage	CALL,24:WHILE,6:SWITCH,0:functions,0:DO,1:IF,19:ELSE,7:FOR,0	335
0x4b59	              0x55	                                push rbp	      2562	move.c	ELSE_5	FUNCTION_50
0x4b5a	          0x4889e5	                            mov rbp, rsp	      2562	move.c	ELSE_5	FUNCTION_50
0x4b5d	              0x53	                                push rbx	      2562	move.c	ELSE_5	FUNCTION_50
0x4b5e	        0x4883ec38	                           sub rsp, 0x38	      2562	move.c	ELSE_5	FUNCTION_50
0x4b62	          0x897dcc	             mov dword [rbp - 0x34], edi	      2562	move.c	ELSE_5	FUNCTION_50
0x4b65	        0x488975c0	             mov qword [rbp - 0x40], rsi	      2562	move.c	ELSE_5	FUNCTION_50
0x4b69	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      2563	move.c	ELSE_5	FUNCTION_50
0x4b71	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      2568	move.c	ELSE_5	FUNCTION_50	IF_1
0x4b76	            0x7429	                            je 0x4004be1	      2568	move.c	ELSE_5	FUNCTION_50	IF_1
0x4b78	    0x488b0d000000	            mov rcx, qword [0x04004bbf] 	      2569	move.c	ELSE_5	FUNCTION_50	IF_1
0x4b7f	    0x488b05000000	            mov rax, qword [0x04004bc6] 	      2570	move.c	ELSE_5	FUNCTION_50	IF_1
0x4b86	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2570	move.c	ELSE_5	FUNCTION_50	IF_1
0x4b8c	          0x4863d0	                         movsxd rdx, eax	      2570	move.c	ELSE_5	FUNCTION_50	IF_1
0x4b8f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2570	move.c	ELSE_5	FUNCTION_50	IF_1
0x4b93	          0x4839c2	                            cmp rdx, rax	      2570	move.c	ELSE_5	FUNCTION_50	IF_1
0x4b96	        0x480f4ec2	                         cmovle rax, rdx	      2570	move.c	ELSE_5	FUNCTION_50	IF_1
0x4b9a	    0x488981600200	            mov qword [rcx + 0x260], rax	      2569	move.c	ELSE_5	FUNCTION_50	IF_1
0x4ba1	    0x488b05000000	            mov rax, qword [0x04004be8] 	      2572	move.c	ELSE_5	FUNCTION_50
0x4ba8	    0x488b90600200	           mov rdx, qword [rax + 0x260] 	      2572	move.c	ELSE_5	FUNCTION_50
0x4baf	    0x488b05000000	            mov rax, qword [0x04004bf6] 	      2572	move.c	ELSE_5	FUNCTION_50
0x4bb6	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2572	move.c	ELSE_5	FUNCTION_50
0x4bbc	            0x4898	                                    cdqe	      2572	move.c	ELSE_5	FUNCTION_50
0x4bbe	          0x4839c2	                            cmp rdx, rax	      2572	move.c	ELSE_5	FUNCTION_50
0x4bc1	        0x480f4ec2	                         cmovle rax, rdx	      2572	move.c	ELSE_5	FUNCTION_50
0x4bc5	          0x8945e0	             mov dword [rbp - 0x20], eax	      2571	move.c	ELSE_5	FUNCTION_50
0x4bc8	      0xe800000000	                          call 0x4004c0d	      2574	move.c	ELSE_5	FUNCTION_50	CALL_1
0x4bcd	      0xe800000000	                          call 0x4004c12	      2575	move.c	ELSE_5	FUNCTION_50	CALL_2
0x4bd2	    0x488b05000000	            mov rax, qword [0x04004c19] 	      2576	move.c	ELSE_5	FUNCTION_50
0x4bd9	    0x8b80f0000000	            mov eax, dword [rax + 0xf0] 	      2576	move.c	ELSE_5	FUNCTION_50
0x4bdf	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2576	move.c	ELSE_5	FUNCTION_50
0x4be2	    0x488b05000000	            mov rax, qword [0x04004c29] 	      2578	move.c	ELSE_5	FUNCTION_50
0x4be9	    0x8b80f4000000	            mov eax, dword [rax + 0xf4] 	      2578	move.c	ELSE_5	FUNCTION_50
0x4bef	           0x145e4	             add dword [rbp - 0x1c], eax	      2578	move.c	ELSE_5	FUNCTION_50
0x4bf2	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2580	move.c	ELSE_5	FUNCTION_50	IF_2
0x4bf6	     0xf8424040000	                            je 0x4005060	      2580	move.c	ELSE_5	FUNCTION_50	IF_2
0x4bfc	      0xe90a020000	                           jmp 0x4004e4b	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4c01	    0x488b05000000	            mov rax, qword [0x04004c48] 	      2588	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4c08	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      2588	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4c0e	            0x85c0	                           test eax, eax	      2588	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4c10	            0x7e37	                           jle 0x4004c89	      2588	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4c12	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      2590	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4c19	        0x836de001	               sub dword [rbp - 0x20], 1	      2591	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4c1d	        0x837de000	               cmp dword [rbp - 0x20], 0	      2591	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4c21	            0x790b	                           jns 0x4004c6e	      2591	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4c23	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2591	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4c28	     0xf8f06020000	                            jg 0x4004e74	      2591	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4c2e	    0x488b05000000	            mov rax, qword [0x04004c75] 	      2593	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4c35	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      2593	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4c3b	          0x83ea01	                              sub edx, 1	      2593	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4c3e	    0x899084000000	             mov dword [rax + 0x84], edx	      2593	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4c44	      0xe9d7000000	                           jmp 0x4004d60	      2593	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4c49	    0x488b05000000	            mov rax, qword [0x04004c90] 	      2598	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_3
0x4c50	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2598	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_3
0x4c54	          0x4889c7	                            mov rdi, rax	      2598	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_3
0x4c57	      0xe800000000	                          call 0x4004c9c	      2598	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_3
0x4c5c	          0x8945dc	             mov dword [rbp - 0x24], eax	      2598	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_3
0x4c5f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2599	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x4c62	          0x2945e0	             sub dword [rbp - 0x20], eax	      2599	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x4c65	        0x837de000	               cmp dword [rbp - 0x20], 0	      2600	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_5
0x4c69	            0x790b	                           jns 0x4004cb6	      2600	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_5
0x4c6b	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2600	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_5
0x4c70	     0xf8fc1010000	                            jg 0x4004e77	      2600	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_5
0x4c76	    0x488b05000000	            mov rax, qword [0x04004cbd] 	      2603	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x4c7d	        0x488d5078	                   lea rdx, [rax + 0x78]	      2603	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x4c81	    0x488b05000000	            mov rax, qword [0x04004cc8] 	      2603	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x4c88	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2603	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x4c8c	      0xbe00000000	                              mov esi, 0	      2603	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x4c91	          0x4889c7	                            mov rdi, rax	      2603	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x4c94	      0xe800000000	                          call 0x4004cd9	      2603	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x4c99	    0x488b05000000	            mov rax, qword [0x04004ce0] 	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x4ca0	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x4ca4	        0x4883c201	                              add rdx, 1	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x4ca8	        0x48895078	             mov qword [rax + 0x78], rdx	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x4cac	    0x488b1d000000	            mov rbx, qword [0x04004cf3] 	      2607	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x4cb3	    0x488b05000000	            mov rax, qword [0x04004cfa] 	      2607	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x4cba	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2607	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x4cbe	    0x488b05000000	            mov rax, qword [0x04004d05] 	      2607	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x4cc5	          0x4889d6	                            mov rsi, rdx	      2607	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x4cc8	          0x4889c7	                            mov rdi, rax	      2607	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x4ccb	      0xe800000000	                          call 0x4004d10	      2607	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x4cd0	    0x898384000000	             mov dword [rbx + 0x84], eax	      2607	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x4cd6	    0x488b05000000	            mov rax, qword [0x04004d1d] 	      2611	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4cdd	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2611	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4ce1	    0x488b05000000	            mov rax, qword [0x04004d28] 	      2611	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4ce8	          0x488b00	                    mov rax, qword [rax]	      2611	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4ceb	          0x4839c2	                            cmp rdx, rax	      2611	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4cee	            0x7d30	                           jge 0x4004d60	      2611	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4cf0	    0x488b05000000	            mov rax, qword [0x04004d37] 	      2613	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4cf7	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2613	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4cfb	        0x4883c201	                              add rdx, 1	      2613	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4cff	        0x48895038	             mov qword [rax + 0x38], rdx	      2613	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4d03	    0x488b05000000	            mov rax, qword [0x04004d4a] 	      2614	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4d0a	    0x488b15000000	            mov rdx, qword [0x04004d51] 	      2614	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4d11	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2614	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4d17	          0x83e2f1	                     and edx, 0xfffffff1	      2614	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4d1a	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2614	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4d20	    0x488b05000000	            mov rax, qword [0x04004d67] 	      2619	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4d27	    0x488b15000000	            mov rdx, qword [0x04004d6e] 	      2619	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4d2e	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2619	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4d34	          0x83e2ee	                     and edx, 0xffffffee	      2619	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4d37	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2619	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4d3d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2620	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4d40	            0x4898	                                    cdqe	      2620	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4d42	        0x480145e8	            add qword [rbp - 0x18], rax 	      2620	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4d46	    0x488b05000000	            mov rax, qword [0x04004d8d] 	      2627	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4d4d	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      2627	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4d53	            0x85c0	                           test eax, eax	      2627	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4d55	            0x7422	                            je 0x4004db9	      2627	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4d57	    0x488b05000000	            mov rax, qword [0x04004d9e] 	      2628	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4d5e	    0x488b15000000	            mov rdx, qword [0x04004da5] 	      2628	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4d65	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2628	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4d6b	          0x83e29f	                     and edx, 0xffffff9f	      2628	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4d6e	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2628	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4d74	      0xe992000000	                           jmp 0x4004e4b	      2628	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4d79	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2632	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2
0x4d7c	           0x145e4	             add dword [rbp - 0x1c], eax	      2632	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2
0x4d7f	    0x488b05000000	            mov rax, qword [0x04004dc6] 	      2635	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_6
0x4d86	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      2635	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_6
0x4d8d	          0x4889c7	                            mov rdi, rax	      2635	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_6
0x4d90	      0xe800000000	                          call 0x4004dd5	      2635	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_6
0x4d95	          0x8945dc	             mov dword [rbp - 0x24], eax	      2635	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_6
0x4d98	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2636	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	IF_8
0x4d9b	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      2636	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	IF_8
0x4d9e	            0x7e02	                           jle 0x4004de2	      2636	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	IF_8
0x4da0	            0xeb69	                           jmp 0x4004e4b	      2637	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	IF_8
0x4da2	    0x488b05000000	            mov rax, qword [0x04004de9] 	      2640	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4da9	    0x488d90e80000	                   lea rdx, [rax + 0xe8]	      2639	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x4db0	    0x488b05000000	            mov rax, qword [0x04004df7] 	      2639	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x4db7	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      2639	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x4dbe	      0xbe00000000	                              mov esi, 0	      2639	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x4dc3	          0x4889c7	                            mov rdi, rax	      2639	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x4dc6	      0xe800000000	                          call 0x4004e0b	      2639	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x4dcb	    0x488b05000000	            mov rax, qword [0x04004e12] 	      2642	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4dd2	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      2642	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4dd9	        0x4883c201	                              add rdx, 1	      2642	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4ddd	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      2642	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4de4	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2643	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4de7	          0x2945e4	             sub dword [rbp - 0x1c], eax	      2643	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4dea	    0x488b05000000	            mov rax, qword [0x04004e31] 	      2644	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4df1	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      2644	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4df8	    0x488b05000000	            mov rax, qword [0x04004e3f] 	      2644	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4dff	          0x488b00	                    mov rax, qword [rax]	      2644	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4e02	          0x4839c2	                            cmp rdx, rax	      2644	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4e05	     0xf8e74ffffff	                           jle 0x4004dbf	      2644	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4e0b	        0x837de000	               cmp dword [rbp - 0x20], 0	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4e0f	            0x7e27	                           jle 0x4004e78	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4e11	    0x488b05000000	            mov rax, qword [0x04004e58] 	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4e18	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4e1f	    0x488b05000000	            mov rax, qword [0x04004e66] 	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4e26	          0x488b00	                    mov rax, qword [rax]	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4e29	          0x4839c2	                            cmp rdx, rax	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4e2c	     0xf8ecffdffff	                           jle 0x4004c41	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4e32	            0xeb04	                           jmp 0x4004e78	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4e34	              0x90	                                     nop	      2592	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4e35	            0xeb01	                           jmp 0x4004e78	      2592	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4e37	              0x90	                                     nop	      2601	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_5
0x4e38	        0x837de000	               cmp dword [rbp - 0x20], 0	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9
0x4e3c	     0xf8ebf020000	                           jle 0x4005141	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9
0x4e42	    0x488b05000000	            mov rax, qword [0x04004e89] 	      2655	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	CALL_8
0x4e49	          0x4889c7	                            mov rdi, rax	      2655	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	CALL_8
0x4e4c	      0xe800000000	                          call 0x4004e91	      2655	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	CALL_8
0x4e51	            0x85c0	                           test eax, eax	      2655	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	CALL_8
0x4e53	            0x745e	                            je 0x4004ef3	      2655	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	CALL_8
0x4e55	            0xeb36	                           jmp 0x4004ecd	      2657	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4e57	    0x488b05000000	            mov rax, qword [0x04004e9e] 	      2661	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4e5e	        0x488d5038	                   lea rdx, [rax + 0x38]	      2660	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2	CALL_9
0x4e62	    0x488b05000000	            mov rax, qword [0x04004ea9] 	      2660	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2	CALL_9
0x4e69	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2660	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2	CALL_9
0x4e6d	      0xbe00000000	                              mov esi, 0	      2660	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2	CALL_9
0x4e72	          0x4889c7	                            mov rdi, rax	      2660	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2	CALL_9
0x4e75	      0xe800000000	                          call 0x4004eba	      2660	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2	CALL_9
0x4e7a	    0x488b05000000	            mov rax, qword [0x04004ec1] 	      2662	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4e81	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2662	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4e85	        0x4883c201	                              add rdx, 1	      2662	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4e89	        0x48895038	             mov qword [rax + 0x38], rdx	      2662	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4e8d	        0x836de001	               sub dword [rbp - 0x20], 1	      2657	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4e91	        0x837de000	               cmp dword [rbp - 0x20], 0	      2657	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4e95	            0x783b	                            js 0x4004f12	      2657	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4e97	    0x488b05000000	            mov rax, qword [0x04004ede] 	      2658	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4e9e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2658	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4ea2	    0x488b05000000	            mov rax, qword [0x04004ee9] 	      2658	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4ea9	          0x488b00	                    mov rax, qword [rax]	      2658	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4eac	          0x4839c2	                            cmp rdx, rax	      2658	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4eaf	            0x7ca6	                            jl 0x4004e97	      2658	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4eb1	            0xeb1f	                           jmp 0x4004f12	      2658	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4eb3	    0x488b05000000	            mov rax, qword [0x04004efa] 	      2667	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	ELSE_3
0x4eba	    0x488b15000000	            mov rdx, qword [0x04004f01] 	      2667	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	ELSE_3
0x4ec1	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      2667	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	ELSE_3
0x4ec5	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      2667	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	ELSE_3
0x4ec8	          0x4863d2	                         movsxd rdx, edx	      2667	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	ELSE_3
0x4ecb	          0x4801ca	                            add rdx, rcx	      2667	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	ELSE_3
0x4ece	        0x48895038	             mov qword [rax + 0x38], rdx	      2667	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	ELSE_3
0x4ed2	      0xe800000000	                          call 0x4004f17	      2668	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	CALL_10
0x4ed7	      0xe925020000	                           jmp 0x4005141	      2668	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	CALL_10
0x4edc	    0x488b05000000	            mov rax, qword [0x04004f23] 	      2694	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4ee3	    0x8b9884000000	            mov ebx, dword [rax + 0x84] 	      2694	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4ee9	    0x488b05000000	            mov rax, qword [0x04004f30] 	      2694	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4ef0	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2694	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4ef4	    0x488b05000000	            mov rax, qword [0x04004f3b] 	      2694	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4efb	          0x4889d6	                            mov rsi, rdx	      2694	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4efe	          0x4889c7	                            mov rdi, rax	      2694	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4f01	      0xe800000000	                          call 0x4004f46	      2694	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4f06	            0x39c3	                            cmp ebx, eax	      2694	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4f08	            0x7d34	                           jge 0x4004f7e	      2694	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4f0a	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      2696	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12
0x4f11	        0x836de001	               sub dword [rbp - 0x20], 1	      2697	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	IF_13
0x4f15	        0x837de000	               cmp dword [rbp - 0x20], 0	      2697	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	IF_13
0x4f19	            0x790b	                           jns 0x4004f66	      2697	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	IF_13
0x4f1b	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2697	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	IF_13
0x4f20	     0xf8f17010000	                            jg 0x400507d	      2697	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	IF_13
0x4f26	    0x488b05000000	            mov rax, qword [0x04004f6d] 	      2699	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12
0x4f2d	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      2699	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12
0x4f33	          0x83c201	                              add edx, 1	      2699	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12
0x4f36	    0x899084000000	             mov dword [rax + 0x84], edx	      2699	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12
0x4f3c	            0xeb7b	                           jmp 0x4004ff9	      2699	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12
0x4f3e	    0x488b05000000	            mov rax, qword [0x04004f85] 	      2704	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x4f45	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2704	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x4f49	        0x4883e801	                              sub rax, 1	      2704	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x4f4d	          0x4889c7	                            mov rdi, rax	      2704	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x4f50	      0xe800000000	                          call 0x4004f95	      2704	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x4f55	          0x8945dc	             mov dword [rbp - 0x24], eax	      2704	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x4f58	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2705	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x4f5b	          0x2945e0	             sub dword [rbp - 0x20], eax	      2705	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x4f5e	        0x837de000	               cmp dword [rbp - 0x20], 0	      2706	move.c	FUNCTION_50	ELSE_4	WHILE_4	IF_14
0x4f62	            0x790b	                           jns 0x4004faf	      2706	move.c	FUNCTION_50	ELSE_4	WHILE_4	IF_14
0x4f64	      0x48837de800	               cmp qword [rbp - 0x18], 0	      2706	move.c	FUNCTION_50	ELSE_4	WHILE_4	IF_14
0x4f69	     0xf8fd1000000	                            jg 0x4005080	      2706	move.c	FUNCTION_50	ELSE_4	WHILE_4	IF_14
0x4f6f	    0x488b05000000	            mov rax, qword [0x04004fb6] 	      2708	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x4f76	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2708	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x4f7a	        0x4883ea01	                              sub rdx, 1	      2708	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x4f7e	        0x48895078	             mov qword [rax + 0x78], rdx	      2708	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x4f82	    0x488b05000000	            mov rax, qword [0x04004fc9] 	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x4f89	        0x488d4878	                   lea rcx, [rax + 0x78]	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x4f8d	    0x488b05000000	            mov rax, qword [0x04004fd4] 	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x4f94	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x4f98	      0xba00000000	                              mov edx, 0	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x4f9d	          0x4889ce	                            mov rsi, rcx	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x4fa0	          0x4889c7	                            mov rdi, rax	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x4fa3	      0xe800000000	                          call 0x4004fe8	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x4fa8	    0x488b05000000	            mov rax, qword [0x04004fef] 	      2713	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x4faf	    0xc78084000000	               mov dword [rax + 0x84], 0	      2713	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x4fb9	    0x488b05000000	            mov rax, qword [0x04005000] 	      2716	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x4fc0	    0x488b15000000	            mov rdx, qword [0x04005007] 	      2716	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x4fc7	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2716	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x4fcd	          0x83e28e	                     and edx, 0xffffff8e	      2716	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x4fd0	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2716	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x4fd6	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2718	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x4fd9	            0x4898	                                    cdqe	      2718	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x4fdb	        0x480145e8	            add qword [rbp - 0x18], rax 	      2718	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x4fdf	    0x488b05000000	            mov rax, qword [0x04005026] 	      2720	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x4fe6	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2720	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x4fea	        0x4883f801	                              cmp rax, 1	      2720	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x4fee	            0x7e30	                           jle 0x4005060	      2720	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x4ff0	    0x488b05000000	            mov rax, qword [0x04005037] 	      2722	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x4ff7	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2722	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x4ffb	        0x4883ea01	                              sub rdx, 1	      2722	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x4fff	        0x48895038	             mov qword [rax + 0x38], rdx	      2722	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x5003	    0x488b05000000	            mov rax, qword [0x0400504a] 	      2723	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x500a	    0x488b15000000	            mov rdx, qword [0x04005051] 	      2723	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x5011	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2723	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x5017	          0x83e2f1	                     and edx, 0xfffffff1	      2723	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x501a	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2723	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x5020	        0x837de000	               cmp dword [rbp - 0x20], 0	      2691	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x5024	            0x7e1b	                           jle 0x4005081	      2691	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x5026	    0x488b05000000	            mov rax, qword [0x0400506d] 	      2691	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x502d	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2691	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x5031	        0x4883f801	                              cmp rax, 1	      2691	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x5035	     0xf8fa1feffff	                            jg 0x4004f1c	      2691	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x503b	            0xeb04	                           jmp 0x4005081	      2691	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x503d	              0x90	                                     nop	      2698	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	IF_13
0x503e	            0xeb01	                           jmp 0x4005081	      2698	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	IF_13
0x5040	              0x90	                                     nop	      2707	move.c	FUNCTION_50	ELSE_4	WHILE_4	IF_14
0x5041	        0x837de000	               cmp dword [rbp - 0x20], 0	      2731	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16
0x5045	     0xf8eb6000000	                           jle 0x4005141	      2731	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16
0x504b	    0x488b05000000	            mov rax, qword [0x04005092] 	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x5052	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x5056	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x5059	            0x4898	                                    cdqe	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x505b	          0x4839c2	                            cmp rdx, rax	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x505e	            0x7f14	                            jg 0x40050b4	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x5060	    0x488b05000000	            mov rax, qword [0x040050a7] 	      2734	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x5067	    0x48c740380100	               mov qword [rax + 0x38], 1	      2734	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x506f	      0xe98d000000	                           jmp 0x4005141	      2734	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x5074	    0x488b05000000	            mov rax, qword [0x040050bb] 	      2737	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	CALL_16
0x507b	          0x4889c7	                            mov rdi, rax	      2737	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	CALL_16
0x507e	      0xe800000000	                          call 0x40050c3	      2737	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	CALL_16
0x5083	            0x85c0	                           test eax, eax	      2737	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	CALL_16
0x5085	            0x7458	                            je 0x400511f	      2737	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	CALL_16
0x5087	            0xeb39	                           jmp 0x4005102	      2739	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x5089	    0x488b05000000	            mov rax, qword [0x040050d0] 	      2741	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x5090	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2741	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x5094	        0x4883ea01	                              sub rdx, 1	      2741	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x5098	        0x48895038	             mov qword [rax + 0x38], rdx	      2741	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x509c	    0x488b05000000	            mov rax, qword [0x040050e3] 	      2743	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x50a3	        0x488d4838	                   lea rcx, [rax + 0x38]	      2742	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5	CALL_17
0x50a7	    0x488b05000000	            mov rax, qword [0x040050ee] 	      2742	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5	CALL_17
0x50ae	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2742	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5	CALL_17
0x50b2	      0xba00000000	                              mov edx, 0	      2742	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5	CALL_17
0x50b7	          0x4889ce	                            mov rsi, rcx	      2742	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5	CALL_17
0x50ba	          0x4889c7	                            mov rdi, rax	      2742	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5	CALL_17
0x50bd	      0xe800000000	                          call 0x4005102	      2742	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5	CALL_17
0x50c2	        0x836de001	               sub dword [rbp - 0x20], 1	      2739	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x50c6	        0x837de000	               cmp dword [rbp - 0x20], 0	      2739	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x50ca	            0x7835	                            js 0x4005141	      2739	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x50cc	    0x488b05000000	            mov rax, qword [0x04005113] 	      2739	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x50d3	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2739	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x50d7	        0x4883f801	                              cmp rax, 1	      2739	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x50db	            0x7fac	                            jg 0x40050c9	      2739	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x50dd	            0xeb22	                           jmp 0x4005141	      2739	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x50df	    0x488b05000000	            mov rax, qword [0x04005126] 	      2748	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
0x50e6	    0x488b15000000	            mov rdx, qword [0x0400512d] 	      2748	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
0x50ed	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      2748	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
0x50f1	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      2748	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
0x50f4	          0x4863d2	                         movsxd rdx, edx	      2748	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
0x50f7	          0x4829d1	                            sub rcx, rdx	      2748	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
0x50fa	          0x4889ca	                            mov rdx, rcx	      2748	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
0x50fd	        0x48895038	             mov qword [rax + 0x38], rdx	      2748	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
0x5101	      0xe800000000	                          call 0x4005146	      2768	move.c	FUNCTION_50	ELSE_5	CALL_20
0x5106	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2771	move.c	FUNCTION_50	ELSE_5	CALL_21
0x510a	           0xf94c0	                                 sete al	      2771	move.c	FUNCTION_50	ELSE_5	CALL_21
0x510d	           0xfb6d0	                           movzx edx, al	      2771	move.c	FUNCTION_50	ELSE_5	CALL_21
0x5110	    0x488b05000000	            mov rax, qword [0x04005157] 	      2771	move.c	FUNCTION_50	ELSE_5	CALL_21
0x5117	            0x89d6	                            mov esi, edx	      2771	move.c	FUNCTION_50	ELSE_5	CALL_21
0x5119	          0x4889c7	                            mov rdi, rax	      2771	move.c	FUNCTION_50	ELSE_5	CALL_21
0x511c	      0xe800000000	                          call 0x4005161	      2771	move.c	FUNCTION_50	ELSE_5	CALL_21
0x5121	      0xe800000000	                          call 0x4005166	      2773	move.c	FUNCTION_50	ELSE_5	CALL_22
0x5126	      0xbf06000000	                              mov edi, 6	      2774	move.c	FUNCTION_50	ELSE_5	CALL_23
0x512b	      0xe800000000	                          call 0x4005170	      2774	move.c	FUNCTION_50	ELSE_5	CALL_23
0x5130	      0xbf0a000000	                            mov edi, 0xa	      2775	move.c	FUNCTION_50	ELSE_5	CALL_24
0x5135	      0xe800000000	                          call 0x400517a	      2775	move.c	FUNCTION_50	ELSE_5	CALL_24
0x513a	              0x90	                                     nop	      2776	move.c	FUNCTION_50	ELSE_5
0x513b	        0x4883c438	                           add rsp, 0x38	      2776	move.c	FUNCTION_50	ELSE_5
0x513f	              0x5b	                                 pop rbx	      2776	move.c	FUNCTION_50	ELSE_5
0x5140	              0x5d	                                 pop rbp	      2776	move.c	FUNCTION_50	ELSE_5
0x5141	              0xc3	                                     ret	      2776	move.c	FUNCTION_50	ELSE_5
check_topfill	CALL,1:WHILE,0:SWITCH,0:functions,0:DO,0:IF,4:ELSE,1:FOR,0	54
0x296c	              0x55	                                push rbp	      1371	move.c	FUNCTION_35
0x296d	          0x4889e5	                            mov rbp, rsp	      1371	move.c	FUNCTION_35
0x2970	        0x4883ec20	                           sub rsp, 0x20	      1371	move.c	FUNCTION_35
0x2974	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1371	move.c	FUNCTION_35
0x2978	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1371	move.c	FUNCTION_35
0x297b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1374	move.c	FUNCTION_35	IF_1
0x297f	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1374	move.c	FUNCTION_35	IF_1
0x2985	            0x85c0	                           test eax, eax	      1374	move.c	FUNCTION_35	IF_1
0x2987	     0xf8ea9000000	                           jle 0x4002a76	      1374	move.c	FUNCTION_35	IF_1
0x298d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1376	move.c	FUNCTION_35	IF_1	CALL_1
0x2991	        0x488b4878	            mov rcx, qword [rax + 0x78] 	      1376	move.c	FUNCTION_35	IF_1	CALL_1
0x2995	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1376	move.c	FUNCTION_35	IF_1	CALL_1
0x2999	      0xba01000000	                              mov edx, 1	      1376	move.c	FUNCTION_35	IF_1	CALL_1
0x299e	          0x4889ce	                            mov rsi, rcx	      1376	move.c	FUNCTION_35	IF_1	CALL_1
0x29a1	          0x4889c7	                            mov rdi, rax	      1376	move.c	FUNCTION_35	IF_1	CALL_1
0x29a4	      0xe800000000	                          call 0x40029e9	      1376	move.c	FUNCTION_35	IF_1	CALL_1
0x29a9	          0x8945fc	                mov dword [rbp - 4], eax	      1376	move.c	FUNCTION_35	IF_1	CALL_1
0x29ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1377	move.c	FUNCTION_35	IF_1	IF_2
0x29b0	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      1377	move.c	FUNCTION_35	IF_1	IF_2
0x29b6	          0x8b45fc	                mov eax, dword [rbp - 4]	      1377	move.c	FUNCTION_35	IF_1	IF_2
0x29b9	             0x1c2	                            add edx, eax	      1377	move.c	FUNCTION_35	IF_1	IF_2
0x29bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1377	move.c	FUNCTION_35	IF_1	IF_2
0x29bf	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1377	move.c	FUNCTION_35	IF_1	IF_2
0x29c5	            0x39c2	                            cmp edx, eax	      1377	move.c	FUNCTION_35	IF_1	IF_2
0x29c7	            0x7e6d	                           jle 0x4002a76	      1377	move.c	FUNCTION_35	IF_1	IF_2
0x29c9	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1379	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x29cd	            0x7432	                            je 0x4002a41	      1379	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x29cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1379	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x29d3	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1379	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x29d7	        0x4883f801	                              cmp rax, 1	      1379	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x29db	            0x7e24	                           jle 0x4002a41	      1379	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x29dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1381	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x29e1	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1381	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x29e5	        0x488d50ff	                      lea rdx, [rax - 1]	      1381	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x29e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1381	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x29ed	        0x48895078	             mov qword [rax + 0x78], rdx	      1381	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x29f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1382	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x29f5	    0xc78084000000	               mov dword [rax + 0x84], 0	      1382	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x29ff	            0xeb35	                           jmp 0x4002a76	      1392	move.c	FUNCTION_35
0x2a01	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1386	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x2a05	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1386	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x2a0b	          0x2b45fc	                sub eax, dword [rbp - 4]	      1386	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x2a0e	            0x89c2	                            mov edx, eax	      1386	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x2a10	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1386	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x2a14	    0x899084000000	             mov dword [rax + 0x84], edx	      1386	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x2a1a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1387	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x2a1e	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1387	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x2a24	            0x85c0	                           test eax, eax	      1387	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x2a26	            0x790e	                           jns 0x4002a76	      1387	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x2a28	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1388	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x2a2c	    0xc78084000000	               mov dword [rax + 0x84], 0	      1388	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x2a36	              0x90	                                     nop	      1392	move.c	FUNCTION_35
0x2a37	              0xc9	                                   leave	      1392	move.c	FUNCTION_35
0x2a38	              0xc3	                                     ret	      1392	move.c	FUNCTION_35
scrollup	CALL,7:WHILE,1:SWITCH,0:functions,0:DO,0:IF,8:ELSE,2:FOR,0	160
0x2697	              0x55	                                push rbp	      1289	move.c	FUNCTION_34
0x2698	          0x4889e5	                            mov rbp, rsp	      1289	move.c	FUNCTION_34
0x269b	              0x53	                                push rbx	      1289	move.c	FUNCTION_34
0x269c	        0x4883ec28	                           sub rsp, 0x28	      1289	move.c	FUNCTION_34
0x26a0	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1289	move.c	FUNCTION_34
0x26a4	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1289	move.c	FUNCTION_34
0x26a7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1289	move.c	FUNCTION_34
0x26b0	        0x488945e8	             mov qword [rbp - 0x18], rax	      1289	move.c	FUNCTION_34
0x26b4	            0x31c0	                            xor eax, eax	      1289	move.c	FUNCTION_34
0x26b6	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1293	move.c	FUNCTION_34	IF_1
0x26ba	            0x7413	                            je 0x400270f	      1293	move.c	FUNCTION_34	IF_1
0x26bc	    0x488b05000000	            mov rax, qword [0x04002703] 	      1295	move.c	FUNCTION_34	IF_1	CALL_1
0x26c3	          0x4889c7	                            mov rdi, rax	      1295	move.c	FUNCTION_34	IF_1	CALL_1
0x26c6	      0xe800000000	                          call 0x400270b	      1295	move.c	FUNCTION_34	IF_1	CALL_1
0x26cb	            0x85c0	                           test eax, eax	      1295	move.c	FUNCTION_34	IF_1	CALL_1
0x26cd	            0x7515	                           jne 0x4002724	      1295	move.c	FUNCTION_34	IF_1	CALL_1
0x26cf	    0x488b05000000	            mov rax, qword [0x04002716] 	      1301	move.c	FUNCTION_34	IF_1
0x26d6	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      1301	move.c	FUNCTION_34	IF_1
0x26dc	            0x85c0	                           test eax, eax	      1297	move.c	FUNCTION_34	IF_1
0x26de	     0xf84f7000000	                            je 0x400281b	      1297	move.c	FUNCTION_34	IF_1
0x26e4	    0x488b05000000	            mov rax, qword [0x0400272b] 	      1306	move.c	FUNCTION_34	IF_1
0x26eb	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1306	move.c	FUNCTION_34	IF_1
0x26ef	        0x488945e0	             mov qword [rbp - 0x20], rax	      1306	move.c	FUNCTION_34	IF_1
0x26f3	      0xe986000000	                           jmp 0x40027be	      1307	move.c	FUNCTION_34	IF_1	WHILE_1
0x26f8	    0x488b05000000	            mov rax, qword [0x0400273f] 	      1310	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x26ff	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1310	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x2705	            0x85c0	                           test eax, eax	      1310	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x2707	            0x7e18	                           jle 0x4002761	      1310	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x2709	    0x488b05000000	            mov rax, qword [0x04002750] 	      1311	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x2710	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      1311	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x2716	          0x83ea01	                              sub edx, 1	      1311	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x2719	    0x899084000000	             mov dword [rax + 0x84], edx	      1311	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x271f	            0xeb5d	                           jmp 0x40027be	      1311	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x2721	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1316	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_3
0x2725	            0x7415	                            je 0x400277c	      1316	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_3
0x2727	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_2
0x272b	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_2
0x272f	      0xbe00000000	                              mov esi, 0	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_2
0x2734	          0x4889c7	                            mov rdi, rax	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_2
0x2737	      0xe800000000	                          call 0x400277c	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_2
0x273c	    0x488b05000000	            mov rax, qword [0x04002783] 	      1319	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x2743	          0x488b10	                    mov rdx, qword [rax]	      1319	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x2746	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1319	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x274a	          0x4839c2	                            cmp rdx, rax	      1319	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x274d	            0x7e46	                           jle 0x40027d5	      1319	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x274f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1321	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1
0x2753	        0x4883c001	                              add rax, 1	      1321	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1
0x2757	        0x488945e0	             mov qword [rbp - 0x20], rax	      1321	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1
0x275b	    0x488b1d000000	            mov rbx, qword [0x040027a2] 	      1323	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x2762	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1323	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x2766	    0x488b05000000	            mov rax, qword [0x040027ad] 	      1323	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x276d	          0x4889d6	                            mov rsi, rdx	      1323	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x2770	          0x4889c7	                            mov rdi, rax	      1323	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x2773	      0xe800000000	                          call 0x40027b8	      1323	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x2778	    0x898384000000	             mov dword [rbx + 0x84], eax	      1323	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x277e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1307	move.c	FUNCTION_34	IF_1	WHILE_1
0x2782	        0x488d50ff	                      lea rdx, [rax - 1]	      1307	move.c	FUNCTION_34	IF_1	WHILE_1
0x2786	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1307	move.c	FUNCTION_34	IF_1	WHILE_1
0x278a	          0x4885c0	                           test rax, rax	      1307	move.c	FUNCTION_34	IF_1	WHILE_1
0x278d	     0xf8565ffffff	                           jne 0x4002738	      1307	move.c	FUNCTION_34	IF_1	WHILE_1
0x2793	            0xeb01	                           jmp 0x40027d6	      1307	move.c	FUNCTION_34	IF_1	WHILE_1
0x2795	              0x90	                                     nop	      1320	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x2796	    0x488b05000000	            mov rax, qword [0x040027dd] 	      1328	move.c	FUNCTION_34	IF_1
0x279d	    0x488b15000000	            mov rdx, qword [0x040027e4] 	      1328	move.c	FUNCTION_34	IF_1
0x27a4	    0x488b8ae80000	            mov rcx, qword [rdx + 0xe8] 	      1328	move.c	FUNCTION_34	IF_1
0x27ab	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1328	move.c	FUNCTION_34	IF_1
0x27af	    0x488b15000000	            mov rdx, qword [0x040027f6] 	      1328	move.c	FUNCTION_34	IF_1
0x27b6	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	      1328	move.c	FUNCTION_34	IF_1
0x27ba	          0x4829d6	                            sub rsi, rdx	      1328	move.c	FUNCTION_34	IF_1
0x27bd	          0x4889f2	                            mov rdx, rsi	      1328	move.c	FUNCTION_34	IF_1
0x27c0	          0x4801ca	                            add rdx, rcx	      1328	move.c	FUNCTION_34	IF_1
0x27c3	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      1328	move.c	FUNCTION_34	IF_1
0x27ca	    0x488b05000000	            mov rax, qword [0x04002811] 	      1329	move.c	FUNCTION_34	IF_1
0x27d1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1329	move.c	FUNCTION_34	IF_1
0x27d5	        0x48895078	             mov qword [rax + 0x78], rdx	      1329	move.c	FUNCTION_34	IF_1
0x27d9	            0xeb40	                           jmp 0x400285b	      1329	move.c	FUNCTION_34	IF_1
0x27db	    0x488b05000000	            mov rax, qword [0x04002822] 	      1334	move.c	FUNCTION_34	ELSE_2
0x27e2	    0x488b15000000	            mov rdx, qword [0x04002829] 	      1334	move.c	FUNCTION_34	ELSE_2
0x27e9	        0x488b4a78	            mov rcx, qword [rdx + 0x78] 	      1334	move.c	FUNCTION_34	ELSE_2
0x27ed	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1334	move.c	FUNCTION_34	ELSE_2
0x27f1	          0x4801ca	                            add rdx, rcx	      1334	move.c	FUNCTION_34	ELSE_2
0x27f4	        0x48895078	             mov qword [rax + 0x78], rdx	      1334	move.c	FUNCTION_34	ELSE_2
0x27f8	    0x488b05000000	            mov rax, qword [0x0400283f] 	      1335	move.c	FUNCTION_34	ELSE_2
0x27ff	    0x488b15000000	            mov rdx, qword [0x04002846] 	      1335	move.c	FUNCTION_34	ELSE_2
0x2806	    0x488b8ae80000	            mov rcx, qword [rdx + 0xe8] 	      1335	move.c	FUNCTION_34	ELSE_2
0x280d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1335	move.c	FUNCTION_34	ELSE_2
0x2811	          0x4801ca	                            add rdx, rcx	      1335	move.c	FUNCTION_34	ELSE_2
0x2814	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      1335	move.c	FUNCTION_34	ELSE_2
0x281b	    0x488b05000000	            mov rax, qword [0x04002862] 	      1338	move.c	FUNCTION_34	IF_5
0x2822	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1338	move.c	FUNCTION_34	IF_5
0x2826	    0x488b05000000	            mov rax, qword [0x0400286d] 	      1338	move.c	FUNCTION_34	IF_5
0x282d	          0x488b00	                    mov rax, qword [rax]	      1338	move.c	FUNCTION_34	IF_5
0x2830	          0x4839c2	                            cmp rdx, rax	      1338	move.c	FUNCTION_34	IF_5
0x2833	            0x7e15	                           jle 0x400288a	      1338	move.c	FUNCTION_34	IF_5
0x2835	    0x488b05000000	            mov rax, qword [0x0400287c] 	      1339	move.c	FUNCTION_34	IF_5
0x283c	    0x488b15000000	            mov rdx, qword [0x04002883] 	      1339	move.c	FUNCTION_34	IF_5
0x2843	          0x488b12	                    mov rdx, qword [rdx]	      1339	move.c	FUNCTION_34	IF_5
0x2846	        0x48895078	             mov qword [rax + 0x78], rdx	      1339	move.c	FUNCTION_34	IF_5
0x284a	    0x488b05000000	            mov rax, qword [0x04002891] 	      1340	move.c	FUNCTION_34	IF_6
0x2851	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      1340	move.c	FUNCTION_34	IF_6
0x2858	    0x488b05000000	            mov rax, qword [0x0400289f] 	      1340	move.c	FUNCTION_34	IF_6
0x285f	          0x488b00	                    mov rax, qword [rax]	      1340	move.c	FUNCTION_34	IF_6
0x2862	        0x4883c001	                              add rax, 1	      1340	move.c	FUNCTION_34	IF_6
0x2866	          0x4839c2	                            cmp rdx, rax	      1340	move.c	FUNCTION_34	IF_6
0x2869	            0x7e1c	                           jle 0x40028c7	      1340	move.c	FUNCTION_34	IF_6
0x286b	    0x488b05000000	            mov rax, qword [0x040028b2] 	      1341	move.c	FUNCTION_34	IF_6
0x2872	    0x488b15000000	            mov rdx, qword [0x040028b9] 	      1341	move.c	FUNCTION_34	IF_6
0x2879	          0x488b12	                    mov rdx, qword [rdx]	      1341	move.c	FUNCTION_34	IF_6
0x287c	        0x4883c201	                              add rdx, 1	      1341	move.c	FUNCTION_34	IF_6
0x2880	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      1341	move.c	FUNCTION_34	IF_6
0x2887	    0x488b05000000	            mov rax, qword [0x040028ce] 	      1344	move.c	FUNCTION_34	CALL_4
0x288e	      0xbe00000000	                              mov esi, 0	      1344	move.c	FUNCTION_34	CALL_4
0x2893	          0x4889c7	                            mov rdi, rax	      1344	move.c	FUNCTION_34	CALL_4
0x2896	      0xe800000000	                          call 0x40028db	      1344	move.c	FUNCTION_34	CALL_4
0x289b	    0x488b05000000	            mov rax, qword [0x040028e2] 	      1348	move.c	FUNCTION_34	IF_7	CALL_5
0x28a2	          0x4889c7	                            mov rdi, rax	      1348	move.c	FUNCTION_34	IF_7	CALL_5
0x28a5	      0xe800000000	                          call 0x40028ea	      1348	move.c	FUNCTION_34	IF_7	CALL_5
0x28aa	            0x85c0	                           test eax, eax	      1348	move.c	FUNCTION_34	IF_7	CALL_5
0x28ac	            0x7426	                            je 0x4002914	      1348	move.c	FUNCTION_34	IF_7	CALL_5
0x28ae	    0x488b05000000	            mov rax, qword [0x040028f5] 	      1350	move.c	FUNCTION_34	CALL_6
0x28b5	        0x488d4878	                   lea rcx, [rax + 0x78]	      1350	move.c	FUNCTION_34	CALL_6
0x28b9	    0x488b05000000	            mov rax, qword [0x04002900] 	      1350	move.c	FUNCTION_34	CALL_6
0x28c0	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1350	move.c	FUNCTION_34	CALL_6
0x28c4	      0xba00000000	                              mov edx, 0	      1350	move.c	FUNCTION_34	CALL_6
0x28c9	          0x4889ce	                            mov rsi, rcx	      1350	move.c	FUNCTION_34	CALL_6
0x28cc	          0x4889c7	                            mov rdi, rax	      1350	move.c	FUNCTION_34	CALL_6
0x28cf	      0xe800000000	                          call 0x4002914	      1350	move.c	FUNCTION_34	CALL_6
0x28d4	    0x488b05000000	            mov rax, qword [0x0400291b] 	      1353	move.c	FUNCTION_34
0x28db	    0x488b15000000	            mov rdx, qword [0x04002922] 	      1353	move.c	FUNCTION_34
0x28e2	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      1353	move.c	FUNCTION_34
0x28e8	          0x83e2ce	                     and edx, 0xffffffce	      1353	move.c	FUNCTION_34
0x28eb	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1353	move.c	FUNCTION_34
0x28f1	    0x488b05000000	            mov rax, qword [0x04002938] 	      1354	move.c	FUNCTION_34	IF_8
0x28f8	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1354	move.c	FUNCTION_34	IF_8
0x28fc	    0x488b05000000	            mov rax, qword [0x04002943] 	      1354	move.c	FUNCTION_34	IF_8
0x2903	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1354	move.c	FUNCTION_34	IF_8
0x2907	          0x4839c2	                            cmp rdx, rax	      1354	move.c	FUNCTION_34	IF_8
0x290a	            0x7d44	                           jge 0x4002990	      1354	move.c	FUNCTION_34	IF_8
0x290c	    0x488b05000000	            mov rax, qword [0x04002953] 	      1356	move.c	FUNCTION_34	IF_8
0x2913	    0x488b15000000	            mov rdx, qword [0x0400295a] 	      1356	move.c	FUNCTION_34	IF_8
0x291a	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	      1356	move.c	FUNCTION_34	IF_8
0x291e	        0x48895038	             mov qword [rax + 0x38], rdx	      1356	move.c	FUNCTION_34	IF_8
0x2922	    0x488b05000000	            mov rax, qword [0x04002969] 	      1357	move.c	FUNCTION_34	IF_8
0x2929	    0x488b15000000	            mov rdx, qword [0x04002970] 	      1357	move.c	FUNCTION_34	IF_8
0x2930	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      1357	move.c	FUNCTION_34	IF_8
0x2936	          0x83e2e0	                     and edx, 0xffffffe0	      1357	move.c	FUNCTION_34	IF_8
0x2939	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1357	move.c	FUNCTION_34	IF_8
0x293f	    0x488b05000000	            mov rax, qword [0x04002986] 	      1359	move.c	FUNCTION_34	IF_8	CALL_7
0x2946	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1359	move.c	FUNCTION_34	IF_8	CALL_7
0x2949	            0x89c7	                            mov edi, eax	      1359	move.c	FUNCTION_34	IF_8	CALL_7
0x294b	      0xe800000000	                          call 0x4002990	      1359	move.c	FUNCTION_34	IF_8	CALL_7
0x2950	              0x90	                                     nop	      1361	move.c	FUNCTION_34
0x2951	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1361	move.c	FUNCTION_34
0x2955	    0x644833042528	                xor rax, qword fs:[0x28]	      1361	move.c	FUNCTION_34
0x295e	            0x7405	                            je 0x40029a5	      1361	move.c	FUNCTION_34
0x2960	      0xe800000000	                          call 0x40029a5	      1361	move.c	FUNCTION_34
0x2965	        0x4883c428	                           add rsp, 0x28	      1361	move.c	FUNCTION_34
0x2969	              0x5b	                                 pop rbx	      1361	move.c	FUNCTION_34
0x296a	              0x5d	                                 pop rbp	      1361	move.c	FUNCTION_34
0x296b	              0xc3	                                     ret	      1361	move.c	FUNCTION_34
update_curswant	CALL,1:WHILE,0:SWITCH,0:functions,0:DO,0:IF,1:ELSE,0:FOR,0	16
0xaae	              0x55	                                push rbp	       470	move.c	FUNCTION_7
0xaaf	          0x4889e5	                            mov rbp, rsp	       470	move.c	FUNCTION_7
0xab2	    0x488b05000000	            mov rax, qword [0x04000af9] 	       471	move.c	FUNCTION_7	IF_1
0xab9	          0x8b404c	            mov eax, dword [rax + 0x4c] 	       471	move.c	FUNCTION_7	IF_1
0xabc	            0x85c0	                           test eax, eax	       471	move.c	FUNCTION_7	IF_1
0xabe	            0x742a	                            je 0x4000b2a	       471	move.c	FUNCTION_7	IF_1
0xac0	      0xe800000000	                          call 0x4000b05	       473	move.c	FUNCTION_7	IF_1	CALL_1
0xac5	    0x488b05000000	            mov rax, qword [0x04000b0c] 	       474	move.c	FUNCTION_7	IF_1
0xacc	    0x488b15000000	            mov rdx, qword [0x04000b13] 	       474	move.c	FUNCTION_7	IF_1
0xad3	    0x8b92d8000000	            mov edx, dword [rdx + 0xd8] 	       474	move.c	FUNCTION_7	IF_1
0xad9	          0x895048	             mov dword [rax + 0x48], edx	       474	move.c	FUNCTION_7	IF_1
0xadc	    0x488b05000000	            mov rax, qword [0x04000b23] 	       475	move.c	FUNCTION_7	IF_1
0xae3	    0xc7404c000000	               mov dword [rax + 0x4c], 0	       475	move.c	FUNCTION_7	IF_1
0xaea	              0x90	                                     nop	       477	move.c	FUNCTION_7
0xaeb	              0x5d	                                 pop rbp	       477	move.c	FUNCTION_7
0xaec	              0xc3	                                     ret	       477	move.c	FUNCTION_7
win_col_off2	CALL,2:WHILE,0:SWITCH,0:functions,0:DO,0:IF,1:ELSE,0:FOR,0	26
0x17a5	              0x55	                                push rbp	       909	move.c	FUNCTION_30
0x17a6	          0x4889e5	                            mov rbp, rsp	       909	move.c	FUNCTION_30
0x17a9	        0x4883ec10	                           sub rsp, 0x10	       909	move.c	FUNCTION_30
0x17ad	        0x48897df8	                mov qword [rbp - 8], rdi	       909	move.c	FUNCTION_30
0x17b1	        0x488b45f8	                mov rax, qword [rbp - 8]	       910	move.c	FUNCTION_30	IF_1	CALL_1
0x17b5	    0x8b8038020000	           mov eax, dword [rax + 0x238] 	       910	move.c	FUNCTION_30	IF_1	CALL_1
0x17bb	            0x85c0	                           test eax, eax	       910	move.c	FUNCTION_30	IF_1	CALL_1
0x17bd	            0x750e	                           jne 0x400180d	       910	move.c	FUNCTION_30	IF_1	CALL_1
0x17bf	        0x488b45f8	                mov rax, qword [rbp - 8]	       910	move.c	FUNCTION_30	IF_1	CALL_1
0x17c3	    0x8b803c020000	           mov eax, dword [rax + 0x23c] 	       910	move.c	FUNCTION_30	IF_1	CALL_1
0x17c9	            0x85c0	                           test eax, eax	       910	move.c	FUNCTION_30	IF_1	CALL_1
0x17cb	            0x742a	                            je 0x4001837	       910	move.c	FUNCTION_30	IF_1	CALL_1
0x17cd	    0x488b05000000	            mov rax, qword [0x04001814] 	       910	move.c	FUNCTION_30	IF_1	CALL_1
0x17d4	      0xbe6e000000	                           mov esi, 0x6e	       910	move.c	FUNCTION_30	IF_1	CALL_1
0x17d9	          0x4889c7	                            mov rdi, rax	       910	move.c	FUNCTION_30	IF_1	CALL_1
0x17dc	      0xe800000000	                          call 0x4001821	       910	move.c	FUNCTION_30	IF_1	CALL_1
0x17e1	          0x4885c0	                           test rax, rax	       910	move.c	FUNCTION_30	IF_1	CALL_1
0x17e4	            0x7411	                            je 0x4001837	       910	move.c	FUNCTION_30	IF_1	CALL_1
0x17e6	        0x488b45f8	                mov rax, qword [rbp - 8]	       911	move.c	FUNCTION_30	CALL_2
0x17ea	          0x4889c7	                            mov rdi, rax	       911	move.c	FUNCTION_30	CALL_2
0x17ed	      0xe800000000	                          call 0x4001832	       911	move.c	FUNCTION_30	CALL_2
0x17f2	          0x83c001	                              add eax, 1	       911	move.c	FUNCTION_30	CALL_2
0x17f5	            0xeb05	                           jmp 0x400183c	       911	move.c	FUNCTION_30	CALL_2
0x17f7	      0xb800000000	                              mov eax, 0	       912	move.c	FUNCTION_30
0x17fc	              0xc9	                                   leave	       913	move.c	FUNCTION_30
0x17fd	              0xc3	                                     ret	       913	move.c	FUNCTION_30
set_topline	CALL,2:WHILE,0:SWITCH,0:functions,0:DO,0:IF,0:ELSE,0:FOR,0	41
0xc58	              0x55	                                push rbp	       533	move.c	FUNCTION_11
0xc59	          0x4889e5	                            mov rbp, rsp	       533	move.c	FUNCTION_11
0xc5c	        0x4883ec10	                           sub rsp, 0x10	       533	move.c	FUNCTION_11
0xc60	        0x48897df8	                mov qword [rbp - 8], rdi	       533	move.c	FUNCTION_11
0xc64	        0x488975f0	             mov qword [rbp - 0x10], rsi	       533	move.c	FUNCTION_11
0xc68	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       536	move.c	FUNCTION_11	CALL_1
0xc6c	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       536	move.c	FUNCTION_11	CALL_1
0xc70	        0x488b45f8	                mov rax, qword [rbp - 8]	       536	move.c	FUNCTION_11	CALL_1
0xc74	    0x41b900000000	                              mov r9d, 0	       536	move.c	FUNCTION_11	CALL_1
0xc7a	    0x41b801000000	                              mov r8d, 1	       536	move.c	FUNCTION_11	CALL_1
0xc80	      0xb900000000	                              mov ecx, 0	       536	move.c	FUNCTION_11	CALL_1
0xc85	          0x4889c7	                            mov rdi, rax	       536	move.c	FUNCTION_11	CALL_1
0xc88	      0xe800000000	                          call 0x4000ccd	       536	move.c	FUNCTION_11	CALL_1
0xc8d	        0x488b45f8	                mov rax, qword [rbp - 8]	       539	move.c	FUNCTION_11
0xc91	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	       539	move.c	FUNCTION_11
0xc98	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       539	move.c	FUNCTION_11
0xc9c	        0x488b45f8	                mov rax, qword [rbp - 8]	       539	move.c	FUNCTION_11
0xca0	        0x488b4078	            mov rax, qword [rax + 0x78] 	       539	move.c	FUNCTION_11
0xca4	          0x4829c1	                            sub rcx, rax	       539	move.c	FUNCTION_11
0xca7	          0x4889c8	                            mov rax, rcx	       539	move.c	FUNCTION_11
0xcaa	          0x4801c2	                            add rdx, rax	       539	move.c	FUNCTION_11
0xcad	        0x488b45f8	                mov rax, qword [rbp - 8]	       539	move.c	FUNCTION_11
0xcb1	    0x488990e80000	             mov qword [rax + 0xe8], rdx	       539	move.c	FUNCTION_11
0xcb8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       540	move.c	FUNCTION_11
0xcbc	        0x488b45f8	                mov rax, qword [rbp - 8]	       540	move.c	FUNCTION_11
0xcc0	        0x48895078	             mov qword [rax + 0x78], rdx	       540	move.c	FUNCTION_11
0xcc4	        0x488b45f8	                mov rax, qword [rbp - 8]	       542	move.c	FUNCTION_11
0xcc8	    0xc68080000000	                mov byte [rax + 0x80], 1	       542	move.c	FUNCTION_11
0xccf	        0x488b45f8	                mov rax, qword [rbp - 8]	       545	move.c	FUNCTION_11
0xcd3	    0xc78084000000	               mov dword [rax + 0x84], 0	       545	move.c	FUNCTION_11
0xcdd	        0x488b45f8	                mov rax, qword [rbp - 8]	       547	move.c	FUNCTION_11
0xce1	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       547	move.c	FUNCTION_11
0xce7	            0x244e	                            and al, 0x4e	       547	move.c	FUNCTION_11
0xce9	            0x89c2	                            mov edx, eax	       547	move.c	FUNCTION_11
0xceb	        0x488b45f8	                mov rax, qword [rbp - 8]	       547	move.c	FUNCTION_11
0xcef	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       547	move.c	FUNCTION_11
0xcf5	      0xbf0a000000	                            mov edi, 0xa	       549	move.c	FUNCTION_11	CALL_2
0xcfa	      0xe800000000	                          call 0x4000d3f	       549	move.c	FUNCTION_11	CALL_2
0xcff	              0x90	                                     nop	       550	move.c	FUNCTION_11
0xd00	              0xc9	                                   leave	       550	move.c	FUNCTION_11
0xd01	              0xc3	                                     ret	       550	move.c	FUNCTION_11
scrolldown_clamp	CALL,8:WHILE,0:SWITCH,0:functions,0:DO,0:IF,5:ELSE,2:FOR,0	108
0x2aef	              0x55	                                push rbp	      1422	move.c	FUNCTION_37
0x2af0	          0x4889e5	                            mov rbp, rsp	      1422	move.c	FUNCTION_37
0x2af3	              0x53	                                push rbx	      1422	move.c	FUNCTION_37
0x2af4	        0x4883ec18	                           sub rsp, 0x18	      1422	move.c	FUNCTION_37
0x2af8	    0x488b05000000	            mov rax, qword [0x04002b3f] 	      1425	move.c	FUNCTION_37
0x2aff	    0x8b9884000000	            mov ebx, dword [rax + 0x84] 	      1425	move.c	FUNCTION_37
0x2b05	    0x488b05000000	            mov rax, qword [0x04002b4c] 	      1426	move.c	FUNCTION_37	CALL_1
0x2b0c	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1426	move.c	FUNCTION_37	CALL_1
0x2b10	    0x488b05000000	            mov rax, qword [0x04002b57] 	      1426	move.c	FUNCTION_37	CALL_1
0x2b17	          0x4889d6	                            mov rsi, rdx	      1426	move.c	FUNCTION_37	CALL_1
0x2b1a	          0x4889c7	                            mov rdi, rax	      1426	move.c	FUNCTION_37	CALL_1
0x2b1d	      0xe800000000	                          call 0x4002b62	      1426	move.c	FUNCTION_37	CALL_1
0x2b22	            0x39c3	                            cmp ebx, eax	      1426	move.c	FUNCTION_37	CALL_1
0x2b24	           0xf9cc0	                                 setl al	      1426	move.c	FUNCTION_37	CALL_1
0x2b27	           0xfb6c0	                           movzx eax, al	      1425	move.c	FUNCTION_37
0x2b2a	          0x8945ec	             mov dword [rbp - 0x14], eax	      1425	move.c	FUNCTION_37
0x2b2d	    0x488b05000000	            mov rax, qword [0x04002b74] 	      1429	move.c	FUNCTION_37	IF_1
0x2b34	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1429	move.c	FUNCTION_37	IF_1
0x2b38	        0x4883f801	                              cmp rax, 1	      1429	move.c	FUNCTION_37	IF_1
0x2b3c	            0x7f0a	                            jg 0x4002b88	      1429	move.c	FUNCTION_37	IF_1
0x2b3e	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1431	move.c	FUNCTION_37	IF_1
0x2b42	     0xf847b010000	                            je 0x4002d03	      1431	move.c	FUNCTION_37	IF_1
0x2b48	      0xe800000000	                          call 0x4002b8d	      1436	move.c	FUNCTION_37	CALL_2
0x2b4d	    0x488b05000000	            mov rax, qword [0x04002b94] 	      1443	move.c	FUNCTION_37
0x2b54	    0x8b80dc000000	            mov eax, dword [rax + 0xdc] 	      1443	move.c	FUNCTION_37
0x2b5a	          0x8945e8	             mov dword [rbp - 0x18], eax	      1443	move.c	FUNCTION_37
0x2b5d	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1445	move.c	FUNCTION_37	IF_2
0x2b61	            0x7406	                            je 0x4002ba9	      1445	move.c	FUNCTION_37	IF_2
0x2b63	        0x8345e801	               add dword [rbp - 0x18], 1	      1446	move.c	FUNCTION_37	IF_2
0x2b67	            0xeb1a	                           jmp 0x4002bc3	      1446	move.c	FUNCTION_37	IF_2
0x2b69	    0x488b05000000	            mov rax, qword [0x04002bb0] 	      1448	move.c	FUNCTION_37	CALL_3
0x2b70	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1448	move.c	FUNCTION_37	CALL_3
0x2b74	        0x4883e801	                              sub rax, 1	      1448	move.c	FUNCTION_37	CALL_3
0x2b78	          0x4889c7	                            mov rdi, rax	      1448	move.c	FUNCTION_37	CALL_3
0x2b7b	      0xe800000000	                          call 0x4002bc0	      1448	move.c	FUNCTION_37	CALL_3
0x2b80	           0x145e8	             add dword [rbp - 0x18], eax	      1448	move.c	FUNCTION_37	CALL_3
0x2b83	    0x488b05000000	            mov rax, qword [0x04002bca] 	      1452	move.c	FUNCTION_37	IF_3
0x2b8a	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      1452	move.c	FUNCTION_37	IF_3
0x2b90	            0x85c0	                           test eax, eax	      1452	move.c	FUNCTION_37	IF_3
0x2b92	            0x744f	                            je 0x4002c23	      1452	move.c	FUNCTION_37	IF_3
0x2b94	    0x488b05000000	            mov rax, qword [0x04002bdb] 	      1452	move.c	FUNCTION_37	IF_3
0x2b9b	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1452	move.c	FUNCTION_37	IF_3
0x2ba1	            0x85c0	                           test eax, eax	      1452	move.c	FUNCTION_37	IF_3
0x2ba3	            0x743e	                            je 0x4002c23	      1452	move.c	FUNCTION_37	IF_3
0x2ba5	      0xe855e9ffff	               call sym.validate_cheight	      1454	move.c	FUNCTION_37	IF_3	CALL_5
0x2baa	      0xe800000000	                          call 0x4002bef	      1455	move.c	FUNCTION_37	IF_3	CALL_6
0x2baf	    0x488b05000000	            mov rax, qword [0x04002bf6] 	      1456	move.c	FUNCTION_37	IF_3
0x2bb6	    0x8b80cc000000	            mov eax, dword [rax + 0xcc] 	      1456	move.c	FUNCTION_37	IF_3
0x2bbc	          0x8d48ff	                      lea ecx, [rax - 1]	      1456	move.c	FUNCTION_37	IF_3
0x2bbf	    0x488b05000000	            mov rax, qword [0x04002c06] 	      1457	move.c	FUNCTION_37	IF_3
0x2bc6	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      1457	move.c	FUNCTION_37	IF_3
0x2bcc	    0x488b15000000	            mov rdx, qword [0x04002c13] 	      1457	move.c	FUNCTION_37	IF_3
0x2bd3	    0x8b9aac000000	            mov ebx, dword [rdx + 0xac] 	      1457	move.c	FUNCTION_37	IF_3
0x2bd9	              0x99	                                     cdq	      1457	move.c	FUNCTION_37	IF_3
0x2bda	            0xf7fb	                                idiv ebx	      1457	move.c	FUNCTION_37	IF_3
0x2bdc	            0x29c1	                            sub ecx, eax	      1456	move.c	FUNCTION_37	IF_3
0x2bde	            0x89c8	                            mov eax, ecx	      1456	move.c	FUNCTION_37	IF_3
0x2be0	           0x145e8	             add dword [rbp - 0x18], eax	      1456	move.c	FUNCTION_37	IF_3
0x2be3	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1459	move.c	FUNCTION_37	IF_4
0x2be6	          0x4863d0	                         movsxd rdx, eax	      1459	move.c	FUNCTION_37	IF_4
0x2be9	    0x488b05000000	            mov rax, qword [0x04002c30] 	      1459	move.c	FUNCTION_37	IF_4
0x2bf0	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1459	move.c	FUNCTION_37	IF_4
0x2bf6	          0x4863c8	                         movsxd rcx, eax	      1459	move.c	FUNCTION_37	IF_4
0x2bf9	    0x488b05000000	            mov rax, qword [0x04002c40] 	      1459	move.c	FUNCTION_37	IF_4
0x2c00	          0x4829c1	                            sub rcx, rax	      1459	move.c	FUNCTION_37	IF_4
0x2c03	          0x4889c8	                            mov rax, rcx	      1459	move.c	FUNCTION_37	IF_4
0x2c06	          0x4839c2	                            cmp rdx, rax	      1459	move.c	FUNCTION_37	IF_4
0x2c09	     0xf8db5000000	                           jge 0x4002d04	      1459	move.c	FUNCTION_37	IF_4
0x2c0f	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1462	move.c	FUNCTION_37	IF_4	IF_5
0x2c13	            0x742c	                            je 0x4002c81	      1462	move.c	FUNCTION_37	IF_4	IF_5
0x2c15	    0x488b05000000	            mov rax, qword [0x04002c5c] 	      1464	move.c	FUNCTION_37	IF_4	IF_5
0x2c1c	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      1464	move.c	FUNCTION_37	IF_4	IF_5
0x2c22	          0x83c201	                              add edx, 1	      1464	move.c	FUNCTION_37	IF_4	IF_5
0x2c25	    0x899084000000	             mov dword [rax + 0x84], edx	      1464	move.c	FUNCTION_37	IF_4	IF_5
0x2c2b	    0x488b05000000	            mov rax, qword [0x04002c72] 	      1465	move.c	FUNCTION_37	IF_4	IF_5	CALL_7
0x2c32	      0xbe01000000	                              mov esi, 1	      1465	move.c	FUNCTION_37	IF_4	IF_5	CALL_7
0x2c37	          0x4889c7	                            mov rdi, rax	      1465	move.c	FUNCTION_37	IF_4	IF_5	CALL_7
0x2c3a	      0xe800000000	                          call 0x4002c7f	      1465	move.c	FUNCTION_37	IF_4	IF_5	CALL_7
0x2c3f	            0xeb24	                           jmp 0x4002ca5	      1465	move.c	FUNCTION_37	IF_4	IF_5	CALL_7
0x2c41	    0x488b05000000	            mov rax, qword [0x04002c88] 	      1469	move.c	FUNCTION_37	IF_4	ELSE_2
0x2c48	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1469	move.c	FUNCTION_37	IF_4	ELSE_2
0x2c4c	        0x4883ea01	                              sub rdx, 1	      1469	move.c	FUNCTION_37	IF_4	ELSE_2
0x2c50	        0x48895078	             mov qword [rax + 0x78], rdx	      1469	move.c	FUNCTION_37	IF_4	ELSE_2
0x2c54	    0x488b05000000	            mov rax, qword [0x04002c9b] 	      1470	move.c	FUNCTION_37	IF_4	ELSE_2
0x2c5b	    0xc78084000000	               mov dword [rax + 0x84], 0	      1470	move.c	FUNCTION_37	IF_4	ELSE_2
0x2c65	    0x488b05000000	            mov rax, qword [0x04002cac] 	      1476	move.c	FUNCTION_37	IF_4	CALL_8
0x2c6c	        0x488d4878	                   lea rcx, [rax + 0x78]	      1476	move.c	FUNCTION_37	IF_4	CALL_8
0x2c70	    0x488b05000000	            mov rax, qword [0x04002cb7] 	      1476	move.c	FUNCTION_37	IF_4	CALL_8
0x2c77	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1476	move.c	FUNCTION_37	IF_4	CALL_8
0x2c7b	      0xba00000000	                              mov edx, 0	      1476	move.c	FUNCTION_37	IF_4	CALL_8
0x2c80	          0x4889ce	                            mov rsi, rcx	      1476	move.c	FUNCTION_37	IF_4	CALL_8
0x2c83	          0x4889c7	                            mov rdi, rax	      1476	move.c	FUNCTION_37	IF_4	CALL_8
0x2c86	      0xe800000000	                          call 0x4002ccb	      1476	move.c	FUNCTION_37	IF_4	CALL_8
0x2c8b	    0x488b05000000	            mov rax, qword [0x04002cd2] 	      1478	move.c	FUNCTION_37	IF_4
0x2c92	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      1478	move.c	FUNCTION_37	IF_4
0x2c99	        0x4883ea01	                              sub rdx, 1	      1478	move.c	FUNCTION_37	IF_4
0x2c9d	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      1478	move.c	FUNCTION_37	IF_4
0x2ca4	    0x488b05000000	            mov rax, qword [0x04002ceb] 	      1479	move.c	FUNCTION_37	IF_4
0x2cab	    0x488b15000000	            mov rdx, qword [0x04002cf2] 	      1479	move.c	FUNCTION_37	IF_4
0x2cb2	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      1479	move.c	FUNCTION_37	IF_4
0x2cb8	          0x83e2ce	                     and edx, 0xffffffce	      1479	move.c	FUNCTION_37	IF_4
0x2cbb	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1479	move.c	FUNCTION_37	IF_4
0x2cc1	            0xeb01	                           jmp 0x4002d04	      1479	move.c	FUNCTION_37	IF_4
0x2cc3	              0x90	                                     nop	      1434	move.c	FUNCTION_37	IF_1
0x2cc4	        0x4883c418	                           add rsp, 0x18	      1481	move.c	FUNCTION_37
0x2cc8	              0x5b	                                 pop rbx	      1481	move.c	FUNCTION_37
0x2cc9	              0x5d	                                 pop rbp	      1481	move.c	FUNCTION_37
0x2cca	              0xc3	                                     ret	      1481	move.c	FUNCTION_37
check_top_offset	CALL,2:WHILE,1:SWITCH,0:functions,0:DO,0:IF,3:ELSE,0:FOR,0	64
0x9ac	              0x55	                                push rbp	       432	move.c	FUNCTION_6
0x9ad	          0x4889e5	                            mov rbp, rsp	       432	move.c	FUNCTION_6
0x9b0	        0x4883ec30	                           sub rsp, 0x30	       432	move.c	FUNCTION_6
0x9b4	    0x64488b042528	                mov rax, qword fs:[0x28]	       432	move.c	FUNCTION_6
0x9bd	        0x488945f8	                mov qword [rbp - 8], rax	       432	move.c	FUNCTION_6
0x9c1	            0x31c0	                            xor eax, eax	       432	move.c	FUNCTION_6
0x9c3	    0x488b05000000	            mov rax, qword [0x04000a0a] 	       436	move.c	FUNCTION_6	IF_1
0x9ca	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       436	move.c	FUNCTION_6	IF_1
0x9ce	    0x488b05000000	            mov rax, qword [0x04000a15] 	       436	move.c	FUNCTION_6	IF_1
0x9d5	        0x488b4878	            mov rcx, qword [rax + 0x78] 	       436	move.c	FUNCTION_6	IF_1
0x9d9	    0x488b05000000	            mov rax, qword [0x04000a20] 	       436	move.c	FUNCTION_6	IF_1
0x9e0	          0x4801c8	                            add rax, rcx	       436	move.c	FUNCTION_6	IF_1
0x9e3	          0x4839c2	                            cmp rdx, rax	       436	move.c	FUNCTION_6	IF_1
0x9e6	            0x7c17	                            jl 0x4000a3f	       436	move.c	FUNCTION_6	IF_1
0x9e8	    0x488b05000000	            mov rax, qword [0x04000a2f] 	       438	move.c	FUNCTION_6	IF_1	CALL_1
0x9ef	          0x4889c7	                            mov rdi, rax	       438	move.c	FUNCTION_6	IF_1	CALL_1
0x9f2	      0xe800000000	                          call 0x4000a37	       438	move.c	FUNCTION_6	IF_1	CALL_1
0x9f7	            0x85c0	                           test eax, eax	       438	move.c	FUNCTION_6	IF_1	CALL_1
0x9f9	     0xf8494000000	                            je 0x4000ad3	       438	move.c	FUNCTION_6	IF_1	CALL_1
0x9ff	    0x488b05000000	            mov rax, qword [0x04000a46] 	       442	move.c	FUNCTION_6	IF_1
0xa06	        0x488b4038	            mov rax, qword [rax + 0x38] 	       442	move.c	FUNCTION_6	IF_1
0xa0a	        0x488945e0	             mov qword [rbp - 0x20], rax	       442	move.c	FUNCTION_6	IF_1
0xa0e	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       444	move.c	FUNCTION_6	IF_1
0xa15	    0x488b05000000	            mov rax, qword [0x04000a5c] 	       445	move.c	FUNCTION_6	IF_1
0xa1c	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	       445	move.c	FUNCTION_6	IF_1
0xa22	          0x8945dc	             mov dword [rbp - 0x24], eax	       445	move.c	FUNCTION_6	IF_1
0xa25	            0xeb41	                           jmp 0x4000aa8	       450	move.c	FUNCTION_6	IF_1	WHILE_1
0xa27	        0x488d45e0	                   lea rax, [rbp - 0x20]	       452	move.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0xa2b	          0x4889c7	                            mov rdi, rax	       452	move.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0xa2e	      0xe809240000	                   call sym.topline_back	       452	move.c	FUNCTION_6	IF_1	WHILE_1	CALL_2
0xa33	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       454	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0xa37	    0x488b05000000	            mov rax, qword [0x04000a7e] 	       454	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0xa3e	        0x488b4078	            mov rax, qword [rax + 0x78] 	       454	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0xa42	          0x4839c2	                            cmp rdx, rax	       454	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0xa45	            0x7c33	                            jl 0x4000aba	       454	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0xa47	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       456	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0xa4b	    0x488b05000000	            mov rax, qword [0x04000a92] 	       456	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0xa52	        0x488b4078	            mov rax, qword [rax + 0x78] 	       456	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0xa56	          0x4839c2	                            cmp rdx, rax	       456	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0xa59	            0x7507	                           jne 0x4000aa2	       456	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0xa5b	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       456	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0xa5e	            0x85c0	                           test eax, eax	       456	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0xa60	            0x7f18	                            jg 0x4000aba	       456	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0xa62	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       460	move.c	FUNCTION_6	IF_1	WHILE_1
0xa65	           0x145dc	             add dword [rbp - 0x24], eax	       460	move.c	FUNCTION_6	IF_1	WHILE_1
0xa68	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       450	move.c	FUNCTION_6	IF_1	WHILE_1
0xa6b	          0x4863d0	                         movsxd rdx, eax	       450	move.c	FUNCTION_6	IF_1	WHILE_1
0xa6e	    0x488b05000000	            mov rax, qword [0x04000ab5] 	       450	move.c	FUNCTION_6	IF_1	WHILE_1
0xa75	          0x4839c2	                            cmp rdx, rax	       450	move.c	FUNCTION_6	IF_1	WHILE_1
0xa78	            0x7cad	                            jl 0x4000a67	       450	move.c	FUNCTION_6	IF_1	WHILE_1
0xa7a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       462	move.c	FUNCTION_6	IF_1	IF_3
0xa7d	          0x4863d0	                         movsxd rdx, eax	       462	move.c	FUNCTION_6	IF_1	IF_3
0xa80	    0x488b05000000	            mov rax, qword [0x04000ac7] 	       462	move.c	FUNCTION_6	IF_1	IF_3
0xa87	          0x4839c2	                            cmp rdx, rax	       462	move.c	FUNCTION_6	IF_1	IF_3
0xa8a	            0x7d07	                           jge 0x4000ad3	       462	move.c	FUNCTION_6	IF_1	IF_3
0xa8c	      0xb801000000	                              mov eax, 1	       463	move.c	FUNCTION_6	IF_1	IF_3
0xa91	            0xeb05	                           jmp 0x4000ad8	       463	move.c	FUNCTION_6	IF_1	IF_3
0xa93	      0xb800000000	                              mov eax, 0	       465	move.c	FUNCTION_6
0xa98	        0x488b75f8	                mov rsi, qword [rbp - 8]	       466	move.c	FUNCTION_6
0xa9c	    0x644833342528	                xor rsi, qword fs:[0x28]	       466	move.c	FUNCTION_6
0xaa5	            0x7405	                            je 0x4000aec	       466	move.c	FUNCTION_6
0xaa7	      0xe800000000	                          call 0x4000aec	       466	move.c	FUNCTION_6
0xaac	              0xc9	                                   leave	       466	move.c	FUNCTION_6
0xaad	              0xc3	                                     ret	       466	move.c	FUNCTION_6
botline_forw	CALL,3:WHILE,0:SWITCH,0:functions,0:DO,0:IF,3:ELSE,3:FOR,0	63
0x2f0d	              0x55	                                push rbp	      1580	move.c	FUNCTION_40
0x2f0e	          0x4889e5	                            mov rbp, rsp	      1580	move.c	FUNCTION_40
0x2f11	              0x53	                                push rbx	      1580	move.c	FUNCTION_40
0x2f12	        0x4883ec18	                           sub rsp, 0x18	      1580	move.c	FUNCTION_40
0x2f16	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1580	move.c	FUNCTION_40
0x2f1a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1582	move.c	FUNCTION_40	IF_1	CALL_1
0x2f1e	          0x8b5808	                mov ebx, dword [rax + 8]	      1582	move.c	FUNCTION_40	IF_1	CALL_1
0x2f21	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1582	move.c	FUNCTION_40	IF_1	CALL_1
0x2f25	          0x488b00	                    mov rax, qword [rax]	      1582	move.c	FUNCTION_40	IF_1	CALL_1
0x2f28	        0x488d5001	                      lea rdx, [rax + 1]	      1582	move.c	FUNCTION_40	IF_1	CALL_1
0x2f2c	    0x488b05000000	            mov rax, qword [0x04002f73] 	      1582	move.c	FUNCTION_40	IF_1	CALL_1
0x2f33	          0x4889d6	                            mov rsi, rdx	      1582	move.c	FUNCTION_40	IF_1	CALL_1
0x2f36	          0x4889c7	                            mov rdi, rax	      1582	move.c	FUNCTION_40	IF_1	CALL_1
0x2f39	      0xe800000000	                          call 0x4002f7e	      1582	move.c	FUNCTION_40	IF_1	CALL_1
0x2f3e	            0x39c3	                            cmp ebx, eax	      1582	move.c	FUNCTION_40	IF_1	CALL_1
0x2f40	            0x7d21	                           jge 0x4002fa3	      1582	move.c	FUNCTION_40	IF_1	CALL_1
0x2f42	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1585	move.c	FUNCTION_40	IF_1
0x2f46	          0x8b4008	                mov eax, dword [rax + 8]	      1585	move.c	FUNCTION_40	IF_1
0x2f49	          0x8d5001	                      lea edx, [rax + 1]	      1585	move.c	FUNCTION_40	IF_1
0x2f4c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1585	move.c	FUNCTION_40	IF_1
0x2f50	          0x895008	                mov dword [rax + 8], edx	      1585	move.c	FUNCTION_40	IF_1
0x2f53	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1586	move.c	FUNCTION_40	IF_1
0x2f57	    0xc7400c010000	                mov dword [rax + 0xc], 1	      1586	move.c	FUNCTION_40	IF_1
0x2f5e	      0xe981000000	                           jmp 0x4003024	      1608	move.c	FUNCTION_40
0x2f63	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1591	move.c	FUNCTION_40	ELSE_1
0x2f67	          0x488b00	                    mov rax, qword [rax]	      1591	move.c	FUNCTION_40	ELSE_1
0x2f6a	        0x488d5001	                      lea rdx, [rax + 1]	      1591	move.c	FUNCTION_40	ELSE_1
0x2f6e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1591	move.c	FUNCTION_40	ELSE_1
0x2f72	          0x488910	                    mov qword [rax], rdx	      1591	move.c	FUNCTION_40	ELSE_1
0x2f75	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1593	move.c	FUNCTION_40	ELSE_1
0x2f79	    0xc74008000000	                  mov dword [rax + 8], 0	      1593	move.c	FUNCTION_40	ELSE_1
0x2f80	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1595	move.c	FUNCTION_40	ELSE_1	IF_2
0x2f84	          0x488b10	                    mov rdx, qword [rax]	      1595	move.c	FUNCTION_40	ELSE_1	IF_2
0x2f87	    0x488b05000000	            mov rax, qword [0x04002fce] 	      1595	move.c	FUNCTION_40	ELSE_1	IF_2
0x2f8e	          0x488b00	                    mov rax, qword [rax]	      1595	move.c	FUNCTION_40	ELSE_1	IF_2
0x2f91	          0x4839c2	                            cmp rdx, rax	      1595	move.c	FUNCTION_40	ELSE_1	IF_2
0x2f94	            0x7e0d	                           jle 0x4002fe3	      1595	move.c	FUNCTION_40	ELSE_1	IF_2
0x2f96	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1596	move.c	FUNCTION_40	ELSE_1	IF_2
0x2f9a	    0xc7400cffffff	      mov dword [rax + 0xc], 0x7fffffff 	      1596	move.c	FUNCTION_40	ELSE_1	IF_2
0x2fa1	            0xeb41	                           jmp 0x4003024	      1608	move.c	FUNCTION_40
0x2fa3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x2fa7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x2fab	          0x488b00	                    mov rax, qword [rax]	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x2fae	      0xbe00000000	                              mov esi, 0	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x2fb3	          0x4889c7	                            mov rdi, rax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x2fb6	      0xe800000000	                          call 0x4002ffb	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x2fbb	            0x85c0	                           test eax, eax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x2fbd	            0x740d	                            je 0x400300c	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x2fbf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1601	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x2fc3	    0xc7400c010000	                mov dword [rax + 0xc], 1	      1601	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x2fca	            0xeb18	                           jmp 0x4003024	      1608	move.c	FUNCTION_40
0x2fcc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1605	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x2fd0	          0x488b00	                    mov rax, qword [rax]	      1605	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x2fd3	          0x4889c7	                            mov rdi, rax	      1605	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x2fd6	      0xe800000000	                          call 0x400301b	      1605	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x2fdb	            0x89c2	                            mov edx, eax	      1605	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x2fdd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1605	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x2fe1	          0x89500c	              mov dword [rax + 0xc], edx	      1605	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x2fe4	              0x90	                                     nop	      1608	move.c	FUNCTION_40
0x2fe5	        0x4883c418	                           add rsp, 0x18	      1608	move.c	FUNCTION_40
0x2fe9	              0x5b	                                 pop rbx	      1608	move.c	FUNCTION_40
0x2fea	              0x5d	                                 pop rbp	      1608	move.c	FUNCTION_40
0x2feb	              0xc3	                                     ret	      1608	move.c	FUNCTION_40
changed_cline_bef_curs	CALL,0:WHILE,0:SWITCH,0:functions,0:DO,0:IF,0:ELSE,0:FOR,0	10
0xd02	              0x55	                                push rbp	       559	move.c	FUNCTION_12
0xd03	          0x4889e5	                            mov rbp, rsp	       559	move.c	FUNCTION_12
0xd06	    0x488b05000000	            mov rax, qword [0x04000d4d] 	       560	move.c	FUNCTION_12
0xd0d	    0x488b15000000	            mov rdx, qword [0x04000d54] 	       560	move.c	FUNCTION_12
0xd14	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	       560	move.c	FUNCTION_12
0xd1a	          0x80e270	                            and dl, 0x70	       560	move.c	FUNCTION_12
0xd1d	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       560	move.c	FUNCTION_12
0xd23	              0x90	                                     nop	       562	move.c	FUNCTION_12
0xd24	              0x5d	                                 pop rbp	       562	move.c	FUNCTION_12
0xd25	              0xc3	                                     ret	       562	move.c	FUNCTION_12
onepage	CALL,30:WHILE,1:SWITCH,0:functions,0:DO,0:IF,21:ELSE,9:FOR,1	438
0x4188	              0x55	                                push rbp	      2252	move.c	FUNCTION_48
0x4189	          0x4889e5	                            mov rbp, rsp	      2252	move.c	FUNCTION_48
0x418c	              0x53	                                push rbx	      2252	move.c	FUNCTION_48
0x418d	        0x4883ec58	                           sub rsp, 0x58	      2252	move.c	FUNCTION_48
0x4191	          0x897dac	             mov dword [rbp - 0x54], edi	      2252	move.c	FUNCTION_48
0x4194	        0x488975a0	             mov qword [rbp - 0x60], rsi	      2252	move.c	FUNCTION_48
0x4198	    0x64488b042528	                mov rax, qword fs:[0x28]	      2252	move.c	FUNCTION_48
0x41a1	        0x488945e8	             mov qword [rbp - 0x18], rax	      2252	move.c	FUNCTION_48
0x41a5	            0x31c0	                            xor eax, eax	      2252	move.c	FUNCTION_48
0x41a7	    0xc745bc010000	               mov dword [rbp - 0x44], 1	      2254	move.c	FUNCTION_48
0x41ae	    0x488b05000000	            mov rax, qword [0x040041f5] 	      2256	move.c	FUNCTION_48
0x41b5	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2256	move.c	FUNCTION_48
0x41b9	        0x488945c8	             mov qword [rbp - 0x38], rax	      2256	move.c	FUNCTION_48
0x41bd	    0x488b05000000	            mov rax, qword [0x04004204] 	      2258	move.c	FUNCTION_48	IF_1
0x41c4	          0x488b00	                    mov rax, qword [rax]	      2258	move.c	FUNCTION_48	IF_1
0x41c7	        0x4883f801	                              cmp rax, 1	      2258	move.c	FUNCTION_48	IF_1
0x41cb	     0xf85c5060000	                           jne 0x40048d6	      2258	move.c	FUNCTION_48	IF_1
0x41d1	      0xe800000000	                          call 0x4004216	      2260	move.c	FUNCTION_48	IF_1	CALL_1
0x41d6	      0xb800000000	                              mov eax, 0	      2261	move.c	FUNCTION_48	IF_1
0x41db	      0xe988070000	                           jmp 0x40049a8	      2261	move.c	FUNCTION_48	IF_1
0x41e0	      0xe800000000	                          call 0x4004225	      2266	move.c	FUNCTION_48	FOR_1	CALL_2
0x41e5	        0x837dac01	               cmp dword [rbp - 0x54], 1	      2273	move.c	FUNCTION_48	FOR_1	IF_2
0x41e9	            0x7555	                           jne 0x4004280	      2273	move.c	FUNCTION_48	FOR_1	IF_2
0x41eb	    0x488b05000000	            mov rax, qword [0x04004232] 	      2274	move.c	FUNCTION_48	FOR_1	IF_2
0x41f2	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2274	move.c	FUNCTION_48	FOR_1	IF_2
0x41f6	    0x488b05000000	            mov rax, qword [0x0400423d] 	      2274	move.c	FUNCTION_48	FOR_1	IF_2
0x41fd	          0x488b08	                    mov rcx, qword [rax]	      2274	move.c	FUNCTION_48	FOR_1	IF_2
0x4200	    0x488b05000000	            mov rax, qword [0x04004247] 	      2274	move.c	FUNCTION_48	FOR_1	IF_2
0x4207	          0x4829c1	                            sub rcx, rax	      2274	move.c	FUNCTION_48	FOR_1	IF_2
0x420a	          0x4889c8	                            mov rax, rcx	      2274	move.c	FUNCTION_48	FOR_1	IF_2
0x420d	          0x4839c2	                            cmp rdx, rax	      2275	move.c	FUNCTION_48	FOR_1	IF_2
0x4210	            0x7c24	                            jl 0x4004276	      2275	move.c	FUNCTION_48	FOR_1	IF_2
0x4212	    0x488b05000000	            mov rax, qword [0x04004259] 	      2275	move.c	FUNCTION_48	FOR_1	IF_2
0x4219	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      2275	move.c	FUNCTION_48	FOR_1	IF_2
0x4220	    0x488b05000000	            mov rax, qword [0x04004267] 	      2275	move.c	FUNCTION_48	FOR_1	IF_2
0x4227	          0x488b00	                    mov rax, qword [rax]	      2275	move.c	FUNCTION_48	FOR_1	IF_2
0x422a	          0x4839c2	                            cmp rdx, rax	      2275	move.c	FUNCTION_48	FOR_1	IF_2
0x422d	            0x7e07	                           jle 0x4004276	      2275	move.c	FUNCTION_48	FOR_1	IF_2
0x422f	      0xb801000000	                              mov eax, 1	      2275	move.c	FUNCTION_48	FOR_1	IF_2
0x4234	            0xeb05	                           jmp 0x400427b	      2275	move.c	FUNCTION_48	FOR_1	IF_2
0x4236	      0xb800000000	                              mov eax, 0	      2275	move.c	FUNCTION_48	FOR_1	IF_2
0x423b	          0x83e001	                              and eax, 1	      2273	move.c	FUNCTION_48	FOR_1	IF_2
0x423e	            0xeb4e	                           jmp 0x40042ce	      2273	move.c	FUNCTION_48	FOR_1	IF_2
0x4240	    0x488b05000000	            mov rax, qword [0x04004287] 	      2276	move.c	FUNCTION_48	FOR_1	IF_2
0x4247	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2276	move.c	FUNCTION_48	FOR_1	IF_2
0x424b	        0x4883f801	                              cmp rax, 1	      2278	move.c	FUNCTION_48	FOR_1	IF_2
0x424f	            0x7535	                           jne 0x40042c6	      2278	move.c	FUNCTION_48	FOR_1	IF_2
0x4251	    0x488b05000000	            mov rax, qword [0x04004298] 	      2278	move.c	FUNCTION_48	FOR_1	IF_2
0x4258	    0x8b9884000000	            mov ebx, dword [rax + 0x84] 	      2278	move.c	FUNCTION_48	FOR_1	IF_2
0x425e	    0x488b05000000	            mov rax, qword [0x040042a5] 	      2279	move.c	FUNCTION_48	FOR_1	IF_2	CALL_3
0x4265	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2279	move.c	FUNCTION_48	FOR_1	IF_2	CALL_3
0x4269	    0x488b05000000	            mov rax, qword [0x040042b0] 	      2279	move.c	FUNCTION_48	FOR_1	IF_2	CALL_3
0x4270	          0x4889d6	                            mov rsi, rdx	      2279	move.c	FUNCTION_48	FOR_1	IF_2	CALL_3
0x4273	          0x4889c7	                            mov rdi, rax	      2279	move.c	FUNCTION_48	FOR_1	IF_2	CALL_3
0x4276	      0xe800000000	                          call 0x40042bb	      2279	move.c	FUNCTION_48	FOR_1	IF_2	CALL_3
0x427b	            0x39c3	                            cmp ebx, eax	      2278	move.c	FUNCTION_48	FOR_1	IF_2
0x427d	            0x7507	                           jne 0x40042c6	      2278	move.c	FUNCTION_48	FOR_1	IF_2
0x427f	      0xb801000000	                              mov eax, 1	      2278	move.c	FUNCTION_48	FOR_1	IF_2
0x4284	            0xeb05	                           jmp 0x40042cb	      2278	move.c	FUNCTION_48	FOR_1	IF_2
0x4286	      0xb800000000	                              mov eax, 0	      2278	move.c	FUNCTION_48	FOR_1	IF_2
0x428b	          0x83e001	                              and eax, 1	      2273	move.c	FUNCTION_48	FOR_1	IF_2
0x428e	            0x84c0	                             test al, al	      2273	move.c	FUNCTION_48	FOR_1	IF_2
0x4290	            0x7411	                            je 0x40042e3	      2273	move.c	FUNCTION_48	FOR_1	IF_2
0x4292	      0xe800000000	                          call 0x40042d7	      2283	move.c	FUNCTION_48	FOR_1	IF_2	CALL_4
0x4297	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      2284	move.c	FUNCTION_48	FOR_1	IF_2
0x429e	      0xe9fe050000	                           jmp 0x40048e1	      2285	move.c	FUNCTION_48	FOR_1	IF_2
0x42a3	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      2289	move.c	FUNCTION_48	FOR_1
0x42aa	        0x837dac01	               cmp dword [rbp - 0x54], 1	      2291	move.c	FUNCTION_48	FOR_1	IF_3
0x42ae	     0xf85f1010000	                           jne 0x40044e5	      2291	move.c	FUNCTION_48	FOR_1	IF_3
0x42b4	    0x488b15000000	            mov rdx, qword [0x040042fb] 	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x42bb	    0x488b05000000	            mov rax, qword [0x04004302] 	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x42c2	          0x4839c2	                            cmp rdx, rax	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x42c5	     0xf85bb000000	                           jne 0x40043c6	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x42cb	    0x488b05000000	            mov rax, qword [0x04004312] 	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x42d2	          0x4885c0	                           test rax, rax	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x42d5	     0xf8eab000000	                           jle 0x40043c6	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x42db	    0x488b05000000	            mov rax, qword [0x04004322] 	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x42e2	        0x488d50ff	                      lea rdx, [rax - 1]	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x42e6	    0x488b05000000	            mov rax, qword [0x0400432d] 	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x42ed	          0x4839c2	                            cmp rdx, rax	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x42f0	     0xf8e90000000	                           jle 0x40043c6	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x42f6	    0x488b05000000	            mov rax, qword [0x0400433d] 	      2296	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x42fd	        0x4883f802	                              cmp rax, 2	      2296	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x4301	            0x7f15	                            jg 0x4004358	      2296	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x4303	    0x488b05000000	            mov rax, qword [0x0400434a] 	      2297	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x430a	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2297	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x430e	        0x4883c201	                              add rdx, 1	      2297	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x4312	        0x48895078	             mov qword [rax + 0x78], rdx	      2297	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x4316	            0xeb24	                           jmp 0x400437c	      2297	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x4318	    0x488b05000000	            mov rax, qword [0x0400435f] 	      2299	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	ELSE_1
0x431f	    0x488b15000000	            mov rdx, qword [0x04004366] 	      2299	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	ELSE_1
0x4326	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	      2299	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	ELSE_1
0x432a	    0x488b0d000000	            mov rcx, qword [0x04004371] 	      2299	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	ELSE_1
0x4331	        0x4883e902	                              sub rcx, 2	      2299	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	ELSE_1
0x4335	          0x4801ca	                            add rdx, rcx	      2299	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	ELSE_1
0x4338	        0x48895078	             mov qword [rax + 0x78], rdx	      2299	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	ELSE_1
0x433c	    0x488b05000000	            mov rax, qword [0x04004383] 	      2300	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x4343	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2300	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x4347	    0x488b05000000	            mov rax, qword [0x0400438e] 	      2300	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x434e	          0x488b00	                    mov rax, qword [rax]	      2300	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x4351	          0x4839c2	                            cmp rdx, rax	      2300	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x4354	            0x7e15	                           jle 0x40043ab	      2300	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x4356	    0x488b05000000	            mov rax, qword [0x0400439d] 	      2301	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x435d	    0x488b15000000	            mov rdx, qword [0x040043a4] 	      2301	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x4364	          0x488b12	                    mov rdx, qword [rdx]	      2301	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x4367	        0x48895078	             mov qword [rax + 0x78], rdx	      2301	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x436b	    0x488b05000000	            mov rax, qword [0x040043b2] 	      2302	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4372	    0x488b15000000	            mov rdx, qword [0x040043b9] 	      2302	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4379	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	      2302	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x437d	        0x48895038	             mov qword [rax + 0x38], rdx	      2302	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4381	      0xe90b050000	                           jmp 0x40048d1	      2302	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4386	    0x488b05000000	            mov rax, qword [0x040043cd] 	      2304	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x438d	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      2304	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x4394	    0x488b05000000	            mov rax, qword [0x040043db] 	      2304	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x439b	          0x488b00	                    mov rax, qword [rax]	      2304	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x439e	          0x4839c2	                            cmp rdx, rax	      2304	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x43a1	            0x7e48	                           jle 0x400442b	      2304	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x43a3	    0x488b05000000	            mov rax, qword [0x040043ea] 	      2307	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x43aa	    0x488b15000000	            mov rdx, qword [0x040043f1] 	      2307	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x43b1	          0x488b12	                    mov rdx, qword [rdx]	      2307	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x43b4	        0x48895078	             mov qword [rax + 0x78], rdx	      2307	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x43b8	    0x488b05000000	            mov rax, qword [0x040043ff] 	      2309	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x43bf	    0xc78084000000	               mov dword [rax + 0x84], 0	      2309	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x43c9	    0x488b05000000	            mov rax, qword [0x04004410] 	      2311	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x43d0	    0x488b15000000	            mov rdx, qword [0x04004417] 	      2311	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x43d7	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2311	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x43dd	          0x83e2ee	                     and edx, 0xffffffee	      2311	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x43e0	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2311	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x43e6	      0xe9a6040000	                           jmp 0x40048d1	      2311	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x43eb	    0x488b05000000	            mov rax, qword [0x04004432] 	      2317	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x43f2	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      2317	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x43f9	        0x488945d0	             mov qword [rbp - 0x30], rax	      2317	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x43fd	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2319	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x4401	    0x488b05000000	            mov rax, qword [0x04004448] 	      2319	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x4408	          0x4889d6	                            mov rsi, rdx	      2319	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x440b	          0x4889c7	                            mov rdi, rax	      2319	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x440e	      0xe800000000	                          call 0x4004453	      2319	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x4413	            0x89c2	                            mov edx, eax	      2319	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x4415	    0x488b05000000	            mov rax, qword [0x0400445c] 	      2320	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x441c	    0x8b80f4000000	            mov eax, dword [rax + 0xf4] 	      2320	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4422	            0x29c2	                            sub edx, eax	      2320	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4424	            0x89d0	                            mov eax, edx	      2320	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4426	          0x8945d8	             mov dword [rbp - 0x28], eax	      2319	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x4429	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2322	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_6
0x442d	      0xbeffffffff	                     mov esi, 0xffffffff	      2322	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_6
0x4432	          0x4889c7	                            mov rdi, rax	      2322	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_6
0x4435	      0xe849050000	             call sym.get_scroll_overlap	      2322	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_6
0x443a	    0x488b05000000	            mov rax, qword [0x04004481] 	      2323	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4441	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2323	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4445	        0x48895078	             mov qword [rax + 0x78], rdx	      2323	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4449	    0x488b05000000	            mov rax, qword [0x04004490] 	      2325	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4450	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      2325	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4453	    0x899084000000	             mov dword [rax + 0x84], edx	      2325	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4459	    0x488b05000000	            mov rax, qword [0x040044a0] 	      2326	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_7
0x4460	      0xbe00000000	                              mov esi, 0	      2326	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_7
0x4465	          0x4889c7	                            mov rdi, rax	      2326	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_7
0x4468	      0xe800000000	                          call 0x40044ad	      2326	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_7
0x446d	    0x488b05000000	            mov rax, qword [0x040044b4] 	      2328	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4474	    0x488b15000000	            mov rdx, qword [0x040044bb] 	      2328	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x447b	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	      2328	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x447f	        0x48895038	             mov qword [rax + 0x38], rdx	      2328	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4483	    0x488b05000000	            mov rax, qword [0x040044ca] 	      2329	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x448a	    0x488b15000000	            mov rdx, qword [0x040044d1] 	      2329	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4491	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2329	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4497	          0x83e284	                     and edx, 0xffffff84	      2329	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x449a	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2329	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x44a0	      0xe9ec030000	                           jmp 0x40048d1	      2329	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x44a5	    0x488b05000000	            mov rax, qword [0x040044ec] 	      2336	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x44ac	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2336	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x44b0	        0x4883f801	                              cmp rax, 1	      2336	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x44b4	            0x750a	                           jne 0x4004500	      2336	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x44b6	      0xe87ee5ffff	                    call sym.max_topfill	      2339	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8	CALL_8
0x44bb	      0xe9d1030000	                           jmp 0x40048d1	      2340	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x44c0	    0x488b15000000	            mov rdx, qword [0x04004507] 	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x44c7	    0x488b05000000	            mov rax, qword [0x0400450e] 	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x44ce	          0x4839c2	                            cmp rdx, rax	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x44d1	     0xf85ec000000	                           jne 0x4004603	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x44d7	    0x488b05000000	            mov rax, qword [0x0400451e] 	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x44de	          0x4885c0	                           test rax, rax	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x44e1	     0xf8edc000000	                           jle 0x4004603	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x44e7	    0x488b05000000	            mov rax, qword [0x0400452e] 	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x44ee	        0x488d50ff	                      lea rdx, [rax - 1]	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x44f2	    0x488b05000000	            mov rax, qword [0x04004539] 	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x44f9	          0x4839c2	                            cmp rdx, rax	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x44fc	     0xf8ec1000000	                           jle 0x4004603	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4502	    0x488b05000000	            mov rax, qword [0x04004549] 	      2346	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x4509	        0x4883f802	                              cmp rax, 2	      2346	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x450d	            0x7f15	                            jg 0x4004564	      2346	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x450f	    0x488b05000000	            mov rax, qword [0x04004556] 	      2347	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x4516	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2347	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x451a	        0x4883ea01	                              sub rdx, 1	      2347	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x451e	        0x48895078	             mov qword [rax + 0x78], rdx	      2347	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x4522	            0xeb24	                           jmp 0x4004588	      2347	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x4524	    0x488b05000000	            mov rax, qword [0x0400456b] 	      2349	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	ELSE_5
0x452b	    0x488b15000000	            mov rdx, qword [0x04004572] 	      2349	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	ELSE_5
0x4532	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	      2349	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	ELSE_5
0x4536	    0x488b0d000000	            mov rcx, qword [0x0400457d] 	      2349	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	ELSE_5
0x453d	        0x4883e902	                              sub rcx, 2	      2349	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	ELSE_5
0x4541	          0x4829ca	                            sub rdx, rcx	      2349	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	ELSE_5
0x4544	        0x48895078	             mov qword [rax + 0x78], rdx	      2349	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	ELSE_5
0x4548	    0x488b05000000	            mov rax, qword [0x0400458f] 	      2350	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x454f	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2350	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x4553	          0x4885c0	                           test rax, rax	      2350	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x4556	            0x7f0f	                            jg 0x40045a7	      2350	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x4558	    0x488b05000000	            mov rax, qword [0x0400459f] 	      2351	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x455f	    0x48c740780100	               mov qword [rax + 0x78], 1	      2351	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x4567	    0x488b05000000	            mov rax, qword [0x040045ae] 	      2352	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x456e	    0x488b15000000	            mov rdx, qword [0x040045b5] 	      2352	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4575	        0x488b4a78	            mov rcx, qword [rdx + 0x78] 	      2352	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4579	    0x488b15000000	            mov rdx, qword [0x040045c0] 	      2352	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4580	          0x4801ca	                            add rdx, rcx	      2352	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4583	        0x4883ea01	                              sub rdx, 1	      2352	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4587	        0x48895038	             mov qword [rax + 0x38], rdx	      2352	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x458b	    0x488b05000000	            mov rax, qword [0x040045d2] 	      2353	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x4592	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2353	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x4596	    0x488b05000000	            mov rax, qword [0x040045dd] 	      2353	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x459d	          0x488b00	                    mov rax, qword [rax]	      2353	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x45a0	          0x4839c2	                            cmp rdx, rax	      2353	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x45a3	     0xf8ee7020000	                           jle 0x40048d0	      2353	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x45a9	    0x488b05000000	            mov rax, qword [0x040045f0] 	      2354	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x45b0	    0x488b15000000	            mov rdx, qword [0x040045f7] 	      2354	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x45b7	          0x488b12	                    mov rdx, qword [rdx]	      2354	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x45ba	        0x48895038	             mov qword [rax + 0x38], rdx	      2354	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x45be	      0xe9cd020000	                           jmp 0x40048d0	      2355	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x45c3	    0x488b05000000	            mov rax, qword [0x0400460a] 	      2361	move.c	FUNCTION_48	FOR_1	ELSE_4
0x45ca	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2361	move.c	FUNCTION_48	FOR_1	ELSE_4
0x45ce	        0x4883e801	                              sub rax, 1	      2361	move.c	FUNCTION_48	FOR_1	ELSE_4
0x45d2	        0x488945d0	             mov qword [rbp - 0x30], rax	      2361	move.c	FUNCTION_48	FOR_1	ELSE_4
0x45d6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2363	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x45da	        0x488d5001	                      lea rdx, [rax + 1]	      2363	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x45de	    0x488b05000000	            mov rax, qword [0x04004625] 	      2363	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x45e5	          0x4889d6	                            mov rsi, rdx	      2363	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x45e8	          0x4889c7	                            mov rdi, rax	      2363	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x45eb	      0xe800000000	                          call 0x4004630	      2363	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x45f0	            0x89c2	                            mov edx, eax	      2363	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x45f2	    0x488b05000000	            mov rax, qword [0x04004639] 	      2364	move.c	FUNCTION_48	FOR_1	ELSE_4
0x45f9	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      2364	move.c	FUNCTION_48	FOR_1	ELSE_4
0x45ff	            0x29c2	                            sub edx, eax	      2364	move.c	FUNCTION_48	FOR_1	ELSE_4
0x4601	            0x89d0	                            mov eax, edx	      2364	move.c	FUNCTION_48	FOR_1	ELSE_4
0x4603	          0x8945d8	             mov dword [rbp - 0x28], eax	      2363	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x4606	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2366	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_10
0x460a	      0xbe01000000	                              mov esi, 1	      2366	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_10
0x460f	          0x4889c7	                            mov rdi, rax	      2366	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_10
0x4612	      0xe86c030000	             call sym.get_scroll_overlap	      2366	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_10
0x4617	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2368	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x461b	    0x488b05000000	            mov rax, qword [0x04004662] 	      2368	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x4622	          0x488b00	                    mov rax, qword [rax]	      2368	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x4625	          0x4839c2	                            cmp rdx, rax	      2368	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x4628	            0x7c17	                            jl 0x4004681	      2368	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x462a	    0x488b05000000	            mov rax, qword [0x04004671] 	      2370	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x4631	          0x488b00	                    mov rax, qword [rax]	      2370	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x4634	        0x488945d0	             mov qword [rbp - 0x30], rax	      2370	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x4638	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      2372	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x463f	            0xeb0c	                           jmp 0x400468d	      2372	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x4641	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2376	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_6	CALL_11
0x4645	          0x4889c7	                            mov rdi, rax	      2376	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_6	CALL_11
0x4648	      0xe89fe9ffff	                call sym.botline_topline	      2376	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_6	CALL_11
0x464d	    0x488b05000000	            mov rax, qword [0x04004694] 	      2379	move.c	FUNCTION_48	FOR_1	ELSE_4
0x4654	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2379	move.c	FUNCTION_48	FOR_1	ELSE_4
0x4658	        0x48895038	             mov qword [rax + 0x38], rdx	      2379	move.c	FUNCTION_48	FOR_1	ELSE_4
0x465c	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      2383	move.c	FUNCTION_48	FOR_1	ELSE_4
0x4664	            0xeb29	                           jmp 0x40046cf	      2384	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x4666	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2386	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	CALL_12
0x466a	          0x4889c7	                            mov rdi, rax	      2386	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	CALL_12
0x466d	      0xe8cae7ffff	                   call sym.topline_back	      2386	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	CALL_12
0x4672	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2387	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x4675	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      2387	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x467a	            0x750a	                           jne 0x40046c6	      2387	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x467c	    0x48c745c0ffff	      mov qword [rbp - 0x40], 0x7fffffff	      2388	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x4684	            0xeb09	                           jmp 0x40046cf	      2388	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x4686	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2390	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	ELSE_7
0x4689	            0x4898	                                    cdqe	      2390	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	ELSE_7
0x468b	        0x480145c0	            add qword [rbp - 0x40], rax 	      2390	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	ELSE_7
0x468f	    0x488b05000000	            mov rax, qword [0x040046d6] 	      2384	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x4696	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2384	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x469c	            0x4898	                                    cdqe	      2384	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x469e	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      2384	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x46a2	            0x7c09	                            jl 0x40046ed	      2384	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x46a4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2384	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x46a8	          0x4885c0	                           test rax, rax	      2384	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x46ab	            0x7fb9	                            jg 0x40046a6	      2384	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x46ad	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2392	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x46b1	          0x4885c0	                           test rax, rax	      2392	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x46b4	            0x7f36	                            jg 0x400472c	      2392	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x46b6	    0x488b05000000	            mov rax, qword [0x040046fd] 	      2394	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x46bd	    0x48c740780100	               mov qword [rax + 0x78], 1	      2394	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x46c5	      0xe86fe3ffff	                    call sym.max_topfill	      2396	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15	CALL_13
0x46ca	    0x488b05000000	            mov rax, qword [0x04004711] 	      2398	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x46d1	    0x488b15000000	            mov rdx, qword [0x04004718] 	      2398	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x46d8	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2398	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x46de	          0x83e2ce	                     and edx, 0xffffffce	      2398	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x46e1	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2398	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x46e7	      0xe9a5010000	                           jmp 0x40048d1	      2398	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x46ec	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2404	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_14
0x46f0	          0x4889c7	                            mov rdi, rax	      2404	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_14
0x46f3	      0xe850e9ffff	                call sym.topline_botline	      2404	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_14
0x46f8	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2406	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_15
0x46fc	          0x4889c7	                            mov rdi, rax	      2406	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_15
0x46ff	      0xe809e8ffff	                   call sym.botline_forw	      2406	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_15
0x4704	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2407	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_16
0x4708	          0x4889c7	                            mov rdi, rax	      2407	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_16
0x470b	      0xe8fde7ffff	                   call sym.botline_forw	      2407	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_16
0x4710	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2409	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_17
0x4714	          0x4889c7	                            mov rdi, rax	      2409	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_17
0x4717	      0xe8d0e8ffff	                call sym.botline_topline	      2409	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_17
0x471c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2413	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_18
0x4720	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      2413	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_18
0x4724	      0xba00000000	                              mov edx, 0	      2413	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_18
0x4729	          0x4889ce	                            mov rsi, rcx	      2413	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_18
0x472c	          0x4889c7	                            mov rdi, rax	      2413	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_18
0x472f	      0xe800000000	                          call 0x4004774	      2413	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_18
0x4734	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2418	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4738	    0x488b05000000	            mov rax, qword [0x0400477f] 	      2418	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x473f	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2418	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4743	          0x4839c2	                            cmp rdx, rax	      2418	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4746	     0xf8cf2000000	                            jl 0x400487e	      2418	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x474c	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2420	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4750	    0x488b05000000	            mov rax, qword [0x04004797] 	      2420	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4757	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2420	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x475b	          0x4839c2	                            cmp rdx, rax	      2420	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x475e	            0x7f18	                            jg 0x40047b8	      2420	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4760	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      2421	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4763	    0x488b05000000	            mov rax, qword [0x040047aa] 	      2421	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x476a	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      2421	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4770	            0x39c2	                            cmp edx, eax	      2421	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4772	     0xf8cc6000000	                            jl 0x400487e	      2421	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4778	    0x488b05000000	            mov rax, qword [0x040047bf] 	      2428	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x477f	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      2428	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4785	          0x8945d8	             mov dword [rbp - 0x28], eax	      2428	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4788	    0x488b05000000	            mov rax, qword [0x040047cf] 	      2429	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x478f	    0x8b9884000000	            mov ebx, dword [rax + 0x84] 	      2429	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x4795	    0x488b05000000	            mov rax, qword [0x040047dc] 	      2430	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17
0x479c	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2429	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x47a0	    0x488b05000000	            mov rax, qword [0x040047e7] 	      2429	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x47a7	          0x4889d6	                            mov rsi, rdx	      2429	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x47aa	          0x4889c7	                            mov rdi, rax	      2429	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x47ad	      0xe800000000	                          call 0x40047f2	      2429	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x47b2	            0x39c3	                            cmp ebx, eax	      2429	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x47b4	            0x7d05	                           jge 0x40047fb	      2429	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x47b6	      0xe87ee2ffff	                    call sym.max_topfill	      2431	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	CALL_20
0x47bb	    0x488b05000000	            mov rax, qword [0x04004802] 	      2432	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x47c2	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      2432	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x47c8	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2432	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x47cb	            0x39c2	                            cmp edx, eax	      2432	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x47cd	            0x7524	                           jne 0x4004833	      2432	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x47cf	    0x488b05000000	            mov rax, qword [0x04004816] 	      2435	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x47d6	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2435	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x47da	        0x4883ea01	                              sub rdx, 1	      2435	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x47de	        0x48895078	             mov qword [rax + 0x78], rdx	      2435	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x47e2	    0x488b05000000	            mov rax, qword [0x04004829] 	      2437	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x47e9	    0xc78084000000	               mov dword [rax + 0x84], 0	      2437	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x47f3	    0x488b05000000	            mov rax, qword [0x0400483a] 	      2440	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	CALL_21
0x47fa	          0x4889c7	                            mov rdi, rax	      2440	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	CALL_21
0x47fd	      0xe8feb7ffff	                   call sym.comp_botline	      2440	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	CALL_21
0x4802	    0x488b05000000	            mov rax, qword [0x04004849] 	      2441	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4809	    0x488b15000000	            mov rdx, qword [0x04004850] 	      2441	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4810	    0x488b92e80000	            mov rdx, qword [rdx + 0xe8] 	      2441	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4817	        0x4883ea01	                              sub rdx, 1	      2441	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x481b	        0x48895038	             mov qword [rax + 0x38], rdx	      2441	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x481f	    0x488b05000000	            mov rax, qword [0x04004866] 	      2442	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4826	    0x488b15000000	            mov rdx, qword [0x0400486d] 	      2442	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x482d	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2442	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4833	          0x83e2e4	                     and edx, 0xffffffe4	      2442	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4836	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2442	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x483c	            0xeb53	                           jmp 0x40048d1	      2442	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x483e	    0x488b05000000	            mov rax, qword [0x04004885] 	      2447	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x4845	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2447	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x4849	        0x48895078	             mov qword [rax + 0x78], rdx	      2447	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x484d	    0x488b05000000	            mov rax, qword [0x04004894] 	      2449	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x4854	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      2449	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x4857	    0x899084000000	             mov dword [rax + 0x84], edx	      2449	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x485d	    0x488b05000000	            mov rax, qword [0x040048a4] 	      2450	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9	CALL_22
0x4864	      0xbe00000000	                              mov esi, 0	      2450	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9	CALL_22
0x4869	          0x4889c7	                            mov rdi, rax	      2450	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9	CALL_22
0x486c	      0xe800000000	                          call 0x40048b1	      2450	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9	CALL_22
0x4871	    0x488b05000000	            mov rax, qword [0x040048b8] 	      2452	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x4878	    0x488b15000000	            mov rdx, qword [0x040048bf] 	      2452	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x487f	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2452	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x4885	          0x83e2ce	                     and edx, 0xffffffce	      2452	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x4888	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2452	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x488e	            0xeb01	                           jmp 0x40048d1	      2452	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x4890	              0x90	                                     nop	      2355	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4891	      0x48836da001	               sub qword [rbp - 0x60], 1	      2264	move.c	FUNCTION_48	FOR_1
0x4896	      0x48837da000	               cmp qword [rbp - 0x60], 0	      2264	move.c	FUNCTION_48	FOR_1
0x489b	     0xf8f3ff9ffff	                            jg 0x4004220	      2264	move.c	FUNCTION_48	FOR_1
0x48a1	      0xe800000000	                          call 0x40048e6	      2458	move.c	FUNCTION_48	CALL_23
0x48a6	      0xe800000000	                          call 0x40048eb	      2460	move.c	FUNCTION_48	CALL_24
0x48ab	      0xe800000000	                          call 0x40048f0	      2461	move.c	FUNCTION_48	CALL_25
0x48b0	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      2462	move.c	FUNCTION_48	IF_19
0x48b4	            0x750a	                           jne 0x4004900	      2462	move.c	FUNCTION_48	IF_19
0x48b6	      0xbf06000000	                              mov edi, 6	      2463	move.c	FUNCTION_48	CALL_26
0x48bb	      0xe800000000	                          call 0x4004900	      2463	move.c	FUNCTION_48	CALL_26
0x48c0	    0x488b05000000	            mov rax, qword [0x04004907] 	      2464	move.c	FUNCTION_48
0x48c7	    0x488b15000000	            mov rdx, qword [0x0400490e] 	      2464	move.c	FUNCTION_48
0x48ce	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2464	move.c	FUNCTION_48
0x48d4	          0x83e2f8	                     and edx, 0xfffffff8	      2464	move.c	FUNCTION_48
0x48d7	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2464	move.c	FUNCTION_48
0x48dd	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      2471	move.c	FUNCTION_48	IF_20	CALL_27
0x48e1	            0x7578	                           jne 0x400499b	      2471	move.c	FUNCTION_48	IF_20	CALL_27
0x48e3	        0x837dac01	               cmp dword [rbp - 0x54], 1	      2471	move.c	FUNCTION_48	IF_20	CALL_27
0x48e7	            0x7572	                           jne 0x400499b	      2471	move.c	FUNCTION_48	IF_20	CALL_27
0x48e9	      0xe8bec0ffff	               call sym.check_top_offset	      2471	move.c	FUNCTION_48	IF_20	CALL_27
0x48ee	            0x85c0	                           test eax, eax	      2471	move.c	FUNCTION_48	IF_20	CALL_27
0x48f0	            0x7469	                            je 0x400499b	      2471	move.c	FUNCTION_48	IF_20	CALL_27
0x48f2	      0xbe00000000	                              mov esi, 0	      2473	move.c	FUNCTION_48	IF_20	CALL_28
0x48f7	      0xbf01000000	                              mov edi, 1	      2473	move.c	FUNCTION_48	IF_20	CALL_28
0x48fc	      0xe800000000	                          call 0x4004941	      2473	move.c	FUNCTION_48	IF_20	CALL_28
0x4901	    0x488b05000000	            mov rax, qword [0x04004948] 	      2474	move.c	FUNCTION_48	IF_20	IF_21
0x4908	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2474	move.c	FUNCTION_48	IF_20	IF_21
0x490c	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2474	move.c	FUNCTION_48	IF_20	IF_21
0x4910	            0x7f49	                            jg 0x400499b	      2474	move.c	FUNCTION_48	IF_20	IF_21
0x4912	    0x488b05000000	            mov rax, qword [0x04004959] 	      2475	move.c	FUNCTION_48	IF_20	IF_21
0x4919	          0x488b00	                    mov rax, qword [rax]	      2475	move.c	FUNCTION_48	IF_20	IF_21
0x491c	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      2475	move.c	FUNCTION_48	IF_20	IF_21
0x4920	            0x7e39	                           jle 0x400499b	      2475	move.c	FUNCTION_48	IF_20	IF_21
0x4922	    0x488b05000000	            mov rax, qword [0x04004969] 	      2477	move.c	FUNCTION_48	IF_20	IF_21
0x4929	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2477	move.c	FUNCTION_48	IF_20	IF_21
0x492d	        0x4883c201	                              add rdx, 1	      2477	move.c	FUNCTION_48	IF_20	IF_21
0x4931	        0x48895078	             mov qword [rax + 0x78], rdx	      2477	move.c	FUNCTION_48	IF_20	IF_21
0x4935	    0x488b05000000	            mov rax, qword [0x0400497c] 	      2479	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x493c	        0x488d4878	                   lea rcx, [rax + 0x78]	      2479	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x4940	    0x488b05000000	            mov rax, qword [0x04004987] 	      2479	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x4947	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2479	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x494b	      0xba00000000	                              mov edx, 0	      2479	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x4950	          0x4889ce	                            mov rsi, rcx	      2479	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x4953	          0x4889c7	                            mov rdi, rax	      2479	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x4956	      0xe800000000	                          call 0x400499b	      2479	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x495b	      0xbf0a000000	                            mov edi, 0xa	      2484	move.c	FUNCTION_48	CALL_30
0x4960	      0xe800000000	                          call 0x40049a5	      2484	move.c	FUNCTION_48	CALL_30
0x4965	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      2485	move.c	FUNCTION_48
0x4968	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2486	move.c	FUNCTION_48
0x496c	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2486	move.c	FUNCTION_48
0x4975	            0x7405	                            je 0x40049bc	      2486	move.c	FUNCTION_48
0x4977	      0xe800000000	                          call 0x40049bc	      2486	move.c	FUNCTION_48
0x497c	        0x4883c458	                           add rsp, 0x58	      2486	move.c	FUNCTION_48
0x4980	              0x5b	                                 pop rbx	      2486	move.c	FUNCTION_48
0x4981	              0x5d	                                 pop rbp	      2486	move.c	FUNCTION_48
0x4982	              0xc3	                                     ret	      2486	move.c	FUNCTION_48
curwin_col_off2	CALL,1:WHILE,0:SWITCH,0:functions,0:DO,0:IF,0:ELSE,0:FOR,0	7
0x17fe	              0x55	                                push rbp	       917	move.c	FUNCTION_31
0x17ff	          0x4889e5	                            mov rbp, rsp	       917	move.c	FUNCTION_31
0x1802	    0x488b05000000	            mov rax, qword [0x04001849] 	       918	move.c	FUNCTION_31	CALL_1
0x1809	          0x4889c7	                            mov rdi, rax	       918	move.c	FUNCTION_31	CALL_1
0x180c	      0xe800000000	                          call 0x4001851	       918	move.c	FUNCTION_31	CALL_1
0x1811	              0x5d	                                 pop rbp	       919	move.c	FUNCTION_31
0x1812	              0xc3	                                     ret	       919	move.c	FUNCTION_31
curs_rows	CALL,10:WHILE,0:SWITCH,0:functions,0:DO,0:IF,14:ELSE,7:FOR,1	377
0xe89	              0x55	                                push rbp	       668	move.c	FUNCTION_23
0xe8a	          0x4889e5	                            mov rbp, rsp	       668	move.c	FUNCTION_23
0xe8d	        0x4883ec30	                           sub rsp, 0x30	       668	move.c	FUNCTION_23
0xe91	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       668	move.c	FUNCTION_23
0xe95	      0xe800000000	                          call 0x4000eda	       678	move.c	FUNCTION_23	CALL_1
0xe9a	            0x85c0	                           test eax, eax	       680	move.c	FUNCTION_23
0xe9c	            0x7429	                            je 0x4000f07	       680	move.c	FUNCTION_23
0xe9e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       679	move.c	FUNCTION_23
0xea2	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	       679	move.c	FUNCTION_23
0xea8	            0x85c0	                           test eax, eax	       679	move.c	FUNCTION_23
0xeaa	            0x741b	                            je 0x4000f07	       679	move.c	FUNCTION_23
0xeac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       680	move.c	FUNCTION_23
0xeb0	    0x488b80000100	           mov rax, qword [rax + 0x100] 	       680	move.c	FUNCTION_23
0xeb7	          0x488b10	                    mov rdx, qword [rax]	       680	move.c	FUNCTION_23
0xeba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       680	move.c	FUNCTION_23
0xebe	        0x488b4078	            mov rax, qword [rax + 0x78] 	       680	move.c	FUNCTION_23
0xec2	          0x4839c2	                            cmp rdx, rax	       680	move.c	FUNCTION_23
0xec5	            0x7e07	                           jle 0x4000f0e	       680	move.c	FUNCTION_23
0xec7	      0xb801000000	                              mov eax, 1	       680	move.c	FUNCTION_23
0xecc	            0xeb05	                           jmp 0x4000f13	       680	move.c	FUNCTION_23
0xece	      0xb800000000	                              mov eax, 0	       680	move.c	FUNCTION_23
0xed3	          0x8945ec	             mov dword [rbp - 0x14], eax	       678	move.c	FUNCTION_23	CALL_1
0xed6	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       681	move.c	FUNCTION_23
0xedd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       682	move.c	FUNCTION_23
0xee1	    0xc780d4000000	               mov dword [rax + 0xd4], 0	       682	move.c	FUNCTION_23
0xeeb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       683	move.c	FUNCTION_23	FOR_1
0xeef	        0x488b4078	            mov rax, qword [rax + 0x78] 	       683	move.c	FUNCTION_23	FOR_1
0xef3	        0x488945f0	             mov qword [rbp - 0x10], rax	       683	move.c	FUNCTION_23	FOR_1
0xef7	      0xe9fe020000	                           jmp 0x400123a	       683	move.c	FUNCTION_23	FOR_1
0xefc	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       685	move.c	FUNCTION_23	FOR_1
0xf03	        0x837dec00	               cmp dword [rbp - 0x14], 0	       686	move.c	FUNCTION_23	FOR_1	IF_1
0xf07	     0xf8554010000	                           jne 0x40010a1	       686	move.c	FUNCTION_23	FOR_1	IF_1
0xf0d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       686	move.c	FUNCTION_23	FOR_1	IF_1
0xf11	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	       686	move.c	FUNCTION_23	FOR_1	IF_1
0xf17	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       686	move.c	FUNCTION_23	FOR_1	IF_1
0xf1a	     0xf8e41010000	                           jle 0x40010a1	       686	move.c	FUNCTION_23	FOR_1	IF_1
0xf20	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf24	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf2b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf2e	          0x4863d0	                         movsxd rdx, eax	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf31	          0x4889d0	                            mov rax, rdx	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf34	          0x4801c0	                            add rax, rax	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf37	          0x4801d0	                            add rax, rdx	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf3a	        0x48c1e003	                              shl rax, 3	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf3e	          0x4801c8	                            add rax, rcx	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf41	          0x488b00	                    mov rax, qword [rax]	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf44	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf48	     0xf8ca7020000	                            jl 0x4001235	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf4e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf52	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf59	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf5c	          0x4863d0	                         movsxd rdx, eax	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf5f	          0x4889d0	                            mov rax, rdx	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf62	          0x4801c0	                            add rax, rax	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf65	          0x4801d0	                            add rax, rdx	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf68	        0x48c1e003	                              shl rax, 3	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf6c	          0x4801c8	                            add rax, rcx	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf6f	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf73	            0x84c0	                             test al, al	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf75	     0xf847a020000	                            je 0x4001235	       688	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0xf7b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0xf7f	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0xf86	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0xf89	          0x4863d0	                         movsxd rdx, eax	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0xf8c	          0x4889d0	                            mov rax, rdx	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0xf8f	          0x4801c0	                            add rax, rax	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0xf92	          0x4801d0	                            add rax, rdx	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0xf95	        0x48c1e003	                              shl rax, 3	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0xf99	          0x4801c8	                            add rax, rcx	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0xf9c	          0x488b00	                    mov rax, qword [rax]	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0xf9f	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0xfa3	     0xf858a000000	                           jne 0x4001073	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0xfa9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       695	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0xfad	        0x488b4008	                mov rax, qword [rax + 8]	       695	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0xfb1	    0x8b80fc000000	            mov eax, dword [rax + 0xfc] 	       695	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0xfb7	            0x85c0	                           test eax, eax	       695	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0xfb9	            0x746f	                            je 0x400106a	       695	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0xfbb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       696	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0xfbf	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       696	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0xfc6	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       696	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0xfc9	          0x4863d0	                         movsxd rdx, eax	       696	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0xfcc	          0x4889d0	                            mov rax, rdx	       696	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0xfcf	          0x4801c0	                            add rax, rax	       696	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0xfd2	          0x4801d0	                            add rax, rdx	       696	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0xfd5	        0x48c1e003	                              shl rax, 3	       696	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0xfd9	          0x4801c8	                            add rax, rcx	       696	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0xfdc	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       696	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0xfe0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       696	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0xfe4	        0x488b4038	            mov rax, qword [rax + 0x38] 	       696	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0xfe8	          0x4839c2	                            cmp rdx, rax	       696	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0xfeb	            0x7c3d	                            jl 0x400106a	       696	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0xfed	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       697	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0xff1	        0x488b4008	                mov rax, qword [rax + 8]	       697	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0xff5	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       697	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0xffc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       698	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x1000	    0x488bb0000100	           mov rsi, qword [rax + 0x100] 	       698	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x1007	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       698	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x100a	          0x4863d0	                         movsxd rdx, eax	       698	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x100d	          0x4889d0	                            mov rax, rdx	       698	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x1010	          0x4801c0	                            add rax, rax	       698	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x1013	          0x4801d0	                            add rax, rdx	       698	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x1016	        0x48c1e003	                              shl rax, 3	       698	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x101a	          0x4801f0	                            add rax, rsi	       698	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x101d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       698	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x1021	        0x4883c001	                              add rax, 1	       698	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x1025	          0x4839c1	                            cmp rcx, rax	       697	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x1028	            0x7e37	                           jle 0x40010a1	       697	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x102a	    0xc745e8010000	               mov dword [rbp - 0x18], 1	       700	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x1031	            0xeb2e	                           jmp 0x40010a1	       700	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x1033	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       702	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x1037	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       702	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x103e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       702	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x1041	          0x4863d0	                         movsxd rdx, eax	       702	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x1044	          0x4889d0	                            mov rax, rdx	       702	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x1047	          0x4801c0	                            add rax, rax	       702	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x104a	          0x4801d0	                            add rax, rdx	       702	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x104d	        0x48c1e003	                              shl rax, 3	       702	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x1051	          0x4801c8	                            add rax, rcx	       702	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x1054	          0x488b00	                    mov rax, qword [rax]	       702	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x1057	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       702	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x105b	            0x7e04	                           jle 0x40010a1	       702	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x105d	        0x836de401	               sub dword [rbp - 0x1c], 1	       703	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x1061	        0x837de800	               cmp dword [rbp - 0x18], 0	       705	move.c	FUNCTION_23	FOR_1	IF_6
0x1065	     0xf84a3000000	                            je 0x400114e	       705	move.c	FUNCTION_23	FOR_1	IF_6
0x106b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       707	move.c	FUNCTION_23	FOR_1	IF_6
0x106f	        0x488b4078	            mov rax, qword [rax + 0x78] 	       707	move.c	FUNCTION_23	FOR_1	IF_6
0x1073	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       707	move.c	FUNCTION_23	FOR_1	IF_6
0x1077	            0x7512	                           jne 0x40010cb	       707	move.c	FUNCTION_23	FOR_1	IF_6
0x1079	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       707	move.c	FUNCTION_23	FOR_1	IF_6
0x107d	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	       707	move.c	FUNCTION_23	FOR_1	IF_6
0x1083	            0x85c0	                           test eax, eax	       707	move.c	FUNCTION_23	FOR_1	IF_6
0x1085	     0xf8583000000	                           jne 0x400114e	       707	move.c	FUNCTION_23	FOR_1	IF_6
0x108b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       712	move.c	FUNCTION_23	FOR_1	IF_6
0x108f	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       712	move.c	FUNCTION_23	FOR_1	IF_6
0x1096	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       712	move.c	FUNCTION_23	FOR_1	IF_6
0x1099	          0x4863d0	                         movsxd rdx, eax	       712	move.c	FUNCTION_23	FOR_1	IF_6
0x109c	          0x4889d0	                            mov rax, rdx	       712	move.c	FUNCTION_23	FOR_1	IF_6
0x109f	          0x4801c0	                            add rax, rax	       712	move.c	FUNCTION_23	FOR_1	IF_6
0x10a2	          0x4801d0	                            add rax, rdx	       712	move.c	FUNCTION_23	FOR_1	IF_6
0x10a5	        0x48c1e003	                              shl rax, 3	       712	move.c	FUNCTION_23	FOR_1	IF_6
0x10a9	          0x4801c8	                            add rax, rcx	       712	move.c	FUNCTION_23	FOR_1	IF_6
0x10ac	        0x488b4010	            mov rax, qword [rax + 0x10] 	       712	move.c	FUNCTION_23	FOR_1	IF_6
0x10b0	        0x4883c001	                              add rax, 1	       712	move.c	FUNCTION_23	FOR_1	IF_6
0x10b4	        0x488945f0	             mov qword [rbp - 0x10], rax	       712	move.c	FUNCTION_23	FOR_1	IF_6
0x10b8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       714	move.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x10bc	        0x488b4038	            mov rax, qword [rax + 0x38] 	       714	move.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x10c0	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       714	move.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x10c4	     0xf8c44010000	                            jl 0x400124e	       714	move.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x10ca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       719	move.c	FUNCTION_23	FOR_1	IF_6
0x10ce	    0x8b88d4000000	            mov ecx, dword [rax + 0xd4] 	       719	move.c	FUNCTION_23	FOR_1	IF_6
0x10d4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       719	move.c	FUNCTION_23	FOR_1	IF_6
0x10d8	    0x488bb0000100	           mov rsi, qword [rax + 0x100] 	       719	move.c	FUNCTION_23	FOR_1	IF_6
0x10df	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       719	move.c	FUNCTION_23	FOR_1	IF_6
0x10e2	          0x4863d0	                         movsxd rdx, eax	       719	move.c	FUNCTION_23	FOR_1	IF_6
0x10e5	          0x4889d0	                            mov rax, rdx	       719	move.c	FUNCTION_23	FOR_1	IF_6
0x10e8	          0x4801c0	                            add rax, rax	       719	move.c	FUNCTION_23	FOR_1	IF_6
0x10eb	          0x4801d0	                            add rax, rdx	       719	move.c	FUNCTION_23	FOR_1	IF_6
0x10ee	        0x48c1e003	                              shl rax, 3	       719	move.c	FUNCTION_23	FOR_1	IF_6
0x10f2	          0x4801f0	                            add rax, rsi	       719	move.c	FUNCTION_23	FOR_1	IF_6
0x10f5	         0xfb74008	               movzx eax, word [rax + 8]	       719	move.c	FUNCTION_23	FOR_1	IF_6
0x10f9	           0xfb7c0	                           movzx eax, ax	       719	move.c	FUNCTION_23	FOR_1	IF_6
0x10fc	          0x8d1401	                    lea edx, [rcx + rax]	       719	move.c	FUNCTION_23	FOR_1	IF_6
0x10ff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       719	move.c	FUNCTION_23	FOR_1	IF_6
0x1103	    0x8990d4000000	             mov dword [rax + 0xd4], edx	       719	move.c	FUNCTION_23	FOR_1	IF_6
0x1109	      0xe9e8000000	                           jmp 0x4001236	       719	move.c	FUNCTION_23	FOR_1	IF_6
0x110e	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       724	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x1112	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       724	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x1116	      0xba00000000	                              mov edx, 0	       724	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x111b	          0x4889ce	                            mov rsi, rcx	       724	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x111e	          0x4889c7	                            mov rdi, rax	       724	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x1121	      0xe800000000	                          call 0x4001166	       724	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x1126	        0x488945f8	                mov qword [rbp - 8], rax	       724	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x112a	      0x48837df800	                  cmp qword [rbp - 8], 0	       725	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x112f	            0x7436	                            je 0x40011a7	       725	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x1131	        0x488b45f8	                mov rax, qword [rbp - 8]	       727	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x1135	        0x480145f0	            add qword [rbp - 0x10], rax 	       727	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x1139	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       728	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8	IF_9
0x113d	        0x488b4038	            mov rax, qword [rax + 0x38] 	       728	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8	IF_9
0x1141	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       728	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8	IF_9
0x1145	     0xf8cc6000000	                            jl 0x4001251	       728	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8	IF_9
0x114b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x114f	    0x8b80d4000000	            mov eax, dword [rax + 0xd4] 	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x1155	          0x8d5001	                      lea edx, [rax + 1]	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x1158	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x115c	    0x8990d4000000	             mov dword [rax + 0xd4], edx	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x1162	      0xe98f000000	                           jmp 0x4001236	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x1167	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       735	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10
0x116b	        0x488b4078	            mov rax, qword [rax + 0x78] 	       735	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10
0x116f	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       735	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10
0x1173	            0x7546	                           jne 0x40011fb	       735	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10
0x1175	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       736	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x1179	        0x488d5001	                      lea rdx, [rax + 1]	       736	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x117d	        0x488955f0	             mov qword [rbp - 0x10], rdx	       736	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x1181	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       736	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x1185	      0xba01000000	                              mov edx, 1	       736	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x118a	          0x4889c6	                            mov rsi, rax	       736	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x118d	          0x4889cf	                            mov rdi, rcx	       736	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x1190	      0xe800000000	                          call 0x40011d5	       736	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x1195	            0x89c2	                            mov edx, eax	       736	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x1197	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       737	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10
0x119b	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	       737	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10
0x11a1	             0x1c2	                            add edx, eax	       737	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10
0x11a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       736	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x11a7	    0x8b80d4000000	            mov eax, dword [rax + 0xd4] 	       736	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x11ad	             0x1c2	                            add edx, eax	       736	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x11af	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       736	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x11b3	    0x8990d4000000	             mov dword [rax + 0xd4], edx	       736	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x11b9	            0xeb3b	                           jmp 0x4001236	       736	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x11bb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       740	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x11bf	        0x488d5001	                      lea rdx, [rax + 1]	       740	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x11c3	        0x488955f0	             mov qword [rbp - 0x10], rdx	       740	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x11c7	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       740	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x11cb	      0xba01000000	                              mov edx, 1	       740	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x11d0	          0x4889c6	                            mov rsi, rax	       740	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x11d3	          0x4889cf	                            mov rdi, rcx	       740	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x11d6	      0xe800000000	                          call 0x400121b	       740	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x11db	            0x89c2	                            mov edx, eax	       740	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x11dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       740	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x11e1	    0x8b80d4000000	            mov eax, dword [rax + 0xd4] 	       740	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x11e7	             0x1c2	                            add edx, eax	       740	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x11e9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       740	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x11ed	    0x8990d4000000	             mov dword [rax + 0xd4], edx	       740	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x11f3	            0xeb01	                           jmp 0x4001236	       740	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x11f5	              0x90	                                     nop	       689	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x11f6	        0x8345e401	               add dword [rbp - 0x1c], 1	       683	move.c	FUNCTION_23	FOR_1
0x11fa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       683	move.c	FUNCTION_23	FOR_1
0x11fe	        0x488b4038	            mov rax, qword [rax + 0x38] 	       683	move.c	FUNCTION_23	FOR_1
0x1202	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       683	move.c	FUNCTION_23	FOR_1
0x1206	     0xf8ff0fcffff	                            jg 0x4000f3c	       683	move.c	FUNCTION_23	FOR_1
0x120c	            0xeb04	                           jmp 0x4001252	       683	move.c	FUNCTION_23	FOR_1
0x120e	              0x90	                                     nop	       715	move.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x120f	            0xeb01	                           jmp 0x4001252	       715	move.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x1211	              0x90	                                     nop	       729	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8	IF_9
0x1212	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       744	move.c	FUNCTION_23	CALL_5
0x1216	          0x4889c7	                            mov rdi, rax	       744	move.c	FUNCTION_23	CALL_5
0x1219	      0xe800000000	                          call 0x400125e	       744	move.c	FUNCTION_23	CALL_5
0x121e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       745	move.c	FUNCTION_23	IF_11
0x1222	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       745	move.c	FUNCTION_23	IF_11
0x1228	          0x83e008	                              and eax, 8	       745	move.c	FUNCTION_23	IF_11
0x122b	            0x85c0	                           test eax, eax	       745	move.c	FUNCTION_23	IF_11
0x122d	     0xf85f1010000	                           jne 0x4001464	       745	move.c	FUNCTION_23	IF_11
0x1233	        0x837dec00	               cmp dword [rbp - 0x14], 0	       747	move.c	FUNCTION_23	IF_11	IF_12
0x1237	     0xf8580000000	                           jne 0x40012fd	       747	move.c	FUNCTION_23	IF_11	IF_12
0x123d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       748	move.c	FUNCTION_23	IF_11	IF_12
0x1241	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	       748	move.c	FUNCTION_23	IF_11	IF_12
0x1247	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       748	move.c	FUNCTION_23	IF_11	IF_12
0x124a	            0x7471	                            je 0x40012fd	       748	move.c	FUNCTION_23	IF_11	IF_12
0x124c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       749	move.c	FUNCTION_23	IF_11	IF_12
0x1250	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	       749	move.c	FUNCTION_23	IF_11	IF_12
0x1256	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       749	move.c	FUNCTION_23	IF_11	IF_12
0x1259	     0xf8e0c010000	                           jle 0x40013ab	       749	move.c	FUNCTION_23	IF_11	IF_12
0x125f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       750	move.c	FUNCTION_23	IF_11	IF_12
0x1263	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       750	move.c	FUNCTION_23	IF_11	IF_12
0x126a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       750	move.c	FUNCTION_23	IF_11	IF_12
0x126d	          0x4863d0	                         movsxd rdx, eax	       750	move.c	FUNCTION_23	IF_11	IF_12
0x1270	          0x4889d0	                            mov rax, rdx	       750	move.c	FUNCTION_23	IF_11	IF_12
0x1273	          0x4801c0	                            add rax, rax	       750	move.c	FUNCTION_23	IF_11	IF_12
0x1276	          0x4801d0	                            add rax, rdx	       750	move.c	FUNCTION_23	IF_11	IF_12
0x1279	        0x48c1e003	                              shl rax, 3	       750	move.c	FUNCTION_23	IF_11	IF_12
0x127d	          0x4801c8	                            add rax, rcx	       750	move.c	FUNCTION_23	IF_11	IF_12
0x1280	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	       750	move.c	FUNCTION_23	IF_11	IF_12
0x1284	            0x84c0	                             test al, al	       750	move.c	FUNCTION_23	IF_11	IF_12
0x1286	            0x7435	                            je 0x40012fd	       750	move.c	FUNCTION_23	IF_11	IF_12
0x1288	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       751	move.c	FUNCTION_23	IF_11	IF_12
0x128c	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       751	move.c	FUNCTION_23	IF_11	IF_12
0x1293	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       751	move.c	FUNCTION_23	IF_11	IF_12
0x1296	          0x4863d0	                         movsxd rdx, eax	       751	move.c	FUNCTION_23	IF_11	IF_12
0x1299	          0x4889d0	                            mov rax, rdx	       751	move.c	FUNCTION_23	IF_11	IF_12
0x129c	          0x4801c0	                            add rax, rax	       751	move.c	FUNCTION_23	IF_11	IF_12
0x129f	          0x4801d0	                            add rax, rdx	       751	move.c	FUNCTION_23	IF_11	IF_12
0x12a2	        0x48c1e003	                              shl rax, 3	       751	move.c	FUNCTION_23	IF_11	IF_12
0x12a6	          0x4801c8	                            add rax, rcx	       751	move.c	FUNCTION_23	IF_11	IF_12
0x12a9	          0x488b10	                    mov rdx, qword [rax]	       751	move.c	FUNCTION_23	IF_11	IF_12
0x12ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       751	move.c	FUNCTION_23	IF_11	IF_12
0x12b0	        0x488b4038	            mov rax, qword [rax + 0x38] 	       751	move.c	FUNCTION_23	IF_11	IF_12
0x12b4	          0x4839c2	                            cmp rdx, rax	       751	move.c	FUNCTION_23	IF_11	IF_12
0x12b7	     0xf84ae000000	                            je 0x40013ab	       751	move.c	FUNCTION_23	IF_11	IF_12
0x12bd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       754	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x12c1	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       754	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x12c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       754	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x12c9	        0x488b4078	            mov rax, qword [rax + 0x78] 	       754	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x12cd	          0x4839c2	                            cmp rdx, rax	       754	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x12d0	            0x7536	                           jne 0x4001348	       754	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x12d2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       755	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x12d6	        0x488b4838	            mov rcx, qword [rax + 0x38] 	       755	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x12da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       755	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x12de	      0xba01000000	                              mov edx, 1	       755	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x12e3	          0x4889ce	                            mov rsi, rcx	       755	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x12e6	          0x4889c7	                            mov rdi, rax	       755	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x12e9	      0xe800000000	                          call 0x400132e	       755	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x12ee	            0x89c2	                            mov edx, eax	       755	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x12f0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       756	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x12f4	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	       756	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x12fa	             0x1c2	                            add edx, eax	       756	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x12fc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       755	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x1300	    0x8990cc000000	             mov dword [rax + 0xcc], edx	       755	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x1306	            0xeb28	                           jmp 0x4001370	       755	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x1308	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       759	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x130c	        0x488b4838	            mov rcx, qword [rax + 0x38] 	       759	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x1310	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       759	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x1314	      0xba01000000	                              mov edx, 1	       759	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x1319	          0x4889ce	                            mov rsi, rcx	       759	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x131c	          0x4889c7	                            mov rdi, rax	       759	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x131f	      0xe800000000	                          call 0x4001364	       759	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x1324	            0x89c2	                            mov edx, eax	       759	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x1326	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       759	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x132a	    0x8990cc000000	             mov dword [rax + 0xcc], edx	       759	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x1330	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       761	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x1334	        0x488b7038	            mov rsi, qword [rax + 0x38] 	       761	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x1338	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       761	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x133c	    0x41b900000000	                              mov r9d, 0	       761	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x1342	    0x41b801000000	                              mov r8d, 1	       761	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x1348	      0xb900000000	                              mov ecx, 0	       761	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x134d	      0xba00000000	                              mov edx, 0	       761	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x1352	          0x4889c7	                            mov rdi, rax	       761	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x1355	      0xe800000000	                          call 0x400139a	       761	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x135a	            0x89c2	                            mov edx, eax	       761	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x135c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       761	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x1360	    0x8990d0000000	             mov dword [rax + 0xd0], edx	       761	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x1366	      0xe9b9000000	                           jmp 0x4001464	       761	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x136b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       765	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x136f	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	       765	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x1375	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       765	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x1378	            0x7d46	                           jge 0x4001400	       765	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x137a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       768	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x137e	    0xc780cc000000	               mov dword [rax + 0xcc], 0	       768	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x1388	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       770	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x138c	        0x488b7038	            mov rsi, qword [rax + 0x38] 	       770	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x1390	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       770	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x1394	    0x41b900000000	                              mov r9d, 0	       770	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x139a	    0x41b801000000	                              mov r8d, 1	       770	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x13a0	      0xb900000000	                              mov ecx, 0	       770	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x13a5	      0xba00000000	                              mov edx, 0	       770	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x13aa	          0x4889c7	                            mov rdi, rax	       770	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x13ad	      0xe800000000	                          call 0x40013f2	       770	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x13b2	            0x89c2	                            mov edx, eax	       770	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x13b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       770	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x13b8	    0x8990d0000000	             mov dword [rax + 0xd0], edx	       770	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x13be	            0xeb64	                           jmp 0x4001464	       770	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x13c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       776	move.c	FUNCTION_23	IF_11	ELSE_7
0x13c4	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       776	move.c	FUNCTION_23	IF_11	ELSE_7
0x13cb	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       776	move.c	FUNCTION_23	IF_11	ELSE_7
0x13ce	          0x4863d0	                         movsxd rdx, eax	       776	move.c	FUNCTION_23	IF_11	ELSE_7
0x13d1	          0x4889d0	                            mov rax, rdx	       776	move.c	FUNCTION_23	IF_11	ELSE_7
0x13d4	          0x4801c0	                            add rax, rax	       776	move.c	FUNCTION_23	IF_11	ELSE_7
0x13d7	          0x4801d0	                            add rax, rdx	       776	move.c	FUNCTION_23	IF_11	ELSE_7
0x13da	        0x48c1e003	                              shl rax, 3	       776	move.c	FUNCTION_23	IF_11	ELSE_7
0x13de	          0x4801c8	                            add rax, rcx	       776	move.c	FUNCTION_23	IF_11	ELSE_7
0x13e1	         0xfb74008	               movzx eax, word [rax + 8]	       776	move.c	FUNCTION_23	IF_11	ELSE_7
0x13e5	           0xfb7d0	                           movzx edx, ax	       776	move.c	FUNCTION_23	IF_11	ELSE_7
0x13e8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       776	move.c	FUNCTION_23	IF_11	ELSE_7
0x13ec	    0x8990cc000000	             mov dword [rax + 0xcc], edx	       776	move.c	FUNCTION_23	IF_11	ELSE_7
0x13f2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       778	move.c	FUNCTION_23	IF_11	ELSE_7
0x13f6	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       778	move.c	FUNCTION_23	IF_11	ELSE_7
0x13fd	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       778	move.c	FUNCTION_23	IF_11	ELSE_7
0x1400	          0x4863d0	                         movsxd rdx, eax	       778	move.c	FUNCTION_23	IF_11	ELSE_7
0x1403	          0x4889d0	                            mov rax, rdx	       778	move.c	FUNCTION_23	IF_11	ELSE_7
0x1406	          0x4801c0	                            add rax, rax	       778	move.c	FUNCTION_23	IF_11	ELSE_7
0x1409	          0x4801d0	                            add rax, rdx	       778	move.c	FUNCTION_23	IF_11	ELSE_7
0x140c	        0x48c1e003	                              shl rax, 3	       778	move.c	FUNCTION_23	IF_11	ELSE_7
0x1410	          0x4801c8	                            add rax, rcx	       778	move.c	FUNCTION_23	IF_11	ELSE_7
0x1413	         0xfb6400b	            movzx eax, byte [rax + 0xb] 	       778	move.c	FUNCTION_23	IF_11	ELSE_7
0x1417	           0xfbed0	                           movsx edx, al	       778	move.c	FUNCTION_23	IF_11	ELSE_7
0x141a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       778	move.c	FUNCTION_23	IF_11	ELSE_7
0x141e	    0x8990d0000000	             mov dword [rax + 0xd0], edx	       778	move.c	FUNCTION_23	IF_11	ELSE_7
0x1424	    0x488b05000000	            mov rax, qword [0x0400146b] 	       783	move.c	FUNCTION_23	CALL_10
0x142b	          0x4889c7	                            mov rdi, rax	       783	move.c	FUNCTION_23	CALL_10
0x142e	      0xe8d6edffff	          call sym.redraw_for_cursorline	       783	move.c	FUNCTION_23	CALL_10
0x1433	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       784	move.c	FUNCTION_23
0x1437	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       784	move.c	FUNCTION_23
0x143d	          0x83c818	                            or eax, 0x18	       784	move.c	FUNCTION_23
0x1440	            0x89c2	                            mov edx, eax	       784	move.c	FUNCTION_23
0x1442	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       784	move.c	FUNCTION_23
0x1446	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       784	move.c	FUNCTION_23
0x144c	              0x90	                                     nop	       786	move.c	FUNCTION_23
0x144d	              0xc9	                                   leave	       786	move.c	FUNCTION_23
0x144e	              0xc3	                                     ret	       786	move.c	FUNCTION_23
changed_window_setting_win	CALL,2:WHILE,0:SWITCH,0:functions,0:DO,0:IF,0:ELSE,0:FOR,0	22
0xc06	              0x55	                                push rbp	       521	move.c	FUNCTION_10
0xc07	          0x4889e5	                            mov rbp, rsp	       521	move.c	FUNCTION_10
0xc0a	        0x4883ec10	                           sub rsp, 0x10	       521	move.c	FUNCTION_10
0xc0e	        0x48897df8	                mov qword [rbp - 8], rdi	       521	move.c	FUNCTION_10
0xc12	        0x488b45f8	                mov rax, qword [rbp - 8]	       522	move.c	FUNCTION_10
0xc16	    0xc780f8000000	               mov dword [rax + 0xf8], 0	       522	move.c	FUNCTION_10
0xc20	        0x488b45f8	                mov rax, qword [rbp - 8]	       523	move.c	FUNCTION_10	CALL_1
0xc24	          0x4889c7	                            mov rdi, rax	       523	move.c	FUNCTION_10	CALL_1
0xc27	      0xe800000000	                          call 0x4000c6c	       523	move.c	FUNCTION_10	CALL_1
0xc2c	        0x488b45f8	                mov rax, qword [rbp - 8]	       524	move.c	FUNCTION_10
0xc30	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       524	move.c	FUNCTION_10
0xc36	            0x241f	                            and al, 0x1f	       524	move.c	FUNCTION_10
0xc38	            0x89c2	                            mov edx, eax	       524	move.c	FUNCTION_10
0xc3a	        0x488b45f8	                mov rax, qword [rbp - 8]	       524	move.c	FUNCTION_10
0xc3e	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       524	move.c	FUNCTION_10
0xc44	        0x488b45f8	                mov rax, qword [rbp - 8]	       525	move.c	FUNCTION_10	CALL_2
0xc48	      0xbe28000000	                           mov esi, 0x28	       525	move.c	FUNCTION_10	CALL_2
0xc4d	          0x4889c7	                            mov rdi, rax	       525	move.c	FUNCTION_10	CALL_2
0xc50	      0xe800000000	                          call 0x4000c95	       525	move.c	FUNCTION_10	CALL_2
0xc55	              0x90	                                     nop	       526	move.c	FUNCTION_10
0xc56	              0xc9	                                   leave	       526	move.c	FUNCTION_10
0xc57	              0xc3	                                     ret	       526	move.c	FUNCTION_10
redraw_for_cursorline	CALL,2:WHILE,0:SWITCH,0:functions,0:DO,0:IF,1:ELSE,0:FOR,0	27
0x209	              0x55	                                push rbp	       132	move.c	FUNCTION_2
0x20a	          0x4889e5	                            mov rbp, rsp	       132	move.c	FUNCTION_2
0x20d	        0x4883ec10	                           sub rsp, 0x10	       132	move.c	FUNCTION_2
0x211	        0x48897df8	                mov qword [rbp - 8], rdi	       132	move.c	FUNCTION_2
0x215	        0x488b45f8	                mov rax, qword [rbp - 8]	       133	move.c	FUNCTION_2	IF_1
0x219	    0x8b803c020000	           mov eax, dword [rax + 0x23c] 	       133	move.c	FUNCTION_2	IF_1
0x21f	            0x85c0	                           test eax, eax	       133	move.c	FUNCTION_2	IF_1
0x221	            0x750e	                           jne 0x4000271	       133	move.c	FUNCTION_2	IF_1
0x223	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	move.c	FUNCTION_2	IF_1
0x227	    0x8b8070020000	           mov eax, dword [rax + 0x270] 	       135	move.c	FUNCTION_2	IF_1
0x22d	            0x85c0	                           test eax, eax	       135	move.c	FUNCTION_2	IF_1
0x22f	            0x742b	                            je 0x400029c	       135	move.c	FUNCTION_2	IF_1
0x231	        0x488b45f8	                mov rax, qword [rbp - 8]	       138	move.c	FUNCTION_2	IF_1
0x235	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       138	move.c	FUNCTION_2	IF_1
0x23b	          0x83e010	                           and eax, 0x10	       138	move.c	FUNCTION_2	IF_1
0x23e	            0x85c0	                           test eax, eax	       138	move.c	FUNCTION_2	IF_1
0x240	            0x751a	                           jne 0x400029c	       138	move.c	FUNCTION_2	IF_1
0x242	      0xe800000000	                          call 0x4000287	       140	move.c	FUNCTION_2	IF_1	CALL_1
0x247	            0x85c0	                           test eax, eax	       140	move.c	FUNCTION_2	IF_1	CALL_1
0x249	            0x7511	                           jne 0x400029c	       140	move.c	FUNCTION_2	IF_1	CALL_1
0x24b	        0x488b45f8	                mov rax, qword [rbp - 8]	       143	move.c	FUNCTION_2	CALL_2
0x24f	      0xbe23000000	                           mov esi, 0x23	       143	move.c	FUNCTION_2	CALL_2
0x254	          0x4889c7	                            mov rdi, rax	       143	move.c	FUNCTION_2	CALL_2
0x257	      0xe800000000	                          call 0x400029c	       143	move.c	FUNCTION_2	CALL_2
0x25c	              0x90	                                     nop	       144	move.c	FUNCTION_2
0x25d	              0xc9	                                   leave	       144	move.c	FUNCTION_2
0x25e	              0xc3	                                     ret	       144	move.c	FUNCTION_2
topline_back	CALL,3:WHILE,0:SWITCH,0:functions,0:DO,0:IF,3:ELSE,3:FOR,0	61
0x2e3c	              0x55	                                push rbp	      1544	move.c	FUNCTION_39
0x2e3d	          0x4889e5	                            mov rbp, rsp	      1544	move.c	FUNCTION_39
0x2e40	              0x53	                                push rbx	      1544	move.c	FUNCTION_39
0x2e41	        0x4883ec18	                           sub rsp, 0x18	      1544	move.c	FUNCTION_39
0x2e45	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1544	move.c	FUNCTION_39
0x2e49	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1546	move.c	FUNCTION_39	IF_1	CALL_1
0x2e4d	          0x8b5808	                mov ebx, dword [rax + 8]	      1546	move.c	FUNCTION_39	IF_1	CALL_1
0x2e50	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1546	move.c	FUNCTION_39	IF_1	CALL_1
0x2e54	          0x488b10	                    mov rdx, qword [rax]	      1546	move.c	FUNCTION_39	IF_1	CALL_1
0x2e57	    0x488b05000000	            mov rax, qword [0x04002e9e] 	      1546	move.c	FUNCTION_39	IF_1	CALL_1
0x2e5e	          0x4889d6	                            mov rsi, rdx	      1546	move.c	FUNCTION_39	IF_1	CALL_1
0x2e61	          0x4889c7	                            mov rdi, rax	      1546	move.c	FUNCTION_39	IF_1	CALL_1
0x2e64	      0xe800000000	                          call 0x4002ea9	      1546	move.c	FUNCTION_39	IF_1	CALL_1
0x2e69	            0x39c3	                            cmp ebx, eax	      1546	move.c	FUNCTION_39	IF_1	CALL_1
0x2e6b	            0x7d1e	                           jge 0x4002ecb	      1546	move.c	FUNCTION_39	IF_1	CALL_1
0x2e6d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1549	move.c	FUNCTION_39	IF_1
0x2e71	          0x8b4008	                mov eax, dword [rax + 8]	      1549	move.c	FUNCTION_39	IF_1
0x2e74	          0x8d5001	                      lea edx, [rax + 1]	      1549	move.c	FUNCTION_39	IF_1
0x2e77	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1549	move.c	FUNCTION_39	IF_1
0x2e7b	          0x895008	                mov dword [rax + 8], edx	      1549	move.c	FUNCTION_39	IF_1
0x2e7e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1550	move.c	FUNCTION_39	IF_1
0x2e82	    0xc7400c010000	                mov dword [rax + 0xc], 1	      1550	move.c	FUNCTION_39	IF_1
0x2e89	            0xeb7a	                           jmp 0x4002f45	      1570	move.c	FUNCTION_39
0x2e8b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1555	move.c	FUNCTION_39	ELSE_1
0x2e8f	          0x488b00	                    mov rax, qword [rax]	      1555	move.c	FUNCTION_39	ELSE_1
0x2e92	        0x488d50ff	                      lea rdx, [rax - 1]	      1555	move.c	FUNCTION_39	ELSE_1
0x2e96	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1555	move.c	FUNCTION_39	ELSE_1
0x2e9a	          0x488910	                    mov qword [rax], rdx	      1555	move.c	FUNCTION_39	ELSE_1
0x2e9d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1557	move.c	FUNCTION_39	ELSE_1
0x2ea1	    0xc74008000000	                  mov dword [rax + 8], 0	      1557	move.c	FUNCTION_39	ELSE_1
0x2ea8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1559	move.c	FUNCTION_39	ELSE_1	IF_2
0x2eac	          0x488b00	                    mov rax, qword [rax]	      1559	move.c	FUNCTION_39	ELSE_1	IF_2
0x2eaf	          0x4885c0	                           test rax, rax	      1559	move.c	FUNCTION_39	ELSE_1	IF_2
0x2eb2	            0x7f0d	                            jg 0x4002f01	      1559	move.c	FUNCTION_39	ELSE_1	IF_2
0x2eb4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1560	move.c	FUNCTION_39	ELSE_1	IF_2
0x2eb8	    0xc7400cffffff	      mov dword [rax + 0xc], 0x7fffffff 	      1560	move.c	FUNCTION_39	ELSE_1	IF_2
0x2ebf	            0xeb44	                           jmp 0x4002f45	      1570	move.c	FUNCTION_39
0x2ec1	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1563	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x2ec5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1563	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x2ec9	          0x488b00	                    mov rax, qword [rax]	      1563	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x2ecc	      0xba00000000	                              mov edx, 0	      1563	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x2ed1	          0x4889ce	                            mov rsi, rcx	      1563	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x2ed4	          0x4889c7	                            mov rdi, rax	      1563	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x2ed7	      0xe800000000	                          call 0x4002f1c	      1563	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x2edc	            0x85c0	                           test eax, eax	      1563	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x2ede	            0x740d	                            je 0x4002f2d	      1563	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x2ee0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1565	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3
0x2ee4	    0xc7400c010000	                mov dword [rax + 0xc], 1	      1565	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3
0x2eeb	            0xeb18	                           jmp 0x4002f45	      1570	move.c	FUNCTION_39
0x2eed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1568	move.c	FUNCTION_39	ELSE_1	CALL_3
0x2ef1	          0x488b00	                    mov rax, qword [rax]	      1568	move.c	FUNCTION_39	ELSE_1	CALL_3
0x2ef4	          0x4889c7	                            mov rdi, rax	      1568	move.c	FUNCTION_39	ELSE_1	CALL_3
0x2ef7	      0xe800000000	                          call 0x4002f3c	      1568	move.c	FUNCTION_39	ELSE_1	CALL_3
0x2efc	            0x89c2	                            mov edx, eax	      1568	move.c	FUNCTION_39	ELSE_1	CALL_3
0x2efe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1568	move.c	FUNCTION_39	ELSE_1	CALL_3
0x2f02	          0x89500c	              mov dword [rax + 0xc], edx	      1568	move.c	FUNCTION_39	ELSE_1	CALL_3
0x2f05	              0x90	                                     nop	      1570	move.c	FUNCTION_39
0x2f06	        0x4883c418	                           add rsp, 0x18	      1570	move.c	FUNCTION_39
0x2f0a	              0x5b	                                 pop rbx	      1570	move.c	FUNCTION_39
0x2f0b	              0x5d	                                 pop rbp	      1570	move.c	FUNCTION_39
0x2f0c	              0xc3	                                     ret	      1570	move.c	FUNCTION_39
validate_cheight	CALL,4:WHILE,0:SWITCH,0:functions,0:DO,0:IF,2:ELSE,1:FOR,0	53
0x14ff	              0x55	                                push rbp	       824	move.c	FUNCTION_26
0x1500	          0x4889e5	                            mov rbp, rsp	       824	move.c	FUNCTION_26
0x1503	              0x53	                                push rbx	       824	move.c	FUNCTION_26
0x1504	        0x4883ec08	                              sub rsp, 8	       824	move.c	FUNCTION_26
0x1508	    0x488b05000000	            mov rax, qword [0x0400154f] 	       825	move.c	FUNCTION_26	CALL_1
0x150f	          0x4889c7	                            mov rdi, rax	       825	move.c	FUNCTION_26	CALL_1
0x1512	      0xe800000000	                          call 0x4001557	       825	move.c	FUNCTION_26	CALL_1
0x1517	    0x488b05000000	            mov rax, qword [0x0400155e] 	       826	move.c	FUNCTION_26	IF_1
0x151e	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       826	move.c	FUNCTION_26	IF_1
0x1524	          0x83e008	                              and eax, 8	       826	move.c	FUNCTION_26	IF_1
0x1527	            0x85c0	                           test eax, eax	       826	move.c	FUNCTION_26	IF_1
0x1529	     0xf85b5000000	                           jne 0x4001624	       826	move.c	FUNCTION_26	IF_1
0x152f	    0x488b05000000	            mov rax, qword [0x04001576] 	       829	move.c	FUNCTION_26	IF_1	IF_2
0x1536	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       829	move.c	FUNCTION_26	IF_1	IF_2
0x153a	    0x488b05000000	            mov rax, qword [0x04001581] 	       829	move.c	FUNCTION_26	IF_1	IF_2
0x1541	        0x488b4078	            mov rax, qword [rax + 0x78] 	       829	move.c	FUNCTION_26	IF_1	IF_2
0x1545	          0x4839c2	                            cmp rdx, rax	       829	move.c	FUNCTION_26	IF_1	IF_2
0x1548	            0x7533	                           jne 0x40015bd	       829	move.c	FUNCTION_26	IF_1	IF_2
0x154a	    0x488b1d000000	            mov rbx, qword [0x04001591] 	       830	move.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x1551	    0x488b05000000	            mov rax, qword [0x04001598] 	       830	move.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x1558	        0x488b4038	            mov rax, qword [rax + 0x38] 	       830	move.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x155c	          0x4889c7	                            mov rdi, rax	       830	move.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x155f	      0xe800000000	                          call 0x40015a4	       830	move.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x1564	            0x89c2	                            mov edx, eax	       830	move.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x1566	    0x488b05000000	            mov rax, qword [0x040015ad] 	       831	move.c	FUNCTION_26	IF_1	IF_2
0x156d	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	       831	move.c	FUNCTION_26	IF_1	IF_2
0x1573	             0x1d0	                            add eax, edx	       831	move.c	FUNCTION_26	IF_1	IF_2
0x1575	    0x8983cc000000	             mov dword [rbx + 0xcc], eax	       830	move.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x157b	            0xeb20	                           jmp 0x40015dd	       830	move.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x157d	    0x488b1d000000	            mov rbx, qword [0x040015c4] 	       834	move.c	FUNCTION_26	IF_1	CALL_3
0x1584	    0x488b05000000	            mov rax, qword [0x040015cb] 	       834	move.c	FUNCTION_26	IF_1	CALL_3
0x158b	        0x488b4038	            mov rax, qword [rax + 0x38] 	       834	move.c	FUNCTION_26	IF_1	CALL_3
0x158f	          0x4889c7	                            mov rdi, rax	       834	move.c	FUNCTION_26	IF_1	CALL_3
0x1592	      0xe800000000	                          call 0x40015d7	       834	move.c	FUNCTION_26	IF_1	CALL_3
0x1597	    0x8983cc000000	             mov dword [rbx + 0xcc], eax	       834	move.c	FUNCTION_26	IF_1	CALL_3
0x159d	    0x488b1d000000	            mov rbx, qword [0x040015e4] 	       836	move.c	FUNCTION_26	IF_1	CALL_4
0x15a4	    0x488b05000000	            mov rax, qword [0x040015eb] 	       836	move.c	FUNCTION_26	IF_1	CALL_4
0x15ab	        0x488b4038	            mov rax, qword [rax + 0x38] 	       836	move.c	FUNCTION_26	IF_1	CALL_4
0x15af	      0xba00000000	                              mov edx, 0	       836	move.c	FUNCTION_26	IF_1	CALL_4
0x15b4	      0xbe00000000	                              mov esi, 0	       836	move.c	FUNCTION_26	IF_1	CALL_4
0x15b9	          0x4889c7	                            mov rdi, rax	       836	move.c	FUNCTION_26	IF_1	CALL_4
0x15bc	      0xe800000000	                          call 0x4001601	       836	move.c	FUNCTION_26	IF_1	CALL_4
0x15c1	    0x8983d0000000	             mov dword [rbx + 0xd0], eax	       836	move.c	FUNCTION_26	IF_1	CALL_4
0x15c7	    0x488b05000000	            mov rax, qword [0x0400160e] 	       838	move.c	FUNCTION_26	IF_1
0x15ce	    0x488b15000000	            mov rdx, qword [0x04001615] 	       838	move.c	FUNCTION_26	IF_1
0x15d5	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	       838	move.c	FUNCTION_26	IF_1
0x15db	          0x83ca08	                               or edx, 8	       838	move.c	FUNCTION_26	IF_1
0x15de	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       838	move.c	FUNCTION_26	IF_1
0x15e4	              0x90	                                     nop	       840	move.c	FUNCTION_26
0x15e5	        0x4883c408	                              add rsp, 8	       840	move.c	FUNCTION_26
0x15e9	              0x5b	                                 pop rbx	       840	move.c	FUNCTION_26
0x15ea	              0x5d	                                 pop rbp	       840	move.c	FUNCTION_26
0x15eb	              0xc3	                                     ret	       840	move.c	FUNCTION_26
changed_line_abv_curs_win	CALL,0:WHILE,0:SWITCH,0:functions,0:DO,0:IF,0:ELSE,0:FOR,0	12
0xd6d	              0x55	                                push rbp	       585	move.c	FUNCTION_15
0xd6e	          0x4889e5	                            mov rbp, rsp	       585	move.c	FUNCTION_15
0xd71	        0x48897df8	                mov qword [rbp - 8], rdi	       585	move.c	FUNCTION_15
0xd75	        0x488b45f8	                mov rax, qword [rbp - 8]	       586	move.c	FUNCTION_15
0xd79	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       586	move.c	FUNCTION_15
0xd7f	            0x2460	                            and al, 0x60	       586	move.c	FUNCTION_15
0xd81	            0x89c2	                            mov edx, eax	       586	move.c	FUNCTION_15
0xd83	        0x488b45f8	                mov rax, qword [rbp - 8]	       586	move.c	FUNCTION_15
0xd87	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       586	move.c	FUNCTION_15
0xd8d	              0x90	                                     nop	       588	move.c	FUNCTION_15
0xd8e	              0x5d	                                 pop rbp	       588	move.c	FUNCTION_15
0xd8f	              0xc3	                                     ret	       588	move.c	FUNCTION_15
validate_cursor	CALL,2:WHILE,0:SWITCH,0:functions,0:DO,0:IF,1:ELSE,0:FOR,0	15
0xe54	              0x55	                                push rbp	       639	move.c	FUNCTION_21
0xe55	          0x4889e5	                            mov rbp, rsp	       639	move.c	FUNCTION_21
0xe58	    0x488b05000000	            mov rax, qword [0x04000e9f] 	       640	move.c	FUNCTION_21	CALL_1
0xe5f	          0x4889c7	                            mov rdi, rax	       640	move.c	FUNCTION_21	CALL_1
0xe62	      0xe800000000	                          call 0x4000ea7	       640	move.c	FUNCTION_21	CALL_1
0xe67	    0x488b05000000	            mov rax, qword [0x04000eae] 	       641	move.c	FUNCTION_21	IF_1
0xe6e	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       641	move.c	FUNCTION_21	IF_1
0xe74	          0x83e003	                              and eax, 3	       641	move.c	FUNCTION_21	IF_1
0xe77	          0x83f803	                              cmp eax, 3	       641	move.c	FUNCTION_21	IF_1
0xe7a	            0x740a	                            je 0x4000ec6	       641	move.c	FUNCTION_21	IF_1
0xe7c	      0xbf01000000	                              mov edi, 1	       642	move.c	FUNCTION_21	CALL_2
0xe81	      0xe800000000	                          call 0x4000ec6	       642	move.c	FUNCTION_21	CALL_2
0xe86	              0x90	                                     nop	       643	move.c	FUNCTION_21
0xe87	              0x5d	                                 pop rbp	       643	move.c	FUNCTION_21
0xe88	              0xc3	                                     ret	       643	move.c	FUNCTION_21
get_scroll_overlap	CALL,8:WHILE,0:SWITCH,0:functions,0:DO,0:IF,8:ELSE,5:FOR,0	138
0x4983	              0x55	                                push rbp	      2502	move.c	FUNCTION_49
0x4984	          0x4889e5	                            mov rbp, rsp	      2502	move.c	FUNCTION_49
0x4987	        0x4883ec60	                           sub rsp, 0x60	      2502	move.c	FUNCTION_49
0x498b	        0x48897da8	             mov qword [rbp - 0x58], rdi	      2502	move.c	FUNCTION_49
0x498f	          0x8975a4	             mov dword [rbp - 0x5c], esi	      2502	move.c	FUNCTION_49
0x4992	    0x488b05000000	            mov rax, qword [0x040049d9] 	      2504	move.c	FUNCTION_49
0x4999	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2504	move.c	FUNCTION_49
0x499f	          0x83e802	                              sub eax, 2	      2504	move.c	FUNCTION_49
0x49a2	          0x8945bc	             mov dword [rbp - 0x44], eax	      2504	move.c	FUNCTION_49
0x49a5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2508	move.c	FUNCTION_49	IF_1
0x49a9	          0x8b4008	                mov eax, dword [rax + 8]	      2508	move.c	FUNCTION_49	IF_1
0x49ac	            0x85c0	                           test eax, eax	      2508	move.c	FUNCTION_49	IF_1
0x49ae	            0x7e0d	                           jle 0x40049fd	      2508	move.c	FUNCTION_49	IF_1
0x49b0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2509	move.c	FUNCTION_49	IF_1
0x49b4	    0xc7400c010000	                mov dword [rax + 0xc], 1	      2509	move.c	FUNCTION_49	IF_1
0x49bb	            0xeb18	                           jmp 0x4004a15	      2509	move.c	FUNCTION_49	IF_1
0x49bd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2511	move.c	FUNCTION_49	CALL_1
0x49c1	          0x488b00	                    mov rax, qword [rax]	      2511	move.c	FUNCTION_49	CALL_1
0x49c4	          0x4889c7	                            mov rdi, rax	      2511	move.c	FUNCTION_49	CALL_1
0x49c7	      0xe800000000	                          call 0x4004a0c	      2511	move.c	FUNCTION_49	CALL_1
0x49cc	            0x89c2	                            mov edx, eax	      2511	move.c	FUNCTION_49	CALL_1
0x49ce	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2511	move.c	FUNCTION_49	CALL_1
0x49d2	          0x89500c	              mov dword [rax + 0xc], edx	      2511	move.c	FUNCTION_49	CALL_1
0x49d5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2515	move.c	FUNCTION_49
0x49d9	          0x8b400c	              mov eax, dword [rax + 0xc]	      2515	move.c	FUNCTION_49
0x49dc	          0x8945c0	             mov dword [rbp - 0x40], eax	      2515	move.c	FUNCTION_49
0x49df	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2516	move.c	FUNCTION_49	IF_2
0x49e2	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      2516	move.c	FUNCTION_49	IF_2
0x49e5	     0xf8f6b010000	                            jg 0x4004b96	      2516	move.c	FUNCTION_49	IF_2
0x49eb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2519	move.c	FUNCTION_49
0x49ef	        0x488b5008	                mov rdx, qword [rax + 8]	      2519	move.c	FUNCTION_49
0x49f3	          0x488b00	                    mov rax, qword [rax]	      2519	move.c	FUNCTION_49
0x49f6	        0x488945d0	             mov qword [rbp - 0x30], rax	      2519	move.c	FUNCTION_49
0x49fa	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2519	move.c	FUNCTION_49
0x49fe	        0x837da400	               cmp dword [rbp - 0x5c], 0	      2520	move.c	FUNCTION_49	IF_3
0x4a02	            0x7e0e	                           jle 0x4004a52	      2520	move.c	FUNCTION_49	IF_3
0x4a04	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2521	move.c	FUNCTION_49	CALL_3
0x4a08	          0x4889c7	                            mov rdi, rax	      2521	move.c	FUNCTION_49	CALL_3
0x4a0b	      0xe8fde4ffff	                   call sym.botline_forw	      2521	move.c	FUNCTION_49	CALL_3
0x4a10	            0xeb0c	                           jmp 0x4004a5e	      2521	move.c	FUNCTION_49	CALL_3
0x4a12	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2523	move.c	FUNCTION_49	CALL_4
0x4a16	          0x4889c7	                            mov rdi, rax	      2523	move.c	FUNCTION_49	CALL_4
0x4a19	      0xe81ee4ffff	                   call sym.topline_back	      2523	move.c	FUNCTION_49	CALL_4
0x4a1e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2524	move.c	FUNCTION_49
0x4a22	          0x8b400c	              mov eax, dword [rax + 0xc]	      2524	move.c	FUNCTION_49
0x4a25	          0x8945c4	             mov dword [rbp - 0x3c], eax	      2524	move.c	FUNCTION_49
0x4a28	    0x817dc4ffffff	     cmp dword [rbp - 0x3c], 0x7fffffff 	      2525	move.c	FUNCTION_49	IF_4
0x4a2f	            0x740d	                            je 0x4004a7e	      2525	move.c	FUNCTION_49	IF_4
0x4a31	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      2525	move.c	FUNCTION_49	IF_4
0x4a34	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2525	move.c	FUNCTION_49	IF_4
0x4a37	             0x1d0	                            add eax, edx	      2525	move.c	FUNCTION_49	IF_4
0x4a39	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      2525	move.c	FUNCTION_49	IF_4
0x4a3c	            0x7e18	                           jle 0x4004a96	      2525	move.c	FUNCTION_49	IF_4
0x4a3e	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      2527	move.c	FUNCTION_49	IF_4
0x4a42	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2527	move.c	FUNCTION_49	IF_4
0x4a46	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2527	move.c	FUNCTION_49	IF_4
0x4a4a	          0x488901	                    mov qword [rcx], rax	      2527	move.c	FUNCTION_49	IF_4
0x4a4d	        0x48895108	                mov qword [rcx + 8], rdx	      2527	move.c	FUNCTION_49	IF_4
0x4a51	      0xe901010000	                           jmp 0x4004b97	      2528	move.c	FUNCTION_49	IF_4
0x4a56	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2531	move.c	FUNCTION_49
0x4a5a	        0x488b5008	                mov rdx, qword [rax + 8]	      2531	move.c	FUNCTION_49
0x4a5e	          0x488b00	                    mov rax, qword [rax]	      2531	move.c	FUNCTION_49
0x4a61	        0x488945e0	             mov qword [rbp - 0x20], rax	      2531	move.c	FUNCTION_49
0x4a65	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2531	move.c	FUNCTION_49
0x4a69	        0x837da400	               cmp dword [rbp - 0x5c], 0	      2532	move.c	FUNCTION_49	IF_5
0x4a6d	            0x7e0e	                           jle 0x4004abd	      2532	move.c	FUNCTION_49	IF_5
0x4a6f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2533	move.c	FUNCTION_49	CALL_5
0x4a73	          0x4889c7	                            mov rdi, rax	      2533	move.c	FUNCTION_49	CALL_5
0x4a76	      0xe892e4ffff	                   call sym.botline_forw	      2533	move.c	FUNCTION_49	CALL_5
0x4a7b	            0xeb0c	                           jmp 0x4004ac9	      2533	move.c	FUNCTION_49	CALL_5
0x4a7d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2535	move.c	FUNCTION_49	CALL_6
0x4a81	          0x4889c7	                            mov rdi, rax	      2535	move.c	FUNCTION_49	CALL_6
0x4a84	      0xe8b3e3ffff	                   call sym.topline_back	      2535	move.c	FUNCTION_49	CALL_6
0x4a89	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2536	move.c	FUNCTION_49
0x4a8d	          0x8b400c	              mov eax, dword [rax + 0xc]	      2536	move.c	FUNCTION_49
0x4a90	          0x8945c8	             mov dword [rbp - 0x38], eax	      2536	move.c	FUNCTION_49
0x4a93	    0x817dc8ffffff	     cmp dword [rbp - 0x38], 0x7fffffff 	      2537	move.c	FUNCTION_49	IF_6
0x4a9a	            0x740d	                            je 0x4004ae9	      2537	move.c	FUNCTION_49	IF_6
0x4a9c	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      2537	move.c	FUNCTION_49	IF_6
0x4a9f	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2537	move.c	FUNCTION_49	IF_6
0x4aa2	             0x1d0	                            add eax, edx	      2537	move.c	FUNCTION_49	IF_6
0x4aa4	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      2537	move.c	FUNCTION_49	IF_6
0x4aa7	            0x7e18	                           jle 0x4004b01	      2537	move.c	FUNCTION_49	IF_6
0x4aa9	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      2539	move.c	FUNCTION_49	IF_6
0x4aad	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2539	move.c	FUNCTION_49	IF_6
0x4ab1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2539	move.c	FUNCTION_49	IF_6
0x4ab5	          0x488901	                    mov qword [rcx], rax	      2539	move.c	FUNCTION_49	IF_6
0x4ab8	        0x48895108	                mov qword [rcx + 8], rdx	      2539	move.c	FUNCTION_49	IF_6
0x4abc	      0xe996000000	                           jmp 0x4004b97	      2540	move.c	FUNCTION_49	IF_6
0x4ac1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2543	move.c	FUNCTION_49
0x4ac5	        0x488b5008	                mov rdx, qword [rax + 8]	      2543	move.c	FUNCTION_49
0x4ac9	          0x488b00	                    mov rax, qword [rax]	      2543	move.c	FUNCTION_49
0x4acc	        0x488945f0	             mov qword [rbp - 0x10], rax	      2543	move.c	FUNCTION_49
0x4ad0	        0x488955f8	                mov qword [rbp - 8], rdx	      2543	move.c	FUNCTION_49
0x4ad4	        0x837da400	               cmp dword [rbp - 0x5c], 0	      2544	move.c	FUNCTION_49	IF_7
0x4ad8	            0x7e0e	                           jle 0x4004b28	      2544	move.c	FUNCTION_49	IF_7
0x4ada	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2545	move.c	FUNCTION_49	CALL_7
0x4ade	          0x4889c7	                            mov rdi, rax	      2545	move.c	FUNCTION_49	CALL_7
0x4ae1	      0xe827e4ffff	                   call sym.botline_forw	      2545	move.c	FUNCTION_49	CALL_7
0x4ae6	            0xeb0c	                           jmp 0x4004b34	      2545	move.c	FUNCTION_49	CALL_7
0x4ae8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2547	move.c	FUNCTION_49	CALL_8
0x4aec	          0x4889c7	                            mov rdi, rax	      2547	move.c	FUNCTION_49	CALL_8
0x4aef	      0xe848e3ffff	                   call sym.topline_back	      2547	move.c	FUNCTION_49	CALL_8
0x4af4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2548	move.c	FUNCTION_49
0x4af8	          0x8b400c	              mov eax, dword [rax + 0xc]	      2548	move.c	FUNCTION_49
0x4afb	          0x8945cc	             mov dword [rbp - 0x34], eax	      2548	move.c	FUNCTION_49
0x4afe	    0x817dccffffff	     cmp dword [rbp - 0x34], 0x7fffffff 	      2549	move.c	FUNCTION_49	IF_8
0x4b05	            0x7424	                            je 0x4004b6b	      2549	move.c	FUNCTION_49	IF_8
0x4b07	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      2549	move.c	FUNCTION_49	IF_8
0x4b0a	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2549	move.c	FUNCTION_49	IF_8
0x4b0d	             0x1c2	                            add edx, eax	      2549	move.c	FUNCTION_49	IF_8
0x4b0f	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2549	move.c	FUNCTION_49	IF_8
0x4b12	             0x1d0	                            add eax, edx	      2549	move.c	FUNCTION_49	IF_8
0x4b14	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      2549	move.c	FUNCTION_49	IF_8
0x4b17	            0x7f12	                            jg 0x4004b6b	      2549	move.c	FUNCTION_49	IF_8
0x4b19	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      2549	move.c	FUNCTION_49	IF_8
0x4b1c	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2549	move.c	FUNCTION_49	IF_8
0x4b1f	             0x1c2	                            add edx, eax	      2549	move.c	FUNCTION_49	IF_8
0x4b21	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2549	move.c	FUNCTION_49	IF_8
0x4b24	             0x1d0	                            add eax, edx	      2549	move.c	FUNCTION_49	IF_8
0x4b26	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      2549	move.c	FUNCTION_49	IF_8
0x4b29	            0x7e15	                           jle 0x4004b80	      2549	move.c	FUNCTION_49	IF_8
0x4b2b	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      2550	move.c	FUNCTION_49	IF_8
0x4b2f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2550	move.c	FUNCTION_49	IF_8
0x4b33	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2550	move.c	FUNCTION_49	IF_8
0x4b37	          0x488901	                    mov qword [rcx], rax	      2550	move.c	FUNCTION_49	IF_8
0x4b3a	        0x48895108	                mov qword [rcx + 8], rdx	      2550	move.c	FUNCTION_49	IF_8
0x4b3e	            0xeb13	                           jmp 0x4004b93	      2550	move.c	FUNCTION_49	IF_8
0x4b40	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      2552	move.c	FUNCTION_49	ELSE_5
0x4b44	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2552	move.c	FUNCTION_49	ELSE_5
0x4b48	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2552	move.c	FUNCTION_49	ELSE_5
0x4b4c	          0x488901	                    mov qword [rcx], rax	      2552	move.c	FUNCTION_49	ELSE_5
0x4b4f	        0x48895108	                mov qword [rcx + 8], rdx	      2552	move.c	FUNCTION_49	ELSE_5
0x4b53	              0x90	                                     nop	      2553	move.c	FUNCTION_49	ELSE_5
0x4b54	            0xeb01	                           jmp 0x4004b97	      2553	move.c	FUNCTION_49	ELSE_5
0x4b56	              0x90	                                     nop	      2517	move.c	FUNCTION_49	IF_2
0x4b57	              0xc9	                                   leave	      2554	move.c	FUNCTION_49	ELSE_5
0x4b58	              0xc3	                                     ret	      2554	move.c	FUNCTION_49	ELSE_5
max_topfill	CALL,2:WHILE,0:SWITCH,0:functions,0:DO,0:IF,2:ELSE,1:FOR,0	42
0x2a39	              0x55	                                push rbp	      1400	move.c	FUNCTION_36
0x2a3a	          0x4889e5	                            mov rbp, rsp	      1400	move.c	FUNCTION_36
0x2a3d	              0x53	                                push rbx	      1400	move.c	FUNCTION_36
0x2a3e	        0x4883ec18	                           sub rsp, 0x18	      1400	move.c	FUNCTION_36
0x2a42	    0x488b05000000	            mov rax, qword [0x04002a89] 	      1403	move.c	FUNCTION_36	CALL_1
0x2a49	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1403	move.c	FUNCTION_36	CALL_1
0x2a4d	          0x4889c7	                            mov rdi, rax	      1403	move.c	FUNCTION_36	CALL_1
0x2a50	      0xe800000000	                          call 0x4002a95	      1403	move.c	FUNCTION_36	CALL_1
0x2a55	          0x8945ec	             mov dword [rbp - 0x14], eax	      1403	move.c	FUNCTION_36	CALL_1
0x2a58	    0x488b05000000	            mov rax, qword [0x04002a9f] 	      1404	move.c	FUNCTION_36	IF_1
0x2a5f	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1404	move.c	FUNCTION_36	IF_1
0x2a65	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1404	move.c	FUNCTION_36	IF_1
0x2a68	            0x7f13	                            jg 0x4002abd	      1404	move.c	FUNCTION_36	IF_1
0x2a6a	    0x488b05000000	            mov rax, qword [0x04002ab1] 	      1405	move.c	FUNCTION_36	IF_1
0x2a71	    0xc78084000000	               mov dword [rax + 0x84], 0	      1405	move.c	FUNCTION_36	IF_1
0x2a7b	            0xeb6a	                           jmp 0x4002b27	      1412	move.c	FUNCTION_36
0x2a7d	    0x488b1d000000	            mov rbx, qword [0x04002ac4] 	      1408	move.c	FUNCTION_36	ELSE_1	CALL_2
0x2a84	    0x488b05000000	            mov rax, qword [0x04002acb] 	      1408	move.c	FUNCTION_36	ELSE_1	CALL_2
0x2a8b	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1408	move.c	FUNCTION_36	ELSE_1	CALL_2
0x2a8f	    0x488b05000000	            mov rax, qword [0x04002ad6] 	      1408	move.c	FUNCTION_36	ELSE_1	CALL_2
0x2a96	          0x4889d6	                            mov rsi, rdx	      1408	move.c	FUNCTION_36	ELSE_1	CALL_2
0x2a99	          0x4889c7	                            mov rdi, rax	      1408	move.c	FUNCTION_36	ELSE_1	CALL_2
0x2a9c	      0xe800000000	                          call 0x4002ae1	      1408	move.c	FUNCTION_36	ELSE_1	CALL_2
0x2aa1	    0x898384000000	             mov dword [rbx + 0x84], eax	      1408	move.c	FUNCTION_36	ELSE_1	CALL_2
0x2aa7	    0x488b05000000	            mov rax, qword [0x04002aee] 	      1409	move.c	FUNCTION_36	ELSE_1	IF_2
0x2aae	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      1409	move.c	FUNCTION_36	ELSE_1	IF_2
0x2ab4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1409	move.c	FUNCTION_36	ELSE_1	IF_2
0x2ab7	             0x1c2	                            add edx, eax	      1409	move.c	FUNCTION_36	ELSE_1	IF_2
0x2ab9	    0x488b05000000	            mov rax, qword [0x04002b00] 	      1409	move.c	FUNCTION_36	ELSE_1	IF_2
0x2ac0	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1409	move.c	FUNCTION_36	ELSE_1	IF_2
0x2ac6	            0x39c2	                            cmp edx, eax	      1409	move.c	FUNCTION_36	ELSE_1	IF_2
0x2ac8	            0x7e1d	                           jle 0x4002b27	      1409	move.c	FUNCTION_36	ELSE_1	IF_2
0x2aca	    0x488b05000000	            mov rax, qword [0x04002b11] 	      1410	move.c	FUNCTION_36	ELSE_1	IF_2
0x2ad1	    0x488b15000000	            mov rdx, qword [0x04002b18] 	      1410	move.c	FUNCTION_36	ELSE_1	IF_2
0x2ad8	    0x8b92a0000000	            mov edx, dword [rdx + 0xa0] 	      1410	move.c	FUNCTION_36	ELSE_1	IF_2
0x2ade	          0x2b55ec	             sub edx, dword [rbp - 0x14]	      1410	move.c	FUNCTION_36	ELSE_1	IF_2
0x2ae1	    0x899084000000	             mov dword [rax + 0x84], edx	      1410	move.c	FUNCTION_36	ELSE_1	IF_2
0x2ae7	              0x90	                                     nop	      1412	move.c	FUNCTION_36
0x2ae8	        0x4883c418	                           add rsp, 0x18	      1412	move.c	FUNCTION_36
0x2aec	              0x5b	                                 pop rbx	      1412	move.c	FUNCTION_36
0x2aed	              0x5d	                                 pop rbp	      1412	move.c	FUNCTION_36
0x2aee	              0xc3	                                     ret	      1412	move.c	FUNCTION_36
cursor_valid	CALL,1:WHILE,0:SWITCH,0:functions,0:DO,0:IF,0:ELSE,0:FOR,0	13
0xe26	              0x55	                                push rbp	       627	move.c	FUNCTION_20
0xe27	          0x4889e5	                            mov rbp, rsp	       627	move.c	FUNCTION_20
0xe2a	    0x488b05000000	            mov rax, qword [0x04000e71] 	       628	move.c	FUNCTION_20	CALL_1
0xe31	          0x4889c7	                            mov rdi, rax	       628	move.c	FUNCTION_20	CALL_1
0xe34	      0xe800000000	                          call 0x4000e79	       628	move.c	FUNCTION_20	CALL_1
0xe39	    0x488b05000000	            mov rax, qword [0x04000e80] 	       629	move.c	FUNCTION_20
0xe40	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       629	move.c	FUNCTION_20
0xe46	          0x83e003	                              and eax, 3	       629	move.c	FUNCTION_20
0xe49	          0x83f803	                              cmp eax, 3	       629	move.c	FUNCTION_20
0xe4c	           0xf94c0	                                 sete al	       629	move.c	FUNCTION_20
0xe4f	           0xfb6c0	                           movzx eax, al	       629	move.c	FUNCTION_20
0xe52	              0x5d	                                 pop rbp	       631	move.c	FUNCTION_20
0xe53	              0xc3	                                     ret	       631	move.c	FUNCTION_20
do_check_cursorbind	CALL,0:WHILE,0:SWITCH,0:functions,1:DO,0:IF,0:ELSE,0:FOR,0	117
0x5142	              0x55	                                push rbp	      2781	move.c	FUNCTION_51
0x5143	          0x4889e5	                            mov rbp, rsp	      2781	move.c	FUNCTION_51
0x5146	              0x53	                                push rbx	      2781	move.c	FUNCTION_51
0x5147	        0x4883ec48	                           sub rsp, 0x48	      2781	move.c	FUNCTION_51
0x514b	    0x488b05000000	            mov rax, qword [0x04005192] 	      2782	move.c	FUNCTION_51
0x5152	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2782	move.c	FUNCTION_51
0x5156	        0x488945d8	             mov qword [rbp - 0x28], rax	      2782	move.c	FUNCTION_51
0x515a	    0x488b05000000	            mov rax, qword [0x040051a1] 	      2783	move.c	FUNCTION_51
0x5161	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2783	move.c	FUNCTION_51
0x5164	          0x8945bc	             mov dword [rbp - 0x44], eax	      2783	move.c	FUNCTION_51
0x5167	    0x488b05000000	            mov rax, qword [0x040051ae] 	      2785	move.c	FUNCTION_51
0x516e	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2785	move.c	FUNCTION_51
0x5171	          0x8945c0	             mov dword [rbp - 0x40], eax	      2785	move.c	FUNCTION_51
0x5174	    0x488b05000000	            mov rax, qword [0x040051bb] 	      2787	move.c	FUNCTION_51
0x517b	          0x8b4048	            mov eax, dword [rax + 0x48] 	      2787	move.c	FUNCTION_51
0x517e	          0x8945c4	             mov dword [rbp - 0x3c], eax	      2787	move.c	FUNCTION_51
0x5181	    0x488b05000000	            mov rax, qword [0x040051c8] 	      2788	move.c	FUNCTION_51
0x5188	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      2788	move.c	FUNCTION_51
0x518b	          0x8945c8	             mov dword [rbp - 0x38], eax	      2788	move.c	FUNCTION_51
0x518e	    0x488b05000000	            mov rax, qword [0x040051d5] 	      2789	move.c	FUNCTION_51
0x5195	        0x488945e0	             mov qword [rbp - 0x20], rax	      2789	move.c	FUNCTION_51
0x5199	    0x488b05000000	            mov rax, qword [0x040051e0] 	      2790	move.c	FUNCTION_51
0x51a0	        0x488945e8	             mov qword [rbp - 0x18], rax	      2790	move.c	FUNCTION_51
0x51a4	    0x8b0500000000	            mov eax, dword [0x040051ea] 	      2792	move.c	FUNCTION_51
0x51aa	          0x8945cc	             mov dword [rbp - 0x34], eax	      2792	move.c	FUNCTION_51
0x51ad	    0x8b0500000000	            mov eax, dword [0x040051f3] 	      2793	move.c	FUNCTION_51
0x51b3	          0x8945d0	             mov dword [rbp - 0x30], eax	      2793	move.c	FUNCTION_51
0x51b6	    0xc70500000000	               mov dword [0x04005200], 0	      2798	move.c	FUNCTION_51
0x51c0	    0x8b0500000000	            mov eax, dword [0x04005206] 	      2798	move.c	FUNCTION_51
0x51c6	    0x890500000000	            mov dword [0x0400520c], eax 	      2798	move.c	FUNCTION_51
0x51cc	    0x488b05000000	            mov rax, qword [0x04005213] 	      2799	move.c	FUNCTION_51
0x51d3	    0x488905000000	            mov qword [0x0400521a], rax 	      2799	move.c	FUNCTION_51
0x51da	      0xe946010000	                           jmp 0x4005365	      2799	move.c	FUNCTION_51
0x51df	    0x488b05000000	            mov rax, qword [0x04005226] 	      2801	move.c	FUNCTION_51	FUNCTION_1
0x51e6	        0x488b4008	                mov rax, qword [rax + 8]	      2801	move.c	FUNCTION_51	FUNCTION_1
0x51ea	    0x488905000000	            mov qword [0x04005231], rax 	      2801	move.c	FUNCTION_51	FUNCTION_1
0x51f1	    0x488b05000000	            mov rax, qword [0x04005238] 	      2803	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x51f8	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      2803	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x51fc	     0xf8411010000	                            je 0x4005353	      2803	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x5202	    0x488b05000000	            mov rax, qword [0x04005249] 	      2803	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x5209	    0x8b80b0020000	           mov eax, dword [rax + 0x2b0] 	      2803	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x520f	            0x85c0	                           test eax, eax	      2803	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x5211	     0xf84fc000000	                            je 0x4005353	      2803	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x5217	    0x488b05000000	            mov rax, qword [0x0400525e] 	      2806	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x521e	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      2806	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x5224	            0x85c0	                           test eax, eax	      2806	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x5226	            0x7420	                            je 0x4005288	      2806	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x5228	    0x488b1d000000	            mov rbx, qword [0x0400526f] 	      2807	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x522f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2808	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_1
0x5233	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2808	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_1
0x5237	          0x4889d6	                            mov rsi, rdx	      2808	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_1
0x523a	          0x4889c7	                            mov rdi, rax	      2808	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_1
0x523d	      0xe800000000	                          call 0x4005282	      2808	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_1
0x5242	        0x48894338	             mov qword [rbx + 0x38], rax	      2807	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x5246	            0xeb0f	                           jmp 0x4005297	      2807	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x5248	    0x488b05000000	            mov rax, qword [0x0400528f] 	      2811	move.c	FUNCTION_51	FUNCTION_1	IF_1	ELSE_1
0x524f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2811	move.c	FUNCTION_51	FUNCTION_1	IF_1	ELSE_1
0x5253	        0x48895038	             mov qword [rax + 0x38], rdx	      2811	move.c	FUNCTION_51	FUNCTION_1	IF_1	ELSE_1
0x5257	    0x488b05000000	            mov rax, qword [0x0400529e] 	      2812	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x525e	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      2812	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x5261	          0x895040	             mov dword [rax + 0x40], edx	      2812	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x5264	    0x488b05000000	            mov rax, qword [0x040052ab] 	      2814	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x526b	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      2814	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x526e	          0x895044	             mov dword [rax + 0x44], edx	      2814	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x5271	    0x488b05000000	            mov rax, qword [0x040052b8] 	      2816	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x5278	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      2816	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x527b	          0x895048	             mov dword [rax + 0x48], edx	      2816	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x527e	    0x488b05000000	            mov rax, qword [0x040052c5] 	      2817	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x5285	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      2817	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x5288	          0x89504c	             mov dword [rax + 0x4c], edx	      2817	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x528b	    0x8b0500000000	            mov eax, dword [0x040052d1] 	      2821	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x5291	          0x8945d4	             mov dword [rbp - 0x2c], eax	      2821	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x5294	    0xc70500000000	               mov dword [0x040052de], 1	      2822	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x529e	      0xe800000000	                          call 0x40052e3	      2823	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_2
0x52a3	    0x488b05000000	            mov rax, qword [0x040052ea] 	      2825	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x52aa	    0x8b8070020000	           mov eax, dword [rax + 0x270] 	      2825	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x52b0	            0x85c0	                           test eax, eax	      2825	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x52b2	            0x7511	                           jne 0x4005305	      2825	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x52b4	    0x488b05000000	            mov rax, qword [0x040052fb] 	      2825	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x52bb	    0x8b806c020000	           mov eax, dword [rax + 0x26c] 	      2825	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x52c1	            0x85c0	                           test eax, eax	      2825	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x52c3	            0x7405	                            je 0x400530a	      2825	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x52c5	      0xe800000000	                          call 0x400530a	      2826	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_3
0x52ca	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2828	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x52cd	    0x890500000000	            mov dword [0x04005313], eax 	      2828	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x52d3	    0x8b0500000000	            mov eax, dword [0x04005319] 	      2831	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_4
0x52d9	            0x85c0	                           test eax, eax	      2831	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_4
0x52db	            0x7405	                            je 0x4005322	      2831	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_4
0x52dd	      0xe800000000	                          call 0x4005322	      2832	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_4
0x52e2	      0xbf0a000000	                            mov edi, 0xa	      2834	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_5
0x52e7	      0xe800000000	                          call 0x400532c	      2834	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_5
0x52ec	    0x488b05000000	            mov rax, qword [0x04005333] 	      2837	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_5
0x52f3	    0x8b8088020000	           mov eax, dword [rax + 0x288] 	      2837	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_5
0x52f9	            0x85c0	                           test eax, eax	      2837	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_5
0x52fb	            0x7505	                           jne 0x4005342	      2837	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_5
0x52fd	      0xe800000000	                          call 0x4005342	      2838	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_6
0x5302	    0x488b05000000	            mov rax, qword [0x04005349] 	      2839	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x5309	    0xc78040010000	              mov dword [rax + 0x140], 1	      2839	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x5313	    0x488b05000000	            mov rax, qword [0x0400535a] 	      2799	move.c	FUNCTION_51
0x531a	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2799	move.c	FUNCTION_51
0x531e	    0x488905000000	            mov qword [0x04005365], rax 	      2799	move.c	FUNCTION_51
0x5325	    0x488b05000000	            mov rax, qword [0x0400536c] 	      2799	move.c	FUNCTION_51
0x532c	          0x4885c0	                           test rax, rax	      2799	move.c	FUNCTION_51
0x532f	     0xf85aafeffff	                           jne 0x400521f	      2799	move.c	FUNCTION_51
0x5335	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2846	move.c	FUNCTION_51
0x5338	    0x890500000000	            mov dword [0x0400537e], eax 	      2846	move.c	FUNCTION_51
0x533e	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      2847	move.c	FUNCTION_51
0x5341	    0x890500000000	            mov dword [0x04005387], eax 	      2847	move.c	FUNCTION_51
0x5347	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2848	move.c	FUNCTION_51
0x534b	    0x488905000000	            mov qword [0x04005392], rax 	      2848	move.c	FUNCTION_51
0x5352	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2849	move.c	FUNCTION_51
0x5356	    0x488905000000	            mov qword [0x0400539d], rax 	      2849	move.c	FUNCTION_51
0x535d	              0x90	                                     nop	      2850	move.c	FUNCTION_51
0x535e	        0x4883c448	                           add rsp, 0x48	      2850	move.c	FUNCTION_51
0x5362	              0x5b	                                 pop rbx	      2850	move.c	FUNCTION_51
0x5363	              0x5d	                                 pop rbp	      2850	move.c	FUNCTION_51
0x5364	              0xc3	                                     ret	      2850	move.c	FUNCTION_51
validate_virtcol	CALL,1:WHILE,0:SWITCH,0:functions,0:DO,0:IF,0:ELSE,0:FOR,0	8
0x144f	              0x55	                                push rbp	       793	move.c	FUNCTION_24
0x1450	          0x4889e5	                            mov rbp, rsp	       793	move.c	FUNCTION_24
0x1453	    0x488b05000000	            mov rax, qword [0x0400149a] 	       794	move.c	FUNCTION_24	CALL_1
0x145a	          0x4889c7	                            mov rdi, rax	       794	move.c	FUNCTION_24	CALL_1
0x145d	      0xe800000000	                          call 0x40014a2	       794	move.c	FUNCTION_24	CALL_1
0x1462	              0x90	                                     nop	       795	move.c	FUNCTION_24
0x1463	              0x5d	                                 pop rbp	       795	move.c	FUNCTION_24
0x1464	              0xc3	                                     ret	       795	move.c	FUNCTION_24
validate_cursor_col	CALL,3:WHILE,0:SWITCH,0:functions,0:DO,0:IF,3:ELSE,1:FOR,0	66
0x15ec	              0x55	                                push rbp	       847	move.c	FUNCTION_27
0x15ed	          0x4889e5	                            mov rbp, rsp	       847	move.c	FUNCTION_27
0x15f0	              0x53	                                push rbx	       847	move.c	FUNCTION_27
0x15f1	        0x4883ec18	                           sub rsp, 0x18	       847	move.c	FUNCTION_27
0x15f5	      0xe800000000	                          call 0x400163a	       852	move.c	FUNCTION_27	CALL_1
0x15fa	    0x488b05000000	            mov rax, qword [0x04001641] 	       853	move.c	FUNCTION_27	IF_1
0x1601	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       853	move.c	FUNCTION_27	IF_1
0x1607	          0x83e002	                              and eax, 2	       853	move.c	FUNCTION_27	IF_1
0x160a	            0x85c0	                           test eax, eax	       853	move.c	FUNCTION_27	IF_1
0x160c	     0xf85dd000000	                           jne 0x400172f	       853	move.c	FUNCTION_27	IF_1
0x1612	    0x488b05000000	            mov rax, qword [0x04001659] 	       855	move.c	FUNCTION_27	IF_1
0x1619	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	       855	move.c	FUNCTION_27	IF_1
0x161f	          0x8945e4	             mov dword [rbp - 0x1c], eax	       855	move.c	FUNCTION_27	IF_1
0x1622	      0xe800000000	                          call 0x4001667	       856	move.c	FUNCTION_27	IF_1	CALL_2
0x1627	          0x8945e8	             mov dword [rbp - 0x18], eax	       856	move.c	FUNCTION_27	IF_1	CALL_2
0x162a	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       857	move.c	FUNCTION_27	IF_1
0x162d	           0x145e4	             add dword [rbp - 0x1c], eax	       857	move.c	FUNCTION_27	IF_1
0x1630	    0x488b05000000	            mov rax, qword [0x04001677] 	       858	move.c	FUNCTION_27	IF_1	CALL_3
0x1637	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       858	move.c	FUNCTION_27	IF_1	CALL_3
0x163d	          0x2b45e8	             sub eax, dword [rbp - 0x18]	       858	move.c	FUNCTION_27	IF_1	CALL_3
0x1640	            0x89c3	                            mov ebx, eax	       858	move.c	FUNCTION_27	IF_1	CALL_3
0x1642	      0xe800000000	                          call 0x4001687	       858	move.c	FUNCTION_27	IF_1	CALL_3
0x1647	             0x1d8	                            add eax, ebx	       858	move.c	FUNCTION_27	IF_1	CALL_3
0x1649	          0x8945ec	             mov dword [rbp - 0x14], eax	       858	move.c	FUNCTION_27	IF_1	CALL_3
0x164c	    0x488b05000000	            mov rax, qword [0x04001693] 	       861	move.c	FUNCTION_27	IF_1	IF_2
0x1653	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	       861	move.c	FUNCTION_27	IF_1	IF_2
0x1659	            0x85c0	                           test eax, eax	       861	move.c	FUNCTION_27	IF_1	IF_2
0x165b	            0x743a	                            je 0x40016d7	       861	move.c	FUNCTION_27	IF_1	IF_2
0x165d	    0x488b05000000	            mov rax, qword [0x040016a4] 	       862	move.c	FUNCTION_27	IF_1	IF_2
0x1664	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       862	move.c	FUNCTION_27	IF_1	IF_2
0x166a	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       862	move.c	FUNCTION_27	IF_1	IF_2
0x166d	            0x7f28	                            jg 0x40016d7	       862	move.c	FUNCTION_27	IF_1	IF_2
0x166f	        0x837dec00	               cmp dword [rbp - 0x14], 0	       863	move.c	FUNCTION_27	IF_1	IF_2
0x1673	            0x7e22	                           jle 0x40016d7	       863	move.c	FUNCTION_27	IF_1	IF_2
0x1675	    0x488b05000000	            mov rax, qword [0x040016bc] 	       865	move.c	FUNCTION_27	IF_1	IF_2
0x167c	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	       865	move.c	FUNCTION_27	IF_1	IF_2
0x1682	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       865	move.c	FUNCTION_27	IF_1	IF_2
0x1685	            0x29c2	                            sub edx, eax	       865	move.c	FUNCTION_27	IF_1	IF_2
0x1687	            0x89d0	                            mov eax, edx	       865	move.c	FUNCTION_27	IF_1	IF_2
0x1689	              0x99	                                     cdq	       865	move.c	FUNCTION_27	IF_1	IF_2
0x168a	          0xf77dec	                 idiv dword [rbp - 0x14]	       865	move.c	FUNCTION_27	IF_1	IF_2
0x168d	          0x83c001	                              add eax, 1	       865	move.c	FUNCTION_27	IF_1	IF_2
0x1690	         0xfaf45ec	            imul eax, dword [rbp - 0x14]	       865	move.c	FUNCTION_27	IF_1	IF_2
0x1694	          0x2945e4	             sub dword [rbp - 0x1c], eax	       865	move.c	FUNCTION_27	IF_1	IF_2
0x1697	    0x488b05000000	            mov rax, qword [0x040016de] 	       866	move.c	FUNCTION_27	IF_1	IF_3
0x169e	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	       866	move.c	FUNCTION_27	IF_1	IF_3
0x16a4	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       866	move.c	FUNCTION_27	IF_1	IF_3
0x16a7	            0x7d12	                           jge 0x40016fb	       866	move.c	FUNCTION_27	IF_1	IF_3
0x16a9	    0x488b05000000	            mov rax, qword [0x040016f0] 	       867	move.c	FUNCTION_27	IF_1	IF_3
0x16b0	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	       867	move.c	FUNCTION_27	IF_1	IF_3
0x16b6	          0x2945e4	             sub dword [rbp - 0x1c], eax	       867	move.c	FUNCTION_27	IF_1	IF_3
0x16b9	            0xeb07	                           jmp 0x4001702	       867	move.c	FUNCTION_27	IF_1	IF_3
0x16bb	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       869	move.c	FUNCTION_27	IF_1	ELSE_1
0x16c2	    0x488b05000000	            mov rax, qword [0x04001709] 	       870	move.c	FUNCTION_27	IF_1	ELSE_1
0x16c9	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       870	move.c	FUNCTION_27	IF_1	ELSE_1
0x16cc	    0x8990e0000000	             mov dword [rax + 0xe0], edx	       870	move.c	FUNCTION_27	IF_1	ELSE_1
0x16d2	    0x488b05000000	            mov rax, qword [0x04001719] 	       872	move.c	FUNCTION_27	IF_1	ELSE_1
0x16d9	    0x488b15000000	            mov rdx, qword [0x04001720] 	       872	move.c	FUNCTION_27	IF_1	ELSE_1
0x16e0	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	       872	move.c	FUNCTION_27	IF_1	ELSE_1
0x16e6	          0x83ca02	                               or edx, 2	       872	move.c	FUNCTION_27	IF_1	ELSE_1
0x16e9	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       872	move.c	FUNCTION_27	IF_1	ELSE_1
0x16ef	              0x90	                                     nop	       874	move.c	FUNCTION_27	ELSE_1
0x16f0	        0x4883c418	                           add rsp, 0x18	       874	move.c	FUNCTION_27	ELSE_1
0x16f4	              0x5b	                                 pop rbx	       874	move.c	FUNCTION_27	ELSE_1
0x16f5	              0x5d	                                 pop rbp	       874	move.c	FUNCTION_27	ELSE_1
0x16f6	              0xc3	                                     ret	       874	move.c	FUNCTION_27	ELSE_1
comp_botline	CALL,6:WHILE,0:SWITCH,0:functions,0:DO,0:IF,5:ELSE,3:FOR,1	134
0x0	              0x55	                                push rbp	        52	move.c	FUNCTION_1
0x1	          0x4889e5	                            mov rbp, rsp	        52	move.c	FUNCTION_1
0x4	        0x4883ec40	                           sub rsp, 0x40	        52	move.c	FUNCTION_1
0x8	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        52	move.c	FUNCTION_1
0xc	    0x64488b042528	                mov rax, qword fs:[0x28]	        52	move.c	FUNCTION_1
0x15	        0x488945f8	                mov qword [rbp - 8], rax	        52	move.c	FUNCTION_1
0x19	            0x31c0	                            xor eax, eax	        52	move.c	FUNCTION_1
0x1b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        65	move.c	FUNCTION_1	CALL_1
0x1f	          0x4889c7	                            mov rdi, rax	        65	move.c	FUNCTION_1	CALL_1
0x22	      0xe800000000	                          call 0x4000067	        65	move.c	FUNCTION_1	CALL_1
0x27	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        66	move.c	FUNCTION_1	IF_1
0x2b	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	        66	move.c	FUNCTION_1	IF_1
0x31	          0x83e010	                           and eax, 0x10	        66	move.c	FUNCTION_1	IF_1
0x34	            0x85c0	                           test eax, eax	        66	move.c	FUNCTION_1	IF_1
0x36	            0x741e	                            je 0x4000096	        66	move.c	FUNCTION_1	IF_1
0x38	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        68	move.c	FUNCTION_1	IF_1
0x3c	        0x488b4038	            mov rax, qword [rax + 0x38] 	        68	move.c	FUNCTION_1	IF_1
0x40	        0x488945f0	             mov qword [rbp - 0x10], rax	        68	move.c	FUNCTION_1	IF_1
0x44	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        69	move.c	FUNCTION_1	IF_1
0x48	    0x8b80d4000000	            mov eax, dword [rax + 0xd4] 	        69	move.c	FUNCTION_1	IF_1
0x4e	          0x8945e0	             mov dword [rbp - 0x20], eax	        69	move.c	FUNCTION_1	IF_1
0x51	      0xe94b010000	                           jmp 0x40001e1	        69	move.c	FUNCTION_1	IF_1
0x56	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        73	move.c	FUNCTION_1	ELSE_1
0x5a	        0x488b4078	            mov rax, qword [rax + 0x78] 	        73	move.c	FUNCTION_1	ELSE_1
0x5e	        0x488945f0	             mov qword [rbp - 0x10], rax	        73	move.c	FUNCTION_1	ELSE_1
0x62	    0xc745e0000000	               mov dword [rbp - 0x20], 0	        74	move.c	FUNCTION_1	ELSE_1
0x69	      0xe933010000	                           jmp 0x40001e1	        77	move.c	FUNCTION_1	FOR_1
0x6e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        80	move.c	FUNCTION_1	FOR_1
0x72	        0x488945e8	             mov qword [rbp - 0x18], rax	        80	move.c	FUNCTION_1	FOR_1
0x76	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	        81	move.c	FUNCTION_1	FOR_1
0x7d	        0x488d55e8	                   lea rdx, [rbp - 0x18]	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x81	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x85	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x89	    0x41b900000000	                              mov r9d, 0	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x8f	    0x41b801000000	                              mov r8d, 1	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x95	          0x4889d1	                            mov rcx, rdx	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x98	      0xba00000000	                              mov edx, 0	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x9d	          0x4889c7	                            mov rdi, rax	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0xa0	      0xe800000000	                          call 0x40000e5	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0xa5	            0x85c0	                           test eax, eax	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0xa7	            0x7410	                            je 0x40000f9	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0xa9	    0xc745dc010000	               mov dword [rbp - 0x24], 1	        84	move.c	FUNCTION_1	FOR_1	IF_2
0xb0	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	        85	move.c	FUNCTION_1	FOR_1	IF_2
0xb7	            0xeb54	                           jmp 0x400014d	        85	move.c	FUNCTION_1	FOR_1	IF_2
0xb9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        90	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0xbd	        0x488b4078	            mov rax, qword [rax + 0x78] 	        90	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0xc1	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        90	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0xc5	            0x752b	                           jne 0x4000132	        90	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0xc7	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0xcb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0xcf	      0xba01000000	                              mov edx, 1	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0xd4	          0x4889ce	                            mov rsi, rcx	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0xd7	          0x4889c7	                            mov rdi, rax	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0xda	      0xe800000000	                          call 0x400011f	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0xdf	            0x89c2	                            mov edx, eax	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0xe1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0xe5	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0xeb	             0x1d0	                            add eax, edx	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0xed	          0x8945dc	             mov dword [rbp - 0x24], eax	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0xf0	            0xeb1b	                           jmp 0x400014d	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0xf2	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        94	move.c	FUNCTION_1	FOR_1	CALL_4
0xf6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        94	move.c	FUNCTION_1	FOR_1	CALL_4
0xfa	      0xba01000000	                              mov edx, 1	        94	move.c	FUNCTION_1	FOR_1	CALL_4
0xff	          0x4889ce	                            mov rsi, rcx	        94	move.c	FUNCTION_1	FOR_1	CALL_4
0x102	          0x4889c7	                            mov rdi, rax	        94	move.c	FUNCTION_1	FOR_1	CALL_4
0x105	      0xe800000000	                          call 0x400014a	        94	move.c	FUNCTION_1	FOR_1	CALL_4
0x10a	          0x8945dc	             mov dword [rbp - 0x24], eax	        94	move.c	FUNCTION_1	FOR_1	CALL_4
0x10d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        97	move.c	FUNCTION_1	FOR_1	IF_4
0x111	        0x488b4038	            mov rax, qword [rax + 0x38] 	        97	move.c	FUNCTION_1	FOR_1	IF_4
0x115	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        95	move.c	FUNCTION_1	FOR_1	IF_4
0x119	            0x7c5d	                            jl 0x40001b8	        95	move.c	FUNCTION_1	FOR_1	IF_4
0x11b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        97	move.c	FUNCTION_1	FOR_1	IF_4
0x11f	        0x488b5038	            mov rdx, qword [rax + 0x38] 	        97	move.c	FUNCTION_1	FOR_1	IF_4
0x123	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        97	move.c	FUNCTION_1	FOR_1	IF_4
0x127	          0x4839c2	                            cmp rdx, rax	        97	move.c	FUNCTION_1	FOR_1	IF_4
0x12a	            0x7f4c	                            jg 0x40001b8	        97	move.c	FUNCTION_1	FOR_1	IF_4
0x12c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       103	move.c	FUNCTION_1	FOR_1	IF_4
0x130	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       103	move.c	FUNCTION_1	FOR_1	IF_4
0x133	    0x8990d4000000	             mov dword [rax + 0xd4], edx	       103	move.c	FUNCTION_1	FOR_1	IF_4
0x139	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       104	move.c	FUNCTION_1	FOR_1	IF_4
0x13d	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       104	move.c	FUNCTION_1	FOR_1	IF_4
0x140	    0x8990cc000000	             mov dword [rax + 0xcc], edx	       104	move.c	FUNCTION_1	FOR_1	IF_4
0x146	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       106	move.c	FUNCTION_1	FOR_1	IF_4
0x14a	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       106	move.c	FUNCTION_1	FOR_1	IF_4
0x14d	    0x8990d0000000	             mov dword [rax + 0xd0], edx	       106	move.c	FUNCTION_1	FOR_1	IF_4
0x153	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       108	move.c	FUNCTION_1	FOR_1	IF_4	CALL_5
0x157	          0x4889c7	                            mov rdi, rax	       108	move.c	FUNCTION_1	FOR_1	IF_4	CALL_5
0x15a	      0xe8aa000000	          call sym.redraw_for_cursorline	       108	move.c	FUNCTION_1	FOR_1	IF_4	CALL_5
0x15f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       109	move.c	FUNCTION_1	FOR_1	IF_4
0x163	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       109	move.c	FUNCTION_1	FOR_1	IF_4
0x169	          0x83c818	                            or eax, 0x18	       109	move.c	FUNCTION_1	FOR_1	IF_4
0x16c	            0x89c2	                            mov edx, eax	       109	move.c	FUNCTION_1	FOR_1	IF_4
0x16e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       109	move.c	FUNCTION_1	FOR_1	IF_4
0x172	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       109	move.c	FUNCTION_1	FOR_1	IF_4
0x178	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x17b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x17e	             0x1c2	                            add edx, eax	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x180	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x184	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x18a	            0x39c2	                            cmp edx, eax	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x18c	            0x7f2a	                            jg 0x40001f8	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x18e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       113	move.c	FUNCTION_1	FOR_1
0x191	           0x145e0	             add dword [rbp - 0x20], eax	       113	move.c	FUNCTION_1	FOR_1
0x194	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       115	move.c	FUNCTION_1	FOR_1
0x198	        0x488945f0	             mov qword [rbp - 0x10], rax	       115	move.c	FUNCTION_1	FOR_1
0x19c	      0x488345f001	               add qword [rbp - 0x10], 1	        77	move.c	FUNCTION_1	FOR_1
0x1a1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        77	move.c	FUNCTION_1	FOR_1
0x1a5	        0x488b4008	                mov rax, qword [rax + 8]	        77	move.c	FUNCTION_1	FOR_1
0x1a9	          0x488b00	                    mov rax, qword [rax]	        77	move.c	FUNCTION_1	FOR_1
0x1ac	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        77	move.c	FUNCTION_1	FOR_1
0x1b0	     0xf8db8feffff	                           jge 0x40000ae	        77	move.c	FUNCTION_1	FOR_1
0x1b6	            0xeb01	                           jmp 0x40001f9	        77	move.c	FUNCTION_1	FOR_1
0x1b8	              0x90	                                     nop	       112	move.c	FUNCTION_1	FOR_1	IF_5
0x1b9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       120	move.c	FUNCTION_1
0x1bd	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       120	move.c	FUNCTION_1
0x1c1	    0x488990e80000	             mov qword [rax + 0xe8], rdx	       120	move.c	FUNCTION_1
0x1c8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       121	move.c	FUNCTION_1
0x1cc	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       121	move.c	FUNCTION_1
0x1d2	          0x83c860	                            or eax, 0x60	       121	move.c	FUNCTION_1
0x1d5	            0x89c2	                            mov edx, eax	       121	move.c	FUNCTION_1
0x1d7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       121	move.c	FUNCTION_1
0x1db	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       121	move.c	FUNCTION_1
0x1e1	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       123	move.c	FUNCTION_1	CALL_6
0x1e4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       123	move.c	FUNCTION_1	CALL_6
0x1e8	            0x89d6	                            mov esi, edx	       123	move.c	FUNCTION_1	CALL_6
0x1ea	          0x4889c7	                            mov rdi, rax	       123	move.c	FUNCTION_1	CALL_6
0x1ed	      0xe800000000	                          call 0x4000232	       123	move.c	FUNCTION_1	CALL_6
0x1f2	              0x90	                                     nop	       124	move.c	FUNCTION_1
0x1f3	        0x488b45f8	                mov rax, qword [rbp - 8]	       124	move.c	FUNCTION_1
0x1f7	    0x644833042528	                xor rax, qword fs:[0x28]	       124	move.c	FUNCTION_1
0x200	            0x7405	                            je 0x4000247	       124	move.c	FUNCTION_1
0x202	      0xe800000000	                          call 0x4000247	       124	move.c	FUNCTION_1
0x207	              0xc9	                                   leave	       124	move.c	FUNCTION_1
0x208	              0xc3	                                     ret	       124	move.c	FUNCTION_1
scroll_cursor_bot	CALL,12:WHILE,1:SWITCH,0:functions,0:DO,0:IF,21:ELSE,5:FOR,2	366
0x356d	              0x55	                                push rbp	      1820	move.c	FUNCTION_45
0x356e	          0x4889e5	                            mov rbp, rsp	      1820	move.c	FUNCTION_45
0x3571	    0x4881ec900000	                           sub rsp, 0x90	      1820	move.c	FUNCTION_45
0x3578	    0x89bd7cffffff	             mov dword [rbp - 0x84], edi	      1820	move.c	FUNCTION_45
0x357e	    0x89b578ffffff	             mov dword [rbp - 0x88], esi	      1820	move.c	FUNCTION_45
0x3584	    0x64488b042528	                mov rax, qword fs:[0x28]	      1820	move.c	FUNCTION_45
0x358d	        0x488945f8	                mov qword [rbp - 8], rax	      1820	move.c	FUNCTION_45
0x3591	            0x31c0	                            xor eax, eax	      1820	move.c	FUNCTION_45
0x3593	    0xc74590000000	               mov dword [rbp - 0x70], 0	      1822	move.c	FUNCTION_45
0x359a	    0xc74594000000	               mov dword [rbp - 0x6c], 0	      1823	move.c	FUNCTION_45
0x35a1	    0x488b05000000	            mov rax, qword [0x040035e8] 	      1826	move.c	FUNCTION_45
0x35a8	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1826	move.c	FUNCTION_45
0x35ac	        0x488945b0	             mov qword [rbp - 0x50], rax	      1826	move.c	FUNCTION_45
0x35b0	    0x488b05000000	            mov rax, qword [0x040035f7] 	      1830	move.c	FUNCTION_45
0x35b7	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1830	move.c	FUNCTION_45
0x35bd	          0x89459c	             mov dword [rbp - 0x64], eax	      1830	move.c	FUNCTION_45
0x35c0	    0x488b05000000	            mov rax, qword [0x04003607] 	      1833	move.c	FUNCTION_45
0x35c7	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1833	move.c	FUNCTION_45
0x35ce	        0x488945b8	             mov qword [rbp - 0x48], rax	      1833	move.c	FUNCTION_45
0x35d2	    0x488b05000000	            mov rax, qword [0x04003619] 	      1834	move.c	FUNCTION_45
0x35d9	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      1834	move.c	FUNCTION_45
0x35df	            0x4898	                                    cdqe	      1834	move.c	FUNCTION_45
0x35e1	        0x488945c0	             mov qword [rbp - 0x40], rax	      1834	move.c	FUNCTION_45
0x35e5	    0x488b05000000	            mov rax, qword [0x0400362c] 	      1835	move.c	FUNCTION_45
0x35ec	    0x8b80f0000000	            mov eax, dword [rax + 0xf0] 	      1835	move.c	FUNCTION_45
0x35f2	          0x8945a0	             mov dword [rbp - 0x60], eax	      1835	move.c	FUNCTION_45
0x35f5	    0x488b05000000	            mov rax, qword [0x0400363c] 	      1838	move.c	FUNCTION_45
0x35fc	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1838	move.c	FUNCTION_45
0x3600	        0x488945c8	             mov qword [rbp - 0x38], rax	      1838	move.c	FUNCTION_45
0x3604	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      1839	move.c	FUNCTION_45	IF_1
0x360b	     0xf8426010000	                            je 0x4003777	      1839	move.c	FUNCTION_45	IF_1
0x3611	    0xc7458c000000	               mov dword [rbp - 0x74], 0	      1841	move.c	FUNCTION_45	IF_1
0x3618	    0x488b05000000	            mov rax, qword [0x0400365f] 	      1842	move.c	FUNCTION_45	IF_1
0x361f	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1842	move.c	FUNCTION_45	IF_1
0x3623	        0x4883c201	                              add rdx, 1	      1842	move.c	FUNCTION_45	IF_1
0x3627	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      1842	move.c	FUNCTION_45	IF_1
0x362e	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1844	move.c	FUNCTION_45	IF_1
0x3635	    0x488b05000000	            mov rax, qword [0x0400367c] 	      1846	move.c	FUNCTION_45	IF_1	FOR_1
0x363c	    0x488b15000000	            mov rdx, qword [0x04003683] 	      1846	move.c	FUNCTION_45	IF_1	FOR_1
0x3643	    0x488b92e80000	            mov rdx, qword [rdx + 0xe8] 	      1846	move.c	FUNCTION_45	IF_1	FOR_1
0x364a	        0x48895078	             mov qword [rax + 0x78], rdx	      1846	move.c	FUNCTION_45	IF_1	FOR_1
0x364e	            0xeb63	                           jmp 0x40036f3	      1846	move.c	FUNCTION_45	IF_1	FOR_1
0x3650	    0x488b05000000	            mov rax, qword [0x04003697] 	      1850	move.c	FUNCTION_45	IF_1	FOR_1
0x3657	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1850	move.c	FUNCTION_45	IF_1	FOR_1
0x365b	        0x488945d0	             mov qword [rbp - 0x30], rax	      1850	move.c	FUNCTION_45	IF_1	FOR_1
0x365f	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1851	move.c	FUNCTION_45	IF_1	FOR_1	CALL_1
0x3663	          0x4889c7	                            mov rdi, rax	      1851	move.c	FUNCTION_45	IF_1	FOR_1	CALL_1
0x3666	      0xe8d1f7ffff	                   call sym.topline_back	      1851	move.c	FUNCTION_45	IF_1	FOR_1	CALL_1
0x366b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1852	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x366e	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      1852	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x3673	            0x744f	                            je 0x4003704	      1852	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x3675	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1852	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x3678	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1852	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x367b	             0x1c2	                            add edx, eax	      1852	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x367d	    0x488b05000000	            mov rax, qword [0x040036c4] 	      1852	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x3684	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1852	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x368a	            0x39c2	                            cmp edx, eax	      1852	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x368c	            0x7f36	                            jg 0x4003704	      1852	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x368e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1854	move.c	FUNCTION_45	IF_1	FOR_1
0x3691	           0x1458c	             add dword [rbp - 0x74], eax	      1854	move.c	FUNCTION_45	IF_1	FOR_1
0x3694	    0x488b05000000	            mov rax, qword [0x040036db] 	      1856	move.c	FUNCTION_45	IF_1	FOR_1
0x369b	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1856	move.c	FUNCTION_45	IF_1	FOR_1
0x369e	    0x899084000000	             mov dword [rax + 0x84], edx	      1856	move.c	FUNCTION_45	IF_1	FOR_1
0x36a4	    0x488b05000000	            mov rax, qword [0x040036eb] 	      1848	move.c	FUNCTION_45	IF_1	FOR_1
0x36ab	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1848	move.c	FUNCTION_45	IF_1	FOR_1
0x36af	        0x48895078	             mov qword [rax + 0x78], rdx	      1848	move.c	FUNCTION_45	IF_1	FOR_1
0x36b3	    0x488b05000000	            mov rax, qword [0x040036fa] 	      1847	move.c	FUNCTION_45	IF_1	FOR_1
0x36ba	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1847	move.c	FUNCTION_45	IF_1	FOR_1
0x36be	        0x4883f801	                              cmp rax, 1	      1846	move.c	FUNCTION_45	IF_1	FOR_1
0x36c2	            0x7f8c	                            jg 0x4003690	      1846	move.c	FUNCTION_45	IF_1	FOR_1
0x36c4	    0x488b05000000	            mov rax, qword [0x0400370b] 	      1859	move.c	FUNCTION_45	IF_1	CALL_2
0x36cb	          0x8b558c	             mov edx, dword [rbp - 0x74]	      1859	move.c	FUNCTION_45	IF_1	CALL_2
0x36ce	            0x89d6	                            mov esi, edx	      1859	move.c	FUNCTION_45	IF_1	CALL_2
0x36d0	          0x4889c7	                            mov rdi, rax	      1859	move.c	FUNCTION_45	IF_1	CALL_2
0x36d3	      0xe800000000	                          call 0x4003718	      1859	move.c	FUNCTION_45	IF_1	CALL_2
0x36d8	    0x488b05000000	            mov rax, qword [0x0400371f] 	      1860	move.c	FUNCTION_45	IF_1
0x36df	    0x488b15000000	            mov rdx, qword [0x04003726] 	      1860	move.c	FUNCTION_45	IF_1
0x36e6	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      1860	move.c	FUNCTION_45	IF_1
0x36ec	          0x83ca60	                            or edx, 0x60	      1860	move.c	FUNCTION_45	IF_1
0x36ef	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1860	move.c	FUNCTION_45	IF_1
0x36f5	    0x488b05000000	            mov rax, qword [0x0400373c] 	      1861	move.c	FUNCTION_45	IF_1	IF_3
0x36fc	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1861	move.c	FUNCTION_45	IF_1	IF_3
0x3700	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      1861	move.c	FUNCTION_45	IF_1	IF_3
0x3704	            0x7512	                           jne 0x4003758	      1861	move.c	FUNCTION_45	IF_1	IF_3
0x3706	    0x488b05000000	            mov rax, qword [0x0400374d] 	      1863	move.c	FUNCTION_45	IF_1	IF_3
0x370d	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1863	move.c	FUNCTION_45	IF_1	IF_3
0x3713	          0x3b459c	             cmp eax, dword [rbp - 0x64]	      1863	move.c	FUNCTION_45	IF_1	IF_3
0x3716	            0x7424	                            je 0x400377c	      1863	move.c	FUNCTION_45	IF_1	IF_3
0x3718	    0x488b05000000	            mov rax, qword [0x0400375f] 	      1866	move.c	FUNCTION_45	IF_1	IF_3
0x371f	    0x488b15000000	            mov rdx, qword [0x04003766] 	      1866	move.c	FUNCTION_45	IF_1	IF_3
0x3726	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      1866	move.c	FUNCTION_45	IF_1	IF_3
0x372c	          0x83e2ee	                     and edx, 0xffffffee	      1866	move.c	FUNCTION_45	IF_1	IF_3
0x372f	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1866	move.c	FUNCTION_45	IF_1	IF_3
0x3735	            0xeb05	                           jmp 0x400377c	      1866	move.c	FUNCTION_45	IF_1	IF_3
0x3737	      0xe800000000	                          call 0x400377c	      1869	move.c	FUNCTION_45	CALL_3
0x373c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1873	move.c	FUNCTION_45	CALL_4
0x3740	          0x4889c7	                            mov rdi, rax	      1873	move.c	FUNCTION_45	CALL_4
0x3743	      0xe800000000	                          call 0x4003788	      1873	move.c	FUNCTION_45	CALL_4
0x3748	          0x89458c	             mov dword [rbp - 0x74], eax	      1873	move.c	FUNCTION_45	CALL_4
0x374b	    0x488b05000000	            mov rax, qword [0x04003792] 	      1882	move.c	FUNCTION_45	IF_4
0x3752	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1882	move.c	FUNCTION_45	IF_4
0x3759	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      1882	move.c	FUNCTION_45	IF_4
0x375d	            0x7f2a	                            jg 0x40037c9	      1882	move.c	FUNCTION_45	IF_4
0x375f	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1884	move.c	FUNCTION_45	IF_4
0x3762	          0x894590	             mov dword [rbp - 0x70], eax	      1884	move.c	FUNCTION_45	IF_4
0x3765	    0x488b05000000	            mov rax, qword [0x040037ac] 	      1885	move.c	FUNCTION_45	IF_4	IF_5
0x376c	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1885	move.c	FUNCTION_45	IF_4	IF_5
0x3773	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      1885	move.c	FUNCTION_45	IF_4	IF_5
0x3777	            0x7510	                           jne 0x40037c9	      1885	move.c	FUNCTION_45	IF_4	IF_5
0x3779	    0x488b05000000	            mov rax, qword [0x040037c0] 	      1886	move.c	FUNCTION_45	IF_4	IF_5
0x3780	    0x8b80f0000000	            mov eax, dword [rax + 0xf0] 	      1886	move.c	FUNCTION_45	IF_4	IF_5
0x3786	          0x294590	             sub dword [rbp - 0x70], eax	      1886	move.c	FUNCTION_45	IF_4	IF_5
0x3789	    0x488b05000000	            mov rax, qword [0x040037d0] 	      1897	move.c	FUNCTION_45	IF_6	CALL_6
0x3790	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1897	move.c	FUNCTION_45	IF_6	CALL_6
0x3794	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1897	move.c	FUNCTION_45	IF_6	CALL_6
0x3798	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      1897	move.c	FUNCTION_45	IF_6	CALL_6
0x379c	          0x4889ce	                            mov rsi, rcx	      1897	move.c	FUNCTION_45	IF_6	CALL_6
0x379f	          0x4889c7	                            mov rdi, rax	      1897	move.c	FUNCTION_45	IF_6	CALL_6
0x37a2	      0xe800000000	                          call 0x40037e7	      1897	move.c	FUNCTION_45	IF_6	CALL_6
0x37a7	            0x85c0	                           test eax, eax	      1897	move.c	FUNCTION_45	IF_6	CALL_6
0x37a9	            0x7510	                           jne 0x40037fb	      1897	move.c	FUNCTION_45	IF_6	CALL_6
0x37ab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1900	move.c	FUNCTION_45	IF_6
0x37af	        0x488945d0	             mov qword [rbp - 0x30], rax	      1900	move.c	FUNCTION_45	IF_6
0x37b3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1901	move.c	FUNCTION_45	IF_6
0x37b7	        0x488945e0	             mov qword [rbp - 0x20], rax	      1901	move.c	FUNCTION_45	IF_6
0x37bb	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1904	move.c	FUNCTION_45
0x37c2	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1905	move.c	FUNCTION_45
0x37c9	    0x488b05000000	            mov rax, qword [0x04003810] 	      1906	move.c	FUNCTION_45	CALL_7
0x37d0	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      1906	move.c	FUNCTION_45	CALL_7
0x37d7	    0x488b05000000	            mov rax, qword [0x0400381e] 	      1906	move.c	FUNCTION_45	CALL_7
0x37de	          0x4889d6	                            mov rsi, rdx	      1906	move.c	FUNCTION_45	CALL_7
0x37e1	          0x4889c7	                            mov rdi, rax	      1906	move.c	FUNCTION_45	CALL_7
0x37e4	      0xe800000000	                          call 0x4003829	      1906	move.c	FUNCTION_45	CALL_7
0x37e9	            0x89c2	                            mov edx, eax	      1906	move.c	FUNCTION_45	CALL_7
0x37eb	    0x488b05000000	            mov rax, qword [0x04003832] 	      1907	move.c	FUNCTION_45
0x37f2	    0x8b80f4000000	            mov eax, dword [rax + 0xf4] 	      1907	move.c	FUNCTION_45
0x37f8	            0x29c2	                            sub edx, eax	      1906	move.c	FUNCTION_45	CALL_7
0x37fa	            0x89d0	                            mov eax, edx	      1906	move.c	FUNCTION_45	CALL_7
0x37fc	          0x8945a4	             mov dword [rbp - 0x5c], eax	      1906	move.c	FUNCTION_45	CALL_7
0x37ff	      0xe92b020000	                           jmp 0x4003a6f	      1910	move.c	FUNCTION_45	WHILE_1
0x3804	        0x837d9000	               cmp dword [rbp - 0x70], 0	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x3808	            0x7e0b	                           jle 0x4003855	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x380a	          0x8b4590	             mov eax, dword [rbp - 0x70]	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x380d	    0x3b857cffffff	             cmp eax, dword [rbp - 0x84]	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x3813	            0x7c29	                            jl 0x400387e	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x3815	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      1915	move.c	FUNCTION_45	WHILE_1	IF_7
0x3818	          0x4863d0	                         movsxd rdx, eax	      1915	move.c	FUNCTION_45	WHILE_1	IF_7
0x381b	    0x8b0500000000	            mov eax, dword [0x04003861] 	      1917	move.c	FUNCTION_45	WHILE_1	IF_7
0x3821	            0x85c0	                           test eax, eax	      1917	move.c	FUNCTION_45	WHILE_1	IF_7
0x3823	            0x7e0d	                           jle 0x4003872	      1917	move.c	FUNCTION_45	WHILE_1	IF_7
0x3825	    0x8b0500000000	            mov eax, dword [0x0400386b] 	      1917	move.c	FUNCTION_45	WHILE_1	IF_7
0x382b	          0x83e801	                              sub eax, 1	      1917	move.c	FUNCTION_45	WHILE_1	IF_7
0x382e	            0x4898	                                    cdqe	      1917	move.c	FUNCTION_45	WHILE_1	IF_7
0x3830	            0xeb07	                           jmp 0x4003879	      1917	move.c	FUNCTION_45	WHILE_1	IF_7
0x3832	    0x488b05000000	            mov rax, qword [0x04003879] 	      1917	move.c	FUNCTION_45	WHILE_1	IF_7
0x3839	          0x4839c2	                            cmp rdx, rax	      1915	move.c	FUNCTION_45	WHILE_1	IF_7
0x383c	            0x7d17	                           jge 0x4003895	      1915	move.c	FUNCTION_45	WHILE_1	IF_7
0x383e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1920	move.c	FUNCTION_45	WHILE_1	IF_7
0x3842	        0x488d5001	                      lea rdx, [rax + 1]	      1920	move.c	FUNCTION_45	WHILE_1	IF_7
0x3846	    0x488b05000000	            mov rax, qword [0x0400388d] 	      1920	move.c	FUNCTION_45	WHILE_1	IF_7
0x384d	          0x488b00	                    mov rax, qword [rax]	      1920	move.c	FUNCTION_45	WHILE_1	IF_7
0x3850	          0x4839c2	                            cmp rdx, rax	      1920	move.c	FUNCTION_45	WHILE_1	IF_7
0x3853	            0x7e3e	                           jle 0x40038d3	      1920	move.c	FUNCTION_45	WHILE_1	IF_7
0x3855	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1921	move.c	FUNCTION_45	WHILE_1	IF_7
0x3859	    0x488b05000000	            mov rax, qword [0x040038a0] 	      1921	move.c	FUNCTION_45	WHILE_1	IF_7
0x3860	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1921	move.c	FUNCTION_45	WHILE_1	IF_7
0x3867	          0x4839c2	                            cmp rdx, rax	      1921	move.c	FUNCTION_45	WHILE_1	IF_7
0x386a	            0x7f27	                            jg 0x40038d3	      1921	move.c	FUNCTION_45	WHILE_1	IF_7
0x386c	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1923	move.c	FUNCTION_45	WHILE_1	IF_7
0x3870	    0x488b05000000	            mov rax, qword [0x040038b7] 	      1923	move.c	FUNCTION_45	WHILE_1	IF_7
0x3877	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1923	move.c	FUNCTION_45	WHILE_1	IF_7
0x387e	          0x4839c2	                            cmp rdx, rax	      1923	move.c	FUNCTION_45	WHILE_1	IF_7
0x3881	     0xf8cbc010000	                            jl 0x4003a83	      1923	move.c	FUNCTION_45	WHILE_1	IF_7
0x3887	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1924	move.c	FUNCTION_45	WHILE_1	IF_7
0x388a	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	      1924	move.c	FUNCTION_45	WHILE_1	IF_7
0x388d	     0xf8db0010000	                           jge 0x4003a83	      1924	move.c	FUNCTION_45	WHILE_1	IF_7
0x3893	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1930	move.c	FUNCTION_45	WHILE_1	CALL_8
0x3897	          0x4889c7	                            mov rdi, rax	      1930	move.c	FUNCTION_45	WHILE_1	CALL_8
0x389a	      0xe89df5ffff	                   call sym.topline_back	      1930	move.c	FUNCTION_45	WHILE_1	CALL_8
0x389f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1931	move.c	FUNCTION_45	WHILE_1	IF_8
0x38a2	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      1931	move.c	FUNCTION_45	WHILE_1	IF_8
0x38a7	            0x7509	                           jne 0x40038f2	      1931	move.c	FUNCTION_45	WHILE_1	IF_8
0x38a9	    0xc7458cffffff	      mov dword [rbp - 0x74], 0x7fffffff	      1932	move.c	FUNCTION_45	WHILE_1	IF_8
0x38b0	            0xeb06	                           jmp 0x40038f8	      1932	move.c	FUNCTION_45	WHILE_1	IF_8
0x38b2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1934	move.c	FUNCTION_45	WHILE_1	ELSE_2
0x38b5	           0x1458c	             add dword [rbp - 0x74], eax	      1934	move.c	FUNCTION_45	WHILE_1	ELSE_2
0x38b8	    0x488b05000000	            mov rax, qword [0x040038ff] 	      1935	move.c	FUNCTION_45	WHILE_1	IF_9
0x38bf	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1935	move.c	FUNCTION_45	WHILE_1	IF_9
0x38c5	          0x3b458c	             cmp eax, dword [rbp - 0x74]	      1935	move.c	FUNCTION_45	WHILE_1	IF_9
0x38c8	     0xf8c71010000	                            jl 0x4003a7f	      1935	move.c	FUNCTION_45	WHILE_1	IF_9
0x38ce	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1937	move.c	FUNCTION_45	WHILE_1	IF_10
0x38d2	    0x488b05000000	            mov rax, qword [0x04003919] 	      1937	move.c	FUNCTION_45	WHILE_1	IF_10
0x38d9	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1937	move.c	FUNCTION_45	WHILE_1	IF_10
0x38e0	          0x4839c2	                            cmp rdx, rax	      1937	move.c	FUNCTION_45	WHILE_1	IF_10
0x38e3	            0x7c53	                            jl 0x4003978	      1937	move.c	FUNCTION_45	WHILE_1	IF_10
0x38e5	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1939	move.c	FUNCTION_45	WHILE_1	IF_10
0x38e9	    0x488b05000000	            mov rax, qword [0x04003930] 	      1939	move.c	FUNCTION_45	WHILE_1	IF_10
0x38f0	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1939	move.c	FUNCTION_45	WHILE_1	IF_10
0x38f7	          0x4839c2	                            cmp rdx, rax	      1939	move.c	FUNCTION_45	WHILE_1	IF_10
0x38fa	            0x7f08	                            jg 0x4003944	      1939	move.c	FUNCTION_45	WHILE_1	IF_10
0x38fc	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1940	move.c	FUNCTION_45	WHILE_1	IF_10
0x38ff	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	      1940	move.c	FUNCTION_45	WHILE_1	IF_10
0x3902	            0x7f34	                            jg 0x4003978	      1940	move.c	FUNCTION_45	WHILE_1	IF_10
0x3904	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1945	move.c	FUNCTION_45	WHILE_1	IF_10
0x3907	           0x14590	             add dword [rbp - 0x70], eax	      1945	move.c	FUNCTION_45	WHILE_1	IF_10
0x390a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1946	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x390e	    0x488b05000000	            mov rax, qword [0x04003955] 	      1946	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x3915	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1946	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x391c	          0x4839c2	                            cmp rdx, rax	      1946	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x391f	            0x7517	                           jne 0x4003978	      1946	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x3921	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1948	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x3924	            0x85c0	                           test eax, eax	      1948	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x3926	            0x7510	                           jne 0x4003978	      1948	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x3928	    0x488b05000000	            mov rax, qword [0x0400396f] 	      1951	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x392f	    0x8b80f0000000	            mov eax, dword [rax + 0xf0] 	      1951	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x3935	          0x294590	             sub dword [rbp - 0x70], eax	      1951	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x3938	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1954	move.c	FUNCTION_45	WHILE_1	IF_12
0x393c	    0x488b05000000	            mov rax, qword [0x04003983] 	      1954	move.c	FUNCTION_45	WHILE_1	IF_12
0x3943	          0x488b00	                    mov rax, qword [rax]	      1954	move.c	FUNCTION_45	WHILE_1	IF_12
0x3946	          0x4839c2	                            cmp rdx, rax	      1954	move.c	FUNCTION_45	WHILE_1	IF_12
0x3949	     0xf8de0000000	                           jge 0x4003a6f	      1954	move.c	FUNCTION_45	WHILE_1	IF_12
0x394f	        0x488d45e0	                   lea rax, [rbp - 0x20]	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	CALL_9
0x3953	          0x4889c7	                            mov rdi, rax	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	CALL_9
0x3956	      0xe8b2f5ffff	                   call sym.botline_forw	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	CALL_9
0x395b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1958	move.c	FUNCTION_45	WHILE_1	IF_12
0x395e	           0x1458c	             add dword [rbp - 0x74], eax	      1958	move.c	FUNCTION_45	WHILE_1	IF_12
0x3961	    0x488b05000000	            mov rax, qword [0x040039a8] 	      1959	move.c	FUNCTION_45	WHILE_1	IF_12	IF_13
0x3968	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1959	move.c	FUNCTION_45	WHILE_1	IF_12	IF_13
0x396e	          0x3b458c	             cmp eax, dword [rbp - 0x74]	      1959	move.c	FUNCTION_45	WHILE_1	IF_12	IF_13
0x3971	     0xf8ccb000000	                            jl 0x4003a82	      1959	move.c	FUNCTION_45	WHILE_1	IF_12	IF_13
0x3977	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      1961	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x397a	          0x4863d0	                         movsxd rdx, eax	      1961	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x397d	    0x8b0500000000	            mov eax, dword [0x040039c3] 	      1963	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x3983	            0x85c0	                           test eax, eax	      1963	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x3985	            0x7e0d	                           jle 0x40039d4	      1963	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x3987	    0x8b0500000000	            mov eax, dword [0x040039cd] 	      1963	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x398d	          0x83e801	                              sub eax, 1	      1963	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x3990	            0x4898	                                    cdqe	      1963	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x3992	            0xeb07	                           jmp 0x40039db	      1963	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x3994	    0x488b05000000	            mov rax, qword [0x040039db] 	      1963	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x399b	          0x4839c2	                            cmp rdx, rax	      1961	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x399e	            0x7c0f	                            jl 0x40039ef	      1961	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x39a0	          0x8b4590	             mov eax, dword [rbp - 0x70]	      1965	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x39a3	    0x3b857cffffff	             cmp eax, dword [rbp - 0x84]	      1965	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x39a9	     0xf8d80000000	                           jge 0x4003a6f	      1965	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x39af	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1967	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x39b2	           0x14594	             add dword [rbp - 0x6c], eax	      1967	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x39b5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1968	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x39b9	    0x488b05000000	            mov rax, qword [0x04003a00] 	      1968	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x39c0	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1968	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x39c7	          0x4839c2	                            cmp rdx, rax	      1968	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x39ca	            0x7d2f	                           jge 0x4003a3b	      1968	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x39cc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1970	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x39d0	        0x488d5001	                      lea rdx, [rax + 1]	      1970	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x39d4	    0x488b05000000	            mov rax, qword [0x04003a1b] 	      1970	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x39db	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1970	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x39e2	          0x4839c2	                            cmp rdx, rax	      1970	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x39e5	            0x7548	                           jne 0x4003a6f	      1970	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x39e7	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1971	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x39ea	    0x488b05000000	            mov rax, qword [0x04003a31] 	      1971	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x39f1	    0x8b80f4000000	            mov eax, dword [rax + 0xf4] 	      1971	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x39f7	            0x39c2	                            cmp edx, eax	      1971	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x39f9	            0x7e34	                           jle 0x4003a6f	      1971	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x39fb	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1976	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x39fe	           0x14590	             add dword [rbp - 0x70], eax	      1976	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x3a01	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1977	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x3a05	    0x488b05000000	            mov rax, qword [0x04003a4c] 	      1977	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x3a0c	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1977	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x3a13	          0x4839c2	                            cmp rdx, rax	      1977	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x3a16	            0x7517	                           jne 0x4003a6f	      1977	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x3a18	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1979	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x3a1b	            0x85c0	                           test eax, eax	      1979	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x3a1d	            0x7510	                           jne 0x4003a6f	      1979	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x3a1f	    0x488b05000000	            mov rax, qword [0x04003a66] 	      1982	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x3a26	    0x8b80f0000000	            mov eax, dword [rax + 0xf0] 	      1982	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x3a2c	          0x294590	             sub dword [rbp - 0x70], eax	      1982	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x3a2f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1910	move.c	FUNCTION_45	WHILE_1
0x3a33	        0x4883f801	                              cmp rax, 1	      1910	move.c	FUNCTION_45	WHILE_1
0x3a37	     0xf8fc7fdffff	                            jg 0x4003844	      1910	move.c	FUNCTION_45	WHILE_1
0x3a3d	            0xeb04	                           jmp 0x4003a83	      1910	move.c	FUNCTION_45	WHILE_1
0x3a3f	              0x90	                                     nop	      1936	move.c	FUNCTION_45	WHILE_1	IF_9
0x3a40	            0xeb01	                           jmp 0x4003a83	      1936	move.c	FUNCTION_45	WHILE_1	IF_9
0x3a42	              0x90	                                     nop	      1960	move.c	FUNCTION_45	WHILE_1	IF_12	IF_13
0x3a43	        0x837d9000	               cmp dword [rbp - 0x70], 0	      1989	move.c	FUNCTION_45	IF_17
0x3a47	            0x7f0d	                            jg 0x4003a96	      1989	move.c	FUNCTION_45	IF_17
0x3a49	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1990	move.c	FUNCTION_45	IF_17
0x3a51	      0xe997000000	                           jmp 0x4003b2d	      1990	move.c	FUNCTION_45	IF_17
0x3a56	    0x488b05000000	            mov rax, qword [0x04003a9d] 	      1992	move.c	FUNCTION_45	ELSE_3	IF_18
0x3a5d	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1992	move.c	FUNCTION_45	ELSE_3	IF_18
0x3a63	          0x3b458c	             cmp eax, dword [rbp - 0x74]	      1992	move.c	FUNCTION_45	ELSE_3	IF_18
0x3a66	            0x7d0b	                           jge 0x4003ab3	      1992	move.c	FUNCTION_45	ELSE_3	IF_18
0x3a68	          0x8b458c	             mov eax, dword [rbp - 0x74]	      1993	move.c	FUNCTION_45	ELSE_3	IF_18
0x3a6b	            0x4898	                                    cdqe	      1993	move.c	FUNCTION_45	ELSE_3	IF_18
0x3a6d	        0x488945a8	             mov qword [rbp - 0x58], rax	      1993	move.c	FUNCTION_45	ELSE_3	IF_18
0x3a71	            0xeb7a	                           jmp 0x4003b2d	      1993	move.c	FUNCTION_45	ELSE_3	IF_18
0x3a73	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      1997	move.c	FUNCTION_45	ELSE_4
0x3a7b	    0x488b05000000	            mov rax, qword [0x04003ac2] 	      1999	move.c	FUNCTION_45	ELSE_4
0x3a82	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1999	move.c	FUNCTION_45	ELSE_4
0x3a88	          0x8945e8	             mov dword [rbp - 0x18], eax	      1999	move.c	FUNCTION_45	ELSE_4
0x3a8b	    0x488b05000000	            mov rax, qword [0x04003ad2] 	      2001	move.c	FUNCTION_45	ELSE_4
0x3a92	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2001	move.c	FUNCTION_45	ELSE_4
0x3a96	        0x4883e801	                              sub rax, 1	      2001	move.c	FUNCTION_45	ELSE_4
0x3a9a	        0x488945e0	             mov qword [rbp - 0x20], rax	      2001	move.c	FUNCTION_45	ELSE_4
0x3a9e	    0xc74598000000	               mov dword [rbp - 0x68], 0	      2002	move.c	FUNCTION_45	ELSE_4	FOR_2
0x3aa5	            0xeb17	                           jmp 0x4003afe	      2002	move.c	FUNCTION_45	ELSE_4	FOR_2
0x3aa7	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2004	move.c	FUNCTION_45	ELSE_4	FOR_2	CALL_10
0x3aab	          0x4889c7	                            mov rdi, rax	      2004	move.c	FUNCTION_45	ELSE_4	FOR_2	CALL_10
0x3aae	      0xe85af4ffff	                   call sym.botline_forw	      2004	move.c	FUNCTION_45	ELSE_4	FOR_2	CALL_10
0x3ab3	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2005	move.c	FUNCTION_45	ELSE_4	FOR_2
0x3ab6	           0x14598	             add dword [rbp - 0x68], eax	      2005	move.c	FUNCTION_45	ELSE_4	FOR_2
0x3ab9	      0x488345a801	               add qword [rbp - 0x58], 1	      2006	move.c	FUNCTION_45	ELSE_4	FOR_2
0x3abe	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2002	move.c	FUNCTION_45	ELSE_4	FOR_2
0x3ac1	          0x3b4590	             cmp eax, dword [rbp - 0x70]	      2002	move.c	FUNCTION_45	ELSE_4	FOR_2
0x3ac4	            0x7d17	                           jge 0x4003b1d	      2002	move.c	FUNCTION_45	ELSE_4	FOR_2
0x3ac6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2002	move.c	FUNCTION_45	ELSE_4	FOR_2
0x3aca	    0x488b05000000	            mov rax, qword [0x04003b11] 	      2002	move.c	FUNCTION_45	ELSE_4	FOR_2
0x3ad1	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      2002	move.c	FUNCTION_45	ELSE_4	FOR_2
0x3ad8	          0x4839c2	                            cmp rdx, rax	      2002	move.c	FUNCTION_45	ELSE_4	FOR_2
0x3adb	            0x7cca	                            jl 0x4003ae7	      2002	move.c	FUNCTION_45	ELSE_4	FOR_2
0x3add	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2008	move.c	FUNCTION_45	ELSE_4	IF_19
0x3ae0	          0x3b4590	             cmp eax, dword [rbp - 0x70]	      2008	move.c	FUNCTION_45	ELSE_4	IF_19
0x3ae3	            0x7d08	                           jge 0x4003b2d	      2008	move.c	FUNCTION_45	ELSE_4	IF_19
0x3ae5	    0x48c745a80f27	          mov qword [rbp - 0x58], 0x270f	      2009	move.c	FUNCTION_45	ELSE_4	IF_19
0x3aed	    0x488b05000000	            mov rax, qword [0x04003b34] 	      2016	move.c	FUNCTION_45	IF_20
0x3af4	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2016	move.c	FUNCTION_45	IF_20
0x3afa	            0x4898	                                    cdqe	      2016	move.c	FUNCTION_45	IF_20
0x3afc	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      2016	move.c	FUNCTION_45	IF_20
0x3b00	            0x7f1a	                            jg 0x4003b5c	      2016	move.c	FUNCTION_45	IF_20
0x3b02	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      2016	move.c	FUNCTION_45	IF_20
0x3b08	            0x4898	                                    cdqe	      2016	move.c	FUNCTION_45	IF_20
0x3b0a	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      2016	move.c	FUNCTION_45	IF_20
0x3b0e	            0x7d0c	                           jge 0x4003b5c	      2016	move.c	FUNCTION_45	IF_20
0x3b10	      0xbf00000000	                              mov edi, 0	      2017	move.c	FUNCTION_45	CALL_11
0x3b15	      0xe800000000	                          call 0x4003b5a	      2017	move.c	FUNCTION_45	CALL_11
0x3b1a	            0xeb11	                           jmp 0x4003b6d	      2017	move.c	FUNCTION_45	CALL_11
0x3b1c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2019	move.c	FUNCTION_45	CALL_12
0x3b20	      0xbe01000000	                              mov esi, 1	      2019	move.c	FUNCTION_45	CALL_12
0x3b25	          0x4889c7	                            mov rdi, rax	      2019	move.c	FUNCTION_45	CALL_12
0x3b28	      0xe800000000	                          call 0x4003b6d	      2019	move.c	FUNCTION_45	CALL_12
0x3b2d	    0x488b05000000	            mov rax, qword [0x04003b74] 	      2026	move.c	FUNCTION_45	IF_21
0x3b34	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2026	move.c	FUNCTION_45	IF_21
0x3b38	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      2026	move.c	FUNCTION_45	IF_21
0x3b3c	            0x753c	                           jne 0x4003bba	      2026	move.c	FUNCTION_45	IF_21
0x3b3e	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      2026	move.c	FUNCTION_45	IF_21
0x3b45	            0x7433	                            je 0x4003bba	      2026	move.c	FUNCTION_45	IF_21
0x3b47	    0x488b05000000	            mov rax, qword [0x04003b8e] 	      2028	move.c	FUNCTION_45	IF_21
0x3b4e	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2028	move.c	FUNCTION_45	IF_21
0x3b52	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      2028	move.c	FUNCTION_45	IF_21
0x3b59	    0x488b05000000	            mov rax, qword [0x04003ba0] 	      2029	move.c	FUNCTION_45	IF_21
0x3b60	          0x8b55a0	             mov edx, dword [rbp - 0x60]	      2029	move.c	FUNCTION_45	IF_21
0x3b63	    0x8990f0000000	             mov dword [rax + 0xf0], edx	      2029	move.c	FUNCTION_45	IF_21
0x3b69	    0x488b05000000	            mov rax, qword [0x04003bb0] 	      2030	move.c	FUNCTION_45	IF_21
0x3b70	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      2030	move.c	FUNCTION_45	IF_21
0x3b74	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2030	move.c	FUNCTION_45	IF_21
0x3b7a	    0x488b05000000	            mov rax, qword [0x04003bc1] 	      2032	move.c	FUNCTION_45
0x3b81	    0x488b15000000	            mov rdx, qword [0x04003bc8] 	      2032	move.c	FUNCTION_45
0x3b88	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2032	move.c	FUNCTION_45
0x3b8e	          0x80ca80	                             or dl, 0x80	      2032	move.c	FUNCTION_45
0x3b91	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2032	move.c	FUNCTION_45
0x3b97	              0x90	                                     nop	      2033	move.c	FUNCTION_45
0x3b98	        0x488b45f8	                mov rax, qword [rbp - 8]	      2033	move.c	FUNCTION_45
0x3b9c	    0x644833042528	                xor rax, qword fs:[0x28]	      2033	move.c	FUNCTION_45
0x3ba5	            0x7405	                            je 0x4003bec	      2033	move.c	FUNCTION_45
0x3ba7	      0xe800000000	                          call 0x4003bec	      2033	move.c	FUNCTION_45
0x3bac	              0xc9	                                   leave	      2033	move.c	FUNCTION_45
0x3bad	              0xc3	                                     ret	      2033	move.c	FUNCTION_45
